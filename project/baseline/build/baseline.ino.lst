
/home/happik/.cache/arduino/sketches/6FEA8C1578FFDE30A500D7DB9735B8EA/baseline.ino.elf:     file format elf32-littlearm


Disassembly of section .text.code:

60001400 <memory_copy>:
	if (dest == src) return;
	do {
		*dest++ = *src++;
	} while (dest < dest_end);
#else
	asm volatile(
60001400:	4281      	cmp	r1, r0
60001402:	d005      	beq.n	60001410 <memory_copy+0x10>
60001404:	f851 3b04 	ldr.w	r3, [r1], #4
60001408:	f840 3b04 	str.w	r3, [r0], #4
6000140c:	4282      	cmp	r2, r0
6000140e:	d8f9      	bhi.n	60001404 <memory_copy+0x4>
	"	cmp	%[end], %[dest]		\n"
	"	bhi.n	1b			\n"
	"2:					\n"
	: [dest] "+r" (dest), [src] "+r" (src) : [end] "r" (dest_end) : "r3", "memory");
#endif
}
60001410:	4770      	bx	lr
60001412:	bf00      	nop

60001414 <memory_clear.constprop.0>:
#if 0
	while (dest < dest_end) {
		*dest++ = 0;
	}
#else
	asm volatile(
60001414:	4a04      	ldr	r2, [pc, #16]	; (60001428 <memory_clear.constprop.0+0x14>)
60001416:	4905      	ldr	r1, [pc, #20]	; (6000142c <memory_clear.constprop.0+0x18>)
60001418:	f04f 0300 	mov.w	r3, #0
6000141c:	f842 3b04 	str.w	r3, [r2], #4
60001420:	4291      	cmp	r1, r2
60001422:	d8fb      	bhi.n	6000141c <memory_clear.constprop.0+0x8>
	"1:	str.w	r3, [%[dest]], #4	\n"
	"	cmp	%[end], %[dest]		\n"
	"	bhi.n	1b			\n"
	: [dest] "+r" (dest) : [end] "r" (dest_end) : "r3", "memory");
#endif
}
60001424:	4770      	bx	lr
60001426:	bf00      	nop
60001428:	20002ac0 	.word	0x20002ac0
6000142c:	200030e0 	.word	0x200030e0

60001430 <ResetHandler2>:
{
60001430:	e92d 4888 	stmdb	sp!, {r3, r7, fp, lr}
	__asm__ volatile("dsb":::"memory");
60001434:	f3bf 8f4f 	dsb	sy
	asm volatile("nop");
60001438:	bf00      	nop
	asm volatile("nop");
6000143a:	bf00      	nop
	asm volatile("nop");
6000143c:	bf00      	nop
	asm volatile("nop");
6000143e:	bf00      	nop
	startup_early_hook(); // must be in FLASHMEM, as ITCM is not yet initialized!
60001440:	f000 f918 	bl	60001674 <startup_default_early_hook>
	PMU_MISC0_SET = 1<<3; //Use bandgap-based bias currents for best performance (Page 1175)
60001444:	4b68      	ldr	r3, [pc, #416]	; (600015e8 <ResetHandler2+0x1b8>)
60001446:	2208      	movs	r2, #8
60001448:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
	asm volatile("nop");
6000144c:	bf00      	nop
	asm volatile("nop");
6000144e:	bf00      	nop
	asm volatile("nop");
60001450:	bf00      	nop
	asm volatile("nop");
60001452:	bf00      	nop
	asm volatile("nop");
60001454:	bf00      	nop
	asm volatile("nop");
60001456:	bf00      	nop
	asm volatile("nop");
60001458:	bf00      	nop
	asm volatile("nop");
6000145a:	bf00      	nop
	asm volatile("nop");
6000145c:	bf00      	nop
	asm volatile("nop");
6000145e:	bf00      	nop
	asm volatile("nop");
60001460:	bf00      	nop
	asm volatile("nop");
60001462:	bf00      	nop
	asm volatile("nop");
60001464:	bf00      	nop
	asm volatile("nop");
60001466:	bf00      	nop
	asm volatile("nop");
60001468:	bf00      	nop
	asm volatile("nop");
6000146a:	bf00      	nop
	memory_copy(&_stext, &_stextload, &_etext);
6000146c:	4a5f      	ldr	r2, [pc, #380]	; (600015ec <ResetHandler2+0x1bc>)
6000146e:	4960      	ldr	r1, [pc, #384]	; (600015f0 <ResetHandler2+0x1c0>)
60001470:	4860      	ldr	r0, [pc, #384]	; (600015f4 <ResetHandler2+0x1c4>)
60001472:	f7ff ffc5 	bl	60001400 <memory_copy>
	memory_copy(&_sdata, &_sdataload, &_edata);
60001476:	4a60      	ldr	r2, [pc, #384]	; (600015f8 <ResetHandler2+0x1c8>)
60001478:	4960      	ldr	r1, [pc, #384]	; (600015fc <ResetHandler2+0x1cc>)
6000147a:	4861      	ldr	r0, [pc, #388]	; (60001600 <ResetHandler2+0x1d0>)
6000147c:	f7ff ffc0 	bl	60001400 <memory_copy>
	memory_clear(&_sbss, &_ebss);
60001480:	4c60      	ldr	r4, [pc, #384]	; (60001604 <ResetHandler2+0x1d4>)
60001482:	f7ff ffc7 	bl	60001414 <memory_clear.constprop.0>
	SCB_CPACR = 0x00F00000;
60001486:	f44f 0070 	mov.w	r0, #15728640	; 0xf00000
6000148a:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
	for (i=0; i < NVIC_NUM_INTERRUPTS + 16; i++) _VectorsRam[i] = &unused_interrupt_vector;
6000148e:	2300      	movs	r3, #0
60001490:	4a5d      	ldr	r2, [pc, #372]	; (60001608 <ResetHandler2+0x1d8>)
	SCB_CPACR = 0x00F00000;
60001492:	f8c1 0d88 	str.w	r0, [r1, #3464]	; 0xd88
	for (i=0; i < NVIC_NUM_INTERRUPTS + 16; i++) _VectorsRam[i] = &unused_interrupt_vector;
60001496:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
6000149a:	3301      	adds	r3, #1
6000149c:	2bb0      	cmp	r3, #176	; 0xb0
6000149e:	d1fa      	bne.n	60001496 <ResetHandler2+0x66>
600014a0:	4b5a      	ldr	r3, [pc, #360]	; (6000160c <ResetHandler2+0x1dc>)
	for (i=0; i < NVIC_NUM_INTERRUPTS; i++) NVIC_SET_PRIORITY(i, 128);
600014a2:	2180      	movs	r1, #128	; 0x80
600014a4:	4a5a      	ldr	r2, [pc, #360]	; (60001610 <ResetHandler2+0x1e0>)
600014a6:	f803 1b01 	strb.w	r1, [r3], #1
600014aa:	4293      	cmp	r3, r2
600014ac:	d1fb      	bne.n	600014a6 <ResetHandler2+0x76>
	SCB_VTOR = (uint32_t)_VectorsRam;
600014ae:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
	CCM_ANALOG_PFD_528_SET = (1 << 31) | (1 << 23) | (1 << 15) | (1 << 7);
600014b2:	4e4d      	ldr	r6, [pc, #308]	; (600015e8 <ResetHandler2+0x1b8>)
600014b4:	f04f 3980 	mov.w	r9, #2155905152	; 0x80808080
	CCM_ANALOG_PFD_528 = 0x2018101B; // PFD0:352, PFD1:594, PFD2:396, PFD3:297 MHz 	
600014b8:	f8df b184 	ldr.w	fp, [pc, #388]	; 60001640 <ResetHandler2+0x210>
	CCM_ANALOG_PFD_480 = 0x13110D0C; // PFD0:720, PFD1:664, PFD2:508, PFD3:454 MHz
600014bc:	f8df a184 	ldr.w	sl, [pc, #388]	; 60001644 <ResetHandler2+0x214>
	IOMUXC_GPR_GPR26 = 0xFFFFFFFF;
600014c0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
	SCB_VTOR = (uint32_t)_VectorsRam;
600014c4:	f8c5 4d08 	str.w	r4, [r5, #3336]	; 0xd08
	SYST_CVR = 0;
600014c8:	2700      	movs	r7, #0
	CCM_ANALOG_PFD_528_SET = (1 << 31) | (1 << 23) | (1 << 15) | (1 << 7);
600014ca:	f8c6 9104 	str.w	r9, [r6, #260]	; 0x104
	CCM_ANALOG_PFD_528 = 0x2018101B; // PFD0:352, PFD1:594, PFD2:396, PFD3:297 MHz 	
600014ce:	f8c6 b100 	str.w	fp, [r6, #256]	; 0x100
	CCM_ANALOG_PFD_480_SET = (1 << 31) | (1 << 23) | (1 << 15) | (1 << 7);	
600014d2:	f8c6 90f4 	str.w	r9, [r6, #244]	; 0xf4
	CCM_ANALOG_PFD_480 = 0x13110D0C; // PFD0:720, PFD1:664, PFD2:508, PFD3:454 MHz
600014d6:	f8c6 a0f0 	str.w	sl, [r6, #240]	; 0xf0
	SCB_SHCSR |= SCB_SHCSR_MEMFAULTENA | SCB_SHCSR_BUSFAULTENA | SCB_SHCSR_USGFAULTENA;
600014da:	f8d5 3d24 	ldr.w	r3, [r5, #3364]	; 0xd24
	CCM_CSCMR1 = (CCM_CSCMR1 & ~CCM_CSCMR1_PERCLK_PODF(0x3F)) | CCM_CSCMR1_PERCLK_CLK_SEL;
600014de:	f8df 8168 	ldr.w	r8, [pc, #360]	; 60001648 <ResetHandler2+0x218>
	SCB_SHCSR |= SCB_SHCSR_MEMFAULTENA | SCB_SHCSR_BUSFAULTENA | SCB_SHCSR_USGFAULTENA;
600014e2:	f443 23e0 	orr.w	r3, r3, #458752	; 0x70000
	IOMUXC_GPR_GPR26 = 0xFFFFFFFF;
600014e6:	4a4b      	ldr	r2, [pc, #300]	; (60001614 <ResetHandler2+0x1e4>)
	SCB_SHCSR |= SCB_SHCSR_MEMFAULTENA | SCB_SHCSR_BUSFAULTENA | SCB_SHCSR_USGFAULTENA;
600014e8:	f8c5 3d24 	str.w	r3, [r5, #3364]	; 0xd24
	CCM_CSCMR1 = (CCM_CSCMR1 & ~CCM_CSCMR1_PERCLK_PODF(0x3F)) | CCM_CSCMR1_PERCLK_CLK_SEL;
600014ec:	f8d8 301c 	ldr.w	r3, [r8, #28]
600014f0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
600014f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
600014f8:	f8c8 301c 	str.w	r3, [r8, #28]
	CCM_CSCDR1 = (CCM_CSCDR1 & ~CCM_CSCDR1_UART_CLK_PODF(0x3F)) | CCM_CSCDR1_UART_CLK_SEL;
600014fc:	f8d8 3024 	ldr.w	r3, [r8, #36]	; 0x24
60001500:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
60001504:	f043 0340 	orr.w	r3, r3, #64	; 0x40
60001508:	f8c8 3024 	str.w	r3, [r8, #36]	; 0x24
	IOMUXC_GPR_GPR26 = 0xFFFFFFFF;
6000150c:	6691      	str	r1, [r2, #104]	; 0x68
	IOMUXC_GPR_GPR27 = 0xFFFFFFFF;
6000150e:	66d1      	str	r1, [r2, #108]	; 0x6c
	IOMUXC_GPR_GPR28 = 0xFFFFFFFF;
60001510:	6711      	str	r1, [r2, #112]	; 0x70
	IOMUXC_GPR_GPR29 = 0xFFFFFFFF;
60001512:	6751      	str	r1, [r2, #116]	; 0x74
	configure_cache();
60001514:	f000 f8b6 	bl	60001684 <configure_cache>
	_VectorsRam[14] = pendablesrvreq_isr;
60001518:	4b3f      	ldr	r3, [pc, #252]	; (60001618 <ResetHandler2+0x1e8>)
	systick_cycle_count = ARM_DWT_CYCCNT; // compiled 0, corrected w/1st systick
6000151a:	4940      	ldr	r1, [pc, #256]	; (6000161c <ResetHandler2+0x1ec>)
	_VectorsRam[14] = pendablesrvreq_isr;
6000151c:	63a3      	str	r3, [r4, #56]	; 0x38
	_VectorsRam[15] = systick_isr;
6000151e:	4b40      	ldr	r3, [pc, #256]	; (60001620 <ResetHandler2+0x1f0>)
60001520:	63e3      	str	r3, [r4, #60]	; 0x3c
	SYST_RVR = (SYSTICK_EXT_FREQ / 1000) - 1;
60001522:	2363      	movs	r3, #99	; 0x63
60001524:	616b      	str	r3, [r5, #20]
	SYST_CSR = SYST_CSR_TICKINT | SYST_CSR_ENABLE;
60001526:	2303      	movs	r3, #3
	SYST_CVR = 0;
60001528:	61af      	str	r7, [r5, #24]
	SYST_CSR = SYST_CSR_TICKINT | SYST_CSR_ENABLE;
6000152a:	612b      	str	r3, [r5, #16]
	SCB_SHPR3 = 0x20200000;  // Systick, pendablesrvreq_isr = priority 32;
6000152c:	4b3d      	ldr	r3, [pc, #244]	; (60001624 <ResetHandler2+0x1f4>)
6000152e:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	ARM_DEMCR |= ARM_DEMCR_TRCENA;
60001532:	f8d5 3dfc 	ldr.w	r3, [r5, #3580]	; 0xdfc
60001536:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
6000153a:	f8c5 3dfc 	str.w	r3, [r5, #3580]	; 0xdfc
	ARM_DWT_CTRL |= ARM_DWT_CTRL_CYCCNTENA; // turn on cycle counter
6000153e:	4b3a      	ldr	r3, [pc, #232]	; (60001628 <ResetHandler2+0x1f8>)
60001540:	681a      	ldr	r2, [r3, #0]
60001542:	f042 0201 	orr.w	r2, r2, #1
60001546:	601a      	str	r2, [r3, #0]
	systick_cycle_count = ARM_DWT_CYCCNT; // compiled 0, corrected w/1st systick
60001548:	685b      	ldr	r3, [r3, #4]
6000154a:	600b      	str	r3, [r1, #0]
	usb_pll_start();	
6000154c:	f000 fae4 	bl	60001b18 <usb_pll_start>
	CCM_ANALOG_PFD_528_SET = (1 << 31) | (1 << 23) | (1 << 15) | (1 << 7);
60001550:	f8c6 9104 	str.w	r9, [r6, #260]	; 0x104
	set_arm_clock(F_CPU);
60001554:	4835      	ldr	r0, [pc, #212]	; (6000162c <ResetHandler2+0x1fc>)
	CCM_ANALOG_PFD_528 = 0x2018101B; // PFD0:352, PFD1:594, PFD2:396, PFD3:297 MHz 	
60001556:	f8c6 b100 	str.w	fp, [r6, #256]	; 0x100
	CCM_ANALOG_PFD_480_SET = (1 << 31) | (1 << 23) | (1 << 15) | (1 << 7);	
6000155a:	f8c6 90f4 	str.w	r9, [r6, #244]	; 0xf4
	CCM_ANALOG_PFD_480 = 0x13110D0C; // PFD0:720, PFD1:664, PFD2:508, PFD3:454 MHz
6000155e:	f8c6 a0f0 	str.w	sl, [r6, #240]	; 0xf0
	set_arm_clock(F_CPU);
60001562:	f000 fc7d 	bl	60001e60 <__set_arm_clock_veneer>
	CCM_CCGR1 |= CCM_CCGR1_PIT(CCM_CCGR_ON);
60001566:	f8d8 106c 	ldr.w	r1, [r8, #108]	; 0x6c
	PIT_MCR = 0;
6000156a:	4b31      	ldr	r3, [pc, #196]	; (60001630 <ResetHandler2+0x200>)
	if (!(SNVS_LPCR & SNVS_LPCR_SRTC_ENV)) {
6000156c:	4a31      	ldr	r2, [pc, #196]	; (60001634 <ResetHandler2+0x204>)
	CCM_CCGR1 |= CCM_CCGR1_PIT(CCM_CCGR_ON);
6000156e:	f441 5140 	orr.w	r1, r1, #12288	; 0x3000
60001572:	f8c8 106c 	str.w	r1, [r8, #108]	; 0x6c
	PIT_MCR = 0;
60001576:	601f      	str	r7, [r3, #0]
	PIT_TCTRL0 = 0;
60001578:	f8c3 7108 	str.w	r7, [r3, #264]	; 0x108
	PIT_TCTRL1 = 0;
6000157c:	f8c3 7118 	str.w	r7, [r3, #280]	; 0x118
	PIT_TCTRL2 = 0;
60001580:	f8c3 7128 	str.w	r7, [r3, #296]	; 0x128
	PIT_TCTRL3 = 0;
60001584:	f8c3 7138 	str.w	r7, [r3, #312]	; 0x138
	if (!(SNVS_LPCR & SNVS_LPCR_SRTC_ENV)) {
60001588:	6b93      	ldr	r3, [r2, #56]	; 0x38
6000158a:	07db      	lsls	r3, r3, #31
6000158c:	d408      	bmi.n	600015a0 <ResetHandler2+0x170>
		SNVS_LPSRTCMR = 1546300800u >> 17;
6000158e:	f642 6315 	movw	r3, #11797	; 0x2e15
		SNVS_LPSRTCLR = 1546300800u << 15;
60001592:	4929      	ldr	r1, [pc, #164]	; (60001638 <ResetHandler2+0x208>)
60001594:	6551      	str	r1, [r2, #84]	; 0x54
		SNVS_LPSRTCMR = 1546300800u >> 17;
60001596:	6513      	str	r3, [r2, #80]	; 0x50
		SNVS_LPCR |= SNVS_LPCR_SRTC_ENV;
60001598:	6b93      	ldr	r3, [r2, #56]	; 0x38
6000159a:	f043 0301 	orr.w	r3, r3, #1
6000159e:	6393      	str	r3, [r2, #56]	; 0x38
	SNVS_HPCR |= SNVS_HPCR_RTC_EN | SNVS_HPCR_HP_TS;
600015a0:	4a24      	ldr	r2, [pc, #144]	; (60001634 <ResetHandler2+0x204>)
600015a2:	4c26      	ldr	r4, [pc, #152]	; (6000163c <ResetHandler2+0x20c>)
600015a4:	6893      	ldr	r3, [r2, #8]
600015a6:	f043 1301 	orr.w	r3, r3, #65537	; 0x10001
600015aa:	6093      	str	r3, [r2, #8]
	configure_external_ram();
600015ac:	f000 f8f2 	bl	60001794 <configure_external_ram>
	analog_init();
600015b0:	f000 fc16 	bl	60001de0 <analog_init>
	pwm_init();
600015b4:	f000 fc48 	bl	60001e48 <__pwm_init_veneer>
	tempmon_init();
600015b8:	f000 fadc 	bl	60001b74 <tempmon_init>
	startup_middle_hook();
600015bc:	f000 f85c 	bl	60001678 <startup_default_middle_hook>
// Returns the number of milliseconds since your program started running.
// This 32 bit number will roll back to zero after about 49.7 days.  For a
// simpler way to build delays or timeouts, consider using elapsedMillis.
static inline uint32_t millis(void)
{
	return systick_millis_count;
600015c0:	6823      	ldr	r3, [r4, #0]
	while (millis() < TEENSY_INIT_USB_DELAY_BEFORE) ; // wait
600015c2:	2b13      	cmp	r3, #19
600015c4:	d9fc      	bls.n	600015c0 <ResetHandler2+0x190>
	usb_init();
600015c6:	f000 fb6d 	bl	60001ca4 <usb_init>
600015ca:	6823      	ldr	r3, [r4, #0]
	while (millis() < TEENSY_INIT_USB_DELAY_AFTER + TEENSY_INIT_USB_DELAY_BEFORE) ; // wait
600015cc:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
600015d0:	d3fb      	bcc.n	600015ca <ResetHandler2+0x19a>
	startup_debug_reset();
600015d2:	f000 f855 	bl	60001680 <startup_debug_reset>
	startup_late_hook();
600015d6:	f000 f851 	bl	6000167c <startup_default_late_hook>
	__libc_init_array();
600015da:	f000 fc3d 	bl	60001e58 <____libc_init_array_veneer>
	main();
600015de:	f000 fc43 	bl	60001e68 <__main_veneer>
	while (1) asm("WFI");
600015e2:	bf30      	wfi
600015e4:	e7fd      	b.n	600015e2 <ResetHandler2+0x1b2>
600015e6:	bf00      	nop
600015e8:	400d8000 	.word	0x400d8000
600015ec:	00010f48 	.word	0x00010f48
600015f0:	60001f94 	.word	0x60001f94
600015f4:	00000000 	.word	0x00000000
600015f8:	20002ac0 	.word	0x20002ac0
600015fc:	60012ee0 	.word	0x60012ee0
60001600:	20000000 	.word	0x20000000
60001604:	20002800 	.word	0x20002800
60001608:	000007c9 	.word	0x000007c9
6000160c:	e000e400 	.word	0xe000e400
60001610:	e000e4a0 	.word	0xe000e4a0
60001614:	400ac000 	.word	0x400ac000
60001618:	00001bf1 	.word	0x00001bf1
6000161c:	20003088 	.word	0x20003088
60001620:	00001bf5 	.word	0x00001bf5
60001624:	20200000 	.word	0x20200000
60001628:	e0001000 	.word	0xe0001000
6000162c:	23c34600 	.word	0x23c34600
60001630:	40084000 	.word	0x40084000
60001634:	400d4000 	.word	0x400d4000
60001638:	56c00000 	.word	0x56c00000
6000163c:	2000308c 	.word	0x2000308c
60001640:	2018101b 	.word	0x2018101b
60001644:	13110d0c 	.word	0x13110d0c
60001648:	400fc000 	.word	0x400fc000

6000164c <ResetHandler>:
	IOMUXC_GPR_GPR17 = (uint32_t)&_flexram_bank_config;
6000164c:	4b05      	ldr	r3, [pc, #20]	; (60001664 <ResetHandler+0x18>)
	IOMUXC_GPR_GPR14 = 0x00AA0000;
6000164e:	f44f 012a 	mov.w	r1, #11141120	; 0xaa0000
	IOMUXC_GPR_GPR17 = (uint32_t)&_flexram_bank_config;
60001652:	4a05      	ldr	r2, [pc, #20]	; (60001668 <ResetHandler+0x1c>)
	IOMUXC_GPR_GPR16 = 0x00200007;
60001654:	4805      	ldr	r0, [pc, #20]	; (6000166c <ResetHandler+0x20>)
	IOMUXC_GPR_GPR17 = (uint32_t)&_flexram_bank_config;
60001656:	645a      	str	r2, [r3, #68]	; 0x44
	IOMUXC_GPR_GPR16 = 0x00200007;
60001658:	6418      	str	r0, [r3, #64]	; 0x40
	__asm__ volatile("mov sp, %0" : : "r" ((uint32_t)&_estack) : "memory");
6000165a:	4a05      	ldr	r2, [pc, #20]	; (60001670 <ResetHandler+0x24>)
	IOMUXC_GPR_GPR14 = 0x00AA0000;
6000165c:	6399      	str	r1, [r3, #56]	; 0x38
	__asm__ volatile("mov sp, %0" : : "r" ((uint32_t)&_estack) : "memory");
6000165e:	4695      	mov	sp, r2
	ResetHandler2();
60001660:	f7ff fee6 	bl	60001430 <ResetHandler2>
60001664:	400ac000 	.word	0x400ac000
60001668:	aaaaaabf 	.word	0xaaaaaabf
6000166c:	00200007 	.word	0x00200007
60001670:	20068000 	.word	0x20068000

60001674 <startup_default_early_hook>:
FLASHMEM void startup_default_early_hook(void) {}
60001674:	4770      	bx	lr
60001676:	bf00      	nop

60001678 <startup_default_middle_hook>:
60001678:	4770      	bx	lr
6000167a:	bf00      	nop

6000167c <startup_default_late_hook>:
6000167c:	4770      	bx	lr
6000167e:	bf00      	nop

60001680 <startup_debug_reset>:
FLASHMEM void startup_debug_reset(void) { __asm__ volatile("nop"); }
60001680:	bf00      	nop
60001682:	4770      	bx	lr

60001684 <configure_cache>:
{
60001684:	b410      	push	{r4}
	SCB_MPU_CTRL = 0; // turn off MPU
60001686:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
6000168a:	2100      	movs	r1, #0
	SCB_MPU_RBAR = 0x00000000 | REGION(i++); //https://developer.arm.com/docs/146793866/10/why-does-the-cortex-m7-initiate-axim-read-accesses-to-memory-addresses-that-do-not-fall-under-a-defined-mpu-region
6000168c:	2410      	movs	r4, #16
	SCB_MPU_RASR = SCB_MPU_RASR_TEX(0) | NOACCESS | NOEXEC | SIZE_4G;
6000168e:	4831      	ldr	r0, [pc, #196]	; (60001754 <configure_cache+0xd0>)
	SCB_MPU_CTRL = 0; // turn off MPU
60001690:	f8c3 1d94 	str.w	r1, [r3, #3476]	; 0xd94
	SCB_MPU_RBAR = 0x00000000 | REGION(i++); //https://developer.arm.com/docs/146793866/10/why-does-the-cortex-m7-initiate-axim-read-accesses-to-memory-addresses-that-do-not-fall-under-a-defined-mpu-region
60001694:	f8c3 4d9c 	str.w	r4, [r3, #3484]	; 0xd9c
	SCB_MPU_RBAR = 0x00000000 | REGION(i++); // ITCM
60001698:	2411      	movs	r4, #17
	SCB_MPU_RASR = SCB_MPU_RASR_TEX(0) | NOACCESS | NOEXEC | SIZE_4G;
6000169a:	f8c3 0da0 	str.w	r0, [r3, #3488]	; 0xda0
	SCB_MPU_RASR = MEM_NOCACHE | READONLY | SIZE_512K;
6000169e:	482e      	ldr	r0, [pc, #184]	; (60001758 <configure_cache+0xd4>)
	SCB_MPU_RBAR = 0x00000000 | REGION(i++); // ITCM
600016a0:	f8c3 4d9c 	str.w	r4, [r3, #3484]	; 0xd9c
	SCB_MPU_RBAR = 0x00000000 | REGION(i++); // trap NULL pointer deref
600016a4:	2412      	movs	r4, #18
	SCB_MPU_RASR = MEM_NOCACHE | READONLY | SIZE_512K;
600016a6:	f8c3 0da0 	str.w	r0, [r3, #3488]	; 0xda0
	SCB_MPU_RASR =  DEV_NOCACHE | NOACCESS | SIZE_32B;
600016aa:	482c      	ldr	r0, [pc, #176]	; (6000175c <configure_cache+0xd8>)
	SCB_MPU_RBAR = 0x00000000 | REGION(i++); // trap NULL pointer deref
600016ac:	f8c3 4d9c 	str.w	r4, [r3, #3484]	; 0xd9c
	SCB_MPU_RBAR = ((uint32_t)&_ebss) | REGION(i++); // trap stack overflow
600016b0:	4a2b      	ldr	r2, [pc, #172]	; (60001760 <configure_cache+0xdc>)
	SCB_MPU_RASR =  DEV_NOCACHE | NOACCESS | SIZE_32B;
600016b2:	f8c3 0da0 	str.w	r0, [r3, #3488]	; 0xda0
	SCB_MPU_RBAR = 0x00200000 | REGION(i++); // Boot ROM
600016b6:	4c2b      	ldr	r4, [pc, #172]	; (60001764 <configure_cache+0xe0>)
	SCB_MPU_RBAR = ((uint32_t)&_ebss) | REGION(i++); // trap stack overflow
600016b8:	f042 0215 	orr.w	r2, r2, #21
	SCB_MPU_RASR = MEM_CACHE_WT | READONLY | SIZE_128K;
600016bc:	482a      	ldr	r0, [pc, #168]	; (60001768 <configure_cache+0xe4>)
	SCB_MPU_RBAR = 0x00200000 | REGION(i++); // Boot ROM
600016be:	f8c3 4d9c 	str.w	r4, [r3, #3484]	; 0xd9c
	SCB_MPU_RASR = MEM_CACHE_WT | READONLY | SIZE_128K;
600016c2:	f8c3 0da0 	str.w	r0, [r3, #3488]	; 0xda0
	SCB_MPU_RBAR = 0x20000000 | REGION(i++); // DTCM
600016c6:	4c29      	ldr	r4, [pc, #164]	; (6000176c <configure_cache+0xe8>)
	SCB_MPU_RASR = MEM_NOCACHE | READWRITE | NOEXEC | SIZE_512K;
600016c8:	4829      	ldr	r0, [pc, #164]	; (60001770 <configure_cache+0xec>)
	SCB_MPU_RBAR = 0x20000000 | REGION(i++); // DTCM
600016ca:	f8c3 4d9c 	str.w	r4, [r3, #3484]	; 0xd9c
	SCB_MPU_RASR = MEM_NOCACHE | READWRITE | NOEXEC | SIZE_512K;
600016ce:	f8c3 0da0 	str.w	r0, [r3, #3488]	; 0xda0
	SCB_MPU_RASR = SCB_MPU_RASR_TEX(0) | NOACCESS | NOEXEC | SIZE_32B;
600016d2:	4c28      	ldr	r4, [pc, #160]	; (60001774 <configure_cache+0xf0>)
	SCB_MPU_RBAR = ((uint32_t)&_ebss) | REGION(i++); // trap stack overflow
600016d4:	f8c3 2d9c 	str.w	r2, [r3, #3484]	; 0xd9c
	SCB_MPU_RBAR = 0x20200000 | REGION(i++); // RAM (AXI bus)
600016d8:	4827      	ldr	r0, [pc, #156]	; (60001778 <configure_cache+0xf4>)
	SCB_MPU_RASR = MEM_CACHE_WBWA | READWRITE | NOEXEC | SIZE_1M;
600016da:	4a28      	ldr	r2, [pc, #160]	; (6000177c <configure_cache+0xf8>)
	SCB_MPU_RASR = SCB_MPU_RASR_TEX(0) | NOACCESS | NOEXEC | SIZE_32B;
600016dc:	f8c3 4da0 	str.w	r4, [r3, #3488]	; 0xda0
	SCB_MPU_RBAR = 0x20200000 | REGION(i++); // RAM (AXI bus)
600016e0:	f8c3 0d9c 	str.w	r0, [r3, #3484]	; 0xd9c
	SCB_MPU_RASR = MEM_CACHE_WBWA | READWRITE | NOEXEC | SIZE_1M;
600016e4:	f8c3 2da0 	str.w	r2, [r3, #3488]	; 0xda0
	SCB_MPU_RASR = DEV_NOCACHE | READWRITE | NOEXEC | SIZE_64M;
600016e8:	f502 22a0 	add.w	r2, r2, #327680	; 0x50000
	SCB_MPU_RBAR = 0x40000000 | REGION(i++); // Peripherals
600016ec:	4c24      	ldr	r4, [pc, #144]	; (60001780 <configure_cache+0xfc>)
	SCB_MPU_RASR = DEV_NOCACHE | READWRITE | NOEXEC | SIZE_64M;
600016ee:	320c      	adds	r2, #12
	SCB_MPU_RBAR = 0x60000000 | REGION(i++); // QSPI Flash
600016f0:	4824      	ldr	r0, [pc, #144]	; (60001784 <configure_cache+0x100>)
	SCB_MPU_RBAR = 0x40000000 | REGION(i++); // Peripherals
600016f2:	f8c3 4d9c 	str.w	r4, [r3, #3484]	; 0xd9c
	SCB_MPU_RASR = DEV_NOCACHE | READWRITE | NOEXEC | SIZE_64M;
600016f6:	f8c3 2da0 	str.w	r2, [r3, #3488]	; 0xda0
	SCB_MPU_RASR = MEM_CACHE_WBWA | READONLY | SIZE_16M;
600016fa:	4a23      	ldr	r2, [pc, #140]	; (60001788 <configure_cache+0x104>)
	SCB_MPU_RBAR = 0x60000000 | REGION(i++); // QSPI Flash
600016fc:	f8c3 0d9c 	str.w	r0, [r3, #3484]	; 0xd9c
	SCB_MPU_RBAR = 0x70000000 | REGION(i++); // FlexSPI2
60001700:	4c22      	ldr	r4, [pc, #136]	; (6000178c <configure_cache+0x108>)
	SCB_MPU_RASR = MEM_CACHE_WBWA | READONLY | SIZE_16M;
60001702:	f8c3 2da0 	str.w	r2, [r3, #3488]	; 0xda0
	SCB_MPU_RASR = MEM_CACHE_WBWA | READWRITE | NOEXEC | SIZE_16M;
60001706:	f102 6240 	add.w	r2, r2, #201326592	; 0xc000000
	SCB_MPU_RBAR = 0x70000000 | REGION(i++); // FlexSPI2
6000170a:	f8c3 4d9c 	str.w	r4, [r3, #3484]	; 0xd9c
	SCB_MPU_RBAR = 0x80000000 | REGION(i++); // SEMC: SDRAM, NAND, SRAM, etc
6000170e:	4820      	ldr	r0, [pc, #128]	; (60001790 <configure_cache+0x10c>)
	SCB_MPU_RASR = MEM_CACHE_WBWA | READWRITE | NOEXEC | SIZE_16M;
60001710:	f8c3 2da0 	str.w	r2, [r3, #3488]	; 0xda0
	SCB_MPU_RASR = MEM_CACHE_WBWA | READWRITE | NOEXEC | SIZE_1G;
60001714:	320c      	adds	r2, #12
	SCB_MPU_RBAR = 0x80000000 | REGION(i++); // SEMC: SDRAM, NAND, SRAM, etc
60001716:	f8c3 0d9c 	str.w	r0, [r3, #3484]	; 0xd9c
	SCB_MPU_RASR = MEM_CACHE_WBWA | READWRITE | NOEXEC | SIZE_1G;
6000171a:	f8c3 2da0 	str.w	r2, [r3, #3488]	; 0xda0
	asm("nop"); // allow a few cycles for bus writes before enable MPU
6000171e:	bf00      	nop
	asm("nop");
60001720:	bf00      	nop
	asm("nop");
60001722:	bf00      	nop
	asm("nop");
60001724:	bf00      	nop
	asm("nop");
60001726:	bf00      	nop
	SCB_MPU_CTRL = SCB_MPU_CTRL_ENABLE;
60001728:	2201      	movs	r2, #1
6000172a:	f8c3 2d94 	str.w	r2, [r3, #3476]	; 0xd94
	asm("dsb");
6000172e:	f3bf 8f4f 	dsb	sy
	asm("isb");
60001732:	f3bf 8f6f 	isb	sy
	SCB_CACHE_ICIALLU = 0;
60001736:	f8c3 1f50 	str.w	r1, [r3, #3920]	; 0xf50
	asm("dsb");
6000173a:	f3bf 8f4f 	dsb	sy
	asm("isb");
6000173e:	f3bf 8f6f 	isb	sy
	SCB_CCR |= (SCB_CCR_IC | SCB_CCR_DC);
60001742:	f8d3 2d14 	ldr.w	r2, [r3, #3348]	; 0xd14
}
60001746:	f85d 4b04 	ldr.w	r4, [sp], #4
	SCB_CCR |= (SCB_CCR_IC | SCB_CCR_DC);
6000174a:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
6000174e:	f8c3 2d14 	str.w	r2, [r3, #3348]	; 0xd14
}
60001752:	4770      	bx	lr
60001754:	1000003f 	.word	0x1000003f
60001758:	07080025 	.word	0x07080025
6000175c:	00100009 	.word	0x00100009
60001760:	200030e0 	.word	0x200030e0
60001764:	00200013 	.word	0x00200013
60001768:	07020021 	.word	0x07020021
6000176c:	20000014 	.word	0x20000014
60001770:	13080025 	.word	0x13080025
60001774:	10000009 	.word	0x10000009
60001778:	20200016 	.word	0x20200016
6000177c:	130b0027 	.word	0x130b0027
60001780:	40000017 	.word	0x40000017
60001784:	60000018 	.word	0x60000018
60001788:	070b002f 	.word	0x070b002f
6000178c:	70000019 	.word	0x70000019
60001790:	8000001a 	.word	0x8000001a

60001794 <configure_external_ram>:
{
60001794:	b5f0      	push	{r4, r5, r6, r7, lr}
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_22 = 0x1B0F9; // 100K pullup, strong drive, max speed, hyst
60001796:	4bb8      	ldr	r3, [pc, #736]	; (60001a78 <configure_external_ram+0x2e4>)
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_22 = 8 | 0x10; // ALT1 = FLEXSPI2_A_SS1_B (Flash)
60001798:	2218      	movs	r2, #24
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_22 = 0x1B0F9; // 100K pullup, strong drive, max speed, hyst
6000179a:	4eb8      	ldr	r6, [pc, #736]	; (60001a7c <configure_external_ram+0x2e8>)
	IOMUXC_FLEXSPI2_IPP_IND_DQS_FA_SELECT_INPUT = 1; // GPIO_EMC_23 for Mode: ALT8, pg 986
6000179c:	2001      	movs	r0, #1
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_23 = 0x110F9; // keeper, strong drive, max speed, hyst
6000179e:	4fb8      	ldr	r7, [pc, #736]	; (60001a80 <configure_external_ram+0x2ec>)
{
600017a0:	b083      	sub	sp, #12
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_22 = 0x1B0F9; // 100K pullup, strong drive, max speed, hyst
600017a2:	f8c3 625c 	str.w	r6, [r3, #604]	; 0x25c
	IOMUXC_FLEXSPI2_IPP_IND_DQS_FA_SELECT_INPUT = 1; // GPIO_EMC_23 for Mode: ALT8, pg 986
600017a6:	49b7      	ldr	r1, [pc, #732]	; (60001a84 <configure_external_ram+0x2f0>)
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_23 = 0x110F9; // keeper, strong drive, max speed, hyst
600017a8:	f8c3 7260 	str.w	r7, [r3, #608]	; 0x260
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_26 = 0x170F9; // 47K pullup, strong drive, max speed, hyst
600017ac:	4db6      	ldr	r5, [pc, #728]	; (60001a88 <configure_external_ram+0x2f4>)
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_24 = 0x1B0F9; // 100K pullup, strong drive, max speed, hyst
600017ae:	f8c3 6264 	str.w	r6, [r3, #612]	; 0x264
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_25 = 0x100F9; // strong drive, max speed, hyst
600017b2:	f5a6 4630 	sub.w	r6, r6, #45056	; 0xb000
	CCM_CBCMR = (CCM_CBCMR & ~(CCM_CBCMR_FLEXSPI2_PODF_MASK | CCM_CBCMR_FLEXSPI2_CLK_SEL_MASK))
600017b6:	4cb5      	ldr	r4, [pc, #724]	; (60001a8c <configure_external_ram+0x2f8>)
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_25 = 0x100F9; // strong drive, max speed, hyst
600017b8:	f8c3 6268 	str.w	r6, [r3, #616]	; 0x268
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_26 = 0x170F9; // 47K pullup, strong drive, max speed, hyst
600017bc:	f8c3 526c 	str.w	r5, [r3, #620]	; 0x26c
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_27 = 0x170F9; // 47K pullup, strong drive, max speed, hyst
600017c0:	f8c3 5270 	str.w	r5, [r3, #624]	; 0x270
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_28 = 0x170F9; // 47K pullup, strong drive, max speed, hyst
600017c4:	f8c3 5274 	str.w	r5, [r3, #628]	; 0x274
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_29 = 0x170F9; // 47K pullup, strong drive, max speed, hyst
600017c8:	f8c3 5278 	str.w	r5, [r3, #632]	; 0x278
		| FLEXSPI_MCR0_RXCLKSRC(1) | FLEXSPI_MCR0_MDIS;
600017cc:	f248 750c 	movw	r5, #34572	; 0x870c
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_22 = 8 | 0x10; // ALT1 = FLEXSPI2_A_SS1_B (Flash)
600017d0:	66da      	str	r2, [r3, #108]	; 0x6c
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_23 = 8 | 0x10; // ALT1 = FLEXSPI2_A_DQS
600017d2:	671a      	str	r2, [r3, #112]	; 0x70
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_24 = 8 | 0x10; // ALT1 = FLEXSPI2_A_SS0_B (RAM)
600017d4:	675a      	str	r2, [r3, #116]	; 0x74
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_25 = 8 | 0x10; // ALT1 = FLEXSPI2_A_SCLK
600017d6:	679a      	str	r2, [r3, #120]	; 0x78
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_26 = 8 | 0x10; // ALT1 = FLEXSPI2_A_DATA0
600017d8:	67da      	str	r2, [r3, #124]	; 0x7c
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_27 = 8 | 0x10; // ALT1 = FLEXSPI2_A_DATA1
600017da:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_28 = 8 | 0x10; // ALT1 = FLEXSPI2_A_DATA2
600017de:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_29 = 8 | 0x10; // ALT1 = FLEXSPI2_A_DATA3
600017e2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
	IOMUXC_FLEXSPI2_IPP_IND_DQS_FA_SELECT_INPUT = 1; // GPIO_EMC_23 for Mode: ALT8, pg 986
600017e6:	f8c1 032c 	str.w	r0, [r1, #812]	; 0x32c
	CCM_CBCMR = (CCM_CBCMR & ~(CCM_CBCMR_FLEXSPI2_PODF_MASK | CCM_CBCMR_FLEXSPI2_CLK_SEL_MASK))
600017ea:	4aa9      	ldr	r2, [pc, #676]	; (60001a90 <configure_external_ram+0x2fc>)
	IOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT0_SELECT_INPUT = 1; // GPIO_EMC_26 for Mode: ALT8
600017ec:	f8c1 0330 	str.w	r0, [r1, #816]	; 0x330
	IOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT1_SELECT_INPUT = 1; // GPIO_EMC_27 for Mode: ALT8
600017f0:	f8c1 0334 	str.w	r0, [r1, #820]	; 0x334
	IOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT2_SELECT_INPUT = 1; // GPIO_EMC_28 for Mode: ALT8
600017f4:	f8c1 0338 	str.w	r0, [r1, #824]	; 0x338
	IOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT3_SELECT_INPUT = 1; // GPIO_EMC_29 for Mode: ALT8
600017f8:	f8c1 033c 	str.w	r0, [r1, #828]	; 0x33c
	IOMUXC_FLEXSPI2_IPP_IND_SCK_FA_SELECT_INPUT = 1; // GPIO_EMC_25 for Mode: ALT8
600017fc:	f8c1 0350 	str.w	r0, [r1, #848]	; 0x350
	CCM_CBCMR = (CCM_CBCMR & ~(CCM_CBCMR_FLEXSPI2_PODF_MASK | CCM_CBCMR_FLEXSPI2_CLK_SEL_MASK))
60001800:	69a1      	ldr	r1, [r4, #24]
		| CCM_CBCMR_FLEXSPI2_PODF(5) | CCM_CBCMR_FLEXSPI2_CLK_SEL(3); // 88 MHz
60001802:	4ba4      	ldr	r3, [pc, #656]	; (60001a94 <configure_external_ram+0x300>)
	CCM_CBCMR = (CCM_CBCMR & ~(CCM_CBCMR_FLEXSPI2_PODF_MASK | CCM_CBCMR_FLEXSPI2_CLK_SEL_MASK))
60001804:	400a      	ands	r2, r1
	FLEXSPI2_MCR0 |= FLEXSPI_MCR0_MDIS;
60001806:	48a4      	ldr	r0, [pc, #656]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_MCR2 = (FLEXSPI_MCR2 & ~(FLEXSPI_MCR2_RESUMEWAIT_MASK
60001808:	49a4      	ldr	r1, [pc, #656]	; (60001a9c <configure_external_ram+0x308>)
		| CCM_CBCMR_FLEXSPI2_PODF(5) | CCM_CBCMR_FLEXSPI2_CLK_SEL(3); // 88 MHz
6000180a:	4313      	orrs	r3, r2
		| FLEXSPI_MCR0_RXCLKSRC(1) | FLEXSPI_MCR0_MDIS;
6000180c:	4aa4      	ldr	r2, [pc, #656]	; (60001aa0 <configure_external_ram+0x30c>)
	CCM_CBCMR = (CCM_CBCMR & ~(CCM_CBCMR_FLEXSPI2_PODF_MASK | CCM_CBCMR_FLEXSPI2_CLK_SEL_MASK))
6000180e:	61a3      	str	r3, [r4, #24]
	CCM_CCGR7 |= CCM_CCGR7_FLEXSPI2(CCM_CCGR_ON);
60001810:	f8d4 3084 	ldr.w	r3, [r4, #132]	; 0x84
60001814:	f043 030c 	orr.w	r3, r3, #12
60001818:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
	FLEXSPI2_MCR1 = FLEXSPI_MCR1_SEQWAIT(0xFFFF) | FLEXSPI_MCR1_AHBBUSWAIT(0xFFFF);
6000181c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
	FLEXSPI2_MCR0 |= FLEXSPI_MCR0_MDIS;
60001820:	6803      	ldr	r3, [r0, #0]
60001822:	f043 0302 	orr.w	r3, r3, #2
60001826:	6003      	str	r3, [r0, #0]
	FLEXSPI2_MCR0 = (FLEXSPI2_MCR0 & ~(FLEXSPI_MCR0_AHBGRANTWAIT_MASK
60001828:	6803      	ldr	r3, [r0, #0]
		| FLEXSPI_MCR0_RXCLKSRC(1) | FLEXSPI_MCR0_MDIS;
6000182a:	402b      	ands	r3, r5
	FLEXSPI2_FLSHA1CR0 = 0x2000; // 8 MByte
6000182c:	f44f 5500 	mov.w	r5, #8192	; 0x2000
		| FLEXSPI_MCR0_RXCLKSRC(1) | FLEXSPI_MCR0_MDIS;
60001830:	431a      	orrs	r2, r3
	FLEXSPI2_MCR2 = (FLEXSPI_MCR2 & ~(FLEXSPI_MCR2_RESUMEWAIT_MASK
60001832:	4b9c      	ldr	r3, [pc, #624]	; (60001aa4 <configure_external_ram+0x310>)
	FLEXSPI2_MCR0 = (FLEXSPI2_MCR0 & ~(FLEXSPI_MCR0_AHBGRANTWAIT_MASK
60001834:	6002      	str	r2, [r0, #0]
	FLEXSPI2_MCR1 = FLEXSPI_MCR1_SEQWAIT(0xFFFF) | FLEXSPI_MCR1_AHBBUSWAIT(0xFFFF);
60001836:	6044      	str	r4, [r0, #4]
	FLEXSPI2_MCR2 = (FLEXSPI_MCR2 & ~(FLEXSPI_MCR2_RESUMEWAIT_MASK
60001838:	688a      	ldr	r2, [r1, #8]
		| FLEXSPI_AHBRXBUFCR0_PREFETCHEN | FLEXSPI_AHBRXBUFCR0_BUFSZ(64);
6000183a:	4c9b      	ldr	r4, [pc, #620]	; (60001aa8 <configure_external_ram+0x314>)
	FLEXSPI2_MCR2 = (FLEXSPI_MCR2 & ~(FLEXSPI_MCR2_RESUMEWAIT_MASK
6000183c:	4013      	ands	r3, r2
	FLEXSPI2_AHBRXBUF0CR0 = (FLEXSPI2_AHBRXBUF0CR0 & ~mask)
6000183e:	4a9b      	ldr	r2, [pc, #620]	; (60001aac <configure_external_ram+0x318>)
		| FLEXSPI_MCR2_RESUMEWAIT(0x20) /*| FLEXSPI_MCR2_SAMEDEVICEEN*/;
60001840:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
	FLEXSPI2_MCR2 = (FLEXSPI_MCR2 & ~(FLEXSPI_MCR2_RESUMEWAIT_MASK
60001844:	6083      	str	r3, [r0, #8]
	FLEXSPI2_AHBCR = FLEXSPI2_AHBCR & ~(FLEXSPI_AHBCR_READADDROPT | FLEXSPI_AHBCR_PREFETCHEN
60001846:	68c3      	ldr	r3, [r0, #12]
60001848:	f023 0378 	bic.w	r3, r3, #120	; 0x78
6000184c:	60c3      	str	r3, [r0, #12]
	FLEXSPI2_AHBRXBUF0CR0 = (FLEXSPI2_AHBRXBUF0CR0 & ~mask)
6000184e:	6a03      	ldr	r3, [r0, #32]
60001850:	4013      	ands	r3, r2
		| FLEXSPI_AHBRXBUFCR0_PREFETCHEN | FLEXSPI_AHBRXBUFCR0_BUFSZ(64);
60001852:	4323      	orrs	r3, r4
	FLEXSPI2_AHBRXBUF0CR0 = (FLEXSPI2_AHBRXBUF0CR0 & ~mask)
60001854:	6203      	str	r3, [r0, #32]
	FLEXSPI2_AHBRXBUF1CR0 = (FLEXSPI2_AHBRXBUF0CR0 & ~mask)
60001856:	6a03      	ldr	r3, [r0, #32]
60001858:	4013      	ands	r3, r2
	FLEXSPI2_AHBRXBUF2CR0 = mask;
6000185a:	4a95      	ldr	r2, [pc, #596]	; (60001ab0 <configure_external_ram+0x31c>)
		| FLEXSPI_AHBRXBUFCR0_PREFETCHEN | FLEXSPI_AHBRXBUFCR0_BUFSZ(64);
6000185c:	4323      	orrs	r3, r4
	FLEXSPI2_FLSHA1CR1 = FLEXSPI_FLSHCR1_CSINTERVAL(2)
6000185e:	4c95      	ldr	r4, [pc, #596]	; (60001ab4 <configure_external_ram+0x320>)
	FLEXSPI2_AHBRXBUF1CR0 = (FLEXSPI2_AHBRXBUF0CR0 & ~mask)
60001860:	6243      	str	r3, [r0, #36]	; 0x24
	FLEXSPI2_AHBRXBUF2CR0 = mask;
60001862:	6282      	str	r2, [r0, #40]	; 0x28
	FLEXSPI2_AHBRXBUF3CR0 = mask;
60001864:	62c2      	str	r2, [r0, #44]	; 0x2c
	FLEXSPI2_INTEN = 0;
60001866:	2200      	movs	r2, #0
	FLEXSPI2_IPRXFCR = (FLEXSPI_IPRXFCR & 0xFFFFFFC0) | FLEXSPI_IPRXFCR_CLRIPRXF;
60001868:	f8d1 30b8 	ldr.w	r3, [r1, #184]	; 0xb8
6000186c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
60001870:	f043 0301 	orr.w	r3, r3, #1
60001874:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
	FLEXSPI2_IPTXFCR = (FLEXSPI_IPTXFCR & 0xFFFFFFC0) | FLEXSPI_IPTXFCR_CLRIPTXF;
60001878:	f8d1 30bc 	ldr.w	r3, [r1, #188]	; 0xbc
	FLEXSPI2_LUTKEY = FLEXSPI_LUTKEY_VALUE;
6000187c:	498e      	ldr	r1, [pc, #568]	; (60001ab8 <configure_external_ram+0x324>)
	FLEXSPI2_IPTXFCR = (FLEXSPI_IPTXFCR & 0xFFFFFFC0) | FLEXSPI_IPTXFCR_CLRIPTXF;
6000187e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
60001882:	f043 0301 	orr.w	r3, r3, #1
60001886:	f8c0 30bc 	str.w	r3, [r0, #188]	; 0xbc
	FLEXSPI2_FLSHA1CR2 = FLEXSPI_FLSHCR2_AWRSEQID(6) | FLEXSPI_FLSHCR2_AWRSEQNUM(0)
6000188a:	f240 6305 	movw	r3, #1541	; 0x605
	FLEXSPI2_INTEN = 0;
6000188e:	6102      	str	r2, [r0, #16]
	FLEXSPI2_FLSHA1CR0 = 0x2000; // 8 MByte
60001890:	6605      	str	r5, [r0, #96]	; 0x60
	FLEXSPI2_FLSHA1CR1 = FLEXSPI_FLSHCR1_CSINTERVAL(2)
60001892:	6704      	str	r4, [r0, #112]	; 0x70
	FLEXSPI2_FLSHA1CR2 = FLEXSPI_FLSHCR2_AWRSEQID(6) | FLEXSPI_FLSHCR2_AWRSEQNUM(0)
60001894:	f8c0 3080 	str.w	r3, [r0, #128]	; 0x80
	FLEXSPI2_FLSHA2CR0 = 0x2000; // 8 MByte
60001898:	6645      	str	r5, [r0, #100]	; 0x64
	FLEXSPI2_FLSHA2CR1 = FLEXSPI_FLSHCR1_CSINTERVAL(2)
6000189a:	6744      	str	r4, [r0, #116]	; 0x74
	FLEXSPI2_LUTCR = FLEXSPI_LUTCR_UNLOCK;
6000189c:	2402      	movs	r4, #2
	FLEXSPI2_FLSHA2CR2 = FLEXSPI_FLSHCR2_AWRSEQID(6) | FLEXSPI_FLSHCR2_AWRSEQNUM(0)
6000189e:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
	FLEXSPI2_MCR0 &= ~FLEXSPI_MCR0_MDIS;
600018a2:	6803      	ldr	r3, [r0, #0]
600018a4:	f023 0302 	bic.w	r3, r3, #2
600018a8:	6003      	str	r3, [r0, #0]
	FLEXSPI2_LUTKEY = FLEXSPI_LUTKEY_VALUE;
600018aa:	6181      	str	r1, [r0, #24]
	FLEXSPI2_LUTCR = FLEXSPI_LUTCR_UNLOCK;
600018ac:	4b83      	ldr	r3, [pc, #524]	; (60001abc <configure_external_ram+0x328>)
	for (int i=0; i < 64; i++) luttable[i] = 0;
600018ae:	4984      	ldr	r1, [pc, #528]	; (60001ac0 <configure_external_ram+0x32c>)
	FLEXSPI2_LUTCR = FLEXSPI_LUTCR_UNLOCK;
600018b0:	61c4      	str	r4, [r0, #28]
	for (int i=0; i < 64; i++) luttable[i] = 0;
600018b2:	f843 2b04 	str.w	r2, [r3], #4
600018b6:	428b      	cmp	r3, r1
600018b8:	d1fb      	bne.n	600018b2 <configure_external_ram+0x11e>
	FLEXSPI2_MCR0 |= FLEXSPI_MCR0_SWRESET;
600018ba:	4a77      	ldr	r2, [pc, #476]	; (60001a98 <configure_external_ram+0x304>)
600018bc:	6813      	ldr	r3, [r2, #0]
600018be:	f043 0301 	orr.w	r3, r3, #1
600018c2:	6013      	str	r3, [r2, #0]
	while (FLEXSPI2_MCR0 & FLEXSPI_MCR0_SWRESET) ; // wait
600018c4:	6813      	ldr	r3, [r2, #0]
600018c6:	f013 0301 	ands.w	r3, r3, #1
600018ca:	d1fb      	bne.n	600018c4 <configure_external_ram+0x130>
	FLEXSPI2_LUTKEY = FLEXSPI_LUTKEY_VALUE;
600018cc:	487a      	ldr	r0, [pc, #488]	; (60001ab8 <configure_external_ram+0x324>)
	FLEXSPI2_LUTCR = FLEXSPI_LUTCR_UNLOCK;
600018ce:	2102      	movs	r1, #2
	FLEXSPI2_LUT0 = LUT0(CMD_SDR, PINS4, 0xF5);
600018d0:	f240 64f5 	movw	r4, #1781	; 0x6f5
	FLEXSPI2_LUTKEY = FLEXSPI_LUTKEY_VALUE;
600018d4:	6190      	str	r0, [r2, #24]
	FLEXSPI2_LUT8 = LUT0(CMD_SDR, PINS1, 0x99);
600018d6:	f240 4099 	movw	r0, #1177	; 0x499
	FLEXSPI2_LUTCR = FLEXSPI_LUTCR_UNLOCK;
600018da:	61d1      	str	r1, [r2, #28]
	FLEXSPI2_LUT4 = LUT0(CMD_SDR, PINS1, 0x66);
600018dc:	f240 4166 	movw	r1, #1126	; 0x466
	FLEXSPI2_LUT0 = LUT0(CMD_SDR, PINS4, 0xF5);
600018e0:	f8c2 4200 	str.w	r4, [r2, #512]	; 0x200
	FLEXSPI2_LUT13 = LUT0(READ_SDR, PINS1, 1);
600018e4:	f242 4401 	movw	r4, #9217	; 0x2401
	FLEXSPI2_LUT4 = LUT0(CMD_SDR, PINS1, 0x66);
600018e8:	f8c2 1210 	str.w	r1, [r2, #528]	; 0x210
	FLEXSPI2_LUT12 = LUT0(CMD_SDR, PINS1, 0x9F) | LUT1(DUMMY_SDR, PINS1, 24);
600018ec:	4975      	ldr	r1, [pc, #468]	; (60001ac4 <configure_external_ram+0x330>)
	FLEXSPI2_LUT8 = LUT0(CMD_SDR, PINS1, 0x99);
600018ee:	f8c2 0220 	str.w	r0, [r2, #544]	; 0x220
	FLEXSPI2_LUT12 = LUT0(CMD_SDR, PINS1, 0x9F) | LUT1(DUMMY_SDR, PINS1, 24);
600018f2:	f8c2 1230 	str.w	r1, [r2, #560]	; 0x230
	FLEXSPI2_LUT16 = LUT0(CMD_SDR, PINS1, 0x35);
600018f6:	f240 4135 	movw	r1, #1077	; 0x435
	FLEXSPI2_LUT20 = LUT0(CMD_SDR, PINS4, 0xEB) | LUT1(ADDR_SDR, PINS4, 24);
600018fa:	4873      	ldr	r0, [pc, #460]	; (60001ac8 <configure_external_ram+0x334>)
	FLEXSPI2_LUT13 = LUT0(READ_SDR, PINS1, 1);
600018fc:	f8c2 4234 	str.w	r4, [r2, #564]	; 0x234
	FLEXSPI2_LUT16 = LUT0(CMD_SDR, PINS1, 0x35);
60001900:	f8c2 1240 	str.w	r1, [r2, #576]	; 0x240
	FLEXSPI2_LUT24 = LUT0(CMD_SDR, PINS4, 0x38) | LUT1(ADDR_SDR, PINS4, 24);
60001904:	4c71      	ldr	r4, [pc, #452]	; (60001acc <configure_external_ram+0x338>)
	FLEXSPI2_LUT20 = LUT0(CMD_SDR, PINS4, 0xEB) | LUT1(ADDR_SDR, PINS4, 24);
60001906:	f8c2 0250 	str.w	r0, [r2, #592]	; 0x250
	FLEXSPI2_LUT25 = LUT0(WRITE_SDR, PINS4, 1);
6000190a:	f242 2001 	movw	r0, #8705	; 0x2201
	FLEXSPI2_LUT21 = LUT0(DUMMY_SDR, PINS4, 6) | LUT1(READ_SDR, PINS4, 1);
6000190e:	4970      	ldr	r1, [pc, #448]	; (60001ad0 <configure_external_ram+0x33c>)
60001910:	f8c2 1254 	str.w	r1, [r2, #596]	; 0x254
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001914:	2101      	movs	r1, #1
	FLEXSPI2_LUT24 = LUT0(CMD_SDR, PINS4, 0x38) | LUT1(ADDR_SDR, PINS4, 24);
60001916:	f8c2 4260 	str.w	r4, [r2, #608]	; 0x260
	FLEXSPI2_LUT25 = LUT0(WRITE_SDR, PINS4, 1);
6000191a:	f8c2 0264 	str.w	r0, [r2, #612]	; 0x264
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
6000191e:	485e      	ldr	r0, [pc, #376]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_IPCR0 = addr;
60001920:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001924:	f8c2 30a4 	str.w	r3, [r2, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001928:	f8c2 10b0 	str.w	r1, [r2, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
6000192c:	6943      	ldr	r3, [r0, #20]
6000192e:	07da      	lsls	r2, r3, #31
60001930:	d5fc      	bpl.n	6000192c <configure_external_ram+0x198>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
60001932:	2301      	movs	r3, #1
	FLEXSPI2_IPCR0 = addr;
60001934:	2400      	movs	r4, #0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001936:	f44f 3280 	mov.w	r2, #65536	; 0x10000
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
6000193a:	4957      	ldr	r1, [pc, #348]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
6000193c:	6143      	str	r3, [r0, #20]
	FLEXSPI2_IPCR0 = addr;
6000193e:	f8c0 40a0 	str.w	r4, [r0, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001942:	f8c0 20a4 	str.w	r2, [r0, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001946:	f8c0 30b0 	str.w	r3, [r0, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
6000194a:	694b      	ldr	r3, [r1, #20]
6000194c:	07db      	lsls	r3, r3, #31
6000194e:	d5fc      	bpl.n	6000194a <configure_external_ram+0x1b6>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
60001950:	2301      	movs	r3, #1
	FLEXSPI2_IPCR0 = addr;
60001952:	2400      	movs	r4, #0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001954:	f44f 3000 	mov.w	r0, #131072	; 0x20000
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001958:	4a4f      	ldr	r2, [pc, #316]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
6000195a:	614b      	str	r3, [r1, #20]
	FLEXSPI2_IPCR0 = addr;
6000195c:	f8c1 40a0 	str.w	r4, [r1, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001960:	f8c1 00a4 	str.w	r0, [r1, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001964:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001968:	6953      	ldr	r3, [r2, #20]
6000196a:	07df      	lsls	r7, r3, #31
6000196c:	d5fc      	bpl.n	60001968 <configure_external_ram+0x1d4>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
6000196e:	2301      	movs	r3, #1
	FLEXSPI2_IPCR0 = addr;
60001970:	2400      	movs	r4, #0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(3) | FLEXSPI_IPCR1_IDATSZ(4);
60001972:	4858      	ldr	r0, [pc, #352]	; (60001ad4 <configure_external_ram+0x340>)
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001974:	4948      	ldr	r1, [pc, #288]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
60001976:	6153      	str	r3, [r2, #20]
	FLEXSPI2_IPCR0 = addr;
60001978:	f8c2 40a0 	str.w	r4, [r2, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(3) | FLEXSPI_IPCR1_IDATSZ(4);
6000197c:	f8c2 00a4 	str.w	r0, [r2, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001980:	f8c2 30b0 	str.w	r3, [r2, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001984:	694b      	ldr	r3, [r1, #20]
60001986:	07de      	lsls	r6, r3, #31
60001988:	d5fc      	bpl.n	60001984 <configure_external_ram+0x1f0>
	uint32_t id = FLEXSPI2_RFDR0;
6000198a:	f8d1 3100 	ldr.w	r3, [r1, #256]	; 0x100
	if (flexspi2_psram_id(0) == 0x5D0D) {
6000198e:	f645 520d 	movw	r2, #23821	; 0x5d0d
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE | FLEXSPI_INTR_IPRXWA;
60001992:	2021      	movs	r0, #33	; 0x21
	return id & 0xFFFF;
60001994:	b29b      	uxth	r3, r3
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE | FLEXSPI_INTR_IPRXWA;
60001996:	6148      	str	r0, [r1, #20]
	if (flexspi2_psram_id(0) == 0x5D0D) {
60001998:	4293      	cmp	r3, r2
6000199a:	d165      	bne.n	60001a68 <configure_external_ram+0x2d4>
	FLEXSPI2_IPCR0 = addr;
6000199c:	2400      	movs	r4, #0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
6000199e:	f44f 2280 	mov.w	r2, #262144	; 0x40000
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
600019a2:	2301      	movs	r3, #1
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
600019a4:	483c      	ldr	r0, [pc, #240]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_IPCR0 = addr;
600019a6:	f8c1 40a0 	str.w	r4, [r1, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
600019aa:	f8c1 20a4 	str.w	r2, [r1, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
600019ae:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
600019b2:	6943      	ldr	r3, [r0, #20]
600019b4:	07dd      	lsls	r5, r3, #31
600019b6:	d5fc      	bpl.n	600019b2 <configure_external_ram+0x21e>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
600019b8:	2301      	movs	r3, #1
	FLEXSPI2_IPCR0 = addr;
600019ba:	f44f 0400 	mov.w	r4, #8388608	; 0x800000
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
600019be:	2100      	movs	r1, #0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
600019c0:	4a35      	ldr	r2, [pc, #212]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
600019c2:	6143      	str	r3, [r0, #20]
	FLEXSPI2_IPCR0 = addr;
600019c4:	f8c0 40a0 	str.w	r4, [r0, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
600019c8:	f8c0 10a4 	str.w	r1, [r0, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
600019cc:	f8c0 30b0 	str.w	r3, [r0, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
600019d0:	6953      	ldr	r3, [r2, #20]
600019d2:	07dc      	lsls	r4, r3, #31
600019d4:	d5fc      	bpl.n	600019d0 <configure_external_ram+0x23c>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
600019d6:	2301      	movs	r3, #1
	FLEXSPI2_IPCR0 = addr;
600019d8:	f44f 0400 	mov.w	r4, #8388608	; 0x800000
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
600019dc:	f44f 3080 	mov.w	r0, #65536	; 0x10000
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
600019e0:	492d      	ldr	r1, [pc, #180]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
600019e2:	6153      	str	r3, [r2, #20]
	FLEXSPI2_IPCR0 = addr;
600019e4:	f8c2 40a0 	str.w	r4, [r2, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
600019e8:	f8c2 00a4 	str.w	r0, [r2, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
600019ec:	f8c2 30b0 	str.w	r3, [r2, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
600019f0:	694b      	ldr	r3, [r1, #20]
600019f2:	07d8      	lsls	r0, r3, #31
600019f4:	d5fc      	bpl.n	600019f0 <configure_external_ram+0x25c>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
600019f6:	2301      	movs	r3, #1
	FLEXSPI2_IPCR0 = addr;
600019f8:	f44f 0400 	mov.w	r4, #8388608	; 0x800000
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
600019fc:	f44f 3000 	mov.w	r0, #131072	; 0x20000
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001a00:	4a25      	ldr	r2, [pc, #148]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
60001a02:	614b      	str	r3, [r1, #20]
	FLEXSPI2_IPCR0 = addr;
60001a04:	f8c1 40a0 	str.w	r4, [r1, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001a08:	f8c1 00a4 	str.w	r0, [r1, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001a0c:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001a10:	6953      	ldr	r3, [r2, #20]
60001a12:	07d9      	lsls	r1, r3, #31
60001a14:	d5fc      	bpl.n	60001a10 <configure_external_ram+0x27c>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
60001a16:	2301      	movs	r3, #1
	FLEXSPI2_IPCR0 = addr;
60001a18:	f44f 0400 	mov.w	r4, #8388608	; 0x800000
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(3) | FLEXSPI_IPCR1_IDATSZ(4);
60001a1c:	482d      	ldr	r0, [pc, #180]	; (60001ad4 <configure_external_ram+0x340>)
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001a1e:	491e      	ldr	r1, [pc, #120]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
60001a20:	6153      	str	r3, [r2, #20]
	FLEXSPI2_IPCR0 = addr;
60001a22:	f8c2 40a0 	str.w	r4, [r2, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(3) | FLEXSPI_IPCR1_IDATSZ(4);
60001a26:	f8c2 00a4 	str.w	r0, [r2, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001a2a:	f8c2 30b0 	str.w	r3, [r2, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001a2e:	694b      	ldr	r3, [r1, #20]
60001a30:	07da      	lsls	r2, r3, #31
60001a32:	d5fc      	bpl.n	60001a2e <configure_external_ram+0x29a>
	uint32_t id = FLEXSPI2_RFDR0;
60001a34:	f8d1 3100 	ldr.w	r3, [r1, #256]	; 0x100
		if (flexspi2_psram_id(0x800000) == 0x5D0D) {
60001a38:	f645 520d 	movw	r2, #23821	; 0x5d0d
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE | FLEXSPI_INTR_IPRXWA;
60001a3c:	2021      	movs	r0, #33	; 0x21
	return id & 0xFFFF;
60001a3e:	b29b      	uxth	r3, r3
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE | FLEXSPI_INTR_IPRXWA;
60001a40:	6148      	str	r0, [r1, #20]
		if (flexspi2_psram_id(0x800000) == 0x5D0D) {
60001a42:	4293      	cmp	r3, r2
60001a44:	d050      	beq.n	60001ae8 <configure_external_ram+0x354>
60001a46:	2508      	movs	r5, #8
60001a48:	f44f 0400 	mov.w	r4, #8388608	; 0x800000
			external_psram_size * 0x100000 -
60001a4c:	4922      	ldr	r1, [pc, #136]	; (60001ad8 <configure_external_ram+0x344>)
		sm_set_pool(&extmem_smalloc_pool, &_extram_end,
60001a4e:	2000      	movs	r0, #0
			external_psram_size * 0x100000 -
60001a50:	4b22      	ldr	r3, [pc, #136]	; (60001adc <configure_external_ram+0x348>)
			external_psram_size = 16;
60001a52:	4a23      	ldr	r2, [pc, #140]	; (60001ae0 <configure_external_ram+0x34c>)
		sm_set_pool(&extmem_smalloc_pool, &_extram_end,
60001a54:	9000      	str	r0, [sp, #0]
			external_psram_size = 16;
60001a56:	7015      	strb	r5, [r2, #0]
			external_psram_size * 0x100000 -
60001a58:	1a5a      	subs	r2, r3, r1
		sm_set_pool(&extmem_smalloc_pool, &_extram_end,
60001a5a:	2301      	movs	r3, #1
60001a5c:	4821      	ldr	r0, [pc, #132]	; (60001ae4 <configure_external_ram+0x350>)
60001a5e:	4422      	add	r2, r4
60001a60:	f000 fa0a 	bl	60001e78 <__sm_set_pool_veneer>
}
60001a64:	b003      	add	sp, #12
60001a66:	bdf0      	pop	{r4, r5, r6, r7, pc}
		memset(&extmem_smalloc_pool, 0, sizeof(extmem_smalloc_pool));
60001a68:	4b1e      	ldr	r3, [pc, #120]	; (60001ae4 <configure_external_ram+0x350>)
60001a6a:	2200      	movs	r2, #0
60001a6c:	e9c3 2200 	strd	r2, r2, [r3]
60001a70:	e9c3 2202 	strd	r2, r2, [r3, #8]
}
60001a74:	b003      	add	sp, #12
60001a76:	bdf0      	pop	{r4, r5, r6, r7, pc}
60001a78:	401f8000 	.word	0x401f8000
60001a7c:	0001b0f9 	.word	0x0001b0f9
60001a80:	000110f9 	.word	0x000110f9
60001a84:	401f8400 	.word	0x401f8400
60001a88:	000170f9 	.word	0x000170f9
60001a8c:	400fc000 	.word	0x400fc000
60001a90:	1ffffcff 	.word	0x1ffffcff
60001a94:	a0000300 	.word	0xa0000300
60001a98:	402a4000 	.word	0x402a4000
60001a9c:	402a8000 	.word	0x402a8000
60001aa0:	ffff0012 	.word	0xffff0012
60001aa4:	00f737ff 	.word	0x00f737ff
60001aa8:	80000040 	.word	0x80000040
60001aac:	7cf0ff00 	.word	0x7cf0ff00
60001ab0:	830f00ff 	.word	0x830f00ff
60001ab4:	00020063 	.word	0x00020063
60001ab8:	5af05af0 	.word	0x5af05af0
60001abc:	402a4200 	.word	0x402a4200
60001ac0:	402a4300 	.word	0x402a4300
60001ac4:	3018049f 	.word	0x3018049f
60001ac8:	0a1806eb 	.word	0x0a1806eb
60001acc:	0a180638 	.word	0x0a180638
60001ad0:	26013206 	.word	0x26013206
60001ad4:	00030004 	.word	0x00030004
60001ad8:	70000000 	.word	0x70000000
60001adc:	70000000 	.word	0x70000000
60001ae0:	200030b3 	.word	0x200030b3
60001ae4:	20003008 	.word	0x20003008
	FLEXSPI2_IPCR0 = addr;
60001ae8:	f44f 0400 	mov.w	r4, #8388608	; 0x800000
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001aec:	f44f 2280 	mov.w	r2, #262144	; 0x40000
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001af0:	2301      	movs	r3, #1
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001af2:	4808      	ldr	r0, [pc, #32]	; (60001b14 <configure_external_ram+0x380>)
	FLEXSPI2_IPCR0 = addr;
60001af4:	f8c1 40a0 	str.w	r4, [r1, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001af8:	f8c1 20a4 	str.w	r2, [r1, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001afc:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001b00:	6943      	ldr	r3, [r0, #20]
60001b02:	07db      	lsls	r3, r3, #31
60001b04:	d5fc      	bpl.n	60001b00 <configure_external_ram+0x36c>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
60001b06:	2301      	movs	r3, #1
60001b08:	2510      	movs	r5, #16
60001b0a:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
60001b0e:	6143      	str	r3, [r0, #20]
			external_psram_size = 16;
60001b10:	e79c      	b.n	60001a4c <configure_external_ram+0x2b8>
60001b12:	bf00      	nop
60001b14:	402a4000 	.word	0x402a4000

60001b18 <usb_pll_start>:
{
60001b18:	b4f0      	push	{r4, r5, r6, r7}
		uint32_t n = CCM_ANALOG_PLL_USB1; // pg 759
60001b1a:	4a15      	ldr	r2, [pc, #84]	; (60001b70 <usb_pll_start+0x58>)
			CCM_ANALOG_PLL_USB1_SET = CCM_ANALOG_PLL_USB1_EN_USB_CLKS;
60001b1c:	2740      	movs	r7, #64	; 0x40
			CCM_ANALOG_PLL_USB1_CLR = CCM_ANALOG_PLL_USB1_BYPASS;
60001b1e:	f44f 3180 	mov.w	r1, #65536	; 0x10000
			CCM_ANALOG_PLL_USB1_SET = CCM_ANALOG_PLL_USB1_POWER;
60001b22:	f44f 5680 	mov.w	r6, #4096	; 0x1000
			CCM_ANALOG_PLL_USB1_SET = CCM_ANALOG_PLL_USB1_ENABLE;
60001b26:	f44f 5500 	mov.w	r5, #8192	; 0x2000
			CCM_ANALOG_PLL_USB1_CLR = 0xC000;			// bypass 24 MHz
60001b2a:	f44f 4440 	mov.w	r4, #49152	; 0xc000
			CCM_ANALOG_PLL_USB1_CLR = CCM_ANALOG_PLL_USB1_POWER |	// power down
60001b2e:	f243 0042 	movw	r0, #12354	; 0x3042
		uint32_t n = CCM_ANALOG_PLL_USB1; // pg 759
60001b32:	6913      	ldr	r3, [r2, #16]
		if (n & CCM_ANALOG_PLL_USB1_DIV_SELECT) {
60001b34:	f013 0f02 	tst.w	r3, #2
60001b38:	d10e      	bne.n	60001b58 <usb_pll_start+0x40>
		if (!(n & CCM_ANALOG_PLL_USB1_ENABLE)) {
60001b3a:	f413 5f00 	tst.w	r3, #8192	; 0x2000
60001b3e:	d00f      	beq.n	60001b60 <usb_pll_start+0x48>
		if (!(n & CCM_ANALOG_PLL_USB1_POWER)) {
60001b40:	f413 5f80 	tst.w	r3, #4096	; 0x1000
60001b44:	d00e      	beq.n	60001b64 <usb_pll_start+0x4c>
		if (!(n & CCM_ANALOG_PLL_USB1_LOCK)) {
60001b46:	2b00      	cmp	r3, #0
60001b48:	daf3      	bge.n	60001b32 <usb_pll_start+0x1a>
		if (n & CCM_ANALOG_PLL_USB1_BYPASS) {
60001b4a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
60001b4e:	d10b      	bne.n	60001b68 <usb_pll_start+0x50>
		if (!(n & CCM_ANALOG_PLL_USB1_EN_USB_CLKS)) {
60001b50:	065b      	lsls	r3, r3, #25
60001b52:	d50b      	bpl.n	60001b6c <usb_pll_start+0x54>
}
60001b54:	bcf0      	pop	{r4, r5, r6, r7}
60001b56:	4770      	bx	lr
			CCM_ANALOG_PLL_USB1_CLR = 0xC000;			// bypass 24 MHz
60001b58:	6194      	str	r4, [r2, #24]
			CCM_ANALOG_PLL_USB1_SET = CCM_ANALOG_PLL_USB1_BYPASS;	// bypass
60001b5a:	6151      	str	r1, [r2, #20]
			CCM_ANALOG_PLL_USB1_CLR = CCM_ANALOG_PLL_USB1_POWER |	// power down
60001b5c:	6190      	str	r0, [r2, #24]
			continue;
60001b5e:	e7e8      	b.n	60001b32 <usb_pll_start+0x1a>
			CCM_ANALOG_PLL_USB1_SET = CCM_ANALOG_PLL_USB1_ENABLE;
60001b60:	6155      	str	r5, [r2, #20]
			continue;
60001b62:	e7e6      	b.n	60001b32 <usb_pll_start+0x1a>
			CCM_ANALOG_PLL_USB1_SET = CCM_ANALOG_PLL_USB1_POWER;
60001b64:	6156      	str	r6, [r2, #20]
			continue;
60001b66:	e7e4      	b.n	60001b32 <usb_pll_start+0x1a>
			CCM_ANALOG_PLL_USB1_CLR = CCM_ANALOG_PLL_USB1_BYPASS;
60001b68:	6191      	str	r1, [r2, #24]
			continue;
60001b6a:	e7e2      	b.n	60001b32 <usb_pll_start+0x1a>
			CCM_ANALOG_PLL_USB1_SET = CCM_ANALOG_PLL_USB1_EN_USB_CLKS;
60001b6c:	6157      	str	r7, [r2, #20]
			continue;
60001b6e:	e7e0      	b.n	60001b32 <usb_pll_start+0x1a>
60001b70:	400d8000 	.word	0x400d8000

60001b74 <tempmon_init>:
  uint32_t calibrationData;
  uint32_t roomCount;
  uint32_t tempCodeVal;
      
  //first power on the temperature sensor - no register change
  TEMPMON_TEMPSENSE0 &= ~0x1U;
60001b74:	4a3f      	ldr	r2, [pc, #252]	; (60001c74 <tempmon_init+0x100>)

  //set monitoring frequency - no register change
  TEMPMON_TEMPSENSE1 = (((uint32_t)(((uint32_t)(frequency)) << 0U)) & 0xFFFFU);
60001b76:	2003      	movs	r0, #3
  
  //read calibration data - this works
  calibrationData = HW_OCOTP_ANA1;
60001b78:	493f      	ldr	r1, [pc, #252]	; (60001c78 <tempmon_init+0x104>)
    s_hotTemp = (uint32_t)(calibrationData & 0xFFU) >> 0x00U;
    s_hotCount = (uint32_t)(calibrationData & 0xFFF00U) >> 0X08U;
    roomCount = (uint32_t)(calibrationData & 0xFFF00000U) >> 0x14U;
    s_hot_ROOM = (float) (s_hotTemp) - 25.0f;
60001b7a:	eef3 5a09 	vmov.f32	s11, #57	; 0x41c80000  25.0
  TEMPMON_TEMPSENSE0 &= ~0x1U;
60001b7e:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
  
  //Start temp monitoring
  TEMPMON_TEMPSENSE0 |= 0x2U;   //starts temp monitoring

  //PANIC shutdown:
  NVIC_SET_PRIORITY(IRQ_TEMPERATURE_PANIC, 0);
60001b82:	f04f 0c00 	mov.w	ip, #0
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - highAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001b86:	ed9f 6a3d 	vldr	s12, [pc, #244]	; 60001c7c <tempmon_init+0x108>
  TEMPMON_TEMPSENSE0 &= ~0x1U;
60001b8a:	f023 0301 	bic.w	r3, r3, #1
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - panicAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001b8e:	ed9f 5a3c 	vldr	s10, [pc, #240]	; 60001c80 <tempmon_init+0x10c>
{
60001b92:	b430      	push	{r4, r5}
  TEMPMON_TEMPSENSE0 &= ~0x1U;
60001b94:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
  TEMPMON_TEMPSENSE1 = (((uint32_t)(((uint32_t)(frequency)) << 0U)) & 0xFFFFU);
60001b98:	f8c2 0090 	str.w	r0, [r2, #144]	; 0x90
  calibrationData = HW_OCOTP_ANA1;
60001b9c:	f8d1 10e0 	ldr.w	r1, [r1, #224]	; 0xe0
    s_hotTemp = (uint32_t)(calibrationData & 0xFFU) >> 0x00U;
60001ba0:	4d38      	ldr	r5, [pc, #224]	; (60001c84 <tempmon_init+0x110>)
60001ba2:	b2cb      	uxtb	r3, r1
    s_hotCount = (uint32_t)(calibrationData & 0xFFF00U) >> 0X08U;
60001ba4:	4c38      	ldr	r4, [pc, #224]	; (60001c88 <tempmon_init+0x114>)
    s_hot_ROOM = (float) (s_hotTemp) - 25.0f;
60001ba6:	4839      	ldr	r0, [pc, #228]	; (60001c8c <tempmon_init+0x118>)
    s_hotTemp = (uint32_t)(calibrationData & 0xFFU) >> 0x00U;
60001ba8:	602b      	str	r3, [r5, #0]
    s_hot_ROOM = (float) (s_hotTemp) - 25.0f;
60001baa:	ee07 3a90 	vmov	s15, r3
    roomCount = (uint32_t)(calibrationData & 0xFFF00000U) >> 0x14U;
60001bae:	0d0b      	lsrs	r3, r1, #20
    s_hotCount = (uint32_t)(calibrationData & 0xFFF00U) >> 0X08U;
60001bb0:	f3c1 210b 	ubfx	r1, r1, #8, #12
    s_hot_ROOM = (float) (s_hotTemp) - 25.0f;
60001bb4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    roomCount = (uint32_t)(calibrationData & 0xFFF00000U) >> 0x14U;
60001bb8:	ee06 3a90 	vmov	s13, r3
    s_roomC_hotC = (float) roomCount - (float) s_hotCount;
60001bbc:	ee07 1a10 	vmov	s14, r1
60001bc0:	4b33      	ldr	r3, [pc, #204]	; (60001c90 <tempmon_init+0x11c>)
60001bc2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
    s_hotCount = (uint32_t)(calibrationData & 0xFFF00U) >> 0X08U;
60001bc6:	6021      	str	r1, [r4, #0]
    s_roomC_hotC = (float) roomCount - (float) s_hotCount;
60001bc8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
    TEMPMON_TEMPSENSE2 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 16U)) & 0xFFF0000U);
60001bcc:	4931      	ldr	r1, [pc, #196]	; (60001c94 <tempmon_init+0x120>)
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - highAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001bce:	ee37 6ac6 	vsub.f32	s12, s15, s12
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - panicAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001bd2:	ee37 5ac5 	vsub.f32	s10, s15, s10
    s_roomC_hotC = (float) roomCount - (float) s_hotCount;
60001bd6:	ee76 6ac7 	vsub.f32	s13, s13, s14
    s_hot_ROOM = (float) (s_hotTemp) - 25.0f;
60001bda:	ee77 7ae5 	vsub.f32	s15, s15, s11
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - highAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001bde:	ee26 6a26 	vmul.f32	s12, s12, s13
    s_roomC_hotC = (float) roomCount - (float) s_hotCount;
60001be2:	edc3 6a00 	vstr	s13, [r3]
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - panicAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001be6:	ee25 5a26 	vmul.f32	s10, s10, s13
    TEMPMON_TEMPSENSE0 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 20U)) & 0xFFF00000U);
60001bea:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - lowAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001bee:	ee67 4aa6 	vmul.f32	s9, s15, s13
    s_hot_ROOM = (float) (s_hotTemp) - 25.0f;
60001bf2:	edc0 7a00 	vstr	s15, [r0]
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - highAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001bf6:	eec6 5a27 	vdiv.f32	s11, s12, s15
  NVIC_SET_PRIORITY(IRQ_TEMPERATURE_PANIC, 0);
60001bfa:	4827      	ldr	r0, [pc, #156]	; (60001c98 <tempmon_init+0x124>)
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - panicAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001bfc:	ee85 6a27 	vdiv.f32	s12, s10, s15
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - lowAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001c00:	eec4 6aa7 	vdiv.f32	s13, s9, s15
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - highAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001c04:	ee75 5a87 	vadd.f32	s11, s11, s14
60001c08:	eefc 5ae5 	vcvt.u32.f32	s11, s11
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - panicAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001c0c:	ee36 6a07 	vadd.f32	s12, s12, s14
    TEMPMON_TEMPSENSE0 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 20U)) & 0xFFF00000U);
60001c10:	ee15 4a90 	vmov	r4, s11
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - panicAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001c14:	eebc 6ac6 	vcvt.u32.f32	s12, s12
    TEMPMON_TEMPSENSE0 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 20U)) & 0xFFF00000U);
60001c18:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - lowAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001c1c:	ee76 7a87 	vadd.f32	s15, s13, s14
    TEMPMON_TEMPSENSE0 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 20U)) & 0xFFF00000U);
60001c20:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
    TEMPMON_TEMPSENSE2 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 16U)) & 0xFFF0000U);
60001c24:	ee16 3a10 	vmov	r3, s12
60001c28:	f8d2 4190 	ldr.w	r4, [r2, #400]	; 0x190
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - lowAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001c2c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
    TEMPMON_TEMPSENSE2 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 16U)) & 0xFFF0000U);
60001c30:	ea01 4103 	and.w	r1, r1, r3, lsl #16
60001c34:	4321      	orrs	r1, r4
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - lowAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001c36:	ee17 3a90 	vmov	r3, s15
    TEMPMON_TEMPSENSE2 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 16U)) & 0xFFF0000U);
60001c3a:	f8c2 1190 	str.w	r1, [r2, #400]	; 0x190
    TEMPMON_TEMPSENSE2 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 0U)) & 0xFFFU);
60001c3e:	f3c3 030b 	ubfx	r3, r3, #0, #12
60001c42:	f8d2 1190 	ldr.w	r1, [r2, #400]	; 0x190
60001c46:	430b      	orrs	r3, r1
static inline void attachInterruptVector(IRQ_NUMBER_t irq, void (*function)(void)) __attribute__((always_inline, unused));
static inline void attachInterruptVector(IRQ_NUMBER_t irq, void (*function)(void)) { _VectorsRam[irq + 16] = function; asm volatile("": : :"memory"); }
#else
extern void (* volatile _VectorsRam[NVIC_NUM_INTERRUPTS+16])(void);
static inline void attachInterruptVector(enum IRQ_NUMBER_t irq, void (*function)(void)) __attribute__((always_inline, unused));
static inline void attachInterruptVector(enum IRQ_NUMBER_t irq, void (*function)(void)) { _VectorsRam[irq + 16] = function; asm volatile("": : :"memory"); }
60001c48:	4914      	ldr	r1, [pc, #80]	; (60001c9c <tempmon_init+0x128>)
60001c4a:	f8c2 3190 	str.w	r3, [r2, #400]	; 0x190
  TEMPMON_TEMPSENSE0 |= 0x2U;   //starts temp monitoring
60001c4e:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
60001c52:	f043 0302 	orr.w	r3, r3, #2
60001c56:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
60001c5a:	4b11      	ldr	r3, [pc, #68]	; (60001ca0 <tempmon_init+0x12c>)
  NVIC_SET_PRIORITY(IRQ_TEMPERATURE_PANIC, 0);
60001c5c:	f880 c040 	strb.w	ip, [r0, #64]	; 0x40
60001c60:	f8c1 3140 	str.w	r3, [r1, #320]	; 0x140
  attachInterruptVector(IRQ_TEMPERATURE_PANIC, &Panic_Temp_isr);
  NVIC_ENABLE_IRQ(IRQ_TEMPERATURE_PANIC);
60001c64:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
60001c68:	2201      	movs	r2, #1
}
60001c6a:	bc30      	pop	{r4, r5}
  NVIC_ENABLE_IRQ(IRQ_TEMPERATURE_PANIC);
60001c6c:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
}
60001c70:	4770      	bx	lr
60001c72:	bf00      	nop
60001c74:	400d8100 	.word	0x400d8100
60001c78:	401f4400 	.word	0x401f4400
60001c7c:	42aa0000 	.word	0x42aa0000
60001c80:	42b40000 	.word	0x42b40000
60001c84:	20003078 	.word	0x20003078
60001c88:	20003074 	.word	0x20003074
60001c8c:	2000307c 	.word	0x2000307c
60001c90:	20003080 	.word	0x20003080
60001c94:	0fff0000 	.word	0x0fff0000
60001c98:	e000e400 	.word	0xe000e400
60001c9c:	20002800 	.word	0x20002800
60001ca0:	000009b1 	.word	0x000009b1

60001ca4 <usb_init>:
FLASHMEM void usb_init(void)
{
	// TODO: only enable when VBUS detected
	// TODO: return to low power mode when VBUS removed
	// TODO: protect PMU access with MPU
	PMU_REG_3P0 = PMU_REG_3P0_OUTPUT_TRG(0x0F) | PMU_REG_3P0_BO_OFFSET(6)
60001ca4:	4b31      	ldr	r3, [pc, #196]	; (60001d6c <usb_init+0xc8>)
60001ca6:	f640 7261 	movw	r2, #3937	; 0xf61
{
60001caa:	b510      	push	{r4, lr}
	PMU_REG_3P0 = PMU_REG_3P0_OUTPUT_TRG(0x0F) | PMU_REG_3P0_BO_OFFSET(6)
60001cac:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120

	CCM_CCGR6 |= CCM_CCGR6_USBOH3(CCM_CCGR_ON); // turn on clocks to USB peripheral
	
	printf("BURSTSIZE=%08lX\n", USB1_BURSTSIZE);
	//USB1_BURSTSIZE = USB_BURSTSIZE_TXPBURST(4) | USB_BURSTSIZE_RXPBURST(4);
	USB1_BURSTSIZE = 0x0404;
60001cb0:	f240 4404 	movw	r4, #1028	; 0x404
	usb_init_serialnumber();
60001cb4:	f000 f8dc 	bl	60001e70 <__usb_init_serialnumber_veneer>
	CCM_CCGR6 |= CCM_CCGR6_USBOH3(CCM_CCGR_ON); // turn on clocks to USB peripheral
60001cb8:	4a2d      	ldr	r2, [pc, #180]	; (60001d70 <usb_init+0xcc>)
	USB1_BURSTSIZE = 0x0404;
60001cba:	492e      	ldr	r1, [pc, #184]	; (60001d74 <usb_init+0xd0>)
	CCM_CCGR6 |= CCM_CCGR6_USBOH3(CCM_CCGR_ON); // turn on clocks to USB peripheral
60001cbc:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
	//printf("USB1_USBMODE=%08lX\n", USB1_USBMODE);

	// turn on PLL3, wait for 480 MHz lock?
	// turn on CCM clock gates?  CCGR6[CG0]
#if 1
	if ((USBPHY1_PWD & (USBPHY_PWD_RXPWDRX | USBPHY_PWD_RXPWDDIFF | USBPHY_PWD_RXPWD1PT1
60001cc0:	482d      	ldr	r0, [pc, #180]	; (60001d78 <usb_init+0xd4>)
	CCM_CCGR6 |= CCM_CCGR6_USBOH3(CCM_CCGR_ON); // turn on clocks to USB peripheral
60001cc2:	f043 0303 	orr.w	r3, r3, #3
60001cc6:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
	if ((USBPHY1_PWD & (USBPHY_PWD_RXPWDRX | USBPHY_PWD_RXPWDDIFF | USBPHY_PWD_RXPWD1PT1
60001cca:	4b2c      	ldr	r3, [pc, #176]	; (60001d7c <usb_init+0xd8>)
	USB1_BURSTSIZE = 0x0404;
60001ccc:	f8c1 4160 	str.w	r4, [r1, #352]	; 0x160
	if ((USBPHY1_PWD & (USBPHY_PWD_RXPWDRX | USBPHY_PWD_RXPWDDIFF | USBPHY_PWD_RXPWD1PT1
60001cd0:	6802      	ldr	r2, [r0, #0]
60001cd2:	421a      	tst	r2, r3
60001cd4:	d103      	bne.n	60001cde <usb_init+0x3a>
	  | USBPHY_PWD_RXPWDENV | USBPHY_PWD_TXPWDV2I | USBPHY_PWD_TXPWDIBIAS
	  | USBPHY_PWD_TXPWDFS)) || (USB1_USBMODE & USB_USBMODE_CM_MASK)) {
60001cd6:	f8d1 31a8 	ldr.w	r3, [r1, #424]	; 0x1a8
60001cda:	079a      	lsls	r2, r3, #30
60001cdc:	d01b      	beq.n	60001d16 <usb_init+0x72>
		// USB controller is turned on from previous use
		// reset needed to turn it off & start from clean slate
		USBPHY1_CTRL_SET = USBPHY_CTRL_SFTRST; // USBPHY1_CTRL page 3292
		USB1_USBCMD |= USB_USBCMD_RST; // reset controller
60001cde:	4a25      	ldr	r2, [pc, #148]	; (60001d74 <usb_init+0xd0>)
		USBPHY1_CTRL_SET = USBPHY_CTRL_SFTRST; // USBPHY1_CTRL page 3292
60001ce0:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
60001ce4:	4b24      	ldr	r3, [pc, #144]	; (60001d78 <usb_init+0xd4>)
60001ce6:	6359      	str	r1, [r3, #52]	; 0x34
		USB1_USBCMD |= USB_USBCMD_RST; // reset controller
60001ce8:	f8d2 3140 	ldr.w	r3, [r2, #320]	; 0x140
60001cec:	f043 0302 	orr.w	r3, r3, #2
60001cf0:	f8c2 3140 	str.w	r3, [r2, #320]	; 0x140
		int count=0;
		while (USB1_USBCMD & USB_USBCMD_RST) count++;
60001cf4:	f8d2 3140 	ldr.w	r3, [r2, #320]	; 0x140
60001cf8:	079b      	lsls	r3, r3, #30
60001cfa:	d4fb      	bmi.n	60001cf4 <usb_init+0x50>
		NVIC_CLEAR_PENDING(IRQ_USB1);
60001cfc:	f44f 3000 	mov.w	r0, #131072	; 0x20000
60001d00:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
		USBPHY1_CTRL_CLR = USBPHY_CTRL_SFTRST; // reset PHY
60001d04:	4b1c      	ldr	r3, [pc, #112]	; (60001d78 <usb_init+0xd4>)
60001d06:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
		NVIC_CLEAR_PENDING(IRQ_USB1);
60001d0a:	f8c1 028c 	str.w	r0, [r1, #652]	; 0x28c
		//printf("USBPHY1_PWD=%08lX\n", USBPHY1_PWD);
		//printf("USBPHY1_TX=%08lX\n", USBPHY1_TX);
		//printf("USBPHY1_RX=%08lX\n", USBPHY1_RX);
		//printf("USBPHY1_CTRL=%08lX\n", USBPHY1_CTRL);
		//printf("USB1_USBMODE=%08lX\n", USB1_USBMODE);
		delay(25);
60001d0e:	2019      	movs	r0, #25
		USBPHY1_CTRL_CLR = USBPHY_CTRL_SFTRST; // reset PHY
60001d10:	639a      	str	r2, [r3, #56]	; 0x38
		delay(25);
60001d12:	f000 f895 	bl	60001e40 <__delay_veneer>
	// ENDPTFLUSH	pg 3247
	// ENDPTSTAT	pg 3247
	// ENDPTCOMPLETE   3248
	// ENDPTCTRL0	pg 3249

	USBPHY1_CTRL_CLR = USBPHY_CTRL_CLKGATE;
60001d16:	4a18      	ldr	r2, [pc, #96]	; (60001d78 <usb_init+0xd4>)
60001d18:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
	USBPHY1_PWD = 0;
	//printf("USBPHY1_PWD=%08lX\n", USBPHY1_PWD);
	//printf("USBPHY1_CTRL=%08lX\n", USBPHY1_CTRL);

	USB1_USBMODE = USB_USBMODE_CM(2) | USB_USBMODE_SLOM;
60001d1c:	4c15      	ldr	r4, [pc, #84]	; (60001d74 <usb_init+0xd0>)
	USBPHY1_PWD = 0;
60001d1e:	2100      	movs	r1, #0
	USBPHY1_CTRL_CLR = USBPHY_CTRL_CLKGATE;
60001d20:	6390      	str	r0, [r2, #56]	; 0x38
	USB1_USBMODE = USB_USBMODE_CM(2) | USB_USBMODE_SLOM;
60001d22:	200a      	movs	r0, #10
	memset(endpoint_queue_head, 0, sizeof(endpoint_queue_head));
60001d24:	4b16      	ldr	r3, [pc, #88]	; (60001d80 <usb_init+0xdc>)
	USBPHY1_PWD = 0;
60001d26:	6011      	str	r1, [r2, #0]
	memset(endpoint_queue_head, 0, sizeof(endpoint_queue_head));
60001d28:	f44f 7220 	mov.w	r2, #640	; 0x280
	USB1_USBMODE = USB_USBMODE_CM(2) | USB_USBMODE_SLOM;
60001d2c:	f8c4 01a8 	str.w	r0, [r4, #424]	; 0x1a8
	memset(endpoint_queue_head, 0, sizeof(endpoint_queue_head));
60001d30:	4618      	mov	r0, r3
60001d32:	f000 f88d 	bl	60001e50 <__memset_veneer>
	endpoint_queue_head[0].config = (64 << 16) | (1 << 15);
	endpoint_queue_head[1].config = (64 << 16);
60001d36:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
	memset(endpoint_queue_head, 0, sizeof(endpoint_queue_head));
60001d3a:	4603      	mov	r3, r0
	endpoint_queue_head[0].config = (64 << 16) | (1 << 15);
60001d3c:	f44f 0081 	mov.w	r0, #4227072	; 0x408000
	USB1_ENDPOINTLISTADDR = (uint32_t)&endpoint_queue_head;
	//  Recommended: enable all device interrupts including: USBINT, USBERRINT,
	// Port Change Detect, USB Reset Received, DCSuspend.
	USB1_USBINTR = USB_USBINTR_UE | USB_USBINTR_UEE | /* USB_USBINTR_PCE | */
60001d40:	f240 1143 	movw	r1, #323	; 0x143
	endpoint_queue_head[0].config = (64 << 16) | (1 << 15);
60001d44:	6018      	str	r0, [r3, #0]
	USB1_ENDPOINTLISTADDR = (uint32_t)&endpoint_queue_head;
60001d46:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
	endpoint_queue_head[1].config = (64 << 16);
60001d4a:	641a      	str	r2, [r3, #64]	; 0x40
60001d4c:	4b0d      	ldr	r3, [pc, #52]	; (60001d84 <usb_init+0xe0>)
60001d4e:	4a0e      	ldr	r2, [pc, #56]	; (60001d88 <usb_init+0xe4>)
	USB1_USBINTR = USB_USBINTR_UE | USB_USBINTR_UEE | /* USB_USBINTR_PCE | */
60001d50:	f8c4 1148 	str.w	r1, [r4, #328]	; 0x148
60001d54:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
		USB_USBINTR_URE | USB_USBINTR_SLE;
	//_VectorsRam[IRQ_USB1+16] = &usb_isr;
	attachInterruptVector(IRQ_USB1, &usb_isr);
	NVIC_ENABLE_IRQ(IRQ_USB1);
60001d58:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
60001d5c:	f44f 3100 	mov.w	r1, #131072	; 0x20000
	//printf("USB1_ENDPTCTRL0=%08lX\n", USB1_ENDPTCTRL0);
	//printf("USB1_ENDPTCTRL1=%08lX\n", USB1_ENDPTCTRL1);
	//printf("USB1_ENDPTCTRL2=%08lX\n", USB1_ENDPTCTRL2);
	//printf("USB1_ENDPTCTRL3=%08lX\n", USB1_ENDPTCTRL3);
	USB1_USBCMD = USB_USBCMD_RS;
60001d60:	2301      	movs	r3, #1
	NVIC_ENABLE_IRQ(IRQ_USB1);
60001d62:	f8c2 110c 	str.w	r1, [r2, #268]	; 0x10c
	USB1_USBCMD = USB_USBCMD_RS;
60001d66:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
	//transfer_log_head = 0;
	//transfer_log_count = 0;
	//USB1_PORTSC1 |= USB_PORTSC1_PFSC; // force 12 Mbit/sec
}
60001d6a:	bd10      	pop	{r4, pc}
60001d6c:	400d8000 	.word	0x400d8000
60001d70:	400fc000 	.word	0x400fc000
60001d74:	402e0000 	.word	0x402e0000
60001d78:	400d9000 	.word	0x400d9000
60001d7c:	001e1c00 	.word	0x001e1c00
60001d80:	20000000 	.word	0x20000000
60001d84:	20002800 	.word	0x20002800
60001d88:	00000b99 	.word	0x00000b99

60001d8c <_reboot_Teensyduino_>:


FLASHMEM __attribute__((noinline)) void _reboot_Teensyduino_(void)
{
60001d8c:	b508      	push	{r3, lr}
	if (!(HW_OCOTP_CFG5 & 0x02)) {
60001d8e:	4b0e      	ldr	r3, [pc, #56]	; (60001dc8 <_reboot_Teensyduino_+0x3c>)
60001d90:	6e1b      	ldr	r3, [r3, #96]	; 0x60
60001d92:	079b      	lsls	r3, r3, #30
60001d94:	d400      	bmi.n	60001d98 <_reboot_Teensyduino_+0xc>
		asm("bkpt #251"); // run bootloader
60001d96:	befb      	bkpt	0x00fb
	} else {
		__disable_irq(); // secure mode NXP ROM reboot
60001d98:	b672      	cpsid	i
		USB1_USBCMD = 0;
60001d9a:	4b0c      	ldr	r3, [pc, #48]	; (60001dcc <_reboot_Teensyduino_+0x40>)
60001d9c:	2000      	movs	r0, #0
		IOMUXC_GPR_GPR16 = 0x00200003;
60001d9e:	4a0c      	ldr	r2, [pc, #48]	; (60001dd0 <_reboot_Teensyduino_+0x44>)
		USB1_USBCMD = 0;
60001da0:	f8c3 0140 	str.w	r0, [r3, #320]	; 0x140
		// TODO: wipe all RAM for security
		__asm__ volatile("mov sp, %0" : : "r" (0x20201000) : );
60001da4:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
		IOMUXC_GPR_GPR16 = 0x00200003;
60001da8:	490a      	ldr	r1, [pc, #40]	; (60001dd4 <_reboot_Teensyduino_+0x48>)
		__asm__ volatile("mov sp, %0" : : "r" (0x20201000) : );
60001daa:	f5a3 235f 	sub.w	r3, r3, #913408	; 0xdf000
		IOMUXC_GPR_GPR16 = 0x00200003;
60001dae:	6411      	str	r1, [r2, #64]	; 0x40
		__asm__ volatile("mov sp, %0" : : "r" (0x20201000) : );
60001db0:	469d      	mov	sp, r3
		__asm__ volatile("dsb":::"memory");
60001db2:	f3bf 8f4f 	dsb	sy
		volatile uint32_t * const p = (uint32_t *)0x20208000;
		*p = 0xEB120000;
		((void (*)(volatile void *))(*(uint32_t *)(*(uint32_t *)0x0020001C + 8)))(p);
60001db6:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
		*p = 0xEB120000;
60001dba:	4807      	ldr	r0, [pc, #28]	; (60001dd8 <_reboot_Teensyduino_+0x4c>)
60001dbc:	4a07      	ldr	r2, [pc, #28]	; (60001ddc <_reboot_Teensyduino_+0x50>)
		((void (*)(volatile void *))(*(uint32_t *)(*(uint32_t *)0x0020001C + 8)))(p);
60001dbe:	69db      	ldr	r3, [r3, #28]
		*p = 0xEB120000;
60001dc0:	6002      	str	r2, [r0, #0]
		((void (*)(volatile void *))(*(uint32_t *)(*(uint32_t *)0x0020001C + 8)))(p);
60001dc2:	689b      	ldr	r3, [r3, #8]
60001dc4:	4798      	blx	r3
	}
	__builtin_unreachable();
60001dc6:	bf00      	nop
60001dc8:	401f4400 	.word	0x401f4400
60001dcc:	402e0000 	.word	0x402e0000
60001dd0:	400ac000 	.word	0x400ac000
60001dd4:	00200003 	.word	0x00200003
60001dd8:	20208000 	.word	0x20208000
60001ddc:	eb120000 	.word	0xeb120000

60001de0 <analog_init>:
{
	uint32_t mode, avg=0;

	printf("analogInit\n");

	CCM_CCGR1 |= CCM_CCGR1_ADC1(CCM_CCGR_ON);
60001de0:	4b10      	ldr	r3, [pc, #64]	; (60001e24 <analog_init+0x44>)
		mode |= ADC_CFG_ADIV(0) | ADC_CFG_ADICLK(0); // use IPG
	}
#endif
	//ADC1
	ADC1_CFG = mode | ADC_CFG_ADHSC;
	ADC1_GC = avg | ADC_GC_CAL;		// begin cal
60001de2:	20a0      	movs	r0, #160	; 0xa0
	ADC1_CFG = mode | ADC_CFG_ADHSC;
60001de4:	4a10      	ldr	r2, [pc, #64]	; (60001e28 <analog_init+0x48>)
	CCM_CCGR1 |= CCM_CCGR1_ADC1(CCM_CCGR_ON);
60001de6:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
60001de8:	f441 3140 	orr.w	r1, r1, #196608	; 0x30000
{
60001dec:	b410      	push	{r4}
	CCM_CCGR1 |= CCM_CCGR1_ADC1(CCM_CCGR_ON);
60001dee:	66d9      	str	r1, [r3, #108]	; 0x6c
	ADC1_CFG = mode | ADC_CFG_ADHSC;
60001df0:	f240 6437 	movw	r4, #1591	; 0x637
	CCM_CCGR1 |= CCM_CCGR1_ADC2(CCM_CCGR_ON);
60001df4:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
60001df6:	f441 7140 	orr.w	r1, r1, #768	; 0x300
60001dfa:	66d9      	str	r1, [r3, #108]	; 0x6c
	ADC1_CFG = mode | ADC_CFG_ADHSC;
60001dfc:	6454      	str	r4, [r2, #68]	; 0x44
	ADC1_GC = avg | ADC_GC_CAL;		// begin cal
60001dfe:	6490      	str	r0, [r2, #72]	; 0x48
	calibrating = 1;
	while (ADC1_GC & ADC_GC_CAL) {
60001e00:	6c93      	ldr	r3, [r2, #72]	; 0x48
60001e02:	061b      	lsls	r3, r3, #24
60001e04:	d4fc      	bmi.n	60001e00 <analog_init+0x20>
		//yield();
	}
	calibrating = 0;
	//ADC2
	ADC2_CFG = mode | ADC_CFG_ADHSC;
60001e06:	4a09      	ldr	r2, [pc, #36]	; (60001e2c <analog_init+0x4c>)
60001e08:	f240 6137 	movw	r1, #1591	; 0x637
	ADC2_GC = avg | ADC_GC_CAL;		// begin cal
60001e0c:	23a0      	movs	r3, #160	; 0xa0
	ADC2_CFG = mode | ADC_CFG_ADHSC;
60001e0e:	6451      	str	r1, [r2, #68]	; 0x44
	ADC2_GC = avg | ADC_GC_CAL;		// begin cal
60001e10:	6493      	str	r3, [r2, #72]	; 0x48
	calibrating = 1;
	while (ADC2_GC & ADC_GC_CAL) {
60001e12:	6c93      	ldr	r3, [r2, #72]	; 0x48
60001e14:	f013 0380 	ands.w	r3, r3, #128	; 0x80
60001e18:	d1fb      	bne.n	60001e12 <analog_init+0x32>
		//yield();
	}
	calibrating = 0;
60001e1a:	4a05      	ldr	r2, [pc, #20]	; (60001e30 <analog_init+0x50>)
60001e1c:	7013      	strb	r3, [r2, #0]
}
60001e1e:	f85d 4b04 	ldr.w	r4, [sp], #4
60001e22:	4770      	bx	lr
60001e24:	400fc000 	.word	0x400fc000
60001e28:	400c4000 	.word	0x400c4000
60001e2c:	400c8000 	.word	0x400c8000
60001e30:	200030b2 	.word	0x200030b2

60001e34 <_init>:
60001e34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
60001e36:	bf00      	nop
60001e38:	bcf8      	pop	{r3, r4, r5, r6, r7}
60001e3a:	bc08      	pop	{r3}
60001e3c:	469e      	mov	lr, r3
60001e3e:	4770      	bx	lr

60001e40 <__delay_veneer>:
60001e40:	f85f f000 	ldr.w	pc, [pc]	; 60001e44 <__delay_veneer+0x4>
60001e44:	00000431 	.word	0x00000431

60001e48 <__pwm_init_veneer>:
60001e48:	f85f f000 	ldr.w	pc, [pc]	; 60001e4c <__pwm_init_veneer+0x4>
60001e4c:	00001f81 	.word	0x00001f81

60001e50 <__memset_veneer>:
60001e50:	f85f f000 	ldr.w	pc, [pc]	; 60001e54 <__memset_veneer+0x4>
60001e54:	0000cbd5 	.word	0x0000cbd5

60001e58 <____libc_init_array_veneer>:
60001e58:	f85f f000 	ldr.w	pc, [pc]	; 60001e5c <____libc_init_array_veneer+0x4>
60001e5c:	0000ccd1 	.word	0x0000ccd1

60001e60 <__set_arm_clock_veneer>:
60001e60:	f85f f000 	ldr.w	pc, [pc]	; 60001e64 <__set_arm_clock_veneer+0x4>
60001e64:	00001c15 	.word	0x00001c15

60001e68 <__main_veneer>:
60001e68:	f85f f000 	ldr.w	pc, [pc]	; 60001e6c <__main_veneer+0x4>
60001e6c:	00000615 	.word	0x00000615

60001e70 <__usb_init_serialnumber_veneer>:
60001e70:	f85f f000 	ldr.w	pc, [pc]	; 60001e74 <__usb_init_serialnumber_veneer+0x4>
60001e74:	00001309 	.word	0x00001309

60001e78 <__sm_set_pool_veneer>:
60001e78:	f85f f000 	ldr.w	pc, [pc]	; 60001e7c <__sm_set_pool_veneer+0x4>
60001e7c:	000020e5 	.word	0x000020e5

60001e80 <__frame_dummy_init_array_entry>:
60001e80:	00000045 0000032d 0000235d              E...-...]#..

Disassembly of section .text.itcm:

00000000 <_stext>:
	...

00000020 <register_tm_clones>:
	while (SNVS_HPCR & SNVS_HPCR_RTC_EN); // wait
	// stop the SRTC
	SNVS_LPCR &= ~SNVS_LPCR_SRTC_ENV;
	while (SNVS_LPCR & SNVS_LPCR_SRTC_ENV); // wait
	// set the SRTC
	SNVS_LPSRTCLR = t << 15;
      20:	4805      	ldr	r0, [pc, #20]	; (38 <_teensy_model_identifier+0x13>)
	SNVS_LPSRTCMR = t >> 17;
	// start the SRTC
	SNVS_LPCR |= SNVS_LPCR_SRTC_ENV;
	while (!(SNVS_LPCR & SNVS_LPCR_SRTC_ENV)); // wait
      22:	4b06      	ldr	r3, [pc, #24]	; (3c <_teensy_model_identifier+0x17>)
	SNVS_LPSRTCMR = t >> 17;
      24:	1a1b      	subs	r3, r3, r0
	SNVS_LPSRTCLR = t << 15;
      26:	0fd9      	lsrs	r1, r3, #31
	SNVS_LPSRTCMR = t >> 17;
      28:	eb01 01a3 	add.w	r1, r1, r3, asr #2
	SNVS_LPCR |= SNVS_LPCR_SRTC_ENV;
      2c:	1049      	asrs	r1, r1, #1
      2e:	d002      	beq.n	36 <_teensy_model_identifier+0x11>
      30:	4b03      	ldr	r3, [pc, #12]	; (40 <_teensy_model_identifier+0x1b>)
	while (!(SNVS_LPCR & SNVS_LPCR_SRTC_ENV)); // wait
      32:	b103      	cbz	r3, 36 <_teensy_model_identifier+0x11>
      34:	4718      	bx	r3
      36:	4770      	bx	lr
	// start the RTC and sync it to the SRTC
	SNVS_HPCR |= SNVS_HPCR_RTC_EN | SNVS_HPCR_HP_TS;
      38:	20002ac0 	.word	0x20002ac0
      3c:	20002ac0 	.word	0x20002ac0
}
      40:	00000000 	.word	0x00000000

00000044 <frame_dummy>:
      44:	b508      	push	{r3, lr}
      46:	4b05      	ldr	r3, [pc, #20]	; (5c <frame_dummy+0x18>)
		return 0;
	}

	if (!new_pool || !new_pool_size) {
		if (smalloc_verify_pool(spool)) {
			if (spool->do_zero) memset(spool->pool, 0, spool->pool_size);
      48:	b11b      	cbz	r3, 52 <frame_dummy+0xe>
      4a:	4905      	ldr	r1, [pc, #20]	; (60 <frame_dummy+0x1c>)
      4c:	4805      	ldr	r0, [pc, #20]	; (64 <frame_dummy+0x20>)
      4e:	f3af 8000 	nop.w
{
	if (mult < 1 || mult > 3) return;
	uint32_t config = (packet_size << 16) | (mult << 30);
	if (ep < 2 || ep > NUM_ENDPOINTS) return;
	usb_endpoint_config(endpoint_queue_head + ep * 2 + 1, config, cb);
	if (cb) endpointN_notify_mask |= (1 << (ep + 16));
      52:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      56:	f7ff bfe3 	b.w	20 <register_tm_clones>
      5a:	bf00      	nop
      5c:	00000000 	.word	0x00000000
}
      60:	20003018 	.word	0x20003018
      64:	60016800 	.word	0x60016800

00000068 <std::vector<int, std::allocator<int> >::~vector()>:
       *  The dtor only erases the elements, and note that if the
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      ~vector() _GLIBCXX_NOEXCEPT
      68:	b510      	push	{r4, lr}
      6a:	4604      	mov	r4, r0
	_M_deallocate(_M_impl._M_start,
      6c:	6800      	ldr	r0, [r0, #0]
	if (__p)
      6e:	b118      	cbz	r0, 78 <std::vector<int, std::allocator<int> >::~vector()+0x10>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
      70:	68a1      	ldr	r1, [r4, #8]
# endif
			      std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	::operator delete(__p
      72:	1a09      	subs	r1, r1, r0
      74:	f000 fb74 	bl	760 <operator delete(void*, unsigned int)>
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
      78:	4620      	mov	r0, r4
      7a:	bd10      	pop	{r4, pc}

0000007c <toeplitz_extraction(std::vector<int, std::allocator<int> > const&)>:
//tested on windows (meh, i know) using arduino IDE, needs implemintation for mac/linux
//BTW!!! filename and foldername needs to be same if using arduino IDE

vector<int> raw_bits;

vector<int> toeplitz_extraction(const vector<int>& raw_bits) {
      7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
      80:	4604      	mov	r4, r0
	: _M_start(), _M_finish(), _M_end_of_storage()
      82:	2500      	movs	r5, #0
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      84:	2080      	movs	r0, #128	; 0x80
      86:	460f      	mov	r7, r1
      88:	60a5      	str	r5, [r4, #8]
      8a:	e9c4 5500 	strd	r5, r5, [r4]
      8e:	f000 fb63 	bl	758 <operator new(unsigned int)>
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
      92:	f100 0880 	add.w	r8, r0, #128	; 0x80
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
	      const _Tp& __value)
    {
      const _Tp __tmp = __value;
      for (; __first != __last; ++__first)
	*__first = __tmp;
      96:	4629      	mov	r1, r5
      98:	2280      	movs	r2, #128	; 0x80
      9a:	f8c4 8008 	str.w	r8, [r4, #8]
      9e:	4606      	mov	r6, r0
	this->_M_impl._M_start = this->_M_allocate(__n);
      a0:	6020      	str	r0, [r4, #0]
      a2:	f00c fd97 	bl	cbd4 <memset>
      a6:	4d13      	ldr	r5, [pc, #76]	; (f4 <toeplitz_extraction(std::vector<int, std::allocator<int> > const&)+0x78>)
       */
      const_reference
      operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      {
	__glibcxx_requires_subscript(__n);
	return *(this->_M_impl._M_start + __n);
      a8:	683b      	ldr	r3, [r7, #0]
      aa:	3e04      	subs	r6, #4
      // Called by the first initialize_dispatch above and by the
      // vector(n,value,a) constructor.
      void
      _M_fill_initialize(size_type __n, const value_type& __value)
      {
	this->_M_impl._M_finish =
      ac:	f8c4 8004 	str.w	r8, [r4, #4]
	return *(this->_M_impl._M_start + __n);
      b0:	2101      	movs	r1, #1
      b2:	f105 087c 	add.w	r8, r5, #124	; 0x7c
      b6:	1f1f      	subs	r7, r3, #4
      b8:	f103 0efc 	add.w	lr, r3, #252	; 0xfc
  vector<int> output(OUTPUT_LEN, 0);
  for (size_t i = 0; i < OUTPUT_LEN; i++) {
    int sum = 0;
    for (size_t j = 0; j < RAW_BITS_LEN; j++) {
      bc:	463b      	mov	r3, r7
vector<int> toeplitz_extraction(const vector<int>& raw_bits) {
      be:	46ac      	mov	ip, r5
    int sum = 0;
      c0:	2200      	movs	r2, #0
      c2:	e001      	b.n	c8 <toeplitz_extraction(std::vector<int, std::allocator<int> > const&)+0x4c>
      sum += raw_bits[j] * seed_bits[i + j];
      c4:	f85c 1f04 	ldr.w	r1, [ip, #4]!
      c8:	f853 0f04 	ldr.w	r0, [r3, #4]!
    for (size_t j = 0; j < RAW_BITS_LEN; j++) {
      cc:	459e      	cmp	lr, r3
      sum += raw_bits[j] * seed_bits[i + j];
      ce:	fb00 2201 	mla	r2, r0, r1, r2
    for (size_t j = 0; j < RAW_BITS_LEN; j++) {
      d2:	d1f7      	bne.n	c4 <toeplitz_extraction(std::vector<int, std::allocator<int> > const&)+0x48>
    }
    output[i] = sum % 2;
      d4:	2a00      	cmp	r2, #0
      d6:	f002 0201 	and.w	r2, r2, #1
      da:	bfb8      	it	lt
      dc:	4252      	neglt	r2, r2
  for (size_t i = 0; i < OUTPUT_LEN; i++) {
      de:	4545      	cmp	r5, r8
    output[i] = sum % 2;
      e0:	f846 2f04 	str.w	r2, [r6, #4]!
  for (size_t i = 0; i < OUTPUT_LEN; i++) {
      e4:	d002      	beq.n	ec <toeplitz_extraction(std::vector<int, std::allocator<int> > const&)+0x70>
      sum += raw_bits[j] * seed_bits[i + j];
      e6:	f855 1f04 	ldr.w	r1, [r5, #4]!
      ea:	e7e7      	b.n	bc <toeplitz_extraction(std::vector<int, std::allocator<int> > const&)+0x40>
  }
  return output;
}
      ec:	4620      	mov	r0, r4
      ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      f2:	bf00      	nop
      f4:	200003b0 	.word	0x200003b0

000000f8 <setup>:

void setup() {
      f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	// is always initialized early during startup.  The baud rate setting
	// is not used.  Communication occurs at USB native speed.  For
	// compatibility with Arduino code, Serial.begin waits up to 2 seconds
	// for your PC to open the virtual serial port.
        void begin(long baud_unused __attribute__((unused))) {
		uint32_t millis_begin = systick_millis_count;
      fc:	4d1c      	ldr	r5, [pc, #112]	; (170 <setup+0x78>)
				// Wait up to 2 seconds for Arduino Serial Monitor
				if (elapsed > 2000) break;
			} else {
				// But wait only 3/4 second if there is no sign the
				// USB host has begun the USB enumeration process.
				if (elapsed > 750) break;
      fe:	f240 28ee 	movw	r8, #750	; 0x2ee
     102:	4c1c      	ldr	r4, [pc, #112]	; (174 <setup+0x7c>)
     104:	4f1c      	ldr	r7, [pc, #112]	; (178 <setup+0x80>)
     106:	f8df 9074 	ldr.w	r9, [pc, #116]	; 17c <setup+0x84>
		uint32_t millis_begin = systick_millis_count;
     10a:	682e      	ldr	r6, [r5, #0]
        uint8_t rts(void) { return (usb_cdc_line_rtsdtr & USB_SERIAL_RTS) ? 1 : 0; }
	// Testing Serial as a boolean indicates whether USB is active and a program
	// running on your PC has raised the DTR signal, which typically means it has
	// opened the port and is ready to communicate.
        operator bool() {
		yield();
     10c:	f001 fce2 	bl	1ad4 <yield>
		return usb_configuration && (usb_cdc_line_rtsdtr & USB_SERIAL_DTR) &&
     110:	7823      	ldrb	r3, [r4, #0]
     112:	b303      	cbz	r3, 156 <setup+0x5e>
     114:	783b      	ldrb	r3, [r7, #0]
     116:	07da      	lsls	r2, r3, #31
     118:	d51d      	bpl.n	156 <setup+0x5e>
		((uint32_t)(systick_millis_count - usb_cdc_line_rtsdtr_millis) >= 15);
     11a:	682b      	ldr	r3, [r5, #0]
     11c:	f8d9 2000 	ldr.w	r2, [r9]
     120:	1a9b      	subs	r3, r3, r2
		return usb_configuration && (usb_cdc_line_rtsdtr & USB_SERIAL_DTR) &&
     122:	2b0e      	cmp	r3, #14
     124:	d917      	bls.n	156 <setup+0x5e>
  SERIAL_MAIN.begin(115200);
  pinMode(LED_PIN, OUTPUT);
     126:	2101      	movs	r1, #1
     128:	200d      	movs	r0, #13
     12a:	f000 fa3b 	bl	5a4 <pinMode>
  digitalWrite(LED_PIN, HIGH);
     12e:	2101      	movs	r1, #1
     130:	200d      	movs	r0, #13
     132:	f000 f9fb 	bl	52c <digitalWrite>
		yield();
     136:	f001 fccd 	bl	1ad4 <yield>
		return usb_configuration && (usb_cdc_line_rtsdtr & USB_SERIAL_DTR) &&
     13a:	7823      	ldrb	r3, [r4, #0]
     13c:	2b00      	cmp	r3, #0
     13e:	d0fa      	beq.n	136 <setup+0x3e>
     140:	783b      	ldrb	r3, [r7, #0]
     142:	07db      	lsls	r3, r3, #31
     144:	d5f7      	bpl.n	136 <setup+0x3e>
		((uint32_t)(systick_millis_count - usb_cdc_line_rtsdtr_millis) >= 15);
     146:	682b      	ldr	r3, [r5, #0]
     148:	f8d9 2000 	ldr.w	r2, [r9]
     14c:	1a9b      	subs	r3, r3, r2
		return usb_configuration && (usb_cdc_line_rtsdtr & USB_SERIAL_DTR) &&
     14e:	2b0e      	cmp	r3, #14
     150:	d9f1      	bls.n	136 <setup+0x3e>
  while (!SERIAL_MAIN);
  //SERIAL_MAIN.println("[" MCU_NAME "] Streaming Toeplitz extractor ready.");

  //SERIAL_MAIN.println("Starting harvesting seed...");
  //while(!harvest_seed());
}
     152:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
			uint32_t elapsed = systick_millis_count - millis_begin;
     156:	682b      	ldr	r3, [r5, #0]
			if (usb_configuration) {
     158:	7822      	ldrb	r2, [r4, #0]
			uint32_t elapsed = systick_millis_count - millis_begin;
     15a:	1b9b      	subs	r3, r3, r6
			if (usb_configuration) {
     15c:	b12a      	cbz	r2, 16a <setup+0x72>
				if (elapsed > 2000) break;
     15e:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
     162:	d8e0      	bhi.n	126 <setup+0x2e>
			yield();
     164:	f001 fcb6 	bl	1ad4 <yield>
     168:	e7d0      	b.n	10c <setup+0x14>
				if (elapsed > 750) break;
     16a:	4543      	cmp	r3, r8
     16c:	d9fa      	bls.n	164 <setup+0x6c>
     16e:	e7da      	b.n	126 <setup+0x2e>
     170:	2000308c 	.word	0x2000308c
     174:	200030bb 	.word	0x200030bb
     178:	200030ba 	.word	0x200030ba
     17c:	2000309c 	.word	0x2000309c

00000180 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      void
      vector<_Tp, _Alloc>::
     180:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
     184:	e9d0 8900 	ldrd	r8, r9, [r0]
     188:	460f      	mov	r7, r1
     18a:	4692      	mov	sl, r2

      // Called by _M_fill_insert, _M_insert_aux etc.
      size_type
      _M_check_len(size_type __n, const char* __s) const
      {
	if (max_size() - size() < __n)
     18c:	f06f 4160 	mvn.w	r1, #3758096384	; 0xe0000000
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
     190:	eba9 0208 	sub.w	r2, r9, r8
	if (max_size() - size() < __n)
     194:	ebb1 0fa2 	cmp.w	r1, r2, asr #2
     198:	d054      	beq.n	244 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0xc4>
     19a:	1093      	asrs	r3, r2, #2
     19c:	4606      	mov	r6, r0
    _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
     19e:	eba7 0508 	sub.w	r5, r7, r8
     1a2:	2b01      	cmp	r3, #1
     1a4:	461a      	mov	r2, r3
     1a6:	bf38      	it	cc
     1a8:	2201      	movcc	r2, #1
     1aa:	189c      	adds	r4, r3, r2
     1ac:	d248      	bcs.n	240 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0xc0>
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
     1ae:	2c00      	cmp	r4, #0
     1b0:	d13c      	bne.n	22c <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0xac>
     1b2:	46a3      	mov	fp, r4
#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
     1b4:	f8da 3000 	ldr.w	r3, [sl]
    inline __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*>
    __relocate_a_1(_Tp* __first, _Tp* __last,
		   _Tp* __result, allocator<_Up>&) noexcept
    {
      ptrdiff_t __count = __last - __first;
      if (__count > 0)
     1b8:	2d00      	cmp	r5, #0
     1ba:	f84b 3005 	str.w	r3, [fp, r5]
     1be:	dc24      	bgt.n	20a <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x8a>
      ptrdiff_t __count = __last - __first;
     1c0:	eba9 0907 	sub.w	r9, r9, r7
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());

	      ++__new_finish;
     1c4:	3504      	adds	r5, #4
      if (__count > 0)
     1c6:	f1b9 0f00 	cmp.w	r9, #0
     1ca:	445d      	add	r5, fp
     1cc:	dc13      	bgt.n	1f6 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x76>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
      return __result + __count;
     1ce:	444d      	add	r5, r9
	if (__p)
     1d0:	f1b8 0f00 	cmp.w	r8, #0
     1d4:	d104      	bne.n	1e0 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x60>
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
		    this->_M_impl._M_end_of_storage - __old_start);
      this->_M_impl._M_start = __new_start;
      this->_M_impl._M_finish = __new_finish;
      this->_M_impl._M_end_of_storage = __new_start + __len;
     1d6:	60b4      	str	r4, [r6, #8]
      this->_M_impl._M_finish = __new_finish;
     1d8:	e9c6 b500 	strd	fp, r5, [r6]
    }
     1dc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
		    this->_M_impl._M_end_of_storage - __old_start);
     1e0:	68b1      	ldr	r1, [r6, #8]
     1e2:	eba1 0108 	sub.w	r1, r1, r8
	::operator delete(__p
     1e6:	4640      	mov	r0, r8
     1e8:	f000 faba 	bl	760 <operator delete(void*, unsigned int)>
      this->_M_impl._M_end_of_storage = __new_start + __len;
     1ec:	60b4      	str	r4, [r6, #8]
      this->_M_impl._M_finish = __new_finish;
     1ee:	e9c6 b500 	strd	fp, r5, [r6]
    }
     1f2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
     1f6:	4628      	mov	r0, r5
     1f8:	4639      	mov	r1, r7
     1fa:	464a      	mov	r2, r9
      return __result + __count;
     1fc:	444d      	add	r5, r9
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
     1fe:	f000 fa11 	bl	624 <memcpy>
     202:	f1b8 0f00 	cmp.w	r8, #0
     206:	d0e6      	beq.n	1d6 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x56>
     208:	e7ea      	b.n	1e0 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x60>
      ptrdiff_t __count = __last - __first;
     20a:	eba9 0907 	sub.w	r9, r9, r7
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
     20e:	462a      	mov	r2, r5
     210:	4641      	mov	r1, r8
     212:	4658      	mov	r0, fp
	      ++__new_finish;
     214:	3504      	adds	r5, #4
     216:	f00c fc41 	bl	ca9c <memmove>
      if (__count > 0)
     21a:	f1b9 0f00 	cmp.w	r9, #0
     21e:	445d      	add	r5, fp
     220:	dce9      	bgt.n	1f6 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x76>
		    this->_M_impl._M_end_of_storage - __old_start);
     222:	68b1      	ldr	r1, [r6, #8]
      return __result + __count;
     224:	444d      	add	r5, r9
     226:	eba1 0108 	sub.w	r1, r1, r8
      _M_deallocate(pointer __p, size_t __n)
     22a:	e7dc      	b.n	1e6 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x66>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
     22c:	428c      	cmp	r4, r1
     22e:	bf28      	it	cs
     230:	460c      	movcs	r4, r1
     232:	00a4      	lsls	r4, r4, #2
     234:	4620      	mov	r0, r4
     236:	f000 fa8f 	bl	758 <operator new(unsigned int)>
     23a:	4683      	mov	fp, r0
      this->_M_impl._M_end_of_storage = __new_start + __len;
     23c:	4404      	add	r4, r0
     23e:	e7b9      	b.n	1b4 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x34>
     240:	4c02      	ldr	r4, [pc, #8]	; (24c <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0xcc>)
     242:	e7f7      	b.n	234 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0xb4>
	  __throw_length_error(__N(__s));
     244:	4802      	ldr	r0, [pc, #8]	; (250 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0xd0>)
     246:	f001 ffbd 	bl	21c4 <std::__throw_length_error(char const*)>
     24a:	bf00      	nop
     24c:	7ffffffc 	.word	0x7ffffffc
     250:	20000628 	.word	0x20000628

00000254 <loop>:

void loop() {
     254:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     258:	b084      	sub	sp, #16
        virtual int available() { return usb_serial_available(); }
     25a:	f001 fb53 	bl	1904 <usb_serial_available>

  if (SERIAL_MAIN.available()) {
     25e:	b910      	cbnz	r0, 266 <loop+0x12>
      SERIAL_MAIN.print(time);
      raw_bits.clear();
      digitalWrite(LED_PIN, !digitalRead(LED_PIN));
    }
  }
}
     260:	b004      	add	sp, #16
     262:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        virtual int read() { return usb_serial_getchar(); }
     266:	f001 fb91 	bl	198c <usb_serial_getchar>
    if (c == '0' || c == '1') {
     26a:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
     26e:	4d2b      	ldr	r5, [pc, #172]	; (31c <loop+0xc8>)
     270:	b2db      	uxtb	r3, r3
     272:	2b01      	cmp	r3, #1
     274:	d942      	bls.n	2fc <loop+0xa8>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
     276:	6869      	ldr	r1, [r5, #4]
     278:	682b      	ldr	r3, [r5, #0]
     27a:	1ac9      	subs	r1, r1, r3
    if (raw_bits.size() == RAW_BITS_LEN) {
     27c:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
     280:	d1ee      	bne.n	260 <loop+0xc>
      unsigned long start = micros();
     282:	f000 f929 	bl	4d8 <micros>
      vector<int> result = toeplitz_extraction(raw_bits);
     286:	4925      	ldr	r1, [pc, #148]	; (31c <loop+0xc8>)
      unsigned long start = micros();
     288:	4604      	mov	r4, r0
      vector<int> result = toeplitz_extraction(raw_bits);
     28a:	a801      	add	r0, sp, #4
     28c:	f7ff fef6 	bl	7c <toeplitz_extraction(std::vector<int, std::allocator<int> > const&)>
      unsigned long time = micros() - start;
     290:	f000 f922 	bl	4d8 <micros>
     294:	4680      	mov	r8, r0
        virtual size_t write(const uint8_t *buffer, size_t size) { return usb_serial_write(buffer, size); }
     296:	2104      	movs	r1, #4
     298:	4821      	ldr	r0, [pc, #132]	; (320 <loop+0xcc>)
     29a:	f001 fb9d 	bl	19d8 <usb_serial_write>
     29e:	eba8 0804 	sub.w	r8, r8, r4
      : _M_current(__i) { }
     2a2:	e9dd 4601 	ldrd	r4, r6, [sp, #4]
      for (int b : result) {
     2a6:	42a6      	cmp	r6, r4
     2a8:	d007      	beq.n	2ba <loop+0x66>
	// Print a string
	size_t print(const __FlashStringHelper *f)	{ return write((const char *)f); }
	// Print an unsigned number
	size_t print(uint8_t b)				{ return printNumber(b, 10, 0); }
	// Print a signed number
	size_t print(int n)				{ return print((long)n); }
     2aa:	4f1e      	ldr	r7, [pc, #120]	; (324 <loop+0xd0>)
     2ac:	f854 1b04 	ldr.w	r1, [r4], #4
     2b0:	4638      	mov	r0, r7
     2b2:	f000 f88f 	bl	3d4 <Print::print(long)>
     2b6:	42a6      	cmp	r6, r4
     2b8:	d1f8      	bne.n	2ac <loop+0x58>
     2ba:	2106      	movs	r1, #6
     2bc:	481a      	ldr	r0, [pc, #104]	; (328 <loop+0xd4>)
     2be:	f001 fb8b 	bl	19d8 <usb_serial_write>
	// Print an unsigned number
	size_t print(unsigned int n)			{ return printNumber(n, 10, 0); }
	// Print a signed number
	size_t print(long n);
	// Print an unsigned number
	size_t print(unsigned long n)			{ return printNumber(n, 10, 0); }
     2c2:	2300      	movs	r3, #0
     2c4:	220a      	movs	r2, #10
     2c6:	4641      	mov	r1, r8
     2c8:	4816      	ldr	r0, [pc, #88]	; (324 <loop+0xd0>)
     2ca:	f000 f89d 	bl	408 <Print::printNumber(unsigned long, unsigned char, unsigned char)>
      // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
      // _M_assign_aux.
      void
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
      {
	if (size_type __n = this->_M_impl._M_finish - __pos)
     2ce:	e9d5 3200 	ldrd	r3, r2, [r5]
     2d2:	4293      	cmp	r3, r2
     2d4:	d000      	beq.n	2d8 <loop+0x84>
	  {
	    std::_Destroy(__pos, this->_M_impl._M_finish,
			  _M_get_Tp_allocator());
	    this->_M_impl._M_finish = __pos;
     2d6:	606b      	str	r3, [r5, #4]
      digitalWrite(LED_PIN, !digitalRead(LED_PIN));
     2d8:	200d      	movs	r0, #13
     2da:	f000 f951 	bl	580 <digitalRead>
     2de:	4601      	mov	r1, r0
     2e0:	200d      	movs	r0, #13
     2e2:	fab1 f181 	clz	r1, r1
     2e6:	0949      	lsrs	r1, r1, #5
     2e8:	f000 f920 	bl	52c <digitalWrite>
	_M_deallocate(_M_impl._M_start,
     2ec:	9801      	ldr	r0, [sp, #4]
	if (__p)
     2ee:	2800      	cmp	r0, #0
     2f0:	d0b6      	beq.n	260 <loop+0xc>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
     2f2:	9903      	ldr	r1, [sp, #12]
	::operator delete(__p
     2f4:	1a09      	subs	r1, r1, r0
     2f6:	f000 fa33 	bl	760 <operator delete(void*, unsigned int)>
}
     2fa:	e7b1      	b.n	260 <loop+0xc>
      raw_bits.push_back(c - '0');
     2fc:	b2c0      	uxtb	r0, r0
     2fe:	6869      	ldr	r1, [r5, #4]
     300:	68ab      	ldr	r3, [r5, #8]
     302:	3830      	subs	r0, #48	; 0x30
     304:	4299      	cmp	r1, r3
     306:	9001      	str	r0, [sp, #4]
     308:	d003      	beq.n	312 <loop+0xbe>
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
     30a:	f841 0b04 	str.w	r0, [r1], #4
	    ++this->_M_impl._M_finish;
     30e:	6069      	str	r1, [r5, #4]
     310:	e7b2      	b.n	278 <loop+0x24>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
     312:	aa01      	add	r2, sp, #4
     314:	4628      	mov	r0, r5
     316:	f7ff ff33 	bl	180 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)>
     31a:	e7ac      	b.n	276 <loop+0x22>
     31c:	20003030 	.word	0x20003030
     320:	2000192c 	.word	0x2000192c
     324:	20002148 	.word	0x20002148
     328:	20001934 	.word	0x20001934

0000032c <_GLOBAL__sub_I_raw_bits>:
	: _M_start(), _M_finish(), _M_end_of_storage()
     32c:	4804      	ldr	r0, [pc, #16]	; (340 <_GLOBAL__sub_I_raw_bits+0x14>)
     32e:	2300      	movs	r3, #0
vector<int> raw_bits;
     330:	4a04      	ldr	r2, [pc, #16]	; (344 <_GLOBAL__sub_I_raw_bits+0x18>)
     332:	4905      	ldr	r1, [pc, #20]	; (348 <_GLOBAL__sub_I_raw_bits+0x1c>)
     334:	6083      	str	r3, [r0, #8]
     336:	e9c0 3300 	strd	r3, r3, [r0]
     33a:	f001 bf15 	b.w	2168 <__aeabi_atexit>
     33e:	bf00      	nop
     340:	20003030 	.word	0x20003030
     344:	20002168 	.word	0x20002168
     348:	00000069 	.word	0x00000069

0000034c <usb_serial_class::write(unsigned char)>:
        virtual size_t write(uint8_t c) { return usb_serial_putchar(c); }
     34c:	4608      	mov	r0, r1
     34e:	f001 bb2d 	b.w	19ac <usb_serial_putchar>
     352:	bf00      	nop

00000354 <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]>:
	// almost always a constant.  base = 0 (BYTE) should
	// inline as a call directly to write()
	if (base == 0) {
		return write((uint8_t)n);
	} else if (base == 1) {
		base = 10;
     354:	2a01      	cmp	r2, #1
size_t Print::printNumber(unsigned long n, uint8_t base, uint8_t sign)
     356:	b570      	push	{r4, r5, r6, lr}
		base = 10;
     358:	bf08      	it	eq
     35a:	220a      	moveq	r2, #10
size_t Print::printNumber(unsigned long n, uint8_t base, uint8_t sign)
     35c:	b08a      	sub	sp, #40	; 0x28
	}


	if (n == 0) {
     35e:	b391      	cbz	r1, 3c6 <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]+0x72>
		buf[sizeof(buf) - 1] = '0';
		i = sizeof(buf) - 1;
	} else {
		i = sizeof(buf) - 1;
     360:	f04f 0e21 	mov.w	lr, #33	; 0x21
     364:	e001      	b.n	36a <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]+0x16>
		while (1) {
			digit = n % base;
			buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
			n /= base;
			if (n == 0) break;
			i--;
     366:	fa5f fe86 	uxtb.w	lr, r6
     36a:	f10e 36ff 	add.w	r6, lr, #4294967295	; 0xffffffff
			digit = n % base;
     36e:	fbb1 f5f2 	udiv	r5, r1, r2
     372:	fb02 1415 	mls	r4, r2, r5, r1
     376:	fa5f fc84 	uxtb.w	ip, r4
			buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
     37a:	2c09      	cmp	r4, #9
     37c:	f10c 0437 	add.w	r4, ip, #55	; 0x37
     380:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
     384:	bf98      	it	ls
     386:	fa5f f48c 	uxtbls.w	r4, ip
     38a:	f10e 0c28 	add.w	ip, lr, #40	; 0x28
     38e:	bf88      	it	hi
     390:	b2e4      	uxtbhi	r4, r4
			if (n == 0) break;
     392:	4291      	cmp	r1, r2
			buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
     394:	44ec      	add	ip, sp
			n /= base;
     396:	4629      	mov	r1, r5
			buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
     398:	f80c 4c24 	strb.w	r4, [ip, #-36]
			if (n == 0) break;
     39c:	d2e3      	bcs.n	366 <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]+0x12>
		}
	}
	if (sign) {
     39e:	b14b      	cbz	r3, 3b4 <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]+0x60>
		i--;
     3a0:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
		buf[i] = '-';
     3a4:	222d      	movs	r2, #45	; 0x2d
		i--;
     3a6:	fa5f fe8e 	uxtb.w	lr, lr
		buf[i] = '-';
     3aa:	f10e 0328 	add.w	r3, lr, #40	; 0x28
     3ae:	446b      	add	r3, sp
     3b0:	f803 2c24 	strb.w	r2, [r3, #-36]
	}
	return write(buf + i, sizeof(buf) - i);
     3b4:	6803      	ldr	r3, [r0, #0]
     3b6:	a901      	add	r1, sp, #4
     3b8:	f1ce 0222 	rsb	r2, lr, #34	; 0x22
     3bc:	685b      	ldr	r3, [r3, #4]
     3be:	4471      	add	r1, lr
     3c0:	4798      	blx	r3
}
     3c2:	b00a      	add	sp, #40	; 0x28
     3c4:	bd70      	pop	{r4, r5, r6, pc}
		buf[sizeof(buf) - 1] = '0';
     3c6:	2230      	movs	r2, #48	; 0x30
		i = sizeof(buf) - 1;
     3c8:	f04f 0e21 	mov.w	lr, #33	; 0x21
		buf[sizeof(buf) - 1] = '0';
     3cc:	f88d 2025 	strb.w	r2, [sp, #37]	; 0x25
		i = sizeof(buf) - 1;
     3d0:	e7e5      	b.n	39e <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]+0x4a>
     3d2:	bf00      	nop

000003d4 <Print::print(long)>:
	if (n < 0) {
     3d4:	2900      	cmp	r1, #0
     3d6:	db03      	blt.n	3e0 <Print::print(long)+0xc>
	uint8_t sign=0;
     3d8:	2300      	movs	r3, #0
	if (base == 0) {
     3da:	220a      	movs	r2, #10
     3dc:	f7ff bfba 	b.w	354 <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]>
		n = -n;
     3e0:	4249      	negs	r1, r1
		sign = '-';
     3e2:	232d      	movs	r3, #45	; 0x2d
	if (base == 0) {
     3e4:	220a      	movs	r2, #10
     3e6:	f7ff bfb5 	b.w	354 <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]>
     3ea:	bf00      	nop

000003ec <_write>:
	return ((class Print *)file)->write((uint8_t *)ptr, len);
     3ec:	4b05      	ldr	r3, [pc, #20]	; (404 <_write+0x18>)
     3ee:	2802      	cmp	r0, #2
     3f0:	bf88      	it	hi
     3f2:	4603      	movhi	r3, r0
{
     3f4:	b410      	push	{r4}
	return ((class Print *)file)->write((uint8_t *)ptr, len);
     3f6:	681c      	ldr	r4, [r3, #0]
     3f8:	4618      	mov	r0, r3
     3fa:	6863      	ldr	r3, [r4, #4]
}
     3fc:	f85d 4b04 	ldr.w	r4, [sp], #4
	return ((class Print *)file)->write((uint8_t *)ptr, len);
     400:	4718      	bx	r3
     402:	bf00      	nop
     404:	20002148 	.word	0x20002148

00000408 <Print::printNumber(unsigned long, unsigned char, unsigned char)>:
	if (base == 0) {
     408:	b95a      	cbnz	r2, 422 <Print::printNumber(unsigned long, unsigned char, unsigned char)+0x1a>
		return write((uint8_t)n);
     40a:	6803      	ldr	r3, [r0, #0]
     40c:	b2c9      	uxtb	r1, r1
     40e:	4a07      	ldr	r2, [pc, #28]	; (42c <Print::printNumber(unsigned long, unsigned char, unsigned char)+0x24>)
     410:	681b      	ldr	r3, [r3, #0]
     412:	4293      	cmp	r3, r2
{
     414:	b500      	push	{lr}
     416:	d106      	bne.n	426 <Print::printNumber(unsigned long, unsigned char, unsigned char)+0x1e>
     418:	4608      	mov	r0, r1
}
     41a:	f85d eb04 	ldr.w	lr, [sp], #4
     41e:	f001 bac5 	b.w	19ac <usb_serial_putchar>
     422:	f7ff bf97 	b.w	354 <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]>
     426:	f85d eb04 	ldr.w	lr, [sp], #4
		return write((uint8_t)n);
     42a:	4718      	bx	r3
     42c:	0000034d 	.word	0x0000034d

00000430 <delay>:
// or delayNanoseconds().
void delay(uint32_t msec)
{
	uint32_t start;

	if (msec == 0) return;
     430:	b900      	cbnz	r0, 434 <delay+0x4>
     432:	4770      	bx	lr
{
     434:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
     438:	2101      	movs	r1, #1
     43a:	4681      	mov	r9, r0
     43c:	4c21      	ldr	r4, [pc, #132]	; (4c4 <delay+0x94>)
     43e:	4d22      	ldr	r5, [pc, #136]	; (4c8 <delay+0x98>)
     440:	4e22      	ldr	r6, [pc, #136]	; (4cc <delay+0x9c>)
   __ASM volatile ("ldrex %0, [%1]" : "=r" (result) : "r" (addr) );
     442:	e854 3f00 	ldrex	r3, [r4]
uint32_t micros(void)
{
	uint32_t smc, scc;
	do {
		__LDREXW(&systick_safe_read);
		smc = systick_millis_count;
     446:	682a      	ldr	r2, [r5, #0]
		scc = systick_cycle_count;
     448:	6830      	ldr	r0, [r6, #0]
   __ASM volatile ("strex %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
     44a:	e844 1300 	strex	r3, r1, [r4]
	} while ( __STREXW(1, &systick_safe_read));
     44e:	2b00      	cmp	r3, #0
     450:	d1f7      	bne.n	442 <delay+0x12>
	uint32_t cyccnt = ARM_DWT_CYCCNT;
     452:	491f      	ldr	r1, [pc, #124]	; (4d0 <delay+0xa0>)
     454:	684b      	ldr	r3, [r1, #4]
	asm volatile("" : : : "memory");
	uint32_t ccdelta = cyccnt - scc;
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
	if (frac > 1000) frac = 1000;
	uint32_t usec = 1000*smc + frac;
     456:	f44f 7b7a 	mov.w	fp, #1000	; 0x3e8
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
     45a:	f8df a078 	ldr.w	sl, [pc, #120]	; 4d4 <delay+0xa4>
	uint32_t ccdelta = cyccnt - scc;
     45e:	1a1b      	subs	r3, r3, r0
     460:	2701      	movs	r7, #1
	uint32_t usec = 1000*smc + frac;
     462:	fb0b f802 	mul.w	r8, fp, r2
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
     466:	f8da 2000 	ldr.w	r2, [sl]
     46a:	fba3 3202 	umull	r3, r2, r3, r2
	uint32_t usec = 1000*smc + frac;
     46e:	455a      	cmp	r2, fp
     470:	bf94      	ite	ls
     472:	4490      	addls	r8, r2
     474:	44d8      	addhi	r8, fp
   __ASM volatile ("ldrex %0, [%1]" : "=r" (result) : "r" (addr) );
     476:	e854 3f00 	ldrex	r3, [r4]
		smc = systick_millis_count;
     47a:	682a      	ldr	r2, [r5, #0]
		scc = systick_cycle_count;
     47c:	6830      	ldr	r0, [r6, #0]
   __ASM volatile ("strex %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
     47e:	e844 7300 	strex	r3, r7, [r4]
	} while ( __STREXW(1, &systick_safe_read));
     482:	2b00      	cmp	r3, #0
     484:	d1f7      	bne.n	476 <delay+0x46>
	uint32_t cyccnt = ARM_DWT_CYCCNT;
     486:	684b      	ldr	r3, [r1, #4]
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
     488:	f8da c000 	ldr.w	ip, [sl]
	uint32_t ccdelta = cyccnt - scc;
     48c:	1a1b      	subs	r3, r3, r0
	uint32_t usec = 1000*smc + frac;
     48e:	fb0b f202 	mul.w	r2, fp, r2
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
     492:	fba3 3c0c 	umull	r3, ip, r3, ip
	uint32_t usec = 1000*smc + frac;
     496:	f5bc 7f7a 	cmp.w	ip, #1000	; 0x3e8
     49a:	bf94      	ite	ls
     49c:	4462      	addls	r2, ip
     49e:	f502 727a 	addhi.w	r2, r2, #1000	; 0x3e8
		while ((micros() - start) >= 1000) {
     4a2:	eba2 0208 	sub.w	r2, r2, r8
     4a6:	f5b2 7f7a 	cmp.w	r2, #1000	; 0x3e8
     4aa:	d306      	bcc.n	4ba <delay+0x8a>
			if (--msec == 0) return;
     4ac:	f1b9 0901 	subs.w	r9, r9, #1
			start += 1000;
     4b0:	f508 787a 	add.w	r8, r8, #1000	; 0x3e8
			if (--msec == 0) return;
     4b4:	d1df      	bne.n	476 <delay+0x46>
}
     4b6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
		yield();
     4ba:	f001 fb0b 	bl	1ad4 <yield>
		while ((micros() - start) >= 1000) {
     4be:	4904      	ldr	r1, [pc, #16]	; (4d0 <delay+0xa0>)
     4c0:	e7d9      	b.n	476 <delay+0x46>
     4c2:	bf00      	nop
     4c4:	20003090 	.word	0x20003090
     4c8:	2000308c 	.word	0x2000308c
     4cc:	20003088 	.word	0x20003088
     4d0:	e0001000 	.word	0xe0001000
     4d4:	20003084 	.word	0x20003084

000004d8 <micros>:
{
     4d8:	b430      	push	{r4, r5}
     4da:	4b0f      	ldr	r3, [pc, #60]	; (518 <micros+0x40>)
     4dc:	f04f 0c01 	mov.w	ip, #1
     4e0:	4d0e      	ldr	r5, [pc, #56]	; (51c <micros+0x44>)
     4e2:	4c0f      	ldr	r4, [pc, #60]	; (520 <micros+0x48>)
   __ASM volatile ("ldrex %0, [%1]" : "=r" (result) : "r" (addr) );
     4e4:	e853 2f00 	ldrex	r2, [r3]
		smc = systick_millis_count;
     4e8:	6828      	ldr	r0, [r5, #0]
		scc = systick_cycle_count;
     4ea:	6821      	ldr	r1, [r4, #0]
   __ASM volatile ("strex %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
     4ec:	e843 c200 	strex	r2, ip, [r3]
	} while ( __STREXW(1, &systick_safe_read));
     4f0:	2a00      	cmp	r2, #0
     4f2:	d1f7      	bne.n	4e4 <micros+0xc>
	uint32_t cyccnt = ARM_DWT_CYCCNT;
     4f4:	4b0b      	ldr	r3, [pc, #44]	; (524 <micros+0x4c>)
     4f6:	685b      	ldr	r3, [r3, #4]
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
     4f8:	4a0b      	ldr	r2, [pc, #44]	; (528 <micros+0x50>)
	uint32_t ccdelta = cyccnt - scc;
     4fa:	1a5b      	subs	r3, r3, r1
	uint32_t usec = 1000*smc + frac;
     4fc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
     500:	6812      	ldr	r2, [r2, #0]
	uint32_t usec = 1000*smc + frac;
     502:	fb01 f000 	mul.w	r0, r1, r0
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
     506:	fba3 3202 	umull	r3, r2, r3, r2
	return usec;
}
     50a:	bc30      	pop	{r4, r5}
     50c:	428a      	cmp	r2, r1
     50e:	bf94      	ite	ls
     510:	1880      	addls	r0, r0, r2
     512:	1840      	addhi	r0, r0, r1
     514:	4770      	bx	lr
     516:	bf00      	nop
     518:	20003090 	.word	0x20003090
     51c:	2000308c 	.word	0x2000308c
     520:	20003088 	.word	0x20003088
     524:	e0001000 	.word	0xe0001000
     528:	20003084 	.word	0x20003084

0000052c <digitalWrite>:
void digitalWrite(uint8_t pin, uint8_t val)
{
	const struct digital_pin_bitband_and_config_table_struct *p;
	uint32_t pinmode, mask;

	if (pin >= CORE_NUM_DIGITAL) return;
     52c:	2836      	cmp	r0, #54	; 0x36
     52e:	d816      	bhi.n	55e <digitalWrite+0x32>
	p = digital_pin_to_info_PGM + pin;
     530:	0102      	lsls	r2, r0, #4
     532:	4b10      	ldr	r3, [pc, #64]	; (574 <digitalWrite+0x48>)
     534:	eb03 1000 	add.w	r0, r3, r0, lsl #4
	pinmode = *(p->reg + 1);
     538:	589b      	ldr	r3, [r3, r2]
{
     53a:	b410      	push	{r4}
	mask = p->mask;
     53c:	68c2      	ldr	r2, [r0, #12]
	pinmode = *(p->reg + 1);
     53e:	685c      	ldr	r4, [r3, #4]
	if (pinmode & mask) {
     540:	4214      	tst	r4, r2
     542:	d005      	beq.n	550 <digitalWrite+0x24>
		// pin is configured for output mode
		if (val) {
     544:	b961      	cbnz	r1, 560 <digitalWrite+0x34>
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(3) | IOMUXC_PAD_HYS;
		} else {
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(0) | IOMUXC_PAD_HYS;
		}
	}
}
     546:	f85d 4b04 	ldr.w	r4, [sp], #4
			*(p->reg + 0x22) = mask; // clear register
     54a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
}
     54e:	4770      	bx	lr
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(3) | IOMUXC_PAD_HYS;
     550:	6883      	ldr	r3, [r0, #8]
		if (val) {
     552:	b151      	cbz	r1, 56a <digitalWrite+0x3e>
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(3) | IOMUXC_PAD_HYS;
     554:	4a08      	ldr	r2, [pc, #32]	; (578 <digitalWrite+0x4c>)
}
     556:	f85d 4b04 	ldr.w	r4, [sp], #4
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(3) | IOMUXC_PAD_HYS;
     55a:	601a      	str	r2, [r3, #0]
}
     55c:	4770      	bx	lr
     55e:	4770      	bx	lr
     560:	f85d 4b04 	ldr.w	r4, [sp], #4
			*(p->reg + 0x21) = mask; // set register
     564:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
}
     568:	4770      	bx	lr
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(0) | IOMUXC_PAD_HYS;
     56a:	4a04      	ldr	r2, [pc, #16]	; (57c <digitalWrite+0x50>)
}
     56c:	f85d 4b04 	ldr.w	r4, [sp], #4
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(0) | IOMUXC_PAD_HYS;
     570:	601a      	str	r2, [r3, #0]
}
     572:	4770      	bx	lr
     574:	200015bc 	.word	0x200015bc
     578:	0001f038 	.word	0x0001f038
     57c:	00013038 	.word	0x00013038

00000580 <digitalRead>:

uint8_t digitalRead(uint8_t pin)
{
	const struct digital_pin_bitband_and_config_table_struct *p;

	if (pin >= CORE_NUM_DIGITAL) return 0;
     580:	2836      	cmp	r0, #54	; 0x36
     582:	d80b      	bhi.n	59c <digitalRead+0x1c>
	p = digital_pin_to_info_PGM + pin;
     584:	4b06      	ldr	r3, [pc, #24]	; (5a0 <digitalRead+0x20>)
     586:	0102      	lsls	r2, r0, #4
     588:	eb03 1000 	add.w	r0, r3, r0, lsl #4
	return (*(p->reg + 2) & p->mask) ? 1 : 0;
     58c:	589a      	ldr	r2, [r3, r2]
     58e:	68c3      	ldr	r3, [r0, #12]
     590:	6892      	ldr	r2, [r2, #8]
     592:	421a      	tst	r2, r3
     594:	bf14      	ite	ne
     596:	2001      	movne	r0, #1
     598:	2000      	moveq	r0, #0
     59a:	4770      	bx	lr
	if (pin >= CORE_NUM_DIGITAL) return 0;
     59c:	2000      	movs	r0, #0
}
     59e:	4770      	bx	lr
     5a0:	200015bc 	.word	0x200015bc

000005a4 <pinMode>:

void pinMode(uint8_t pin, uint8_t mode)
{
	const struct digital_pin_bitband_and_config_table_struct *p;

	if (pin >= CORE_NUM_DIGITAL) return;
     5a4:	2836      	cmp	r0, #54	; 0x36
     5a6:	d829      	bhi.n	5fc <pinMode+0x58>
	p = digital_pin_to_info_PGM + pin;
     5a8:	4b16      	ldr	r3, [pc, #88]	; (604 <pinMode+0x60>)
     5aa:	0102      	lsls	r2, r0, #4
	if (mode == OUTPUT || mode == OUTPUT_OPENDRAIN) {
     5ac:	2901      	cmp	r1, #1
	p = digital_pin_to_info_PGM + pin;
     5ae:	eb03 1000 	add.w	r0, r3, r0, lsl #4
			*(p->pad) = IOMUXC_PAD_DSE(7);
		} else { // OUTPUT_OPENDRAIN
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_ODE;
		}
	} else {
		*(p->reg + 1) &= ~(p->mask); // TODO: atomic
     5b2:	589a      	ldr	r2, [r3, r2]
{
     5b4:	b410      	push	{r4}
		*(p->reg + 1) &= ~(p->mask); // TODO: atomic
     5b6:	6853      	ldr	r3, [r2, #4]
     5b8:	68c4      	ldr	r4, [r0, #12]
	if (mode == OUTPUT || mode == OUTPUT_OPENDRAIN) {
     5ba:	d00e      	beq.n	5da <pinMode+0x36>
     5bc:	2904      	cmp	r1, #4
     5be:	d00c      	beq.n	5da <pinMode+0x36>
		*(p->reg + 1) &= ~(p->mask); // TODO: atomic
     5c0:	ea23 0304 	bic.w	r3, r3, r4
     5c4:	6053      	str	r3, [r2, #4]
		if (mode == INPUT) {
			*(p->pad) = IOMUXC_PAD_DSE(7);
     5c6:	6883      	ldr	r3, [r0, #8]
		if (mode == INPUT) {
     5c8:	b1a9      	cbz	r1, 5f6 <pinMode+0x52>
		} else if (mode == INPUT_PULLUP) {
     5ca:	2902      	cmp	r1, #2
     5cc:	d017      	beq.n	5fe <pinMode+0x5a>
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(3) | IOMUXC_PAD_HYS;
		} else if (mode == INPUT_PULLDOWN) {
     5ce:	2903      	cmp	r1, #3
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(0) | IOMUXC_PAD_HYS;
     5d0:	bf0c      	ite	eq
     5d2:	4a0d      	ldreq	r2, [pc, #52]	; (608 <pinMode+0x64>)
		} else { // INPUT_DISABLE
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_HYS;
     5d4:	4a0d      	ldrne	r2, [pc, #52]	; (60c <pinMode+0x68>)
     5d6:	601a      	str	r2, [r3, #0]
     5d8:	e007      	b.n	5ea <pinMode+0x46>
		*(p->reg + 1) |= p->mask; // TODO: atomic
     5da:	4323      	orrs	r3, r4
		if (mode == OUTPUT) {
     5dc:	2901      	cmp	r1, #1
		*(p->reg + 1) |= p->mask; // TODO: atomic
     5de:	6053      	str	r3, [r2, #4]
			*(p->pad) = IOMUXC_PAD_DSE(7);
     5e0:	6883      	ldr	r3, [r0, #8]
		if (mode == OUTPUT) {
     5e2:	d008      	beq.n	5f6 <pinMode+0x52>
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_ODE;
     5e4:	f640 0238 	movw	r2, #2104	; 0x838
     5e8:	601a      	str	r2, [r3, #0]
		}
	}
	*(p->mux) = 5 | 0x10;
     5ea:	6843      	ldr	r3, [r0, #4]
     5ec:	2215      	movs	r2, #21
}
     5ee:	f85d 4b04 	ldr.w	r4, [sp], #4
	*(p->mux) = 5 | 0x10;
     5f2:	601a      	str	r2, [r3, #0]
}
     5f4:	4770      	bx	lr
			*(p->pad) = IOMUXC_PAD_DSE(7);
     5f6:	2238      	movs	r2, #56	; 0x38
     5f8:	601a      	str	r2, [r3, #0]
     5fa:	e7f6      	b.n	5ea <pinMode+0x46>
     5fc:	4770      	bx	lr
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(3) | IOMUXC_PAD_HYS;
     5fe:	4a04      	ldr	r2, [pc, #16]	; (610 <pinMode+0x6c>)
     600:	601a      	str	r2, [r3, #0]
     602:	e7f2      	b.n	5ea <pinMode+0x46>
     604:	200015bc 	.word	0x200015bc
     608:	00013038 	.word	0x00013038
     60c:	00010038 	.word	0x00010038
     610:	0001f038 	.word	0x0001f038

00000614 <main>:
 */

#include <Arduino.h>

extern "C" int main(void)
{
     614:	b508      	push	{r3, lr}
	}


#else
	// Arduino's main() function just calls setup() and loop()....
	setup();
     616:	f7ff fd6f 	bl	f8 <setup>
	while (1) {
		loop();
     61a:	f7ff fe1b 	bl	254 <loop>
		yield();
     61e:	f001 fa59 	bl	1ad4 <yield>
	while (1) {
     622:	e7fa      	b.n	61a <main+0x6>

00000624 <memcpy>:
	@ r1: src
	@ r2: len
#ifdef __ARM_FEATURE_UNALIGNED
	/* In case of UNALIGNED access supported, ip is not used in
	   function body.  */
	mov	ip, r0
     624:	4684      	mov	ip, r0
#else
	push	{r0}
#endif
	orr	r3, r1, r0
     626:	ea41 0300 	orr.w	r3, r1, r0
	ands	r3, r3, #3
     62a:	f013 0303 	ands.w	r3, r3, #3
	bne	.Lmisaligned_copy
     62e:	d16d      	bne.n	70c <memcpy+0xe8>

.Lbig_block:
	subs	r2, __OPT_BIG_BLOCK_SIZE
     630:	3a40      	subs	r2, #64	; 0x40
	blo	.Lmid_block
     632:	d341      	bcc.n	6b8 <memcpy+0x94>
.Lbig_block_loop:
	BEGIN_UNROLL_BIG_BLOCK
#ifdef __ARM_ARCH_7EM__
	ldr	r3, [r1], #4
	str	r3, [r0], #4
	END_UNROLL
     634:	f851 3b04 	ldr.w	r3, [r1], #4
     638:	f840 3b04 	str.w	r3, [r0], #4
     63c:	f851 3b04 	ldr.w	r3, [r1], #4
     640:	f840 3b04 	str.w	r3, [r0], #4
     644:	f851 3b04 	ldr.w	r3, [r1], #4
     648:	f840 3b04 	str.w	r3, [r0], #4
     64c:	f851 3b04 	ldr.w	r3, [r1], #4
     650:	f840 3b04 	str.w	r3, [r0], #4
     654:	f851 3b04 	ldr.w	r3, [r1], #4
     658:	f840 3b04 	str.w	r3, [r0], #4
     65c:	f851 3b04 	ldr.w	r3, [r1], #4
     660:	f840 3b04 	str.w	r3, [r0], #4
     664:	f851 3b04 	ldr.w	r3, [r1], #4
     668:	f840 3b04 	str.w	r3, [r0], #4
     66c:	f851 3b04 	ldr.w	r3, [r1], #4
     670:	f840 3b04 	str.w	r3, [r0], #4
     674:	f851 3b04 	ldr.w	r3, [r1], #4
     678:	f840 3b04 	str.w	r3, [r0], #4
     67c:	f851 3b04 	ldr.w	r3, [r1], #4
     680:	f840 3b04 	str.w	r3, [r0], #4
     684:	f851 3b04 	ldr.w	r3, [r1], #4
     688:	f840 3b04 	str.w	r3, [r0], #4
     68c:	f851 3b04 	ldr.w	r3, [r1], #4
     690:	f840 3b04 	str.w	r3, [r0], #4
     694:	f851 3b04 	ldr.w	r3, [r1], #4
     698:	f840 3b04 	str.w	r3, [r0], #4
     69c:	f851 3b04 	ldr.w	r3, [r1], #4
     6a0:	f840 3b04 	str.w	r3, [r0], #4
     6a4:	f851 3b04 	ldr.w	r3, [r1], #4
     6a8:	f840 3b04 	str.w	r3, [r0], #4
     6ac:	f851 3b04 	ldr.w	r3, [r1], #4
     6b0:	f840 3b04 	str.w	r3, [r0], #4
	str	r3, [r0, \offset]
	END_UNROLL
	adds	r0, __OPT_BIG_BLOCK_SIZE
	adds	r1, __OPT_BIG_BLOCK_SIZE
#endif
	subs	r2, __OPT_BIG_BLOCK_SIZE
     6b4:	3a40      	subs	r2, #64	; 0x40
	bhs .Lbig_block_loop
     6b6:	d2bd      	bcs.n	634 <memcpy+0x10>

.Lmid_block:
	adds	r2, __OPT_BIG_BLOCK_SIZE - __OPT_MID_BLOCK_SIZE
     6b8:	3230      	adds	r2, #48	; 0x30
	blo	.Lcopy_word_by_word
     6ba:	d311      	bcc.n	6e0 <memcpy+0xbc>
.Lmid_block_loop:
	BEGIN_UNROLL_MID_BLOCK
#ifdef __ARM_ARCH_7EM__
	ldr	r3, [r1], #4
	str	r3, [r0], #4
	END_UNROLL
     6bc:	f851 3b04 	ldr.w	r3, [r1], #4
     6c0:	f840 3b04 	str.w	r3, [r0], #4
     6c4:	f851 3b04 	ldr.w	r3, [r1], #4
     6c8:	f840 3b04 	str.w	r3, [r0], #4
     6cc:	f851 3b04 	ldr.w	r3, [r1], #4
     6d0:	f840 3b04 	str.w	r3, [r0], #4
     6d4:	f851 3b04 	ldr.w	r3, [r1], #4
     6d8:	f840 3b04 	str.w	r3, [r0], #4
	str	r3, [r0, \offset]
	END_UNROLL
	adds    r0, __OPT_MID_BLOCK_SIZE
	adds    r1, __OPT_MID_BLOCK_SIZE
#endif
	subs	r2, __OPT_MID_BLOCK_SIZE
     6dc:	3a10      	subs	r2, #16
	bhs	.Lmid_block_loop
     6de:	d2ed      	bcs.n	6bc <memcpy+0x98>

.Lcopy_word_by_word:
	adds	r2, __OPT_MID_BLOCK_SIZE - 4
     6e0:	320c      	adds	r2, #12
	blo	.Lcopy_less_than_4
     6e2:	d305      	bcc.n	6f0 <memcpy+0xcc>

	/* Kernel loop for small block copy */
	.align 2
.Lcopy_word_by_word_loop:
	ldr	r3, [r1], #4
     6e4:	f851 3b04 	ldr.w	r3, [r1], #4
	str	r3, [r0], #4
     6e8:	f840 3b04 	str.w	r3, [r0], #4
	subs	r2, #4
     6ec:	3a04      	subs	r2, #4
	bhs	.Lcopy_word_by_word_loop
     6ee:	d2f9      	bcs.n	6e4 <memcpy+0xc0>

.Lcopy_less_than_4:
	adds	r2, #4
     6f0:	3204      	adds	r2, #4
	beq	.Ldone
     6f2:	d008      	beq.n	706 <memcpy+0xe2>

	lsls	r2, r2, #31
     6f4:	07d2      	lsls	r2, r2, #31
	itt ne
     6f6:	bf1c      	itt	ne
	ldrbne  r3, [r1], #1
     6f8:	f811 3b01 	ldrbne.w	r3, [r1], #1
	strbne  r3, [r0], #1
     6fc:	f800 3b01 	strbne.w	r3, [r0], #1

	bcc	.Ldone
     700:	d301      	bcc.n	706 <memcpy+0xe2>
#ifdef __ARM_FEATURE_UNALIGNED
	ldrh	r3, [r1]
     702:	880b      	ldrh	r3, [r1, #0]
	strh	r3, [r0]
     704:	8003      	strh	r3, [r0, #0]
	strb	r3, [r0, #1]
#endif /* __ARM_FEATURE_UNALIGNED */

.Ldone:
#ifdef __ARM_FEATURE_UNALIGNED
	mov	r0, ip
     706:	4660      	mov	r0, ip
#else
	pop	{r0}
#endif
	bx	lr
     708:	4770      	bx	lr
     70a:	bf00      	nop
#define Ldst_aligned Lbig_block

	/* Copy word by word using LDR when alignment can be done in hardware,
	i.e., SCTLR.A is set, supporting unaligned access in LDR and STR.  */

	cmp	r2, #8
     70c:	2a08      	cmp	r2, #8
	blo	.Lbyte_copy
     70e:	d313      	bcc.n	738 <memcpy+0x114>

	/* if src is aligned, just go to the big block loop.  */
	lsls	r3, r1, #30
     710:	078b      	lsls	r3, r1, #30
	beq	.Ldst_aligned
     712:	d08d      	beq.n	630 <memcpy+0xc>
	handling of aligned src and misaligned dst need more overhead than
	otherwise.  By doing this the worst case is when initial src is aligned,
	additional up to 4 byte additional copy will executed, which is
	acceptable.  */

	ands	r3, r0, #3
     714:	f010 0303 	ands.w	r3, r0, #3
	beq	.Ldst_aligned
     718:	d08a      	beq.n	630 <memcpy+0xc>

	rsb	r3, #4
     71a:	f1c3 0304 	rsb	r3, r3, #4
	subs	r2, r3
     71e:	1ad2      	subs	r2, r2, r3

	lsls    r3, r3, #31
     720:	07db      	lsls	r3, r3, #31
	itt ne
     722:	bf1c      	itt	ne
	ldrbne  r3, [r1], #1
     724:	f811 3b01 	ldrbne.w	r3, [r1], #1
	strbne  r3, [r0], #1
     728:	f800 3b01 	strbne.w	r3, [r0], #1

	bcc .Ldst_aligned
     72c:	d380      	bcc.n	630 <memcpy+0xc>

#ifdef __ARM_FEATURE_UNALIGNED
	ldrh    r3, [r1], #2
     72e:	f831 3b02 	ldrh.w	r3, [r1], #2
	strh    r3, [r0], #2
     732:	f820 3b02 	strh.w	r3, [r0], #2
	b	.Ldst_aligned
     736:	e77b      	b.n	630 <memcpy+0xc>
	pop	{r4, r5}

#endif /* __ARM_FEATURE_UNALIGNED */

.Lbyte_copy:
	subs	r2, #4
     738:	3a04      	subs	r2, #4
	blo	.Lcopy_less_than_4
     73a:	d3d9      	bcc.n	6f0 <memcpy+0xcc>

.Lbyte_copy_loop:
	subs    r2, #1
     73c:	3a01      	subs	r2, #1
	ldrb    r3, [r1], #1
     73e:	f811 3b01 	ldrb.w	r3, [r1], #1
	strb    r3, [r0], #1
     742:	f800 3b01 	strb.w	r3, [r0], #1
	bhs	.Lbyte_copy_loop
     746:	d2f9      	bcs.n	73c <memcpy+0x118>

	ldrb	r3, [r1]
     748:	780b      	ldrb	r3, [r1, #0]
	strb	r3, [r0]
     74a:	7003      	strb	r3, [r0, #0]
	ldrb	r3, [r1, #1]
     74c:	784b      	ldrb	r3, [r1, #1]
	strb	r3, [r0, #1]
     74e:	7043      	strb	r3, [r0, #1]
	ldrb	r3, [r1, #2]
     750:	788b      	ldrb	r3, [r1, #2]
	strb	r3, [r0, #2]
     752:	7083      	strb	r3, [r0, #2]

#ifdef __ARM_FEATURE_UNALIGNED
	mov	r0, ip
     754:	4660      	mov	r0, ip
#else
	pop	{r0}
#endif
	bx	lr
     756:	4770      	bx	lr

00000758 <operator new(unsigned int)>:

#include <stdlib.h>

void * operator new(size_t size)
{
	return malloc(size);
     758:	f00b beb0 	b.w	c4bc <malloc>

0000075c <operator delete(void*)>:
	return malloc(size);
}

void operator delete(void * ptr)
{
	free(ptr);
     75c:	f00b beb6 	b.w	c4cc <free>

00000760 <operator delete(void*, unsigned int)>:
	free(ptr);
}

void operator delete(void * ptr, size_t size __attribute__((unused)))
{
	free(ptr);
     760:	f00b beb4 	b.w	c4cc <free>

00000764 <ultoa>:


char * ultoa(unsigned long val, char *buf, int radix)
{
	unsigned digit;
	int i=0, j;
     764:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
{
     768:	b570      	push	{r4, r5, r6, lr}
	char t;

	while (1) {
		digit = val % radix;
     76a:	4666      	mov	r6, ip
	int i=0, j;
     76c:	2400      	movs	r4, #0
     76e:	e000      	b.n	772 <ultoa+0xe>
		buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
		val /= radix;
		if (val == 0) break;
		i++;
     770:	3401      	adds	r4, #1
		digit = val % radix;
     772:	fbb0 f5f2 	udiv	r5, r0, r2
     776:	fb02 0315 	mls	r3, r2, r5, r0
		buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
     77a:	2b09      	cmp	r3, #9
     77c:	f103 0e37 	add.w	lr, r3, #55	; 0x37
     780:	f103 0330 	add.w	r3, r3, #48	; 0x30
     784:	fa5f fe8e 	uxtb.w	lr, lr
     788:	bf98      	it	ls
     78a:	fa5f fe83 	uxtbls.w	lr, r3
		if (val == 0) break;
     78e:	4290      	cmp	r0, r2
		val /= radix;
     790:	4628      	mov	r0, r5
		buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
     792:	f806 ef01 	strb.w	lr, [r6, #1]!
		if (val == 0) break;
     796:	d2eb      	bcs.n	770 <ultoa+0xc>
	}
	buf[i + 1] = 0;
     798:	1c63      	adds	r3, r4, #1
     79a:	2200      	movs	r2, #0
     79c:	18c8      	adds	r0, r1, r3
     79e:	54ca      	strb	r2, [r1, r3]
	for (j=0; j < i; j++, i--) {
     7a0:	b17c      	cbz	r4, 7c2 <ultoa+0x5e>
		t = buf[j];
     7a2:	4662      	mov	r2, ip
     7a4:	f81c 5f01 	ldrb.w	r5, [ip, #1]!
		buf[j] = buf[i];
     7a8:	f810 6d01 	ldrb.w	r6, [r0, #-1]!
	for (j=0; j < i; j++, i--) {
     7ac:	eba1 030c 	sub.w	r3, r1, ip
     7b0:	3202      	adds	r2, #2
		buf[j] = buf[i];
     7b2:	f88c 6000 	strb.w	r6, [ip]
	for (j=0; j < i; j++, i--) {
     7b6:	3b01      	subs	r3, #1
     7b8:	1a52      	subs	r2, r2, r1
		buf[i] = t;
     7ba:	7005      	strb	r5, [r0, #0]
	for (j=0; j < i; j++, i--) {
     7bc:	4423      	add	r3, r4
     7be:	429a      	cmp	r2, r3
     7c0:	dbef      	blt.n	7a2 <ultoa+0x3e>
	}
	return buf;
}
     7c2:	4608      	mov	r0, r1
     7c4:	bd70      	pop	{r4, r5, r6, pc}
     7c6:	bf00      	nop

000007c8 <unused_interrupt_vector>:
	__disable_irq();
     7c8:	b672      	cpsid	i
	asm volatile("mrs %0, ipsr\n" : "=r" (ipsr) :: "memory");
     7ca:	f3ef 8305 	mrs	r3, IPSR
	info->ipsr = ipsr;
     7ce:	4c52      	ldr	r4, [pc, #328]	; (918 <unused_interrupt_vector+0x150>)
     7d0:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
	asm volatile("tst lr, #4\nite eq\nmrseq %0, msp\nmrsne %0, psp\n" : "=r" (stack) :: "memory");
     7d4:	f01e 0f04 	tst.w	lr, #4
     7d8:	bf0c      	ite	eq
     7da:	f3ef 8208 	mrseq	r2, MSP
     7de:	f3ef 8209 	mrsne	r2, PSP
	info->cfsr = SCB_CFSR;
     7e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
	p = (uint32_t *)info;
     7e6:	4e4d      	ldr	r6, [pc, #308]	; (91c <unused_interrupt_vector+0x154>)
	while (p < end) {
     7e8:	4d4d      	ldr	r5, [pc, #308]	; (920 <unused_interrupt_vector+0x158>)
	info->cfsr = SCB_CFSR;
     7ea:	f8d3 0d28 	ldr.w	r0, [r3, #3368]	; 0xd28
	info->hfsr = SCB_HFSR;
     7ee:	f8d3 1d2c 	ldr.w	r1, [r3, #3372]	; 0xd2c
     7f2:	e9c4 0122 	strd	r0, r1, [r4, #136]	; 0x88
	info->mmfar = SCB_MMFAR;
     7f6:	f8d3 1d34 	ldr.w	r1, [r3, #3380]	; 0xd34
	info->bfar = SCB_BFAR;
     7fa:	f8d3 3d38 	ldr.w	r3, [r3, #3384]	; 0xd38
     7fe:	e9c4 1324 	strd	r1, r3, [r4, #144]	; 0x90
	info->ret = stack[6];
     802:	6993      	ldr	r3, [r2, #24]
     804:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
	info->xpsr = stack[7];
     808:	69d3      	ldr	r3, [r2, #28]
     80a:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
	info->temp = tempmonGetTemp();
     80e:	f000 f8d1 	bl	9b4 <tempmonGetTemp>
     812:	ed84 0a28 	vstr	s0, [r4, #160]	; 0xa0
	info->time = rtc_get();
     816:	f001 fc2d 	bl	2074 <rtc_get>
	info->len = sizeof(*info) / 4;
     81a:	210b      	movs	r1, #11
	crc = 0xFFFFFFFF;
     81c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
	info->time = rtc_get();
     820:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
	info->len = sizeof(*info) / 4;
     824:	460b      	mov	r3, r1
     826:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
		for (i=0; i < 32; i++) crc = (crc >> 1) ^ (crc & 1)*0xEDB88320;
     82a:	493e      	ldr	r1, [pc, #248]	; (924 <unused_interrupt_vector+0x15c>)
		crc ^= *p++;
     82c:	1d30      	adds	r0, r6, #4
     82e:	405a      	eors	r2, r3
     830:	2420      	movs	r4, #32
		for (i=0; i < 32; i++) crc = (crc >> 1) ^ (crc & 1)*0xEDB88320;
     832:	f002 0301 	and.w	r3, r2, #1
     836:	3c01      	subs	r4, #1
     838:	fb01 f303 	mul.w	r3, r1, r3
     83c:	ea83 0252 	eor.w	r2, r3, r2, lsr #1
     840:	d1f7      	bne.n	832 <unused_interrupt_vector+0x6a>
	while (p < end) {
     842:	42a8      	cmp	r0, r5
     844:	d002      	beq.n	84c <unused_interrupt_vector+0x84>
		crc ^= *p++;
     846:	6873      	ldr	r3, [r6, #4]
     848:	4606      	mov	r6, r0
     84a:	e7ef      	b.n	82c <unused_interrupt_vector+0x64>
	info->crc = crc;
     84c:	4b32      	ldr	r3, [pc, #200]	; (918 <unused_interrupt_vector+0x150>)
     84e:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
static inline void arm_dcache_flush_delete(void *addr, uint32_t size)
{
	uint32_t location = (uint32_t)addr & 0xFFFFFFE0;
	uint32_t end_addr = (uint32_t)addr + size;
	asm volatile("": : :"memory");
	asm("dsb");
     852:	f3bf 8f4f 	dsb	sy
	do {
		SCB_CACHE_DCCIMVAC = location;
     856:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
     85a:	4930      	ldr	r1, [pc, #192]	; (91c <unused_interrupt_vector+0x154>)
     85c:	4a32      	ldr	r2, [pc, #200]	; (928 <unused_interrupt_vector+0x160>)
     85e:	f8c3 1f70 	str.w	r1, [r3, #3952]	; 0xf70
     862:	f8c3 2f70 	str.w	r2, [r3, #3952]	; 0xf70
		location += 32;
	} while (location < end_addr);
	asm("dsb");
     866:	f3bf 8f4f 	dsb	sy
	asm("isb");
     86a:	f3bf 8f6f 	isb	sy
	CCM_CCGR1 |= CCM_CCGR1_PIT(CCM_CCGR_ON);
     86e:	4a2f      	ldr	r2, [pc, #188]	; (92c <unused_interrupt_vector+0x164>)
	PIT_MCR = PIT_MCR_MDIS;
     870:	2502      	movs	r5, #2
     872:	482f      	ldr	r0, [pc, #188]	; (930 <unused_interrupt_vector+0x168>)
	CCM_CCGR1 |= CCM_CCGR1_PIT(CCM_CCGR_ON);
     874:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
  	if (F_CPU_ACTUAL > 198000000) set_arm_clock(198000000);
     876:	492f      	ldr	r1, [pc, #188]	; (934 <unused_interrupt_vector+0x16c>)
	CCM_CCGR1 |= CCM_CCGR1_PIT(CCM_CCGR_ON);
     878:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
     87c:	66d3      	str	r3, [r2, #108]	; 0x6c
	PIT_MCR = PIT_MCR_MDIS;
     87e:	6005      	str	r5, [r0, #0]
	CCM_CSCMR1 = (CCM_CSCMR1 & ~CCM_CSCMR1_PERCLK_PODF(0x3F)) | CCM_CSCMR1_PERCLK_CLK_SEL;
     880:	69d3      	ldr	r3, [r2, #28]
  	if (F_CPU_ACTUAL > 198000000) set_arm_clock(198000000);
     882:	482d      	ldr	r0, [pc, #180]	; (938 <unused_interrupt_vector+0x170>)
	CCM_CSCMR1 = (CCM_CSCMR1 & ~CCM_CSCMR1_PERCLK_PODF(0x3F)) | CCM_CSCMR1_PERCLK_CLK_SEL;
     884:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
     888:	f043 0340 	orr.w	r3, r3, #64	; 0x40
     88c:	61d3      	str	r3, [r2, #28]
  	if (F_CPU_ACTUAL > 198000000) set_arm_clock(198000000);
     88e:	680b      	ldr	r3, [r1, #0]
     890:	4283      	cmp	r3, r0
     892:	d83d      	bhi.n	910 <unused_interrupt_vector+0x148>
	PIT_MCR = 0;
     894:	4d26      	ldr	r5, [pc, #152]	; (930 <unused_interrupt_vector+0x168>)
     896:	2100      	movs	r1, #0
	NVIC_ICER0 = 0xFFFFFFFF;
     898:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
     89c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
	PIT_MCR = 0;
     8a0:	6029      	str	r1, [r5, #0]
	PIT_TCTRL0 = PIT_TCTRL_TEN;
     8a2:	2601      	movs	r6, #1
	PIT_TCTRL0 = 0;
     8a4:	f8c5 1108 	str.w	r1, [r5, #264]	; 0x108
	PIT_LDVAL0 = 2400000; // 2400000 = 100ms
     8a8:	4924      	ldr	r1, [pc, #144]	; (93c <unused_interrupt_vector+0x174>)
     8aa:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
	PIT_TCTRL0 = PIT_TCTRL_TEN;
     8ae:	f8c5 6108 	str.w	r6, [r5, #264]	; 0x108
	NVIC_ICER0 = 0xFFFFFFFF;
     8b2:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
	NVIC_ICER1 = 0xFFFFFFFF;
     8b6:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
	NVIC_ICER2 = 0xFFFFFFFF;
     8ba:	f8c3 2188 	str.w	r2, [r3, #392]	; 0x188
	NVIC_ICER3 = 0xFFFFFFFF;
     8be:	f8c3 218c 	str.w	r2, [r3, #396]	; 0x18c
	NVIC_ICER4 = 0xFFFFFFFF;
     8c2:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190
	count = 0;
     8c6:	e001      	b.n	8cc <unused_interrupt_vector+0x104>
		usb_isr();
     8c8:	f000 f966 	bl	b98 <usb_isr>
		if (PIT_TFLG0) {
     8cc:	f8d5 310c 	ldr.w	r3, [r5, #268]	; 0x10c
     8d0:	2b00      	cmp	r3, #0
     8d2:	d0f9      	beq.n	8c8 <unused_interrupt_vector+0x100>
			if (++count >= 80) break;  // reboot after 8 seconds
     8d4:	3401      	adds	r4, #1
			PIT_TFLG0 = 1;
     8d6:	f8c5 610c 	str.w	r6, [r5, #268]	; 0x10c
			if (++count >= 80) break;  // reboot after 8 seconds
     8da:	2c4f      	cmp	r4, #79	; 0x4f
     8dc:	d9f4      	bls.n	8c8 <unused_interrupt_vector+0x100>
	USBPHY1_CTRL_SET = USBPHY_CTRL_SFTRST;
     8de:	4b18      	ldr	r3, [pc, #96]	; (940 <unused_interrupt_vector+0x178>)
	USB1_USBCMD = USB_USBCMD_RST;
     8e0:	2002      	movs	r0, #2
     8e2:	4918      	ldr	r1, [pc, #96]	; (944 <unused_interrupt_vector+0x17c>)
	USBPHY1_CTRL_SET = USBPHY_CTRL_SFTRST;
     8e4:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
	USB1_USBCMD = USB_USBCMD_RST;
     8e8:	f8c1 0140 	str.w	r0, [r1, #320]	; 0x140
	USBPHY1_CTRL_SET = USBPHY_CTRL_SFTRST;
     8ec:	635a      	str	r2, [r3, #52]	; 0x34
	while (PIT_TFLG0 == 0) /* wait 0.1 second for PC to know USB unplugged */
     8ee:	f8d5 310c 	ldr.w	r3, [r5, #268]	; 0x10c
     8f2:	b93b      	cbnz	r3, 904 <unused_interrupt_vector+0x13c>
	SRC_GPR5 = 0x0BAD00F1;
     8f4:	4814      	ldr	r0, [pc, #80]	; (948 <unused_interrupt_vector+0x180>)
     8f6:	4915      	ldr	r1, [pc, #84]	; (94c <unused_interrupt_vector+0x184>)
	while (PIT_TFLG0 == 0) /* wait 0.1 second for PC to know USB unplugged */
     8f8:	4a0d      	ldr	r2, [pc, #52]	; (930 <unused_interrupt_vector+0x168>)
	SRC_GPR5 = 0x0BAD00F1;
     8fa:	6301      	str	r1, [r0, #48]	; 0x30
	while (PIT_TFLG0 == 0) /* wait 0.1 second for PC to know USB unplugged */
     8fc:	f8d2 310c 	ldr.w	r3, [r2, #268]	; 0x10c
     900:	2b00      	cmp	r3, #0
     902:	d0fa      	beq.n	8fa <unused_interrupt_vector+0x132>
	SCB_AIRCR = 0x05FA0004;
     904:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
     908:	4a11      	ldr	r2, [pc, #68]	; (950 <unused_interrupt_vector+0x188>)
     90a:	f8c3 2d0c 	str.w	r2, [r3, #3340]	; 0xd0c
	while (1) ;
     90e:	e7fe      	b.n	90e <unused_interrupt_vector+0x146>
  	if (F_CPU_ACTUAL > 198000000) set_arm_clock(198000000);
     910:	f001 f980 	bl	1c14 <set_arm_clock>
     914:	e7be      	b.n	894 <unused_interrupt_vector+0xcc>
     916:	bf00      	nop
     918:	2027ff00 	.word	0x2027ff00
     91c:	2027ff80 	.word	0x2027ff80
     920:	2027ffa8 	.word	0x2027ffa8
     924:	edb88320 	.word	0xedb88320
     928:	2027ffa0 	.word	0x2027ffa0
     92c:	400fc000 	.word	0x400fc000
     930:	40084000 	.word	0x40084000
     934:	20002144 	.word	0x20002144
     938:	0bcd3d80 	.word	0x0bcd3d80
     93c:	00249f00 	.word	0x00249f00
     940:	400d9000 	.word	0x400d9000
     944:	402e0000 	.word	0x402e0000
     948:	400f8000 	.word	0x400f8000
     94c:	0bad00f1 	.word	0x0bad00f1
     950:	05fa0004 	.word	0x05fa0004

00000954 <_sbrk>:
char *__brkval = (char *)&_heap_start;

__attribute__((weak))
void * _sbrk(int incr)
{
        char *prev = __brkval;
     954:	490a      	ldr	r1, [pc, #40]	; (980 <_sbrk+0x2c>)
     956:	680a      	ldr	r2, [r1, #0]
        if (incr != 0) {
     958:	b138      	cbz	r0, 96a <_sbrk+0x16>
{
     95a:	b508      	push	{r3, lr}
                if (prev + incr > (char *)&_heap_end) {
     95c:	1813      	adds	r3, r2, r0
     95e:	4809      	ldr	r0, [pc, #36]	; (984 <_sbrk+0x30>)
     960:	4283      	cmp	r3, r0
     962:	d804      	bhi.n	96e <_sbrk+0x1a>
                        return (void *)-1;
                }
                __brkval = prev + incr;
        }
        return prev;
}
     964:	4610      	mov	r0, r2
                __brkval = prev + incr;
     966:	600b      	str	r3, [r1, #0]
}
     968:	bd08      	pop	{r3, pc}
     96a:	4610      	mov	r0, r2
     96c:	4770      	bx	lr
                        errno = ENOMEM;
     96e:	f009 fffd 	bl	a96c <__errno>
     972:	230c      	movs	r3, #12
                        return (void *)-1;
     974:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
                        errno = ENOMEM;
     978:	6003      	str	r3, [r0, #0]
}
     97a:	4610      	mov	r0, r2
     97c:	bd08      	pop	{r3, pc}
     97e:	bf00      	nop
     980:	20002164 	.word	0x20002164
     984:	20280000 	.word	0x20280000

00000988 <_read>:

__attribute__((weak))
int _read(int file __attribute__((unused)), char *ptr __attribute__((unused)), int len __attribute__((unused)))
{
	return 0;
}
     988:	2000      	movs	r0, #0
     98a:	4770      	bx	lr

0000098c <_close>:

__attribute__((weak))
int _close(int fd __attribute__((unused)))
{
	return -1;
}
     98c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     990:	4770      	bx	lr
     992:	bf00      	nop

00000994 <_fstat>:
#include <sys/stat.h>

__attribute__((weak))
int _fstat(int fd __attribute__((unused)), struct stat *st)
{
	st->st_mode = S_IFCHR;
     994:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
     998:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
     99a:	604b      	str	r3, [r1, #4]
}
     99c:	4770      	bx	lr
     99e:	bf00      	nop

000009a0 <_isatty>:

__attribute__((weak))
int _isatty(int fd __attribute__((unused)))
{
	return 1;
}
     9a0:	2001      	movs	r0, #1
     9a2:	4770      	bx	lr

000009a4 <_lseek>:

__attribute__((weak))
int _lseek(int fd __attribute__((unused)), long long offset __attribute__((unused)), int whence __attribute__((unused)))
{
	return -1;
}
     9a4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     9a8:	4770      	bx	lr
     9aa:	bf00      	nop

000009ac <abort>:
}

__attribute__((weak))
void abort(void)
{
	while (1) asm ("WFI");
     9ac:	bf30      	wfi
     9ae:	e7fd      	b.n	9ac <abort>

000009b0 <Panic_Temp_isr>:
  unused_interrupt_vector();
     9b0:	f7ff bf0a 	b.w	7c8 <unused_interrupt_vector>

000009b4 <tempmonGetTemp>:
float tempmonGetTemp(void)
{
    uint32_t nmeas;
    float tmeas;

    while (!(TEMPMON_TEMPSENSE0 & 0x4U))
     9b4:	4a12      	ldr	r2, [pc, #72]	; (a00 <tempmonGetTemp+0x4c>)
     9b6:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
     9ba:	075b      	lsls	r3, r3, #29
     9bc:	d5fb      	bpl.n	9b6 <tempmonGetTemp+0x2>
    {
    }

    /* ready to read temperature code value */
    nmeas = (TEMPMON_TEMPSENSE0 & 0xFFF00U) >> 8U;
     9be:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
    /* Calculate temperature */
    tmeas = s_hotTemp - (((float)nmeas - (float)s_hotCount) * s_hot_ROOM / s_roomC_hotC);
     9c2:	4810      	ldr	r0, [pc, #64]	; (a04 <tempmonGetTemp+0x50>)
    nmeas = (TEMPMON_TEMPSENSE0 & 0xFFF00U) >> 8U;
     9c4:	f3c3 230b 	ubfx	r3, r3, #8, #12
    tmeas = s_hotTemp - (((float)nmeas - (float)s_hotCount) * s_hot_ROOM / s_roomC_hotC);
     9c8:	490f      	ldr	r1, [pc, #60]	; (a08 <tempmonGetTemp+0x54>)
     9ca:	ed90 7a00 	vldr	s14, [r0]
    nmeas = (TEMPMON_TEMPSENSE0 & 0xFFF00U) >> 8U;
     9ce:	ee07 3a90 	vmov	s15, r3
    tmeas = s_hotTemp - (((float)nmeas - (float)s_hotCount) * s_hot_ROOM / s_roomC_hotC);
     9d2:	ed91 6a00 	vldr	s12, [r1]
     9d6:	eeb8 7a47 	vcvt.f32.u32	s14, s14
     9da:	4a0c      	ldr	r2, [pc, #48]	; (a0c <tempmonGetTemp+0x58>)
     9dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
     9e0:	4b0b      	ldr	r3, [pc, #44]	; (a10 <tempmonGetTemp+0x5c>)
     9e2:	edd2 6a00 	vldr	s13, [r2]
     9e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
     9ea:	ed93 7a00 	vldr	s14, [r3]
     9ee:	eeb8 7a47 	vcvt.f32.u32	s14, s14
     9f2:	ee67 7a86 	vmul.f32	s15, s15, s12
     9f6:	ee87 0aa6 	vdiv.f32	s0, s15, s13

    return tmeas;
}
     9fa:	ee37 0a40 	vsub.f32	s0, s14, s0
     9fe:	4770      	bx	lr
     a00:	400d8100 	.word	0x400d8100
     a04:	20003074 	.word	0x20003074
     a08:	2000307c 	.word	0x2000307c
     a0c:	20003080 	.word	0x20003080
     a10:	20003078 	.word	0x20003078

00000a14 <schedule_transfer>:
{
	// when we stop at 6, why is the last transfer missing from the USB output?
	//if (transfer_log_count >= 6) return;

	//uint32_t ret = (*(const uint8_t *)transfer->pointer0) << 8;
	if (endpoint->callback_function) {
     a14:	6b83      	ldr	r3, [r0, #56]	; 0x38
{
     a16:	b4f0      	push	{r4, r5, r6, r7}
	if (endpoint->callback_function) {
     a18:	b11b      	cbz	r3, a22 <schedule_transfer+0xe>
		transfer->status |= (1<<15);
     a1a:	6853      	ldr	r3, [r2, #4]
     a1c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
     a20:	6053      	str	r3, [r2, #4]
	}
	__disable_irq();
     a22:	b672      	cpsid	i
	//digitalWriteFast(1, HIGH);
	// Executing A Transfer Descriptor, page 2468 (RT1060 manual, Rev 1, 12/2018)
	transfer_t *last = endpoint->last_transfer;
     a24:	6b44      	ldr	r4, [r0, #52]	; 0x34
	if (last) {
     a26:	b33c      	cbz	r4, a78 <schedule_transfer+0x64>
		last->next = (uint32_t)transfer;
		if (USB1_ENDPTPRIME & epmask) goto end;
     a28:	4b1a      	ldr	r3, [pc, #104]	; (a94 <schedule_transfer+0x80>)
		last->next = (uint32_t)transfer;
     a2a:	6022      	str	r2, [r4, #0]
		if (USB1_ENDPTPRIME & epmask) goto end;
     a2c:	f8d3 41b0 	ldr.w	r4, [r3, #432]	; 0x1b0
     a30:	420c      	tst	r4, r1
     a32:	d11d      	bne.n	a70 <schedule_transfer+0x5c>
		//digitalWriteFast(2, HIGH);
		//ret |= 0x01;
		uint32_t status, cyccnt=ARM_DWT_CYCCNT;
     a34:	4e18      	ldr	r6, [pc, #96]	; (a98 <schedule_transfer+0x84>)
     a36:	6877      	ldr	r7, [r6, #4]
     a38:	e004      	b.n	a44 <schedule_transfer+0x30>
		do {
			USB1_USBCMD |= USB_USBCMD_ATDTW;
			status = USB1_ENDPTSTATUS;
		} while (!(USB1_USBCMD & USB_USBCMD_ATDTW) && (ARM_DWT_CYCCNT - cyccnt < 2400));
     a3a:	6874      	ldr	r4, [r6, #4]
     a3c:	1be4      	subs	r4, r4, r7
     a3e:	f5b4 6f16 	cmp.w	r4, #2400	; 0x960
     a42:	d20b      	bcs.n	a5c <schedule_transfer+0x48>
			USB1_USBCMD |= USB_USBCMD_ATDTW;
     a44:	f8d3 4140 	ldr.w	r4, [r3, #320]	; 0x140
     a48:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
     a4c:	f8c3 4140 	str.w	r4, [r3, #320]	; 0x140
			status = USB1_ENDPTSTATUS;
     a50:	f8d3 51b8 	ldr.w	r5, [r3, #440]	; 0x1b8
		} while (!(USB1_USBCMD & USB_USBCMD_ATDTW) && (ARM_DWT_CYCCNT - cyccnt < 2400));
     a54:	f8d3 4140 	ldr.w	r4, [r3, #320]	; 0x140
     a58:	0464      	lsls	r4, r4, #17
     a5a:	d5ee      	bpl.n	a3a <schedule_transfer+0x26>
		//USB1_USBCMD &= ~USB_USBCMD_ATDTW;
		if (status & epmask) goto end;
     a5c:	400d      	ands	r5, r1
     a5e:	d107      	bne.n	a70 <schedule_transfer+0x5c>
		//ret |= 0x02;
		endpoint->next = (uint32_t)transfer;
		endpoint->status = 0;
		USB1_ENDPTPRIME |= epmask;
     a60:	4c0c      	ldr	r4, [pc, #48]	; (a94 <schedule_transfer+0x80>)
		endpoint->status = 0;
     a62:	e9c0 2502 	strd	r2, r5, [r0, #8]
		USB1_ENDPTPRIME |= epmask;
     a66:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     a6a:	430b      	orrs	r3, r1
     a6c:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
	endpoint->next = (uint32_t)transfer;
	endpoint->status = 0;
	USB1_ENDPTPRIME |= epmask;
	endpoint->first_transfer = transfer;
end:
	endpoint->last_transfer = transfer;
     a70:	6342      	str	r2, [r0, #52]	; 0x34
	__enable_irq();
     a72:	b662      	cpsie	i
	//digitalWriteFast(2, LOW);
	//digitalWriteFast(1, LOW);
	//if (transfer_log_head > LOG_SIZE) transfer_log_head = 0;
	//transfer_log[transfer_log_head++] = ret;
	//transfer_log_count++;
}
     a74:	bcf0      	pop	{r4, r5, r6, r7}
     a76:	4770      	bx	lr
	USB1_ENDPTPRIME |= epmask;
     a78:	4d06      	ldr	r5, [pc, #24]	; (a94 <schedule_transfer+0x80>)
	endpoint->status = 0;
     a7a:	e9c0 2402 	strd	r2, r4, [r0, #8]
	USB1_ENDPTPRIME |= epmask;
     a7e:	f8d5 31b0 	ldr.w	r3, [r5, #432]	; 0x1b0
     a82:	430b      	orrs	r3, r1
     a84:	f8c5 31b0 	str.w	r3, [r5, #432]	; 0x1b0
	endpoint->first_transfer = transfer;
     a88:	6302      	str	r2, [r0, #48]	; 0x30
	endpoint->last_transfer = transfer;
     a8a:	6342      	str	r2, [r0, #52]	; 0x34
	__enable_irq();
     a8c:	b662      	cpsie	i
}
     a8e:	bcf0      	pop	{r4, r5, r6, r7}
     a90:	4770      	bx	lr
     a92:	bf00      	nop
     a94:	402e0000 	.word	0x402e0000
     a98:	e0001000 	.word	0xe0001000

00000a9c <run_callbacks>:
	void (*callback_function)(transfer_t *completed_transfer);
	uint32_t unused1;
};*/

static void run_callbacks(endpoint_t *ep)
{
     a9c:	b570      	push	{r4, r5, r6, lr}
	//printf("run_callbacks\n");
	transfer_t *first = ep->first_transfer;
     a9e:	6b05      	ldr	r5, [r0, #48]	; 0x30
	if (first == NULL) return;
     aa0:	b19d      	cbz	r5, aca <run_callbacks+0x2e>
     aa2:	4606      	mov	r6, r0
     aa4:	462a      	mov	r2, r5

	// count how many transfers are completed, then remove them from the endpoint's list
	uint32_t count = 0;
     aa6:	2400      	movs	r4, #0
     aa8:	e003      	b.n	ab2 <run_callbacks+0x16>
			//printf(" still active\n");
			ep->first_transfer = t;
			break;
		}
		count++;
		t = (transfer_t *)t->next;
     aaa:	6812      	ldr	r2, [r2, #0]
		count++;
     aac:	3401      	adds	r4, #1
		if ((uint32_t)t == 1) {
     aae:	2a01      	cmp	r2, #1
     ab0:	d00c      	beq.n	acc <run_callbacks+0x30>
		if (t->status & (1<<7)) {
     ab2:	6853      	ldr	r3, [r2, #4]
     ab4:	f013 0380 	ands.w	r3, r3, #128	; 0x80
     ab8:	d0f7      	beq.n	aaa <run_callbacks+0xe>
			ep->first_transfer = t;
     aba:	6332      	str	r2, [r6, #48]	; 0x30
			ep->last_transfer = NULL;
			break;
		}
	}
	// do all the callbacks
	while (count) {
     abc:	b12c      	cbz	r4, aca <run_callbacks+0x2e>
		transfer_t *next = (transfer_t *)first->next;
     abe:	4628      	mov	r0, r5
		ep->callback_function(first);
     ac0:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		transfer_t *next = (transfer_t *)first->next;
     ac2:	682d      	ldr	r5, [r5, #0]
		ep->callback_function(first);
     ac4:	4798      	blx	r3
	while (count) {
     ac6:	3c01      	subs	r4, #1
     ac8:	d1f9      	bne.n	abe <run_callbacks+0x22>
		first = next;
		count--;
	}
}
     aca:	bd70      	pop	{r4, r5, r6, pc}
			ep->last_transfer = NULL;
     acc:	e9c6 330c 	strd	r3, r3, [r6, #48]	; 0x30
			break;
     ad0:	e7f4      	b.n	abc <run_callbacks+0x20>
     ad2:	bf00      	nop

00000ad4 <endpoint0_transmit.constprop.0>:
static void endpoint0_transmit(const void *data, uint32_t len, int notify)
     ad4:	b430      	push	{r4, r5}
	if (len > 0) {
     ad6:	b9d9      	cbnz	r1, b10 <endpoint0_transmit.constprop.0+0x3c>
     ad8:	4c1f      	ldr	r4, [pc, #124]	; (b58 <endpoint0_transmit.constprop.0+0x84>)
	endpoint0_transfer_ack.next = 1;
     ada:	4b20      	ldr	r3, [pc, #128]	; (b5c <endpoint0_transmit.constprop.0+0x88>)
	endpoint0_transfer_ack.pointer0 = 0;
     adc:	2100      	movs	r1, #0
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
     ade:	4a20      	ldr	r2, [pc, #128]	; (b60 <endpoint0_transmit.constprop.0+0x8c>)
	endpoint0_transfer_ack.next = 1;
     ae0:	2501      	movs	r5, #1
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
     ae2:	f04f 1001 	mov.w	r0, #65537	; 0x10001
	endpoint0_transfer_ack.pointer0 = 0;
     ae6:	6099      	str	r1, [r3, #8]
	endpoint0_transfer_ack.next = 1;
     ae8:	601d      	str	r5, [r3, #0]
	endpoint_queue_head[0].status = 0;
     aea:	e9c4 3102 	strd	r3, r1, [r4, #8]
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
     aee:	2480      	movs	r4, #128	; 0x80
     af0:	605c      	str	r4, [r3, #4]
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
     af2:	f8c2 01bc 	str.w	r0, [r2, #444]	; 0x1bc
	USB1_ENDPTPRIME |= (1<<0);
     af6:	f8d2 31b0 	ldr.w	r3, [r2, #432]	; 0x1b0
	endpoint0_notify_mask = (notify ? (1 << 0) : 0);
     afa:	481a      	ldr	r0, [pc, #104]	; (b64 <endpoint0_transmit.constprop.0+0x90>)
	USB1_ENDPTPRIME |= (1<<0);
     afc:	432b      	orrs	r3, r5
     afe:	f8c2 31b0 	str.w	r3, [r2, #432]	; 0x1b0
	endpoint0_notify_mask = (notify ? (1 << 0) : 0);
     b02:	6001      	str	r1, [r0, #0]
	while (USB1_ENDPTPRIME) ;
     b04:	f8d2 31b0 	ldr.w	r3, [r2, #432]	; 0x1b0
     b08:	2b00      	cmp	r3, #0
     b0a:	d1fb      	bne.n	b04 <endpoint0_transmit.constprop.0+0x30>
}
     b0c:	bc30      	pop	{r4, r5}
     b0e:	4770      	bx	lr
		endpoint0_transfer_data.status = (len << 16) | (1<<7);
     b10:	0409      	lsls	r1, r1, #16
		endpoint0_transfer_data.next = 1;
     b12:	4b15      	ldr	r3, [pc, #84]	; (b68 <endpoint0_transmit.constprop.0+0x94>)
		endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_data;
     b14:	4c10      	ldr	r4, [pc, #64]	; (b58 <endpoint0_transmit.constprop.0+0x84>)
		endpoint0_transfer_data.next = 1;
     b16:	2501      	movs	r5, #1
		endpoint0_transfer_data.status = (len << 16) | (1<<7);
     b18:	f041 0180 	orr.w	r1, r1, #128	; 0x80
		endpoint0_transfer_data.pointer0 = addr; // format: table 55-60, pg 3159
     b1c:	6098      	str	r0, [r3, #8]
		USB1_ENDPTPRIME |= (1<<16);
     b1e:	4a10      	ldr	r2, [pc, #64]	; (b60 <endpoint0_transmit.constprop.0+0x8c>)
		endpoint0_transfer_data.status = (len << 16) | (1<<7);
     b20:	6059      	str	r1, [r3, #4]
		endpoint0_transfer_data.pointer1 = addr + 4096;
     b22:	f500 5180 	add.w	r1, r0, #4096	; 0x1000
		endpoint0_transfer_data.next = 1;
     b26:	601d      	str	r5, [r3, #0]
		endpoint0_transfer_data.pointer1 = addr + 4096;
     b28:	60d9      	str	r1, [r3, #12]
		endpoint0_transfer_data.pointer2 = addr + 8192;
     b2a:	f500 5100 	add.w	r1, r0, #8192	; 0x2000
		endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_data;
     b2e:	64a3      	str	r3, [r4, #72]	; 0x48
		endpoint0_transfer_data.pointer2 = addr + 8192;
     b30:	6119      	str	r1, [r3, #16]
		endpoint0_transfer_data.pointer3 = addr + 12288;
     b32:	f500 5140 	add.w	r1, r0, #12288	; 0x3000
		endpoint0_transfer_data.pointer4 = addr + 16384;
     b36:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
		endpoint0_transfer_data.pointer3 = addr + 12288;
     b3a:	6159      	str	r1, [r3, #20]
		endpoint_queue_head[1].status = 0;
     b3c:	2100      	movs	r1, #0
		endpoint0_transfer_data.pointer4 = addr + 16384;
     b3e:	6198      	str	r0, [r3, #24]
		endpoint_queue_head[1].status = 0;
     b40:	64e1      	str	r1, [r4, #76]	; 0x4c
		USB1_ENDPTPRIME |= (1<<16);
     b42:	f8d2 31b0 	ldr.w	r3, [r2, #432]	; 0x1b0
     b46:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
     b4a:	f8c2 31b0 	str.w	r3, [r2, #432]	; 0x1b0
		while (USB1_ENDPTPRIME) ;
     b4e:	f8d2 31b0 	ldr.w	r3, [r2, #432]	; 0x1b0
     b52:	2b00      	cmp	r3, #0
     b54:	d1fb      	bne.n	b4e <endpoint0_transmit.constprop.0+0x7a>
     b56:	e7c0      	b.n	ada <endpoint0_transmit.constprop.0+0x6>
     b58:	20000000 	.word	0x20000000
     b5c:	20002ac0 	.word	0x20002ac0
     b60:	402e0000 	.word	0x402e0000
     b64:	20002ffc 	.word	0x20002ffc
     b68:	20002ae0 	.word	0x20002ae0

00000b6c <usb_stop_sof_interrupts>:
	sof_usage &= ~(1 << interface);
     b6c:	4908      	ldr	r1, [pc, #32]	; (b90 <usb_stop_sof_interrupts+0x24>)
     b6e:	2201      	movs	r2, #1
     b70:	780b      	ldrb	r3, [r1, #0]
     b72:	fa02 f000 	lsl.w	r0, r2, r0
     b76:	ea23 0000 	bic.w	r0, r3, r0
     b7a:	7008      	strb	r0, [r1, #0]
	if (sof_usage == 0) {
     b7c:	b930      	cbnz	r0, b8c <usb_stop_sof_interrupts+0x20>
		USB1_USBINTR &= ~USB_USBINTR_SRE;
     b7e:	4a05      	ldr	r2, [pc, #20]	; (b94 <usb_stop_sof_interrupts+0x28>)
     b80:	f8d2 3148 	ldr.w	r3, [r2, #328]	; 0x148
     b84:	f023 0380 	bic.w	r3, r3, #128	; 0x80
     b88:	f8c2 3148 	str.w	r3, [r2, #328]	; 0x148
}
     b8c:	4770      	bx	lr
     b8e:	bf00      	nop
     b90:	200030b6 	.word	0x200030b6
     b94:	402e0000 	.word	0x402e0000

00000b98 <usb_isr>:
{
     b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint32_t status = USB1_USBSTS;
     b9c:	4c97      	ldr	r4, [pc, #604]	; (dfc <usb_isr+0x264>)
{
     b9e:	b083      	sub	sp, #12
	uint32_t status = USB1_USBSTS;
     ba0:	f8d4 7144 	ldr.w	r7, [r4, #324]	; 0x144
	if (status & USB_USBSTS_UI) {
     ba4:	07fb      	lsls	r3, r7, #31
	USB1_USBSTS = status;
     ba6:	f8c4 7144 	str.w	r7, [r4, #324]	; 0x144
	if (status & USB_USBSTS_UI) {
     baa:	d553      	bpl.n	c54 <usb_isr+0xbc>
		uint32_t setupstatus = USB1_ENDPTSETUPSTAT;
     bac:	f8d4 21ac 	ldr.w	r2, [r4, #428]	; 0x1ac
		while (setupstatus) {
     bb0:	2a00      	cmp	r2, #0
     bb2:	d04a      	beq.n	c4a <usb_isr+0xb2>
     bb4:	4e92      	ldr	r6, [pc, #584]	; (e00 <usb_isr+0x268>)
     bb6:	f8df a260 	ldr.w	sl, [pc, #608]	; e18 <usb_isr+0x280>
		uint32_t addr = (uint32_t)data;
     bba:	f8df 9274 	ldr.w	r9, [pc, #628]	; e30 <usb_isr+0x298>
		endpoint_queue_head[2].pointer4 = 0xB8C6CF5D;
     bbe:	f8df b274 	ldr.w	fp, [pc, #628]	; e34 <usb_isr+0x29c>
			*((volatile uint32_t *)&USB1_ENDPTCTRL0 + endpoint) |= USB_ENDPTCTRL_RXS;
     bc2:	f8df 8274 	ldr.w	r8, [pc, #628]	; e38 <usb_isr+0x2a0>
			USB1_ENDPTSETUPSTAT = setupstatus;
     bc6:	f8c4 21ac 	str.w	r2, [r4, #428]	; 0x1ac
				s.word2 = endpoint_queue_head[0].setup1;
     bca:	e9d6 200a 	ldrd	r2, r0, [r6, #40]	; 0x28
				USB1_USBCMD |= USB_USBCMD_SUTW;
     bce:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
     bd2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
     bd6:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
			} while (!(USB1_USBCMD & USB_USBCMD_SUTW));
     bda:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
     bde:	049d      	lsls	r5, r3, #18
     be0:	d5f5      	bpl.n	bce <usb_isr+0x36>
			USB1_USBCMD &= ~USB_USBCMD_SUTW;
     be2:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
     be6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
     bea:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
			USB1_ENDPTFLUSH = (1<<16) | (1<<0); // page 3174
     bee:	f04f 1301 	mov.w	r3, #65537	; 0x10001
     bf2:	f8c4 31b4 	str.w	r3, [r4, #436]	; 0x1b4
			while (USB1_ENDPTFLUSH & ((1<<16) | (1<<0))) ;
     bf6:	f8d4 51b4 	ldr.w	r5, [r4, #436]	; 0x1b4
     bfa:	f015 1501 	ands.w	r5, r5, #65537	; 0x10001
     bfe:	d1fa      	bne.n	bf6 <usb_isr+0x5e>
			endpoint0_notify_mask = 0;
     c00:	b293      	uxth	r3, r2
	setup.bothwords = setupdata;
     c02:	4684      	mov	ip, r0
			endpoint0_notify_mask = 0;
     c04:	f8ca 5000 	str.w	r5, [sl]
	switch (setup.wRequestAndType) {
     c08:	f5b3 6f08 	cmp.w	r3, #2176	; 0x880
     c0c:	f000 81cf 	beq.w	fae <usb_isr+0x416>
     c10:	f200 80db 	bhi.w	dca <usb_isr+0x232>
     c14:	f240 3102 	movw	r1, #770	; 0x302
     c18:	428b      	cmp	r3, r1
     c1a:	f000 81e7 	beq.w	fec <usb_isr+0x454>
     c1e:	f200 809a 	bhi.w	d56 <usb_isr+0x1be>
     c22:	2b82      	cmp	r3, #130	; 0x82
     c24:	f000 81cb 	beq.w	fbe <usb_isr+0x426>
     c28:	f5b3 7f81 	cmp.w	r3, #258	; 0x102
     c2c:	f040 808a 	bne.w	d44 <usb_isr+0x1ac>
		if (endpoint > 7) break;
     c30:	f010 0f78 	tst.w	r0, #120	; 0x78
     c34:	b283      	uxth	r3, r0
     c36:	f000 8203 	beq.w	1040 <usb_isr+0x4a8>
	USB1_ENDPTCTRL0 = 0x000010001; // stall
     c3a:	f04f 1301 	mov.w	r3, #65537	; 0x10001
     c3e:	f8c4 31c0 	str.w	r3, [r4, #448]	; 0x1c0
			setupstatus = USB1_ENDPTSETUPSTAT; // page 3175
     c42:	f8d4 21ac 	ldr.w	r2, [r4, #428]	; 0x1ac
		while (setupstatus) {
     c46:	2a00      	cmp	r2, #0
     c48:	d1bd      	bne.n	bc6 <usb_isr+0x2e>
		uint32_t completestatus = USB1_ENDPTCOMPLETE;
     c4a:	4a6c      	ldr	r2, [pc, #432]	; (dfc <usb_isr+0x264>)
     c4c:	f8d2 31bc 	ldr.w	r3, [r2, #444]	; 0x1bc
		if (completestatus) {
     c50:	2b00      	cmp	r3, #0
     c52:	d142      	bne.n	cda <usb_isr+0x142>
	if (status & USB_USBSTS_URI) { // page 3164
     c54:	067e      	lsls	r6, r7, #25
     c56:	d516      	bpl.n	c86 <usb_isr+0xee>
		USB1_ENDPTSETUPSTAT = USB1_ENDPTSETUPSTAT; // Clear all setup token semaphores
     c58:	4b68      	ldr	r3, [pc, #416]	; (dfc <usb_isr+0x264>)
     c5a:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
     c5e:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
		USB1_ENDPTCOMPLETE = USB1_ENDPTCOMPLETE; // Clear all the endpoint complete status
     c62:	f8d3 21bc 	ldr.w	r2, [r3, #444]	; 0x1bc
     c66:	f8c3 21bc 	str.w	r2, [r3, #444]	; 0x1bc
		while (USB1_ENDPTPRIME != 0) ; // Wait for any endpoint priming
     c6a:	f8d3 41b0 	ldr.w	r4, [r3, #432]	; 0x1b0
     c6e:	2c00      	cmp	r4, #0
     c70:	d1fb      	bne.n	c6a <usb_isr+0xd2>
		USB1_ENDPTFLUSH = 0xFFFFFFFF;  // Cancel all endpoint primed status
     c72:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     c76:	f8c3 21b4 	str.w	r2, [r3, #436]	; 0x1b4
		if ((USB1_PORTSC1 & USB_PORTSC1_PR)) {
     c7a:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
		usb_serial_reset();
     c7e:	f000 fd2d 	bl	16dc <usb_serial_reset>
		endpointN_notify_mask = 0;
     c82:	4b60      	ldr	r3, [pc, #384]	; (e04 <usb_isr+0x26c>)
     c84:	601c      	str	r4, [r3, #0]
	if (status & USB_USBSTS_TI0) {
     c86:	01fc      	lsls	r4, r7, #7
     c88:	d503      	bpl.n	c92 <usb_isr+0xfa>
		if (usb_timer0_callback != NULL) usb_timer0_callback();
     c8a:	4b5f      	ldr	r3, [pc, #380]	; (e08 <usb_isr+0x270>)
     c8c:	681b      	ldr	r3, [r3, #0]
     c8e:	b103      	cbz	r3, c92 <usb_isr+0xfa>
     c90:	4798      	blx	r3
	if (status & USB_USBSTS_TI1) {
     c92:	01b8      	lsls	r0, r7, #6
     c94:	d503      	bpl.n	c9e <usb_isr+0x106>
		if (usb_timer1_callback != NULL) usb_timer1_callback();
     c96:	4b5d      	ldr	r3, [pc, #372]	; (e0c <usb_isr+0x274>)
     c98:	681b      	ldr	r3, [r3, #0]
     c9a:	b103      	cbz	r3, c9e <usb_isr+0x106>
     c9c:	4798      	blx	r3
	if (status & USB_USBSTS_PCI) {
     c9e:	0779      	lsls	r1, r7, #29
     ca0:	d508      	bpl.n	cb4 <usb_isr+0x11c>
		if (USB1_PORTSC1 & USB_PORTSC1_HSP) {
     ca2:	4b56      	ldr	r3, [pc, #344]	; (dfc <usb_isr+0x264>)
     ca4:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
     ca8:	f413 7300 	ands.w	r3, r3, #512	; 0x200
     cac:	d047      	beq.n	d3e <usb_isr+0x1a6>
			usb_high_speed = 1;
     cae:	4b58      	ldr	r3, [pc, #352]	; (e10 <usb_isr+0x278>)
     cb0:	2201      	movs	r2, #1
     cb2:	701a      	strb	r2, [r3, #0]
	if ((USB1_USBINTR & USB_USBINTR_SRE) && (status & USB_USBSTS_SRI)) {
     cb4:	4b51      	ldr	r3, [pc, #324]	; (dfc <usb_isr+0x264>)
     cb6:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
     cba:	061a      	lsls	r2, r3, #24
     cbc:	d50a      	bpl.n	cd4 <usb_isr+0x13c>
     cbe:	063b      	lsls	r3, r7, #24
     cc0:	d508      	bpl.n	cd4 <usb_isr+0x13c>
		if (usb_reboot_timer) {
     cc2:	4a54      	ldr	r2, [pc, #336]	; (e14 <usb_isr+0x27c>)
     cc4:	7813      	ldrb	r3, [r2, #0]
     cc6:	b12b      	cbz	r3, cd4 <usb_isr+0x13c>
			if (--usb_reboot_timer == 0) {
     cc8:	3b01      	subs	r3, #1
     cca:	b2db      	uxtb	r3, r3
     ccc:	7013      	strb	r3, [r2, #0]
     cce:	2b00      	cmp	r3, #0
     cd0:	f000 8272 	beq.w	11b8 <usb_isr+0x620>
}
     cd4:	b003      	add	sp, #12
     cd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			if (completestatus & endpoint0_notify_mask) {
     cda:	494f      	ldr	r1, [pc, #316]	; (e18 <usb_isr+0x280>)
			USB1_ENDPTCOMPLETE = completestatus;
     cdc:	f8c2 31bc 	str.w	r3, [r2, #444]	; 0x1bc
			if (completestatus & endpoint0_notify_mask) {
     ce0:	6808      	ldr	r0, [r1, #0]
     ce2:	4203      	tst	r3, r0
     ce4:	f040 81d1 	bne.w	108a <usb_isr+0x4f2>
			completestatus &= endpointN_notify_mask;
     ce8:	4a46      	ldr	r2, [pc, #280]	; (e04 <usb_isr+0x26c>)
     cea:	6814      	ldr	r4, [r2, #0]
			if (completestatus) {
     cec:	401c      	ands	r4, r3
     cee:	d0b1      	beq.n	c54 <usb_isr+0xbc>
				while (tx) {
     cf0:	ea5f 4814 	movs.w	r8, r4, lsr #16
     cf4:	d010      	beq.n	d18 <usb_isr+0x180>
     cf6:	4e42      	ldr	r6, [pc, #264]	; (e00 <usb_isr+0x268>)
					tx &= ~(1<<p);
     cf8:	f04f 0901 	mov.w	r9, #1
					int p=__builtin_ctz(tx);
     cfc:	fa98 f5a8 	rbit	r5, r8
     d00:	fab5 f585 	clz	r5, r5
					run_callbacks(endpoint_queue_head + p * 2 + 1);
     d04:	eb06 10c5 	add.w	r0, r6, r5, lsl #7
					tx &= ~(1<<p);
     d08:	fa09 f505 	lsl.w	r5, r9, r5
					run_callbacks(endpoint_queue_head + p * 2 + 1);
     d0c:	3040      	adds	r0, #64	; 0x40
     d0e:	f7ff fec5 	bl	a9c <run_callbacks>
				while (tx) {
     d12:	ea38 0805 	bics.w	r8, r8, r5
     d16:	d1f1      	bne.n	cfc <usb_isr+0x164>
				uint32_t rx = completestatus & 0xffff;
     d18:	b2a4      	uxth	r4, r4
				while(rx) {
     d1a:	2c00      	cmp	r4, #0
     d1c:	d09a      	beq.n	c54 <usb_isr+0xbc>
     d1e:	4e38      	ldr	r6, [pc, #224]	; (e00 <usb_isr+0x268>)
					rx &= ~(1<<p);
     d20:	f04f 0801 	mov.w	r8, #1
					int p=__builtin_ctz(rx);
     d24:	fa94 f5a4 	rbit	r5, r4
     d28:	fab5 f585 	clz	r5, r5
					run_callbacks(endpoint_queue_head + p * 2);
     d2c:	eb06 10c5 	add.w	r0, r6, r5, lsl #7
					rx &= ~(1<<p);
     d30:	fa08 f505 	lsl.w	r5, r8, r5
					run_callbacks(endpoint_queue_head + p * 2);
     d34:	f7ff feb2 	bl	a9c <run_callbacks>
				while(rx) {
     d38:	43ac      	bics	r4, r5
     d3a:	d1f3      	bne.n	d24 <usb_isr+0x18c>
     d3c:	e78a      	b.n	c54 <usb_isr+0xbc>
			usb_high_speed = 0;
     d3e:	4a34      	ldr	r2, [pc, #208]	; (e10 <usb_isr+0x278>)
     d40:	7013      	strb	r3, [r2, #0]
     d42:	e7b7      	b.n	cb4 <usb_isr+0x11c>
	switch (setup.wRequestAndType) {
     d44:	2b80      	cmp	r3, #128	; 0x80
     d46:	f47f af78 	bne.w	c3a <usb_isr+0xa2>
		reply_buffer[0] = 0;
     d4a:	4834      	ldr	r0, [pc, #208]	; (e1c <usb_isr+0x284>)
		endpoint0_transmit(reply_buffer, 2, 0);
     d4c:	2102      	movs	r1, #2
		reply_buffer[0] = 0;
     d4e:	8005      	strh	r5, [r0, #0]
		endpoint0_transmit(reply_buffer, 2, 0);
     d50:	f7ff fec0 	bl	ad4 <endpoint0_transmit.constprop.0>
		return;
     d54:	e775      	b.n	c42 <usb_isr+0xaa>
	switch (setup.wRequestAndType) {
     d56:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
     d5a:	f000 810b 	beq.w	f74 <usb_isr+0x3dc>
     d5e:	f5a3 63d0 	sub.w	r3, r3, #1664	; 0x680
     d62:	2b01      	cmp	r3, #1
     d64:	f63f af69 	bhi.w	c3a <usb_isr+0xa2>
		for (list = usb_descriptor_list; list->addr != NULL; list++) {
     d68:	4b2d      	ldr	r3, [pc, #180]	; (e20 <usb_isr+0x288>)
     d6a:	685d      	ldr	r5, [r3, #4]
     d6c:	2d00      	cmp	r5, #0
     d6e:	f43f af64 	beq.w	c3a <usb_isr+0xa2>
			if (setup.wValue == list->wValue && setup.wIndex == list->wIndex) {
     d72:	fa1f fc8c 	uxth.w	ip, ip
     d76:	ea4f 4e12 	mov.w	lr, r2, lsr #16
     d7a:	e004      	b.n	d86 <usb_isr+0x1ee>
		for (list = usb_descriptor_list; list->addr != NULL; list++) {
     d7c:	691d      	ldr	r5, [r3, #16]
     d7e:	330c      	adds	r3, #12
     d80:	2d00      	cmp	r5, #0
     d82:	f43f af5a 	beq.w	c3a <usb_isr+0xa2>
			if (setup.wValue == list->wValue && setup.wIndex == list->wIndex) {
     d86:	881a      	ldrh	r2, [r3, #0]
     d88:	4572      	cmp	r2, lr
     d8a:	d1f7      	bne.n	d7c <usb_isr+0x1e4>
     d8c:	885a      	ldrh	r2, [r3, #2]
     d8e:	4562      	cmp	r2, ip
     d90:	d1f4      	bne.n	d7c <usb_isr+0x1e4>
				if ((setup.wValue >> 8) == 3) {
     d92:	ea4f 221e 	mov.w	r2, lr, lsr #8
     d96:	2a03      	cmp	r2, #3
     d98:	f000 81a5 	beq.w	10e6 <usb_isr+0x54e>
					datalen = list->length;
     d9c:	891a      	ldrh	r2, [r3, #8]
				if (datalen > setup.wLength) datalen = setup.wLength;
     d9e:	0c00      	lsrs	r0, r0, #16
     da0:	4282      	cmp	r2, r0
     da2:	bf28      	it	cs
     da4:	4602      	movcs	r2, r0
				if (setup.wValue == 0x200) {
     da6:	f5be 7f00 	cmp.w	lr, #512	; 0x200
     daa:	f040 81a1 	bne.w	10f0 <usb_isr+0x558>
					if (usb_high_speed) src = usb_config_descriptor_480;
     dae:	4b18      	ldr	r3, [pc, #96]	; (e10 <usb_isr+0x278>)
     db0:	491c      	ldr	r1, [pc, #112]	; (e24 <usb_isr+0x28c>)
     db2:	7818      	ldrb	r0, [r3, #0]
     db4:	4b1c      	ldr	r3, [pc, #112]	; (e28 <usb_isr+0x290>)
					memcpy(usb_descriptor_buffer, src, datalen);
     db6:	9201      	str	r2, [sp, #4]
     db8:	2800      	cmp	r0, #0
     dba:	bf18      	it	ne
     dbc:	4619      	movne	r1, r3
     dbe:	481b      	ldr	r0, [pc, #108]	; (e2c <usb_isr+0x294>)
     dc0:	f7ff fc30 	bl	624 <memcpy>
     dc4:	4d19      	ldr	r5, [pc, #100]	; (e2c <usb_isr+0x294>)
     dc6:	9a01      	ldr	r2, [sp, #4]
     dc8:	e1e1      	b.n	118e <usb_isr+0x5f6>
	switch (setup.wRequestAndType) {
     dca:	f242 2121 	movw	r1, #8737	; 0x2221
     dce:	428b      	cmp	r3, r1
     dd0:	d07c      	beq.n	ecc <usb_isr+0x334>
     dd2:	d933      	bls.n	e3c <usb_isr+0x2a4>
     dd4:	f242 3121 	movw	r1, #8993	; 0x2321
     dd8:	428b      	cmp	r3, r1
     dda:	f000 8081 	beq.w	ee0 <usb_isr+0x348>
     dde:	f64f 01c0 	movw	r1, #63680	; 0xf8c0
     de2:	428b      	cmp	r3, r1
     de4:	f47f af29 	bne.w	c3a <usb_isr+0xa2>
		if ((setup.wIndex & 0xFF00) != 0) break; // 1=Genre, 4=Compat ID, 5=Properties
     de8:	f410 4f7f 	tst.w	r0, #65280	; 0xff00
     dec:	b283      	uxth	r3, r0
     dee:	f47f af24 	bne.w	c3a <usb_isr+0xa2>
		setup.wIndex |= 0xEE00; // alter wIndex and treat as normal USB descriptor
     df2:	f443 436e 	orr.w	r3, r3, #60928	; 0xee00
     df6:	f363 0c0f 	bfi	ip, r3, #0, #16
     dfa:	e7b5      	b.n	d68 <usb_isr+0x1d0>
     dfc:	402e0000 	.word	0x402e0000
     e00:	20000000 	.word	0x20000000
     e04:	20003000 	.word	0x20003000
     e08:	200030a0 	.word	0x200030a0
     e0c:	200030a4 	.word	0x200030a4
     e10:	200030bc 	.word	0x200030bc
     e14:	200030bd 	.word	0x200030bd
     e18:	20002ffc 	.word	0x20002ffc
     e1c:	2000303c 	.word	0x2000303c
     e20:	20001f7c 	.word	0x20001f7c
     e24:	60001ec0 	.word	0x60001ec0
     e28:	60001f24 	.word	0x60001f24
     e2c:	20200000 	.word	0x20200000
     e30:	20002ff4 	.word	0x20002ff4
     e34:	b8c6cf5d 	.word	0xb8c6cf5d
     e38:	402e01c0 	.word	0x402e01c0
	switch (setup.wRequestAndType) {
     e3c:	f5b3 6f10 	cmp.w	r3, #2304	; 0x900
     e40:	d066      	beq.n	f10 <usb_isr+0x378>
     e42:	f242 0121 	movw	r1, #8225	; 0x2021
     e46:	428b      	cmp	r3, r1
     e48:	f47f aef7 	bne.w	c3a <usb_isr+0xa2>
		if (setup.wLength != 7) break;
     e4c:	0c03      	lsrs	r3, r0, #16
     e4e:	2b07      	cmp	r3, #7
     e50:	f47f aef3 	bne.w	c3a <usb_isr+0xa2>
		endpoint0_transfer_data.next = 1;
     e54:	4bb2      	ldr	r3, [pc, #712]	; (1120 <usb_isr+0x588>)
		endpoint0_transfer_data.pointer1 = addr + 4096;
     e56:	49b3      	ldr	r1, [pc, #716]	; (1124 <usb_isr+0x58c>)
		endpoint_queue_head[0].status = 0;
     e58:	60f5      	str	r5, [r6, #12]
		endpoint0_transfer_data.pointer1 = addr + 4096;
     e5a:	60d9      	str	r1, [r3, #12]
		endpoint0_setupdata.bothwords = setupdata;
     e5c:	49b2      	ldr	r1, [pc, #712]	; (1128 <usb_isr+0x590>)
		endpoint_queue_head[0].next = (uint32_t)&endpoint0_transfer_data;
     e5e:	60b3      	str	r3, [r6, #8]
		endpoint0_transfer_data.pointer0 = addr; // format: table 55-60, pg 3159
     e60:	f8c3 9008 	str.w	r9, [r3, #8]
		endpoint0_setupdata.bothwords = setupdata;
     e64:	e9c1 2000 	strd	r2, r0, [r1]
		endpoint0_transfer_data.next = 1;
     e68:	2201      	movs	r2, #1
     e6a:	601a      	str	r2, [r3, #0]
		endpoint0_transfer_data.status = (len << 16) | (1<<7);
     e6c:	4aaf      	ldr	r2, [pc, #700]	; (112c <usb_isr+0x594>)
     e6e:	605a      	str	r2, [r3, #4]
		endpoint0_transfer_data.pointer2 = addr + 8192;
     e70:	4aaf      	ldr	r2, [pc, #700]	; (1130 <usb_isr+0x598>)
     e72:	611a      	str	r2, [r3, #16]
		USB1_ENDPTPRIME |= (1<<0);
     e74:	f8d4 11b0 	ldr.w	r1, [r4, #432]	; 0x1b0
     e78:	f041 0101 	orr.w	r1, r1, #1
     e7c:	f8c4 11b0 	str.w	r1, [r4, #432]	; 0x1b0
		endpoint0_transfer_data.pointer3 = addr + 12288;
     e80:	f502 5180 	add.w	r1, r2, #4096	; 0x1000
		endpoint0_transfer_data.pointer4 = addr + 16384;
     e84:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
		endpoint0_transfer_data.pointer3 = addr + 12288;
     e88:	6159      	str	r1, [r3, #20]
		endpoint0_transfer_data.pointer4 = addr + 16384;
     e8a:	619a      	str	r2, [r3, #24]
		while (USB1_ENDPTPRIME) ;
     e8c:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     e90:	2b00      	cmp	r3, #0
     e92:	d1fb      	bne.n	e8c <usb_isr+0x2f4>
	endpoint0_transfer_ack.next = 1;
     e94:	4aa7      	ldr	r2, [pc, #668]	; (1134 <usb_isr+0x59c>)
	endpoint_queue_head[1].status = 0;
     e96:	64f3      	str	r3, [r6, #76]	; 0x4c
	endpoint0_transfer_ack.pointer0 = 0;
     e98:	6093      	str	r3, [r2, #8]
	endpoint0_transfer_ack.next = 1;
     e9a:	2301      	movs	r3, #1
	endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_ack;
     e9c:	64b2      	str	r2, [r6, #72]	; 0x48
	endpoint0_transfer_ack.next = 1;
     e9e:	6013      	str	r3, [r2, #0]
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
     ea0:	f248 0380 	movw	r3, #32896	; 0x8080
     ea4:	6053      	str	r3, [r2, #4]
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
     ea6:	f04f 1301 	mov.w	r3, #65537	; 0x10001
     eaa:	f8c4 31bc 	str.w	r3, [r4, #444]	; 0x1bc
	USB1_ENDPTPRIME |= (1<<16);
     eae:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     eb2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
     eb6:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
	endpoint0_notify_mask = (notify ? (1 << 16) : 0);
     eba:	f44f 3380 	mov.w	r3, #65536	; 0x10000
     ebe:	f8ca 3000 	str.w	r3, [sl]
	while (USB1_ENDPTPRIME) ;
     ec2:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     ec6:	2b00      	cmp	r3, #0
     ec8:	d1fb      	bne.n	ec2 <usb_isr+0x32a>
     eca:	e6ba      	b.n	c42 <usb_isr+0xaa>
		if (setup.wIndex == CDC_STATUS_INTERFACE) {
     ecc:	b280      	uxth	r0, r0
     ece:	b938      	cbnz	r0, ee0 <usb_isr+0x348>
			usb_cdc_line_rtsdtr_millis = systick_millis_count;
     ed0:	4b99      	ldr	r3, [pc, #612]	; (1138 <usb_isr+0x5a0>)
			usb_cdc_line_rtsdtr = setup.wValue;
     ed2:	f3c2 4207 	ubfx	r2, r2, #16, #8
			usb_cdc_line_rtsdtr_millis = systick_millis_count;
     ed6:	6819      	ldr	r1, [r3, #0]
     ed8:	4b98      	ldr	r3, [pc, #608]	; (113c <usb_isr+0x5a4>)
     eda:	6019      	str	r1, [r3, #0]
			usb_cdc_line_rtsdtr = setup.wValue;
     edc:	4b98      	ldr	r3, [pc, #608]	; (1140 <usb_isr+0x5a8>)
     ede:	701a      	strb	r2, [r3, #0]
	endpoint0_transfer_ack.next = 1;
     ee0:	4b94      	ldr	r3, [pc, #592]	; (1134 <usb_isr+0x59c>)
	endpoint0_transfer_ack.pointer0 = 0;
     ee2:	2200      	movs	r2, #0
     ee4:	609a      	str	r2, [r3, #8]
	endpoint_queue_head[1].status = 0;
     ee6:	64f2      	str	r2, [r6, #76]	; 0x4c
	endpoint0_transfer_ack.next = 1;
     ee8:	2201      	movs	r2, #1
	endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_ack;
     eea:	64b3      	str	r3, [r6, #72]	; 0x48
	endpoint0_transfer_ack.next = 1;
     eec:	601a      	str	r2, [r3, #0]
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
     eee:	2280      	movs	r2, #128	; 0x80
     ef0:	605a      	str	r2, [r3, #4]
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
     ef2:	f04f 1301 	mov.w	r3, #65537	; 0x10001
     ef6:	f8c4 31bc 	str.w	r3, [r4, #444]	; 0x1bc
	USB1_ENDPTPRIME |= (1<<16);
     efa:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     efe:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
     f02:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
	while (USB1_ENDPTPRIME) ;
     f06:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     f0a:	2b00      	cmp	r3, #0
     f0c:	d1fb      	bne.n	f06 <usb_isr+0x36e>
     f0e:	e698      	b.n	c42 <usb_isr+0xaa>
		usb_configuration = setup.wValue;
     f10:	f3c2 4207 	ubfx	r2, r2, #16, #8
     f14:	4b8b      	ldr	r3, [pc, #556]	; (1144 <usb_isr+0x5ac>)
     f16:	701a      	strb	r2, [r3, #0]
		USB1_ENDPTCTRL2 = ENDPOINT2_CONFIG;
     f18:	4b8b      	ldr	r3, [pc, #556]	; (1148 <usb_isr+0x5b0>)
     f1a:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
		USB1_ENDPTCTRL3 = ENDPOINT3_CONFIG;
     f1e:	4b8b      	ldr	r3, [pc, #556]	; (114c <usb_isr+0x5b4>)
     f20:	f8c4 31cc 	str.w	r3, [r4, #460]	; 0x1cc
		USB1_ENDPTCTRL4 = ENDPOINT4_CONFIG;
     f24:	4b8a      	ldr	r3, [pc, #552]	; (1150 <usb_isr+0x5b8>)
     f26:	f8c4 31d0 	str.w	r3, [r4, #464]	; 0x1d0
		usb_serial_configure();
     f2a:	f000 fbd9 	bl	16e0 <usb_serial_configure>
		memset(endpoint_queue_head + 2, 0, sizeof(endpoint_t) * 2);
     f2e:	2280      	movs	r2, #128	; 0x80
     f30:	4629      	mov	r1, r5
     f32:	4888      	ldr	r0, [pc, #544]	; (1154 <usb_isr+0x5bc>)
     f34:	f00b fe4e 	bl	cbd4 <memset>
		endpoint_queue_head[3].pointer4 = 0x74D59319;
     f38:	4b87      	ldr	r3, [pc, #540]	; (1158 <usb_isr+0x5c0>)
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
     f3a:	2280      	movs	r2, #128	; 0x80
		endpoint_queue_head[2].pointer4 = 0xB8C6CF5D;
     f3c:	f8c6 b0a0 	str.w	fp, [r6, #160]	; 0xa0
		endpoint_queue_head[3].pointer4 = 0x74D59319;
     f40:	f8c6 30e0 	str.w	r3, [r6, #224]	; 0xe0
	endpoint0_transfer_ack.next = 1;
     f44:	4b7b      	ldr	r3, [pc, #492]	; (1134 <usb_isr+0x59c>)
	endpoint_queue_head[1].status = 0;
     f46:	64f5      	str	r5, [r6, #76]	; 0x4c
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
     f48:	605a      	str	r2, [r3, #4]
	endpoint0_transfer_ack.next = 1;
     f4a:	2201      	movs	r2, #1
	endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_ack;
     f4c:	64b3      	str	r3, [r6, #72]	; 0x48
	endpoint0_transfer_ack.pointer0 = 0;
     f4e:	609d      	str	r5, [r3, #8]
	endpoint0_transfer_ack.next = 1;
     f50:	601a      	str	r2, [r3, #0]
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
     f52:	f04f 1301 	mov.w	r3, #65537	; 0x10001
     f56:	f8c4 31bc 	str.w	r3, [r4, #444]	; 0x1bc
	USB1_ENDPTPRIME |= (1<<16);
     f5a:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     f5e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
     f62:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
	endpoint0_notify_mask = (notify ? (1 << 16) : 0);
     f66:	f8ca 5000 	str.w	r5, [sl]
	while (USB1_ENDPTPRIME) ;
     f6a:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     f6e:	2b00      	cmp	r3, #0
     f70:	d1fb      	bne.n	f6a <usb_isr+0x3d2>
     f72:	e666      	b.n	c42 <usb_isr+0xaa>
	endpoint0_transfer_ack.next = 1;
     f74:	4b6f      	ldr	r3, [pc, #444]	; (1134 <usb_isr+0x59c>)
     f76:	2101      	movs	r1, #1
	endpoint_queue_head[1].status = 0;
     f78:	64f5      	str	r5, [r6, #76]	; 0x4c
	endpoint0_transfer_ack.next = 1;
     f7a:	6019      	str	r1, [r3, #0]
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
     f7c:	2180      	movs	r1, #128	; 0x80
	endpoint0_transfer_ack.pointer0 = 0;
     f7e:	609d      	str	r5, [r3, #8]
	endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_ack;
     f80:	64b3      	str	r3, [r6, #72]	; 0x48
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
     f82:	6059      	str	r1, [r3, #4]
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
     f84:	f04f 1301 	mov.w	r3, #65537	; 0x10001
     f88:	f8c4 31bc 	str.w	r3, [r4, #444]	; 0x1bc
	USB1_ENDPTPRIME |= (1<<16);
     f8c:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     f90:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
     f94:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
	while (USB1_ENDPTPRIME) ;
     f98:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     f9c:	2b00      	cmp	r3, #0
     f9e:	d1fb      	bne.n	f98 <usb_isr+0x400>
		USB1_DEVICEADDR = USB_DEVICEADDR_USBADR(setup.wValue) | USB_DEVICEADDR_USBADRA;
     fa0:	0c13      	lsrs	r3, r2, #16
     fa2:	065b      	lsls	r3, r3, #25
     fa4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
     fa8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
		return;
     fac:	e649      	b.n	c42 <usb_isr+0xaa>
		reply_buffer[0] = usb_configuration;
     fae:	4b65      	ldr	r3, [pc, #404]	; (1144 <usb_isr+0x5ac>)
		endpoint0_transmit(reply_buffer, 1, 0);
     fb0:	2101      	movs	r1, #1
		reply_buffer[0] = usb_configuration;
     fb2:	486a      	ldr	r0, [pc, #424]	; (115c <usb_isr+0x5c4>)
     fb4:	781b      	ldrb	r3, [r3, #0]
     fb6:	7003      	strb	r3, [r0, #0]
		endpoint0_transmit(reply_buffer, 1, 0);
     fb8:	f7ff fd8c 	bl	ad4 <endpoint0_transmit.constprop.0>
		return;
     fbc:	e641      	b.n	c42 <usb_isr+0xaa>
		endpoint = setup.wIndex & 0x7F;
     fbe:	b283      	uxth	r3, r0
		if (endpoint > 7) break;
     fc0:	f010 0078 	ands.w	r0, r0, #120	; 0x78
     fc4:	f47f ae39 	bne.w	c3a <usb_isr+0xa2>
		endpoint = setup.wIndex & 0x7F;
     fc8:	f003 027f 	and.w	r2, r3, #127	; 0x7f
		ctrl = *((uint32_t *)&USB1_ENDPTCTRL0 + endpoint);
     fcc:	f858 1022 	ldr.w	r1, [r8, r2, lsl #2]
		reply_buffer[0] = 0;
     fd0:	4a62      	ldr	r2, [pc, #392]	; (115c <usb_isr+0x5c4>)
     fd2:	8010      	strh	r0, [r2, #0]
		if ((dir && (ctrl & USB_ENDPTCTRL_TXS)) || (!dir && (ctrl & USB_ENDPTCTRL_RXS))) {
     fd4:	0618      	lsls	r0, r3, #24
     fd6:	f100 809e 	bmi.w	1116 <usb_isr+0x57e>
     fda:	07cb      	lsls	r3, r1, #31
     fdc:	d501      	bpl.n	fe2 <usb_isr+0x44a>
			reply_buffer[0] = 1;
     fde:	2301      	movs	r3, #1
     fe0:	7013      	strb	r3, [r2, #0]
		endpoint0_transmit(reply_buffer, 2, 0);
     fe2:	2102      	movs	r1, #2
     fe4:	485d      	ldr	r0, [pc, #372]	; (115c <usb_isr+0x5c4>)
     fe6:	f7ff fd75 	bl	ad4 <endpoint0_transmit.constprop.0>
		return;
     fea:	e62a      	b.n	c42 <usb_isr+0xaa>
		if (endpoint > 7) break;
     fec:	f010 0f78 	tst.w	r0, #120	; 0x78
     ff0:	b283      	uxth	r3, r0
     ff2:	f47f ae22 	bne.w	c3a <usb_isr+0xa2>
		endpoint = setup.wIndex & 0x7F;
     ff6:	f003 027f 	and.w	r2, r3, #127	; 0x7f
		if (dir) {
     ffa:	f013 0f80 	tst.w	r3, #128	; 0x80
			*((volatile uint32_t *)&USB1_ENDPTCTRL0 + endpoint) |= USB_ENDPTCTRL_TXS;
     ffe:	f858 3022 	ldr.w	r3, [r8, r2, lsl #2]
    1002:	bf14      	ite	ne
    1004:	f443 3380 	orrne.w	r3, r3, #65536	; 0x10000
			*((volatile uint32_t *)&USB1_ENDPTCTRL0 + endpoint) |= USB_ENDPTCTRL_RXS;
    1008:	f043 0301 	orreq.w	r3, r3, #1
    100c:	f848 3022 	str.w	r3, [r8, r2, lsl #2]
	endpoint0_transfer_ack.pointer0 = 0;
    1010:	2200      	movs	r2, #0
	endpoint0_transfer_ack.next = 1;
    1012:	4b48      	ldr	r3, [pc, #288]	; (1134 <usb_isr+0x59c>)
	endpoint_queue_head[1].status = 0;
    1014:	64f2      	str	r2, [r6, #76]	; 0x4c
	endpoint0_transfer_ack.pointer0 = 0;
    1016:	609a      	str	r2, [r3, #8]
	endpoint0_transfer_ack.next = 1;
    1018:	2201      	movs	r2, #1
	endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_ack;
    101a:	64b3      	str	r3, [r6, #72]	; 0x48
	endpoint0_transfer_ack.next = 1;
    101c:	601a      	str	r2, [r3, #0]
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
    101e:	2280      	movs	r2, #128	; 0x80
    1020:	605a      	str	r2, [r3, #4]
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
    1022:	f04f 1301 	mov.w	r3, #65537	; 0x10001
    1026:	f8c4 31bc 	str.w	r3, [r4, #444]	; 0x1bc
	USB1_ENDPTPRIME |= (1<<16);
    102a:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
    102e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
    1032:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
	while (USB1_ENDPTPRIME) ;
    1036:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
    103a:	2b00      	cmp	r3, #0
    103c:	d1fb      	bne.n	1036 <usb_isr+0x49e>
    103e:	e600      	b.n	c42 <usb_isr+0xaa>
		endpoint = setup.wIndex & 0x7F;
    1040:	f003 027f 	and.w	r2, r3, #127	; 0x7f
		if (dir) {
    1044:	f013 0f80 	tst.w	r3, #128	; 0x80
			*((volatile uint32_t *)&USB1_ENDPTCTRL0 + endpoint) &= ~USB_ENDPTCTRL_TXS;
    1048:	f858 3022 	ldr.w	r3, [r8, r2, lsl #2]
    104c:	bf14      	ite	ne
    104e:	f423 3380 	bicne.w	r3, r3, #65536	; 0x10000
			*((volatile uint32_t *)&USB1_ENDPTCTRL0 + endpoint) &= ~USB_ENDPTCTRL_RXS;
    1052:	f023 0301 	biceq.w	r3, r3, #1
    1056:	f848 3022 	str.w	r3, [r8, r2, lsl #2]
	endpoint0_transfer_ack.pointer0 = 0;
    105a:	2200      	movs	r2, #0
	endpoint0_transfer_ack.next = 1;
    105c:	4b35      	ldr	r3, [pc, #212]	; (1134 <usb_isr+0x59c>)
	endpoint_queue_head[1].status = 0;
    105e:	64f2      	str	r2, [r6, #76]	; 0x4c
	endpoint0_transfer_ack.pointer0 = 0;
    1060:	609a      	str	r2, [r3, #8]
	endpoint0_transfer_ack.next = 1;
    1062:	2201      	movs	r2, #1
	endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_ack;
    1064:	64b3      	str	r3, [r6, #72]	; 0x48
	endpoint0_transfer_ack.next = 1;
    1066:	601a      	str	r2, [r3, #0]
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
    1068:	2280      	movs	r2, #128	; 0x80
    106a:	605a      	str	r2, [r3, #4]
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
    106c:	f04f 1301 	mov.w	r3, #65537	; 0x10001
    1070:	f8c4 31bc 	str.w	r3, [r4, #444]	; 0x1bc
	USB1_ENDPTPRIME |= (1<<16);
    1074:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
    1078:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
    107c:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
	while (USB1_ENDPTPRIME) ;
    1080:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
    1084:	2b00      	cmp	r3, #0
    1086:	d1fb      	bne.n	1080 <usb_isr+0x4e8>
    1088:	e5db      	b.n	c42 <usb_isr+0xaa>
				endpoint0_notify_mask = 0;
    108a:	2000      	movs	r0, #0
    108c:	6008      	str	r0, [r1, #0]
	setup.bothwords = endpoint0_setupdata.bothwords;
    108e:	4926      	ldr	r1, [pc, #152]	; (1128 <usb_isr+0x590>)
	if (setup.wRequestAndType == 0x2021 && setup.wIndex == CDC_STATUS_INTERFACE) {
    1090:	880c      	ldrh	r4, [r1, #0]
	setup.bothwords = endpoint0_setupdata.bothwords;
    1092:	6848      	ldr	r0, [r1, #4]
	if (setup.wRequestAndType == 0x2021 && setup.wIndex == CDC_STATUS_INTERFACE) {
    1094:	f242 0121 	movw	r1, #8225	; 0x2021
    1098:	428c      	cmp	r4, r1
    109a:	f47f ae25 	bne.w	ce8 <usb_isr+0x150>
    109e:	b280      	uxth	r0, r0
    10a0:	2800      	cmp	r0, #0
    10a2:	f47f ae21 	bne.w	ce8 <usb_isr+0x150>
		memcpy(usb_cdc_line_coding, endpoint0_buffer, 7);
    10a6:	492e      	ldr	r1, [pc, #184]	; (1160 <usb_isr+0x5c8>)
    10a8:	4c2e      	ldr	r4, [pc, #184]	; (1164 <usb_isr+0x5cc>)
    10aa:	c903      	ldmia	r1, {r0, r1}
    10ac:	80a1      	strh	r1, [r4, #4]
		if (usb_cdc_line_coding[0] == 134) {
    10ae:	2886      	cmp	r0, #134	; 0x86
		memcpy(usb_cdc_line_coding, endpoint0_buffer, 7);
    10b0:	ea4f 4111 	mov.w	r1, r1, lsr #16
    10b4:	6020      	str	r0, [r4, #0]
    10b6:	71a1      	strb	r1, [r4, #6]
		if (usb_cdc_line_coding[0] == 134) {
    10b8:	f47f ae16 	bne.w	ce8 <usb_isr+0x150>
	__disable_irq();
    10bc:	b672      	cpsid	i
	sof_usage |= (1 << interface);
    10be:	482a      	ldr	r0, [pc, #168]	; (1168 <usb_isr+0x5d0>)
    10c0:	7801      	ldrb	r1, [r0, #0]
    10c2:	f041 0108 	orr.w	r1, r1, #8
    10c6:	7001      	strb	r1, [r0, #0]
	uint32_t intr = USB1_USBINTR;
    10c8:	f8d2 1148 	ldr.w	r1, [r2, #328]	; 0x148
	if (!(intr & USB_USBINTR_SRE)) {
    10cc:	060d      	lsls	r5, r1, #24
    10ce:	d405      	bmi.n	10dc <usb_isr+0x544>
		USB1_USBSTS = USB_USBSTS_SRI; // clear prior SOF before SOF IRQ enable
    10d0:	2080      	movs	r0, #128	; 0x80
		USB1_USBINTR = intr | USB_USBINTR_SRE;
    10d2:	4301      	orrs	r1, r0
		USB1_USBSTS = USB_USBSTS_SRI; // clear prior SOF before SOF IRQ enable
    10d4:	f8c2 0144 	str.w	r0, [r2, #324]	; 0x144
		USB1_USBINTR = intr | USB_USBINTR_SRE;
    10d8:	f8c2 1148 	str.w	r1, [r2, #328]	; 0x148
	__enable_irq();
    10dc:	b662      	cpsie	i
			usb_reboot_timer = 80; // TODO: 10 if only 12 Mbit/sec
    10de:	4a23      	ldr	r2, [pc, #140]	; (116c <usb_isr+0x5d4>)
    10e0:	2150      	movs	r1, #80	; 0x50
    10e2:	7011      	strb	r1, [r2, #0]
    10e4:	e600      	b.n	ce8 <usb_isr+0x150>
				if (datalen > setup.wLength) datalen = setup.wLength;
    10e6:	0c00      	lsrs	r0, r0, #16
					datalen = *(list->addr);
    10e8:	782a      	ldrb	r2, [r5, #0]
    10ea:	4282      	cmp	r2, r0
    10ec:	bf28      	it	cs
    10ee:	4602      	movcs	r2, r0
				} else if (setup.wValue == 0x700) {
    10f0:	f5be 6fe0 	cmp.w	lr, #1792	; 0x700
    10f4:	d144      	bne.n	1180 <usb_isr+0x5e8>
					if (usb_high_speed) src = usb_config_descriptor_12;
    10f6:	4b1e      	ldr	r3, [pc, #120]	; (1170 <usb_isr+0x5d8>)
					memcpy(usb_descriptor_buffer, src, datalen);
    10f8:	4d1e      	ldr	r5, [pc, #120]	; (1174 <usb_isr+0x5dc>)
					if (usb_high_speed) src = usb_config_descriptor_12;
    10fa:	7818      	ldrb	r0, [r3, #0]
    10fc:	491e      	ldr	r1, [pc, #120]	; (1178 <usb_isr+0x5e0>)
    10fe:	4b1f      	ldr	r3, [pc, #124]	; (117c <usb_isr+0x5e4>)
					memcpy(usb_descriptor_buffer, src, datalen);
    1100:	9201      	str	r2, [sp, #4]
    1102:	2800      	cmp	r0, #0
    1104:	bf18      	it	ne
    1106:	4619      	movne	r1, r3
    1108:	4628      	mov	r0, r5
    110a:	f7ff fa8b 	bl	624 <memcpy>
					usb_descriptor_buffer[1] = 7;
    110e:	2307      	movs	r3, #7
    1110:	706b      	strb	r3, [r5, #1]
    1112:	9a01      	ldr	r2, [sp, #4]
    1114:	e03b      	b.n	118e <usb_isr+0x5f6>
		if ((dir && (ctrl & USB_ENDPTCTRL_TXS)) || (!dir && (ctrl & USB_ENDPTCTRL_RXS))) {
    1116:	03c9      	lsls	r1, r1, #15
    1118:	f53f af61 	bmi.w	fde <usb_isr+0x446>
    111c:	e761      	b.n	fe2 <usb_isr+0x44a>
    111e:	bf00      	nop
    1120:	20002ae0 	.word	0x20002ae0
    1124:	20003ff4 	.word	0x20003ff4
    1128:	20002c80 	.word	0x20002c80
    112c:	00070080 	.word	0x00070080
    1130:	20004ff4 	.word	0x20004ff4
    1134:	20002ac0 	.word	0x20002ac0
    1138:	2000308c 	.word	0x2000308c
    113c:	2000309c 	.word	0x2000309c
    1140:	200030ba 	.word	0x200030ba
    1144:	200030bb 	.word	0x200030bb
    1148:	00cc0002 	.word	0x00cc0002
    114c:	000200c8 	.word	0x000200c8
    1150:	00c80002 	.word	0x00c80002
    1154:	20000080 	.word	0x20000080
    1158:	74d59319 	.word	0x74d59319
    115c:	2000303c 	.word	0x2000303c
    1160:	20002ff4 	.word	0x20002ff4
    1164:	20003094 	.word	0x20003094
    1168:	200030b6 	.word	0x200030b6
    116c:	200030bd 	.word	0x200030bd
    1170:	200030bc 	.word	0x200030bc
    1174:	20200000 	.word	0x20200000
    1178:	60001f24 	.word	0x60001f24
    117c:	60001ec0 	.word	0x60001ec0
					memcpy(usb_descriptor_buffer, list->addr, datalen);
    1180:	4629      	mov	r1, r5
    1182:	4d10      	ldr	r5, [pc, #64]	; (11c4 <usb_isr+0x62c>)
    1184:	9201      	str	r2, [sp, #4]
    1186:	4628      	mov	r0, r5
    1188:	f7ff fa4c 	bl	624 <memcpy>
    118c:	9a01      	ldr	r2, [sp, #4]
	uint32_t location = (uint32_t)addr & 0xFFFFFFE0;
    118e:	f025 031f 	bic.w	r3, r5, #31
	uint32_t end_addr = (uint32_t)addr + size;
    1192:	4415      	add	r5, r2
	asm("dsb");
    1194:	f3bf 8f4f 	dsb	sy
		SCB_CACHE_DCCIMVAC = location;
    1198:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
    119c:	f8c1 3f70 	str.w	r3, [r1, #3952]	; 0xf70
		location += 32;
    11a0:	3320      	adds	r3, #32
	} while (location < end_addr);
    11a2:	429d      	cmp	r5, r3
    11a4:	d8fa      	bhi.n	119c <usb_isr+0x604>
	asm("dsb");
    11a6:	f3bf 8f4f 	dsb	sy
	asm("isb");
    11aa:	f3bf 8f6f 	isb	sy
				endpoint0_transmit(usb_descriptor_buffer, datalen, 0);
    11ae:	4805      	ldr	r0, [pc, #20]	; (11c4 <usb_isr+0x62c>)
    11b0:	4611      	mov	r1, r2
    11b2:	f7ff fc8f 	bl	ad4 <endpoint0_transmit.constprop.0>
				return;
    11b6:	e544      	b.n	c42 <usb_isr+0xaa>
				usb_stop_sof_interrupts(NUM_INTERFACE);
    11b8:	2003      	movs	r0, #3
    11ba:	f7ff fcd7 	bl	b6c <usb_stop_sof_interrupts>
				_reboot_Teensyduino_();
    11be:	f00f fd4f 	bl	10c60 <___reboot_Teensyduino__veneer>
    11c2:	bf00      	nop
    11c4:	20200000 	.word	0x20200000

000011c8 <usb_config_rx>:
{
    11c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    11cc:	461f      	mov	r7, r3
	if (ep < 2 || ep > NUM_ENDPOINTS) return;
    11ce:	1e83      	subs	r3, r0, #2
    11d0:	2b02      	cmp	r3, #2
    11d2:	d901      	bls.n	11d8 <usb_config_rx+0x10>
}
    11d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	usb_endpoint_config(endpoint_queue_head + ep * 2, config, cb);
    11d8:	f8df 904c 	ldr.w	r9, [pc, #76]	; 1228 <usb_config_rx+0x60>
    11dc:	4615      	mov	r5, r2
    11de:	460c      	mov	r4, r1
	memset(qh, 0, sizeof(endpoint_t));
    11e0:	223c      	movs	r2, #60	; 0x3c
	usb_endpoint_config(endpoint_queue_head + ep * 2, config, cb);
    11e2:	eb09 18c0 	add.w	r8, r9, r0, lsl #7
	memset(qh, 0, sizeof(endpoint_t));
    11e6:	4606      	mov	r6, r0
	usb_endpoint_config(endpoint_queue_head + ep * 2, config, cb);
    11e8:	ea4f 1ac0 	mov.w	sl, r0, lsl #7
	memset(qh, 0, sizeof(endpoint_t));
    11ec:	2100      	movs	r1, #0
    11ee:	f108 0004 	add.w	r0, r8, #4
	uint32_t config = (packet_size << 16) | (do_zlp ? 0 : (1 << 29));
    11f2:	0424      	lsls	r4, r4, #16
	memset(qh, 0, sizeof(endpoint_t));
    11f4:	f00b fcee 	bl	cbd4 <memset>
	uint32_t config = (packet_size << 16) | (do_zlp ? 0 : (1 << 29));
    11f8:	fab5 f285 	clz	r2, r5
	qh->next = 1; // Terminate bit = 1
    11fc:	2301      	movs	r3, #1
	uint32_t config = (packet_size << 16) | (do_zlp ? 0 : (1 << 29));
    11fe:	0952      	lsrs	r2, r2, #5
    1200:	ea44 7442 	orr.w	r4, r4, r2, lsl #29
	qh->config = config;
    1204:	f849 400a 	str.w	r4, [r9, sl]
	qh->callback_function = callback;
    1208:	f8c8 7038 	str.w	r7, [r8, #56]	; 0x38
	qh->next = 1; // Terminate bit = 1
    120c:	f8c8 3008 	str.w	r3, [r8, #8]
	if (cb) endpointN_notify_mask |= (1 << ep);
    1210:	2f00      	cmp	r7, #0
    1212:	d0df      	beq.n	11d4 <usb_config_rx+0xc>
    1214:	4a03      	ldr	r2, [pc, #12]	; (1224 <usb_config_rx+0x5c>)
    1216:	40b3      	lsls	r3, r6
    1218:	6811      	ldr	r1, [r2, #0]
    121a:	430b      	orrs	r3, r1
    121c:	6013      	str	r3, [r2, #0]
}
    121e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    1222:	bf00      	nop
    1224:	20003000 	.word	0x20003000
    1228:	20000000 	.word	0x20000000

0000122c <usb_config_tx>:
{
    122c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    1230:	460d      	mov	r5, r1
	if (ep < 2 || ep > NUM_ENDPOINTS) return;
    1232:	1e81      	subs	r1, r0, #2
    1234:	2902      	cmp	r1, #2
    1236:	d901      	bls.n	123c <usb_config_tx+0x10>
}
    1238:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	usb_endpoint_config(endpoint_queue_head + ep * 2 + 1, config, cb);
    123c:	01c7      	lsls	r7, r0, #7
    123e:	f8df 904c 	ldr.w	r9, [pc, #76]	; 128c <usb_config_tx+0x60>
    1242:	4692      	mov	sl, r2
    1244:	4604      	mov	r4, r0
    1246:	3740      	adds	r7, #64	; 0x40
	memset(qh, 0, sizeof(endpoint_t));
    1248:	223c      	movs	r2, #60	; 0x3c
    124a:	2100      	movs	r1, #0
    124c:	461e      	mov	r6, r3
	usb_endpoint_config(endpoint_queue_head + ep * 2 + 1, config, cb);
    124e:	eb09 0807 	add.w	r8, r9, r7
	uint32_t config = (packet_size << 16) | (do_zlp ? 0 : (1 << 29));
    1252:	042d      	lsls	r5, r5, #16
	memset(qh, 0, sizeof(endpoint_t));
    1254:	f108 0004 	add.w	r0, r8, #4
    1258:	f00b fcbc 	bl	cbd4 <memset>
	uint32_t config = (packet_size << 16) | (do_zlp ? 0 : (1 << 29));
    125c:	faba f28a 	clz	r2, sl
    1260:	0952      	lsrs	r2, r2, #5
    1262:	ea45 7242 	orr.w	r2, r5, r2, lsl #29
	qh->config = config;
    1266:	f849 2007 	str.w	r2, [r9, r7]
	qh->next = 1; // Terminate bit = 1
    126a:	2201      	movs	r2, #1
	qh->callback_function = callback;
    126c:	f8c8 6038 	str.w	r6, [r8, #56]	; 0x38
	qh->next = 1; // Terminate bit = 1
    1270:	f8c8 2008 	str.w	r2, [r8, #8]
	if (cb) endpointN_notify_mask |= (1 << (ep + 16));
    1274:	2e00      	cmp	r6, #0
    1276:	d0df      	beq.n	1238 <usb_config_tx+0xc>
    1278:	4b03      	ldr	r3, [pc, #12]	; (1288 <usb_config_tx+0x5c>)
    127a:	3410      	adds	r4, #16
    127c:	6819      	ldr	r1, [r3, #0]
    127e:	40a2      	lsls	r2, r4
    1280:	430a      	orrs	r2, r1
    1282:	601a      	str	r2, [r3, #0]
}
    1284:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    1288:	20003000 	.word	0x20003000
    128c:	20000000 	.word	0x20000000

00001290 <usb_prepare_transfer>:
	transfer->status = (len << 16) | (1<<7);
    1290:	0412      	lsls	r2, r2, #16
	transfer->pointer0 = addr;
    1292:	6081      	str	r1, [r0, #8]
	transfer->callback_param = param;
    1294:	61c3      	str	r3, [r0, #28]
	transfer->pointer3 = addr + 12288;
    1296:	f501 5340 	add.w	r3, r1, #12288	; 0x3000
	transfer->status = (len << 16) | (1<<7);
    129a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
{
    129e:	b410      	push	{r4}
	transfer->next = 1;
    12a0:	2401      	movs	r4, #1
	transfer->status = (len << 16) | (1<<7);
    12a2:	6042      	str	r2, [r0, #4]
	transfer->pointer2 = addr + 8192;
    12a4:	f501 5200 	add.w	r2, r1, #8192	; 0x2000
	transfer->next = 1;
    12a8:	6004      	str	r4, [r0, #0]
	transfer->pointer1 = addr + 4096;
    12aa:	f501 5480 	add.w	r4, r1, #4096	; 0x1000
	transfer->pointer4 = addr + 16384;
    12ae:	f501 4180 	add.w	r1, r1, #16384	; 0x4000
	transfer->pointer1 = addr + 4096;
    12b2:	60c4      	str	r4, [r0, #12]
	transfer->pointer4 = addr + 16384;
    12b4:	6181      	str	r1, [r0, #24]
}
    12b6:	f85d 4b04 	ldr.w	r4, [sp], #4
	transfer->pointer3 = addr + 12288;
    12ba:	e9c0 2304 	strd	r2, r3, [r0, #16]
}
    12be:	4770      	bx	lr

000012c0 <usb_transmit>:

void usb_transmit(int endpoint_number, transfer_t *transfer)
{
	if (endpoint_number < 2 || endpoint_number > NUM_ENDPOINTS) return;
    12c0:	1e83      	subs	r3, r0, #2
{
    12c2:	460a      	mov	r2, r1
	if (endpoint_number < 2 || endpoint_number > NUM_ENDPOINTS) return;
    12c4:	2b02      	cmp	r3, #2
    12c6:	d900      	bls.n	12ca <usb_transmit+0xa>
	endpoint_t *endpoint = endpoint_queue_head + endpoint_number * 2 + 1;
	uint32_t mask = 1 << (endpoint_number + 16);
	schedule_transfer(endpoint, mask, transfer);
}
    12c8:	4770      	bx	lr
	endpoint_t *endpoint = endpoint_queue_head + endpoint_number * 2 + 1;
    12ca:	4b06      	ldr	r3, [pc, #24]	; (12e4 <usb_transmit+0x24>)
	uint32_t mask = 1 << (endpoint_number + 16);
    12cc:	f100 0110 	add.w	r1, r0, #16
    12d0:	f04f 0c01 	mov.w	ip, #1
	endpoint_t *endpoint = endpoint_queue_head + endpoint_number * 2 + 1;
    12d4:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
	schedule_transfer(endpoint, mask, transfer);
    12d8:	fa0c f101 	lsl.w	r1, ip, r1
    12dc:	3040      	adds	r0, #64	; 0x40
    12de:	f7ff bb99 	b.w	a14 <schedule_transfer>
    12e2:	bf00      	nop
    12e4:	20000000 	.word	0x20000000

000012e8 <usb_receive>:

void usb_receive(int endpoint_number, transfer_t *transfer)
{
	if (endpoint_number < 2 || endpoint_number > NUM_ENDPOINTS) return;
    12e8:	1e83      	subs	r3, r0, #2
{
    12ea:	460a      	mov	r2, r1
	if (endpoint_number < 2 || endpoint_number > NUM_ENDPOINTS) return;
    12ec:	2b02      	cmp	r3, #2
    12ee:	d900      	bls.n	12f2 <usb_receive+0xa>
	endpoint_t *endpoint = endpoint_queue_head + endpoint_number * 2;
	uint32_t mask = 1 << endpoint_number;
	schedule_transfer(endpoint, mask, transfer);
}
    12f0:	4770      	bx	lr
	uint32_t mask = 1 << endpoint_number;
    12f2:	2101      	movs	r1, #1
	endpoint_t *endpoint = endpoint_queue_head + endpoint_number * 2;
    12f4:	4b02      	ldr	r3, [pc, #8]	; (1300 <usb_receive+0x18>)
	schedule_transfer(endpoint, mask, transfer);
    12f6:	4081      	lsls	r1, r0
    12f8:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
    12fc:	f7ff bb8a 	b.w	a14 <schedule_transfer>
    1300:	20000000 	.word	0x20000000

00001304 <usb_transfer_status>:
		//if (!(cmd & USB_USBCMD_ATDTW)) continue;
		//if (status & 0x80) break; // for still active, only 1 reading needed
		//if (++count > 1) break; // for completed, check 10 times
	}
#else
	return transfer->status;
    1304:	6840      	ldr	r0, [r0, #4]
#endif
}
    1306:	4770      	bx	lr

00001308 <usb_init_serialnumber>:
void usb_init_serialnumber(void)
{
	char buf[11];
	uint32_t i, num;

	num = HW_OCOTP_MAC0 & 0xFFFFFF;
    1308:	4a12      	ldr	r2, [pc, #72]	; (1354 <usb_init_serialnumber+0x4c>)
	// add extra zero to work around OS-X CDC-ACM driver bug
	if (num < 10000000) num = num * 10;
    130a:	4b13      	ldr	r3, [pc, #76]	; (1358 <usb_init_serialnumber+0x50>)
	num = HW_OCOTP_MAC0 & 0xFFFFFF;
    130c:	f8d2 0220 	ldr.w	r0, [r2, #544]	; 0x220
    1310:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
	if (num < 10000000) num = num * 10;
    1314:	4298      	cmp	r0, r3
{
    1316:	b510      	push	{r4, lr}
    1318:	b084      	sub	sp, #16
	if (num < 10000000) num = num * 10;
    131a:	d202      	bcs.n	1322 <usb_init_serialnumber+0x1a>
    131c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
    1320:	0040      	lsls	r0, r0, #1
	ultoa(num, buf, 10);
    1322:	4c0e      	ldr	r4, [pc, #56]	; (135c <usb_init_serialnumber+0x54>)
    1324:	a901      	add	r1, sp, #4
    1326:	220a      	movs	r2, #10
    1328:	f7ff fa1c 	bl	764 <ultoa>
	for (i=0; i<10; i++) {
    132c:	a901      	add	r1, sp, #4
    132e:	2300      	movs	r3, #0
    1330:	4620      	mov	r0, r4
		char c = buf[i];
    1332:	f811 2b01 	ldrb.w	r2, [r1], #1
	for (i=0; i<10; i++) {
    1336:	3301      	adds	r3, #1
		if (!c) break;
    1338:	b13a      	cbz	r2, 134a <usb_init_serialnumber+0x42>
	for (i=0; i<10; i++) {
    133a:	2b0a      	cmp	r3, #10
		usb_string_serial_number_default.wString[i] = c;
    133c:	f820 2f02 	strh.w	r2, [r0, #2]!
	for (i=0; i<10; i++) {
    1340:	d1f7      	bne.n	1332 <usb_init_serialnumber+0x2a>
    1342:	2316      	movs	r3, #22
	}
	usb_string_serial_number_default.bLength = i * 2 + 2;
    1344:	7023      	strb	r3, [r4, #0]
}
    1346:	b004      	add	sp, #16
    1348:	bd10      	pop	{r4, pc}
	usb_string_serial_number_default.bLength = i * 2 + 2;
    134a:	005b      	lsls	r3, r3, #1
    134c:	b2db      	uxtb	r3, r3
    134e:	7023      	strb	r3, [r4, #0]
}
    1350:	b004      	add	sp, #16
    1352:	bd10      	pop	{r4, pc}
    1354:	401f4400 	.word	0x401f4400
    1358:	00989680 	.word	0x00989680
    135c:	20002748 	.word	0x20002748

00001360 <usb_serial_class::clear()>:
        virtual void clear(void) { usb_serial_flush_input(); }
    1360:	f000 badc 	b.w	191c <usb_serial_flush_input>

00001364 <usb_serial_class::peek()>:
        virtual int peek() { return usb_serial_peekchar(); }
    1364:	f000 baac 	b.w	18c0 <usb_serial_peekchar>

00001368 <usb_serial_class::read()>:
        virtual int read() { return usb_serial_getchar(); }
    1368:	f000 bb10 	b.w	198c <usb_serial_getchar>

0000136c <usb_serial_class::available()>:
        virtual int available() { return usb_serial_available(); }
    136c:	f000 baca 	b.w	1904 <usb_serial_available>

00001370 <usb_serial_class::flush()>:
        virtual void flush() { usb_serial_flush_output(); }  // TODO: actually wait for data to leave USB...
    1370:	f000 bb66 	b.w	1a40 <usb_serial_flush_output>

00001374 <usb_serial_class::availableForWrite()>:
	virtual int availableForWrite() { return usb_serial_write_buffer_free(); }
    1374:	f000 bb3c 	b.w	19f0 <usb_serial_write_buffer_free>

00001378 <usb_serial_class::write(unsigned char const*, unsigned int)>:
        virtual size_t write(const uint8_t *buffer, size_t size) { return usb_serial_write(buffer, size); }
    1378:	4608      	mov	r0, r1
    137a:	4611      	mov	r1, r2
    137c:	f000 bb2c 	b.w	19d8 <usb_serial_write>

00001380 <rx_queue_transfer>:
/*************************************************************************/
/**                               Receive                               **/
/*************************************************************************/

static void rx_queue_transfer(int i)
{
    1380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	NVIC_DISABLE_IRQ(IRQ_USB1);
	printf("rx queue i=%d\n", i);
	void *buffer = rx_buffer + i * CDC_RX_SIZE_480;
    1382:	4c14      	ldr	r4, [pc, #80]	; (13d4 <rx_queue_transfer+0x54>)
	NVIC_DISABLE_IRQ(IRQ_USB1);
    1384:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
	usb_prepare_transfer(rx_transfer + i, buffer, rx_packet_size, i);
    1388:	4e13      	ldr	r6, [pc, #76]	; (13d8 <rx_queue_transfer+0x58>)
	NVIC_DISABLE_IRQ(IRQ_USB1);
    138a:	f44f 3200 	mov.w	r2, #131072	; 0x20000
	void *buffer = rx_buffer + i * CDC_RX_SIZE_480;
    138e:	eb04 2440 	add.w	r4, r4, r0, lsl #9
	usb_prepare_transfer(rx_transfer + i, buffer, rx_packet_size, i);
    1392:	4f12      	ldr	r7, [pc, #72]	; (13dc <rx_queue_transfer+0x5c>)
    1394:	eb06 1640 	add.w	r6, r6, r0, lsl #5
{
    1398:	4603      	mov	r3, r0
	NVIC_DISABLE_IRQ(IRQ_USB1);
    139a:	f8c5 218c 	str.w	r2, [r5, #396]	; 0x18c
	usb_prepare_transfer(rx_transfer + i, buffer, rx_packet_size, i);
    139e:	4621      	mov	r1, r4
    13a0:	883a      	ldrh	r2, [r7, #0]
    13a2:	4630      	mov	r0, r6
    13a4:	f7ff ff74 	bl	1290 <usb_prepare_transfer>
	arm_dcache_delete(buffer, rx_packet_size);
    13a8:	883b      	ldrh	r3, [r7, #0]
	uint32_t end_addr = (uint32_t)addr + size;
    13aa:	4423      	add	r3, r4
	asm("dsb");
    13ac:	f3bf 8f4f 	dsb	sy
		SCB_CACHE_DCIMVAC = location;
    13b0:	f8c5 4f5c 	str.w	r4, [r5, #3932]	; 0xf5c
		location += 32;
    13b4:	3420      	adds	r4, #32
	} while (location < end_addr);
    13b6:	42a3      	cmp	r3, r4
    13b8:	d8fa      	bhi.n	13b0 <rx_queue_transfer+0x30>
	asm("dsb");
    13ba:	f3bf 8f4f 	dsb	sy
	asm("isb");
    13be:	f3bf 8f6f 	isb	sy
	usb_receive(CDC_RX_ENDPOINT, rx_transfer + i);
    13c2:	2003      	movs	r0, #3
    13c4:	4631      	mov	r1, r6
    13c6:	f7ff ff8f 	bl	12e8 <usb_receive>
	NVIC_ENABLE_IRQ(IRQ_USB1);
    13ca:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    13ce:	f8c5 310c 	str.w	r3, [r5, #268]	; 0x10c
}
    13d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    13d4:	20200080 	.word	0x20200080
    13d8:	20002b00 	.word	0x20002b00
    13dc:	200030a8 	.word	0x200030a8

000013e0 <rx_event>:

// called by USB interrupt when any packet is received
static void rx_event(transfer_t *t)
{
	int len = rx_packet_size - ((t->status >> 16) & 0x7FFF);
    13e0:	4b24      	ldr	r3, [pc, #144]	; (1474 <rx_event+0x94>)
{
    13e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int len = rx_packet_size - ((t->status >> 16) & 0x7FFF);
    13e6:	881c      	ldrh	r4, [r3, #0]
    13e8:	6843      	ldr	r3, [r0, #4]
	int i = t->callback_param;
    13ea:	69c5      	ldr	r5, [r0, #28]
	int len = rx_packet_size - ((t->status >> 16) & 0x7FFF);
    13ec:	f3c3 430e 	ubfx	r3, r3, #16, #15
    13f0:	1ae4      	subs	r4, r4, r3
	printf("rx event, len=%d, i=%d\n", len, i);
	if (len > 0) {
    13f2:	2c00      	cmp	r4, #0
    13f4:	dd24      	ble.n	1440 <rx_event+0x60>
		// received a packet with data
		uint32_t head = rx_head;
    13f6:	4920      	ldr	r1, [pc, #128]	; (1478 <rx_event+0x98>)
		if (head != rx_tail) {
    13f8:	4820      	ldr	r0, [pc, #128]	; (147c <rx_event+0x9c>)
		uint32_t head = rx_head;
    13fa:	780a      	ldrb	r2, [r1, #0]
		if (head != rx_tail) {
    13fc:	7800      	ldrb	r0, [r0, #0]
		uint32_t head = rx_head;
    13fe:	b2d3      	uxtb	r3, r2
			// a previous packet is still buffered
			uint32_t ii = rx_list[head];
			uint32_t count = rx_count[ii];
    1400:	4e1f      	ldr	r6, [pc, #124]	; (1480 <rx_event+0xa0>)
		if (head != rx_tail) {
    1402:	4282      	cmp	r2, r0
			uint32_t ii = rx_list[head];
    1404:	481f      	ldr	r0, [pc, #124]	; (1484 <rx_event+0xa4>)
		if (head != rx_tail) {
    1406:	d007      	beq.n	1418 <rx_event+0x38>
			uint32_t ii = rx_list[head];
    1408:	f810 8003 	ldrb.w	r8, [r0, r3]
			uint32_t count = rx_count[ii];
    140c:	f836 7018 	ldrh.w	r7, [r6, r8, lsl #1]
			if (len <= CDC_RX_SIZE_480 - count) {
    1410:	f5c7 7200 	rsb	r2, r7, #512	; 0x200
    1414:	4294      	cmp	r4, r2
    1416:	d918      	bls.n	144a <rx_event+0x6a>
			}
		}
		// add this packet to rx_list
		rx_count[i] = len;
		rx_index[i] = 0;
		if (++head > RX_NUM) head = 0;
    1418:	3301      	adds	r3, #1
		rx_index[i] = 0;
    141a:	2200      	movs	r2, #0
		rx_count[i] = len;
    141c:	f826 4015 	strh.w	r4, [r6, r5, lsl #1]
		if (++head > RX_NUM) head = 0;
    1420:	2b08      	cmp	r3, #8
		rx_index[i] = 0;
    1422:	4e19      	ldr	r6, [pc, #100]	; (1488 <rx_event+0xa8>)
		if (++head > RX_NUM) head = 0;
    1424:	bf88      	it	hi
    1426:	4613      	movhi	r3, r2
		rx_index[i] = 0;
    1428:	f826 2015 	strh.w	r2, [r6, r5, lsl #1]
		rx_list[head] = i;
		rx_head = head;
    142c:	bf98      	it	ls
    142e:	b2da      	uxtbls	r2, r3
		rx_list[head] = i;
    1430:	54c5      	strb	r5, [r0, r3]
		rx_available += len;
    1432:	4b16      	ldr	r3, [pc, #88]	; (148c <rx_event+0xac>)
		rx_head = head;
    1434:	700a      	strb	r2, [r1, #0]
		rx_available += len;
    1436:	681a      	ldr	r2, [r3, #0]
    1438:	4414      	add	r4, r2
    143a:	601c      	str	r4, [r3, #0]
		// TODO: trigger serialEvent
	} else {
		// received a zero length packet
		rx_queue_transfer(i);
	}
}
    143c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		rx_queue_transfer(i);
    1440:	4628      	mov	r0, r5
}
    1442:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		rx_queue_transfer(i);
    1446:	f7ff bf9b 	b.w	1380 <rx_queue_transfer>
				memcpy(rx_buffer + ii * CDC_RX_SIZE_480 + count,
    144a:	eb07 2048 	add.w	r0, r7, r8, lsl #9
    144e:	4910      	ldr	r1, [pc, #64]	; (1490 <rx_event+0xb0>)
    1450:	4622      	mov	r2, r4
				rx_count[ii] = count + len;
    1452:	4427      	add	r7, r4
				memcpy(rx_buffer + ii * CDC_RX_SIZE_480 + count,
    1454:	4408      	add	r0, r1
    1456:	eb01 2145 	add.w	r1, r1, r5, lsl #9
    145a:	f7ff f8e3 	bl	624 <memcpy>
				rx_available += len;
    145e:	4a0b      	ldr	r2, [pc, #44]	; (148c <rx_event+0xac>)
				rx_queue_transfer(i);
    1460:	4628      	mov	r0, r5
				rx_count[ii] = count + len;
    1462:	f826 7018 	strh.w	r7, [r6, r8, lsl #1]
				rx_available += len;
    1466:	6813      	ldr	r3, [r2, #0]
    1468:	4423      	add	r3, r4
}
    146a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
				rx_available += len;
    146e:	6013      	str	r3, [r2, #0]
				rx_queue_transfer(i);
    1470:	f7ff bf86 	b.w	1380 <rx_queue_transfer>
    1474:	200030a8 	.word	0x200030a8
    1478:	200030b4 	.word	0x200030b4
    147c:	200030b5 	.word	0x200030b5
    1480:	20003048 	.word	0x20003048
    1484:	20003068 	.word	0x20003068
    1488:	20003058 	.word	0x20003058
    148c:	20003044 	.word	0x20003044
    1490:	20200080 	.word	0x20200080

00001494 <usb_serial_flush_callback>:
	tx_noautoflush = 0;
}

static void usb_serial_flush_callback(void)
{
	if (tx_noautoflush) return;
    1494:	4b1d      	ldr	r3, [pc, #116]	; (150c <usb_serial_flush_callback+0x78>)
    1496:	781a      	ldrb	r2, [r3, #0]
    1498:	2a00      	cmp	r2, #0
    149a:	d136      	bne.n	150a <usb_serial_flush_callback+0x76>
	if (!usb_configuration) return;
    149c:	f002 03ff 	and.w	r3, r2, #255	; 0xff
    14a0:	4a1b      	ldr	r2, [pc, #108]	; (1510 <usb_serial_flush_callback+0x7c>)
    14a2:	7812      	ldrb	r2, [r2, #0]
    14a4:	b38a      	cbz	r2, 150a <usb_serial_flush_callback+0x76>
{
    14a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if (tx_available == 0) return;
    14aa:	4d1a      	ldr	r5, [pc, #104]	; (1514 <usb_serial_flush_callback+0x80>)
    14ac:	882a      	ldrh	r2, [r5, #0]
    14ae:	b352      	cbz	r2, 1506 <usb_serial_flush_callback+0x72>
	//printf("flush callback, %d bytes\n", TX_SIZE - tx_available);
	transfer_t *xfer = tx_transfer + tx_head;
    14b0:	4e19      	ldr	r6, [pc, #100]	; (1518 <usb_serial_flush_callback+0x84>)
	uint8_t *txbuf = txbuffer + (tx_head * TX_SIZE);
	uint32_t txnum = TX_SIZE - tx_available;
    14b2:	f5c2 6800 	rsb	r8, r2, #2048	; 0x800
	transfer_t *xfer = tx_transfer + tx_head;
    14b6:	4f19      	ldr	r7, [pc, #100]	; (151c <usb_serial_flush_callback+0x88>)
    14b8:	7832      	ldrb	r2, [r6, #0]
	uint8_t *txbuf = txbuffer + (tx_head * TX_SIZE);
    14ba:	4c19      	ldr	r4, [pc, #100]	; (1520 <usb_serial_flush_callback+0x8c>)
	transfer_t *xfer = tx_transfer + tx_head;
    14bc:	eb07 1742 	add.w	r7, r7, r2, lsl #5
	uint8_t *txbuf = txbuffer + (tx_head * TX_SIZE);
    14c0:	eb04 24c2 	add.w	r4, r4, r2, lsl #11
	usb_prepare_transfer(xfer, txbuf, txnum, 0);
    14c4:	4642      	mov	r2, r8
    14c6:	4638      	mov	r0, r7
    14c8:	4621      	mov	r1, r4
    14ca:	f7ff fee1 	bl	1290 <usb_prepare_transfer>
	uint32_t end_addr = (uint32_t)addr + size;
    14ce:	eb04 0208 	add.w	r2, r4, r8
	asm("dsb");
    14d2:	f3bf 8f4f 	dsb	sy
		SCB_CACHE_DCCIMVAC = location;
    14d6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
    14da:	f8c3 4f70 	str.w	r4, [r3, #3952]	; 0xf70
		location += 32;
    14de:	3420      	adds	r4, #32
	} while (location < end_addr);
    14e0:	42a2      	cmp	r2, r4
    14e2:	d8fa      	bhi.n	14da <usb_serial_flush_callback+0x46>
	asm("dsb");
    14e4:	f3bf 8f4f 	dsb	sy
	asm("isb");
    14e8:	f3bf 8f6f 	isb	sy
	arm_dcache_flush_delete(txbuf, txnum);
	usb_transmit(CDC_TX_ENDPOINT, xfer);
    14ec:	2004      	movs	r0, #4
    14ee:	4639      	mov	r1, r7
    14f0:	f7ff fee6 	bl	12c0 <usb_transmit>
	if (++tx_head >= TX_NUM) tx_head = 0;
    14f4:	7833      	ldrb	r3, [r6, #0]
    14f6:	3301      	adds	r3, #1
    14f8:	b2db      	uxtb	r3, r3
    14fa:	2b03      	cmp	r3, #3
    14fc:	bf88      	it	hi
    14fe:	2300      	movhi	r3, #0
    1500:	7033      	strb	r3, [r6, #0]
	tx_available = 0;
    1502:	2300      	movs	r3, #0
    1504:	802b      	strh	r3, [r5, #0]
}
    1506:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    150a:	4770      	bx	lr
    150c:	200030b9 	.word	0x200030b9
    1510:	200030bb 	.word	0x200030bb
    1514:	200030aa 	.word	0x200030aa
    1518:	200030b8 	.word	0x200030b8
    151c:	20002c00 	.word	0x20002c00
    1520:	20201080 	.word	0x20201080

00001524 <usb_serial_write.part.0>:
int usb_serial_write(const void *buffer, uint32_t size)
    1524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1528:	b085      	sub	sp, #20
	while (size > 0) {
    152a:	e9cd 1001 	strd	r1, r0, [sp, #4]
    152e:	2900      	cmp	r1, #0
    1530:	f000 80bf 	beq.w	16b2 <usb_serial_write.part.0+0x18e>
	uint32_t sent=0;
    1534:	2300      	movs	r3, #0
    1536:	4c60      	ldr	r4, [pc, #384]	; (16b8 <usb_serial_write.part.0+0x194>)
    1538:	f8df 8198 	ldr.w	r8, [pc, #408]	; 16d4 <usb_serial_write.part.0+0x1b0>
    153c:	f8df a198 	ldr.w	sl, [pc, #408]	; 16d8 <usb_serial_write.part.0+0x1b4>
				wait_begin_at = systick_millis_count;
    1540:	4f5e      	ldr	r7, [pc, #376]	; (16bc <usb_serial_write.part.0+0x198>)
	uint32_t sent=0;
    1542:	9300      	str	r3, [sp, #0]
		tx_noautoflush = 1;
    1544:	2301      	movs	r3, #1
		transfer_t *xfer = tx_transfer + tx_head;
    1546:	4a5e      	ldr	r2, [pc, #376]	; (16c0 <usb_serial_write.part.0+0x19c>)
		tx_noautoflush = 1;
    1548:	7023      	strb	r3, [r4, #0]
		transfer_t *xfer = tx_transfer + tx_head;
    154a:	4b5e      	ldr	r3, [pc, #376]	; (16c4 <usb_serial_write.part.0+0x1a0>)
    154c:	7819      	ldrb	r1, [r3, #0]
		while (!tx_available) {
    154e:	f8b8 3000 	ldrh.w	r3, [r8]
		transfer_t *xfer = tx_transfer + tx_head;
    1552:	eb02 1941 	add.w	r9, r2, r1, lsl #5
		while (!tx_available) {
    1556:	2b00      	cmp	r3, #0
    1558:	f040 80a7 	bne.w	16aa <usb_serial_write.part.0+0x186>
		uint32_t wait_begin_at=0;
    155c:	461e      	mov	r6, r3
		int waiting=0;
    155e:	461d      	mov	r5, r3
			tx_noautoflush = 0;
    1560:	469b      	mov	fp, r3
			uint32_t status = usb_transfer_status(xfer);
    1562:	4648      	mov	r0, r9
    1564:	f7ff fece 	bl	1304 <usb_transfer_status>
			if (!(status & 0x80)) {
    1568:	f010 0080 	ands.w	r0, r0, #128	; 0x80
    156c:	f000 808c 	beq.w	1688 <usb_serial_write.part.0+0x164>
			asm("dsb" ::: "memory");
    1570:	f3bf 8f4f 	dsb	sy
			if (transmit_previous_timeout) return sent;
    1574:	f89a 3000 	ldrb.w	r3, [sl]
			tx_noautoflush = 0;
    1578:	f884 b000 	strb.w	fp, [r4]
			if (!waiting) {
    157c:	b905      	cbnz	r5, 1580 <usb_serial_write.part.0+0x5c>
				wait_begin_at = systick_millis_count;
    157e:	683e      	ldr	r6, [r7, #0]
			if (transmit_previous_timeout) return sent;
    1580:	2b00      	cmp	r3, #0
    1582:	d17d      	bne.n	1680 <usb_serial_write.part.0+0x15c>
			if (systick_millis_count - wait_begin_at > TX_TIMEOUT_MSEC) {
    1584:	683b      	ldr	r3, [r7, #0]
    1586:	1b9b      	subs	r3, r3, r6
    1588:	2b78      	cmp	r3, #120	; 0x78
    158a:	f200 8087 	bhi.w	169c <usb_serial_write.part.0+0x178>
			if (!usb_configuration) return sent;
    158e:	4b4e      	ldr	r3, [pc, #312]	; (16c8 <usb_serial_write.part.0+0x1a4>)
    1590:	781b      	ldrb	r3, [r3, #0]
    1592:	2b00      	cmp	r3, #0
    1594:	d074      	beq.n	1680 <usb_serial_write.part.0+0x15c>
			yield();
    1596:	f000 fa9d 	bl	1ad4 <yield>
			tx_noautoflush = 1;
    159a:	2201      	movs	r2, #1
		while (!tx_available) {
    159c:	f8b8 3000 	ldrh.w	r3, [r8]
    15a0:	4615      	mov	r5, r2
			tx_noautoflush = 1;
    15a2:	7022      	strb	r2, [r4, #0]
		while (!tx_available) {
    15a4:	2b00      	cmp	r3, #0
    15a6:	d0dc      	beq.n	1562 <usb_serial_write.part.0+0x3e>
		uint8_t *txdata = txbuffer + (tx_head * TX_SIZE) + (TX_SIZE - tx_available);
    15a8:	4a46      	ldr	r2, [pc, #280]	; (16c4 <usb_serial_write.part.0+0x1a0>)
    15aa:	f5c3 6000 	rsb	r0, r3, #2048	; 0x800
    15ae:	7811      	ldrb	r1, [r2, #0]
    15b0:	461a      	mov	r2, r3
    15b2:	eb00 20c1 	add.w	r0, r0, r1, lsl #11
    15b6:	4d45      	ldr	r5, [pc, #276]	; (16cc <usb_serial_write.part.0+0x1a8>)
    15b8:	02c9      	lsls	r1, r1, #11
    15ba:	4428      	add	r0, r5
		if (size >= tx_available) {
    15bc:	9d01      	ldr	r5, [sp, #4]
    15be:	4295      	cmp	r5, r2
    15c0:	d217      	bcs.n	15f2 <usb_serial_write.part.0+0xce>
			memcpy(txdata, data, size);
    15c2:	9303      	str	r3, [sp, #12]
    15c4:	e9dd 5101 	ldrd	r5, r1, [sp, #4]
    15c8:	462a      	mov	r2, r5
    15ca:	f7ff f82b 	bl	624 <memcpy>
			tx_available -= size;
    15ce:	9b03      	ldr	r3, [sp, #12]
	USB1_GPTIMER0CTRL = USB_GPTIMERCTRL_GPTRUN | USB_GPTIMERCTRL_GPTRST;
    15d0:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
			tx_available -= size;
    15d4:	1b5b      	subs	r3, r3, r5
    15d6:	f8a8 3000 	strh.w	r3, [r8]
	USB1_GPTIMER0CTRL = USB_GPTIMERCTRL_GPTRUN | USB_GPTIMERCTRL_GPTRST;
    15da:	4b3d      	ldr	r3, [pc, #244]	; (16d0 <usb_serial_write.part.0+0x1ac>)
    15dc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		asm("dsb" ::: "memory");
    15e0:	f3bf 8f4f 	dsb	sy
			sent += size;
    15e4:	9800      	ldr	r0, [sp, #0]
		tx_noautoflush = 0;
    15e6:	2300      	movs	r3, #0
			sent += size;
    15e8:	4428      	add	r0, r5
		tx_noautoflush = 0;
    15ea:	7023      	strb	r3, [r4, #0]
}
    15ec:	b005      	add	sp, #20
    15ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			uint8_t *txbuf = txbuffer + (tx_head * TX_SIZE);
    15f2:	4b36      	ldr	r3, [pc, #216]	; (16cc <usb_serial_write.part.0+0x1a8>)
    15f4:	18cd      	adds	r5, r1, r3
			memcpy(txdata, data, tx_available);
    15f6:	9902      	ldr	r1, [sp, #8]
    15f8:	f7ff f814 	bl	624 <memcpy>
			usb_prepare_transfer(xfer, txbuf, TX_SIZE, 0);
    15fc:	2300      	movs	r3, #0
    15fe:	f44f 6200 	mov.w	r2, #2048	; 0x800
    1602:	4629      	mov	r1, r5
    1604:	4648      	mov	r0, r9
    1606:	f7ff fe43 	bl	1290 <usb_prepare_transfer>
	asm("dsb");
    160a:	f3bf 8f4f 	dsb	sy
    160e:	f105 0220 	add.w	r2, r5, #32
	uint32_t end_addr = (uint32_t)addr + size;
    1612:	f505 6300 	add.w	r3, r5, #2048	; 0x800
    1616:	4293      	cmp	r3, r2
    1618:	bf34      	ite	cc
    161a:	2301      	movcc	r3, #1
    161c:	2340      	movcs	r3, #64	; 0x40
		SCB_CACHE_DCCIMVAC = location;
    161e:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
    1622:	eb05 1343 	add.w	r3, r5, r3, lsl #5
    1626:	f8c2 5f70 	str.w	r5, [r2, #3952]	; 0xf70
		location += 32;
    162a:	3520      	adds	r5, #32
	} while (location < end_addr);
    162c:	42ab      	cmp	r3, r5
    162e:	d1fa      	bne.n	1626 <usb_serial_write.part.0+0x102>
	asm("dsb");
    1630:	f3bf 8f4f 	dsb	sy
	asm("isb");
    1634:	f3bf 8f6f 	isb	sy
			usb_transmit(CDC_TX_ENDPOINT, xfer);
    1638:	2004      	movs	r0, #4
    163a:	4649      	mov	r1, r9
    163c:	f7ff fe40 	bl	12c0 <usb_transmit>
			if (++tx_head >= TX_NUM) tx_head = 0;
    1640:	4a20      	ldr	r2, [pc, #128]	; (16c4 <usb_serial_write.part.0+0x1a0>)
    1642:	7813      	ldrb	r3, [r2, #0]
    1644:	3301      	adds	r3, #1
    1646:	b2db      	uxtb	r3, r3
    1648:	2b03      	cmp	r3, #3
    164a:	bf84      	itt	hi
    164c:	2300      	movhi	r3, #0
    164e:	4a1d      	ldrhi	r2, [pc, #116]	; (16c4 <usb_serial_write.part.0+0x1a0>)
    1650:	7013      	strb	r3, [r2, #0]
			size -= tx_available;
    1652:	f8b8 3000 	ldrh.w	r3, [r8]
    1656:	9a01      	ldr	r2, [sp, #4]
    1658:	1ad1      	subs	r1, r2, r3
			sent += tx_available;
    165a:	9a00      	ldr	r2, [sp, #0]
    165c:	441a      	add	r2, r3
			size -= tx_available;
    165e:	9101      	str	r1, [sp, #4]
			sent += tx_available;
    1660:	9200      	str	r2, [sp, #0]
			data += tx_available;
    1662:	9a02      	ldr	r2, [sp, #8]
    1664:	441a      	add	r2, r3
			tx_available = 0;
    1666:	2300      	movs	r3, #0
			data += tx_available;
    1668:	9202      	str	r2, [sp, #8]
	USB1_GPTIMER0CTRL = 0;
    166a:	4a19      	ldr	r2, [pc, #100]	; (16d0 <usb_serial_write.part.0+0x1ac>)
			tx_available = 0;
    166c:	f8a8 3000 	strh.w	r3, [r8]
	USB1_GPTIMER0CTRL = 0;
    1670:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
		asm("dsb" ::: "memory");
    1674:	f3bf 8f4f 	dsb	sy
		tx_noautoflush = 0;
    1678:	7023      	strb	r3, [r4, #0]
	while (size > 0) {
    167a:	2900      	cmp	r1, #0
    167c:	f47f af62 	bne.w	1544 <usb_serial_write.part.0+0x20>
	return sent;
    1680:	9800      	ldr	r0, [sp, #0]
}
    1682:	b005      	add	sp, #20
    1684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				tx_available = TX_SIZE;
    1688:	f44f 6200 	mov.w	r2, #2048	; 0x800
		uint8_t *txdata = txbuffer + (tx_head * TX_SIZE) + (TX_SIZE - tx_available);
    168c:	4b0d      	ldr	r3, [pc, #52]	; (16c4 <usb_serial_write.part.0+0x1a0>)
				transmit_previous_timeout = 0;
    168e:	f88a 0000 	strb.w	r0, [sl]
		uint8_t *txdata = txbuffer + (tx_head * TX_SIZE) + (TX_SIZE - tx_available);
    1692:	7819      	ldrb	r1, [r3, #0]
				break;
    1694:	4613      	mov	r3, r2
				tx_available = TX_SIZE;
    1696:	f8a8 2000 	strh.w	r2, [r8]
				break;
    169a:	e78a      	b.n	15b2 <usb_serial_write.part.0+0x8e>
				transmit_previous_timeout = 1;
    169c:	2301      	movs	r3, #1
				return sent;
    169e:	9800      	ldr	r0, [sp, #0]
				transmit_previous_timeout = 1;
    16a0:	f88a 3000 	strb.w	r3, [sl]
}
    16a4:	b005      	add	sp, #20
    16a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		uint8_t *txdata = txbuffer + (tx_head * TX_SIZE) + (TX_SIZE - tx_available);
    16aa:	461a      	mov	r2, r3
    16ac:	f5c3 6000 	rsb	r0, r3, #2048	; 0x800
    16b0:	e77f      	b.n	15b2 <usb_serial_write.part.0+0x8e>
	while (size > 0) {
    16b2:	9801      	ldr	r0, [sp, #4]
	return sent;
    16b4:	e7e5      	b.n	1682 <usb_serial_write.part.0+0x15e>
    16b6:	bf00      	nop
    16b8:	200030b9 	.word	0x200030b9
    16bc:	2000308c 	.word	0x2000308c
    16c0:	20002c00 	.word	0x20002c00
    16c4:	200030b8 	.word	0x200030b8
    16c8:	200030bb 	.word	0x200030bb
    16cc:	20201080 	.word	0x20201080
    16d0:	402e0000 	.word	0x402e0000
    16d4:	200030aa 	.word	0x200030aa
    16d8:	200030b7 	.word	0x200030b7

000016dc <usb_serial_reset>:
}
    16dc:	4770      	bx	lr
    16de:	bf00      	nop

000016e0 <usb_serial_configure>:
	if (usb_high_speed) {
    16e0:	4b2d      	ldr	r3, [pc, #180]	; (1798 <usb_serial_configure+0xb8>)
	memset(tx_transfer, 0, sizeof(tx_transfer));
    16e2:	2100      	movs	r1, #0
    16e4:	2280      	movs	r2, #128	; 0x80
    16e6:	482d      	ldr	r0, [pc, #180]	; (179c <usb_serial_configure+0xbc>)
{
    16e8:	b570      	push	{r4, r5, r6, lr}
	if (usb_high_speed) {
    16ea:	781b      	ldrb	r3, [r3, #0]
	tx_head = 0;
    16ec:	2400      	movs	r4, #0
		tx_packet_size = CDC_TX_SIZE_480;
    16ee:	4d2c      	ldr	r5, [pc, #176]	; (17a0 <usb_serial_configure+0xc0>)
	if (usb_high_speed) {
    16f0:	428b      	cmp	r3, r1
		rx_packet_size = CDC_RX_SIZE_480;
    16f2:	4e2c      	ldr	r6, [pc, #176]	; (17a4 <usb_serial_configure+0xc4>)
	if (usb_high_speed) {
    16f4:	bf0c      	ite	eq
    16f6:	2340      	moveq	r3, #64	; 0x40
    16f8:	f44f 7300 	movne.w	r3, #512	; 0x200
		tx_packet_size = CDC_TX_SIZE_480;
    16fc:	802b      	strh	r3, [r5, #0]
		rx_packet_size = CDC_RX_SIZE_480;
    16fe:	8033      	strh	r3, [r6, #0]
	memset(tx_transfer, 0, sizeof(tx_transfer));
    1700:	f00b fa68 	bl	cbd4 <memset>
	tx_head = 0;
    1704:	4a28      	ldr	r2, [pc, #160]	; (17a8 <usb_serial_configure+0xc8>)
	memset(rx_transfer, 0, sizeof(rx_transfer));
    1706:	4621      	mov	r1, r4
	tx_available = 0;
    1708:	4b28      	ldr	r3, [pc, #160]	; (17ac <usb_serial_configure+0xcc>)
	tx_head = 0;
    170a:	7014      	strb	r4, [r2, #0]
	memset(rx_transfer, 0, sizeof(rx_transfer));
    170c:	f44f 7280 	mov.w	r2, #256	; 0x100
    1710:	4827      	ldr	r0, [pc, #156]	; (17b0 <usb_serial_configure+0xd0>)
	tx_available = 0;
    1712:	801c      	strh	r4, [r3, #0]
	memset(rx_transfer, 0, sizeof(rx_transfer));
    1714:	f00b fa5e 	bl	cbd4 <memset>
	memset(rx_count, 0, sizeof(rx_count));
    1718:	4a26      	ldr	r2, [pc, #152]	; (17b4 <usb_serial_configure+0xd4>)
	usb_config_tx(CDC_ACM_ENDPOINT, CDC_ACM_SIZE, 0, NULL); // size same 12 & 480
    171a:	2110      	movs	r1, #16
	memset(rx_index, 0, sizeof(rx_index));
    171c:	4b26      	ldr	r3, [pc, #152]	; (17b8 <usb_serial_configure+0xd8>)
	usb_config_tx(CDC_ACM_ENDPOINT, CDC_ACM_SIZE, 0, NULL); // size same 12 & 480
    171e:	2002      	movs	r0, #2
	memset(rx_count, 0, sizeof(rx_count));
    1720:	e9c2 4400 	strd	r4, r4, [r2]
    1724:	e9c2 4402 	strd	r4, r4, [r2, #8]
	rx_head = 0;
    1728:	4a24      	ldr	r2, [pc, #144]	; (17bc <usb_serial_configure+0xdc>)
	memset(rx_index, 0, sizeof(rx_index));
    172a:	e9c3 4400 	strd	r4, r4, [r3]
	rx_head = 0;
    172e:	7014      	strb	r4, [r2, #0]
	rx_available = 0;
    1730:	4a23      	ldr	r2, [pc, #140]	; (17c0 <usb_serial_configure+0xe0>)
	memset(rx_index, 0, sizeof(rx_index));
    1732:	e9c3 4402 	strd	r4, r4, [r3, #8]
	rx_tail = 0;
    1736:	4b23      	ldr	r3, [pc, #140]	; (17c4 <usb_serial_configure+0xe4>)
    1738:	701c      	strb	r4, [r3, #0]
	usb_config_tx(CDC_ACM_ENDPOINT, CDC_ACM_SIZE, 0, NULL); // size same 12 & 480
    173a:	4623      	mov	r3, r4
	rx_available = 0;
    173c:	6014      	str	r4, [r2, #0]
	usb_config_tx(CDC_ACM_ENDPOINT, CDC_ACM_SIZE, 0, NULL); // size same 12 & 480
    173e:	4622      	mov	r2, r4
    1740:	f7ff fd74 	bl	122c <usb_config_tx>
	usb_config_rx(CDC_RX_ENDPOINT, rx_packet_size, 0, rx_event);
    1744:	4622      	mov	r2, r4
    1746:	8831      	ldrh	r1, [r6, #0]
    1748:	2003      	movs	r0, #3
    174a:	4b1f      	ldr	r3, [pc, #124]	; (17c8 <usb_serial_configure+0xe8>)
    174c:	f7ff fd3c 	bl	11c8 <usb_config_rx>
	usb_config_tx(CDC_TX_ENDPOINT, tx_packet_size, 1, NULL);
    1750:	4623      	mov	r3, r4
    1752:	2201      	movs	r2, #1
    1754:	8829      	ldrh	r1, [r5, #0]
    1756:	2004      	movs	r0, #4
    1758:	f7ff fd68 	bl	122c <usb_config_tx>
	for (i=0; i < RX_NUM; i++) rx_queue_transfer(i);
    175c:	4620      	mov	r0, r4
    175e:	3401      	adds	r4, #1
    1760:	f7ff fe0e 	bl	1380 <rx_queue_transfer>
    1764:	2c08      	cmp	r4, #8
    1766:	d1f9      	bne.n	175c <usb_serial_configure+0x7c>
	USB1_GPTIMER0CTRL = 0;
    1768:	4b18      	ldr	r3, [pc, #96]	; (17cc <usb_serial_configure+0xec>)
    176a:	2100      	movs	r1, #0
	USB1_GPTIMER0LD = microseconds - 1;
    176c:	224a      	movs	r2, #74	; 0x4a
	usb_timer0_callback = callback;
    176e:	4818      	ldr	r0, [pc, #96]	; (17d0 <usb_serial_configure+0xf0>)
    1770:	4c18      	ldr	r4, [pc, #96]	; (17d4 <usb_serial_configure+0xf4>)
    1772:	6004      	str	r4, [r0, #0]
	USB1_GPTIMER0CTRL = 0;
    1774:	f8c3 1084 	str.w	r1, [r3, #132]	; 0x84
	USB1_GPTIMER0LD = microseconds - 1;
    1778:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	USB1_USBINTR |= USB_USBINTR_TIE0;
    177c:	f8d3 2148 	ldr.w	r2, [r3, #328]	; 0x148
	if (serialEvent) yield_active_check_flags |= YIELD_CHECK_USB_SERIAL;
    1780:	4915      	ldr	r1, [pc, #84]	; (17d8 <usb_serial_configure+0xf8>)
	USB1_USBINTR |= USB_USBINTR_TIE0;
    1782:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
    1786:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
	if (serialEvent) yield_active_check_flags |= YIELD_CHECK_USB_SERIAL;
    178a:	b121      	cbz	r1, 1796 <usb_serial_configure+0xb6>
    178c:	4a13      	ldr	r2, [pc, #76]	; (17dc <usb_serial_configure+0xfc>)
    178e:	7813      	ldrb	r3, [r2, #0]
    1790:	f043 0301 	orr.w	r3, r3, #1
    1794:	7013      	strb	r3, [r2, #0]
}
    1796:	bd70      	pop	{r4, r5, r6, pc}
    1798:	200030bc 	.word	0x200030bc
    179c:	20002c00 	.word	0x20002c00
    17a0:	200030ac 	.word	0x200030ac
    17a4:	200030a8 	.word	0x200030a8
    17a8:	200030b8 	.word	0x200030b8
    17ac:	200030aa 	.word	0x200030aa
    17b0:	20002b00 	.word	0x20002b00
    17b4:	20003048 	.word	0x20003048
    17b8:	20003058 	.word	0x20003058
    17bc:	200030b4 	.word	0x200030b4
    17c0:	20003044 	.word	0x20003044
    17c4:	200030b5 	.word	0x200030b5
    17c8:	000013e1 	.word	0x000013e1
    17cc:	402e0000 	.word	0x402e0000
    17d0:	200030a0 	.word	0x200030a0
    17d4:	00001495 	.word	0x00001495
    17d8:	00000000 	.word	0x00000000
    17dc:	200030be 	.word	0x200030be

000017e0 <usb_serial_read>:
{
    17e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	NVIC_DISABLE_IRQ(IRQ_USB1);
    17e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
    17e8:	f44f 3200 	mov.w	r2, #131072	; 0x20000
	uint32_t tail = rx_tail;
    17ec:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 18b8 <usb_serial_read+0xd8>
{
    17f0:	b083      	sub	sp, #12
	NVIC_DISABLE_IRQ(IRQ_USB1);
    17f2:	f8c3 218c 	str.w	r2, [r3, #396]	; 0x18c
	while (count < size && tail != rx_head) {
    17f6:	468b      	mov	fp, r1
	uint32_t tail = rx_tail;
    17f8:	f89a 4000 	ldrb.w	r4, [sl]
	while (count < size && tail != rx_head) {
    17fc:	2900      	cmp	r1, #0
    17fe:	d04f      	beq.n	18a0 <usb_serial_read+0xc0>
    1800:	4680      	mov	r8, r0
    1802:	b2e4      	uxtb	r4, r4
	uint32_t count=0;
    1804:	2700      	movs	r7, #0
		uint32_t avail = rx_count[i] - rx_index[i];
    1806:	f8df 90b4 	ldr.w	r9, [pc, #180]	; 18bc <usb_serial_read+0xdc>
	while (count < size && tail != rx_head) {
    180a:	4b26      	ldr	r3, [pc, #152]	; (18a4 <usb_serial_read+0xc4>)
		uint32_t len = size - count;
    180c:	ebab 0207 	sub.w	r2, fp, r7
			memcpy(p, rx_buffer + i * CDC_RX_SIZE_480 + rx_index[i], avail);
    1810:	4925      	ldr	r1, [pc, #148]	; (18a8 <usb_serial_read+0xc8>)
	while (count < size && tail != rx_head) {
    1812:	781b      	ldrb	r3, [r3, #0]
    1814:	42a3      	cmp	r3, r4
		if (++tail > RX_NUM) tail = 0;
    1816:	f104 0401 	add.w	r4, r4, #1
	while (count < size && tail != rx_head) {
    181a:	d03f      	beq.n	189c <usb_serial_read+0xbc>
		if (++tail > RX_NUM) tail = 0;
    181c:	2c09      	cmp	r4, #9
		uint32_t i = rx_list[tail];
    181e:	4b23      	ldr	r3, [pc, #140]	; (18ac <usb_serial_read+0xcc>)
			memcpy(p, rx_buffer + i * CDC_RX_SIZE_480 + rx_index[i], avail);
    1820:	4640      	mov	r0, r8
		if (++tail > RX_NUM) tail = 0;
    1822:	bf28      	it	cs
    1824:	2400      	movcs	r4, #0
		uint32_t i = rx_list[tail];
    1826:	5d1e      	ldrb	r6, [r3, r4]
		uint32_t avail = rx_count[i] - rx_index[i];
    1828:	f839 c016 	ldrh.w	ip, [r9, r6, lsl #1]
			memcpy(p, rx_buffer + i * CDC_RX_SIZE_480 + rx_index[i], avail);
    182c:	eb0c 2346 	add.w	r3, ip, r6, lsl #9
    1830:	4419      	add	r1, r3
		uint32_t avail = rx_count[i] - rx_index[i];
    1832:	4b1f      	ldr	r3, [pc, #124]	; (18b0 <usb_serial_read+0xd0>)
    1834:	f833 5016 	ldrh.w	r5, [r3, r6, lsl #1]
    1838:	eba5 050c 	sub.w	r5, r5, ip
		if (avail > len) {
    183c:	42aa      	cmp	r2, r5
    183e:	d21c      	bcs.n	187a <usb_serial_read+0x9a>
			memcpy(p, rx_buffer + i * CDC_RX_SIZE_480 + rx_index[i], len);
    1840:	eb0c 2c46 	add.w	ip, ip, r6, lsl #9
    1844:	4918      	ldr	r1, [pc, #96]	; (18a8 <usb_serial_read+0xc8>)
			rx_available -= len;
    1846:	4c1b      	ldr	r4, [pc, #108]	; (18b4 <usb_serial_read+0xd4>)
			memcpy(p, rx_buffer + i * CDC_RX_SIZE_480 + rx_index[i], len);
    1848:	4461      	add	r1, ip
    184a:	9201      	str	r2, [sp, #4]
    184c:	f7fe feea 	bl	624 <memcpy>
			rx_available -= len;
    1850:	6821      	ldr	r1, [r4, #0]
			rx_index[i] += len;
    1852:	f839 5016 	ldrh.w	r5, [r9, r6, lsl #1]
	return count;
    1856:	4658      	mov	r0, fp
			rx_index[i] += len;
    1858:	9a01      	ldr	r2, [sp, #4]
			rx_available -= len;
    185a:	eba1 010b 	sub.w	r1, r1, fp
			rx_index[i] += len;
    185e:	442a      	add	r2, r5
			rx_available -= len;
    1860:	4439      	add	r1, r7
			rx_index[i] += len;
    1862:	f829 2016 	strh.w	r2, [r9, r6, lsl #1]
			rx_available -= len;
    1866:	6021      	str	r1, [r4, #0]
	NVIC_ENABLE_IRQ(IRQ_USB1);
    1868:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
    186c:	f44f 3200 	mov.w	r2, #131072	; 0x20000
    1870:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
}
    1874:	b003      	add	sp, #12
    1876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			memcpy(p, rx_buffer + i * CDC_RX_SIZE_480 + rx_index[i], avail);
    187a:	462a      	mov	r2, r5
			count += avail;
    187c:	442f      	add	r7, r5
			memcpy(p, rx_buffer + i * CDC_RX_SIZE_480 + rx_index[i], avail);
    187e:	f7fe fed1 	bl	624 <memcpy>
			rx_available -= avail;
    1882:	490c      	ldr	r1, [pc, #48]	; (18b4 <usb_serial_read+0xd4>)
			rx_tail = tail;
    1884:	b2e3      	uxtb	r3, r4
			rx_queue_transfer(i);
    1886:	4630      	mov	r0, r6
			rx_available -= avail;
    1888:	680a      	ldr	r2, [r1, #0]
			p += avail;
    188a:	44a8      	add	r8, r5
			rx_available -= avail;
    188c:	1b52      	subs	r2, r2, r5
    188e:	600a      	str	r2, [r1, #0]
			rx_tail = tail;
    1890:	f88a 3000 	strb.w	r3, [sl]
			rx_queue_transfer(i);
    1894:	f7ff fd74 	bl	1380 <rx_queue_transfer>
	while (count < size && tail != rx_head) {
    1898:	45bb      	cmp	fp, r7
    189a:	d8b6      	bhi.n	180a <usb_serial_read+0x2a>
	return count;
    189c:	4638      	mov	r0, r7
    189e:	e7e3      	b.n	1868 <usb_serial_read+0x88>
	while (count < size && tail != rx_head) {
    18a0:	4608      	mov	r0, r1
    18a2:	e7e1      	b.n	1868 <usb_serial_read+0x88>
    18a4:	200030b4 	.word	0x200030b4
    18a8:	20200080 	.word	0x20200080
    18ac:	20003068 	.word	0x20003068
    18b0:	20003048 	.word	0x20003048
    18b4:	20003044 	.word	0x20003044
    18b8:	200030b5 	.word	0x200030b5
    18bc:	20003058 	.word	0x20003058

000018c0 <usb_serial_peekchar>:
	if (tail == rx_head) return -1;
    18c0:	4b0b      	ldr	r3, [pc, #44]	; (18f0 <usb_serial_peekchar+0x30>)
	uint32_t tail = rx_tail;
    18c2:	4a0c      	ldr	r2, [pc, #48]	; (18f4 <usb_serial_peekchar+0x34>)
    18c4:	7812      	ldrb	r2, [r2, #0]
	if (tail == rx_head) return -1;
    18c6:	7819      	ldrb	r1, [r3, #0]
	uint32_t tail = rx_tail;
    18c8:	b2d3      	uxtb	r3, r2
	if (tail == rx_head) return -1;
    18ca:	428a      	cmp	r2, r1
    18cc:	d00d      	beq.n	18ea <usb_serial_peekchar+0x2a>
	if (++tail > RX_NUM) tail = 0;
    18ce:	3301      	adds	r3, #1
	uint32_t i = rx_list[tail];
    18d0:	4809      	ldr	r0, [pc, #36]	; (18f8 <usb_serial_peekchar+0x38>)
	return rx_buffer[i * CDC_RX_SIZE_480 + rx_index[i]];
    18d2:	4a0a      	ldr	r2, [pc, #40]	; (18fc <usb_serial_peekchar+0x3c>)
	if (++tail > RX_NUM) tail = 0;
    18d4:	2b09      	cmp	r3, #9
	return rx_buffer[i * CDC_RX_SIZE_480 + rx_index[i]];
    18d6:	490a      	ldr	r1, [pc, #40]	; (1900 <usb_serial_peekchar+0x40>)
	if (++tail > RX_NUM) tail = 0;
    18d8:	bf28      	it	cs
    18da:	2300      	movcs	r3, #0
	uint32_t i = rx_list[tail];
    18dc:	5cc3      	ldrb	r3, [r0, r3]
	return rx_buffer[i * CDC_RX_SIZE_480 + rx_index[i]];
    18de:	f831 1013 	ldrh.w	r1, [r1, r3, lsl #1]
    18e2:	eb02 2343 	add.w	r3, r2, r3, lsl #9
    18e6:	5c58      	ldrb	r0, [r3, r1]
    18e8:	4770      	bx	lr
	if (tail == rx_head) return -1;
    18ea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
}
    18ee:	4770      	bx	lr
    18f0:	200030b4 	.word	0x200030b4
    18f4:	200030b5 	.word	0x200030b5
    18f8:	20003068 	.word	0x20003068
    18fc:	20200080 	.word	0x20200080
    1900:	20003058 	.word	0x20003058

00001904 <usb_serial_available>:
	uint32_t n = rx_available;
    1904:	4b04      	ldr	r3, [pc, #16]	; (1918 <usb_serial_available+0x14>)
{
    1906:	b510      	push	{r4, lr}
	uint32_t n = rx_available;
    1908:	681c      	ldr	r4, [r3, #0]
	if (n == 0) yield();
    190a:	b10c      	cbz	r4, 1910 <usb_serial_available+0xc>
}
    190c:	4620      	mov	r0, r4
    190e:	bd10      	pop	{r4, pc}
	if (n == 0) yield();
    1910:	f000 f8e0 	bl	1ad4 <yield>
}
    1914:	4620      	mov	r0, r4
    1916:	bd10      	pop	{r4, pc}
    1918:	20003044 	.word	0x20003044

0000191c <usb_serial_flush_input>:
{
    191c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint32_t tail = rx_tail;
    1920:	4e14      	ldr	r6, [pc, #80]	; (1974 <usb_serial_flush_input+0x58>)
	while (tail != rx_head) {
    1922:	4d15      	ldr	r5, [pc, #84]	; (1978 <usb_serial_flush_input+0x5c>)
	uint32_t tail = rx_tail;
    1924:	7833      	ldrb	r3, [r6, #0]
	while (tail != rx_head) {
    1926:	782a      	ldrb	r2, [r5, #0]
    1928:	4293      	cmp	r3, r2
    192a:	d021      	beq.n	1970 <usb_serial_flush_input+0x54>
    192c:	b2dc      	uxtb	r4, r3
    192e:	f8df 9050 	ldr.w	r9, [pc, #80]	; 1980 <usb_serial_flush_input+0x64>
    1932:	f8df b050 	ldr.w	fp, [pc, #80]	; 1984 <usb_serial_flush_input+0x68>
    1936:	f8df 8050 	ldr.w	r8, [pc, #80]	; 1988 <usb_serial_flush_input+0x6c>
    193a:	4f10      	ldr	r7, [pc, #64]	; (197c <usb_serial_flush_input+0x60>)
		if (++tail > RX_NUM) tail = 0;
    193c:	3401      	adds	r4, #1
    193e:	2c08      	cmp	r4, #8
		rx_tail = tail;
    1940:	fa5f fa84 	uxtb.w	sl, r4
		if (++tail > RX_NUM) tail = 0;
    1944:	d901      	bls.n	194a <usb_serial_flush_input+0x2e>
    1946:	2400      	movs	r4, #0
    1948:	46a2      	mov	sl, r4
		uint32_t i = rx_list[tail];
    194a:	f819 0004 	ldrb.w	r0, [r9, r4]
		rx_available -= rx_count[i] - rx_index[i];
    194e:	f8db 3000 	ldr.w	r3, [fp]
    1952:	f838 2010 	ldrh.w	r2, [r8, r0, lsl #1]
    1956:	f837 1010 	ldrh.w	r1, [r7, r0, lsl #1]
    195a:	1a52      	subs	r2, r2, r1
    195c:	1a9b      	subs	r3, r3, r2
    195e:	f8cb 3000 	str.w	r3, [fp]
		rx_queue_transfer(i);
    1962:	f7ff fd0d 	bl	1380 <rx_queue_transfer>
		rx_tail = tail;
    1966:	f886 a000 	strb.w	sl, [r6]
	while (tail != rx_head) {
    196a:	782b      	ldrb	r3, [r5, #0]
    196c:	42a3      	cmp	r3, r4
    196e:	d1e5      	bne.n	193c <usb_serial_flush_input+0x20>
}
    1970:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1974:	200030b5 	.word	0x200030b5
    1978:	200030b4 	.word	0x200030b4
    197c:	20003058 	.word	0x20003058
    1980:	20003068 	.word	0x20003068
    1984:	20003044 	.word	0x20003044
    1988:	20003048 	.word	0x20003048

0000198c <usb_serial_getchar>:
{
    198c:	b500      	push	{lr}
    198e:	b083      	sub	sp, #12
	if (usb_serial_read(&c, 1)) return c;
    1990:	2101      	movs	r1, #1
    1992:	f10d 0007 	add.w	r0, sp, #7
    1996:	f7ff ff23 	bl	17e0 <usb_serial_read>
    199a:	b120      	cbz	r0, 19a6 <usb_serial_getchar+0x1a>
    199c:	f89d 0007 	ldrb.w	r0, [sp, #7]
}
    19a0:	b003      	add	sp, #12
    19a2:	f85d fb04 	ldr.w	pc, [sp], #4
	return -1;
    19a6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    19aa:	e7f9      	b.n	19a0 <usb_serial_getchar+0x14>

000019ac <usb_serial_putchar>:
	if (!usb_configuration) return 0;
    19ac:	4b09      	ldr	r3, [pc, #36]	; (19d4 <usb_serial_putchar+0x28>)
{
    19ae:	b500      	push	{lr}
    19b0:	b083      	sub	sp, #12
	if (!usb_configuration) return 0;
    19b2:	781b      	ldrb	r3, [r3, #0]
{
    19b4:	f88d 0007 	strb.w	r0, [sp, #7]
	if (!usb_configuration) return 0;
    19b8:	b13b      	cbz	r3, 19ca <usb_serial_putchar+0x1e>
    19ba:	2101      	movs	r1, #1
    19bc:	f10d 0007 	add.w	r0, sp, #7
    19c0:	f7ff fdb0 	bl	1524 <usb_serial_write.part.0>
}
    19c4:	b003      	add	sp, #12
    19c6:	f85d fb04 	ldr.w	pc, [sp], #4
    19ca:	f003 00ff 	and.w	r0, r3, #255	; 0xff
    19ce:	b003      	add	sp, #12
    19d0:	f85d fb04 	ldr.w	pc, [sp], #4
    19d4:	200030bb 	.word	0x200030bb

000019d8 <usb_serial_write>:
	if (!usb_configuration) return 0;
    19d8:	4b04      	ldr	r3, [pc, #16]	; (19ec <usb_serial_write+0x14>)
    19da:	781b      	ldrb	r3, [r3, #0]
    19dc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
    19e0:	b10b      	cbz	r3, 19e6 <usb_serial_write+0xe>
    19e2:	f7ff bd9f 	b.w	1524 <usb_serial_write.part.0>
}
    19e6:	4610      	mov	r0, r2
    19e8:	4770      	bx	lr
    19ea:	bf00      	nop
    19ec:	200030bb 	.word	0x200030bb

000019f0 <usb_serial_write_buffer_free>:
{
    19f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	for (uint32_t i=0; i < TX_NUM; i++) {
    19f4:	2400      	movs	r4, #0
	tx_noautoflush = 1;
    19f6:	f8df 8044 	ldr.w	r8, [pc, #68]	; 1a3c <usb_serial_write_buffer_free+0x4c>
    19fa:	2301      	movs	r3, #1
    19fc:	4d0d      	ldr	r5, [pc, #52]	; (1a34 <usb_serial_write_buffer_free+0x44>)
	uint32_t sum = 0;
    19fe:	4627      	mov	r7, r4
    1a00:	4e0d      	ldr	r6, [pc, #52]	; (1a38 <usb_serial_write_buffer_free+0x48>)
	tx_noautoflush = 1;
    1a02:	f888 3000 	strb.w	r3, [r8]
		if (i == tx_head) continue;
    1a06:	7833      	ldrb	r3, [r6, #0]
		if (!(usb_transfer_status(tx_transfer + i) & 0x80)) sum += TX_SIZE;
    1a08:	4628      	mov	r0, r5
	for (uint32_t i=0; i < TX_NUM; i++) {
    1a0a:	3520      	adds	r5, #32
		if (i == tx_head) continue;
    1a0c:	42a3      	cmp	r3, r4
	for (uint32_t i=0; i < TX_NUM; i++) {
    1a0e:	f104 0401 	add.w	r4, r4, #1
		if (i == tx_head) continue;
    1a12:	d005      	beq.n	1a20 <usb_serial_write_buffer_free+0x30>
		if (!(usb_transfer_status(tx_transfer + i) & 0x80)) sum += TX_SIZE;
    1a14:	f7ff fc76 	bl	1304 <usb_transfer_status>
    1a18:	0603      	lsls	r3, r0, #24
    1a1a:	bf58      	it	pl
    1a1c:	f507 6700 	addpl.w	r7, r7, #2048	; 0x800
	for (uint32_t i=0; i < TX_NUM; i++) {
    1a20:	2c04      	cmp	r4, #4
    1a22:	d1f0      	bne.n	1a06 <usb_serial_write_buffer_free+0x16>
	asm("dsb" ::: "memory");
    1a24:	f3bf 8f4f 	dsb	sy
	tx_noautoflush = 0;
    1a28:	2300      	movs	r3, #0
}
    1a2a:	4638      	mov	r0, r7
	tx_noautoflush = 0;
    1a2c:	f888 3000 	strb.w	r3, [r8]
}
    1a30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1a34:	20002c00 	.word	0x20002c00
    1a38:	200030b8 	.word	0x200030b8
    1a3c:	200030b9 	.word	0x200030b9

00001a40 <usb_serial_flush_output>:
{
    1a40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	if (!usb_configuration) return;
    1a44:	4b1d      	ldr	r3, [pc, #116]	; (1abc <usb_serial_flush_output+0x7c>)
    1a46:	781b      	ldrb	r3, [r3, #0]
    1a48:	b113      	cbz	r3, 1a50 <usb_serial_flush_output+0x10>
	if (tx_available == 0) return;
    1a4a:	4d1d      	ldr	r5, [pc, #116]	; (1ac0 <usb_serial_flush_output+0x80>)
    1a4c:	882a      	ldrh	r2, [r5, #0]
    1a4e:	b90a      	cbnz	r2, 1a54 <usb_serial_flush_output+0x14>
}
    1a50:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	transfer_t *xfer = tx_transfer + tx_head;
    1a54:	4e1b      	ldr	r6, [pc, #108]	; (1ac4 <usb_serial_flush_output+0x84>)
	uint32_t txnum = TX_SIZE - tx_available;
    1a56:	f5c2 6900 	rsb	r9, r2, #2048	; 0x800
	transfer_t *xfer = tx_transfer + tx_head;
    1a5a:	491b      	ldr	r1, [pc, #108]	; (1ac8 <usb_serial_flush_output+0x88>)
    1a5c:	7833      	ldrb	r3, [r6, #0]
	usb_prepare_transfer(xfer, txbuf, txnum, 0);
    1a5e:	464a      	mov	r2, r9
	uint8_t *txbuf = txbuffer + (tx_head * TX_SIZE);
    1a60:	4c1a      	ldr	r4, [pc, #104]	; (1acc <usb_serial_flush_output+0x8c>)
	transfer_t *xfer = tx_transfer + tx_head;
    1a62:	eb01 1843 	add.w	r8, r1, r3, lsl #5
	tx_noautoflush = 1;
    1a66:	4f1a      	ldr	r7, [pc, #104]	; (1ad0 <usb_serial_flush_output+0x90>)
	uint8_t *txbuf = txbuffer + (tx_head * TX_SIZE);
    1a68:	eb04 24c3 	add.w	r4, r4, r3, lsl #11
	tx_noautoflush = 1;
    1a6c:	2301      	movs	r3, #1
	usb_prepare_transfer(xfer, txbuf, txnum, 0);
    1a6e:	4640      	mov	r0, r8
	tx_noautoflush = 1;
    1a70:	703b      	strb	r3, [r7, #0]
	usb_prepare_transfer(xfer, txbuf, txnum, 0);
    1a72:	4621      	mov	r1, r4
    1a74:	2300      	movs	r3, #0
    1a76:	f7ff fc0b 	bl	1290 <usb_prepare_transfer>
	uint32_t end_addr = (uint32_t)addr + size;
    1a7a:	eb04 0209 	add.w	r2, r4, r9
	asm("dsb");
    1a7e:	f3bf 8f4f 	dsb	sy
		SCB_CACHE_DCCIMVAC = location;
    1a82:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
    1a86:	f8c3 4f70 	str.w	r4, [r3, #3952]	; 0xf70
		location += 32;
    1a8a:	3420      	adds	r4, #32
	} while (location < end_addr);
    1a8c:	42a2      	cmp	r2, r4
    1a8e:	d8fa      	bhi.n	1a86 <usb_serial_flush_output+0x46>
	asm("dsb");
    1a90:	f3bf 8f4f 	dsb	sy
	asm("isb");
    1a94:	f3bf 8f6f 	isb	sy
	usb_transmit(CDC_TX_ENDPOINT, xfer);
    1a98:	2004      	movs	r0, #4
    1a9a:	4641      	mov	r1, r8
    1a9c:	f7ff fc10 	bl	12c0 <usb_transmit>
	if (++tx_head >= TX_NUM) tx_head = 0;
    1aa0:	7833      	ldrb	r3, [r6, #0]
    1aa2:	3301      	adds	r3, #1
    1aa4:	b2db      	uxtb	r3, r3
    1aa6:	2b03      	cmp	r3, #3
    1aa8:	bf88      	it	hi
    1aaa:	2300      	movhi	r3, #0
    1aac:	7033      	strb	r3, [r6, #0]
	tx_available = 0;
    1aae:	2300      	movs	r3, #0
    1ab0:	802b      	strh	r3, [r5, #0]
	asm("dsb" ::: "memory");
    1ab2:	f3bf 8f4f 	dsb	sy
	tx_noautoflush = 0;
    1ab6:	703b      	strb	r3, [r7, #0]
}
    1ab8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    1abc:	200030bb 	.word	0x200030bb
    1ac0:	200030aa 	.word	0x200030aa
    1ac4:	200030b8 	.word	0x200030b8
    1ac8:	20002c00 	.word	0x20002c00
    1acc:	20201080 	.word	0x20201080
    1ad0:	200030b9 	.word	0x200030b9

00001ad4 <yield>:
uint8_t yield_active_check_flags = 0;


void yield(void) __attribute__ ((weak));
void yield(void)
{
    1ad4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	const uint8_t check_flags = yield_active_check_flags;
    1ad8:	4b2d      	ldr	r3, [pc, #180]	; (1b90 <yield+0xbc>)
    1ada:	781e      	ldrb	r6, [r3, #0]
	if (!check_flags) return;	// nothing to do
    1adc:	b166      	cbz	r6, 1af8 <yield+0x24>

	// TODO: do nothing if called from interrupt

	static uint8_t running=0;
	if (running) return; // TODO: does this need to be atomic?
    1ade:	4f2d      	ldr	r7, [pc, #180]	; (1b94 <yield+0xc0>)
    1ae0:	783b      	ldrb	r3, [r7, #0]
    1ae2:	b94b      	cbnz	r3, 1af8 <yield+0x24>
	running = 1;
    1ae4:	2301      	movs	r3, #1

	// USB Serial - Add hack to minimize impact...
	if (check_flags & YIELD_CHECK_USB_SERIAL) {
    1ae6:	07f1      	lsls	r1, r6, #31
	running = 1;
    1ae8:	703b      	strb	r3, [r7, #0]
	if (check_flags & YIELD_CHECK_USB_SERIAL) {
    1aea:	d443      	bmi.n	1b74 <yield+0xa0>
		if (SerialUSB2.available()) serialEventUSB2();
	}
#endif

	// Current workaround until integrate with EventResponder.
	if (check_flags & YIELD_CHECK_HARDWARE_SERIAL) {
    1aec:	07b2      	lsls	r2, r6, #30
    1aee:	d426      	bmi.n	1b3e <yield+0x6a>
		HardwareSerialIMXRT::processSerialEventsList();
	}

	running = 0;
    1af0:	2300      	movs	r3, #0
    1af2:	703b      	strb	r3, [r7, #0]
	if (check_flags & YIELD_CHECK_EVENT_RESPONDER) {
    1af4:	0773      	lsls	r3, r6, #29
    1af6:	d401      	bmi.n	1afc <yield+0x28>
		EventResponder::runFromYield();
	}
};
    1af8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	// Wait for event(s) to occur.  These are most likely to be useful when
	// used with a scheduler or RTOS.
	bool waitForEvent(EventResponderRef event, int timeout);
	EventResponder * waitForEvent(EventResponder *list, int listsize, int timeout);
	static void runFromYield() {
		if (!firstYield) return;  
    1afc:	4b26      	ldr	r3, [pc, #152]	; (1b98 <yield+0xc4>)
    1afe:	681a      	ldr	r2, [r3, #0]
    1b00:	2a00      	cmp	r2, #0
    1b02:	d0f9      	beq.n	1af8 <yield+0x24>
		// First, check if yield was called from an interrupt
		// never call normal handler functions from any interrupt context
		uint32_t ipsr;
		__asm__ volatile("mrs %0, ipsr\n" : "=r" (ipsr)::);
    1b04:	f3ef 8205 	mrs	r2, IPSR
		if (ipsr != 0) return;
    1b08:	2a00      	cmp	r2, #0
    1b0a:	d1f5      	bne.n	1af8 <yield+0x24>
	static EventResponder *lastInterrupt;
	static bool runningFromYield;
private:
	static bool disableInterrupts() {
		uint32_t primask;
		__asm__ volatile("mrs %0, primask\n" : "=r" (primask)::);
    1b0c:	f3ef 8510 	mrs	r5, PRIMASK
		__disable_irq();
    1b10:	b672      	cpsid	i
		EventResponder *first = firstYield;
    1b12:	6818      	ldr	r0, [r3, #0]
		if (first == nullptr) {
    1b14:	2800      	cmp	r0, #0
    1b16:	d034      	beq.n	1b82 <yield+0xae>
		if (runningFromYield) {
    1b18:	4c20      	ldr	r4, [pc, #128]	; (1b9c <yield+0xc8>)
    1b1a:	7821      	ldrb	r1, [r4, #0]
    1b1c:	2900      	cmp	r1, #0
    1b1e:	d130      	bne.n	1b82 <yield+0xae>
		runningFromYield = true;
    1b20:	2201      	movs	r2, #1
    1b22:	7022      	strb	r2, [r4, #0]
		firstYield = first->_next;
    1b24:	6942      	ldr	r2, [r0, #20]
    1b26:	601a      	str	r2, [r3, #0]
		if (firstYield) {
    1b28:	2a00      	cmp	r2, #0
    1b2a:	d02e      	beq.n	1b8a <yield+0xb6>
			firstYield->_prev = nullptr;
    1b2c:	6191      	str	r1, [r2, #24]
		return (primask == 0) ? true : false;
	}
	static void enableInterrupts(bool doit) {
		if (doit) __enable_irq();
    1b2e:	b905      	cbnz	r5, 1b32 <yield+0x5e>
    1b30:	b662      	cpsie	i
		first->_triggered = false;
    1b32:	2500      	movs	r5, #0
		(*(first->_function))(*first);
    1b34:	6883      	ldr	r3, [r0, #8]
		first->_triggered = false;
    1b36:	7745      	strb	r5, [r0, #29]
		(*(first->_function))(*first);
    1b38:	4798      	blx	r3
		runningFromYield = false;
    1b3a:	7025      	strb	r5, [r4, #0]
    1b3c:	e7dc      	b.n	1af8 <yield+0x24>
	*/

	operator bool()			{ return true; }

	static inline void processSerialEventsList() {
		for (uint8_t i = 0; i < s_count_serials_with_serial_events; i++) {
    1b3e:	f8df 8064 	ldr.w	r8, [pc, #100]	; 1ba4 <yield+0xd0>
    1b42:	f898 3000 	ldrb.w	r3, [r8]
    1b46:	2b00      	cmp	r3, #0
    1b48:	d0d2      	beq.n	1af0 <yield+0x1c>
    1b4a:	2500      	movs	r5, #0
    1b4c:	f8df 9058 	ldr.w	r9, [pc, #88]	; 1ba8 <yield+0xd4>
    1b50:	462b      	mov	r3, r5
			s_serials_with_serial_events[i]->doYieldCode();
    1b52:	f859 4023 	ldr.w	r4, [r9, r3, lsl #2]
		for (uint8_t i = 0; i < s_count_serials_with_serial_events; i++) {
    1b56:	3501      	adds	r5, #1
	static HardwareSerialIMXRT 	*s_serials_with_serial_events[7];
	#endif
	static uint8_t 			s_count_serials_with_serial_events;
	void addToSerialEventsList(); 
	inline void doYieldCode()  {
		if (available()) (*hardware->_serialEvent)();
    1b58:	6823      	ldr	r3, [r4, #0]
    1b5a:	4620      	mov	r0, r4
    1b5c:	691b      	ldr	r3, [r3, #16]
    1b5e:	4798      	blx	r3
    1b60:	b110      	cbz	r0, 1b68 <yield+0x94>
    1b62:	6963      	ldr	r3, [r4, #20]
    1b64:	689b      	ldr	r3, [r3, #8]
    1b66:	4798      	blx	r3
		for (uint8_t i = 0; i < s_count_serials_with_serial_events; i++) {
    1b68:	f898 2000 	ldrb.w	r2, [r8]
    1b6c:	b2eb      	uxtb	r3, r5
    1b6e:	429a      	cmp	r2, r3
    1b70:	d8ef      	bhi.n	1b52 <yield+0x7e>
    1b72:	e7bd      	b.n	1af0 <yield+0x1c>
        virtual int available() { return usb_serial_available(); }
    1b74:	f7ff fec6 	bl	1904 <usb_serial_available>
		if (Serial.available()) serialEvent();
    1b78:	2800      	cmp	r0, #0
    1b7a:	d0b7      	beq.n	1aec <yield+0x18>
    1b7c:	f3af 8000 	nop.w
    1b80:	e7b4      	b.n	1aec <yield+0x18>
		if (doit) __enable_irq();
    1b82:	2d00      	cmp	r5, #0
    1b84:	d1b8      	bne.n	1af8 <yield+0x24>
    1b86:	b662      	cpsie	i
    1b88:	e7b6      	b.n	1af8 <yield+0x24>
			lastYield = nullptr;
    1b8a:	4b05      	ldr	r3, [pc, #20]	; (1ba0 <yield+0xcc>)
    1b8c:	601a      	str	r2, [r3, #0]
    1b8e:	e7ce      	b.n	1b2e <yield+0x5a>
    1b90:	200030be 	.word	0x200030be
    1b94:	200030b0 	.word	0x200030b0
    1b98:	20002ca4 	.word	0x20002ca4
    1b9c:	200030ae 	.word	0x200030ae
    1ba0:	20002cb0 	.word	0x20002cb0
    1ba4:	200030af 	.word	0x200030af
    1ba8:	20002cb4 	.word	0x20002cb4

00001bac <EventResponder::runFromInterrupt()>:
{
	EventResponder::runFromInterrupt();
}

void EventResponder::runFromInterrupt()
{
    1bac:	b570      	push	{r4, r5, r6, lr}
		__asm__ volatile("mrs %0, primask\n" : "=r" (primask)::);
    1bae:	f3ef 8210 	mrs	r2, PRIMASK
		__disable_irq();
    1bb2:	b672      	cpsid	i
	while (1) {
		bool irq = disableInterrupts();
		EventResponder *first = firstInterrupt;
    1bb4:	4c0c      	ldr	r4, [pc, #48]	; (1be8 <EventResponder::runFromInterrupt()+0x3c>)
    1bb6:	6820      	ldr	r0, [r4, #0]
		if (first) {
    1bb8:	b180      	cbz	r0, 1bdc <EventResponder::runFromInterrupt()+0x30>
			firstInterrupt = first->_next;
			if (firstInterrupt) {
				firstInterrupt->_prev = nullptr;
			} else {
				lastInterrupt = nullptr;
    1bba:	4e0c      	ldr	r6, [pc, #48]	; (1bec <EventResponder::runFromInterrupt()+0x40>)
				firstInterrupt->_prev = nullptr;
    1bbc:	2500      	movs	r5, #0
			firstInterrupt = first->_next;
    1bbe:	6943      	ldr	r3, [r0, #20]
    1bc0:	6023      	str	r3, [r4, #0]
			if (firstInterrupt) {
    1bc2:	b173      	cbz	r3, 1be2 <EventResponder::runFromInterrupt()+0x36>
				firstInterrupt->_prev = nullptr;
    1bc4:	619d      	str	r5, [r3, #24]
		if (doit) __enable_irq();
    1bc6:	b902      	cbnz	r2, 1bca <EventResponder::runFromInterrupt()+0x1e>
    1bc8:	b662      	cpsie	i
			}
			enableInterrupts(irq);
			first->_triggered = false;
			(*(first->_function))(*first);
    1bca:	6883      	ldr	r3, [r0, #8]
			first->_triggered = false;
    1bcc:	7745      	strb	r5, [r0, #29]
			(*(first->_function))(*first);
    1bce:	4798      	blx	r3
		__asm__ volatile("mrs %0, primask\n" : "=r" (primask)::);
    1bd0:	f3ef 8210 	mrs	r2, PRIMASK
		__disable_irq();
    1bd4:	b672      	cpsid	i
		EventResponder *first = firstInterrupt;
    1bd6:	6820      	ldr	r0, [r4, #0]
		if (first) {
    1bd8:	2800      	cmp	r0, #0
    1bda:	d1f0      	bne.n	1bbe <EventResponder::runFromInterrupt()+0x12>
		if (doit) __enable_irq();
    1bdc:	b902      	cbnz	r2, 1be0 <EventResponder::runFromInterrupt()+0x34>
    1bde:	b662      	cpsie	i
		} else {
			enableInterrupts(irq);
			break;
		}
	}
}
    1be0:	bd70      	pop	{r4, r5, r6, pc}
				lastInterrupt = nullptr;
    1be2:	6033      	str	r3, [r6, #0]
    1be4:	e7ef      	b.n	1bc6 <EventResponder::runFromInterrupt()+0x1a>
    1be6:	bf00      	nop
    1be8:	20002cac 	.word	0x20002cac
    1bec:	20002ca8 	.word	0x20002ca8

00001bf0 <pendablesrvreq_isr>:
	EventResponder::runFromInterrupt();
    1bf0:	f7ff bfdc 	b.w	1bac <EventResponder::runFromInterrupt()>

00001bf4 <systick_isr>:
extern "C" volatile uint32_t systick_millis_count;
extern "C" volatile uint32_t systick_cycle_count;
extern "C" uint32_t systick_safe_read; // micros() synchronization
extern "C" void systick_isr(void)
{
	systick_cycle_count = ARM_DWT_CYCCNT;
    1bf4:	4904      	ldr	r1, [pc, #16]	; (1c08 <systick_isr+0x14>)
	systick_millis_count++;
    1bf6:	4a05      	ldr	r2, [pc, #20]	; (1c0c <systick_isr+0x18>)
	systick_cycle_count = ARM_DWT_CYCCNT;
    1bf8:	6849      	ldr	r1, [r1, #4]
    1bfa:	4b05      	ldr	r3, [pc, #20]	; (1c10 <systick_isr+0x1c>)
    1bfc:	6019      	str	r1, [r3, #0]
	systick_millis_count++;
    1bfe:	6813      	ldr	r3, [r2, #0]
    1c00:	3301      	adds	r3, #1
    1c02:	6013      	str	r3, [r2, #0]
}
    1c04:	4770      	bx	lr
    1c06:	bf00      	nop
    1c08:	e0001000 	.word	0xe0001000
    1c0c:	2000308c 	.word	0x2000308c
    1c10:	20003088 	.word	0x20003088

00001c14 <set_arm_clock>:
	uint32_t cbcmr = CCM_CBCMR; // pg 1023
	uint32_t dcdc = DCDC_REG3;

	// compute required voltage
	uint32_t voltage = 1150; // default = 1.15V
	if (frequency > 528000000) {
    1c14:	49a2      	ldr	r1, [pc, #648]	; (1ea0 <set_arm_clock+0x28c>)
	uint32_t cbcdr = CCM_CBCDR; // pg 1021
    1c16:	4ba3      	ldr	r3, [pc, #652]	; (1ea4 <set_arm_clock+0x290>)
	if (frequency > 528000000) {
    1c18:	4288      	cmp	r0, r1
{
    1c1a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint32_t dcdc = DCDC_REG3;
    1c1e:	4ca2      	ldr	r4, [pc, #648]	; (1ea8 <set_arm_clock+0x294>)
	uint32_t cbcdr = CCM_CBCDR; // pg 1021
    1c20:	695e      	ldr	r6, [r3, #20]
	uint32_t cbcmr = CCM_CBCMR; // pg 1023
    1c22:	699a      	ldr	r2, [r3, #24]
	uint32_t dcdc = DCDC_REG3;
    1c24:	f8d4 800c 	ldr.w	r8, [r4, #12]
	if (frequency > 528000000) {
    1c28:	d91b      	bls.n	1c62 <set_arm_clock+0x4e>
		voltage = 1250; // 1.25V
#if defined(OVERCLOCK_STEPSIZE) && defined(OVERCLOCK_MAX_VOLT)
		if (frequency > 600000000) {
    1c2a:	4ba0      	ldr	r3, [pc, #640]	; (1eac <set_arm_clock+0x298>)
    1c2c:	4298      	cmp	r0, r3
    1c2e:	f240 8102 	bls.w	1e36 <set_arm_clock+0x222>
			voltage += ((frequency - 600000000) / OVERCLOCK_STEPSIZE) * 25;
    1c32:	1ac3      	subs	r3, r0, r3
    1c34:	499e      	ldr	r1, [pc, #632]	; (1eb0 <set_arm_clock+0x29c>)
    1c36:	0a1b      	lsrs	r3, r3, #8
    1c38:	fba1 1303 	umull	r1, r3, r1, r3
		voltage = 950; // 0.95
	}

	// if voltage needs to increase, do it before switch clock speed
	CCM_CCGR6 |= CCM_CCGR6_DCDC(CCM_CCGR_ON);
	if ((dcdc & DCDC_REG3_TRG_MASK) < DCDC_REG3_TRG((voltage - 800) / 25)) {
    1c3c:	f240 6127 	movw	r1, #1575	; 0x627
			voltage += ((frequency - 600000000) / OVERCLOCK_STEPSIZE) * 25;
    1c40:	09db      	lsrs	r3, r3, #7
    1c42:	eb03 0383 	add.w	r3, r3, r3, lsl #2
    1c46:	eb03 0383 	add.w	r3, r3, r3, lsl #2
    1c4a:	f203 43e2 	addw	r3, r3, #1250	; 0x4e2
	if ((dcdc & DCDC_REG3_TRG_MASK) < DCDC_REG3_TRG((voltage - 800) / 25)) {
    1c4e:	428b      	cmp	r3, r1
    1c50:	bf28      	it	cs
    1c52:	460b      	movcs	r3, r1
    1c54:	f5a3 7748 	sub.w	r7, r3, #800	; 0x320
    1c58:	4b96      	ldr	r3, [pc, #600]	; (1eb4 <set_arm_clock+0x2a0>)
    1c5a:	fba3 3707 	umull	r3, r7, r3, r7
    1c5e:	08ff      	lsrs	r7, r7, #3
    1c60:	e004      	b.n	1c6c <set_arm_clock+0x58>
	} else if (frequency <= 24000000) {
    1c62:	4f95      	ldr	r7, [pc, #596]	; (1eb8 <set_arm_clock+0x2a4>)
    1c64:	42b8      	cmp	r0, r7
    1c66:	bf8c      	ite	hi
    1c68:	270e      	movhi	r7, #14
    1c6a:	2706      	movls	r7, #6
	CCM_CCGR6 |= CCM_CCGR6_DCDC(CCM_CCGR_ON);
    1c6c:	498d      	ldr	r1, [pc, #564]	; (1ea4 <set_arm_clock+0x290>)
	if ((dcdc & DCDC_REG3_TRG_MASK) < DCDC_REG3_TRG((voltage - 800) / 25)) {
    1c6e:	f008 091f 	and.w	r9, r8, #31
	CCM_CCGR6 |= CCM_CCGR6_DCDC(CCM_CCGR_ON);
    1c72:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
	if ((dcdc & DCDC_REG3_TRG_MASK) < DCDC_REG3_TRG((voltage - 800) / 25)) {
    1c76:	45b9      	cmp	r9, r7
	CCM_CCGR6 |= CCM_CCGR6_DCDC(CCM_CCGR_ON);
    1c78:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
    1c7c:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
	if ((dcdc & DCDC_REG3_TRG_MASK) < DCDC_REG3_TRG((voltage - 800) / 25)) {
    1c80:	d20c      	bcs.n	1c9c <set_arm_clock+0x88>
		printf("Increasing voltage to %u mV\n", voltage);
		dcdc &= ~DCDC_REG3_TRG_MASK;
    1c82:	f028 081f 	bic.w	r8, r8, #31
		dcdc |= DCDC_REG3_TRG((voltage - 800) / 25);
		DCDC_REG3 = dcdc;
    1c86:	f5a1 21f8 	sub.w	r1, r1, #507904	; 0x7c000
		dcdc |= DCDC_REG3_TRG((voltage - 800) / 25);
    1c8a:	ea48 0807 	orr.w	r8, r8, r7
		DCDC_REG3 = dcdc;
    1c8e:	f8c1 800c 	str.w	r8, [r1, #12]
		while (!(DCDC_REG0 & DCDC_REG0_STS_DC_OK)) ; // wait voltage settling
    1c92:	680b      	ldr	r3, [r1, #0]
    1c94:	2b00      	cmp	r3, #0
    1c96:	dafc      	bge.n	1c92 <set_arm_clock+0x7e>
	scale_cpu_cycles_to_microseconds = 0xFFFFFFFFu / (uint32_t)(frequency / 1000000u);

	printf("New Frequency: ARM=%u, IPG=%u\n", frequency, frequency / div_ipg);

	// if voltage needs to decrease, do it after switch clock speed
	if ((dcdc & DCDC_REG3_TRG_MASK) > DCDC_REG3_TRG((voltage - 800) / 25)) {
    1c98:	f008 091f 	and.w	r9, r8, #31
	if (!(cbcdr & CCM_CBCDR_PERIPH_CLK_SEL)) {
    1c9c:	f016 7300 	ands.w	r3, r6, #33554432	; 0x2000000
    1ca0:	d124      	bne.n	1cec <set_arm_clock+0xd8>
		if ((CCM_ANALOG_PLL_USB1 & need1s) == need1s) {
    1ca2:	4986      	ldr	r1, [pc, #536]	; (1ebc <set_arm_clock+0x2a8>)
    1ca4:	690c      	ldr	r4, [r1, #16]
    1ca6:	4986      	ldr	r1, [pc, #536]	; (1ec0 <set_arm_clock+0x2ac>)
    1ca8:	43a1      	bics	r1, r4
    1caa:	f000 80ea 	beq.w	1e82 <set_arm_clock+0x26e>
		if ((cbcmr & CCM_CBCMR_PERIPH_CLK2_SEL_MASK) != CCM_CBCMR_PERIPH_CLK2_SEL(sel)) {
    1cae:	f482 5180 	eor.w	r1, r2, #4096	; 0x1000
    1cb2:	4634      	mov	r4, r6
    1cb4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
		if ((cbcdr & CCM_CBCDR_PERIPH_CLK2_PODF_MASK) != CCM_CBCDR_PERIPH_CLK2_PODF(div)) {
    1cb8:	f014 5f60 	tst.w	r4, #939524096	; 0x38000000
    1cbc:	d004      	beq.n	1cc8 <set_arm_clock+0xb4>
			cbcdr &= ~CCM_CBCDR_PERIPH_CLK2_PODF_MASK;
    1cbe:	f026 5660 	bic.w	r6, r6, #939524096	; 0x38000000
			cbcdr |= CCM_CBCDR_PERIPH_CLK2_PODF(div);
    1cc2:	431e      	orrs	r6, r3
			CCM_CBCDR = cbcdr;
    1cc4:	4b77      	ldr	r3, [pc, #476]	; (1ea4 <set_arm_clock+0x290>)
    1cc6:	615e      	str	r6, [r3, #20]
		if ((cbcmr & CCM_CBCMR_PERIPH_CLK2_SEL_MASK) != CCM_CBCMR_PERIPH_CLK2_SEL(sel)) {
    1cc8:	f411 5f40 	tst.w	r1, #12288	; 0x3000
    1ccc:	d007      	beq.n	1cde <set_arm_clock+0xca>
			cbcmr &= ~CCM_CBCMR_PERIPH_CLK2_SEL_MASK;
    1cce:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
			CCM_CBCMR = cbcmr;
    1cd2:	4974      	ldr	r1, [pc, #464]	; (1ea4 <set_arm_clock+0x290>)
			cbcmr |= CCM_CBCMR_PERIPH_CLK2_SEL(sel);
    1cd4:	432a      	orrs	r2, r5
			CCM_CBCMR = cbcmr;
    1cd6:	618a      	str	r2, [r1, #24]
			while (CCM_CDHIPR & CCM_CDHIPR_PERIPH2_CLK_SEL_BUSY) ; // wait
    1cd8:	6c8b      	ldr	r3, [r1, #72]	; 0x48
    1cda:	071a      	lsls	r2, r3, #28
    1cdc:	d4fc      	bmi.n	1cd8 <set_arm_clock+0xc4>
		cbcdr |= CCM_CBCDR_PERIPH_CLK_SEL;
    1cde:	f046 7600 	orr.w	r6, r6, #33554432	; 0x2000000
		CCM_CBCDR = cbcdr;
    1ce2:	4a70      	ldr	r2, [pc, #448]	; (1ea4 <set_arm_clock+0x290>)
    1ce4:	6156      	str	r6, [r2, #20]
		while (CCM_CDHIPR & CCM_CDHIPR_PERIPH_CLK_SEL_BUSY) ; // wait
    1ce6:	6c93      	ldr	r3, [r2, #72]	; 0x48
    1ce8:	069b      	lsls	r3, r3, #26
    1cea:	d4fc      	bmi.n	1ce6 <set_arm_clock+0xd2>
	while (frequency * div_arm * div_ahb < 648000000) {
    1cec:	4c75      	ldr	r4, [pc, #468]	; (1ec4 <set_arm_clock+0x2b0>)
    1cee:	42a0      	cmp	r0, r4
    1cf0:	f200 80ce 	bhi.w	1e90 <set_arm_clock+0x27c>
	uint32_t div_ahb = 1;
    1cf4:	f04f 0c01 	mov.w	ip, #1
    1cf8:	4601      	mov	r1, r0
	uint32_t div_arm = 1;
    1cfa:	4663      	mov	r3, ip
	while (frequency * div_arm * div_ahb < 648000000) {
    1cfc:	fb03 1201 	mla	r2, r3, r1, r1
			div_arm = div_arm + 1;
    1d00:	f103 0e01 	add.w	lr, r3, #1
				div_ahb = div_ahb + 1;
    1d04:	f10c 0501 	add.w	r5, ip, #1
	while (frequency * div_arm * div_ahb < 648000000) {
    1d08:	42a2      	cmp	r2, r4
    1d0a:	d818      	bhi.n	1d3e <set_arm_clock+0x12a>
		if (div_arm < 8) {
    1d0c:	f1be 0f08 	cmp.w	lr, #8
				div_arm = 1;
    1d10:	f04f 0301 	mov.w	r3, #1
		if (div_arm < 8) {
    1d14:	f040 808d 	bne.w	1e32 <set_arm_clock+0x21e>
			if (div_ahb < 5) {
    1d18:	f1bc 0f04 	cmp.w	ip, #4
    1d1c:	f200 8091 	bhi.w	1e42 <set_arm_clock+0x22e>
	while (frequency * div_arm * div_ahb < 648000000) {
    1d20:	180a      	adds	r2, r1, r0
    1d22:	42a2      	cmp	r2, r4
    1d24:	f200 80a4 	bhi.w	1e70 <set_arm_clock+0x25c>
    1d28:	fb05 f100 	mul.w	r1, r5, r0
				div_ahb = div_ahb + 1;
    1d2c:	46ac      	mov	ip, r5
			div_arm = div_arm + 1;
    1d2e:	f103 0e01 	add.w	lr, r3, #1
	while (frequency * div_arm * div_ahb < 648000000) {
    1d32:	fb03 1201 	mla	r2, r3, r1, r1
				div_ahb = div_ahb + 1;
    1d36:	f10c 0501 	add.w	r5, ip, #1
	while (frequency * div_arm * div_ahb < 648000000) {
    1d3a:	42a2      	cmp	r2, r4
    1d3c:	d9e6      	bls.n	1d0c <set_arm_clock+0xf8>
	if ((cbcdr & CCM_CBCDR_AHB_PODF_MASK) != CCM_CBCDR_AHB_PODF(div_ahb - 1)) {
    1d3e:	f10c 31ff 	add.w	r1, ip, #4294967295	; 0xffffffff
    1d42:	028c      	lsls	r4, r1, #10
    1d44:	ea86 2181 	eor.w	r1, r6, r1, lsl #10
	uint32_t mult = (frequency * div_arm * div_ahb + 6000000) / 12000000;
    1d48:	485f      	ldr	r0, [pc, #380]	; (1ec8 <set_arm_clock+0x2b4>)
    1d4a:	4410      	add	r0, r2
	if (mult > 108) mult = 108;
    1d4c:	4a5f      	ldr	r2, [pc, #380]	; (1ecc <set_arm_clock+0x2b8>)
    1d4e:	4290      	cmp	r0, r2
    1d50:	d97f      	bls.n	1e52 <set_arm_clock+0x23e>
    1d52:	f8df a1a4 	ldr.w	sl, [pc, #420]	; 1ef8 <set_arm_clock+0x2e4>
    1d56:	226c      	movs	r2, #108	; 0x6c
    1d58:	485d      	ldr	r0, [pc, #372]	; (1ed0 <set_arm_clock+0x2bc>)
	if ((CCM_ANALOG_PLL_ARM & arm_pll_mask) != (CCM_ANALOG_PLL_ARM_LOCK
    1d5a:	4d58      	ldr	r5, [pc, #352]	; (1ebc <set_arm_clock+0x2a8>)
	frequency = mult * 12000000 / div_arm / div_ahb;
    1d5c:	fbb0 f0fe 	udiv	r0, r0, lr
	if ((CCM_ANALOG_PLL_ARM & arm_pll_mask) != (CCM_ANALOG_PLL_ARM_LOCK
    1d60:	f8d5 e000 	ldr.w	lr, [r5]
	frequency = mult * 12000000 / div_arm / div_ahb;
    1d64:	fbb0 f0fc 	udiv	r0, r0, ip
	if ((CCM_ANALOG_PLL_ARM & arm_pll_mask) != (CCM_ANALOG_PLL_ARM_LOCK
    1d68:	f8df c190 	ldr.w	ip, [pc, #400]	; 1efc <set_arm_clock+0x2e8>
    1d6c:	ea0e 0c0c 	and.w	ip, lr, ip
    1d70:	45d4      	cmp	ip, sl
    1d72:	d009      	beq.n	1d88 <set_arm_clock+0x174>
			| CCM_ANALOG_PLL_ARM_DIV_SELECT(mult);
    1d74:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
		CCM_ANALOG_PLL_ARM = CCM_ANALOG_PLL_ARM_POWERDOWN;
    1d78:	f44f 5c80 	mov.w	ip, #4096	; 0x1000
    1d7c:	f8c5 c000 	str.w	ip, [r5]
		CCM_ANALOG_PLL_ARM = CCM_ANALOG_PLL_ARM_ENABLE
    1d80:	602a      	str	r2, [r5, #0]
		while (!(CCM_ANALOG_PLL_ARM & CCM_ANALOG_PLL_ARM_LOCK)) ; // wait for lock
    1d82:	682a      	ldr	r2, [r5, #0]
    1d84:	2a00      	cmp	r2, #0
    1d86:	dafc      	bge.n	1d82 <set_arm_clock+0x16e>
	if ((CCM_CACRR & CCM_CACRR_ARM_PODF_MASK) != (div_arm - 1)) {
    1d88:	4a46      	ldr	r2, [pc, #280]	; (1ea4 <set_arm_clock+0x290>)
    1d8a:	6915      	ldr	r5, [r2, #16]
    1d8c:	f005 0507 	and.w	r5, r5, #7
    1d90:	429d      	cmp	r5, r3
    1d92:	d003      	beq.n	1d9c <set_arm_clock+0x188>
		CCM_CACRR = CCM_CACRR_ARM_PODF(div_arm - 1);
    1d94:	6113      	str	r3, [r2, #16]
		while (CCM_CDHIPR & CCM_CDHIPR_ARM_PODF_BUSY) ; // wait
    1d96:	6c93      	ldr	r3, [r2, #72]	; 0x48
    1d98:	03dd      	lsls	r5, r3, #15
    1d9a:	d4fc      	bmi.n	1d96 <set_arm_clock+0x182>
	if ((cbcdr & CCM_CBCDR_AHB_PODF_MASK) != CCM_CBCDR_AHB_PODF(div_ahb - 1)) {
    1d9c:	f411 5fe0 	tst.w	r1, #7168	; 0x1c00
    1da0:	d009      	beq.n	1db6 <set_arm_clock+0x1a2>
		cbcdr &= ~CCM_CBCDR_AHB_PODF_MASK;
    1da2:	f426 56e0 	bic.w	r6, r6, #7168	; 0x1c00
		cbcdr |= CCM_CBCDR_AHB_PODF(div_ahb - 1);
    1da6:	f404 54e0 	and.w	r4, r4, #7168	; 0x1c00
		CCM_CBCDR = cbcdr;
    1daa:	4a3e      	ldr	r2, [pc, #248]	; (1ea4 <set_arm_clock+0x290>)
		cbcdr |= CCM_CBCDR_AHB_PODF(div_ahb - 1);
    1dac:	4326      	orrs	r6, r4
		CCM_CBCDR = cbcdr;
    1dae:	6156      	str	r6, [r2, #20]
		while (CCM_CDHIPR & CCM_CDHIPR_AHB_PODF_BUSY); // wait
    1db0:	6c93      	ldr	r3, [r2, #72]	; 0x48
    1db2:	0799      	lsls	r1, r3, #30
    1db4:	d4fc      	bmi.n	1db0 <set_arm_clock+0x19c>
	uint32_t div_ipg = (frequency + 149999999) / 150000000;
    1db6:	4947      	ldr	r1, [pc, #284]	; (1ed4 <set_arm_clock+0x2c0>)
	if (div_ipg > 4) div_ipg = 4;
    1db8:	4a47      	ldr	r2, [pc, #284]	; (1ed8 <set_arm_clock+0x2c4>)
	uint32_t div_ipg = (frequency + 149999999) / 150000000;
    1dba:	4401      	add	r1, r0
	if (div_ipg > 4) div_ipg = 4;
    1dbc:	4291      	cmp	r1, r2
    1dbe:	d83c      	bhi.n	1e3a <set_arm_clock+0x226>
	uint32_t div_ipg = (frequency + 149999999) / 150000000;
    1dc0:	4b46      	ldr	r3, [pc, #280]	; (1edc <set_arm_clock+0x2c8>)
    1dc2:	09c9      	lsrs	r1, r1, #7
    1dc4:	fba3 3101 	umull	r3, r1, r3, r1
    1dc8:	0b09      	lsrs	r1, r1, #12
	if ((cbcdr & CCM_CBCDR_IPG_PODF_MASK) != (CCM_CBCDR_IPG_PODF(div_ipg - 1))) {
    1dca:	1e4b      	subs	r3, r1, #1
    1dcc:	021b      	lsls	r3, r3, #8
    1dce:	ea86 0203 	eor.w	r2, r6, r3
    1dd2:	f412 7f40 	tst.w	r2, #768	; 0x300
    1dd6:	d006      	beq.n	1de6 <set_arm_clock+0x1d2>
		cbcdr &= ~CCM_CBCDR_IPG_PODF_MASK;
    1dd8:	f426 7640 	bic.w	r6, r6, #768	; 0x300
		cbcdr |= CCM_CBCDR_IPG_PODF(div_ipg - 1);
    1ddc:	f403 7340 	and.w	r3, r3, #768	; 0x300
		CCM_CBCDR = cbcdr;
    1de0:	4a30      	ldr	r2, [pc, #192]	; (1ea4 <set_arm_clock+0x290>)
		cbcdr |= CCM_CBCDR_IPG_PODF(div_ipg - 1);
    1de2:	4333      	orrs	r3, r6
		CCM_CBCDR = cbcdr;
    1de4:	6153      	str	r3, [r2, #20]
	CCM_CBCDR &= ~CCM_CBCDR_PERIPH_CLK_SEL;
    1de6:	4a2f      	ldr	r2, [pc, #188]	; (1ea4 <set_arm_clock+0x290>)
    1de8:	6953      	ldr	r3, [r2, #20]
    1dea:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
    1dee:	6153      	str	r3, [r2, #20]
	while (CCM_CDHIPR & CCM_CDHIPR_PERIPH_CLK_SEL_BUSY) ; // wait
    1df0:	6c93      	ldr	r3, [r2, #72]	; 0x48
    1df2:	069b      	lsls	r3, r3, #26
    1df4:	d4fc      	bmi.n	1df0 <set_arm_clock+0x1dc>
	scale_cpu_cycles_to_microseconds = 0xFFFFFFFFu / (uint32_t)(frequency / 1000000u);
    1df6:	4b3a      	ldr	r3, [pc, #232]	; (1ee0 <set_arm_clock+0x2cc>)
	if ((dcdc & DCDC_REG3_TRG_MASK) > DCDC_REG3_TRG((voltage - 800) / 25)) {
    1df8:	454f      	cmp	r7, r9
	scale_cpu_cycles_to_microseconds = 0xFFFFFFFFu / (uint32_t)(frequency / 1000000u);
    1dfa:	fba3 2300 	umull	r2, r3, r3, r0
    1dfe:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    1e02:	ea4f 4393 	mov.w	r3, r3, lsr #18
	F_BUS_ACTUAL = frequency / div_ipg;
    1e06:	fbb0 f1f1 	udiv	r1, r0, r1
	scale_cpu_cycles_to_microseconds = 0xFFFFFFFFu / (uint32_t)(frequency / 1000000u);
    1e0a:	fbb2 f3f3 	udiv	r3, r2, r3
	F_CPU_ACTUAL = frequency;
    1e0e:	4a35      	ldr	r2, [pc, #212]	; (1ee4 <set_arm_clock+0x2d0>)
    1e10:	6010      	str	r0, [r2, #0]
	F_BUS_ACTUAL = frequency / div_ipg;
    1e12:	4a35      	ldr	r2, [pc, #212]	; (1ee8 <set_arm_clock+0x2d4>)
    1e14:	6011      	str	r1, [r2, #0]
	scale_cpu_cycles_to_microseconds = 0xFFFFFFFFu / (uint32_t)(frequency / 1000000u);
    1e16:	4a35      	ldr	r2, [pc, #212]	; (1eec <set_arm_clock+0x2d8>)
    1e18:	6013      	str	r3, [r2, #0]
	if ((dcdc & DCDC_REG3_TRG_MASK) > DCDC_REG3_TRG((voltage - 800) / 25)) {
    1e1a:	d208      	bcs.n	1e2e <set_arm_clock+0x21a>
		printf("Decreasing voltage to %u mV\n", voltage);
		dcdc &= ~DCDC_REG3_TRG_MASK;
    1e1c:	f028 081f 	bic.w	r8, r8, #31
		dcdc |= DCDC_REG3_TRG((voltage - 800) / 25);
		DCDC_REG3 = dcdc;
    1e20:	4a21      	ldr	r2, [pc, #132]	; (1ea8 <set_arm_clock+0x294>)
		dcdc |= DCDC_REG3_TRG((voltage - 800) / 25);
    1e22:	ea48 0707 	orr.w	r7, r8, r7
		DCDC_REG3 = dcdc;
    1e26:	60d7      	str	r7, [r2, #12]
		while (!(DCDC_REG0 & DCDC_REG0_STS_DC_OK)) ; // wait voltage settling
    1e28:	6813      	ldr	r3, [r2, #0]
    1e2a:	2b00      	cmp	r3, #0
    1e2c:	dafc      	bge.n	1e28 <set_arm_clock+0x214>
	}

	return frequency;
}
    1e2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    1e32:	4673      	mov	r3, lr
    1e34:	e762      	b.n	1cfc <set_arm_clock+0xe8>
    1e36:	2712      	movs	r7, #18
    1e38:	e718      	b.n	1c6c <set_arm_clock+0x58>
    1e3a:	f44f 7340 	mov.w	r3, #768	; 0x300
	if (div_ipg > 4) div_ipg = 4;
    1e3e:	2104      	movs	r1, #4
    1e40:	e7c5      	b.n	1dce <set_arm_clock+0x1ba>
	if ((cbcdr & CCM_CBCDR_AHB_PODF_MASK) != CCM_CBCDR_AHB_PODF(div_ahb - 1)) {
    1e42:	f10c 31ff 	add.w	r1, ip, #4294967295	; 0xffffffff
	uint32_t mult = (frequency * div_arm * div_ahb + 6000000) / 12000000;
    1e46:	4820      	ldr	r0, [pc, #128]	; (1ec8 <set_arm_clock+0x2b4>)
    1e48:	2307      	movs	r3, #7
	if ((cbcdr & CCM_CBCDR_AHB_PODF_MASK) != CCM_CBCDR_AHB_PODF(div_ahb - 1)) {
    1e4a:	028c      	lsls	r4, r1, #10
	uint32_t mult = (frequency * div_arm * div_ahb + 6000000) / 12000000;
    1e4c:	4410      	add	r0, r2
	if ((cbcdr & CCM_CBCDR_AHB_PODF_MASK) != CCM_CBCDR_AHB_PODF(div_ahb - 1)) {
    1e4e:	ea86 2181 	eor.w	r1, r6, r1, lsl #10
	uint32_t mult = (frequency * div_arm * div_ahb + 6000000) / 12000000;
    1e52:	4a27      	ldr	r2, [pc, #156]	; (1ef0 <set_arm_clock+0x2dc>)
	  | CCM_ANALOG_PLL_ARM_ENABLE | CCM_ANALOG_PLL_ARM_DIV_SELECT(mult))) {
    1e54:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 1f00 <set_arm_clock+0x2ec>
	uint32_t mult = (frequency * div_arm * div_ahb + 6000000) / 12000000;
    1e58:	fba2 2000 	umull	r2, r0, r2, r0
    1e5c:	0d02      	lsrs	r2, r0, #20
	frequency = mult * 12000000 / div_arm / div_ahb;
    1e5e:	4825      	ldr	r0, [pc, #148]	; (1ef4 <set_arm_clock+0x2e0>)
    1e60:	2a36      	cmp	r2, #54	; 0x36
    1e62:	bf38      	it	cc
    1e64:	2236      	movcc	r2, #54	; 0x36
    1e66:	fb02 f000 	mul.w	r0, r2, r0
	  | CCM_ANALOG_PLL_ARM_ENABLE | CCM_ANALOG_PLL_ARM_DIV_SELECT(mult))) {
    1e6a:	ea42 0a0a 	orr.w	sl, r2, sl
    1e6e:	e774      	b.n	1d5a <set_arm_clock+0x146>
	if ((cbcdr & CCM_CBCDR_AHB_PODF_MASK) != CCM_CBCDR_AHB_PODF(div_ahb - 1)) {
    1e70:	ea4f 248c 	mov.w	r4, ip, lsl #10
    1e74:	2300      	movs	r3, #0
    1e76:	ea86 218c 	eor.w	r1, r6, ip, lsl #10
				div_arm = 1;
    1e7a:	f04f 0e01 	mov.w	lr, #1
				div_ahb = div_ahb + 1;
    1e7e:	46ac      	mov	ip, r5
    1e80:	e762      	b.n	1d48 <set_arm_clock+0x134>
		if ((cbcdr & CCM_CBCDR_PERIPH_CLK2_PODF_MASK) != CCM_CBCDR_PERIPH_CLK2_PODF(div)) {
    1e82:	461d      	mov	r5, r3
    1e84:	f086 54c0 	eor.w	r4, r6, #402653184	; 0x18000000
    1e88:	4611      	mov	r1, r2
    1e8a:	f04f 53c0 	mov.w	r3, #402653184	; 0x18000000
    1e8e:	e713      	b.n	1cb8 <set_arm_clock+0xa4>
	while (frequency * div_arm * div_ahb < 648000000) {
    1e90:	2400      	movs	r4, #0
	uint32_t div_ahb = 1;
    1e92:	f04f 0c01 	mov.w	ip, #1
	while (frequency * div_arm * div_ahb < 648000000) {
    1e96:	4602      	mov	r2, r0
    1e98:	4631      	mov	r1, r6
    1e9a:	4623      	mov	r3, r4
	uint32_t div_arm = 1;
    1e9c:	46e6      	mov	lr, ip
    1e9e:	e753      	b.n	1d48 <set_arm_clock+0x134>
    1ea0:	1f78a400 	.word	0x1f78a400
    1ea4:	400fc000 	.word	0x400fc000
    1ea8:	40080000 	.word	0x40080000
    1eac:	23c34600 	.word	0x23c34600
    1eb0:	004cb223 	.word	0x004cb223
    1eb4:	51eb851f 	.word	0x51eb851f
    1eb8:	016e3600 	.word	0x016e3600
    1ebc:	400d8000 	.word	0x400d8000
    1ec0:	80003040 	.word	0x80003040
    1ec4:	269fb1ff 	.word	0x269fb1ff
    1ec8:	005b8d80 	.word	0x005b8d80
    1ecc:	4df67eff 	.word	0x4df67eff
    1ed0:	4d3f6400 	.word	0x4d3f6400
    1ed4:	08f0d17f 	.word	0x08f0d17f
    1ed8:	2cb4177f 	.word	0x2cb4177f
    1edc:	00e5109f 	.word	0x00e5109f
    1ee0:	431bde83 	.word	0x431bde83
    1ee4:	20002144 	.word	0x20002144
    1ee8:	20002140 	.word	0x20002140
    1eec:	20003084 	.word	0x20003084
    1ef0:	165e9f81 	.word	0x165e9f81
    1ef4:	00b71b00 	.word	0x00b71b00
    1ef8:	8000206c 	.word	0x8000206c
    1efc:	8001307f 	.word	0x8001307f
    1f00:	80002000 	.word	0x80002000

00001f04 <flexpwm_init>:
{
	int i;

	p->FCTRL0 = FLEXPWM_FCTRL0_FLVL(15); // logic high = fault
	p->FSTS0 = 0x000F; // clear fault status
	p->FFILT0 = 0;
    1f04:	2300      	movs	r3, #0
	p->FSTS0 = 0x000F; // clear fault status
    1f06:	220f      	movs	r2, #15
		p->SM[i].CTRL = FLEXPWM_SMCTRL_FULL;
		p->SM[i].OCTRL = 0;
		p->SM[i].DTCNT0 = 0;
		p->SM[i].INIT = 0;
		p->SM[i].VAL0 = 0;
		p->SM[i].VAL1 = 33464;
    1f08:	f248 2cb8 	movw	ip, #33464	; 0x82b8
	for (i=0; i < 4; i++) {
    1f0c:	4619      	mov	r1, r3
{
    1f0e:	b510      	push	{r4, lr}
	p->FCTRL0 = FLEXPWM_FCTRL0_FLVL(15); // logic high = fault
    1f10:	f44f 4470 	mov.w	r4, #61440	; 0xf000
		p->SM[i].CTRL = FLEXPWM_SMCTRL_FULL;
    1f14:	f44f 6e80 	mov.w	lr, #1024	; 0x400
	p->FCTRL0 = FLEXPWM_FCTRL0_FLVL(15); // logic high = fault
    1f18:	f8a0 418c 	strh.w	r4, [r0, #396]	; 0x18c
		p->SM[i].CTRL2 = FLEXPWM_SMCTRL2_INDEP | FLEXPWM_SMCTRL2_WAITEN
    1f1c:	f44f 4460 	mov.w	r4, #57344	; 0xe000
	p->FSTS0 = 0x000F; // clear fault status
    1f20:	f8a0 218e 	strh.w	r2, [r0, #398]	; 0x18e
		p->SM[i].OCTRL = 0;
    1f24:	460a      	mov	r2, r1
	p->FFILT0 = 0;
    1f26:	f8a0 3190 	strh.w	r3, [r0, #400]	; 0x190
	p->MCTRL |= FLEXPWM_MCTRL_CLDOK(15);
    1f2a:	f8b0 3188 	ldrh.w	r3, [r0, #392]	; 0x188
    1f2e:	b29b      	uxth	r3, r3
    1f30:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
    1f34:	f8a0 3188 	strh.w	r3, [r0, #392]	; 0x188
		p->SM[i].CTRL2 = FLEXPWM_SMCTRL2_INDEP | FLEXPWM_SMCTRL2_WAITEN
    1f38:	eb01 0341 	add.w	r3, r1, r1, lsl #1
	for (i=0; i < 4; i++) {
    1f3c:	3101      	adds	r1, #1
    1f3e:	eb00 1343 	add.w	r3, r0, r3, lsl #5
    1f42:	2904      	cmp	r1, #4
		p->SM[i].CTRL2 = FLEXPWM_SMCTRL2_INDEP | FLEXPWM_SMCTRL2_WAITEN
    1f44:	809c      	strh	r4, [r3, #4]
		p->SM[i].CTRL = FLEXPWM_SMCTRL_FULL;
    1f46:	f8a3 e006 	strh.w	lr, [r3, #6]
		p->SM[i].OCTRL = 0;
    1f4a:	845a      	strh	r2, [r3, #34]	; 0x22
		p->SM[i].DTCNT0 = 0;
    1f4c:	861a      	strh	r2, [r3, #48]	; 0x30
		p->SM[i].INIT = 0;
    1f4e:	805a      	strh	r2, [r3, #2]
		p->SM[i].VAL0 = 0;
    1f50:	815a      	strh	r2, [r3, #10]
		p->SM[i].VAL1 = 33464;
    1f52:	f8a3 c00e 	strh.w	ip, [r3, #14]
		p->SM[i].VAL2 = 0;
    1f56:	825a      	strh	r2, [r3, #18]
		p->SM[i].VAL3 = 0;
    1f58:	82da      	strh	r2, [r3, #22]
		p->SM[i].VAL4 = 0;
    1f5a:	835a      	strh	r2, [r3, #26]
		p->SM[i].VAL5 = 0;
    1f5c:	83da      	strh	r2, [r3, #30]
	for (i=0; i < 4; i++) {
    1f5e:	d1eb      	bne.n	1f38 <flexpwm_init+0x34>
	}
	p->MCTRL |= FLEXPWM_MCTRL_LDOK(15);
    1f60:	f8b0 3188 	ldrh.w	r3, [r0, #392]	; 0x188
    1f64:	b29b      	uxth	r3, r3
    1f66:	f043 030f 	orr.w	r3, r3, #15
    1f6a:	f8a0 3188 	strh.w	r3, [r0, #392]	; 0x188
	p->MCTRL |= FLEXPWM_MCTRL_RUN(15);
    1f6e:	f8b0 3188 	ldrh.w	r3, [r0, #392]	; 0x188
    1f72:	b29b      	uxth	r3, r3
    1f74:	f443 6370 	orr.w	r3, r3, #3840	; 0xf00
    1f78:	f8a0 3188 	strh.w	r3, [r0, #392]	; 0x188
}
    1f7c:	bd10      	pop	{r4, pc}
    1f7e:	bf00      	nop

00001f80 <pwm_init>:
}

void pwm_init(void)
{
	//printf("pwm init\n");
	CCM_CCGR4 |= CCM_CCGR4_PWM1(CCM_CCGR_ON) | CCM_CCGR4_PWM2(CCM_CCGR_ON) |
    1f80:	4b37      	ldr	r3, [pc, #220]	; (2060 <pwm_init+0xe0>)
		CCM_CCGR4_PWM3(CCM_CCGR_ON) | CCM_CCGR4_PWM4(CCM_CCGR_ON);
	CCM_CCGR6 |= CCM_CCGR6_QTIMER1(CCM_CCGR_ON) | CCM_CCGR6_QTIMER2(CCM_CCGR_ON) |
    1f82:	4a38      	ldr	r2, [pc, #224]	; (2064 <pwm_init+0xe4>)
	CCM_CCGR4 |= CCM_CCGR4_PWM1(CCM_CCGR_ON) | CCM_CCGR4_PWM2(CCM_CCGR_ON) |
    1f84:	6f99      	ldr	r1, [r3, #120]	; 0x78
		CCM_CCGR6_QTIMER3(CCM_CCGR_ON) | CCM_CCGR6_QTIMER4(CCM_CCGR_ON);
	flexpwm_init(&IMXRT_FLEXPWM1);
    1f86:	4838      	ldr	r0, [pc, #224]	; (2068 <pwm_init+0xe8>)
	CCM_CCGR4 |= CCM_CCGR4_PWM1(CCM_CCGR_ON) | CCM_CCGR4_PWM2(CCM_CCGR_ON) |
    1f88:	f441 017f 	orr.w	r1, r1, #16711680	; 0xff0000
{
    1f8c:	b570      	push	{r4, r5, r6, lr}
	CCM_CCGR4 |= CCM_CCGR4_PWM1(CCM_CCGR_ON) | CCM_CCGR4_PWM2(CCM_CCGR_ON) |
    1f8e:	6799      	str	r1, [r3, #120]	; 0x78
		p->CH[i].CSCTRL = TMR_CSCTRL_CL1(1) | TMR_CSCTRL_ALT_LOAD;
    1f90:	f241 0601 	movw	r6, #4097	; 0x1001
	CCM_CCGR6 |= CCM_CCGR6_QTIMER1(CCM_CCGR_ON) | CCM_CCGR6_QTIMER2(CCM_CCGR_ON) |
    1f94:	f8d3 1080 	ldr.w	r1, [r3, #128]	; 0x80
		p->CH[i].LOAD = 24000;   // low time  (65537 - x) - 
    1f98:	f645 55c0 	movw	r5, #24000	; 0x5dc0
		p->CH[i].CTRL = TMR_CTRL_CM(1) | TMR_CTRL_PCS(8) |
    1f9c:	f243 0426 	movw	r4, #12326	; 0x3026
	CCM_CCGR6 |= CCM_CCGR6_QTIMER1(CCM_CCGR_ON) | CCM_CCGR6_QTIMER2(CCM_CCGR_ON) |
    1fa0:	430a      	orrs	r2, r1
    1fa2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	flexpwm_init(&IMXRT_FLEXPWM1);
    1fa6:	f7ff ffad 	bl	1f04 <flexpwm_init>
	flexpwm_init(&IMXRT_FLEXPWM2);
    1faa:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
    1fae:	f7ff ffa9 	bl	1f04 <flexpwm_init>
	flexpwm_init(&IMXRT_FLEXPWM3);
    1fb2:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
    1fb6:	f7ff ffa5 	bl	1f04 <flexpwm_init>
	flexpwm_init(&IMXRT_FLEXPWM4);
    1fba:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
    1fbe:	f7ff ffa1 	bl	1f04 <flexpwm_init>
	for (i=0; i < 4; i++) {
    1fc2:	2200      	movs	r2, #0
		p->CH[i].CTRL = 0; // stop timer
    1fc4:	f5a0 1003 	sub.w	r0, r0, #2146304	; 0x20c000
		p->CH[i].SCTRL = TMR_SCTRL_OEN | TMR_SCTRL_OPS | TMR_SCTRL_VAL | TMR_SCTRL_FORCE;
    1fc8:	f04f 0e0f 	mov.w	lr, #15
		p->CH[i].CTRL = 0; // stop timer
    1fcc:	4611      	mov	r1, r2
    1fce:	eb00 1342 	add.w	r3, r0, r2, lsl #5
    1fd2:	ea4f 1c42 	mov.w	ip, r2, lsl #5
	for (i=0; i < 4; i++) {
    1fd6:	3201      	adds	r2, #1
		p->CH[i].CTRL = 0; // stop timer
    1fd8:	8199      	strh	r1, [r3, #12]
	for (i=0; i < 4; i++) {
    1fda:	2a04      	cmp	r2, #4
		p->CH[i].CNTR = 0;
    1fdc:	8159      	strh	r1, [r3, #10]
		p->CH[i].SCTRL = TMR_SCTRL_OEN | TMR_SCTRL_OPS | TMR_SCTRL_VAL | TMR_SCTRL_FORCE;
    1fde:	f8a3 e00e 	strh.w	lr, [r3, #14]
		p->CH[i].CSCTRL = TMR_CSCTRL_CL1(1) | TMR_CSCTRL_ALT_LOAD;
    1fe2:	829e      	strh	r6, [r3, #20]
		p->CH[i].LOAD = 24000;   // low time  (65537 - x) - 
    1fe4:	80dd      	strh	r5, [r3, #6]
		p->CH[i].COMP1 = 0;  // high time (0 = always low, max = LOAD-1)
    1fe6:	f820 100c 	strh.w	r1, [r0, ip]
		p->CH[i].CMPLD1 = 0;
    1fea:	8219      	strh	r1, [r3, #16]
		p->CH[i].CTRL = TMR_CTRL_CM(1) | TMR_CTRL_PCS(8) |
    1fec:	819c      	strh	r4, [r3, #12]
	for (i=0; i < 4; i++) {
    1fee:	d1ee      	bne.n	1fce <pwm_init+0x4e>
    1ff0:	2200      	movs	r2, #0
		p->CH[i].CTRL = 0; // stop timer
    1ff2:	481e      	ldr	r0, [pc, #120]	; (206c <pwm_init+0xec>)
		p->CH[i].SCTRL = TMR_SCTRL_OEN | TMR_SCTRL_OPS | TMR_SCTRL_VAL | TMR_SCTRL_FORCE;
    1ff4:	f04f 0e0f 	mov.w	lr, #15
		p->CH[i].CSCTRL = TMR_CSCTRL_CL1(1) | TMR_CSCTRL_ALT_LOAD;
    1ff8:	f241 0601 	movw	r6, #4097	; 0x1001
		p->CH[i].CTRL = 0; // stop timer
    1ffc:	4611      	mov	r1, r2
		p->CH[i].LOAD = 24000;   // low time  (65537 - x) - 
    1ffe:	f645 55c0 	movw	r5, #24000	; 0x5dc0
		p->CH[i].CTRL = TMR_CTRL_CM(1) | TMR_CTRL_PCS(8) |
    2002:	f243 0426 	movw	r4, #12326	; 0x3026
		p->CH[i].CTRL = 0; // stop timer
    2006:	eb00 1342 	add.w	r3, r0, r2, lsl #5
    200a:	ea4f 1c42 	mov.w	ip, r2, lsl #5
	for (i=0; i < 4; i++) {
    200e:	3201      	adds	r2, #1
		p->CH[i].CTRL = 0; // stop timer
    2010:	8199      	strh	r1, [r3, #12]
	for (i=0; i < 4; i++) {
    2012:	2a04      	cmp	r2, #4
		p->CH[i].CNTR = 0;
    2014:	8159      	strh	r1, [r3, #10]
		p->CH[i].SCTRL = TMR_SCTRL_OEN | TMR_SCTRL_OPS | TMR_SCTRL_VAL | TMR_SCTRL_FORCE;
    2016:	f8a3 e00e 	strh.w	lr, [r3, #14]
		p->CH[i].CSCTRL = TMR_CSCTRL_CL1(1) | TMR_CSCTRL_ALT_LOAD;
    201a:	829e      	strh	r6, [r3, #20]
		p->CH[i].LOAD = 24000;   // low time  (65537 - x) - 
    201c:	80dd      	strh	r5, [r3, #6]
		p->CH[i].COMP1 = 0;  // high time (0 = always low, max = LOAD-1)
    201e:	f820 100c 	strh.w	r1, [r0, ip]
		p->CH[i].CMPLD1 = 0;
    2022:	8219      	strh	r1, [r3, #16]
		p->CH[i].CTRL = TMR_CTRL_CM(1) | TMR_CTRL_PCS(8) |
    2024:	819c      	strh	r4, [r3, #12]
	for (i=0; i < 4; i++) {
    2026:	d1ee      	bne.n	2006 <pwm_init+0x86>
    2028:	2200      	movs	r2, #0
		p->CH[i].CTRL = 0; // stop timer
    202a:	4811      	ldr	r0, [pc, #68]	; (2070 <pwm_init+0xf0>)
		p->CH[i].SCTRL = TMR_SCTRL_OEN | TMR_SCTRL_OPS | TMR_SCTRL_VAL | TMR_SCTRL_FORCE;
    202c:	260f      	movs	r6, #15
		p->CH[i].CSCTRL = TMR_CSCTRL_CL1(1) | TMR_CSCTRL_ALT_LOAD;
    202e:	f241 0501 	movw	r5, #4097	; 0x1001
		p->CH[i].CTRL = 0; // stop timer
    2032:	4611      	mov	r1, r2
		p->CH[i].LOAD = 24000;   // low time  (65537 - x) - 
    2034:	f645 54c0 	movw	r4, #24000	; 0x5dc0
		p->CH[i].CTRL = TMR_CTRL_CM(1) | TMR_CTRL_PCS(8) |
    2038:	f243 0e26 	movw	lr, #12326	; 0x3026
		p->CH[i].CTRL = 0; // stop timer
    203c:	eb00 1342 	add.w	r3, r0, r2, lsl #5
    2040:	ea4f 1c42 	mov.w	ip, r2, lsl #5
	for (i=0; i < 4; i++) {
    2044:	3201      	adds	r2, #1
		p->CH[i].CTRL = 0; // stop timer
    2046:	8199      	strh	r1, [r3, #12]
	for (i=0; i < 4; i++) {
    2048:	2a04      	cmp	r2, #4
		p->CH[i].CNTR = 0;
    204a:	8159      	strh	r1, [r3, #10]
		p->CH[i].SCTRL = TMR_SCTRL_OEN | TMR_SCTRL_OPS | TMR_SCTRL_VAL | TMR_SCTRL_FORCE;
    204c:	81de      	strh	r6, [r3, #14]
		p->CH[i].CSCTRL = TMR_CSCTRL_CL1(1) | TMR_CSCTRL_ALT_LOAD;
    204e:	829d      	strh	r5, [r3, #20]
		p->CH[i].LOAD = 24000;   // low time  (65537 - x) - 
    2050:	80dc      	strh	r4, [r3, #6]
		p->CH[i].COMP1 = 0;  // high time (0 = always low, max = LOAD-1)
    2052:	f820 100c 	strh.w	r1, [r0, ip]
		p->CH[i].CMPLD1 = 0;
    2056:	8219      	strh	r1, [r3, #16]
		p->CH[i].CTRL = TMR_CTRL_CM(1) | TMR_CTRL_PCS(8) |
    2058:	f8a3 e00c 	strh.w	lr, [r3, #12]
	for (i=0; i < 4; i++) {
    205c:	d1ee      	bne.n	203c <pwm_init+0xbc>
	quadtimer_init(&IMXRT_TMR1);
	quadtimer_init(&IMXRT_TMR2);
	quadtimer_init(&IMXRT_TMR3);
}
    205e:	bd70      	pop	{r4, r5, r6, pc}
    2060:	400fc000 	.word	0x400fc000
    2064:	fc030000 	.word	0xfc030000
    2068:	403dc000 	.word	0x403dc000
    206c:	401e0000 	.word	0x401e0000
    2070:	401e4000 	.word	0x401e4000

00002074 <rtc_get>:
	uint32_t hi1 = SNVS_HPRTCMR;
    2074:	4a07      	ldr	r2, [pc, #28]	; (2094 <rtc_get+0x20>)
    2076:	6a50      	ldr	r0, [r2, #36]	; 0x24
	uint32_t lo1 = SNVS_HPRTCLR;
    2078:	6a93      	ldr	r3, [r2, #40]	; 0x28
		uint32_t hi2 = SNVS_HPRTCMR;
    207a:	4619      	mov	r1, r3
    207c:	4684      	mov	ip, r0
    207e:	6a50      	ldr	r0, [r2, #36]	; 0x24
		uint32_t lo2 = SNVS_HPRTCLR;
    2080:	6a93      	ldr	r3, [r2, #40]	; 0x28
		if (lo1 == lo2 && hi1 == hi2) {
    2082:	4299      	cmp	r1, r3
    2084:	d1f9      	bne.n	207a <rtc_get+0x6>
    2086:	4584      	cmp	ip, r0
    2088:	d1f7      	bne.n	207a <rtc_get+0x6>
			return (hi2 << 17) | (lo2 >> 15);
    208a:	0bdb      	lsrs	r3, r3, #15
}
    208c:	ea43 4040 	orr.w	r0, r3, r0, lsl #17
    2090:	4770      	bx	lr
    2092:	bf00      	nop
    2094:	400d4000 	.word	0x400d4000

00002098 <sm_align_pool>:
{
    2098:	b508      	push	{r3, lr}
	x = spool->pool_size % HEADER_SZ;
    209a:	e9d0 3200 	ldrd	r3, r2, [r0]
	if (!spool->pool || !spool->pool_size) return 0;
    209e:	b15b      	cbz	r3, 20b8 <sm_align_pool+0x20>
    20a0:	b1ba      	cbz	r2, 20d2 <sm_align_pool+0x3a>
	if (spool->pool_size % HEADER_SZ) return 0;
    20a2:	4b0f      	ldr	r3, [pc, #60]	; (20e0 <sm_align_pool+0x48>)
    20a4:	fba3 1302 	umull	r1, r3, r3, r2
    20a8:	08db      	lsrs	r3, r3, #3
    20aa:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    20ae:	ebb2 0383 	subs.w	r3, r2, r3, lsl #2
    20b2:	d10a      	bne.n	20ca <sm_align_pool+0x32>
	if (smalloc_verify_pool(spool)) return 1;
    20b4:	2001      	movs	r0, #1
}
    20b6:	bd08      	pop	{r3, pc}
	x = spool->pool_size % HEADER_SZ;
    20b8:	4b09      	ldr	r3, [pc, #36]	; (20e0 <sm_align_pool+0x48>)
    20ba:	fba3 1302 	umull	r1, r3, r3, r2
    20be:	08db      	lsrs	r3, r3, #3
    20c0:	eb03 0343 	add.w	r3, r3, r3, lsl #1
	if (x) spool->pool_size -= x;
    20c4:	ebb2 0383 	subs.w	r3, r2, r3, lsl #2
    20c8:	d001      	beq.n	20ce <sm_align_pool+0x36>
    20ca:	1ad2      	subs	r2, r2, r3
    20cc:	6042      	str	r2, [r0, #4]
	if (spool->pool_size <= MIN_POOL_SZ) {
    20ce:	2af0      	cmp	r2, #240	; 0xf0
    20d0:	d8f0      	bhi.n	20b4 <sm_align_pool+0x1c>
		errno = ENOSPC;
    20d2:	f008 fc4b 	bl	a96c <__errno>
    20d6:	221c      	movs	r2, #28
    20d8:	4603      	mov	r3, r0
    20da:	2000      	movs	r0, #0
    20dc:	601a      	str	r2, [r3, #0]
}
    20de:	bd08      	pop	{r3, pc}
    20e0:	aaaaaaab 	.word	0xaaaaaaab

000020e4 <sm_set_pool>:
{
    20e4:	b570      	push	{r4, r5, r6, lr}
	if (!spool) {
    20e6:	4604      	mov	r4, r0
    20e8:	b338      	cbz	r0, 213a <sm_set_pool+0x56>
	if (!new_pool || !new_pool_size) {
    20ea:	b119      	cbz	r1, 20f4 <sm_set_pool+0x10>
    20ec:	fab2 f682 	clz	r6, r2
    20f0:	0976      	lsrs	r6, r6, #5
    20f2:	b9a2      	cbnz	r2, 211e <sm_set_pool+0x3a>
	if (!spool->pool || !spool->pool_size) return 0;
    20f4:	6820      	ldr	r0, [r4, #0]
    20f6:	b300      	cbz	r0, 213a <sm_set_pool+0x56>
    20f8:	6862      	ldr	r2, [r4, #4]
    20fa:	b1f2      	cbz	r2, 213a <sm_set_pool+0x56>
	if (spool->pool_size % HEADER_SZ) return 0;
    20fc:	4b18      	ldr	r3, [pc, #96]	; (2160 <sm_set_pool+0x7c>)
    20fe:	4919      	ldr	r1, [pc, #100]	; (2164 <sm_set_pool+0x80>)
    2100:	fb02 f303 	mul.w	r3, r2, r3
    2104:	ebb1 0fb3 	cmp.w	r1, r3, ror #2
    2108:	d317      	bcc.n	213a <sm_set_pool+0x56>
			if (spool->do_zero) memset(spool->pool, 0, spool->pool_size);
    210a:	68a3      	ldr	r3, [r4, #8]
    210c:	b9e3      	cbnz	r3, 2148 <sm_set_pool+0x64>
			memset(spool, 0, sizeof(struct smalloc_pool));
    210e:	2200      	movs	r2, #0
			return 1;
    2110:	2301      	movs	r3, #1
			memset(spool, 0, sizeof(struct smalloc_pool));
    2112:	6022      	str	r2, [r4, #0]
    2114:	6062      	str	r2, [r4, #4]
    2116:	60a2      	str	r2, [r4, #8]
    2118:	60e2      	str	r2, [r4, #12]
		spool->do_zero = do_zero;
		memset(spool->pool, 0, spool->pool_size);
	}

	return 1;
}
    211a:	4618      	mov	r0, r3
    211c:	bd70      	pop	{r4, r5, r6, pc}
	spool->pool = new_pool;
    211e:	461d      	mov	r5, r3
	spool->oomfn = oom_handler;
    2120:	9b04      	ldr	r3, [sp, #16]
	spool->pool_size = new_pool_size;
    2122:	e9c0 1200 	strd	r1, r2, [r0]
	spool->oomfn = oom_handler;
    2126:	60c3      	str	r3, [r0, #12]
	if (!sm_align_pool(spool)) return 0;
    2128:	f7ff ffb6 	bl	2098 <sm_align_pool>
    212c:	4603      	mov	r3, r0
    212e:	2800      	cmp	r0, #0
    2130:	d0f3      	beq.n	211a <sm_set_pool+0x36>
	if (do_zero) {
    2132:	b96d      	cbnz	r5, 2150 <sm_set_pool+0x6c>
	return 1;
    2134:	2301      	movs	r3, #1
}
    2136:	4618      	mov	r0, r3
    2138:	bd70      	pop	{r4, r5, r6, pc}
		errno = EINVAL;
    213a:	f008 fc17 	bl	a96c <__errno>
    213e:	2216      	movs	r2, #22
		return 0;
    2140:	2300      	movs	r3, #0
		errno = EINVAL;
    2142:	6002      	str	r2, [r0, #0]
}
    2144:	4618      	mov	r0, r3
    2146:	bd70      	pop	{r4, r5, r6, pc}
			if (spool->do_zero) memset(spool->pool, 0, spool->pool_size);
    2148:	2100      	movs	r1, #0
    214a:	f00a fd43 	bl	cbd4 <memset>
    214e:	e7de      	b.n	210e <sm_set_pool+0x2a>
		memset(spool->pool, 0, spool->pool_size);
    2150:	6862      	ldr	r2, [r4, #4]
    2152:	4631      	mov	r1, r6
    2154:	6820      	ldr	r0, [r4, #0]
		spool->do_zero = do_zero;
    2156:	60a5      	str	r5, [r4, #8]
		memset(spool->pool, 0, spool->pool_size);
    2158:	f00a fd3c 	bl	cbd4 <memset>
	return 1;
    215c:	2301      	movs	r3, #1
    215e:	e7dc      	b.n	211a <sm_set_pool+0x36>
    2160:	aaaaaaab 	.word	0xaaaaaaab
    2164:	15555555 	.word	0x15555555

00002168 <__aeabi_atexit>:
    2168:	4603      	mov	r3, r0
    216a:	4608      	mov	r0, r1
    216c:	4619      	mov	r1, r3
    216e:	f00a bd83 	b.w	cc78 <__cxa_atexit>
    2172:	bf00      	nop

00002174 <std::__throw_bad_alloc()>:
    2174:	b508      	push	{r3, lr}
    2176:	2004      	movs	r0, #4
    2178:	f000 f8c8 	bl	230c <__cxa_allocate_exception>
    217c:	4b02      	ldr	r3, [pc, #8]	; (2188 <std::__throw_bad_alloc()+0x14>)
    217e:	4a03      	ldr	r2, [pc, #12]	; (218c <std::__throw_bad_alloc()+0x18>)
    2180:	4903      	ldr	r1, [pc, #12]	; (2190 <std::__throw_bad_alloc()+0x1c>)
    2182:	6003      	str	r3, [r0, #0]
    2184:	f000 fd76 	bl	2c74 <__cxa_throw>
    2188:	20000868 	.word	0x20000868
    218c:	000021fd 	.word	0x000021fd
    2190:	20000690 	.word	0x20000690

00002194 <std::__throw_logic_error(char const*)>:
    2194:	b510      	push	{r4, lr}
    2196:	b082      	sub	sp, #8
    2198:	9001      	str	r0, [sp, #4]
    219a:	2008      	movs	r0, #8
    219c:	f000 f8b6 	bl	230c <__cxa_allocate_exception>
    21a0:	9901      	ldr	r1, [sp, #4]
    21a2:	4604      	mov	r4, r0
    21a4:	f000 ff6e 	bl	3084 <std::logic_error::logic_error(char const*)>
    21a8:	4a04      	ldr	r2, [pc, #16]	; (21bc <std::__throw_logic_error(char const*)+0x28>)
    21aa:	4905      	ldr	r1, [pc, #20]	; (21c0 <std::__throw_logic_error(char const*)+0x2c>)
    21ac:	4620      	mov	r0, r4
    21ae:	f000 fd61 	bl	2c74 <__cxa_throw>
    21b2:	4620      	mov	r0, r4
    21b4:	f000 f8c2 	bl	233c <__cxa_free_exception>
    21b8:	f000 f8e4 	bl	2384 <__cxa_end_cleanup>
    21bc:	00002f75 	.word	0x00002f75
    21c0:	2000066c 	.word	0x2000066c

000021c4 <std::__throw_length_error(char const*)>:
    21c4:	b510      	push	{r4, lr}
    21c6:	b082      	sub	sp, #8
    21c8:	9001      	str	r0, [sp, #4]
    21ca:	2008      	movs	r0, #8
    21cc:	f000 f89e 	bl	230c <__cxa_allocate_exception>
    21d0:	9901      	ldr	r1, [sp, #4]
    21d2:	4604      	mov	r4, r0
    21d4:	f000 ff96 	bl	3104 <std::length_error::length_error(char const*)>
    21d8:	4a04      	ldr	r2, [pc, #16]	; (21ec <std::__throw_length_error(char const*)+0x28>)
    21da:	4905      	ldr	r1, [pc, #20]	; (21f0 <std::__throw_length_error(char const*)+0x2c>)
    21dc:	4620      	mov	r0, r4
    21de:	f000 fd49 	bl	2c74 <__cxa_throw>
    21e2:	4620      	mov	r0, r4
    21e4:	f000 f8aa 	bl	233c <__cxa_free_exception>
    21e8:	f000 f8cc 	bl	2384 <__cxa_end_cleanup>
    21ec:	00002fb5 	.word	0x00002fb5
    21f0:	20000678 	.word	0x20000678

000021f4 <std::bad_alloc::what() const>:
    21f4:	4800      	ldr	r0, [pc, #0]	; (21f8 <std::bad_alloc::what() const+0x4>)
    21f6:	4770      	bx	lr
    21f8:	200005d4 	.word	0x200005d4

000021fc <std::bad_alloc::~bad_alloc()>:
    21fc:	b510      	push	{r4, lr}
    21fe:	4b03      	ldr	r3, [pc, #12]	; (220c <std::bad_alloc::~bad_alloc()+0x10>)
    2200:	6003      	str	r3, [r0, #0]
    2202:	4604      	mov	r4, r0
    2204:	f000 f986 	bl	2514 <std::exception::~exception()>
    2208:	4620      	mov	r0, r4
    220a:	bd10      	pop	{r4, pc}
    220c:	20000868 	.word	0x20000868

00002210 <std::bad_alloc::~bad_alloc()>:
    2210:	b510      	push	{r4, lr}
    2212:	4b05      	ldr	r3, [pc, #20]	; (2228 <std::bad_alloc::~bad_alloc()+0x18>)
    2214:	6003      	str	r3, [r0, #0]
    2216:	4604      	mov	r4, r0
    2218:	f000 f97c 	bl	2514 <std::exception::~exception()>
    221c:	4620      	mov	r0, r4
    221e:	2104      	movs	r1, #4
    2220:	f7fe fa9e 	bl	760 <operator delete(void*, unsigned int)>
    2224:	4620      	mov	r0, r4
    2226:	bd10      	pop	{r4, pc}
    2228:	20000868 	.word	0x20000868

0000222c <(anonymous namespace)::pool::free(void*) [clone .constprop.0]>:
    222c:	4920      	ldr	r1, [pc, #128]	; (22b0 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x84>)
    222e:	684b      	ldr	r3, [r1, #4]
    2230:	b530      	push	{r4, r5, lr}
    2232:	f850 5c08 	ldr.w	r5, [r0, #-8]
    2236:	f1a0 0408 	sub.w	r4, r0, #8
    223a:	b35b      	cbz	r3, 2294 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x68>
    223c:	eb04 0e05 	add.w	lr, r4, r5
    2240:	4573      	cmp	r3, lr
    2242:	d827      	bhi.n	2294 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x68>
    2244:	d021      	beq.n	228a <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x5e>
    2246:	685a      	ldr	r2, [r3, #4]
    2248:	f101 0c04 	add.w	ip, r1, #4
    224c:	b932      	cbnz	r2, 225c <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x30>
    224e:	e00f      	b.n	2270 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x44>
    2250:	6851      	ldr	r1, [r2, #4]
    2252:	f103 0c04 	add.w	ip, r3, #4
    2256:	b321      	cbz	r1, 22a2 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x76>
    2258:	4613      	mov	r3, r2
    225a:	460a      	mov	r2, r1
    225c:	4596      	cmp	lr, r2
    225e:	d3f7      	bcc.n	2250 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x24>
    2260:	bf04      	itt	eq
    2262:	e9de 2100 	ldrdeq	r2, r1, [lr]
    2266:	6059      	streq	r1, [r3, #4]
    2268:	f8dc 3000 	ldr.w	r3, [ip]
    226c:	bf08      	it	eq
    226e:	18ad      	addeq	r5, r5, r2
    2270:	681a      	ldr	r2, [r3, #0]
    2272:	1899      	adds	r1, r3, r2
    2274:	428c      	cmp	r4, r1
    2276:	d011      	beq.n	229c <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x70>
    2278:	685b      	ldr	r3, [r3, #4]
    227a:	f840 3c04 	str.w	r3, [r0, #-4]
    227e:	f8dc 3000 	ldr.w	r3, [ip]
    2282:	f840 5c08 	str.w	r5, [r0, #-8]
    2286:	605c      	str	r4, [r3, #4]
    2288:	bd30      	pop	{r4, r5, pc}
    228a:	681a      	ldr	r2, [r3, #0]
    228c:	685b      	ldr	r3, [r3, #4]
    228e:	442a      	add	r2, r5
    2290:	f840 2c08 	str.w	r2, [r0, #-8]
    2294:	f840 3c04 	str.w	r3, [r0, #-4]
    2298:	604c      	str	r4, [r1, #4]
    229a:	bd30      	pop	{r4, r5, pc}
    229c:	442a      	add	r2, r5
    229e:	601a      	str	r2, [r3, #0]
    22a0:	bd30      	pop	{r4, r5, pc}
    22a2:	685b      	ldr	r3, [r3, #4]
    22a4:	681a      	ldr	r2, [r3, #0]
    22a6:	1899      	adds	r1, r3, r2
    22a8:	428c      	cmp	r4, r1
    22aa:	d1e5      	bne.n	2278 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x4c>
    22ac:	e7f6      	b.n	229c <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x70>
    22ae:	bf00      	nop
    22b0:	20002c94 	.word	0x20002c94

000022b4 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]>:
    22b4:	4914      	ldr	r1, [pc, #80]	; (2308 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x54>)
    22b6:	f100 0308 	add.w	r3, r0, #8
    22ba:	6848      	ldr	r0, [r1, #4]
    22bc:	2b08      	cmp	r3, #8
    22be:	bf38      	it	cc
    22c0:	2308      	movcc	r3, #8
    22c2:	b1f8      	cbz	r0, 2304 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x50>
    22c4:	3307      	adds	r3, #7
    22c6:	f023 0307 	bic.w	r3, r3, #7
    22ca:	3104      	adds	r1, #4
    22cc:	e002      	b.n	22d4 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x20>
    22ce:	1d01      	adds	r1, r0, #4
    22d0:	6840      	ldr	r0, [r0, #4]
    22d2:	b180      	cbz	r0, 22f6 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x42>
    22d4:	6802      	ldr	r2, [r0, #0]
    22d6:	4293      	cmp	r3, r2
    22d8:	d8f9      	bhi.n	22ce <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x1a>
    22da:	b430      	push	{r4, r5}
    22dc:	1ad4      	subs	r4, r2, r3
    22de:	2c07      	cmp	r4, #7
    22e0:	d90a      	bls.n	22f8 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x44>
    22e2:	18c5      	adds	r5, r0, r3
    22e4:	6842      	ldr	r2, [r0, #4]
    22e6:	606a      	str	r2, [r5, #4]
    22e8:	50c4      	str	r4, [r0, r3]
    22ea:	6808      	ldr	r0, [r1, #0]
    22ec:	6003      	str	r3, [r0, #0]
    22ee:	600d      	str	r5, [r1, #0]
    22f0:	3008      	adds	r0, #8
    22f2:	bc30      	pop	{r4, r5}
    22f4:	4770      	bx	lr
    22f6:	4770      	bx	lr
    22f8:	6845      	ldr	r5, [r0, #4]
    22fa:	6002      	str	r2, [r0, #0]
    22fc:	600d      	str	r5, [r1, #0]
    22fe:	3008      	adds	r0, #8
    2300:	bc30      	pop	{r4, r5}
    2302:	4770      	bx	lr
    2304:	4770      	bx	lr
    2306:	bf00      	nop
    2308:	20002c94 	.word	0x20002c94

0000230c <__cxa_allocate_exception>:
    230c:	b510      	push	{r4, lr}
    230e:	f100 0480 	add.w	r4, r0, #128	; 0x80
    2312:	4620      	mov	r0, r4
    2314:	f00a f8d2 	bl	c4bc <malloc>
    2318:	4603      	mov	r3, r0
    231a:	b130      	cbz	r0, 232a <__cxa_allocate_exception+0x1e>
    231c:	2280      	movs	r2, #128	; 0x80
    231e:	2100      	movs	r1, #0
    2320:	4618      	mov	r0, r3
    2322:	f00a fc57 	bl	cbd4 <memset>
    2326:	3080      	adds	r0, #128	; 0x80
    2328:	bd10      	pop	{r4, pc}
    232a:	4620      	mov	r0, r4
    232c:	f7ff ffc2 	bl	22b4 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]>
    2330:	4603      	mov	r3, r0
    2332:	2800      	cmp	r0, #0
    2334:	d1f2      	bne.n	231c <__cxa_allocate_exception+0x10>
    2336:	f000 fc23 	bl	2b80 <std::terminate()>
    233a:	bf00      	nop

0000233c <__cxa_free_exception>:
    233c:	4a06      	ldr	r2, [pc, #24]	; (2358 <__cxa_free_exception+0x1c>)
    233e:	6893      	ldr	r3, [r2, #8]
    2340:	3880      	subs	r0, #128	; 0x80
    2342:	4298      	cmp	r0, r3
    2344:	d905      	bls.n	2352 <__cxa_free_exception+0x16>
    2346:	68d2      	ldr	r2, [r2, #12]
    2348:	4413      	add	r3, r2
    234a:	4298      	cmp	r0, r3
    234c:	d201      	bcs.n	2352 <__cxa_free_exception+0x16>
    234e:	f7ff bf6d 	b.w	222c <(anonymous namespace)::pool::free(void*) [clone .constprop.0]>
    2352:	f00a b8bb 	b.w	c4cc <free>
    2356:	bf00      	nop
    2358:	20002c94 	.word	0x20002c94

0000235c <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
    235c:	b538      	push	{r3, r4, r5, lr}
    235e:	4c08      	ldr	r4, [pc, #32]	; (2380 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x24>)
    2360:	f44f 651e 	mov.w	r5, #2528	; 0x9e0
    2364:	4628      	mov	r0, r5
    2366:	60e5      	str	r5, [r4, #12]
    2368:	f00a f8a8 	bl	c4bc <malloc>
    236c:	60a0      	str	r0, [r4, #8]
    236e:	b120      	cbz	r0, 237a <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x1e>
    2370:	2300      	movs	r3, #0
    2372:	e9c0 5300 	strd	r5, r3, [r0]
    2376:	6060      	str	r0, [r4, #4]
    2378:	bd38      	pop	{r3, r4, r5, pc}
    237a:	60e0      	str	r0, [r4, #12]
    237c:	6060      	str	r0, [r4, #4]
    237e:	bd38      	pop	{r3, r4, r5, pc}
    2380:	20002c94 	.word	0x20002c94

00002384 <__cxa_end_cleanup>:
    2384:	b41e      	push	{r1, r2, r3, r4}
    2386:	f000 f88d 	bl	24a4 <__gnu_end_cleanup>
    238a:	bc1e      	pop	{r1, r2, r3, r4}
    238c:	f007 fe0e 	bl	9fac <_Unwind_Resume>

00002390 <__cxa_type_match>:
    2390:	b5f0      	push	{r4, r5, r6, r7, lr}
    2392:	7802      	ldrb	r2, [r0, #0]
    2394:	2a47      	cmp	r2, #71	; 0x47
    2396:	b083      	sub	sp, #12
    2398:	460c      	mov	r4, r1
    239a:	461d      	mov	r5, r3
    239c:	d019      	beq.n	23d2 <__cxa_type_match+0x42>
    239e:	4e26      	ldr	r6, [pc, #152]	; (2438 <__cxa_type_match+0xa8>)
    23a0:	2000      	movs	r0, #0
    23a2:	6833      	ldr	r3, [r6, #0]
    23a4:	9001      	str	r0, [sp, #4]
    23a6:	689b      	ldr	r3, [r3, #8]
    23a8:	4630      	mov	r0, r6
    23aa:	4798      	blx	r3
    23ac:	b178      	cbz	r0, 23ce <__cxa_type_match+0x3e>
    23ae:	9b01      	ldr	r3, [sp, #4]
    23b0:	681b      	ldr	r3, [r3, #0]
    23b2:	9301      	str	r3, [sp, #4]
    23b4:	2702      	movs	r7, #2
    23b6:	6823      	ldr	r3, [r4, #0]
    23b8:	4631      	mov	r1, r6
    23ba:	4620      	mov	r0, r4
    23bc:	691e      	ldr	r6, [r3, #16]
    23be:	aa01      	add	r2, sp, #4
    23c0:	2301      	movs	r3, #1
    23c2:	47b0      	blx	r6
    23c4:	bb10      	cbnz	r0, 240c <__cxa_type_match+0x7c>
    23c6:	4607      	mov	r7, r0
    23c8:	4638      	mov	r0, r7
    23ca:	b003      	add	sp, #12
    23cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    23ce:	2701      	movs	r7, #1
    23d0:	e7f1      	b.n	23b6 <__cxa_type_match+0x26>
    23d2:	7843      	ldrb	r3, [r0, #1]
    23d4:	2b4e      	cmp	r3, #78	; 0x4e
    23d6:	d1e2      	bne.n	239e <__cxa_type_match+0xe>
    23d8:	7883      	ldrb	r3, [r0, #2]
    23da:	2b55      	cmp	r3, #85	; 0x55
    23dc:	d1df      	bne.n	239e <__cxa_type_match+0xe>
    23de:	78c3      	ldrb	r3, [r0, #3]
    23e0:	2b43      	cmp	r3, #67	; 0x43
    23e2:	d1dc      	bne.n	239e <__cxa_type_match+0xe>
    23e4:	7903      	ldrb	r3, [r0, #4]
    23e6:	2b46      	cmp	r3, #70	; 0x46
    23e8:	d01a      	beq.n	2420 <__cxa_type_match+0x90>
    23ea:	7903      	ldrb	r3, [r0, #4]
    23ec:	2b43      	cmp	r3, #67	; 0x43
    23ee:	d1d6      	bne.n	239e <__cxa_type_match+0xe>
    23f0:	7943      	ldrb	r3, [r0, #5]
    23f2:	2b2b      	cmp	r3, #43	; 0x2b
    23f4:	d1d3      	bne.n	239e <__cxa_type_match+0xe>
    23f6:	7983      	ldrb	r3, [r0, #6]
    23f8:	2b2b      	cmp	r3, #43	; 0x2b
    23fa:	d1d0      	bne.n	239e <__cxa_type_match+0xe>
    23fc:	79c3      	ldrb	r3, [r0, #7]
    23fe:	2b01      	cmp	r3, #1
    2400:	d8cd      	bhi.n	239e <__cxa_type_match+0xe>
    2402:	d008      	beq.n	2416 <__cxa_type_match+0x86>
    2404:	f850 6c20 	ldr.w	r6, [r0, #-32]
    2408:	3058      	adds	r0, #88	; 0x58
    240a:	e7ca      	b.n	23a2 <__cxa_type_match+0x12>
    240c:	9b01      	ldr	r3, [sp, #4]
    240e:	602b      	str	r3, [r5, #0]
    2410:	4638      	mov	r0, r7
    2412:	b003      	add	sp, #12
    2414:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2416:	f850 0c20 	ldr.w	r0, [r0, #-32]
    241a:	f850 6c78 	ldr.w	r6, [r0, #-120]
    241e:	e7c0      	b.n	23a2 <__cxa_type_match+0x12>
    2420:	7943      	ldrb	r3, [r0, #5]
    2422:	2b4f      	cmp	r3, #79	; 0x4f
    2424:	d1e1      	bne.n	23ea <__cxa_type_match+0x5a>
    2426:	7983      	ldrb	r3, [r0, #6]
    2428:	2b52      	cmp	r3, #82	; 0x52
    242a:	d1de      	bne.n	23ea <__cxa_type_match+0x5a>
    242c:	79c3      	ldrb	r3, [r0, #7]
    242e:	2b00      	cmp	r3, #0
    2430:	d1db      	bne.n	23ea <__cxa_type_match+0x5a>
    2432:	4e02      	ldr	r6, [pc, #8]	; (243c <__cxa_type_match+0xac>)
    2434:	4618      	mov	r0, r3
    2436:	e7b4      	b.n	23a2 <__cxa_type_match+0x12>
    2438:	20000658 	.word	0x20000658
    243c:	20000644 	.word	0x20000644

00002440 <__cxa_begin_cleanup>:
    2440:	b510      	push	{r4, lr}
    2442:	4604      	mov	r4, r0
    2444:	f000 f87a 	bl	253c <__cxa_get_globals>
    2448:	4622      	mov	r2, r4
    244a:	f812 3920 	ldrb.w	r3, [r2], #-32
    244e:	2b47      	cmp	r3, #71	; 0x47
    2450:	d004      	beq.n	245c <__cxa_begin_cleanup+0x1c>
    2452:	6883      	ldr	r3, [r0, #8]
    2454:	bb23      	cbnz	r3, 24a0 <__cxa_begin_cleanup+0x60>
    2456:	6082      	str	r2, [r0, #8]
    2458:	2001      	movs	r0, #1
    245a:	bd10      	pop	{r4, pc}
    245c:	7863      	ldrb	r3, [r4, #1]
    245e:	2b4e      	cmp	r3, #78	; 0x4e
    2460:	d1f7      	bne.n	2452 <__cxa_begin_cleanup+0x12>
    2462:	78a3      	ldrb	r3, [r4, #2]
    2464:	2b55      	cmp	r3, #85	; 0x55
    2466:	d1f4      	bne.n	2452 <__cxa_begin_cleanup+0x12>
    2468:	78e3      	ldrb	r3, [r4, #3]
    246a:	2b43      	cmp	r3, #67	; 0x43
    246c:	d1f1      	bne.n	2452 <__cxa_begin_cleanup+0x12>
    246e:	7923      	ldrb	r3, [r4, #4]
    2470:	2b43      	cmp	r3, #67	; 0x43
    2472:	d1ee      	bne.n	2452 <__cxa_begin_cleanup+0x12>
    2474:	7963      	ldrb	r3, [r4, #5]
    2476:	2b2b      	cmp	r3, #43	; 0x2b
    2478:	d1eb      	bne.n	2452 <__cxa_begin_cleanup+0x12>
    247a:	79a3      	ldrb	r3, [r4, #6]
    247c:	2b2b      	cmp	r3, #43	; 0x2b
    247e:	d1e8      	bne.n	2452 <__cxa_begin_cleanup+0x12>
    2480:	79e3      	ldrb	r3, [r4, #7]
    2482:	2b01      	cmp	r3, #1
    2484:	d8e5      	bhi.n	2452 <__cxa_begin_cleanup+0x12>
    2486:	f854 3c04 	ldr.w	r3, [r4, #-4]
    248a:	3301      	adds	r3, #1
    248c:	2b01      	cmp	r3, #1
    248e:	f844 3c04 	str.w	r3, [r4, #-4]
    2492:	d1e1      	bne.n	2458 <__cxa_begin_cleanup+0x18>
    2494:	6883      	ldr	r3, [r0, #8]
    2496:	f844 3c08 	str.w	r3, [r4, #-8]
    249a:	6082      	str	r2, [r0, #8]
    249c:	2001      	movs	r0, #1
    249e:	bd10      	pop	{r4, pc}
    24a0:	f000 fb6e 	bl	2b80 <std::terminate()>

000024a4 <__gnu_end_cleanup>:
    24a4:	b508      	push	{r3, lr}
    24a6:	f000 f849 	bl	253c <__cxa_get_globals>
    24aa:	6883      	ldr	r3, [r0, #8]
    24ac:	b383      	cbz	r3, 2510 <__gnu_end_cleanup+0x6c>
    24ae:	f893 2020 	ldrb.w	r2, [r3, #32]
    24b2:	2a47      	cmp	r2, #71	; 0x47
    24b4:	d004      	beq.n	24c0 <__gnu_end_cleanup+0x1c>
    24b6:	2200      	movs	r2, #0
    24b8:	6082      	str	r2, [r0, #8]
    24ba:	f103 0020 	add.w	r0, r3, #32
    24be:	bd08      	pop	{r3, pc}
    24c0:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
    24c4:	2a4e      	cmp	r2, #78	; 0x4e
    24c6:	d1f6      	bne.n	24b6 <__gnu_end_cleanup+0x12>
    24c8:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
    24cc:	2a55      	cmp	r2, #85	; 0x55
    24ce:	d1f2      	bne.n	24b6 <__gnu_end_cleanup+0x12>
    24d0:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
    24d4:	2a43      	cmp	r2, #67	; 0x43
    24d6:	d1ee      	bne.n	24b6 <__gnu_end_cleanup+0x12>
    24d8:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
    24dc:	2a43      	cmp	r2, #67	; 0x43
    24de:	d1ea      	bne.n	24b6 <__gnu_end_cleanup+0x12>
    24e0:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
    24e4:	2a2b      	cmp	r2, #43	; 0x2b
    24e6:	d1e6      	bne.n	24b6 <__gnu_end_cleanup+0x12>
    24e8:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
    24ec:	2a2b      	cmp	r2, #43	; 0x2b
    24ee:	d1e2      	bne.n	24b6 <__gnu_end_cleanup+0x12>
    24f0:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
    24f4:	2a01      	cmp	r2, #1
    24f6:	d8de      	bhi.n	24b6 <__gnu_end_cleanup+0x12>
    24f8:	69da      	ldr	r2, [r3, #28]
    24fa:	3a01      	subs	r2, #1
    24fc:	61da      	str	r2, [r3, #28]
    24fe:	2a00      	cmp	r2, #0
    2500:	d1db      	bne.n	24ba <__gnu_end_cleanup+0x16>
    2502:	6999      	ldr	r1, [r3, #24]
    2504:	6081      	str	r1, [r0, #8]
    2506:	2200      	movs	r2, #0
    2508:	619a      	str	r2, [r3, #24]
    250a:	f103 0020 	add.w	r0, r3, #32
    250e:	bd08      	pop	{r3, pc}
    2510:	f000 fb36 	bl	2b80 <std::terminate()>

00002514 <std::exception::~exception()>:
    2514:	4770      	bx	lr
    2516:	bf00      	nop

00002518 <std::bad_exception::~bad_exception()>:
    2518:	4770      	bx	lr
    251a:	bf00      	nop

0000251c <transaction clone for std::bad_exception::what() const>:
    251c:	4800      	ldr	r0, [pc, #0]	; (2520 <transaction clone for std::bad_exception::what() const+0x4>)
    251e:	4770      	bx	lr
    2520:	200005c0 	.word	0x200005c0

00002524 <std::bad_exception::~bad_exception()>:
    2524:	b510      	push	{r4, lr}
    2526:	2104      	movs	r1, #4
    2528:	4604      	mov	r4, r0
    252a:	f7fe f919 	bl	760 <operator delete(void*, unsigned int)>
    252e:	4620      	mov	r0, r4
    2530:	bd10      	pop	{r4, pc}
    2532:	bf00      	nop

00002534 <__cxa_get_globals_fast>:
    2534:	4800      	ldr	r0, [pc, #0]	; (2538 <__cxa_get_globals_fast+0x4>)
    2536:	4770      	bx	lr
    2538:	20002c88 	.word	0x20002c88

0000253c <__cxa_get_globals>:
    253c:	4800      	ldr	r0, [pc, #0]	; (2540 <__cxa_get_globals+0x4>)
    253e:	4770      	bx	lr
    2540:	20002c88 	.word	0x20002c88

00002544 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>:
    2544:	2850      	cmp	r0, #80	; 0x50
    2546:	b570      	push	{r4, r5, r6, lr}
    2548:	d01d      	beq.n	2586 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x42>
    254a:	4684      	mov	ip, r0
    254c:	f000 000f 	and.w	r0, r0, #15
    2550:	280c      	cmp	r0, #12
    2552:	d855      	bhi.n	2600 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xbc>
    2554:	e8df f000 	tbb	[pc, r0]
    2558:	07264407 	.word	0x07264407
    255c:	5454541e 	.word	0x5454541e
    2560:	07222a54 	.word	0x07222a54
    2564:	1e          	.byte	0x1e
    2565:	00          	.byte	0x00
    2566:	4610      	mov	r0, r2
    2568:	f850 6b04 	ldr.w	r6, [r0], #4
    256c:	b14e      	cbz	r6, 2582 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x3e>
    256e:	f00c 0470 	and.w	r4, ip, #112	; 0x70
    2572:	2c10      	cmp	r4, #16
    2574:	bf08      	it	eq
    2576:	4611      	moveq	r1, r2
    2578:	440e      	add	r6, r1
    257a:	f01c 0f80 	tst.w	ip, #128	; 0x80
    257e:	bf18      	it	ne
    2580:	6836      	ldrne	r6, [r6, #0]
    2582:	601e      	str	r6, [r3, #0]
    2584:	bd70      	pop	{r4, r5, r6, pc}
    2586:	1cd0      	adds	r0, r2, #3
    2588:	f020 0003 	bic.w	r0, r0, #3
    258c:	f850 6b04 	ldr.w	r6, [r0], #4
    2590:	601e      	str	r6, [r3, #0]
    2592:	bd70      	pop	{r4, r5, r6, pc}
    2594:	4610      	mov	r0, r2
    2596:	f850 6b08 	ldr.w	r6, [r0], #8
    259a:	e7e7      	b.n	256c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    259c:	4610      	mov	r0, r2
    259e:	f930 6b02 	ldrsh.w	r6, [r0], #2
    25a2:	e7e3      	b.n	256c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    25a4:	4610      	mov	r0, r2
    25a6:	f830 6b02 	ldrh.w	r6, [r0], #2
    25aa:	e7df      	b.n	256c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    25ac:	2600      	movs	r6, #0
    25ae:	4610      	mov	r0, r2
    25b0:	4634      	mov	r4, r6
    25b2:	f810 5b01 	ldrb.w	r5, [r0], #1
    25b6:	f005 0e7f 	and.w	lr, r5, #127	; 0x7f
    25ba:	fa0e fe04 	lsl.w	lr, lr, r4
    25be:	f015 0f80 	tst.w	r5, #128	; 0x80
    25c2:	ea46 060e 	orr.w	r6, r6, lr
    25c6:	f104 0407 	add.w	r4, r4, #7
    25ca:	d1f2      	bne.n	25b2 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x6e>
    25cc:	2c1f      	cmp	r4, #31
    25ce:	d8cd      	bhi.n	256c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    25d0:	066d      	lsls	r5, r5, #25
    25d2:	d5cb      	bpl.n	256c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    25d4:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    25d8:	fa05 f404 	lsl.w	r4, r5, r4
    25dc:	4326      	orrs	r6, r4
    25de:	e7c6      	b.n	256e <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x2a>
    25e0:	2600      	movs	r6, #0
    25e2:	4610      	mov	r0, r2
    25e4:	4634      	mov	r4, r6
    25e6:	f810 5b01 	ldrb.w	r5, [r0], #1
    25ea:	f005 0e7f 	and.w	lr, r5, #127	; 0x7f
    25ee:	fa0e fe04 	lsl.w	lr, lr, r4
    25f2:	062d      	lsls	r5, r5, #24
    25f4:	ea46 060e 	orr.w	r6, r6, lr
    25f8:	f104 0407 	add.w	r4, r4, #7
    25fc:	d4f3      	bmi.n	25e6 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xa2>
    25fe:	e7b5      	b.n	256c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    2600:	f7fe f9d4 	bl	9ac <abort>

00002604 <base_of_encoded_value(unsigned char, _Unwind_Context*)>:
    2604:	28ff      	cmp	r0, #255	; 0xff
    2606:	b508      	push	{r3, lr}
    2608:	4603      	mov	r3, r0
    260a:	d019      	beq.n	2640 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x3c>
    260c:	f003 0270 	and.w	r2, r3, #112	; 0x70
    2610:	2a30      	cmp	r2, #48	; 0x30
    2612:	4608      	mov	r0, r1
    2614:	d016      	beq.n	2644 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x40>
    2616:	d805      	bhi.n	2624 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x20>
    2618:	2a20      	cmp	r2, #32
    261a:	d109      	bne.n	2630 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x2c>
    261c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    2620:	f007 bea7 	b.w	a372 <_Unwind_GetTextRelBase>
    2624:	2a40      	cmp	r2, #64	; 0x40
    2626:	d109      	bne.n	263c <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x38>
    2628:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    262c:	f007 be8e 	b.w	a34c <_Unwind_GetRegionStart>
    2630:	d802      	bhi.n	2638 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x34>
    2632:	f013 0f60 	tst.w	r3, #96	; 0x60
    2636:	d003      	beq.n	2640 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x3c>
    2638:	f7fe f9b8 	bl	9ac <abort>
    263c:	2a50      	cmp	r2, #80	; 0x50
    263e:	d1fb      	bne.n	2638 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x34>
    2640:	2000      	movs	r0, #0
    2642:	bd08      	pop	{r3, pc}
    2644:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    2648:	f007 be90 	b.w	a36c <_Unwind_GetDataRelBase>

0000264c <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>:
    264c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    264e:	460c      	mov	r4, r1
    2650:	4615      	mov	r5, r2
    2652:	4606      	mov	r6, r0
    2654:	b108      	cbz	r0, 265a <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0xe>
    2656:	f007 fe79 	bl	a34c <_Unwind_GetRegionStart>
    265a:	6028      	str	r0, [r5, #0]
    265c:	f814 7b01 	ldrb.w	r7, [r4], #1
    2660:	2fff      	cmp	r7, #255	; 0xff
    2662:	d128      	bne.n	26b6 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x6a>
    2664:	6068      	str	r0, [r5, #4]
    2666:	4620      	mov	r0, r4
    2668:	f810 3b01 	ldrb.w	r3, [r0], #1
    266c:	2bff      	cmp	r3, #255	; 0xff
    266e:	d032      	beq.n	26d6 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x8a>
    2670:	2310      	movs	r3, #16
    2672:	2400      	movs	r4, #0
    2674:	752b      	strb	r3, [r5, #20]
    2676:	4622      	mov	r2, r4
    2678:	f810 1b01 	ldrb.w	r1, [r0], #1
    267c:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    2680:	4093      	lsls	r3, r2
    2682:	0609      	lsls	r1, r1, #24
    2684:	ea44 0403 	orr.w	r4, r4, r3
    2688:	f102 0207 	add.w	r2, r2, #7
    268c:	d4f4      	bmi.n	2678 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x2c>
    268e:	4404      	add	r4, r0
    2690:	60ec      	str	r4, [r5, #12]
    2692:	f810 3b01 	ldrb.w	r3, [r0], #1
    2696:	756b      	strb	r3, [r5, #21]
    2698:	2400      	movs	r4, #0
    269a:	4622      	mov	r2, r4
    269c:	f810 1b01 	ldrb.w	r1, [r0], #1
    26a0:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    26a4:	4093      	lsls	r3, r2
    26a6:	431c      	orrs	r4, r3
    26a8:	060b      	lsls	r3, r1, #24
    26aa:	f102 0207 	add.w	r2, r2, #7
    26ae:	d4f5      	bmi.n	269c <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x50>
    26b0:	4404      	add	r4, r0
    26b2:	612c      	str	r4, [r5, #16]
    26b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    26b6:	4631      	mov	r1, r6
    26b8:	4638      	mov	r0, r7
    26ba:	f7ff ffa3 	bl	2604 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    26be:	4622      	mov	r2, r4
    26c0:	4601      	mov	r1, r0
    26c2:	1d2b      	adds	r3, r5, #4
    26c4:	4638      	mov	r0, r7
    26c6:	f7ff ff3d 	bl	2544 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    26ca:	4604      	mov	r4, r0
    26cc:	4620      	mov	r0, r4
    26ce:	f810 3b01 	ldrb.w	r3, [r0], #1
    26d2:	2bff      	cmp	r3, #255	; 0xff
    26d4:	d1cc      	bne.n	2670 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x24>
    26d6:	752b      	strb	r3, [r5, #20]
    26d8:	2400      	movs	r4, #0
    26da:	e7d9      	b.n	2690 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x44>

000026dc <__gxx_personality_v0>:
    26dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    26e0:	f000 0403 	and.w	r4, r0, #3
    26e4:	b093      	sub	sp, #76	; 0x4c
    26e6:	2300      	movs	r3, #0
    26e8:	2c01      	cmp	r4, #1
    26ea:	9308      	str	r3, [sp, #32]
    26ec:	460f      	mov	r7, r1
    26ee:	4690      	mov	r8, r2
    26f0:	d013      	beq.n	271a <__gxx_personality_v0+0x3e>
    26f2:	2c02      	cmp	r4, #2
    26f4:	d108      	bne.n	2708 <__gxx_personality_v0+0x2c>
    26f6:	4641      	mov	r1, r8
    26f8:	4638      	mov	r0, r7
    26fa:	f007 fe11 	bl	a320 <__gnu_unwind_frame>
    26fe:	b940      	cbnz	r0, 2712 <__gxx_personality_v0+0x36>
    2700:	2008      	movs	r0, #8
    2702:	b013      	add	sp, #76	; 0x4c
    2704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2708:	2c00      	cmp	r4, #0
    270a:	f000 8093 	beq.w	2834 <__gxx_personality_v0+0x158>
    270e:	f7fe f94d 	bl	9ac <abort>
    2712:	2009      	movs	r0, #9
    2714:	b013      	add	sp, #76	; 0x4c
    2716:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    271a:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
    271e:	f010 0408 	ands.w	r4, r0, #8
    2722:	f8cd a000 	str.w	sl, [sp]
    2726:	f000 809a 	beq.w	285e <__gxx_personality_v0+0x182>
    272a:	f044 0202 	orr.w	r2, r4, #2
    272e:	9202      	str	r2, [sp, #8]
    2730:	910c      	str	r1, [sp, #48]	; 0x30
    2732:	220c      	movs	r2, #12
    2734:	4619      	mov	r1, r3
    2736:	4640      	mov	r0, r8
    2738:	f007 f88c 	bl	9854 <_Unwind_VRS_Set>
    273c:	4640      	mov	r0, r8
    273e:	f007 fe0b 	bl	a358 <_Unwind_GetLanguageSpecificData>
    2742:	4683      	mov	fp, r0
    2744:	2800      	cmp	r0, #0
    2746:	d0d6      	beq.n	26f6 <__gxx_personality_v0+0x1a>
    2748:	4652      	mov	r2, sl
    274a:	4601      	mov	r1, r0
    274c:	4640      	mov	r0, r8
    274e:	f7ff ff7d 	bl	264c <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
    2752:	4641      	mov	r1, r8
    2754:	4605      	mov	r5, r0
    2756:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
    275a:	f7ff ff53 	bl	2604 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    275e:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
    2762:	2300      	movs	r3, #0
    2764:	900e      	str	r0, [sp, #56]	; 0x38
    2766:	4619      	mov	r1, r3
    2768:	f8cd 9000 	str.w	r9, [sp]
    276c:	220f      	movs	r2, #15
    276e:	4640      	mov	r0, r8
    2770:	f007 f84a 	bl	9808 <_Unwind_VRS_Get>
    2774:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2776:	f023 0301 	bic.w	r3, r3, #1
    277a:	1e5e      	subs	r6, r3, #1
    277c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    277e:	429d      	cmp	r5, r3
    2780:	f080 80bd 	bcs.w	28fe <__gxx_personality_v0+0x222>
    2784:	f89d 4045 	ldrb.w	r4, [sp, #69]	; 0x45
    2788:	2100      	movs	r1, #0
    278a:	4620      	mov	r0, r4
    278c:	f7ff ff3a 	bl	2604 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    2790:	462a      	mov	r2, r5
    2792:	4601      	mov	r1, r0
    2794:	ab09      	add	r3, sp, #36	; 0x24
    2796:	4620      	mov	r0, r4
    2798:	f7ff fed4 	bl	2544 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    279c:	f89d 5045 	ldrb.w	r5, [sp, #69]	; 0x45
    27a0:	4604      	mov	r4, r0
    27a2:	2100      	movs	r1, #0
    27a4:	4628      	mov	r0, r5
    27a6:	f7ff ff2d 	bl	2604 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    27aa:	4622      	mov	r2, r4
    27ac:	4601      	mov	r1, r0
    27ae:	ab0a      	add	r3, sp, #40	; 0x28
    27b0:	4628      	mov	r0, r5
    27b2:	f7ff fec7 	bl	2544 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    27b6:	f89d 5045 	ldrb.w	r5, [sp, #69]	; 0x45
    27ba:	4604      	mov	r4, r0
    27bc:	2100      	movs	r1, #0
    27be:	4628      	mov	r0, r5
    27c0:	f7ff ff20 	bl	2604 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    27c4:	4622      	mov	r2, r4
    27c6:	4601      	mov	r1, r0
    27c8:	464b      	mov	r3, r9
    27ca:	4628      	mov	r0, r5
    27cc:	f7ff feba 	bl	2544 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    27d0:	2400      	movs	r4, #0
    27d2:	4605      	mov	r5, r0
    27d4:	4622      	mov	r2, r4
    27d6:	f815 1b01 	ldrb.w	r1, [r5], #1
    27da:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    27de:	4093      	lsls	r3, r2
    27e0:	431c      	orrs	r4, r3
    27e2:	060b      	lsls	r3, r1, #24
    27e4:	f102 0207 	add.w	r2, r2, #7
    27e8:	d4f5      	bmi.n	27d6 <__gxx_personality_v0+0xfa>
    27ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    27ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
    27ee:	4413      	add	r3, r2
    27f0:	42b3      	cmp	r3, r6
    27f2:	d917      	bls.n	2824 <__gxx_personality_v0+0x148>
    27f4:	9b02      	ldr	r3, [sp, #8]
    27f6:	07d8      	lsls	r0, r3, #31
    27f8:	d52d      	bpl.n	2856 <__gxx_personality_v0+0x17a>
    27fa:	2400      	movs	r4, #0
    27fc:	9403      	str	r4, [sp, #12]
    27fe:	2300      	movs	r3, #0
    2800:	4619      	mov	r1, r3
    2802:	f8cd 9000 	str.w	r9, [sp]
    2806:	4640      	mov	r0, r8
    2808:	220d      	movs	r2, #13
    280a:	9d08      	ldr	r5, [sp, #32]
    280c:	f006 fffc 	bl	9808 <_Unwind_VRS_Get>
    2810:	9b03      	ldr	r3, [sp, #12]
    2812:	633b      	str	r3, [r7, #48]	; 0x30
    2814:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2816:	f8c7 b02c 	str.w	fp, [r7, #44]	; 0x2c
    281a:	e9c7 5409 	strd	r5, r4, [r7, #36]	; 0x24
    281e:	2006      	movs	r0, #6
    2820:	623b      	str	r3, [r7, #32]
    2822:	e76e      	b.n	2702 <__gxx_personality_v0+0x26>
    2824:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    2826:	4413      	add	r3, r2
    2828:	42b3      	cmp	r3, r6
    282a:	d872      	bhi.n	2912 <__gxx_personality_v0+0x236>
    282c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    282e:	42ab      	cmp	r3, r5
    2830:	d8a8      	bhi.n	2784 <__gxx_personality_v0+0xa8>
    2832:	e7df      	b.n	27f4 <__gxx_personality_v0+0x118>
    2834:	0702      	lsls	r2, r0, #28
    2836:	f53f af5e 	bmi.w	26f6 <__gxx_personality_v0+0x1a>
    283a:	2301      	movs	r3, #1
    283c:	9302      	str	r3, [sp, #8]
    283e:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
    2842:	2300      	movs	r3, #0
    2844:	f8cd a000 	str.w	sl, [sp]
    2848:	220c      	movs	r2, #12
    284a:	4619      	mov	r1, r3
    284c:	4640      	mov	r0, r8
    284e:	970c      	str	r7, [sp, #48]	; 0x30
    2850:	f007 f800 	bl	9854 <_Unwind_VRS_Set>
    2854:	e772      	b.n	273c <__gxx_personality_v0+0x60>
    2856:	0719      	lsls	r1, r3, #28
    2858:	d558      	bpl.n	290c <__gxx_personality_v0+0x230>
    285a:	f000 f991 	bl	2b80 <std::terminate()>
    285e:	6a0d      	ldr	r5, [r1, #32]
    2860:	4623      	mov	r3, r4
    2862:	220d      	movs	r2, #13
    2864:	4621      	mov	r1, r4
    2866:	4640      	mov	r0, r8
    2868:	f006 ffce 	bl	9808 <_Unwind_VRS_Get>
    286c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    286e:	429d      	cmp	r5, r3
    2870:	d002      	beq.n	2878 <__gxx_personality_v0+0x19c>
    2872:	2302      	movs	r3, #2
    2874:	9302      	str	r3, [sp, #8]
    2876:	e7e4      	b.n	2842 <__gxx_personality_v0+0x166>
    2878:	4623      	mov	r3, r4
    287a:	4621      	mov	r1, r4
    287c:	220c      	movs	r2, #12
    287e:	f8cd a000 	str.w	sl, [sp]
    2882:	4640      	mov	r0, r8
    2884:	970c      	str	r7, [sp, #48]	; 0x30
    2886:	f006 ffe5 	bl	9854 <_Unwind_VRS_Set>
    288a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    288c:	9203      	str	r2, [sp, #12]
    288e:	e9d7 430a 	ldrd	r4, r3, [r7, #40]	; 0x28
    2892:	2a00      	cmp	r2, #0
    2894:	d03a      	beq.n	290c <__gxx_personality_v0+0x230>
    2896:	469b      	mov	fp, r3
    2898:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
    289c:	2c00      	cmp	r4, #0
    289e:	db54      	blt.n	294a <__gxx_personality_v0+0x26e>
    28a0:	2503      	movs	r5, #3
    28a2:	2300      	movs	r3, #0
    28a4:	461a      	mov	r2, r3
    28a6:	4619      	mov	r1, r3
    28a8:	f8cd 9000 	str.w	r9, [sp]
    28ac:	4640      	mov	r0, r8
    28ae:	970b      	str	r7, [sp, #44]	; 0x2c
    28b0:	f006 ffd0 	bl	9854 <_Unwind_VRS_Set>
    28b4:	2300      	movs	r3, #0
    28b6:	4619      	mov	r1, r3
    28b8:	2201      	movs	r2, #1
    28ba:	f8cd 9000 	str.w	r9, [sp]
    28be:	4640      	mov	r0, r8
    28c0:	940b      	str	r4, [sp, #44]	; 0x2c
    28c2:	f006 ffc7 	bl	9854 <_Unwind_VRS_Set>
    28c6:	2300      	movs	r3, #0
    28c8:	4619      	mov	r1, r3
    28ca:	220f      	movs	r2, #15
    28cc:	f8cd 9000 	str.w	r9, [sp]
    28d0:	4640      	mov	r0, r8
    28d2:	f006 ff99 	bl	9808 <_Unwind_VRS_Get>
    28d6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    28d8:	9903      	ldr	r1, [sp, #12]
    28da:	f8cd 9000 	str.w	r9, [sp]
    28de:	f002 0201 	and.w	r2, r2, #1
    28e2:	430a      	orrs	r2, r1
    28e4:	2300      	movs	r3, #0
    28e6:	920b      	str	r2, [sp, #44]	; 0x2c
    28e8:	4640      	mov	r0, r8
    28ea:	220f      	movs	r2, #15
    28ec:	4619      	mov	r1, r3
    28ee:	f006 ffb1 	bl	9854 <_Unwind_VRS_Set>
    28f2:	2d02      	cmp	r5, #2
    28f4:	d024      	beq.n	2940 <__gxx_personality_v0+0x264>
    28f6:	2007      	movs	r0, #7
    28f8:	b013      	add	sp, #76	; 0x4c
    28fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    28fe:	9b02      	ldr	r3, [sp, #8]
    2900:	07de      	lsls	r6, r3, #31
    2902:	f53f af7a 	bmi.w	27fa <__gxx_personality_v0+0x11e>
    2906:	9b02      	ldr	r3, [sp, #8]
    2908:	071b      	lsls	r3, r3, #28
    290a:	d4a6      	bmi.n	285a <__gxx_personality_v0+0x17e>
    290c:	4638      	mov	r0, r7
    290e:	f006 fca7 	bl	9260 <__cxa_call_terminate>
    2912:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2914:	2b00      	cmp	r3, #0
    2916:	f43f aeee 	beq.w	26f6 <__gxx_personality_v0+0x1a>
    291a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    291c:	4413      	add	r3, r2
    291e:	9303      	str	r3, [sp, #12]
    2920:	2c00      	cmp	r4, #0
    2922:	d136      	bne.n	2992 <__gxx_personality_v0+0x2b6>
    2924:	2b00      	cmp	r3, #0
    2926:	f43f aee6 	beq.w	26f6 <__gxx_personality_v0+0x1a>
    292a:	9b02      	ldr	r3, [sp, #8]
    292c:	07dd      	lsls	r5, r3, #31
    292e:	f53f aee2 	bmi.w	26f6 <__gxx_personality_v0+0x1a>
    2932:	9b02      	ldr	r3, [sp, #8]
    2934:	071a      	lsls	r2, r3, #28
    2936:	f140 8116 	bpl.w	2b66 <__gxx_personality_v0+0x48a>
    293a:	2400      	movs	r4, #0
    293c:	2502      	movs	r5, #2
    293e:	e7b0      	b.n	28a2 <__gxx_personality_v0+0x1c6>
    2940:	4638      	mov	r0, r7
    2942:	f7ff fd7d 	bl	2440 <__cxa_begin_cleanup>
    2946:	2007      	movs	r0, #7
    2948:	e6db      	b.n	2702 <__gxx_personality_v0+0x26>
    294a:	f06f 4340 	mvn.w	r3, #3221225472	; 0xc0000000
    294e:	1b1b      	subs	r3, r3, r4
    2950:	461e      	mov	r6, r3
    2952:	4652      	mov	r2, sl
    2954:	4659      	mov	r1, fp
    2956:	4640      	mov	r0, r8
    2958:	f7ff fe78 	bl	264c <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
    295c:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
    2960:	4641      	mov	r1, r8
    2962:	f7ff fe4f 	bl	2604 <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    2966:	900e      	str	r0, [sp, #56]	; 0x38
    2968:	4605      	mov	r5, r0
    296a:	980f      	ldr	r0, [sp, #60]	; 0x3c
    296c:	f850 3026 	ldr.w	r3, [r0, r6, lsl #2]
    2970:	eb00 0086 	add.w	r0, r0, r6, lsl #2
    2974:	b133      	cbz	r3, 2984 <__gxx_personality_v0+0x2a8>
    2976:	4602      	mov	r2, r0
    2978:	2300      	movs	r3, #0
    297a:	f852 1f04 	ldr.w	r1, [r2, #4]!
    297e:	3301      	adds	r3, #1
    2980:	2900      	cmp	r1, #0
    2982:	d1fa      	bne.n	297a <__gxx_personality_v0+0x29e>
    2984:	e9c7 350a 	strd	r3, r5, [r7, #40]	; 0x28
    2988:	2304      	movs	r3, #4
    298a:	6378      	str	r0, [r7, #52]	; 0x34
    298c:	633b      	str	r3, [r7, #48]	; 0x30
    298e:	2503      	movs	r5, #3
    2990:	e787      	b.n	28a2 <__gxx_personality_v0+0x1c6>
    2992:	9e10      	ldr	r6, [sp, #64]	; 0x40
    2994:	9b03      	ldr	r3, [sp, #12]
    2996:	3c01      	subs	r4, #1
    2998:	4426      	add	r6, r4
    299a:	2b00      	cmp	r3, #0
    299c:	f43f aeab 	beq.w	26f6 <__gxx_personality_v0+0x1a>
    29a0:	9b02      	ldr	r3, [sp, #8]
    29a2:	2e00      	cmp	r6, #0
    29a4:	f000 80d7 	beq.w	2b56 <__gxx_personality_v0+0x47a>
    29a8:	f013 0308 	ands.w	r3, r3, #8
    29ac:	9304      	str	r3, [sp, #16]
    29ae:	f000 80c9 	beq.w	2b44 <__gxx_personality_v0+0x468>
    29b2:	2347      	movs	r3, #71	; 0x47
    29b4:	703b      	strb	r3, [r7, #0]
    29b6:	234e      	movs	r3, #78	; 0x4e
    29b8:	707b      	strb	r3, [r7, #1]
    29ba:	2355      	movs	r3, #85	; 0x55
    29bc:	70bb      	strb	r3, [r7, #2]
    29be:	2343      	movs	r3, #67	; 0x43
    29c0:	70fb      	strb	r3, [r7, #3]
    29c2:	2346      	movs	r3, #70	; 0x46
    29c4:	713b      	strb	r3, [r7, #4]
    29c6:	234f      	movs	r3, #79	; 0x4f
    29c8:	717b      	strb	r3, [r7, #5]
    29ca:	2352      	movs	r3, #82	; 0x52
    29cc:	71bb      	strb	r3, [r7, #6]
    29ce:	2300      	movs	r3, #0
    29d0:	71fb      	strb	r3, [r7, #7]
    29d2:	2300      	movs	r3, #0
    29d4:	f8cd b018 	str.w	fp, [sp, #24]
    29d8:	f8cd 8014 	str.w	r8, [sp, #20]
    29dc:	469b      	mov	fp, r3
    29de:	f8cd a01c 	str.w	sl, [sp, #28]
    29e2:	2400      	movs	r4, #0
    29e4:	4622      	mov	r2, r4
    29e6:	f816 1b01 	ldrb.w	r1, [r6], #1
    29ea:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    29ee:	4093      	lsls	r3, r2
    29f0:	0608      	lsls	r0, r1, #24
    29f2:	ea44 0403 	orr.w	r4, r4, r3
    29f6:	f102 0207 	add.w	r2, r2, #7
    29fa:	d4f4      	bmi.n	29e6 <__gxx_personality_v0+0x30a>
    29fc:	2a1f      	cmp	r2, #31
    29fe:	d805      	bhi.n	2a0c <__gxx_personality_v0+0x330>
    2a00:	0649      	lsls	r1, r1, #25
    2a02:	d503      	bpl.n	2a0c <__gxx_personality_v0+0x330>
    2a04:	2301      	movs	r3, #1
    2a06:	4093      	lsls	r3, r2
    2a08:	425b      	negs	r3, r3
    2a0a:	431c      	orrs	r4, r3
    2a0c:	2500      	movs	r5, #0
    2a0e:	4630      	mov	r0, r6
    2a10:	462a      	mov	r2, r5
    2a12:	f810 1b01 	ldrb.w	r1, [r0], #1
    2a16:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    2a1a:	4093      	lsls	r3, r2
    2a1c:	431d      	orrs	r5, r3
    2a1e:	060b      	lsls	r3, r1, #24
    2a20:	f102 0207 	add.w	r2, r2, #7
    2a24:	d4f5      	bmi.n	2a12 <__gxx_personality_v0+0x336>
    2a26:	2a1f      	cmp	r2, #31
    2a28:	d805      	bhi.n	2a36 <__gxx_personality_v0+0x35a>
    2a2a:	064b      	lsls	r3, r1, #25
    2a2c:	d503      	bpl.n	2a36 <__gxx_personality_v0+0x35a>
    2a2e:	2301      	movs	r3, #1
    2a30:	4093      	lsls	r3, r2
    2a32:	425b      	negs	r3, r3
    2a34:	431d      	orrs	r5, r3
    2a36:	2c00      	cmp	r4, #0
    2a38:	d034      	beq.n	2aa4 <__gxx_personality_v0+0x3c8>
    2a3a:	dc36      	bgt.n	2aaa <__gxx_personality_v0+0x3ce>
    2a3c:	b117      	cbz	r7, 2a44 <__gxx_personality_v0+0x368>
    2a3e:	9b04      	ldr	r3, [sp, #16]
    2a40:	2b00      	cmp	r3, #0
    2a42:	d04f      	beq.n	2ae4 <__gxx_personality_v0+0x408>
    2a44:	f06f 4a40 	mvn.w	sl, #3221225472	; 0xc0000000
    2a48:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    2a4a:	ebaa 0a04 	sub.w	sl, sl, r4
    2a4e:	f853 302a 	ldr.w	r3, [r3, sl, lsl #2]
    2a52:	b1b3      	cbz	r3, 2a82 <__gxx_personality_v0+0x3a6>
    2a54:	2d00      	cmp	r5, #0
    2a56:	d06a      	beq.n	2b2e <__gxx_personality_v0+0x452>
    2a58:	442e      	add	r6, r5
    2a5a:	e7c2      	b.n	29e2 <__gxx_personality_v0+0x306>
    2a5c:	00a3      	lsls	r3, r4, #2
    2a5e:	425b      	negs	r3, r3
    2a60:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    2a62:	990e      	ldr	r1, [sp, #56]	; 0x38
    2a64:	441a      	add	r2, r3
    2a66:	464b      	mov	r3, r9
    2a68:	f7ff fd6c 	bl	2544 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    2a6c:	990b      	ldr	r1, [sp, #44]	; 0x2c
    2a6e:	b141      	cbz	r1, 2a82 <__gxx_personality_v0+0x3a6>
    2a70:	2f00      	cmp	r7, #0
    2a72:	d0ef      	beq.n	2a54 <__gxx_personality_v0+0x378>
    2a74:	ab08      	add	r3, sp, #32
    2a76:	2200      	movs	r2, #0
    2a78:	4638      	mov	r0, r7
    2a7a:	f7ff fc89 	bl	2390 <__cxa_type_match>
    2a7e:	2800      	cmp	r0, #0
    2a80:	d0e8      	beq.n	2a54 <__gxx_personality_v0+0x378>
    2a82:	9b02      	ldr	r3, [sp, #8]
    2a84:	f8dd a01c 	ldr.w	sl, [sp, #28]
    2a88:	07db      	lsls	r3, r3, #31
    2a8a:	e9dd 8b05 	ldrd	r8, fp, [sp, #20]
    2a8e:	f53f aeb6 	bmi.w	27fe <__gxx_personality_v0+0x122>
    2a92:	9b04      	ldr	r3, [sp, #16]
    2a94:	2b00      	cmp	r3, #0
    2a96:	f43f af01 	beq.w	289c <__gxx_personality_v0+0x1c0>
    2a9a:	2c00      	cmp	r4, #0
    2a9c:	f6bf af00 	bge.w	28a0 <__gxx_personality_v0+0x1c4>
    2aa0:	f000 f87c 	bl	2b9c <std::unexpected()>
    2aa4:	f04f 0b01 	mov.w	fp, #1
    2aa8:	e7d4      	b.n	2a54 <__gxx_personality_v0+0x378>
    2aaa:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
    2aae:	28ff      	cmp	r0, #255	; 0xff
    2ab0:	d031      	beq.n	2b16 <__gxx_personality_v0+0x43a>
    2ab2:	f000 0307 	and.w	r3, r0, #7
    2ab6:	2b04      	cmp	r3, #4
    2ab8:	f63f ae29 	bhi.w	270e <__gxx_personality_v0+0x32>
    2abc:	a201      	add	r2, pc, #4	; (adr r2, 2ac4 <__gxx_personality_v0+0x3e8>)
    2abe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    2ac2:	bf00      	nop
    2ac4:	00002a5d 	.word	0x00002a5d
    2ac8:	0000270f 	.word	0x0000270f
    2acc:	00002adf 	.word	0x00002adf
    2ad0:	00002a5d 	.word	0x00002a5d
    2ad4:	00002ad9 	.word	0x00002ad9
    2ad8:	00e3      	lsls	r3, r4, #3
    2ada:	425b      	negs	r3, r3
    2adc:	e7c0      	b.n	2a60 <__gxx_personality_v0+0x384>
    2ade:	0063      	lsls	r3, r4, #1
    2ae0:	425b      	negs	r3, r3
    2ae2:	e7bd      	b.n	2a60 <__gxx_personality_v0+0x384>
    2ae4:	f06f 4a40 	mvn.w	sl, #3221225472	; 0xc0000000
    2ae8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    2aea:	9a08      	ldr	r2, [sp, #32]
    2aec:	920b      	str	r2, [sp, #44]	; 0x2c
    2aee:	ebaa 0a04 	sub.w	sl, sl, r4
    2af2:	eb03 088a 	add.w	r8, r3, sl, lsl #2
    2af6:	f853 102a 	ldr.w	r1, [r3, sl, lsl #2]
    2afa:	b919      	cbnz	r1, 2b04 <__gxx_personality_v0+0x428>
    2afc:	e00d      	b.n	2b1a <__gxx_personality_v0+0x43e>
    2afe:	f858 1f04 	ldr.w	r1, [r8, #4]!
    2b02:	b151      	cbz	r1, 2b1a <__gxx_personality_v0+0x43e>
    2b04:	4441      	add	r1, r8
    2b06:	464b      	mov	r3, r9
    2b08:	2200      	movs	r2, #0
    2b0a:	4638      	mov	r0, r7
    2b0c:	f7ff fc40 	bl	2390 <__cxa_type_match>
    2b10:	2800      	cmp	r0, #0
    2b12:	d0f4      	beq.n	2afe <__gxx_personality_v0+0x422>
    2b14:	e79e      	b.n	2a54 <__gxx_personality_v0+0x378>
    2b16:	2300      	movs	r3, #0
    2b18:	e7a2      	b.n	2a60 <__gxx_personality_v0+0x384>
    2b1a:	9b02      	ldr	r3, [sp, #8]
    2b1c:	07d8      	lsls	r0, r3, #31
    2b1e:	4656      	mov	r6, sl
    2b20:	e9dd 8b05 	ldrd	r8, fp, [sp, #20]
    2b24:	f8dd a01c 	ldr.w	sl, [sp, #28]
    2b28:	f53f ae69 	bmi.w	27fe <__gxx_personality_v0+0x122>
    2b2c:	e711      	b.n	2952 <__gxx_personality_v0+0x276>
    2b2e:	465b      	mov	r3, fp
    2b30:	f8dd 8014 	ldr.w	r8, [sp, #20]
    2b34:	2b00      	cmp	r3, #0
    2b36:	f43f adde 	beq.w	26f6 <__gxx_personality_v0+0x1a>
    2b3a:	9b02      	ldr	r3, [sp, #8]
    2b3c:	07d9      	lsls	r1, r3, #31
    2b3e:	f53f adda 	bmi.w	26f6 <__gxx_personality_v0+0x1a>
    2b42:	e6fa      	b.n	293a <__gxx_personality_v0+0x25e>
    2b44:	79fb      	ldrb	r3, [r7, #7]
    2b46:	2b01      	cmp	r3, #1
    2b48:	bf0c      	ite	eq
    2b4a:	f857 3c20 	ldreq.w	r3, [r7, #-32]
    2b4e:	f107 0358 	addne.w	r3, r7, #88	; 0x58
    2b52:	9308      	str	r3, [sp, #32]
    2b54:	e73d      	b.n	29d2 <__gxx_personality_v0+0x2f6>
    2b56:	07da      	lsls	r2, r3, #31
    2b58:	f53f adcd 	bmi.w	26f6 <__gxx_personality_v0+0x1a>
    2b5c:	9b02      	ldr	r3, [sp, #8]
    2b5e:	f013 0408 	ands.w	r4, r3, #8
    2b62:	f47f aeea 	bne.w	293a <__gxx_personality_v0+0x25e>
    2b66:	2502      	movs	r5, #2
    2b68:	e69b      	b.n	28a2 <__gxx_personality_v0+0x1c6>
    2b6a:	f006 fbfb 	bl	9364 <__cxa_begin_catch>
    2b6e:	e674      	b.n	285a <__gxx_personality_v0+0x17e>

00002b70 <__cxxabiv1::__terminate(void (*)())>:
    2b70:	b508      	push	{r3, lr}
    2b72:	4780      	blx	r0
    2b74:	f7fd ff1a 	bl	9ac <abort>
    2b78:	f006 fbf4 	bl	9364 <__cxa_begin_catch>
    2b7c:	f7fd ff16 	bl	9ac <abort>

00002b80 <std::terminate()>:
    2b80:	b508      	push	{r3, lr}
    2b82:	4b03      	ldr	r3, [pc, #12]	; (2b90 <std::terminate()+0x10>)
    2b84:	6818      	ldr	r0, [r3, #0]
    2b86:	f3bf 8f5b 	dmb	ish
    2b8a:	f7ff fff1 	bl	2b70 <__cxxabiv1::__terminate(void (*)())>
    2b8e:	bf00      	nop
    2b90:	20002158 	.word	0x20002158

00002b94 <__cxxabiv1::__unexpected(void (*)())>:
    2b94:	b508      	push	{r3, lr}
    2b96:	4780      	blx	r0
    2b98:	f7ff fff2 	bl	2b80 <std::terminate()>

00002b9c <std::unexpected()>:
    2b9c:	b508      	push	{r3, lr}
    2b9e:	4b03      	ldr	r3, [pc, #12]	; (2bac <std::unexpected()+0x10>)
    2ba0:	6818      	ldr	r0, [r3, #0]
    2ba2:	f3bf 8f5b 	dmb	ish
    2ba6:	f7ff fff5 	bl	2b94 <__cxxabiv1::__unexpected(void (*)())>
    2baa:	bf00      	nop
    2bac:	2000215c 	.word	0x2000215c

00002bb0 <std::get_terminate()>:
    2bb0:	4b02      	ldr	r3, [pc, #8]	; (2bbc <std::get_terminate()+0xc>)
    2bb2:	6818      	ldr	r0, [r3, #0]
    2bb4:	f3bf 8f5b 	dmb	ish
    2bb8:	4770      	bx	lr
    2bba:	bf00      	nop
    2bbc:	20002158 	.word	0x20002158

00002bc0 <std::get_unexpected()>:
    2bc0:	4b02      	ldr	r3, [pc, #8]	; (2bcc <std::get_unexpected()+0xc>)
    2bc2:	6818      	ldr	r0, [r3, #0]
    2bc4:	f3bf 8f5b 	dmb	ish
    2bc8:	4770      	bx	lr
    2bca:	bf00      	nop
    2bcc:	2000215c 	.word	0x2000215c

00002bd0 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)>:
    2bd0:	b500      	push	{lr}
    2bd2:	2801      	cmp	r0, #1
    2bd4:	b083      	sub	sp, #12
    2bd6:	d81d      	bhi.n	2c14 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0x44>
    2bd8:	f3bf 8f5b 	dmb	ish
    2bdc:	f1a1 0328 	sub.w	r3, r1, #40	; 0x28
    2be0:	e853 2f00 	ldrex	r2, [r3]
    2be4:	3a01      	subs	r2, #1
    2be6:	e843 2000 	strex	r0, r2, [r3]
    2bea:	2800      	cmp	r0, #0
    2bec:	d1f8      	bne.n	2be0 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0x10>
    2bee:	f3bf 8f5b 	dmb	ish
    2bf2:	b962      	cbnz	r2, 2c0e <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0x3e>
    2bf4:	f851 3c1c 	ldr.w	r3, [r1, #-28]
    2bf8:	f101 0058 	add.w	r0, r1, #88	; 0x58
    2bfc:	b113      	cbz	r3, 2c04 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0x34>
    2bfe:	9001      	str	r0, [sp, #4]
    2c00:	4798      	blx	r3
    2c02:	9801      	ldr	r0, [sp, #4]
    2c04:	b003      	add	sp, #12
    2c06:	f85d eb04 	ldr.w	lr, [sp], #4
    2c0a:	f7ff bb97 	b.w	233c <__cxa_free_exception>
    2c0e:	b003      	add	sp, #12
    2c10:	f85d fb04 	ldr.w	pc, [sp], #4
    2c14:	f851 0c14 	ldr.w	r0, [r1, #-20]
    2c18:	f7ff ffaa 	bl	2b70 <__cxxabiv1::__terminate(void (*)())>

00002c1c <__cxa_init_primary_exception>:
    2c1c:	b538      	push	{r3, r4, r5, lr}
    2c1e:	2500      	movs	r5, #0
    2c20:	e940 121e 	strd	r1, r2, [r0, #-120]	; 0x78
    2c24:	f840 5c80 	str.w	r5, [r0, #-128]
    2c28:	4604      	mov	r4, r0
    2c2a:	f7ff ffc9 	bl	2bc0 <std::get_unexpected()>
    2c2e:	f844 0c70 	str.w	r0, [r4, #-112]
    2c32:	f7ff ffbd 	bl	2bb0 <std::get_terminate()>
    2c36:	2243      	movs	r2, #67	; 0x43
    2c38:	232b      	movs	r3, #43	; 0x2b
    2c3a:	2147      	movs	r1, #71	; 0x47
    2c3c:	f804 2c55 	strb.w	r2, [r4, #-85]
    2c40:	f804 2c54 	strb.w	r2, [r4, #-84]
    2c44:	f804 3c53 	strb.w	r3, [r4, #-83]
    2c48:	f804 3c52 	strb.w	r3, [r4, #-82]
    2c4c:	224e      	movs	r2, #78	; 0x4e
    2c4e:	2355      	movs	r3, #85	; 0x55
    2c50:	f804 1c58 	strb.w	r1, [r4, #-88]
    2c54:	f804 5c51 	strb.w	r5, [r4, #-81]
    2c58:	4905      	ldr	r1, [pc, #20]	; (2c70 <__cxa_init_primary_exception+0x54>)
    2c5a:	f804 2c57 	strb.w	r2, [r4, #-87]
    2c5e:	f804 3c56 	strb.w	r3, [r4, #-86]
    2c62:	f844 0c6c 	str.w	r0, [r4, #-108]
    2c66:	f844 1c50 	str.w	r1, [r4, #-80]
    2c6a:	f1a4 0080 	sub.w	r0, r4, #128	; 0x80
    2c6e:	bd38      	pop	{r3, r4, r5, pc}
    2c70:	00002bd1 	.word	0x00002bd1

00002c74 <__cxa_throw>:
    2c74:	b510      	push	{r4, lr}
    2c76:	b082      	sub	sp, #8
    2c78:	e9cd 2100 	strd	r2, r1, [sp]
    2c7c:	4604      	mov	r4, r0
    2c7e:	f7ff fc5d 	bl	253c <__cxa_get_globals>
    2c82:	4603      	mov	r3, r0
    2c84:	6840      	ldr	r0, [r0, #4]
    2c86:	9a00      	ldr	r2, [sp, #0]
    2c88:	9901      	ldr	r1, [sp, #4]
    2c8a:	3001      	adds	r0, #1
    2c8c:	6058      	str	r0, [r3, #4]
    2c8e:	4620      	mov	r0, r4
    2c90:	f7ff ffc4 	bl	2c1c <__cxa_init_primary_exception>
    2c94:	4604      	mov	r4, r0
    2c96:	2301      	movs	r3, #1
    2c98:	f844 3b28 	str.w	r3, [r4], #40
    2c9c:	4620      	mov	r0, r4
    2c9e:	f007 f973 	bl	9f88 <_Unwind_RaiseException>
    2ca2:	4620      	mov	r0, r4
    2ca4:	f006 fb5e 	bl	9364 <__cxa_begin_catch>
    2ca8:	f7ff ff6a 	bl	2b80 <std::terminate()>

00002cac <__cxa_rethrow>:
    2cac:	b510      	push	{r4, lr}
    2cae:	f7ff fc45 	bl	253c <__cxa_get_globals>
    2cb2:	e9d0 4200 	ldrd	r4, r2, [r0]
    2cb6:	3201      	adds	r2, #1
    2cb8:	6042      	str	r2, [r0, #4]
    2cba:	b164      	cbz	r4, 2cd6 <__cxa_rethrow+0x2a>
    2cbc:	f894 2020 	ldrb.w	r2, [r4, #32]
    2cc0:	2a47      	cmp	r2, #71	; 0x47
    2cc2:	d00a      	beq.n	2cda <__cxa_rethrow+0x2e>
    2cc4:	2200      	movs	r2, #0
    2cc6:	6002      	str	r2, [r0, #0]
    2cc8:	3420      	adds	r4, #32
    2cca:	4620      	mov	r0, r4
    2ccc:	f007 f980 	bl	9fd0 <_Unwind_Resume_or_Rethrow>
    2cd0:	4620      	mov	r0, r4
    2cd2:	f006 fb47 	bl	9364 <__cxa_begin_catch>
    2cd6:	f7ff ff53 	bl	2b80 <std::terminate()>
    2cda:	f894 2021 	ldrb.w	r2, [r4, #33]	; 0x21
    2cde:	2a4e      	cmp	r2, #78	; 0x4e
    2ce0:	d1f0      	bne.n	2cc4 <__cxa_rethrow+0x18>
    2ce2:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
    2ce6:	2a55      	cmp	r2, #85	; 0x55
    2ce8:	d1ec      	bne.n	2cc4 <__cxa_rethrow+0x18>
    2cea:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
    2cee:	2a43      	cmp	r2, #67	; 0x43
    2cf0:	d1e8      	bne.n	2cc4 <__cxa_rethrow+0x18>
    2cf2:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
    2cf6:	2a43      	cmp	r2, #67	; 0x43
    2cf8:	d1e4      	bne.n	2cc4 <__cxa_rethrow+0x18>
    2cfa:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
    2cfe:	2a2b      	cmp	r2, #43	; 0x2b
    2d00:	d1e0      	bne.n	2cc4 <__cxa_rethrow+0x18>
    2d02:	f894 2026 	ldrb.w	r2, [r4, #38]	; 0x26
    2d06:	2a2b      	cmp	r2, #43	; 0x2b
    2d08:	d1dc      	bne.n	2cc4 <__cxa_rethrow+0x18>
    2d0a:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
    2d0e:	2a01      	cmp	r2, #1
    2d10:	d8d8      	bhi.n	2cc4 <__cxa_rethrow+0x18>
    2d12:	6962      	ldr	r2, [r4, #20]
    2d14:	4252      	negs	r2, r2
    2d16:	6162      	str	r2, [r4, #20]
    2d18:	e7d6      	b.n	2cc8 <__cxa_rethrow+0x1c>
    2d1a:	bf00      	nop

00002d1c <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
    2d1c:	b510      	push	{r4, lr}
    2d1e:	4b03      	ldr	r3, [pc, #12]	; (2d2c <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
    2d20:	6003      	str	r3, [r0, #0]
    2d22:	4604      	mov	r4, r0
    2d24:	f000 fa56 	bl	31d4 <__cxxabiv1::__class_type_info::~__class_type_info()>
    2d28:	4620      	mov	r0, r4
    2d2a:	bd10      	pop	{r4, pc}
    2d2c:	20000800 	.word	0x20000800

00002d30 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
    2d30:	b510      	push	{r4, lr}
    2d32:	4b05      	ldr	r3, [pc, #20]	; (2d48 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x18>)
    2d34:	6003      	str	r3, [r0, #0]
    2d36:	4604      	mov	r4, r0
    2d38:	f000 fa4c 	bl	31d4 <__cxxabiv1::__class_type_info::~__class_type_info()>
    2d3c:	4620      	mov	r0, r4
    2d3e:	210c      	movs	r1, #12
    2d40:	f7fd fd0e 	bl	760 <operator delete(void*, unsigned int)>
    2d44:	4620      	mov	r0, r4
    2d46:	bd10      	pop	{r4, pc}
    2d48:	20000800 	.word	0x20000800

00002d4c <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
    2d4c:	b570      	push	{r4, r5, r6, lr}
    2d4e:	b082      	sub	sp, #8
    2d50:	4604      	mov	r4, r0
    2d52:	9e06      	ldr	r6, [sp, #24]
    2d54:	4296      	cmp	r6, r2
    2d56:	460d      	mov	r5, r1
    2d58:	d009      	beq.n	2d6e <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x22>
    2d5a:	68a0      	ldr	r0, [r4, #8]
    2d5c:	6804      	ldr	r4, [r0, #0]
    2d5e:	9606      	str	r6, [sp, #24]
    2d60:	6a24      	ldr	r4, [r4, #32]
    2d62:	4629      	mov	r1, r5
    2d64:	46a4      	mov	ip, r4
    2d66:	b002      	add	sp, #8
    2d68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    2d6c:	4760      	bx	ip
    2d6e:	4619      	mov	r1, r3
    2d70:	9201      	str	r2, [sp, #4]
    2d72:	9300      	str	r3, [sp, #0]
    2d74:	f000 f860 	bl	2e38 <std::type_info::operator==(std::type_info const&) const>
    2d78:	e9dd 3200 	ldrd	r3, r2, [sp]
    2d7c:	2800      	cmp	r0, #0
    2d7e:	d0ec      	beq.n	2d5a <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0xe>
    2d80:	2006      	movs	r0, #6
    2d82:	b002      	add	sp, #8
    2d84:	bd70      	pop	{r4, r5, r6, pc}
    2d86:	bf00      	nop

00002d88 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
    2d88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2d8c:	460c      	mov	r4, r1
    2d8e:	b081      	sub	sp, #4
    2d90:	4619      	mov	r1, r3
    2d92:	e9dd 690a 	ldrd	r6, r9, [sp, #40]	; 0x28
    2d96:	e9dd 870c 	ldrd	r8, r7, [sp, #48]	; 0x30
    2d9a:	469b      	mov	fp, r3
    2d9c:	4605      	mov	r5, r0
    2d9e:	4692      	mov	sl, r2
    2da0:	f000 f84a 	bl	2e38 <std::type_info::operator==(std::type_info const&) const>
    2da4:	b980      	cbnz	r0, 2dc8 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x40>
    2da6:	4546      	cmp	r6, r8
    2da8:	d022      	beq.n	2df0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x68>
    2daa:	68a8      	ldr	r0, [r5, #8]
    2dac:	4621      	mov	r1, r4
    2dae:	6804      	ldr	r4, [r0, #0]
    2db0:	e9cd 870c 	strd	r8, r7, [sp, #48]	; 0x30
    2db4:	e9cd 690a 	strd	r6, r9, [sp, #40]	; 0x28
    2db8:	69e4      	ldr	r4, [r4, #28]
    2dba:	465b      	mov	r3, fp
    2dbc:	4652      	mov	r2, sl
    2dbe:	46a4      	mov	ip, r4
    2dc0:	b001      	add	sp, #4
    2dc2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2dc6:	4760      	bx	ip
    2dc8:	2c00      	cmp	r4, #0
    2dca:	603e      	str	r6, [r7, #0]
    2dcc:	f887 a004 	strb.w	sl, [r7, #4]
    2dd0:	db09      	blt.n	2de6 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x5e>
    2dd2:	4426      	add	r6, r4
    2dd4:	45b0      	cmp	r8, r6
    2dd6:	bf0c      	ite	eq
    2dd8:	2606      	moveq	r6, #6
    2dda:	2601      	movne	r6, #1
    2ddc:	71be      	strb	r6, [r7, #6]
    2dde:	2000      	movs	r0, #0
    2de0:	b001      	add	sp, #4
    2de2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2de6:	3402      	adds	r4, #2
    2de8:	d1f9      	bne.n	2dde <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x56>
    2dea:	2301      	movs	r3, #1
    2dec:	71bb      	strb	r3, [r7, #6]
    2dee:	e7f6      	b.n	2dde <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x56>
    2df0:	4649      	mov	r1, r9
    2df2:	4628      	mov	r0, r5
    2df4:	f000 f820 	bl	2e38 <std::type_info::operator==(std::type_info const&) const>
    2df8:	2800      	cmp	r0, #0
    2dfa:	d0d6      	beq.n	2daa <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x22>
    2dfc:	f887 a005 	strb.w	sl, [r7, #5]
    2e00:	e7ed      	b.n	2dde <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x56>
    2e02:	bf00      	nop

00002e04 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
    2e04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    2e08:	4606      	mov	r6, r0
    2e0a:	460f      	mov	r7, r1
    2e0c:	4614      	mov	r4, r2
    2e0e:	461d      	mov	r5, r3
    2e10:	f000 fa1a 	bl	3248 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
    2e14:	b948      	cbnz	r0, 2e2a <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x26>
    2e16:	68b0      	ldr	r0, [r6, #8]
    2e18:	6801      	ldr	r1, [r0, #0]
    2e1a:	4622      	mov	r2, r4
    2e1c:	698c      	ldr	r4, [r1, #24]
    2e1e:	462b      	mov	r3, r5
    2e20:	4639      	mov	r1, r7
    2e22:	46a4      	mov	ip, r4
    2e24:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    2e28:	4760      	bx	ip
    2e2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2e2e:	bf00      	nop

00002e30 <std::type_info::~type_info()>:
    2e30:	4770      	bx	lr
    2e32:	bf00      	nop

00002e34 <std::type_info::__is_pointer_p() const>:
    2e34:	2000      	movs	r0, #0
    2e36:	4770      	bx	lr

00002e38 <std::type_info::operator==(std::type_info const&) const>:
    2e38:	4281      	cmp	r1, r0
    2e3a:	d011      	beq.n	2e60 <std::type_info::operator==(std::type_info const&) const+0x28>
    2e3c:	b508      	push	{r3, lr}
    2e3e:	6840      	ldr	r0, [r0, #4]
    2e40:	7803      	ldrb	r3, [r0, #0]
    2e42:	2b2a      	cmp	r3, #42	; 0x2a
    2e44:	d00a      	beq.n	2e5c <std::type_info::operator==(std::type_info const&) const+0x24>
    2e46:	6849      	ldr	r1, [r1, #4]
    2e48:	780b      	ldrb	r3, [r1, #0]
    2e4a:	2b2a      	cmp	r3, #42	; 0x2a
    2e4c:	bf08      	it	eq
    2e4e:	3101      	addeq	r1, #1
    2e50:	f009 ff7a 	bl	cd48 <strcmp>
    2e54:	fab0 f080 	clz	r0, r0
    2e58:	0940      	lsrs	r0, r0, #5
    2e5a:	bd08      	pop	{r3, pc}
    2e5c:	2000      	movs	r0, #0
    2e5e:	bd08      	pop	{r3, pc}
    2e60:	2001      	movs	r0, #1
    2e62:	4770      	bx	lr

00002e64 <__gnu_cxx::__verbose_terminate_handler()>:
    2e64:	b570      	push	{r4, r5, r6, lr}
    2e66:	4b3b      	ldr	r3, [pc, #236]	; (2f54 <__gnu_cxx::__verbose_terminate_handler()+0xf0>)
    2e68:	781a      	ldrb	r2, [r3, #0]
    2e6a:	b082      	sub	sp, #8
    2e6c:	2a00      	cmp	r2, #0
    2e6e:	d141      	bne.n	2ef4 <__gnu_cxx::__verbose_terminate_handler()+0x90>
    2e70:	2401      	movs	r4, #1
    2e72:	701c      	strb	r4, [r3, #0]
    2e74:	f006 fafa 	bl	946c <__cxa_current_exception_type>
    2e78:	2800      	cmp	r0, #0
    2e7a:	d031      	beq.n	2ee0 <__gnu_cxx::__verbose_terminate_handler()+0x7c>
    2e7c:	6844      	ldr	r4, [r0, #4]
    2e7e:	4d36      	ldr	r5, [pc, #216]	; (2f58 <__gnu_cxx::__verbose_terminate_handler()+0xf4>)
    2e80:	7823      	ldrb	r3, [r4, #0]
    2e82:	2b2a      	cmp	r3, #42	; 0x2a
    2e84:	bf08      	it	eq
    2e86:	3401      	addeq	r4, #1
    2e88:	2200      	movs	r2, #0
    2e8a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    2e8e:	4611      	mov	r1, r2
    2e90:	ab01      	add	r3, sp, #4
    2e92:	9001      	str	r0, [sp, #4]
    2e94:	4620      	mov	r0, r4
    2e96:	f006 f963 	bl	9160 <__cxa_demangle>
    2e9a:	682b      	ldr	r3, [r5, #0]
    2e9c:	2230      	movs	r2, #48	; 0x30
    2e9e:	68db      	ldr	r3, [r3, #12]
    2ea0:	4606      	mov	r6, r0
    2ea2:	2101      	movs	r1, #1
    2ea4:	482d      	ldr	r0, [pc, #180]	; (2f5c <__gnu_cxx::__verbose_terminate_handler()+0xf8>)
    2ea6:	f007 fd51 	bl	a94c <fwrite>
    2eaa:	9b01      	ldr	r3, [sp, #4]
    2eac:	b193      	cbz	r3, 2ed4 <__gnu_cxx::__verbose_terminate_handler()+0x70>
    2eae:	682b      	ldr	r3, [r5, #0]
    2eb0:	4620      	mov	r0, r4
    2eb2:	68d9      	ldr	r1, [r3, #12]
    2eb4:	f007 fb4e 	bl	a554 <fputs>
    2eb8:	682b      	ldr	r3, [r5, #0]
    2eba:	4829      	ldr	r0, [pc, #164]	; (2f60 <__gnu_cxx::__verbose_terminate_handler()+0xfc>)
    2ebc:	68db      	ldr	r3, [r3, #12]
    2ebe:	2202      	movs	r2, #2
    2ec0:	2101      	movs	r1, #1
    2ec2:	f007 fd43 	bl	a94c <fwrite>
    2ec6:	9b01      	ldr	r3, [sp, #4]
    2ec8:	b913      	cbnz	r3, 2ed0 <__gnu_cxx::__verbose_terminate_handler()+0x6c>
    2eca:	4630      	mov	r0, r6
    2ecc:	f009 fafe 	bl	c4cc <free>
    2ed0:	f7ff feec 	bl	2cac <__cxa_rethrow>
    2ed4:	682b      	ldr	r3, [r5, #0]
    2ed6:	4630      	mov	r0, r6
    2ed8:	68d9      	ldr	r1, [r3, #12]
    2eda:	f007 fb3b 	bl	a554 <fputs>
    2ede:	e7eb      	b.n	2eb8 <__gnu_cxx::__verbose_terminate_handler()+0x54>
    2ee0:	4b1d      	ldr	r3, [pc, #116]	; (2f58 <__gnu_cxx::__verbose_terminate_handler()+0xf4>)
    2ee2:	4820      	ldr	r0, [pc, #128]	; (2f64 <__gnu_cxx::__verbose_terminate_handler()+0x100>)
    2ee4:	681b      	ldr	r3, [r3, #0]
    2ee6:	222d      	movs	r2, #45	; 0x2d
    2ee8:	68db      	ldr	r3, [r3, #12]
    2eea:	4621      	mov	r1, r4
    2eec:	f007 fd2e 	bl	a94c <fwrite>
    2ef0:	f7fd fd5c 	bl	9ac <abort>
    2ef4:	4b18      	ldr	r3, [pc, #96]	; (2f58 <__gnu_cxx::__verbose_terminate_handler()+0xf4>)
    2ef6:	481c      	ldr	r0, [pc, #112]	; (2f68 <__gnu_cxx::__verbose_terminate_handler()+0x104>)
    2ef8:	681b      	ldr	r3, [r3, #0]
    2efa:	221d      	movs	r2, #29
    2efc:	68db      	ldr	r3, [r3, #12]
    2efe:	2101      	movs	r1, #1
    2f00:	f007 fd24 	bl	a94c <fwrite>
    2f04:	f7fd fd52 	bl	9ac <abort>
    2f08:	2901      	cmp	r1, #1
    2f0a:	460c      	mov	r4, r1
    2f0c:	d119      	bne.n	2f42 <__gnu_cxx::__verbose_terminate_handler()+0xde>
    2f0e:	f006 fa29 	bl	9364 <__cxa_begin_catch>
    2f12:	6803      	ldr	r3, [r0, #0]
    2f14:	689b      	ldr	r3, [r3, #8]
    2f16:	4798      	blx	r3
    2f18:	682b      	ldr	r3, [r5, #0]
    2f1a:	4621      	mov	r1, r4
    2f1c:	68db      	ldr	r3, [r3, #12]
    2f1e:	4604      	mov	r4, r0
    2f20:	220b      	movs	r2, #11
    2f22:	4812      	ldr	r0, [pc, #72]	; (2f6c <__gnu_cxx::__verbose_terminate_handler()+0x108>)
    2f24:	f007 fd12 	bl	a94c <fwrite>
    2f28:	682b      	ldr	r3, [r5, #0]
    2f2a:	4620      	mov	r0, r4
    2f2c:	68d9      	ldr	r1, [r3, #12]
    2f2e:	f007 fb11 	bl	a554 <fputs>
    2f32:	682b      	ldr	r3, [r5, #0]
    2f34:	200a      	movs	r0, #10
    2f36:	68d9      	ldr	r1, [r3, #12]
    2f38:	f007 fa96 	bl	a468 <fputc>
    2f3c:	f006 fa50 	bl	93e0 <__cxa_end_catch>
    2f40:	e7d6      	b.n	2ef0 <__gnu_cxx::__verbose_terminate_handler()+0x8c>
    2f42:	f006 fa0f 	bl	9364 <__cxa_begin_catch>
    2f46:	f006 fa4b 	bl	93e0 <__cxa_end_catch>
    2f4a:	e7d1      	b.n	2ef0 <__gnu_cxx::__verbose_terminate_handler()+0x8c>
    2f4c:	f006 fa48 	bl	93e0 <__cxa_end_catch>
    2f50:	f7ff fa18 	bl	2384 <__cxa_end_cleanup>
    2f54:	200030b1 	.word	0x200030b1
    2f58:	200026f4 	.word	0x200026f4
    2f5c:	2000054c 	.word	0x2000054c
    2f60:	20000580 	.word	0x20000580
    2f64:	20000584 	.word	0x20000584
    2f68:	2000052c 	.word	0x2000052c
    2f6c:	200005b4 	.word	0x200005b4

00002f70 <std::logic_error::what() const>:
    2f70:	6840      	ldr	r0, [r0, #4]
    2f72:	4770      	bx	lr

00002f74 <std::logic_error::~logic_error()>:
    2f74:	b510      	push	{r4, lr}
    2f76:	6843      	ldr	r3, [r0, #4]
    2f78:	4a0c      	ldr	r2, [pc, #48]	; (2fac <std::logic_error::~logic_error()+0x38>)
    2f7a:	490d      	ldr	r1, [pc, #52]	; (2fb0 <std::logic_error::~logic_error()+0x3c>)
    2f7c:	4604      	mov	r4, r0
    2f7e:	f1a3 000c 	sub.w	r0, r3, #12
    2f82:	4290      	cmp	r0, r2
    2f84:	b082      	sub	sp, #8
    2f86:	6021      	str	r1, [r4, #0]
    2f88:	d105      	bne.n	2f96 <std::logic_error::~logic_error()+0x22>
    2f8a:	4620      	mov	r0, r4
    2f8c:	f7ff fac2 	bl	2514 <std::exception::~exception()>
    2f90:	4620      	mov	r0, r4
    2f92:	b002      	add	sp, #8
    2f94:	bd10      	pop	{r4, pc}
    2f96:	f853 2c04 	ldr.w	r2, [r3, #-4]
    2f9a:	1e51      	subs	r1, r2, #1
    2f9c:	2a00      	cmp	r2, #0
    2f9e:	f843 1c04 	str.w	r1, [r3, #-4]
    2fa2:	dcf2      	bgt.n	2f8a <std::logic_error::~logic_error()+0x16>
    2fa4:	a901      	add	r1, sp, #4
    2fa6:	f000 f8f3 	bl	3190 <std::string::_Rep::_M_destroy(std::allocator<char> const&)>
    2faa:	e7ee      	b.n	2f8a <std::logic_error::~logic_error()+0x16>
    2fac:	20002cd4 	.word	0x20002cd4
    2fb0:	2000082c 	.word	0x2000082c

00002fb4 <std::length_error::~length_error()>:
    2fb4:	b510      	push	{r4, lr}
    2fb6:	6843      	ldr	r3, [r0, #4]
    2fb8:	4a0c      	ldr	r2, [pc, #48]	; (2fec <std::length_error::~length_error()+0x38>)
    2fba:	490d      	ldr	r1, [pc, #52]	; (2ff0 <std::length_error::~length_error()+0x3c>)
    2fbc:	4604      	mov	r4, r0
    2fbe:	f1a3 000c 	sub.w	r0, r3, #12
    2fc2:	4290      	cmp	r0, r2
    2fc4:	b082      	sub	sp, #8
    2fc6:	6021      	str	r1, [r4, #0]
    2fc8:	d105      	bne.n	2fd6 <std::length_error::~length_error()+0x22>
    2fca:	4620      	mov	r0, r4
    2fcc:	f7ff faa2 	bl	2514 <std::exception::~exception()>
    2fd0:	4620      	mov	r0, r4
    2fd2:	b002      	add	sp, #8
    2fd4:	bd10      	pop	{r4, pc}
    2fd6:	f853 2c04 	ldr.w	r2, [r3, #-4]
    2fda:	1e51      	subs	r1, r2, #1
    2fdc:	2a00      	cmp	r2, #0
    2fde:	f843 1c04 	str.w	r1, [r3, #-4]
    2fe2:	dcf2      	bgt.n	2fca <std::length_error::~length_error()+0x16>
    2fe4:	a901      	add	r1, sp, #4
    2fe6:	f000 f8d3 	bl	3190 <std::string::_Rep::_M_destroy(std::allocator<char> const&)>
    2fea:	e7ee      	b.n	2fca <std::length_error::~length_error()+0x16>
    2fec:	20002cd4 	.word	0x20002cd4
    2ff0:	2000082c 	.word	0x2000082c

00002ff4 <std::logic_error::~logic_error()>:
    2ff4:	b510      	push	{r4, lr}
    2ff6:	6843      	ldr	r3, [r0, #4]
    2ff8:	4a0e      	ldr	r2, [pc, #56]	; (3034 <std::logic_error::~logic_error()+0x40>)
    2ffa:	490f      	ldr	r1, [pc, #60]	; (3038 <std::logic_error::~logic_error()+0x44>)
    2ffc:	4604      	mov	r4, r0
    2ffe:	f1a3 000c 	sub.w	r0, r3, #12
    3002:	4290      	cmp	r0, r2
    3004:	b082      	sub	sp, #8
    3006:	6021      	str	r1, [r4, #0]
    3008:	d108      	bne.n	301c <std::logic_error::~logic_error()+0x28>
    300a:	4620      	mov	r0, r4
    300c:	f7ff fa82 	bl	2514 <std::exception::~exception()>
    3010:	4620      	mov	r0, r4
    3012:	f7fd fba3 	bl	75c <operator delete(void*)>
    3016:	4620      	mov	r0, r4
    3018:	b002      	add	sp, #8
    301a:	bd10      	pop	{r4, pc}
    301c:	f853 2c04 	ldr.w	r2, [r3, #-4]
    3020:	1e51      	subs	r1, r2, #1
    3022:	2a00      	cmp	r2, #0
    3024:	f843 1c04 	str.w	r1, [r3, #-4]
    3028:	dcef      	bgt.n	300a <std::logic_error::~logic_error()+0x16>
    302a:	a901      	add	r1, sp, #4
    302c:	f000 f8b0 	bl	3190 <std::string::_Rep::_M_destroy(std::allocator<char> const&)>
    3030:	e7eb      	b.n	300a <std::logic_error::~logic_error()+0x16>
    3032:	bf00      	nop
    3034:	20002cd4 	.word	0x20002cd4
    3038:	2000082c 	.word	0x2000082c

0000303c <std::length_error::~length_error()>:
    303c:	b510      	push	{r4, lr}
    303e:	6843      	ldr	r3, [r0, #4]
    3040:	4a0e      	ldr	r2, [pc, #56]	; (307c <std::length_error::~length_error()+0x40>)
    3042:	490f      	ldr	r1, [pc, #60]	; (3080 <std::length_error::~length_error()+0x44>)
    3044:	4604      	mov	r4, r0
    3046:	f1a3 000c 	sub.w	r0, r3, #12
    304a:	4290      	cmp	r0, r2
    304c:	b082      	sub	sp, #8
    304e:	6021      	str	r1, [r4, #0]
    3050:	d108      	bne.n	3064 <std::length_error::~length_error()+0x28>
    3052:	4620      	mov	r0, r4
    3054:	f7ff fa5e 	bl	2514 <std::exception::~exception()>
    3058:	4620      	mov	r0, r4
    305a:	f7fd fb7f 	bl	75c <operator delete(void*)>
    305e:	4620      	mov	r0, r4
    3060:	b002      	add	sp, #8
    3062:	bd10      	pop	{r4, pc}
    3064:	f853 2c04 	ldr.w	r2, [r3, #-4]
    3068:	1e51      	subs	r1, r2, #1
    306a:	2a00      	cmp	r2, #0
    306c:	f843 1c04 	str.w	r1, [r3, #-4]
    3070:	dcef      	bgt.n	3052 <std::length_error::~length_error()+0x16>
    3072:	a901      	add	r1, sp, #4
    3074:	f000 f88c 	bl	3190 <std::string::_Rep::_M_destroy(std::allocator<char> const&)>
    3078:	e7eb      	b.n	3052 <std::length_error::~length_error()+0x16>
    307a:	bf00      	nop
    307c:	20002cd4 	.word	0x20002cd4
    3080:	2000082c 	.word	0x2000082c

00003084 <std::logic_error::logic_error(char const*)>:
    3084:	b5f0      	push	{r4, r5, r6, r7, lr}
    3086:	4b1b      	ldr	r3, [pc, #108]	; (30f4 <std::logic_error::logic_error(char const*)+0x70>)
    3088:	6003      	str	r3, [r0, #0]
    308a:	b083      	sub	sp, #12
    308c:	4604      	mov	r4, r0
    308e:	b349      	cbz	r1, 30e4 <std::logic_error::logic_error(char const*)+0x60>
    3090:	4608      	mov	r0, r1
    3092:	460d      	mov	r5, r1
    3094:	f00b fdf4 	bl	ec80 <strlen>
    3098:	4607      	mov	r7, r0
    309a:	b1a8      	cbz	r0, 30c8 <std::logic_error::logic_error(char const*)+0x44>
    309c:	aa01      	add	r2, sp, #4
    309e:	2100      	movs	r1, #0
    30a0:	f000 f83a 	bl	3118 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)>
    30a4:	2f01      	cmp	r7, #1
    30a6:	4606      	mov	r6, r0
    30a8:	f100 030c 	add.w	r3, r0, #12
    30ac:	d011      	beq.n	30d2 <std::logic_error::logic_error(char const*)+0x4e>
    30ae:	4618      	mov	r0, r3
    30b0:	4629      	mov	r1, r5
    30b2:	463a      	mov	r2, r7
    30b4:	f7fd fab6 	bl	624 <memcpy>
    30b8:	4603      	mov	r3, r0
    30ba:	4a0f      	ldr	r2, [pc, #60]	; (30f8 <std::logic_error::logic_error(char const*)+0x74>)
    30bc:	4296      	cmp	r6, r2
    30be:	d10b      	bne.n	30d8 <std::logic_error::logic_error(char const*)+0x54>
    30c0:	4620      	mov	r0, r4
    30c2:	6063      	str	r3, [r4, #4]
    30c4:	b003      	add	sp, #12
    30c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    30c8:	4b0c      	ldr	r3, [pc, #48]	; (30fc <std::logic_error::logic_error(char const*)+0x78>)
    30ca:	6063      	str	r3, [r4, #4]
    30cc:	4620      	mov	r0, r4
    30ce:	b003      	add	sp, #12
    30d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    30d2:	782a      	ldrb	r2, [r5, #0]
    30d4:	7302      	strb	r2, [r0, #12]
    30d6:	e7f0      	b.n	30ba <std::logic_error::logic_error(char const*)+0x36>
    30d8:	2200      	movs	r2, #0
    30da:	60b2      	str	r2, [r6, #8]
    30dc:	6037      	str	r7, [r6, #0]
    30de:	443e      	add	r6, r7
    30e0:	7332      	strb	r2, [r6, #12]
    30e2:	e7ed      	b.n	30c0 <std::logic_error::logic_error(char const*)+0x3c>
    30e4:	4806      	ldr	r0, [pc, #24]	; (3100 <std::logic_error::logic_error(char const*)+0x7c>)
    30e6:	f7ff f855 	bl	2194 <std::__throw_logic_error(char const*)>
    30ea:	4620      	mov	r0, r4
    30ec:	f7ff fa12 	bl	2514 <std::exception::~exception()>
    30f0:	f7ff f948 	bl	2384 <__cxa_end_cleanup>
    30f4:	2000082c 	.word	0x2000082c
    30f8:	20002cd4 	.word	0x20002cd4
    30fc:	20002ce0 	.word	0x20002ce0
    3100:	200005fc 	.word	0x200005fc

00003104 <std::length_error::length_error(char const*)>:
    3104:	b510      	push	{r4, lr}
    3106:	4604      	mov	r4, r0
    3108:	f7ff ffbc 	bl	3084 <std::logic_error::logic_error(char const*)>
    310c:	4b01      	ldr	r3, [pc, #4]	; (3114 <std::length_error::length_error(char const*)+0x10>)
    310e:	6023      	str	r3, [r4, #0]
    3110:	4620      	mov	r0, r4
    3112:	bd10      	pop	{r4, pc}
    3114:	20000840 	.word	0x20000840

00003118 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)>:
    3118:	4b1b      	ldr	r3, [pc, #108]	; (3188 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x70>)
    311a:	4298      	cmp	r0, r3
    311c:	b510      	push	{r4, lr}
    311e:	d830      	bhi.n	3182 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x6a>
    3120:	4288      	cmp	r0, r1
    3122:	4604      	mov	r4, r0
    3124:	d91c      	bls.n	3160 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x48>
    3126:	004a      	lsls	r2, r1, #1
    3128:	4290      	cmp	r0, r2
    312a:	bf38      	it	cc
    312c:	4614      	movcc	r4, r2
    312e:	f104 021d 	add.w	r2, r4, #29
    3132:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
    3136:	f104 000d 	add.w	r0, r4, #13
    313a:	d918      	bls.n	316e <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x56>
    313c:	428c      	cmp	r4, r1
    313e:	d916      	bls.n	316e <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x56>
    3140:	f3c2 020b 	ubfx	r2, r2, #0, #12
    3144:	f504 5480 	add.w	r4, r4, #4096	; 0x1000
    3148:	1aa4      	subs	r4, r4, r2
    314a:	429c      	cmp	r4, r3
    314c:	bf28      	it	cs
    314e:	461c      	movcs	r4, r3
    3150:	f104 000d 	add.w	r0, r4, #13
    3154:	f7fd fb00 	bl	758 <operator new(unsigned int)>
    3158:	2200      	movs	r2, #0
    315a:	e9c0 4201 	strd	r4, r2, [r0, #4]
    315e:	bd10      	pop	{r4, pc}
    3160:	f100 031d 	add.w	r3, r0, #29
    3164:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    3168:	f100 000d 	add.w	r0, r0, #13
    316c:	d901      	bls.n	3172 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x5a>
    316e:	2800      	cmp	r0, #0
    3170:	db05      	blt.n	317e <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x66>
    3172:	f7fd faf1 	bl	758 <operator new(unsigned int)>
    3176:	2200      	movs	r2, #0
    3178:	e9c0 4201 	strd	r4, r2, [r0, #4]
    317c:	bd10      	pop	{r4, pc}
    317e:	f7fe fff9 	bl	2174 <std::__throw_bad_alloc()>
    3182:	4802      	ldr	r0, [pc, #8]	; (318c <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x74>)
    3184:	f7ff f81e 	bl	21c4 <std::__throw_length_error(char const*)>
    3188:	3ffffffc 	.word	0x3ffffffc
    318c:	200005e4 	.word	0x200005e4

00003190 <std::string::_Rep::_M_destroy(std::allocator<char> const&)>:
    3190:	f7fd bae4 	b.w	75c <operator delete(void*)>

00003194 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
    3194:	b570      	push	{r4, r5, r6, lr}
    3196:	6803      	ldr	r3, [r0, #0]
    3198:	b084      	sub	sp, #16
    319a:	2400      	movs	r4, #0
    319c:	699e      	ldr	r6, [r3, #24]
    319e:	9403      	str	r4, [sp, #12]
    31a0:	2310      	movs	r3, #16
    31a2:	4615      	mov	r5, r2
    31a4:	9302      	str	r3, [sp, #8]
    31a6:	e9cd 4400 	strd	r4, r4, [sp]
    31aa:	466b      	mov	r3, sp
    31ac:	6812      	ldr	r2, [r2, #0]
    31ae:	47b0      	blx	r6
    31b0:	f89d 3004 	ldrb.w	r3, [sp, #4]
    31b4:	f003 0306 	and.w	r3, r3, #6
    31b8:	2b06      	cmp	r3, #6
    31ba:	bf03      	ittte	eq
    31bc:	9b00      	ldreq	r3, [sp, #0]
    31be:	602b      	streq	r3, [r5, #0]
    31c0:	2001      	moveq	r0, #1
    31c2:	4620      	movne	r0, r4
    31c4:	b004      	add	sp, #16
    31c6:	bd70      	pop	{r4, r5, r6, pc}

000031c8 <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
    31c8:	9800      	ldr	r0, [sp, #0]
    31ca:	4290      	cmp	r0, r2
    31cc:	bf14      	ite	ne
    31ce:	2001      	movne	r0, #1
    31d0:	2006      	moveq	r0, #6
    31d2:	4770      	bx	lr

000031d4 <__cxxabiv1::__class_type_info::~__class_type_info()>:
    31d4:	b510      	push	{r4, lr}
    31d6:	4b03      	ldr	r3, [pc, #12]	; (31e4 <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
    31d8:	6003      	str	r3, [r0, #0]
    31da:	4604      	mov	r4, r0
    31dc:	f7ff fe28 	bl	2e30 <std::type_info::~type_info()>
    31e0:	4620      	mov	r0, r4
    31e2:	bd10      	pop	{r4, pc}
    31e4:	200007d4 	.word	0x200007d4

000031e8 <__cxxabiv1::__class_type_info::~__class_type_info()>:
    31e8:	b510      	push	{r4, lr}
    31ea:	4b05      	ldr	r3, [pc, #20]	; (3200 <__cxxabiv1::__class_type_info::~__class_type_info()+0x18>)
    31ec:	6003      	str	r3, [r0, #0]
    31ee:	4604      	mov	r4, r0
    31f0:	f7ff fe1e 	bl	2e30 <std::type_info::~type_info()>
    31f4:	4620      	mov	r0, r4
    31f6:	2108      	movs	r1, #8
    31f8:	f7fd fab2 	bl	760 <operator delete(void*, unsigned int)>
    31fc:	4620      	mov	r0, r4
    31fe:	bd10      	pop	{r4, pc}
    3200:	200007d4 	.word	0x200007d4

00003204 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
    3204:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3208:	9f06      	ldr	r7, [sp, #24]
    320a:	9908      	ldr	r1, [sp, #32]
    320c:	9e09      	ldr	r6, [sp, #36]	; 0x24
    320e:	428f      	cmp	r7, r1
    3210:	4604      	mov	r4, r0
    3212:	4690      	mov	r8, r2
    3214:	461d      	mov	r5, r3
    3216:	d00c      	beq.n	3232 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
    3218:	4629      	mov	r1, r5
    321a:	4620      	mov	r0, r4
    321c:	f7ff fe0c 	bl	2e38 <std::type_info::operator==(std::type_info const&) const>
    3220:	b120      	cbz	r0, 322c <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x28>
    3222:	2301      	movs	r3, #1
    3224:	6037      	str	r7, [r6, #0]
    3226:	f886 8004 	strb.w	r8, [r6, #4]
    322a:	71b3      	strb	r3, [r6, #6]
    322c:	2000      	movs	r0, #0
    322e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3232:	9907      	ldr	r1, [sp, #28]
    3234:	f7ff fe00 	bl	2e38 <std::type_info::operator==(std::type_info const&) const>
    3238:	2800      	cmp	r0, #0
    323a:	d0ed      	beq.n	3218 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x14>
    323c:	f886 8005 	strb.w	r8, [r6, #5]
    3240:	2000      	movs	r0, #0
    3242:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3246:	bf00      	nop

00003248 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
    3248:	b538      	push	{r3, r4, r5, lr}
    324a:	4615      	mov	r5, r2
    324c:	461c      	mov	r4, r3
    324e:	f7ff fdf3 	bl	2e38 <std::type_info::operator==(std::type_info const&) const>
    3252:	b900      	cbnz	r0, 3256 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe>
    3254:	bd38      	pop	{r3, r4, r5, pc}
    3256:	2208      	movs	r2, #8
    3258:	2306      	movs	r3, #6
    325a:	6025      	str	r5, [r4, #0]
    325c:	60e2      	str	r2, [r4, #12]
    325e:	7123      	strb	r3, [r4, #4]
    3260:	bd38      	pop	{r3, r4, r5, pc}
    3262:	bf00      	nop

00003264 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
    3264:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3268:	4606      	mov	r6, r0
    326a:	4617      	mov	r7, r2
    326c:	461d      	mov	r5, r3
    326e:	460c      	mov	r4, r1
    3270:	f7ff fde2 	bl	2e38 <std::type_info::operator==(std::type_info const&) const>
    3274:	b948      	cbnz	r0, 328a <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
    3276:	2d03      	cmp	r5, #3
    3278:	d807      	bhi.n	328a <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
    327a:	6823      	ldr	r3, [r4, #0]
    327c:	463a      	mov	r2, r7
    327e:	4631      	mov	r1, r6
    3280:	4620      	mov	r0, r4
    3282:	695b      	ldr	r3, [r3, #20]
    3284:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    3288:	4718      	bx	r3
    328a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    328e:	bf00      	nop

00003290 <d_make_comp>:
    3290:	2931      	cmp	r1, #49	; 0x31
    3292:	b570      	push	{r4, r5, r6, lr}
    3294:	4686      	mov	lr, r0
    3296:	d845      	bhi.n	3324 <d_make_comp+0x94>
    3298:	2928      	cmp	r1, #40	; 0x28
    329a:	d82a      	bhi.n	32f2 <d_make_comp+0x62>
    329c:	290a      	cmp	r1, #10
    329e:	d920      	bls.n	32e2 <d_make_comp+0x52>
    32a0:	f1a1 0c0b 	sub.w	ip, r1, #11
    32a4:	4c32      	ldr	r4, [pc, #200]	; (3370 <d_make_comp+0xe0>)
    32a6:	fa5f fc8c 	uxtb.w	ip, ip
    32aa:	2001      	movs	r0, #1
    32ac:	fa00 f00c 	lsl.w	r0, r0, ip
    32b0:	4004      	ands	r4, r0
    32b2:	2c00      	cmp	r4, #0
    32b4:	d04d      	beq.n	3352 <d_make_comp+0xc2>
    32b6:	b1d2      	cbz	r2, 32ee <d_make_comp+0x5e>
    32b8:	e9de 4005 	ldrd	r4, r0, [lr, #20]
    32bc:	4284      	cmp	r4, r0
    32be:	da16      	bge.n	32ee <d_make_comp+0x5e>
    32c0:	f8de 5010 	ldr.w	r5, [lr, #16]
    32c4:	eb04 0c84 	add.w	ip, r4, r4, lsl #2
    32c8:	eb05 008c 	add.w	r0, r5, ip, lsl #2
    32cc:	3401      	adds	r4, #1
    32ce:	2600      	movs	r6, #0
    32d0:	e9c0 6601 	strd	r6, r6, [r0, #4]
    32d4:	f8ce 4014 	str.w	r4, [lr, #20]
    32d8:	f805 102c 	strb.w	r1, [r5, ip, lsl #2]
    32dc:	e9c0 2303 	strd	r2, r3, [r0, #12]
    32e0:	bd70      	pop	{r4, r5, r6, pc}
    32e2:	2904      	cmp	r1, #4
    32e4:	d930      	bls.n	3348 <d_make_comp+0xb8>
    32e6:	f1a1 0009 	sub.w	r0, r1, #9
    32ea:	2801      	cmp	r0, #1
    32ec:	d9e3      	bls.n	32b6 <d_make_comp+0x26>
    32ee:	2000      	movs	r0, #0
    32f0:	bd70      	pop	{r4, r5, r6, pc}
    32f2:	f1a1 0029 	sub.w	r0, r1, #41	; 0x29
    32f6:	2808      	cmp	r0, #8
    32f8:	d8f9      	bhi.n	32ee <d_make_comp+0x5e>
    32fa:	a401      	add	r4, pc, #4	; (adr r4, 3300 <d_make_comp+0x70>)
    32fc:	f854 f020 	ldr.w	pc, [r4, r0, lsl #2]
    3300:	000032b9 	.word	0x000032b9
    3304:	0000334d 	.word	0x0000334d
    3308:	00003349 	.word	0x00003349
    330c:	000032ef 	.word	0x000032ef
    3310:	00003349 	.word	0x00003349
    3314:	000032b9 	.word	0x000032b9
    3318:	000032b9 	.word	0x000032b9
    331c:	000032b7 	.word	0x000032b7
    3320:	0000334d 	.word	0x0000334d
    3324:	f1a1 0034 	sub.w	r0, r1, #52	; 0x34
    3328:	b2c0      	uxtb	r0, r0
    332a:	281d      	cmp	r0, #29
    332c:	d8df      	bhi.n	32ee <d_make_comp+0x5e>
    332e:	4c11      	ldr	r4, [pc, #68]	; (3374 <d_make_comp+0xe4>)
    3330:	f04f 0c01 	mov.w	ip, #1
    3334:	fa0c fc00 	lsl.w	ip, ip, r0
    3338:	ea0c 0404 	and.w	r4, ip, r4
    333c:	2c00      	cmp	r4, #0
    333e:	d1ba      	bne.n	32b6 <d_make_comp+0x26>
    3340:	480d      	ldr	r0, [pc, #52]	; (3378 <d_make_comp+0xe8>)
    3342:	ea0c 0000 	and.w	r0, ip, r0
    3346:	b170      	cbz	r0, 3366 <d_make_comp+0xd6>
    3348:	2a00      	cmp	r2, #0
    334a:	d0d0      	beq.n	32ee <d_make_comp+0x5e>
    334c:	2b00      	cmp	r3, #0
    334e:	d1b3      	bne.n	32b8 <d_make_comp+0x28>
    3350:	e7cd      	b.n	32ee <d_make_comp+0x5e>
    3352:	f410 1f7f 	tst.w	r0, #4177920	; 0x3fc000
    3356:	d1af      	bne.n	32b8 <d_make_comp+0x28>
    3358:	4c08      	ldr	r4, [pc, #32]	; (337c <d_make_comp+0xec>)
    335a:	4004      	ands	r4, r0
    335c:	2c00      	cmp	r4, #0
    335e:	d0c6      	beq.n	32ee <d_make_comp+0x5e>
    3360:	2a00      	cmp	r2, #0
    3362:	d1f3      	bne.n	334c <d_make_comp+0xbc>
    3364:	e7c3      	b.n	32ee <d_make_comp+0x5e>
    3366:	f01c 5c50 	ands.w	ip, ip, #872415232	; 0x34000000
    336a:	d0c0      	beq.n	32ee <d_make_comp+0x5e>
    336c:	e7a4      	b.n	32b8 <d_make_comp+0x28>
    336e:	bf00      	nop
    3370:	2f801ffe 	.word	0x2f801ffe
    3374:	01c71107 	.word	0x01c71107
    3378:	0a002ef8 	.word	0x0a002ef8
    337c:	00400001 	.word	0x00400001

00003380 <d_number>:
    3380:	b5f0      	push	{r4, r5, r6, r7, lr}
    3382:	68c2      	ldr	r2, [r0, #12]
    3384:	7811      	ldrb	r1, [r2, #0]
    3386:	296e      	cmp	r1, #110	; 0x6e
    3388:	4686      	mov	lr, r0
    338a:	d025      	beq.n	33d8 <d_number+0x58>
    338c:	3930      	subs	r1, #48	; 0x30
    338e:	b2cb      	uxtb	r3, r1
    3390:	2b09      	cmp	r3, #9
    3392:	d82b      	bhi.n	33ec <d_number+0x6c>
    3394:	2600      	movs	r6, #0
    3396:	4d16      	ldr	r5, [pc, #88]	; (33f0 <d_number+0x70>)
    3398:	2000      	movs	r0, #0
    339a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
    339e:	e002      	b.n	33a6 <d_number+0x26>
    33a0:	ebb0 0fd3 	cmp.w	r0, r3, lsr #3
    33a4:	dc15      	bgt.n	33d2 <d_number+0x52>
    33a6:	3201      	adds	r2, #1
    33a8:	f8ce 200c 	str.w	r2, [lr, #12]
    33ac:	7813      	ldrb	r3, [r2, #0]
    33ae:	3b30      	subs	r3, #48	; 0x30
    33b0:	fa5f fc83 	uxtb.w	ip, r3
    33b4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
    33b8:	eb01 0040 	add.w	r0, r1, r0, lsl #1
    33bc:	f1bc 0f09 	cmp.w	ip, #9
    33c0:	4619      	mov	r1, r3
    33c2:	eba4 0303 	sub.w	r3, r4, r3
    33c6:	fba5 7303 	umull	r7, r3, r5, r3
    33ca:	d9e9      	bls.n	33a0 <d_number+0x20>
    33cc:	b106      	cbz	r6, 33d0 <d_number+0x50>
    33ce:	4240      	negs	r0, r0
    33d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    33d2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    33d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    33d8:	1c53      	adds	r3, r2, #1
    33da:	60c3      	str	r3, [r0, #12]
    33dc:	7851      	ldrb	r1, [r2, #1]
    33de:	3930      	subs	r1, #48	; 0x30
    33e0:	b2ca      	uxtb	r2, r1
    33e2:	2a09      	cmp	r2, #9
    33e4:	d802      	bhi.n	33ec <d_number+0x6c>
    33e6:	461a      	mov	r2, r3
    33e8:	2601      	movs	r6, #1
    33ea:	e7d4      	b.n	3396 <d_number+0x16>
    33ec:	2000      	movs	r0, #0
    33ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
    33f0:	cccccccd 	.word	0xcccccccd

000033f4 <d_call_offset>:
    33f4:	b510      	push	{r4, lr}
    33f6:	4604      	mov	r4, r0
    33f8:	b929      	cbnz	r1, 3406 <d_call_offset+0x12>
    33fa:	68c3      	ldr	r3, [r0, #12]
    33fc:	781a      	ldrb	r2, [r3, #0]
    33fe:	b16a      	cbz	r2, 341c <d_call_offset+0x28>
    3400:	1c5a      	adds	r2, r3, #1
    3402:	60c2      	str	r2, [r0, #12]
    3404:	7819      	ldrb	r1, [r3, #0]
    3406:	2968      	cmp	r1, #104	; 0x68
    3408:	d00c      	beq.n	3424 <d_call_offset+0x30>
    340a:	2976      	cmp	r1, #118	; 0x76
    340c:	d106      	bne.n	341c <d_call_offset+0x28>
    340e:	4620      	mov	r0, r4
    3410:	f7ff ffb6 	bl	3380 <d_number>
    3414:	68e3      	ldr	r3, [r4, #12]
    3416:	781a      	ldrb	r2, [r3, #0]
    3418:	2a5f      	cmp	r2, #95	; 0x5f
    341a:	d001      	beq.n	3420 <d_call_offset+0x2c>
    341c:	2000      	movs	r0, #0
    341e:	bd10      	pop	{r4, pc}
    3420:	3301      	adds	r3, #1
    3422:	60e3      	str	r3, [r4, #12]
    3424:	4620      	mov	r0, r4
    3426:	f7ff ffab 	bl	3380 <d_number>
    342a:	68e3      	ldr	r3, [r4, #12]
    342c:	781a      	ldrb	r2, [r3, #0]
    342e:	2a5f      	cmp	r2, #95	; 0x5f
    3430:	d1f4      	bne.n	341c <d_call_offset+0x28>
    3432:	3301      	adds	r3, #1
    3434:	60e3      	str	r3, [r4, #12]
    3436:	2001      	movs	r0, #1
    3438:	bd10      	pop	{r4, pc}
    343a:	bf00      	nop

0000343c <d_ref_qualifier>:
    343c:	b410      	push	{r4}
    343e:	68c3      	ldr	r3, [r0, #12]
    3440:	460a      	mov	r2, r1
    3442:	7819      	ldrb	r1, [r3, #0]
    3444:	2952      	cmp	r1, #82	; 0x52
    3446:	d010      	beq.n	346a <d_ref_qualifier+0x2e>
    3448:	294f      	cmp	r1, #79	; 0x4f
    344a:	d003      	beq.n	3454 <d_ref_qualifier+0x18>
    344c:	4610      	mov	r0, r2
    344e:	f85d 4b04 	ldr.w	r4, [sp], #4
    3452:	4770      	bx	lr
    3454:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
    3456:	2120      	movs	r1, #32
    3458:	3403      	adds	r4, #3
    345a:	3301      	adds	r3, #1
    345c:	62c4      	str	r4, [r0, #44]	; 0x2c
    345e:	60c3      	str	r3, [r0, #12]
    3460:	f85d 4b04 	ldr.w	r4, [sp], #4
    3464:	2300      	movs	r3, #0
    3466:	f7ff bf13 	b.w	3290 <d_make_comp>
    346a:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
    346c:	211f      	movs	r1, #31
    346e:	3402      	adds	r4, #2
    3470:	e7f3      	b.n	345a <d_ref_qualifier+0x1e>
    3472:	bf00      	nop

00003474 <d_count_templates_scopes>:
    3474:	2900      	cmp	r1, #0
    3476:	d066      	beq.n	3546 <d_count_templates_scopes+0xd2>
    3478:	b538      	push	{r3, r4, r5, lr}
    347a:	4605      	mov	r5, r0
    347c:	460c      	mov	r4, r1
    347e:	68a3      	ldr	r3, [r4, #8]
    3480:	2b01      	cmp	r3, #1
    3482:	dc39      	bgt.n	34f8 <d_count_templates_scopes+0x84>
    3484:	f8d5 011c 	ldr.w	r0, [r5, #284]	; 0x11c
    3488:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
    348c:	f103 0301 	add.w	r3, r3, #1
    3490:	dc32      	bgt.n	34f8 <d_count_templates_scopes+0x84>
    3492:	7822      	ldrb	r2, [r4, #0]
    3494:	60a3      	str	r3, [r4, #8]
    3496:	1e53      	subs	r3, r2, #1
    3498:	2b50      	cmp	r3, #80	; 0x50
    349a:	d82d      	bhi.n	34f8 <d_count_templates_scopes+0x84>
    349c:	e8df f003 	tbb	[pc, r3]
    34a0:	4c313131 	.word	0x4c313131
    34a4:	2d2d2c2c 	.word	0x2d2d2c2c
    34a8:	31313131 	.word	0x31313131
    34ac:	31313131 	.word	0x31313131
    34b0:	31313131 	.word	0x31313131
    34b4:	2c313131 	.word	0x2c313131
    34b8:	31313131 	.word	0x31313131
    34bc:	31313131 	.word	0x31313131
    34c0:	42423131 	.word	0x42423131
    34c4:	312c3131 	.word	0x312c3131
    34c8:	29313131 	.word	0x29313131
    34cc:	31313131 	.word	0x31313131
    34d0:	312d2c31 	.word	0x312d2c31
    34d4:	31313131 	.word	0x31313131
    34d8:	31313131 	.word	0x31313131
    34dc:	31313131 	.word	0x31313131
    34e0:	312c2c31 	.word	0x312c2c31
    34e4:	29292929 	.word	0x29292929
    34e8:	3131312c 	.word	0x3131312c
    34ec:	31313131 	.word	0x31313131
    34f0:	31          	.byte	0x31
    34f1:	00          	.byte	0x00
    34f2:	68e4      	ldr	r4, [r4, #12]
    34f4:	2c00      	cmp	r4, #0
    34f6:	d1c2      	bne.n	347e <d_count_templates_scopes+0xa>
    34f8:	bd38      	pop	{r3, r4, r5, pc}
    34fa:	6924      	ldr	r4, [r4, #16]
    34fc:	2c00      	cmp	r4, #0
    34fe:	d1be      	bne.n	347e <d_count_templates_scopes+0xa>
    3500:	e7fa      	b.n	34f8 <d_count_templates_scopes+0x84>
    3502:	68e1      	ldr	r1, [r4, #12]
    3504:	1c43      	adds	r3, r0, #1
    3506:	f8c5 311c 	str.w	r3, [r5, #284]	; 0x11c
    350a:	4628      	mov	r0, r5
    350c:	f7ff ffb2 	bl	3474 <d_count_templates_scopes>
    3510:	6921      	ldr	r1, [r4, #16]
    3512:	4628      	mov	r0, r5
    3514:	f7ff ffae 	bl	3474 <d_count_templates_scopes>
    3518:	f8d5 311c 	ldr.w	r3, [r5, #284]	; 0x11c
    351c:	3b01      	subs	r3, #1
    351e:	f8c5 311c 	str.w	r3, [r5, #284]	; 0x11c
    3522:	bd38      	pop	{r3, r4, r5, pc}
    3524:	68e1      	ldr	r1, [r4, #12]
    3526:	780b      	ldrb	r3, [r1, #0]
    3528:	2b05      	cmp	r3, #5
    352a:	d1eb      	bne.n	3504 <d_count_templates_scopes+0x90>
    352c:	f8d5 3138 	ldr.w	r3, [r5, #312]	; 0x138
    3530:	3301      	adds	r3, #1
    3532:	f8c5 3138 	str.w	r3, [r5, #312]	; 0x138
    3536:	e7e5      	b.n	3504 <d_count_templates_scopes+0x90>
    3538:	f8d5 3144 	ldr.w	r3, [r5, #324]	; 0x144
    353c:	68e1      	ldr	r1, [r4, #12]
    353e:	3301      	adds	r3, #1
    3540:	f8c5 3144 	str.w	r3, [r5, #324]	; 0x144
    3544:	e7de      	b.n	3504 <d_count_templates_scopes+0x90>
    3546:	4770      	bx	lr

00003548 <d_pack_length>:
    3548:	4603      	mov	r3, r0
    354a:	b148      	cbz	r0, 3560 <d_pack_length+0x18>
    354c:	2300      	movs	r3, #0
    354e:	e004      	b.n	355a <d_pack_length+0x12>
    3550:	68c2      	ldr	r2, [r0, #12]
    3552:	b12a      	cbz	r2, 3560 <d_pack_length+0x18>
    3554:	6900      	ldr	r0, [r0, #16]
    3556:	3301      	adds	r3, #1
    3558:	b110      	cbz	r0, 3560 <d_pack_length+0x18>
    355a:	7802      	ldrb	r2, [r0, #0]
    355c:	2a2f      	cmp	r2, #47	; 0x2f
    355e:	d0f7      	beq.n	3550 <d_pack_length+0x8>
    3560:	4618      	mov	r0, r3
    3562:	4770      	bx	lr

00003564 <d_discriminator>:
    3564:	68c3      	ldr	r3, [r0, #12]
    3566:	781a      	ldrb	r2, [r3, #0]
    3568:	2a5f      	cmp	r2, #95	; 0x5f
    356a:	d001      	beq.n	3570 <d_discriminator+0xc>
    356c:	2001      	movs	r0, #1
    356e:	4770      	bx	lr
    3570:	b510      	push	{r4, lr}
    3572:	1c5a      	adds	r2, r3, #1
    3574:	60c2      	str	r2, [r0, #12]
    3576:	785a      	ldrb	r2, [r3, #1]
    3578:	2a5f      	cmp	r2, #95	; 0x5f
    357a:	4604      	mov	r4, r0
    357c:	d004      	beq.n	3588 <d_discriminator+0x24>
    357e:	f7ff feff 	bl	3380 <d_number>
    3582:	43c0      	mvns	r0, r0
    3584:	0fc0      	lsrs	r0, r0, #31
    3586:	bd10      	pop	{r4, pc}
    3588:	3302      	adds	r3, #2
    358a:	60c3      	str	r3, [r0, #12]
    358c:	f7ff fef8 	bl	3380 <d_number>
    3590:	2800      	cmp	r0, #0
    3592:	db09      	blt.n	35a8 <d_discriminator+0x44>
    3594:	2809      	cmp	r0, #9
    3596:	dd05      	ble.n	35a4 <d_discriminator+0x40>
    3598:	68e3      	ldr	r3, [r4, #12]
    359a:	781a      	ldrb	r2, [r3, #0]
    359c:	2a5f      	cmp	r2, #95	; 0x5f
    359e:	d103      	bne.n	35a8 <d_discriminator+0x44>
    35a0:	3301      	adds	r3, #1
    35a2:	60e3      	str	r3, [r4, #12]
    35a4:	2001      	movs	r0, #1
    35a6:	bd10      	pop	{r4, pc}
    35a8:	2000      	movs	r0, #0
    35aa:	bd10      	pop	{r4, pc}

000035ac <d_index_template_argument.part.0>:
    35ac:	b920      	cbnz	r0, 35b8 <d_index_template_argument.part.0+0xc>
    35ae:	e009      	b.n	35c4 <d_index_template_argument.part.0+0x18>
    35b0:	b139      	cbz	r1, 35c2 <d_index_template_argument.part.0+0x16>
    35b2:	6900      	ldr	r0, [r0, #16]
    35b4:	3901      	subs	r1, #1
    35b6:	b130      	cbz	r0, 35c6 <d_index_template_argument.part.0+0x1a>
    35b8:	7803      	ldrb	r3, [r0, #0]
    35ba:	2b2f      	cmp	r3, #47	; 0x2f
    35bc:	d0f8      	beq.n	35b0 <d_index_template_argument.part.0+0x4>
    35be:	2000      	movs	r0, #0
    35c0:	4770      	bx	lr
    35c2:	68c0      	ldr	r0, [r0, #12]
    35c4:	4770      	bx	lr
    35c6:	4770      	bx	lr

000035c8 <d_growable_string_callback_adapter>:
    35c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    35ca:	4614      	mov	r4, r2
    35cc:	6852      	ldr	r2, [r2, #4]
    35ce:	68a5      	ldr	r5, [r4, #8]
    35d0:	1c4b      	adds	r3, r1, #1
    35d2:	4413      	add	r3, r2
    35d4:	42ab      	cmp	r3, r5
    35d6:	b083      	sub	sp, #12
    35d8:	460e      	mov	r6, r1
    35da:	4607      	mov	r7, r0
    35dc:	d811      	bhi.n	3602 <d_growable_string_callback_adapter+0x3a>
    35de:	68e5      	ldr	r5, [r4, #12]
    35e0:	b96d      	cbnz	r5, 35fe <d_growable_string_callback_adapter+0x36>
    35e2:	6863      	ldr	r3, [r4, #4]
    35e4:	6820      	ldr	r0, [r4, #0]
    35e6:	4632      	mov	r2, r6
    35e8:	4418      	add	r0, r3
    35ea:	4639      	mov	r1, r7
    35ec:	f7fd f81a 	bl	624 <memcpy>
    35f0:	e9d4 3200 	ldrd	r3, r2, [r4]
    35f4:	4433      	add	r3, r6
    35f6:	549d      	strb	r5, [r3, r2]
    35f8:	6863      	ldr	r3, [r4, #4]
    35fa:	4433      	add	r3, r6
    35fc:	6063      	str	r3, [r4, #4]
    35fe:	b003      	add	sp, #12
    3600:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3602:	68e2      	ldr	r2, [r4, #12]
    3604:	2a00      	cmp	r2, #0
    3606:	d1fa      	bne.n	35fe <d_growable_string_callback_adapter+0x36>
    3608:	b155      	cbz	r5, 3620 <d_growable_string_callback_adapter+0x58>
    360a:	006d      	lsls	r5, r5, #1
    360c:	42ab      	cmp	r3, r5
    360e:	d8fc      	bhi.n	360a <d_growable_string_callback_adapter+0x42>
    3610:	6820      	ldr	r0, [r4, #0]
    3612:	4629      	mov	r1, r5
    3614:	f00a fa14 	bl	da40 <realloc>
    3618:	b138      	cbz	r0, 362a <d_growable_string_callback_adapter+0x62>
    361a:	6020      	str	r0, [r4, #0]
    361c:	60a5      	str	r5, [r4, #8]
    361e:	e7de      	b.n	35de <d_growable_string_callback_adapter+0x16>
    3620:	2b02      	cmp	r3, #2
    3622:	f04f 0502 	mov.w	r5, #2
    3626:	d8f0      	bhi.n	360a <d_growable_string_callback_adapter+0x42>
    3628:	e7f2      	b.n	3610 <d_growable_string_callback_adapter+0x48>
    362a:	9001      	str	r0, [sp, #4]
    362c:	6820      	ldr	r0, [r4, #0]
    362e:	f008 ff4d 	bl	c4cc <free>
    3632:	9b01      	ldr	r3, [sp, #4]
    3634:	2201      	movs	r2, #1
    3636:	e9c4 3300 	strd	r3, r3, [r4]
    363a:	e9c4 3202 	strd	r3, r2, [r4, #8]
    363e:	e7de      	b.n	35fe <d_growable_string_callback_adapter+0x36>

00003640 <next_is_type_qual.isra.0>:
    3640:	7803      	ldrb	r3, [r0, #0]
    3642:	2b72      	cmp	r3, #114	; 0x72
    3644:	d007      	beq.n	3656 <next_is_type_qual.isra.0+0x16>
    3646:	2b56      	cmp	r3, #86	; 0x56
    3648:	d005      	beq.n	3656 <next_is_type_qual.isra.0+0x16>
    364a:	2b4b      	cmp	r3, #75	; 0x4b
    364c:	d003      	beq.n	3656 <next_is_type_qual.isra.0+0x16>
    364e:	2b44      	cmp	r3, #68	; 0x44
    3650:	d003      	beq.n	365a <next_is_type_qual.isra.0+0x1a>
    3652:	2000      	movs	r0, #0
    3654:	4770      	bx	lr
    3656:	2001      	movs	r0, #1
    3658:	4770      	bx	lr
    365a:	7840      	ldrb	r0, [r0, #1]
    365c:	f000 03df 	and.w	r3, r0, #223	; 0xdf
    3660:	2b4f      	cmp	r3, #79	; 0x4f
    3662:	d0f8      	beq.n	3656 <next_is_type_qual.isra.0+0x16>
    3664:	3877      	subs	r0, #119	; 0x77
    3666:	2801      	cmp	r0, #1
    3668:	bf8c      	ite	hi
    366a:	2000      	movhi	r0, #0
    366c:	2001      	movls	r0, #1
    366e:	4770      	bx	lr

00003670 <d_append_char>:
    3670:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    3674:	2bff      	cmp	r3, #255	; 0xff
    3676:	b570      	push	{r4, r5, r6, lr}
    3678:	4604      	mov	r4, r0
    367a:	460d      	mov	r5, r1
    367c:	d006      	beq.n	368c <d_append_char+0x1c>
    367e:	1c5a      	adds	r2, r3, #1
    3680:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    3684:	54e5      	strb	r5, [r4, r3]
    3686:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    368a:	bd70      	pop	{r4, r5, r6, pc}
    368c:	2600      	movs	r6, #0
    368e:	4619      	mov	r1, r3
    3690:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    3694:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    3698:	4798      	blx	r3
    369a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    369e:	2201      	movs	r2, #1
    36a0:	4413      	add	r3, r2
    36a2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    36a6:	4633      	mov	r3, r6
    36a8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    36ac:	54e5      	strb	r5, [r4, r3]
    36ae:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    36b2:	bd70      	pop	{r4, r5, r6, pc}

000036b4 <d_lookup_template_argument>:
    36b4:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
    36b8:	b19b      	cbz	r3, 36e2 <d_lookup_template_argument+0x2e>
    36ba:	68ca      	ldr	r2, [r1, #12]
    36bc:	685b      	ldr	r3, [r3, #4]
    36be:	2a00      	cmp	r2, #0
    36c0:	691b      	ldr	r3, [r3, #16]
    36c2:	db09      	blt.n	36d8 <d_lookup_template_argument+0x24>
    36c4:	b923      	cbnz	r3, 36d0 <d_lookup_template_argument+0x1c>
    36c6:	e007      	b.n	36d8 <d_lookup_template_argument+0x24>
    36c8:	b142      	cbz	r2, 36dc <d_lookup_template_argument+0x28>
    36ca:	691b      	ldr	r3, [r3, #16]
    36cc:	3a01      	subs	r2, #1
    36ce:	b11b      	cbz	r3, 36d8 <d_lookup_template_argument+0x24>
    36d0:	7819      	ldrb	r1, [r3, #0]
    36d2:	292f      	cmp	r1, #47	; 0x2f
    36d4:	d0f8      	beq.n	36c8 <d_lookup_template_argument+0x14>
    36d6:	2300      	movs	r3, #0
    36d8:	4618      	mov	r0, r3
    36da:	4770      	bx	lr
    36dc:	68db      	ldr	r3, [r3, #12]
    36de:	4618      	mov	r0, r3
    36e0:	4770      	bx	lr
    36e2:	2201      	movs	r2, #1
    36e4:	f8c0 2118 	str.w	r2, [r0, #280]	; 0x118
    36e8:	e7f6      	b.n	36d8 <d_lookup_template_argument+0x24>
    36ea:	bf00      	nop

000036ec <d_find_pack>:
    36ec:	2900      	cmp	r1, #0
    36ee:	d040      	beq.n	3772 <d_find_pack+0x86>
    36f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    36f4:	f8df 8084 	ldr.w	r8, [pc, #132]	; 377c <d_find_pack+0x90>
    36f8:	4f1f      	ldr	r7, [pc, #124]	; (3778 <d_find_pack+0x8c>)
    36fa:	4605      	mov	r5, r0
    36fc:	460c      	mov	r4, r1
    36fe:	2601      	movs	r6, #1
    3700:	7823      	ldrb	r3, [r4, #0]
    3702:	2b08      	cmp	r3, #8
    3704:	d813      	bhi.n	372e <d_find_pack+0x42>
    3706:	2b08      	cmp	r3, #8
    3708:	d81e      	bhi.n	3748 <d_find_pack+0x5c>
    370a:	e8df f003 	tbb	[pc, r3]
    370e:	1d0d      	.short	0x1d0d
    3710:	271d1d1d 	.word	0x271d1d1d
    3714:	230d      	.short	0x230d
    3716:	23          	.byte	0x23
    3717:	00          	.byte	0x00
    3718:	2b17      	cmp	r3, #23
    371a:	d915      	bls.n	3748 <d_find_pack+0x5c>
    371c:	3b18      	subs	r3, #24
    371e:	b2db      	uxtb	r3, r3
    3720:	fa27 f303 	lsr.w	r3, r7, r3
    3724:	07db      	lsls	r3, r3, #31
    3726:	d50f      	bpl.n	3748 <d_find_pack+0x5c>
    3728:	2000      	movs	r0, #0
    372a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    372e:	2b2c      	cmp	r3, #44	; 0x2c
    3730:	d9f2      	bls.n	3718 <d_find_pack+0x2c>
    3732:	3b32      	subs	r3, #50	; 0x32
    3734:	b2db      	uxtb	r3, r3
    3736:	2b1b      	cmp	r3, #27
    3738:	d806      	bhi.n	3748 <d_find_pack+0x5c>
    373a:	fa06 f203 	lsl.w	r2, r6, r3
    373e:	ea12 0f08 	tst.w	r2, r8
    3742:	d1f1      	bne.n	3728 <d_find_pack+0x3c>
    3744:	2b01      	cmp	r3, #1
    3746:	d005      	beq.n	3754 <d_find_pack+0x68>
    3748:	68e1      	ldr	r1, [r4, #12]
    374a:	4628      	mov	r0, r5
    374c:	f7ff ffce 	bl	36ec <d_find_pack>
    3750:	2800      	cmp	r0, #0
    3752:	d1ea      	bne.n	372a <d_find_pack+0x3e>
    3754:	6924      	ldr	r4, [r4, #16]
    3756:	2c00      	cmp	r4, #0
    3758:	d1d2      	bne.n	3700 <d_find_pack+0x14>
    375a:	e7e5      	b.n	3728 <d_find_pack+0x3c>
    375c:	4621      	mov	r1, r4
    375e:	4628      	mov	r0, r5
    3760:	f7ff ffa8 	bl	36b4 <d_lookup_template_argument>
    3764:	2800      	cmp	r0, #0
    3766:	d0df      	beq.n	3728 <d_find_pack+0x3c>
    3768:	7803      	ldrb	r3, [r0, #0]
    376a:	2b2f      	cmp	r3, #47	; 0x2f
    376c:	d1dc      	bne.n	3728 <d_find_pack+0x3c>
    376e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3772:	2000      	movs	r0, #0
    3774:	4770      	bx	lr
    3776:	bf00      	nop
    3778:	00108001 	.word	0x00108001
    377c:	0ce30001 	.word	0x0ce30001

00003780 <d_append_string>:
    3780:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3784:	4604      	mov	r4, r0
    3786:	4608      	mov	r0, r1
    3788:	460d      	mov	r5, r1
    378a:	f00b fa79 	bl	ec80 <strlen>
    378e:	b340      	cbz	r0, 37e2 <d_append_string+0x62>
    3790:	3d01      	subs	r5, #1
    3792:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    3796:	182f      	adds	r7, r5, r0
    3798:	f04f 0800 	mov.w	r8, #0
    379c:	e009      	b.n	37b2 <d_append_string+0x32>
    379e:	460b      	mov	r3, r1
    37a0:	42bd      	cmp	r5, r7
    37a2:	f101 0101 	add.w	r1, r1, #1
    37a6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    37aa:	54e6      	strb	r6, [r4, r3]
    37ac:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    37b0:	d017      	beq.n	37e2 <d_append_string+0x62>
    37b2:	29ff      	cmp	r1, #255	; 0xff
    37b4:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    37b8:	d1f1      	bne.n	379e <d_append_string+0x1e>
    37ba:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    37be:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    37c2:	4620      	mov	r0, r4
    37c4:	4798      	blx	r3
    37c6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    37ca:	2101      	movs	r1, #1
    37cc:	440b      	add	r3, r1
    37ce:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    37d2:	2300      	movs	r3, #0
    37d4:	42bd      	cmp	r5, r7
    37d6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    37da:	54e6      	strb	r6, [r4, r3]
    37dc:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    37e0:	d1e7      	bne.n	37b2 <d_append_string+0x32>
    37e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    37e6:	bf00      	nop

000037e8 <d_template_param>:
    37e8:	b538      	push	{r3, r4, r5, lr}
    37ea:	68c3      	ldr	r3, [r0, #12]
    37ec:	781a      	ldrb	r2, [r3, #0]
    37ee:	2a54      	cmp	r2, #84	; 0x54
    37f0:	d124      	bne.n	383c <d_template_param+0x54>
    37f2:	1c5a      	adds	r2, r3, #1
    37f4:	60c2      	str	r2, [r0, #12]
    37f6:	785a      	ldrb	r2, [r3, #1]
    37f8:	2a5f      	cmp	r2, #95	; 0x5f
    37fa:	4604      	mov	r4, r0
    37fc:	d020      	beq.n	3840 <d_template_param+0x58>
    37fe:	2a6e      	cmp	r2, #110	; 0x6e
    3800:	d01c      	beq.n	383c <d_template_param+0x54>
    3802:	f7ff fdbd 	bl	3380 <d_number>
    3806:	1c41      	adds	r1, r0, #1
    3808:	d418      	bmi.n	383c <d_template_param+0x54>
    380a:	68e3      	ldr	r3, [r4, #12]
    380c:	781a      	ldrb	r2, [r3, #0]
    380e:	2a5f      	cmp	r2, #95	; 0x5f
    3810:	d114      	bne.n	383c <d_template_param+0x54>
    3812:	3301      	adds	r3, #1
    3814:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
    3818:	4282      	cmp	r2, r0
    381a:	60e3      	str	r3, [r4, #12]
    381c:	da0e      	bge.n	383c <d_template_param+0x54>
    381e:	6923      	ldr	r3, [r4, #16]
    3820:	eb02 0c82 	add.w	ip, r2, r2, lsl #2
    3824:	eb03 008c 	add.w	r0, r3, ip, lsl #2
    3828:	3201      	adds	r2, #1
    382a:	2500      	movs	r5, #0
    382c:	e9c0 5501 	strd	r5, r5, [r0, #4]
    3830:	6162      	str	r2, [r4, #20]
    3832:	2205      	movs	r2, #5
    3834:	f803 202c 	strb.w	r2, [r3, ip, lsl #2]
    3838:	60c1      	str	r1, [r0, #12]
    383a:	bd38      	pop	{r3, r4, r5, pc}
    383c:	2000      	movs	r0, #0
    383e:	bd38      	pop	{r3, r4, r5, pc}
    3840:	3302      	adds	r3, #2
    3842:	2100      	movs	r1, #0
    3844:	e7e6      	b.n	3814 <d_template_param+0x2c>
    3846:	bf00      	nop

00003848 <d_append_num>:
    3848:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    384c:	b088      	sub	sp, #32
    384e:	460a      	mov	r2, r1
    3850:	4604      	mov	r4, r0
    3852:	491a      	ldr	r1, [pc, #104]	; (38bc <d_append_num+0x74>)
    3854:	a801      	add	r0, sp, #4
    3856:	f006 fe89 	bl	a56c <sprintf>
    385a:	a801      	add	r0, sp, #4
    385c:	f00b fa10 	bl	ec80 <strlen>
    3860:	b340      	cbz	r0, 38b4 <d_append_num+0x6c>
    3862:	ad01      	add	r5, sp, #4
    3864:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    3868:	182f      	adds	r7, r5, r0
    386a:	f04f 0800 	mov.w	r8, #0
    386e:	e009      	b.n	3884 <d_append_num+0x3c>
    3870:	460b      	mov	r3, r1
    3872:	42bd      	cmp	r5, r7
    3874:	f101 0101 	add.w	r1, r1, #1
    3878:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    387c:	54e6      	strb	r6, [r4, r3]
    387e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    3882:	d017      	beq.n	38b4 <d_append_num+0x6c>
    3884:	29ff      	cmp	r1, #255	; 0xff
    3886:	f815 6b01 	ldrb.w	r6, [r5], #1
    388a:	d1f1      	bne.n	3870 <d_append_num+0x28>
    388c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    3890:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    3894:	4620      	mov	r0, r4
    3896:	4798      	blx	r3
    3898:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    389c:	2101      	movs	r1, #1
    389e:	440b      	add	r3, r1
    38a0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    38a4:	2300      	movs	r3, #0
    38a6:	42bd      	cmp	r5, r7
    38a8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    38ac:	54e6      	strb	r6, [r4, r3]
    38ae:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    38b2:	d1e7      	bne.n	3884 <d_append_num+0x3c>
    38b4:	b008      	add	sp, #32
    38b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    38ba:	bf00      	nop
    38bc:	20001230 	.word	0x20001230

000038c0 <d_source_name>:
    38c0:	b570      	push	{r4, r5, r6, lr}
    38c2:	4604      	mov	r4, r0
    38c4:	f7ff fd5c 	bl	3380 <d_number>
    38c8:	1e05      	subs	r5, r0, #0
    38ca:	dd46      	ble.n	395a <d_source_name+0x9a>
    38cc:	68e6      	ldr	r6, [r4, #12]
    38ce:	6863      	ldr	r3, [r4, #4]
    38d0:	1b9b      	subs	r3, r3, r6
    38d2:	429d      	cmp	r5, r3
    38d4:	dc3e      	bgt.n	3954 <d_source_name+0x94>
    38d6:	68a2      	ldr	r2, [r4, #8]
    38d8:	1973      	adds	r3, r6, r5
    38da:	0752      	lsls	r2, r2, #29
    38dc:	60e3      	str	r3, [r4, #12]
    38de:	d504      	bpl.n	38ea <d_source_name+0x2a>
    38e0:	5d72      	ldrb	r2, [r6, r5]
    38e2:	2a24      	cmp	r2, #36	; 0x24
    38e4:	bf04      	itt	eq
    38e6:	3301      	addeq	r3, #1
    38e8:	60e3      	streq	r3, [r4, #12]
    38ea:	2d09      	cmp	r5, #9
    38ec:	dd22      	ble.n	3934 <d_source_name+0x74>
    38ee:	492a      	ldr	r1, [pc, #168]	; (3998 <d_source_name+0xd8>)
    38f0:	2208      	movs	r2, #8
    38f2:	4630      	mov	r0, r6
    38f4:	f009 f8a2 	bl	ca3c <memcmp>
    38f8:	b930      	cbnz	r0, 3908 <d_source_name+0x48>
    38fa:	7a33      	ldrb	r3, [r6, #8]
    38fc:	2b2e      	cmp	r3, #46	; 0x2e
    38fe:	d02e      	beq.n	395e <d_source_name+0x9e>
    3900:	2b5f      	cmp	r3, #95	; 0x5f
    3902:	d02c      	beq.n	395e <d_source_name+0x9e>
    3904:	2b24      	cmp	r3, #36	; 0x24
    3906:	d02a      	beq.n	395e <d_source_name+0x9e>
    3908:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    390c:	4293      	cmp	r3, r2
    390e:	da21      	bge.n	3954 <d_source_name+0x94>
    3910:	6920      	ldr	r0, [r4, #16]
    3912:	eb03 0283 	add.w	r2, r3, r3, lsl #2
    3916:	eb00 0082 	add.w	r0, r0, r2, lsl #2
    391a:	3301      	adds	r3, #1
    391c:	2200      	movs	r2, #0
    391e:	e9c0 2201 	strd	r2, r2, [r0, #4]
    3922:	6163      	str	r3, [r4, #20]
    3924:	2300      	movs	r3, #0
    3926:	7003      	strb	r3, [r0, #0]
    3928:	e9c0 3301 	strd	r3, r3, [r0, #4]
    392c:	e9c0 6503 	strd	r6, r5, [r0, #12]
    3930:	62a0      	str	r0, [r4, #40]	; 0x28
    3932:	bd70      	pop	{r4, r5, r6, pc}
    3934:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    3938:	4293      	cmp	r3, r2
    393a:	da0b      	bge.n	3954 <d_source_name+0x94>
    393c:	6920      	ldr	r0, [r4, #16]
    393e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
    3942:	eb00 0082 	add.w	r0, r0, r2, lsl #2
    3946:	3301      	adds	r3, #1
    3948:	2200      	movs	r2, #0
    394a:	e9c0 2201 	strd	r2, r2, [r0, #4]
    394e:	6163      	str	r3, [r4, #20]
    3950:	2e00      	cmp	r6, #0
    3952:	d1e7      	bne.n	3924 <d_source_name+0x64>
    3954:	2000      	movs	r0, #0
    3956:	62a0      	str	r0, [r4, #40]	; 0x28
    3958:	bd70      	pop	{r4, r5, r6, pc}
    395a:	2000      	movs	r0, #0
    395c:	bd70      	pop	{r4, r5, r6, pc}
    395e:	7a73      	ldrb	r3, [r6, #9]
    3960:	2b4e      	cmp	r3, #78	; 0x4e
    3962:	d1d1      	bne.n	3908 <d_source_name+0x48>
    3964:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3966:	6963      	ldr	r3, [r4, #20]
    3968:	69a1      	ldr	r1, [r4, #24]
    396a:	3216      	adds	r2, #22
    396c:	1b52      	subs	r2, r2, r5
    396e:	428b      	cmp	r3, r1
    3970:	62e2      	str	r2, [r4, #44]	; 0x2c
    3972:	daef      	bge.n	3954 <d_source_name+0x94>
    3974:	6922      	ldr	r2, [r4, #16]
    3976:	eb03 0083 	add.w	r0, r3, r3, lsl #2
    397a:	0081      	lsls	r1, r0, #2
    397c:	3301      	adds	r3, #1
    397e:	6163      	str	r3, [r4, #20]
    3980:	eb02 0080 	add.w	r0, r2, r0, lsl #2
    3984:	2300      	movs	r3, #0
    3986:	e9c0 3301 	strd	r3, r3, [r0, #4]
    398a:	5453      	strb	r3, [r2, r1]
    398c:	4a03      	ldr	r2, [pc, #12]	; (399c <d_source_name+0xdc>)
    398e:	2315      	movs	r3, #21
    3990:	e9c0 2303 	strd	r2, r3, [r0, #12]
    3994:	e7df      	b.n	3956 <d_source_name+0x96>
    3996:	bf00      	nop
    3998:	20001580 	.word	0x20001580
    399c:	2000158c 	.word	0x2000158c

000039a0 <d_substitution>:
    39a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    39a4:	68c3      	ldr	r3, [r0, #12]
    39a6:	781a      	ldrb	r2, [r3, #0]
    39a8:	2a53      	cmp	r2, #83	; 0x53
    39aa:	d131      	bne.n	3a10 <d_substitution+0x70>
    39ac:	1c5a      	adds	r2, r3, #1
    39ae:	60c2      	str	r2, [r0, #12]
    39b0:	785a      	ldrb	r2, [r3, #1]
    39b2:	4604      	mov	r4, r0
    39b4:	b3a2      	cbz	r2, 3a20 <d_substitution+0x80>
    39b6:	1c9a      	adds	r2, r3, #2
    39b8:	60c2      	str	r2, [r0, #12]
    39ba:	785a      	ldrb	r2, [r3, #1]
    39bc:	2a5f      	cmp	r2, #95	; 0x5f
    39be:	d044      	beq.n	3a4a <d_substitution+0xaa>
    39c0:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
    39c4:	b2d8      	uxtb	r0, r3
    39c6:	2809      	cmp	r0, #9
    39c8:	d826      	bhi.n	3a18 <d_substitution+0x78>
    39ca:	2100      	movs	r1, #0
    39cc:	e00d      	b.n	39ea <d_substitution+0x4a>
    39ce:	3b30      	subs	r3, #48	; 0x30
    39d0:	4299      	cmp	r1, r3
    39d2:	d81d      	bhi.n	3a10 <d_substitution+0x70>
    39d4:	68e0      	ldr	r0, [r4, #12]
    39d6:	7802      	ldrb	r2, [r0, #0]
    39d8:	4619      	mov	r1, r3
    39da:	1c45      	adds	r5, r0, #1
    39dc:	b11a      	cbz	r2, 39e6 <d_substitution+0x46>
    39de:	60e5      	str	r5, [r4, #12]
    39e0:	7802      	ldrb	r2, [r0, #0]
    39e2:	2a5f      	cmp	r2, #95	; 0x5f
    39e4:	d03b      	beq.n	3a5e <d_substitution+0xbe>
    39e6:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
    39ea:	b2d8      	uxtb	r0, r3
    39ec:	2809      	cmp	r0, #9
    39ee:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
    39f2:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
    39f6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    39fa:	d9e8      	bls.n	39ce <d_substitution+0x2e>
    39fc:	f1bc 0f19 	cmp.w	ip, #25
    3a00:	d806      	bhi.n	3a10 <d_substitution+0x70>
    3a02:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
    3a06:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    3a0a:	3b37      	subs	r3, #55	; 0x37
    3a0c:	4299      	cmp	r1, r3
    3a0e:	d9e1      	bls.n	39d4 <d_substitution+0x34>
    3a10:	2500      	movs	r5, #0
    3a12:	4628      	mov	r0, r5
    3a14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3a18:	f1a2 0041 	sub.w	r0, r2, #65	; 0x41
    3a1c:	2819      	cmp	r0, #25
    3a1e:	d9d4      	bls.n	39ca <d_substitution+0x2a>
    3a20:	68a3      	ldr	r3, [r4, #8]
    3a22:	f003 0308 	and.w	r3, r3, #8
    3a26:	2b00      	cmp	r3, #0
    3a28:	bf14      	ite	ne
    3a2a:	2501      	movne	r5, #1
    3a2c:	2500      	moveq	r5, #0
    3a2e:	d100      	bne.n	3a32 <d_substitution+0x92>
    3a30:	b9b9      	cbnz	r1, 3a62 <d_substitution+0xc2>
    3a32:	4b3f      	ldr	r3, [pc, #252]	; (3b30 <d_substitution+0x190>)
    3a34:	2174      	movs	r1, #116	; 0x74
    3a36:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
    3a3a:	e001      	b.n	3a40 <d_substitution+0xa0>
    3a3c:	f813 1f1c 	ldrb.w	r1, [r3, #28]!
    3a40:	4291      	cmp	r1, r2
    3a42:	d015      	beq.n	3a70 <d_substitution+0xd0>
    3a44:	4283      	cmp	r3, r0
    3a46:	d1f9      	bne.n	3a3c <d_substitution+0x9c>
    3a48:	e7e2      	b.n	3a10 <d_substitution+0x70>
    3a4a:	2300      	movs	r3, #0
    3a4c:	6a22      	ldr	r2, [r4, #32]
    3a4e:	429a      	cmp	r2, r3
    3a50:	d9de      	bls.n	3a10 <d_substitution+0x70>
    3a52:	69e2      	ldr	r2, [r4, #28]
    3a54:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
    3a58:	4628      	mov	r0, r5
    3a5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3a5e:	3301      	adds	r3, #1
    3a60:	e7f4      	b.n	3a4c <d_substitution+0xac>
    3a62:	68e3      	ldr	r3, [r4, #12]
    3a64:	781b      	ldrb	r3, [r3, #0]
    3a66:	3b43      	subs	r3, #67	; 0x43
    3a68:	2b01      	cmp	r3, #1
    3a6a:	bf98      	it	ls
    3a6c:	460d      	movls	r5, r1
    3a6e:	e7e0      	b.n	3a32 <d_substitution+0x92>
    3a70:	695e      	ldr	r6, [r3, #20]
    3a72:	2e00      	cmp	r6, #0
    3a74:	d054      	beq.n	3b20 <d_substitution+0x180>
    3a76:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
    3a7a:	4282      	cmp	r2, r0
    3a7c:	f8d3 8018 	ldr.w	r8, [r3, #24]
    3a80:	da53      	bge.n	3b2a <d_substitution+0x18a>
    3a82:	6927      	ldr	r7, [r4, #16]
    3a84:	eb02 0c82 	add.w	ip, r2, r2, lsl #2
    3a88:	eb07 018c 	add.w	r1, r7, ip, lsl #2
    3a8c:	f04f 0e00 	mov.w	lr, #0
    3a90:	e9c1 ee01 	strd	lr, lr, [r1, #4]
    3a94:	3201      	adds	r2, #1
    3a96:	f04f 0e18 	mov.w	lr, #24
    3a9a:	6162      	str	r2, [r4, #20]
    3a9c:	f807 e02c 	strb.w	lr, [r7, ip, lsl #2]
    3aa0:	e9c1 6803 	strd	r6, r8, [r1, #12]
    3aa4:	62a1      	str	r1, [r4, #40]	; 0x28
    3aa6:	2d00      	cmp	r5, #0
    3aa8:	d037      	beq.n	3b1a <d_substitution+0x17a>
    3aaa:	e9d3 7103 	ldrd	r7, r1, [r3, #12]
    3aae:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    3ab0:	4282      	cmp	r2, r0
    3ab2:	440b      	add	r3, r1
    3ab4:	62e3      	str	r3, [r4, #44]	; 0x2c
    3ab6:	da36      	bge.n	3b26 <d_substitution+0x186>
    3ab8:	6923      	ldr	r3, [r4, #16]
    3aba:	eb02 0082 	add.w	r0, r2, r2, lsl #2
    3abe:	eb03 0580 	add.w	r5, r3, r0, lsl #2
    3ac2:	3201      	adds	r2, #1
    3ac4:	2600      	movs	r6, #0
    3ac6:	e9c5 6601 	strd	r6, r6, [r5, #4]
    3aca:	6162      	str	r2, [r4, #20]
    3acc:	2218      	movs	r2, #24
    3ace:	f803 2020 	strb.w	r2, [r3, r0, lsl #2]
    3ad2:	e9c5 7103 	strd	r7, r1, [r5, #12]
    3ad6:	68e3      	ldr	r3, [r4, #12]
    3ad8:	781a      	ldrb	r2, [r3, #0]
    3ada:	2a42      	cmp	r2, #66	; 0x42
    3adc:	d199      	bne.n	3a12 <d_substitution+0x72>
    3ade:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    3ae0:	3301      	adds	r3, #1
    3ae2:	60e3      	str	r3, [r4, #12]
    3ae4:	4620      	mov	r0, r4
    3ae6:	f7ff feeb 	bl	38c0 <d_source_name>
    3aea:	462a      	mov	r2, r5
    3aec:	4603      	mov	r3, r0
    3aee:	214d      	movs	r1, #77	; 0x4d
    3af0:	4620      	mov	r0, r4
    3af2:	f7ff fbcd 	bl	3290 <d_make_comp>
    3af6:	68e3      	ldr	r3, [r4, #12]
    3af8:	781a      	ldrb	r2, [r3, #0]
    3afa:	2a42      	cmp	r2, #66	; 0x42
    3afc:	4605      	mov	r5, r0
    3afe:	d0ef      	beq.n	3ae0 <d_substitution+0x140>
    3b00:	62a6      	str	r6, [r4, #40]	; 0x28
    3b02:	2800      	cmp	r0, #0
    3b04:	d084      	beq.n	3a10 <d_substitution+0x70>
    3b06:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
    3b0a:	4293      	cmp	r3, r2
    3b0c:	da80      	bge.n	3a10 <d_substitution+0x70>
    3b0e:	69e1      	ldr	r1, [r4, #28]
    3b10:	1c5a      	adds	r2, r3, #1
    3b12:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
    3b16:	6222      	str	r2, [r4, #32]
    3b18:	e77b      	b.n	3a12 <d_substitution+0x72>
    3b1a:	e9d3 7101 	ldrd	r7, r1, [r3, #4]
    3b1e:	e7c6      	b.n	3aae <d_substitution+0x10e>
    3b20:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
    3b24:	e7bf      	b.n	3aa6 <d_substitution+0x106>
    3b26:	2500      	movs	r5, #0
    3b28:	e7d5      	b.n	3ad6 <d_substitution+0x136>
    3b2a:	2100      	movs	r1, #0
    3b2c:	e7ba      	b.n	3aa4 <d_substitution+0x104>
    3b2e:	bf00      	nop
    3b30:	20001948 	.word	0x20001948

00003b34 <d_type>:
    3b34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    3b38:	68c2      	ldr	r2, [r0, #12]
    3b3a:	b083      	sub	sp, #12
    3b3c:	4604      	mov	r4, r0
    3b3e:	4610      	mov	r0, r2
    3b40:	f7ff fd7e 	bl	3640 <next_is_type_qual.isra.0>
    3b44:	2800      	cmp	r0, #0
    3b46:	d166      	bne.n	3c16 <d_type+0xe2>
    3b48:	7813      	ldrb	r3, [r2, #0]
    3b4a:	2b5a      	cmp	r3, #90	; 0x5a
    3b4c:	d831      	bhi.n	3bb2 <d_type+0x7e>
    3b4e:	2b2f      	cmp	r3, #47	; 0x2f
    3b50:	d95c      	bls.n	3c0c <d_type+0xd8>
    3b52:	3b30      	subs	r3, #48	; 0x30
    3b54:	2b2a      	cmp	r3, #42	; 0x2a
    3b56:	d859      	bhi.n	3c0c <d_type+0xd8>
    3b58:	e8df f013 	tbh	[pc, r3, lsl #1]
    3b5c:	008c008c 	.word	0x008c008c
    3b60:	008c008c 	.word	0x008c008c
    3b64:	008c008c 	.word	0x008c008c
    3b68:	008c008c 	.word	0x008c008c
    3b6c:	008c008c 	.word	0x008c008c
    3b70:	00580058 	.word	0x00580058
    3b74:	00580058 	.word	0x00580058
    3b78:	00580058 	.word	0x00580058
    3b7c:	01d60058 	.word	0x01d60058
    3b80:	00d90058 	.word	0x00d90058
    3b84:	005800ed 	.word	0x005800ed
    3b88:	016000e7 	.word	0x016000e7
    3b8c:	00580058 	.word	0x00580058
    3b90:	00580058 	.word	0x00580058
    3b94:	02180058 	.word	0x02180058
    3b98:	00cb008c 	.word	0x00cb008c
    3b9c:	005800bd 	.word	0x005800bd
    3ba0:	019500af 	.word	0x019500af
    3ba4:	01be016e 	.word	0x01be016e
    3ba8:	00580058 	.word	0x00580058
    3bac:	00580058 	.word	0x00580058
    3bb0:	008c      	.short	0x008c
    3bb2:	3b61      	subs	r3, #97	; 0x61
    3bb4:	fa5f fc83 	uxtb.w	ip, r3
    3bb8:	f1bc 0f19 	cmp.w	ip, #25
    3bbc:	d826      	bhi.n	3c0c <d_type+0xd8>
    3bbe:	4dc4      	ldr	r5, [pc, #784]	; (3ed0 <d_type+0x39c>)
    3bc0:	2101      	movs	r1, #1
    3bc2:	fa01 f10c 	lsl.w	r1, r1, ip
    3bc6:	400d      	ands	r5, r1
    3bc8:	b1ed      	cbz	r5, 3c06 <d_type+0xd2>
    3bca:	49c2      	ldr	r1, [pc, #776]	; (3ed4 <d_type+0x3a0>)
    3bcc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
    3bd0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
    3bd4:	e9d4 3505 	ldrd	r3, r5, [r4, #20]
    3bd8:	42ab      	cmp	r3, r5
    3bda:	f280 83c5 	bge.w	4368 <d_type+0x834>
    3bde:	6926      	ldr	r6, [r4, #16]
    3be0:	eb03 0c83 	add.w	ip, r3, r3, lsl #2
    3be4:	eb06 058c 	add.w	r5, r6, ip, lsl #2
    3be8:	3301      	adds	r3, #1
    3bea:	e9c5 0001 	strd	r0, r0, [r5, #4]
    3bee:	6163      	str	r3, [r4, #20]
    3bf0:	2327      	movs	r3, #39	; 0x27
    3bf2:	f806 302c 	strb.w	r3, [r6, ip, lsl #2]
    3bf6:	60e9      	str	r1, [r5, #12]
    3bf8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    3bfa:	6849      	ldr	r1, [r1, #4]
    3bfc:	3201      	adds	r2, #1
    3bfe:	440b      	add	r3, r1
    3c00:	60e2      	str	r2, [r4, #12]
    3c02:	62e3      	str	r3, [r4, #44]	; 0x2c
    3c04:	e003      	b.n	3c0e <d_type+0xda>
    3c06:	f1bc 0f14 	cmp.w	ip, #20
    3c0a:	d048      	beq.n	3c9e <d_type+0x16a>
    3c0c:	2500      	movs	r5, #0
    3c0e:	4628      	mov	r0, r5
    3c10:	b003      	add	sp, #12
    3c12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    3c16:	2200      	movs	r2, #0
    3c18:	a901      	add	r1, sp, #4
    3c1a:	4620      	mov	r0, r4
    3c1c:	f001 fab4 	bl	5188 <d_cv_qualifiers>
    3c20:	4605      	mov	r5, r0
    3c22:	2800      	cmp	r0, #0
    3c24:	d0f2      	beq.n	3c0c <d_type+0xd8>
    3c26:	68e3      	ldr	r3, [r4, #12]
    3c28:	781b      	ldrb	r3, [r3, #0]
    3c2a:	2b46      	cmp	r3, #70	; 0x46
    3c2c:	4620      	mov	r0, r4
    3c2e:	d01e      	beq.n	3c6e <d_type+0x13a>
    3c30:	f7ff ff80 	bl	3b34 <d_type>
    3c34:	6028      	str	r0, [r5, #0]
    3c36:	2800      	cmp	r0, #0
    3c38:	d0e8      	beq.n	3c0c <d_type+0xd8>
    3c3a:	7803      	ldrb	r3, [r0, #0]
    3c3c:	3b1f      	subs	r3, #31
    3c3e:	2b01      	cmp	r3, #1
    3c40:	d805      	bhi.n	3c4e <d_type+0x11a>
    3c42:	9a01      	ldr	r2, [sp, #4]
    3c44:	68c3      	ldr	r3, [r0, #12]
    3c46:	60c2      	str	r2, [r0, #12]
    3c48:	682a      	ldr	r2, [r5, #0]
    3c4a:	9201      	str	r2, [sp, #4]
    3c4c:	602b      	str	r3, [r5, #0]
    3c4e:	9d01      	ldr	r5, [sp, #4]
    3c50:	2d00      	cmp	r5, #0
    3c52:	d0db      	beq.n	3c0c <d_type+0xd8>
    3c54:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
    3c58:	4293      	cmp	r3, r2
    3c5a:	dad7      	bge.n	3c0c <d_type+0xd8>
    3c5c:	69e1      	ldr	r1, [r4, #28]
    3c5e:	1c5a      	adds	r2, r3, #1
    3c60:	4628      	mov	r0, r5
    3c62:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
    3c66:	6222      	str	r2, [r4, #32]
    3c68:	b003      	add	sp, #12
    3c6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    3c6e:	f000 fbfd 	bl	446c <d_function_type>
    3c72:	e7df      	b.n	3c34 <d_type+0x100>
    3c74:	4620      	mov	r0, r4
    3c76:	f001 fd6b 	bl	5750 <d_name>
    3c7a:	4605      	mov	r5, r0
    3c7c:	9001      	str	r0, [sp, #4]
    3c7e:	2d00      	cmp	r5, #0
    3c80:	d0c4      	beq.n	3c0c <d_type+0xd8>
    3c82:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
    3c86:	4293      	cmp	r3, r2
    3c88:	dac0      	bge.n	3c0c <d_type+0xd8>
    3c8a:	69e1      	ldr	r1, [r4, #28]
    3c8c:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
    3c90:	9d01      	ldr	r5, [sp, #4]
    3c92:	1c5a      	adds	r2, r3, #1
    3c94:	4628      	mov	r0, r5
    3c96:	6222      	str	r2, [r4, #32]
    3c98:	b003      	add	sp, #12
    3c9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    3c9e:	3201      	adds	r2, #1
    3ca0:	60e2      	str	r2, [r4, #12]
    3ca2:	4620      	mov	r0, r4
    3ca4:	f7ff fe0c 	bl	38c0 <d_source_name>
    3ca8:	462b      	mov	r3, r5
    3caa:	4602      	mov	r2, r0
    3cac:	2128      	movs	r1, #40	; 0x28
    3cae:	4620      	mov	r0, r4
    3cb0:	f7ff faee 	bl	3290 <d_make_comp>
    3cb4:	4605      	mov	r5, r0
    3cb6:	9001      	str	r0, [sp, #4]
    3cb8:	e7e1      	b.n	3c7e <d_type+0x14a>
    3cba:	3201      	adds	r2, #1
    3cbc:	60e2      	str	r2, [r4, #12]
    3cbe:	4620      	mov	r0, r4
    3cc0:	f7ff ff38 	bl	3b34 <d_type>
    3cc4:	2300      	movs	r3, #0
    3cc6:	4602      	mov	r2, r0
    3cc8:	2123      	movs	r1, #35	; 0x23
    3cca:	4620      	mov	r0, r4
    3ccc:	f7ff fae0 	bl	3290 <d_make_comp>
    3cd0:	4605      	mov	r5, r0
    3cd2:	9001      	str	r0, [sp, #4]
    3cd4:	e7d3      	b.n	3c7e <d_type+0x14a>
    3cd6:	3201      	adds	r2, #1
    3cd8:	60e2      	str	r2, [r4, #12]
    3cda:	4620      	mov	r0, r4
    3cdc:	f7ff ff2a 	bl	3b34 <d_type>
    3ce0:	2300      	movs	r3, #0
    3ce2:	4602      	mov	r2, r0
    3ce4:	2122      	movs	r1, #34	; 0x22
    3ce6:	4620      	mov	r0, r4
    3ce8:	f7ff fad2 	bl	3290 <d_make_comp>
    3cec:	4605      	mov	r5, r0
    3cee:	9001      	str	r0, [sp, #4]
    3cf0:	e7c5      	b.n	3c7e <d_type+0x14a>
    3cf2:	3201      	adds	r2, #1
    3cf4:	60e2      	str	r2, [r4, #12]
    3cf6:	4620      	mov	r0, r4
    3cf8:	f7ff ff1c 	bl	3b34 <d_type>
    3cfc:	2300      	movs	r3, #0
    3cfe:	4602      	mov	r2, r0
    3d00:	2124      	movs	r1, #36	; 0x24
    3d02:	4620      	mov	r0, r4
    3d04:	f7ff fac4 	bl	3290 <d_make_comp>
    3d08:	4605      	mov	r5, r0
    3d0a:	9001      	str	r0, [sp, #4]
    3d0c:	e7b7      	b.n	3c7e <d_type+0x14a>
    3d0e:	3201      	adds	r2, #1
    3d10:	60e2      	str	r2, [r4, #12]
    3d12:	4620      	mov	r0, r4
    3d14:	f7ff ff0e 	bl	3b34 <d_type>
    3d18:	2300      	movs	r3, #0
    3d1a:	4602      	mov	r2, r0
    3d1c:	2125      	movs	r1, #37	; 0x25
    3d1e:	4620      	mov	r0, r4
    3d20:	f7ff fab6 	bl	3290 <d_make_comp>
    3d24:	4605      	mov	r5, r0
    3d26:	9001      	str	r0, [sp, #4]
    3d28:	e7a9      	b.n	3c7e <d_type+0x14a>
    3d2a:	4620      	mov	r0, r4
    3d2c:	f000 fb9e 	bl	446c <d_function_type>
    3d30:	4605      	mov	r5, r0
    3d32:	9001      	str	r0, [sp, #4]
    3d34:	e7a3      	b.n	3c7e <d_type+0x14a>
    3d36:	1c53      	adds	r3, r2, #1
    3d38:	60e3      	str	r3, [r4, #12]
    3d3a:	7853      	ldrb	r3, [r2, #1]
    3d3c:	2b00      	cmp	r3, #0
    3d3e:	f43f af65 	beq.w	3c0c <d_type+0xd8>
    3d42:	1c93      	adds	r3, r2, #2
    3d44:	60e3      	str	r3, [r4, #12]
    3d46:	7853      	ldrb	r3, [r2, #1]
    3d48:	3b46      	subs	r3, #70	; 0x46
    3d4a:	2b30      	cmp	r3, #48	; 0x30
    3d4c:	f63f af5e 	bhi.w	3c0c <d_type+0xd8>
    3d50:	a101      	add	r1, pc, #4	; (adr r1, 3d58 <d_type+0x224>)
    3d52:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
    3d56:	bf00      	nop
    3d58:	00003ff9 	.word	0x00003ff9
    3d5c:	00003c0d 	.word	0x00003c0d
    3d60:	00003c0d 	.word	0x00003c0d
    3d64:	00003c0d 	.word	0x00003c0d
    3d68:	00003c0d 	.word	0x00003c0d
    3d6c:	00003c0d 	.word	0x00003c0d
    3d70:	00003c0d 	.word	0x00003c0d
    3d74:	00003c0d 	.word	0x00003c0d
    3d78:	00003c0d 	.word	0x00003c0d
    3d7c:	00003c0d 	.word	0x00003c0d
    3d80:	00003c0d 	.word	0x00003c0d
    3d84:	00003c0d 	.word	0x00003c0d
    3d88:	00003c0d 	.word	0x00003c0d
    3d8c:	00003c0d 	.word	0x00003c0d
    3d90:	00003fbd 	.word	0x00003fbd
    3d94:	00003c0d 	.word	0x00003c0d
    3d98:	00003c0d 	.word	0x00003c0d
    3d9c:	00003c0d 	.word	0x00003c0d
    3da0:	00003c0d 	.word	0x00003c0d
    3da4:	00003c0d 	.word	0x00003c0d
    3da8:	00003c0d 	.word	0x00003c0d
    3dac:	00003c0d 	.word	0x00003c0d
    3db0:	00003c0d 	.word	0x00003c0d
    3db4:	00003c0d 	.word	0x00003c0d
    3db8:	00003c0d 	.word	0x00003c0d
    3dbc:	00003c0d 	.word	0x00003c0d
    3dc0:	00003c0d 	.word	0x00003c0d
    3dc4:	00004091 	.word	0x00004091
    3dc8:	00003c0d 	.word	0x00003c0d
    3dcc:	00004065 	.word	0x00004065
    3dd0:	0000427f 	.word	0x0000427f
    3dd4:	0000424f 	.word	0x0000424f
    3dd8:	000040ed 	.word	0x000040ed
    3ddc:	00003c0d 	.word	0x00003c0d
    3de0:	000040bd 	.word	0x000040bd
    3de4:	0000421f 	.word	0x0000421f
    3de8:	00003c0d 	.word	0x00003c0d
    3dec:	00003c0d 	.word	0x00003c0d
    3df0:	00003c0d 	.word	0x00003c0d
    3df4:	00003c0d 	.word	0x00003c0d
    3df8:	000041ef 	.word	0x000041ef
    3dfc:	00003c0d 	.word	0x00003c0d
    3e00:	000041d7 	.word	0x000041d7
    3e04:	00003c0d 	.word	0x00003c0d
    3e08:	00003c0d 	.word	0x00003c0d
    3e0c:	000041a7 	.word	0x000041a7
    3e10:	00003fbd 	.word	0x00003fbd
    3e14:	00004177 	.word	0x00004177
    3e18:	0000411d 	.word	0x0000411d
    3e1c:	3201      	adds	r2, #1
    3e1e:	60e2      	str	r2, [r4, #12]
    3e20:	4620      	mov	r0, r4
    3e22:	f7ff fe87 	bl	3b34 <d_type>
    3e26:	2300      	movs	r3, #0
    3e28:	4602      	mov	r2, r0
    3e2a:	2126      	movs	r1, #38	; 0x26
    3e2c:	4620      	mov	r0, r4
    3e2e:	f7ff fa2f 	bl	3290 <d_make_comp>
    3e32:	4605      	mov	r5, r0
    3e34:	9001      	str	r0, [sp, #4]
    3e36:	e722      	b.n	3c7e <d_type+0x14a>
    3e38:	4620      	mov	r0, r4
    3e3a:	f7ff fcd5 	bl	37e8 <d_template_param>
    3e3e:	68e6      	ldr	r6, [r4, #12]
    3e40:	9001      	str	r0, [sp, #4]
    3e42:	7833      	ldrb	r3, [r6, #0]
    3e44:	2b49      	cmp	r3, #73	; 0x49
    3e46:	4605      	mov	r5, r0
    3e48:	f47f af19 	bne.w	3c7e <d_type+0x14a>
    3e4c:	6b63      	ldr	r3, [r4, #52]	; 0x34
    3e4e:	2b00      	cmp	r3, #0
    3e50:	f040 8257 	bne.w	4302 <d_type+0x7ce>
    3e54:	2800      	cmp	r0, #0
    3e56:	f43f aed9 	beq.w	3c0c <d_type+0xd8>
    3e5a:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
    3e5e:	428a      	cmp	r2, r1
    3e60:	f6bf aed4 	bge.w	3c0c <d_type+0xd8>
    3e64:	69e1      	ldr	r1, [r4, #28]
    3e66:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
    3e6a:	3201      	adds	r2, #1
    3e6c:	6222      	str	r2, [r4, #32]
    3e6e:	7832      	ldrb	r2, [r6, #0]
    3e70:	3a49      	subs	r2, #73	; 0x49
    3e72:	2a01      	cmp	r2, #1
    3e74:	d805      	bhi.n	3e82 <d_type+0x34e>
    3e76:	3601      	adds	r6, #1
    3e78:	60e6      	str	r6, [r4, #12]
    3e7a:	4620      	mov	r0, r4
    3e7c:	f000 fe0c 	bl	4a98 <d_template_args_1>
    3e80:	4603      	mov	r3, r0
    3e82:	462a      	mov	r2, r5
    3e84:	e01c      	b.n	3ec0 <d_type+0x38c>
    3e86:	7853      	ldrb	r3, [r2, #1]
    3e88:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    3e8c:	2a09      	cmp	r2, #9
    3e8e:	d905      	bls.n	3e9c <d_type+0x368>
    3e90:	2b5f      	cmp	r3, #95	; 0x5f
    3e92:	d003      	beq.n	3e9c <d_type+0x368>
    3e94:	3b41      	subs	r3, #65	; 0x41
    3e96:	2b19      	cmp	r3, #25
    3e98:	f200 8226 	bhi.w	42e8 <d_type+0x7b4>
    3e9c:	2100      	movs	r1, #0
    3e9e:	4620      	mov	r0, r4
    3ea0:	f7ff fd7e 	bl	39a0 <d_substitution>
    3ea4:	68e3      	ldr	r3, [r4, #12]
    3ea6:	9001      	str	r0, [sp, #4]
    3ea8:	781a      	ldrb	r2, [r3, #0]
    3eaa:	2a49      	cmp	r2, #73	; 0x49
    3eac:	4605      	mov	r5, r0
    3eae:	f47f aeae 	bne.w	3c0e <d_type+0xda>
    3eb2:	3301      	adds	r3, #1
    3eb4:	60e3      	str	r3, [r4, #12]
    3eb6:	4620      	mov	r0, r4
    3eb8:	f000 fdee 	bl	4a98 <d_template_args_1>
    3ebc:	462a      	mov	r2, r5
    3ebe:	4603      	mov	r3, r0
    3ec0:	2104      	movs	r1, #4
    3ec2:	4620      	mov	r0, r4
    3ec4:	f7ff f9e4 	bl	3290 <d_make_comp>
    3ec8:	4605      	mov	r5, r0
    3eca:	9001      	str	r0, [sp, #4]
    3ecc:	e6d7      	b.n	3c7e <d_type+0x14a>
    3ece:	bf00      	nop
    3ed0:	03ec7bff 	.word	0x03ec7bff
    3ed4:	20000af8 	.word	0x20000af8
    3ed8:	3201      	adds	r2, #1
    3eda:	60e2      	str	r2, [r4, #12]
    3edc:	4620      	mov	r0, r4
    3ede:	f7ff fcef 	bl	38c0 <d_source_name>
    3ee2:	68e3      	ldr	r3, [r4, #12]
    3ee4:	9001      	str	r0, [sp, #4]
    3ee6:	781a      	ldrb	r2, [r3, #0]
    3ee8:	2a49      	cmp	r2, #73	; 0x49
    3eea:	4605      	mov	r5, r0
    3eec:	f000 81e1 	beq.w	42b2 <d_type+0x77e>
    3ef0:	4620      	mov	r0, r4
    3ef2:	f7ff fe1f 	bl	3b34 <d_type>
    3ef6:	462b      	mov	r3, r5
    3ef8:	4602      	mov	r2, r0
    3efa:	2121      	movs	r1, #33	; 0x21
    3efc:	4620      	mov	r0, r4
    3efe:	f7ff f9c7 	bl	3290 <d_make_comp>
    3f02:	4605      	mov	r5, r0
    3f04:	9001      	str	r0, [sp, #4]
    3f06:	e6ba      	b.n	3c7e <d_type+0x14a>
    3f08:	1c55      	adds	r5, r2, #1
    3f0a:	60e5      	str	r5, [r4, #12]
    3f0c:	7853      	ldrb	r3, [r2, #1]
    3f0e:	2b5f      	cmp	r3, #95	; 0x5f
    3f10:	f000 81cd 	beq.w	42ae <d_type+0x77a>
    3f14:	3b30      	subs	r3, #48	; 0x30
    3f16:	2b09      	cmp	r3, #9
    3f18:	f200 81d8 	bhi.w	42cc <d_type+0x798>
    3f1c:	462b      	mov	r3, r5
    3f1e:	469c      	mov	ip, r3
    3f20:	3301      	adds	r3, #1
    3f22:	60e3      	str	r3, [r4, #12]
    3f24:	7819      	ldrb	r1, [r3, #0]
    3f26:	3930      	subs	r1, #48	; 0x30
    3f28:	2909      	cmp	r1, #9
    3f2a:	d9f8      	bls.n	3f1e <d_type+0x3ea>
    3f2c:	e9d4 1005 	ldrd	r1, r0, [r4, #20]
    3f30:	4281      	cmp	r1, r0
    3f32:	ebac 0202 	sub.w	r2, ip, r2
    3f36:	f6bf ae69 	bge.w	3c0c <d_type+0xd8>
    3f3a:	6927      	ldr	r7, [r4, #16]
    3f3c:	eb01 0081 	add.w	r0, r1, r1, lsl #2
    3f40:	eb07 0680 	add.w	r6, r7, r0, lsl #2
    3f44:	ea4f 0e80 	mov.w	lr, r0, lsl #2
    3f48:	2000      	movs	r0, #0
    3f4a:	3101      	adds	r1, #1
    3f4c:	4282      	cmp	r2, r0
    3f4e:	e9c6 0001 	strd	r0, r0, [r6, #4]
    3f52:	6161      	str	r1, [r4, #20]
    3f54:	f77f ae5a 	ble.w	3c0c <d_type+0xd8>
    3f58:	e9c6 0001 	strd	r0, r0, [r6, #4]
    3f5c:	f807 000e 	strb.w	r0, [r7, lr]
    3f60:	e9c6 5203 	strd	r5, r2, [r6, #12]
    3f64:	f89c 2001 	ldrb.w	r2, [ip, #1]
    3f68:	461d      	mov	r5, r3
    3f6a:	2a5f      	cmp	r2, #95	; 0x5f
    3f6c:	f47f ae4e 	bne.w	3c0c <d_type+0xd8>
    3f70:	3501      	adds	r5, #1
    3f72:	60e5      	str	r5, [r4, #12]
    3f74:	4620      	mov	r0, r4
    3f76:	f7ff fddd 	bl	3b34 <d_type>
    3f7a:	4632      	mov	r2, r6
    3f7c:	4603      	mov	r3, r0
    3f7e:	212a      	movs	r1, #42	; 0x2a
    3f80:	4620      	mov	r0, r4
    3f82:	f7ff f985 	bl	3290 <d_make_comp>
    3f86:	4605      	mov	r5, r0
    3f88:	9001      	str	r0, [sp, #4]
    3f8a:	e678      	b.n	3c7e <d_type+0x14a>
    3f8c:	3201      	adds	r2, #1
    3f8e:	60e2      	str	r2, [r4, #12]
    3f90:	4620      	mov	r0, r4
    3f92:	f7ff fdcf 	bl	3b34 <d_type>
    3f96:	4605      	mov	r5, r0
    3f98:	2800      	cmp	r0, #0
    3f9a:	f43f ae37 	beq.w	3c0c <d_type+0xd8>
    3f9e:	4620      	mov	r0, r4
    3fa0:	f7ff fdc8 	bl	3b34 <d_type>
    3fa4:	4603      	mov	r3, r0
    3fa6:	2800      	cmp	r0, #0
    3fa8:	f43f ae30 	beq.w	3c0c <d_type+0xd8>
    3fac:	462a      	mov	r2, r5
    3fae:	212b      	movs	r1, #43	; 0x2b
    3fb0:	4620      	mov	r0, r4
    3fb2:	f7ff f96d 	bl	3290 <d_make_comp>
    3fb6:	4605      	mov	r5, r0
    3fb8:	9001      	str	r0, [sp, #4]
    3fba:	e660      	b.n	3c7e <d_type+0x14a>
    3fbc:	2301      	movs	r3, #1
    3fbe:	6b25      	ldr	r5, [r4, #48]	; 0x30
    3fc0:	6323      	str	r3, [r4, #48]	; 0x30
    3fc2:	4620      	mov	r0, r4
    3fc4:	f000 fe30 	bl	4c28 <d_expression_1>
    3fc8:	6325      	str	r5, [r4, #48]	; 0x30
    3fca:	4602      	mov	r2, r0
    3fcc:	2300      	movs	r3, #0
    3fce:	2144      	movs	r1, #68	; 0x44
    3fd0:	4620      	mov	r0, r4
    3fd2:	f7ff f95d 	bl	3290 <d_make_comp>
    3fd6:	4605      	mov	r5, r0
    3fd8:	9001      	str	r0, [sp, #4]
    3fda:	2800      	cmp	r0, #0
    3fdc:	f43f ae16 	beq.w	3c0c <d_type+0xd8>
    3fe0:	68e3      	ldr	r3, [r4, #12]
    3fe2:	781a      	ldrb	r2, [r3, #0]
    3fe4:	2a00      	cmp	r2, #0
    3fe6:	f43f ae11 	beq.w	3c0c <d_type+0xd8>
    3fea:	1c5a      	adds	r2, r3, #1
    3fec:	60e2      	str	r2, [r4, #12]
    3fee:	781b      	ldrb	r3, [r3, #0]
    3ff0:	2b45      	cmp	r3, #69	; 0x45
    3ff2:	f47f ae0b 	bne.w	3c0c <d_type+0xd8>
    3ff6:	e644      	b.n	3c82 <d_type+0x14e>
    3ff8:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
    3ffc:	428b      	cmp	r3, r1
    3ffe:	f280 81b5 	bge.w	436c <d_type+0x838>
    4002:	6921      	ldr	r1, [r4, #16]
    4004:	eb03 0083 	add.w	r0, r3, r3, lsl #2
    4008:	eb01 0580 	add.w	r5, r1, r0, lsl #2
    400c:	3301      	adds	r3, #1
    400e:	2600      	movs	r6, #0
    4010:	e9c5 6601 	strd	r6, r6, [r5, #4]
    4014:	6163      	str	r3, [r4, #20]
    4016:	232c      	movs	r3, #44	; 0x2c
    4018:	f801 3020 	strb.w	r3, [r1, r0, lsl #2]
    401c:	7893      	ldrb	r3, [r2, #2]
    401e:	9501      	str	r5, [sp, #4]
    4020:	3b30      	subs	r3, #48	; 0x30
    4022:	b2db      	uxtb	r3, r3
    4024:	2b09      	cmp	r3, #9
    4026:	bf94      	ite	ls
    4028:	2301      	movls	r3, #1
    402a:	4633      	movhi	r3, r6
    402c:	822b      	strh	r3, [r5, #16]
    402e:	d802      	bhi.n	4036 <d_type+0x502>
    4030:	4620      	mov	r0, r4
    4032:	f7ff f9a5 	bl	3380 <d_number>
    4036:	4620      	mov	r0, r4
    4038:	f7ff fd7c 	bl	3b34 <d_type>
    403c:	60e8      	str	r0, [r5, #12]
    403e:	2800      	cmp	r0, #0
    4040:	f43f ade4 	beq.w	3c0c <d_type+0xd8>
    4044:	4620      	mov	r0, r4
    4046:	f7ff f99b 	bl	3380 <d_number>
    404a:	68e2      	ldr	r2, [r4, #12]
    404c:	7813      	ldrb	r3, [r2, #0]
    404e:	b113      	cbz	r3, 4056 <d_type+0x522>
    4050:	1c53      	adds	r3, r2, #1
    4052:	60e3      	str	r3, [r4, #12]
    4054:	7813      	ldrb	r3, [r2, #0]
    4056:	f1a3 0373 	sub.w	r3, r3, #115	; 0x73
    405a:	fab3 f383 	clz	r3, r3
    405e:	095b      	lsrs	r3, r3, #5
    4060:	826b      	strh	r3, [r5, #18]
    4062:	e5d4      	b.n	3c0e <d_type+0xda>
    4064:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4068:	4293      	cmp	r3, r2
    406a:	f6bf adcf 	bge.w	3c0c <d_type+0xd8>
    406e:	6922      	ldr	r2, [r4, #16]
    4070:	49c0      	ldr	r1, [pc, #768]	; (4374 <d_type+0x840>)
    4072:	eb03 0583 	add.w	r5, r3, r3, lsl #2
    4076:	00a8      	lsls	r0, r5, #2
    4078:	3301      	adds	r3, #1
    407a:	6163      	str	r3, [r4, #20]
    407c:	eb02 0585 	add.w	r5, r2, r5, lsl #2
    4080:	2300      	movs	r3, #0
    4082:	e9c5 3301 	strd	r3, r3, [r5, #4]
    4086:	5413      	strb	r3, [r2, r0]
    4088:	230e      	movs	r3, #14
    408a:	e9c5 1303 	strd	r1, r3, [r5, #12]
    408e:	e5be      	b.n	3c0e <d_type+0xda>
    4090:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4094:	4293      	cmp	r3, r2
    4096:	f6bf adb9 	bge.w	3c0c <d_type+0xd8>
    409a:	6922      	ldr	r2, [r4, #16]
    409c:	49b6      	ldr	r1, [pc, #728]	; (4378 <d_type+0x844>)
    409e:	eb03 0583 	add.w	r5, r3, r3, lsl #2
    40a2:	00a8      	lsls	r0, r5, #2
    40a4:	3301      	adds	r3, #1
    40a6:	6163      	str	r3, [r4, #20]
    40a8:	eb02 0585 	add.w	r5, r2, r5, lsl #2
    40ac:	2300      	movs	r3, #0
    40ae:	e9c5 3301 	strd	r3, r3, [r5, #4]
    40b2:	5413      	strb	r3, [r2, r0]
    40b4:	2304      	movs	r3, #4
    40b6:	e9c5 1303 	strd	r1, r3, [r5, #12]
    40ba:	e5a8      	b.n	3c0e <d_type+0xda>
    40bc:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    40c0:	4293      	cmp	r3, r2
    40c2:	f280 816b 	bge.w	439c <d_type+0x868>
    40c6:	6922      	ldr	r2, [r4, #16]
    40c8:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    40cc:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    40d0:	3301      	adds	r3, #1
    40d2:	2000      	movs	r0, #0
    40d4:	e9c5 0001 	strd	r0, r0, [r5, #4]
    40d8:	6163      	str	r3, [r4, #20]
    40da:	2327      	movs	r3, #39	; 0x27
    40dc:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    40e0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    40e2:	4aa6      	ldr	r2, [pc, #664]	; (437c <d_type+0x848>)
    40e4:	60ea      	str	r2, [r5, #12]
    40e6:	3304      	adds	r3, #4
    40e8:	62e3      	str	r3, [r4, #44]	; 0x2c
    40ea:	e590      	b.n	3c0e <d_type+0xda>
    40ec:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    40f0:	4293      	cmp	r3, r2
    40f2:	f280 8153 	bge.w	439c <d_type+0x868>
    40f6:	6922      	ldr	r2, [r4, #16]
    40f8:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    40fc:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4100:	3301      	adds	r3, #1
    4102:	2000      	movs	r0, #0
    4104:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4108:	6163      	str	r3, [r4, #20]
    410a:	2327      	movs	r3, #39	; 0x27
    410c:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    4110:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4112:	4a9b      	ldr	r2, [pc, #620]	; (4380 <d_type+0x84c>)
    4114:	60ea      	str	r2, [r5, #12]
    4116:	3309      	adds	r3, #9
    4118:	62e3      	str	r3, [r4, #44]	; 0x2c
    411a:	e578      	b.n	3c0e <d_type+0xda>
    411c:	7893      	ldrb	r3, [r2, #2]
    411e:	2b5f      	cmp	r3, #95	; 0x5f
    4120:	f000 8114 	beq.w	434c <d_type+0x818>
    4124:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4128:	4293      	cmp	r3, r2
    412a:	f6bf ad6f 	bge.w	3c0c <d_type+0xd8>
    412e:	6922      	ldr	r2, [r4, #16]
    4130:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4134:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4138:	3301      	adds	r3, #1
    413a:	2000      	movs	r0, #0
    413c:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4140:	6163      	str	r3, [r4, #20]
    4142:	2343      	movs	r3, #67	; 0x43
    4144:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    4148:	4620      	mov	r0, r4
    414a:	f7ff f919 	bl	3380 <d_number>
    414e:	60e8      	str	r0, [r5, #12]
    4150:	68e3      	ldr	r3, [r4, #12]
    4152:	781a      	ldrb	r2, [r3, #0]
    4154:	2a5f      	cmp	r2, #95	; 0x5f
    4156:	f47f ad59 	bne.w	3c0c <d_type+0xd8>
    415a:	3301      	adds	r3, #1
    415c:	60e3      	str	r3, [r4, #12]
    415e:	4620      	mov	r0, r4
    4160:	f7ff fce8 	bl	3b34 <d_type>
    4164:	462a      	mov	r2, r5
    4166:	4603      	mov	r3, r0
    4168:	212d      	movs	r1, #45	; 0x2d
    416a:	4620      	mov	r0, r4
    416c:	f7ff f890 	bl	3290 <d_make_comp>
    4170:	4605      	mov	r5, r0
    4172:	9001      	str	r0, [sp, #4]
    4174:	e583      	b.n	3c7e <d_type+0x14a>
    4176:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    417a:	4293      	cmp	r3, r2
    417c:	f280 810e 	bge.w	439c <d_type+0x868>
    4180:	6922      	ldr	r2, [r4, #16]
    4182:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4186:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    418a:	3301      	adds	r3, #1
    418c:	2000      	movs	r0, #0
    418e:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4192:	6163      	str	r3, [r4, #20]
    4194:	2327      	movs	r3, #39	; 0x27
    4196:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    419a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    419c:	4a79      	ldr	r2, [pc, #484]	; (4384 <d_type+0x850>)
    419e:	60ea      	str	r2, [r5, #12]
    41a0:	3307      	adds	r3, #7
    41a2:	62e3      	str	r3, [r4, #44]	; 0x2c
    41a4:	e533      	b.n	3c0e <d_type+0xda>
    41a6:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    41aa:	4293      	cmp	r3, r2
    41ac:	f280 80f6 	bge.w	439c <d_type+0x868>
    41b0:	6922      	ldr	r2, [r4, #16]
    41b2:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    41b6:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    41ba:	3301      	adds	r3, #1
    41bc:	2000      	movs	r0, #0
    41be:	e9c5 0001 	strd	r0, r0, [r5, #4]
    41c2:	6163      	str	r3, [r4, #20]
    41c4:	2327      	movs	r3, #39	; 0x27
    41c6:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    41ca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    41cc:	4a6e      	ldr	r2, [pc, #440]	; (4388 <d_type+0x854>)
    41ce:	60ea      	str	r2, [r5, #12]
    41d0:	3308      	adds	r3, #8
    41d2:	62e3      	str	r3, [r4, #44]	; 0x2c
    41d4:	e51b      	b.n	3c0e <d_type+0xda>
    41d6:	4620      	mov	r0, r4
    41d8:	f7ff fcac 	bl	3b34 <d_type>
    41dc:	2300      	movs	r3, #0
    41de:	4602      	mov	r2, r0
    41e0:	214c      	movs	r1, #76	; 0x4c
    41e2:	4620      	mov	r0, r4
    41e4:	f7ff f854 	bl	3290 <d_make_comp>
    41e8:	4605      	mov	r5, r0
    41ea:	9001      	str	r0, [sp, #4]
    41ec:	e547      	b.n	3c7e <d_type+0x14a>
    41ee:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    41f2:	4293      	cmp	r3, r2
    41f4:	f280 80d2 	bge.w	439c <d_type+0x868>
    41f8:	6922      	ldr	r2, [r4, #16]
    41fa:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    41fe:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4202:	3301      	adds	r3, #1
    4204:	2000      	movs	r0, #0
    4206:	e9c5 0001 	strd	r0, r0, [r5, #4]
    420a:	6163      	str	r3, [r4, #20]
    420c:	2327      	movs	r3, #39	; 0x27
    420e:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    4212:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4214:	4a5d      	ldr	r2, [pc, #372]	; (438c <d_type+0x858>)
    4216:	60ea      	str	r2, [r5, #12]
    4218:	3311      	adds	r3, #17
    421a:	62e3      	str	r3, [r4, #44]	; 0x2c
    421c:	e4f7      	b.n	3c0e <d_type+0xda>
    421e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4222:	4293      	cmp	r3, r2
    4224:	f280 80ba 	bge.w	439c <d_type+0x868>
    4228:	6922      	ldr	r2, [r4, #16]
    422a:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    422e:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4232:	3301      	adds	r3, #1
    4234:	2000      	movs	r0, #0
    4236:	e9c5 0001 	strd	r0, r0, [r5, #4]
    423a:	6163      	str	r3, [r4, #20]
    423c:	2327      	movs	r3, #39	; 0x27
    423e:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    4242:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4244:	4a52      	ldr	r2, [pc, #328]	; (4390 <d_type+0x85c>)
    4246:	60ea      	str	r2, [r5, #12]
    4248:	3308      	adds	r3, #8
    424a:	62e3      	str	r3, [r4, #44]	; 0x2c
    424c:	e4df      	b.n	3c0e <d_type+0xda>
    424e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4252:	4293      	cmp	r3, r2
    4254:	f280 80a2 	bge.w	439c <d_type+0x868>
    4258:	6922      	ldr	r2, [r4, #16]
    425a:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    425e:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4262:	3301      	adds	r3, #1
    4264:	2000      	movs	r0, #0
    4266:	e9c5 0001 	strd	r0, r0, [r5, #4]
    426a:	6163      	str	r3, [r4, #20]
    426c:	2327      	movs	r3, #39	; 0x27
    426e:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    4272:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4274:	4a47      	ldr	r2, [pc, #284]	; (4394 <d_type+0x860>)
    4276:	60ea      	str	r2, [r5, #12]
    4278:	330a      	adds	r3, #10
    427a:	62e3      	str	r3, [r4, #44]	; 0x2c
    427c:	e4c7      	b.n	3c0e <d_type+0xda>
    427e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4282:	4293      	cmp	r3, r2
    4284:	f280 808a 	bge.w	439c <d_type+0x868>
    4288:	6922      	ldr	r2, [r4, #16]
    428a:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    428e:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4292:	3301      	adds	r3, #1
    4294:	2000      	movs	r0, #0
    4296:	e9c5 0001 	strd	r0, r0, [r5, #4]
    429a:	6163      	str	r3, [r4, #20]
    429c:	2327      	movs	r3, #39	; 0x27
    429e:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    42a2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    42a4:	4a3c      	ldr	r2, [pc, #240]	; (4398 <d_type+0x864>)
    42a6:	60ea      	str	r2, [r5, #12]
    42a8:	3309      	adds	r3, #9
    42aa:	62e3      	str	r3, [r4, #44]	; 0x2c
    42ac:	e4af      	b.n	3c0e <d_type+0xda>
    42ae:	2600      	movs	r6, #0
    42b0:	e65e      	b.n	3f70 <d_type+0x43c>
    42b2:	3301      	adds	r3, #1
    42b4:	60e3      	str	r3, [r4, #12]
    42b6:	4620      	mov	r0, r4
    42b8:	f000 fbee 	bl	4a98 <d_template_args_1>
    42bc:	462a      	mov	r2, r5
    42be:	4603      	mov	r3, r0
    42c0:	2104      	movs	r1, #4
    42c2:	4620      	mov	r0, r4
    42c4:	f7fe ffe4 	bl	3290 <d_make_comp>
    42c8:	4605      	mov	r5, r0
    42ca:	e611      	b.n	3ef0 <d_type+0x3bc>
    42cc:	2301      	movs	r3, #1
    42ce:	6b25      	ldr	r5, [r4, #48]	; 0x30
    42d0:	6323      	str	r3, [r4, #48]	; 0x30
    42d2:	4620      	mov	r0, r4
    42d4:	f000 fca8 	bl	4c28 <d_expression_1>
    42d8:	6325      	str	r5, [r4, #48]	; 0x30
    42da:	4606      	mov	r6, r0
    42dc:	2800      	cmp	r0, #0
    42de:	f43f ac95 	beq.w	3c0c <d_type+0xd8>
    42e2:	68e5      	ldr	r5, [r4, #12]
    42e4:	782a      	ldrb	r2, [r5, #0]
    42e6:	e640      	b.n	3f6a <d_type+0x436>
    42e8:	4620      	mov	r0, r4
    42ea:	f001 fa31 	bl	5750 <d_name>
    42ee:	4605      	mov	r5, r0
    42f0:	9001      	str	r0, [sp, #4]
    42f2:	2800      	cmp	r0, #0
    42f4:	f43f ac8a 	beq.w	3c0c <d_type+0xd8>
    42f8:	7803      	ldrb	r3, [r0, #0]
    42fa:	2b18      	cmp	r3, #24
    42fc:	f47f acc1 	bne.w	3c82 <d_type+0x14e>
    4300:	e485      	b.n	3c0e <d_type+0xda>
    4302:	1c73      	adds	r3, r6, #1
    4304:	60e3      	str	r3, [r4, #12]
    4306:	4620      	mov	r0, r4
    4308:	f8d4 9014 	ldr.w	r9, [r4, #20]
    430c:	f8d4 8020 	ldr.w	r8, [r4, #32]
    4310:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    4312:	f000 fbc1 	bl	4a98 <d_template_args_1>
    4316:	68e3      	ldr	r3, [r4, #12]
    4318:	781b      	ldrb	r3, [r3, #0]
    431a:	2b49      	cmp	r3, #73	; 0x49
    431c:	d006      	beq.n	432c <d_type+0x7f8>
    431e:	60e6      	str	r6, [r4, #12]
    4320:	f8c4 9014 	str.w	r9, [r4, #20]
    4324:	f8c4 8020 	str.w	r8, [r4, #32]
    4328:	62e7      	str	r7, [r4, #44]	; 0x2c
    432a:	e4a8      	b.n	3c7e <d_type+0x14a>
    432c:	2d00      	cmp	r5, #0
    432e:	f43f ac6d 	beq.w	3c0c <d_type+0xd8>
    4332:	e9d4 1308 	ldrd	r1, r3, [r4, #32]
    4336:	4299      	cmp	r1, r3
    4338:	f6bf ac68 	bge.w	3c0c <d_type+0xd8>
    433c:	69e2      	ldr	r2, [r4, #28]
    433e:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
    4342:	3101      	adds	r1, #1
    4344:	4603      	mov	r3, r0
    4346:	462a      	mov	r2, r5
    4348:	6221      	str	r1, [r4, #32]
    434a:	e5b9      	b.n	3ec0 <d_type+0x38c>
    434c:	3203      	adds	r2, #3
    434e:	2301      	movs	r3, #1
    4350:	6b25      	ldr	r5, [r4, #48]	; 0x30
    4352:	60e2      	str	r2, [r4, #12]
    4354:	6323      	str	r3, [r4, #48]	; 0x30
    4356:	4620      	mov	r0, r4
    4358:	f000 fc66 	bl	4c28 <d_expression_1>
    435c:	6325      	str	r5, [r4, #48]	; 0x30
    435e:	4605      	mov	r5, r0
    4360:	2800      	cmp	r0, #0
    4362:	f47f aef5 	bne.w	4150 <d_type+0x61c>
    4366:	e451      	b.n	3c0c <d_type+0xd8>
    4368:	68c3      	ldr	r3, [r0, #12]
    436a:	deff      	udf	#255	; 0xff
    436c:	2300      	movs	r3, #0
    436e:	701b      	strb	r3, [r3, #0]
    4370:	deff      	udf	#255	; 0xff
    4372:	bf00      	nop
    4374:	200015ac 	.word	0x200015ac
    4378:	200015a4 	.word	0x200015a4
    437c:	20000d3c 	.word	0x20000d3c
    4380:	20000d00 	.word	0x20000d00
    4384:	20000d50 	.word	0x20000d50
    4388:	20000d64 	.word	0x20000d64
    438c:	20000d8c 	.word	0x20000d8c
    4390:	20000d78 	.word	0x20000d78
    4394:	20000d28 	.word	0x20000d28
    4398:	20000d14 	.word	0x20000d14
    439c:	2300      	movs	r3, #0
    439e:	68db      	ldr	r3, [r3, #12]
    43a0:	deff      	udf	#255	; 0xff
    43a2:	bf00      	nop

000043a4 <d_parmlist>:
    43a4:	b530      	push	{r4, r5, lr}
    43a6:	68c2      	ldr	r2, [r0, #12]
    43a8:	b083      	sub	sp, #12
    43aa:	2300      	movs	r3, #0
    43ac:	9301      	str	r3, [sp, #4]
    43ae:	7813      	ldrb	r3, [r2, #0]
    43b0:	2b00      	cmp	r3, #0
    43b2:	d034      	beq.n	441e <d_parmlist+0x7a>
    43b4:	4604      	mov	r4, r0
    43b6:	ad01      	add	r5, sp, #4
    43b8:	2b4f      	cmp	r3, #79	; 0x4f
    43ba:	d00c      	beq.n	43d6 <d_parmlist+0x32>
    43bc:	d809      	bhi.n	43d2 <d_parmlist+0x2e>
    43be:	2b2e      	cmp	r3, #46	; 0x2e
    43c0:	d001      	beq.n	43c6 <d_parmlist+0x22>
    43c2:	2b45      	cmp	r3, #69	; 0x45
    43c4:	d10a      	bne.n	43dc <d_parmlist+0x38>
    43c6:	9801      	ldr	r0, [sp, #4]
    43c8:	b348      	cbz	r0, 441e <d_parmlist+0x7a>
    43ca:	6903      	ldr	r3, [r0, #16]
    43cc:	b1cb      	cbz	r3, 4402 <d_parmlist+0x5e>
    43ce:	b003      	add	sp, #12
    43d0:	bd30      	pop	{r4, r5, pc}
    43d2:	2b52      	cmp	r3, #82	; 0x52
    43d4:	d102      	bne.n	43dc <d_parmlist+0x38>
    43d6:	7853      	ldrb	r3, [r2, #1]
    43d8:	2b45      	cmp	r3, #69	; 0x45
    43da:	d0f4      	beq.n	43c6 <d_parmlist+0x22>
    43dc:	4620      	mov	r0, r4
    43de:	f7ff fba9 	bl	3b34 <d_type>
    43e2:	4602      	mov	r2, r0
    43e4:	2300      	movs	r3, #0
    43e6:	212e      	movs	r1, #46	; 0x2e
    43e8:	4620      	mov	r0, r4
    43ea:	b1c2      	cbz	r2, 441e <d_parmlist+0x7a>
    43ec:	f7fe ff50 	bl	3290 <d_make_comp>
    43f0:	6028      	str	r0, [r5, #0]
    43f2:	b1a0      	cbz	r0, 441e <d_parmlist+0x7a>
    43f4:	68e2      	ldr	r2, [r4, #12]
    43f6:	7813      	ldrb	r3, [r2, #0]
    43f8:	f100 0510 	add.w	r5, r0, #16
    43fc:	2b00      	cmp	r3, #0
    43fe:	d1db      	bne.n	43b8 <d_parmlist+0x14>
    4400:	e7e1      	b.n	43c6 <d_parmlist+0x22>
    4402:	68c2      	ldr	r2, [r0, #12]
    4404:	7811      	ldrb	r1, [r2, #0]
    4406:	2927      	cmp	r1, #39	; 0x27
    4408:	d1e1      	bne.n	43ce <d_parmlist+0x2a>
    440a:	68d2      	ldr	r2, [r2, #12]
    440c:	7c11      	ldrb	r1, [r2, #16]
    440e:	2909      	cmp	r1, #9
    4410:	d1dd      	bne.n	43ce <d_parmlist+0x2a>
    4412:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    4414:	6852      	ldr	r2, [r2, #4]
    4416:	1a89      	subs	r1, r1, r2
    4418:	62e1      	str	r1, [r4, #44]	; 0x2c
    441a:	60c3      	str	r3, [r0, #12]
    441c:	e7d7      	b.n	43ce <d_parmlist+0x2a>
    441e:	2000      	movs	r0, #0
    4420:	b003      	add	sp, #12
    4422:	bd30      	pop	{r4, r5, pc}

00004424 <d_bare_function_type>:
    4424:	b570      	push	{r4, r5, r6, lr}
    4426:	68c3      	ldr	r3, [r0, #12]
    4428:	781a      	ldrb	r2, [r3, #0]
    442a:	2a4a      	cmp	r2, #74	; 0x4a
    442c:	4605      	mov	r5, r0
    442e:	d01a      	beq.n	4466 <d_bare_function_type+0x42>
    4430:	b181      	cbz	r1, 4454 <d_bare_function_type+0x30>
    4432:	4628      	mov	r0, r5
    4434:	f7ff fb7e 	bl	3b34 <d_type>
    4438:	4604      	mov	r4, r0
    443a:	b190      	cbz	r0, 4462 <d_bare_function_type+0x3e>
    443c:	4628      	mov	r0, r5
    443e:	f7ff ffb1 	bl	43a4 <d_parmlist>
    4442:	4603      	mov	r3, r0
    4444:	b168      	cbz	r0, 4462 <d_bare_function_type+0x3e>
    4446:	4622      	mov	r2, r4
    4448:	4628      	mov	r0, r5
    444a:	2129      	movs	r1, #41	; 0x29
    444c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    4450:	f7fe bf1e 	b.w	3290 <d_make_comp>
    4454:	4628      	mov	r0, r5
    4456:	460c      	mov	r4, r1
    4458:	f7ff ffa4 	bl	43a4 <d_parmlist>
    445c:	4603      	mov	r3, r0
    445e:	2800      	cmp	r0, #0
    4460:	d1f1      	bne.n	4446 <d_bare_function_type+0x22>
    4462:	2000      	movs	r0, #0
    4464:	bd70      	pop	{r4, r5, r6, pc}
    4466:	3301      	adds	r3, #1
    4468:	60c3      	str	r3, [r0, #12]
    446a:	e7e2      	b.n	4432 <d_bare_function_type+0xe>

0000446c <d_function_type>:
    446c:	b510      	push	{r4, lr}
    446e:	4604      	mov	r4, r0
    4470:	6880      	ldr	r0, [r0, #8]
    4472:	f410 2080 	ands.w	r0, r0, #262144	; 0x40000
    4476:	d10b      	bne.n	4490 <d_function_type+0x24>
    4478:	6be2      	ldr	r2, [r4, #60]	; 0x3c
    447a:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
    447e:	d806      	bhi.n	448e <d_function_type+0x22>
    4480:	1c51      	adds	r1, r2, #1
    4482:	68e3      	ldr	r3, [r4, #12]
    4484:	63e1      	str	r1, [r4, #60]	; 0x3c
    4486:	7819      	ldrb	r1, [r3, #0]
    4488:	2946      	cmp	r1, #70	; 0x46
    448a:	d007      	beq.n	449c <d_function_type+0x30>
    448c:	63e2      	str	r2, [r4, #60]	; 0x3c
    448e:	bd10      	pop	{r4, pc}
    4490:	68e3      	ldr	r3, [r4, #12]
    4492:	781a      	ldrb	r2, [r3, #0]
    4494:	2a46      	cmp	r2, #70	; 0x46
    4496:	d001      	beq.n	449c <d_function_type+0x30>
    4498:	2000      	movs	r0, #0
    449a:	bd10      	pop	{r4, pc}
    449c:	1c5a      	adds	r2, r3, #1
    449e:	60e2      	str	r2, [r4, #12]
    44a0:	785a      	ldrb	r2, [r3, #1]
    44a2:	2a59      	cmp	r2, #89	; 0x59
    44a4:	bf04      	itt	eq
    44a6:	3302      	addeq	r3, #2
    44a8:	60e3      	streq	r3, [r4, #12]
    44aa:	2101      	movs	r1, #1
    44ac:	4620      	mov	r0, r4
    44ae:	f7ff ffb9 	bl	4424 <d_bare_function_type>
    44b2:	4601      	mov	r1, r0
    44b4:	4620      	mov	r0, r4
    44b6:	f7fe ffc1 	bl	343c <d_ref_qualifier>
    44ba:	68e3      	ldr	r3, [r4, #12]
    44bc:	781a      	ldrb	r2, [r3, #0]
    44be:	2a45      	cmp	r2, #69	; 0x45
    44c0:	bf04      	itt	eq
    44c2:	3301      	addeq	r3, #1
    44c4:	60e3      	streq	r3, [r4, #12]
    44c6:	68a3      	ldr	r3, [r4, #8]
    44c8:	bf18      	it	ne
    44ca:	2000      	movne	r0, #0
    44cc:	035b      	lsls	r3, r3, #13
    44ce:	d4de      	bmi.n	448e <d_function_type+0x22>
    44d0:	6be2      	ldr	r2, [r4, #60]	; 0x3c
    44d2:	3a01      	subs	r2, #1
    44d4:	e7da      	b.n	448c <d_function_type+0x20>
    44d6:	bf00      	nop

000044d8 <d_operator_name>:
    44d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    44da:	68c3      	ldr	r3, [r0, #12]
    44dc:	781f      	ldrb	r7, [r3, #0]
    44de:	4606      	mov	r6, r0
    44e0:	bb77      	cbnz	r7, 4540 <d_operator_name+0x68>
    44e2:	f04f 0e00 	mov.w	lr, #0
    44e6:	4d3d      	ldr	r5, [pc, #244]	; (45dc <d_operator_name+0x104>)
    44e8:	2148      	movs	r1, #72	; 0x48
    44ea:	2200      	movs	r2, #0
    44ec:	1a8b      	subs	r3, r1, r2
    44ee:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
    44f2:	eb02 0363 	add.w	r3, r2, r3, asr #1
    44f6:	0118      	lsls	r0, r3, #4
    44f8:	eb05 1c03 	add.w	ip, r5, r3, lsl #4
    44fc:	582c      	ldr	r4, [r5, r0]
    44fe:	7820      	ldrb	r0, [r4, #0]
    4500:	42b8      	cmp	r0, r7
    4502:	d006      	beq.n	4512 <d_operator_name+0x3a>
    4504:	bf94      	ite	ls
    4506:	1c5a      	addls	r2, r3, #1
    4508:	4619      	movhi	r1, r3
    450a:	428a      	cmp	r2, r1
    450c:	d1ee      	bne.n	44ec <d_operator_name+0x14>
    450e:	2000      	movs	r0, #0
    4510:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4512:	7860      	ldrb	r0, [r4, #1]
    4514:	4570      	cmp	r0, lr
    4516:	d1f5      	bne.n	4504 <d_operator_name+0x2c>
    4518:	e9d6 3205 	ldrd	r3, r2, [r6, #20]
    451c:	4293      	cmp	r3, r2
    451e:	daf6      	bge.n	450e <d_operator_name+0x36>
    4520:	6932      	ldr	r2, [r6, #16]
    4522:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4526:	eb02 0081 	add.w	r0, r2, r1, lsl #2
    452a:	3301      	adds	r3, #1
    452c:	2400      	movs	r4, #0
    452e:	e9c0 4401 	strd	r4, r4, [r0, #4]
    4532:	6173      	str	r3, [r6, #20]
    4534:	2332      	movs	r3, #50	; 0x32
    4536:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    453a:	f8c0 c00c 	str.w	ip, [r0, #12]
    453e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4540:	1c5a      	adds	r2, r3, #1
    4542:	60c2      	str	r2, [r0, #12]
    4544:	f893 e001 	ldrb.w	lr, [r3, #1]
    4548:	781f      	ldrb	r7, [r3, #0]
    454a:	f1be 0f00 	cmp.w	lr, #0
    454e:	d102      	bne.n	4556 <d_operator_name+0x7e>
    4550:	2f76      	cmp	r7, #118	; 0x76
    4552:	d0c8      	beq.n	44e6 <d_operator_name+0xe>
    4554:	e7c5      	b.n	44e2 <d_operator_name+0xa>
    4556:	1c9a      	adds	r2, r3, #2
    4558:	60c2      	str	r2, [r0, #12]
    455a:	2f76      	cmp	r7, #118	; 0x76
    455c:	f893 e001 	ldrb.w	lr, [r3, #1]
    4560:	d11f      	bne.n	45a2 <d_operator_name+0xca>
    4562:	f1ae 0430 	sub.w	r4, lr, #48	; 0x30
    4566:	b2e3      	uxtb	r3, r4
    4568:	2b09      	cmp	r3, #9
    456a:	d8bc      	bhi.n	44e6 <d_operator_name+0xe>
    456c:	f7ff f9a8 	bl	38c0 <d_source_name>
    4570:	e9d6 3105 	ldrd	r3, r1, [r6, #20]
    4574:	428b      	cmp	r3, r1
    4576:	4602      	mov	r2, r0
    4578:	dac9      	bge.n	450e <d_operator_name+0x36>
    457a:	6937      	ldr	r7, [r6, #16]
    457c:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4580:	eb07 0081 	add.w	r0, r7, r1, lsl #2
    4584:	3301      	adds	r3, #1
    4586:	2500      	movs	r5, #0
    4588:	e9c0 5501 	strd	r5, r5, [r0, #4]
    458c:	0089      	lsls	r1, r1, #2
    458e:	6173      	str	r3, [r6, #20]
    4590:	2a00      	cmp	r2, #0
    4592:	d0bc      	beq.n	450e <d_operator_name+0x36>
    4594:	2333      	movs	r3, #51	; 0x33
    4596:	e9c0 5501 	strd	r5, r5, [r0, #4]
    459a:	547b      	strb	r3, [r7, r1]
    459c:	e9c0 4203 	strd	r4, r2, [r0, #12]
    45a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    45a2:	2f63      	cmp	r7, #99	; 0x63
    45a4:	d19f      	bne.n	44e6 <d_operator_name+0xe>
    45a6:	f1be 0f76 	cmp.w	lr, #118	; 0x76
    45aa:	d19c      	bne.n	44e6 <d_operator_name+0xe>
    45ac:	e9d0 340c 	ldrd	r3, r4, [r0, #48]	; 0x30
    45b0:	fab3 f383 	clz	r3, r3
    45b4:	095b      	lsrs	r3, r3, #5
    45b6:	6343      	str	r3, [r0, #52]	; 0x34
    45b8:	f7ff fabc 	bl	3b34 <d_type>
    45bc:	6b73      	ldr	r3, [r6, #52]	; 0x34
    45be:	4602      	mov	r2, r0
    45c0:	b133      	cbz	r3, 45d0 <d_operator_name+0xf8>
    45c2:	2300      	movs	r3, #0
    45c4:	2135      	movs	r1, #53	; 0x35
    45c6:	4630      	mov	r0, r6
    45c8:	f7fe fe62 	bl	3290 <d_make_comp>
    45cc:	6374      	str	r4, [r6, #52]	; 0x34
    45ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    45d0:	2134      	movs	r1, #52	; 0x34
    45d2:	4630      	mov	r0, r6
    45d4:	f7fe fe5c 	bl	3290 <d_make_comp>
    45d8:	e7f8      	b.n	45cc <d_operator_name+0xf4>
    45da:	bf00      	nop
    45dc:	20000da0 	.word	0x20000da0

000045e0 <d_unqualified_name>:
    45e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    45e2:	68c3      	ldr	r3, [r0, #12]
    45e4:	781a      	ldrb	r2, [r3, #0]
    45e6:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
    45ea:	2909      	cmp	r1, #9
    45ec:	4604      	mov	r4, r0
    45ee:	d965      	bls.n	46bc <d_unqualified_name+0xdc>
    45f0:	2a55      	cmp	r2, #85	; 0x55
    45f2:	d06c      	beq.n	46ce <d_unqualified_name+0xee>
    45f4:	d838      	bhi.n	4668 <d_unqualified_name+0x88>
    45f6:	2a44      	cmp	r2, #68	; 0x44
    45f8:	d90f      	bls.n	461a <d_unqualified_name+0x3a>
    45fa:	2a4c      	cmp	r2, #76	; 0x4c
    45fc:	d10a      	bne.n	4614 <d_unqualified_name+0x34>
    45fe:	3301      	adds	r3, #1
    4600:	60c3      	str	r3, [r0, #12]
    4602:	f7ff f95d 	bl	38c0 <d_source_name>
    4606:	4605      	mov	r5, r0
    4608:	b120      	cbz	r0, 4614 <d_unqualified_name+0x34>
    460a:	4620      	mov	r0, r4
    460c:	f7fe ffaa 	bl	3564 <d_discriminator>
    4610:	2800      	cmp	r0, #0
    4612:	d13b      	bne.n	468c <d_unqualified_name+0xac>
    4614:	2500      	movs	r5, #0
    4616:	4628      	mov	r0, r5
    4618:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    461a:	2a42      	cmp	r2, #66	; 0x42
    461c:	d9fa      	bls.n	4614 <d_unqualified_name+0x34>
    461e:	6a81      	ldr	r1, [r0, #40]	; 0x28
    4620:	b141      	cbz	r1, 4634 <d_unqualified_name+0x54>
    4622:	7808      	ldrb	r0, [r1, #0]
    4624:	2800      	cmp	r0, #0
    4626:	f040 8091 	bne.w	474c <d_unqualified_name+0x16c>
    462a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    462c:	6908      	ldr	r0, [r1, #16]
    462e:	4402      	add	r2, r0
    4630:	62e2      	str	r2, [r4, #44]	; 0x2c
    4632:	781a      	ldrb	r2, [r3, #0]
    4634:	2a43      	cmp	r2, #67	; 0x43
    4636:	f000 80c8 	beq.w	47ca <d_unqualified_name+0x1ea>
    463a:	2a44      	cmp	r2, #68	; 0x44
    463c:	f040 8084 	bne.w	4748 <d_unqualified_name+0x168>
    4640:	785a      	ldrb	r2, [r3, #1]
    4642:	3a30      	subs	r2, #48	; 0x30
    4644:	2a05      	cmp	r2, #5
    4646:	d8e5      	bhi.n	4614 <d_unqualified_name+0x34>
    4648:	a001      	add	r0, pc, #4	; (adr r0, 4650 <d_unqualified_name+0x70>)
    464a:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
    464e:	bf00      	nop
    4650:	0000475b 	.word	0x0000475b
    4654:	000047b3 	.word	0x000047b3
    4658:	000047a1 	.word	0x000047a1
    465c:	00004615 	.word	0x00004615
    4660:	000047ad 	.word	0x000047ad
    4664:	000047a7 	.word	0x000047a7
    4668:	f1a2 0161 	sub.w	r1, r2, #97	; 0x61
    466c:	2919      	cmp	r1, #25
    466e:	d8d1      	bhi.n	4614 <d_unqualified_name+0x34>
    4670:	2a6f      	cmp	r2, #111	; 0x6f
    4672:	6b05      	ldr	r5, [r0, #48]	; 0x30
    4674:	f000 80a0 	beq.w	47b8 <d_unqualified_name+0x1d8>
    4678:	4620      	mov	r0, r4
    467a:	f7ff ff2d 	bl	44d8 <d_operator_name>
    467e:	6325      	str	r5, [r4, #48]	; 0x30
    4680:	4605      	mov	r5, r0
    4682:	b118      	cbz	r0, 468c <d_unqualified_name+0xac>
    4684:	7803      	ldrb	r3, [r0, #0]
    4686:	2b32      	cmp	r3, #50	; 0x32
    4688:	f000 80c6 	beq.w	4818 <d_unqualified_name+0x238>
    468c:	68e3      	ldr	r3, [r4, #12]
    468e:	781a      	ldrb	r2, [r3, #0]
    4690:	2a42      	cmp	r2, #66	; 0x42
    4692:	d1c0      	bne.n	4616 <d_unqualified_name+0x36>
    4694:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    4696:	3301      	adds	r3, #1
    4698:	60e3      	str	r3, [r4, #12]
    469a:	4620      	mov	r0, r4
    469c:	f7ff f910 	bl	38c0 <d_source_name>
    46a0:	462a      	mov	r2, r5
    46a2:	4603      	mov	r3, r0
    46a4:	214d      	movs	r1, #77	; 0x4d
    46a6:	4620      	mov	r0, r4
    46a8:	f7fe fdf2 	bl	3290 <d_make_comp>
    46ac:	68e3      	ldr	r3, [r4, #12]
    46ae:	781a      	ldrb	r2, [r3, #0]
    46b0:	2a42      	cmp	r2, #66	; 0x42
    46b2:	4605      	mov	r5, r0
    46b4:	d0ef      	beq.n	4696 <d_unqualified_name+0xb6>
    46b6:	62a6      	str	r6, [r4, #40]	; 0x28
    46b8:	4628      	mov	r0, r5
    46ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    46bc:	f7ff f900 	bl	38c0 <d_source_name>
    46c0:	68e3      	ldr	r3, [r4, #12]
    46c2:	781a      	ldrb	r2, [r3, #0]
    46c4:	4605      	mov	r5, r0
    46c6:	2a42      	cmp	r2, #66	; 0x42
    46c8:	d0e4      	beq.n	4694 <d_unqualified_name+0xb4>
    46ca:	4628      	mov	r0, r5
    46cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    46ce:	785a      	ldrb	r2, [r3, #1]
    46d0:	2a6c      	cmp	r2, #108	; 0x6c
    46d2:	f000 80c1 	beq.w	4858 <d_unqualified_name+0x278>
    46d6:	2a74      	cmp	r2, #116	; 0x74
    46d8:	d19c      	bne.n	4614 <d_unqualified_name+0x34>
    46da:	1c59      	adds	r1, r3, #1
    46dc:	60c1      	str	r1, [r0, #12]
    46de:	785a      	ldrb	r2, [r3, #1]
    46e0:	2a74      	cmp	r2, #116	; 0x74
    46e2:	d137      	bne.n	4754 <d_unqualified_name+0x174>
    46e4:	1c9a      	adds	r2, r3, #2
    46e6:	60c2      	str	r2, [r0, #12]
    46e8:	789a      	ldrb	r2, [r3, #2]
    46ea:	2a5f      	cmp	r2, #95	; 0x5f
    46ec:	f000 8108 	beq.w	4900 <d_unqualified_name+0x320>
    46f0:	2a6e      	cmp	r2, #110	; 0x6e
    46f2:	d08f      	beq.n	4614 <d_unqualified_name+0x34>
    46f4:	f7fe fe44 	bl	3380 <d_number>
    46f8:	3001      	adds	r0, #1
    46fa:	68e3      	ldr	r3, [r4, #12]
    46fc:	f100 80fd 	bmi.w	48fa <d_unqualified_name+0x31a>
    4700:	781a      	ldrb	r2, [r3, #0]
    4702:	2a5f      	cmp	r2, #95	; 0x5f
    4704:	d120      	bne.n	4748 <d_unqualified_name+0x168>
    4706:	3301      	adds	r3, #1
    4708:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
    470c:	428a      	cmp	r2, r1
    470e:	60e3      	str	r3, [r4, #12]
    4710:	f280 8100 	bge.w	4914 <d_unqualified_name+0x334>
    4714:	6926      	ldr	r6, [r4, #16]
    4716:	eb02 0782 	add.w	r7, r2, r2, lsl #2
    471a:	eb06 0587 	add.w	r5, r6, r7, lsl #2
    471e:	3201      	adds	r2, #1
    4720:	2100      	movs	r1, #0
    4722:	e9c5 1101 	strd	r1, r1, [r5, #4]
    4726:	6162      	str	r2, [r4, #20]
    4728:	2249      	movs	r2, #73	; 0x49
    472a:	f806 2027 	strb.w	r2, [r6, r7, lsl #2]
    472e:	60e8      	str	r0, [r5, #12]
    4730:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
    4734:	4282      	cmp	r2, r0
    4736:	f280 80ea 	bge.w	490e <d_unqualified_name+0x32e>
    473a:	69e1      	ldr	r1, [r4, #28]
    473c:	f841 5022 	str.w	r5, [r1, r2, lsl #2]
    4740:	3201      	adds	r2, #1
    4742:	6222      	str	r2, [r4, #32]
    4744:	781a      	ldrb	r2, [r3, #0]
    4746:	e7be      	b.n	46c6 <d_unqualified_name+0xe6>
    4748:	2500      	movs	r5, #0
    474a:	e7bc      	b.n	46c6 <d_unqualified_name+0xe6>
    474c:	2818      	cmp	r0, #24
    474e:	f47f af71 	bne.w	4634 <d_unqualified_name+0x54>
    4752:	e76a      	b.n	462a <d_unqualified_name+0x4a>
    4754:	460b      	mov	r3, r1
    4756:	2500      	movs	r5, #0
    4758:	e7b5      	b.n	46c6 <d_unqualified_name+0xe6>
    475a:	f04f 0e01 	mov.w	lr, #1
    475e:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
    4762:	1c9f      	adds	r7, r3, #2
    4764:	4282      	cmp	r2, r0
    4766:	60e7      	str	r7, [r4, #12]
    4768:	f280 80c2 	bge.w	48f0 <d_unqualified_name+0x310>
    476c:	f8d4 c010 	ldr.w	ip, [r4, #16]
    4770:	eb02 0082 	add.w	r0, r2, r2, lsl #2
    4774:	eb0c 0580 	add.w	r5, ip, r0, lsl #2
    4778:	3201      	adds	r2, #1
    477a:	2600      	movs	r6, #0
    477c:	e9c5 6601 	strd	r6, r6, [r5, #4]
    4780:	0080      	lsls	r0, r0, #2
    4782:	6162      	str	r2, [r4, #20]
    4784:	2900      	cmp	r1, #0
    4786:	f000 80b3 	beq.w	48f0 <d_unqualified_name+0x310>
    478a:	e9c5 6601 	strd	r6, r6, [r5, #4]
    478e:	2208      	movs	r2, #8
    4790:	f80c 2000 	strb.w	r2, [ip, r0]
    4794:	f885 e00c 	strb.w	lr, [r5, #12]
    4798:	6129      	str	r1, [r5, #16]
    479a:	789a      	ldrb	r2, [r3, #2]
    479c:	463b      	mov	r3, r7
    479e:	e792      	b.n	46c6 <d_unqualified_name+0xe6>
    47a0:	f04f 0e03 	mov.w	lr, #3
    47a4:	e7db      	b.n	475e <d_unqualified_name+0x17e>
    47a6:	f04f 0e05 	mov.w	lr, #5
    47aa:	e7d8      	b.n	475e <d_unqualified_name+0x17e>
    47ac:	f04f 0e04 	mov.w	lr, #4
    47b0:	e7d5      	b.n	475e <d_unqualified_name+0x17e>
    47b2:	f04f 0e02 	mov.w	lr, #2
    47b6:	e7d2      	b.n	475e <d_unqualified_name+0x17e>
    47b8:	785a      	ldrb	r2, [r3, #1]
    47ba:	2a6e      	cmp	r2, #110	; 0x6e
    47bc:	f47f af5c 	bne.w	4678 <d_unqualified_name+0x98>
    47c0:	3302      	adds	r3, #2
    47c2:	2200      	movs	r2, #0
    47c4:	60c3      	str	r3, [r0, #12]
    47c6:	6302      	str	r2, [r0, #48]	; 0x30
    47c8:	e756      	b.n	4678 <d_unqualified_name+0x98>
    47ca:	785a      	ldrb	r2, [r3, #1]
    47cc:	2a49      	cmp	r2, #73	; 0x49
    47ce:	d07f      	beq.n	48d0 <d_unqualified_name+0x2f0>
    47d0:	f1a2 0031 	sub.w	r0, r2, #49	; 0x31
    47d4:	2804      	cmp	r0, #4
    47d6:	f63f af1d 	bhi.w	4614 <d_unqualified_name+0x34>
    47da:	3a30      	subs	r2, #48	; 0x30
    47dc:	3302      	adds	r3, #2
    47de:	b2d6      	uxtb	r6, r2
    47e0:	60e3      	str	r3, [r4, #12]
    47e2:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    47e6:	4293      	cmp	r3, r2
    47e8:	f280 8086 	bge.w	48f8 <d_unqualified_name+0x318>
    47ec:	6927      	ldr	r7, [r4, #16]
    47ee:	eb03 0283 	add.w	r2, r3, r3, lsl #2
    47f2:	eb07 0582 	add.w	r5, r7, r2, lsl #2
    47f6:	3301      	adds	r3, #1
    47f8:	2000      	movs	r0, #0
    47fa:	e9c5 0001 	strd	r0, r0, [r5, #4]
    47fe:	0092      	lsls	r2, r2, #2
    4800:	6163      	str	r3, [r4, #20]
    4802:	2900      	cmp	r1, #0
    4804:	d078      	beq.n	48f8 <d_unqualified_name+0x318>
    4806:	2307      	movs	r3, #7
    4808:	e9c5 0001 	strd	r0, r0, [r5, #4]
    480c:	54bb      	strb	r3, [r7, r2]
    480e:	68e3      	ldr	r3, [r4, #12]
    4810:	732e      	strb	r6, [r5, #12]
    4812:	6129      	str	r1, [r5, #16]
    4814:	781a      	ldrb	r2, [r3, #0]
    4816:	e756      	b.n	46c6 <d_unqualified_name+0xe6>
    4818:	68c2      	ldr	r2, [r0, #12]
    481a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    481c:	6891      	ldr	r1, [r2, #8]
    481e:	6812      	ldr	r2, [r2, #0]
    4820:	3307      	adds	r3, #7
    4822:	440b      	add	r3, r1
    4824:	62e3      	str	r3, [r4, #44]	; 0x2c
    4826:	7813      	ldrb	r3, [r2, #0]
    4828:	2b6c      	cmp	r3, #108	; 0x6c
    482a:	f47f af2f 	bne.w	468c <d_unqualified_name+0xac>
    482e:	7853      	ldrb	r3, [r2, #1]
    4830:	2b69      	cmp	r3, #105	; 0x69
    4832:	f47f af2b 	bne.w	468c <d_unqualified_name+0xac>
    4836:	7893      	ldrb	r3, [r2, #2]
    4838:	2b00      	cmp	r3, #0
    483a:	f47f af27 	bne.w	468c <d_unqualified_name+0xac>
    483e:	4620      	mov	r0, r4
    4840:	f7ff f83e 	bl	38c0 <d_source_name>
    4844:	462a      	mov	r2, r5
    4846:	4603      	mov	r3, r0
    4848:	2137      	movs	r1, #55	; 0x37
    484a:	4620      	mov	r0, r4
    484c:	f7fe fd20 	bl	3290 <d_make_comp>
    4850:	68e3      	ldr	r3, [r4, #12]
    4852:	4605      	mov	r5, r0
    4854:	781a      	ldrb	r2, [r3, #0]
    4856:	e736      	b.n	46c6 <d_unqualified_name+0xe6>
    4858:	1c59      	adds	r1, r3, #1
    485a:	60c1      	str	r1, [r0, #12]
    485c:	785a      	ldrb	r2, [r3, #1]
    485e:	2a6c      	cmp	r2, #108	; 0x6c
    4860:	f47f af78 	bne.w	4754 <d_unqualified_name+0x174>
    4864:	3302      	adds	r3, #2
    4866:	60c3      	str	r3, [r0, #12]
    4868:	f7ff fd9c 	bl	43a4 <d_parmlist>
    486c:	68e3      	ldr	r3, [r4, #12]
    486e:	4606      	mov	r6, r0
    4870:	2800      	cmp	r0, #0
    4872:	d042      	beq.n	48fa <d_unqualified_name+0x31a>
    4874:	781a      	ldrb	r2, [r3, #0]
    4876:	2a45      	cmp	r2, #69	; 0x45
    4878:	f47f af66 	bne.w	4748 <d_unqualified_name+0x168>
    487c:	1c5a      	adds	r2, r3, #1
    487e:	60e2      	str	r2, [r4, #12]
    4880:	785a      	ldrb	r2, [r3, #1]
    4882:	2a5f      	cmp	r2, #95	; 0x5f
    4884:	d049      	beq.n	491a <d_unqualified_name+0x33a>
    4886:	2a6e      	cmp	r2, #110	; 0x6e
    4888:	f43f aec4 	beq.w	4614 <d_unqualified_name+0x34>
    488c:	4620      	mov	r0, r4
    488e:	f7fe fd77 	bl	3380 <d_number>
    4892:	3001      	adds	r0, #1
    4894:	68e3      	ldr	r3, [r4, #12]
    4896:	d430      	bmi.n	48fa <d_unqualified_name+0x31a>
    4898:	781a      	ldrb	r2, [r3, #0]
    489a:	2a5f      	cmp	r2, #95	; 0x5f
    489c:	f47f af54 	bne.w	4748 <d_unqualified_name+0x168>
    48a0:	3301      	adds	r3, #1
    48a2:	6962      	ldr	r2, [r4, #20]
    48a4:	69a1      	ldr	r1, [r4, #24]
    48a6:	60e3      	str	r3, [r4, #12]
    48a8:	428a      	cmp	r2, r1
    48aa:	da33      	bge.n	4914 <d_unqualified_name+0x334>
    48ac:	6921      	ldr	r1, [r4, #16]
    48ae:	eb02 0782 	add.w	r7, r2, r2, lsl #2
    48b2:	eb01 0587 	add.w	r5, r1, r7, lsl #2
    48b6:	3201      	adds	r2, #1
    48b8:	f04f 0c00 	mov.w	ip, #0
    48bc:	e9c5 cc01 	strd	ip, ip, [r5, #4]
    48c0:	6162      	str	r2, [r4, #20]
    48c2:	2247      	movs	r2, #71	; 0x47
    48c4:	f801 2027 	strb.w	r2, [r1, r7, lsl #2]
    48c8:	e9c5 6003 	strd	r6, r0, [r5, #12]
    48cc:	781a      	ldrb	r2, [r3, #0]
    48ce:	e6fa      	b.n	46c6 <d_unqualified_name+0xe6>
    48d0:	1c59      	adds	r1, r3, #1
    48d2:	60e1      	str	r1, [r4, #12]
    48d4:	789a      	ldrb	r2, [r3, #2]
    48d6:	f1a2 0031 	sub.w	r0, r2, #49	; 0x31
    48da:	2804      	cmp	r0, #4
    48dc:	d813      	bhi.n	4906 <d_unqualified_name+0x326>
    48de:	3303      	adds	r3, #3
    48e0:	3a30      	subs	r2, #48	; 0x30
    48e2:	60e3      	str	r3, [r4, #12]
    48e4:	4620      	mov	r0, r4
    48e6:	b2d6      	uxtb	r6, r2
    48e8:	f7ff f924 	bl	3b34 <d_type>
    48ec:	6aa1      	ldr	r1, [r4, #40]	; 0x28
    48ee:	e778      	b.n	47e2 <d_unqualified_name+0x202>
    48f0:	789a      	ldrb	r2, [r3, #2]
    48f2:	2500      	movs	r5, #0
    48f4:	463b      	mov	r3, r7
    48f6:	e6e6      	b.n	46c6 <d_unqualified_name+0xe6>
    48f8:	68e3      	ldr	r3, [r4, #12]
    48fa:	781a      	ldrb	r2, [r3, #0]
    48fc:	2500      	movs	r5, #0
    48fe:	e6e2      	b.n	46c6 <d_unqualified_name+0xe6>
    4900:	3303      	adds	r3, #3
    4902:	2000      	movs	r0, #0
    4904:	e700      	b.n	4708 <d_unqualified_name+0x128>
    4906:	785a      	ldrb	r2, [r3, #1]
    4908:	2500      	movs	r5, #0
    490a:	460b      	mov	r3, r1
    490c:	e6db      	b.n	46c6 <d_unqualified_name+0xe6>
    490e:	781a      	ldrb	r2, [r3, #0]
    4910:	460d      	mov	r5, r1
    4912:	e6d8      	b.n	46c6 <d_unqualified_name+0xe6>
    4914:	781a      	ldrb	r2, [r3, #0]
    4916:	2500      	movs	r5, #0
    4918:	e6d5      	b.n	46c6 <d_unqualified_name+0xe6>
    491a:	3302      	adds	r3, #2
    491c:	2000      	movs	r0, #0
    491e:	e7c0      	b.n	48a2 <d_unqualified_name+0x2c2>

00004920 <d_expr_primary>:
    4920:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4922:	68c2      	ldr	r2, [r0, #12]
    4924:	7813      	ldrb	r3, [r2, #0]
    4926:	2b4c      	cmp	r3, #76	; 0x4c
    4928:	d132      	bne.n	4990 <d_expr_primary+0x70>
    492a:	1c53      	adds	r3, r2, #1
    492c:	60c3      	str	r3, [r0, #12]
    492e:	7851      	ldrb	r1, [r2, #1]
    4930:	295f      	cmp	r1, #95	; 0x5f
    4932:	4604      	mov	r4, r0
    4934:	d051      	beq.n	49da <d_expr_primary+0xba>
    4936:	295a      	cmp	r1, #90	; 0x5a
    4938:	d113      	bne.n	4962 <d_expr_primary+0x42>
    493a:	1c5a      	adds	r2, r3, #1
    493c:	60e2      	str	r2, [r4, #12]
    493e:	785b      	ldrb	r3, [r3, #1]
    4940:	2b47      	cmp	r3, #71	; 0x47
    4942:	d043      	beq.n	49cc <d_expr_primary+0xac>
    4944:	2b54      	cmp	r3, #84	; 0x54
    4946:	d041      	beq.n	49cc <d_expr_primary+0xac>
    4948:	2100      	movs	r1, #0
    494a:	4620      	mov	r0, r4
    494c:	f001 f84e 	bl	59ec <d_encoding.part.0>
    4950:	68e3      	ldr	r3, [r4, #12]
    4952:	781a      	ldrb	r2, [r3, #0]
    4954:	4606      	mov	r6, r0
    4956:	2a45      	cmp	r2, #69	; 0x45
    4958:	d11a      	bne.n	4990 <d_expr_primary+0x70>
    495a:	3301      	adds	r3, #1
    495c:	60e3      	str	r3, [r4, #12]
    495e:	4630      	mov	r0, r6
    4960:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4962:	f7ff f8e7 	bl	3b34 <d_type>
    4966:	4606      	mov	r6, r0
    4968:	b190      	cbz	r0, 4990 <d_expr_primary+0x70>
    496a:	7803      	ldrb	r3, [r0, #0]
    496c:	2b27      	cmp	r3, #39	; 0x27
    496e:	d012      	beq.n	4996 <d_expr_primary+0x76>
    4970:	68e2      	ldr	r2, [r4, #12]
    4972:	7815      	ldrb	r5, [r2, #0]
    4974:	2d6e      	cmp	r5, #110	; 0x6e
    4976:	d023      	beq.n	49c0 <d_expr_primary+0xa0>
    4978:	213d      	movs	r1, #61	; 0x3d
    497a:	2d45      	cmp	r5, #69	; 0x45
    497c:	d059      	beq.n	4a32 <d_expr_primary+0x112>
    497e:	4613      	mov	r3, r2
    4980:	e003      	b.n	498a <d_expr_primary+0x6a>
    4982:	60e3      	str	r3, [r4, #12]
    4984:	781d      	ldrb	r5, [r3, #0]
    4986:	2d45      	cmp	r5, #69	; 0x45
    4988:	d02f      	beq.n	49ea <d_expr_primary+0xca>
    498a:	3301      	adds	r3, #1
    498c:	2d00      	cmp	r5, #0
    498e:	d1f8      	bne.n	4982 <d_expr_primary+0x62>
    4990:	2600      	movs	r6, #0
    4992:	4630      	mov	r0, r6
    4994:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4996:	68c3      	ldr	r3, [r0, #12]
    4998:	7c1a      	ldrb	r2, [r3, #16]
    499a:	b11a      	cbz	r2, 49a4 <d_expr_primary+0x84>
    499c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    499e:	6859      	ldr	r1, [r3, #4]
    49a0:	1a52      	subs	r2, r2, r1
    49a2:	62e2      	str	r2, [r4, #44]	; 0x2c
    49a4:	4925      	ldr	r1, [pc, #148]	; (4a3c <d_expr_primary+0x11c>)
    49a6:	6818      	ldr	r0, [r3, #0]
    49a8:	f008 f9ce 	bl	cd48 <strcmp>
    49ac:	2800      	cmp	r0, #0
    49ae:	d1df      	bne.n	4970 <d_expr_primary+0x50>
    49b0:	68e2      	ldr	r2, [r4, #12]
    49b2:	7815      	ldrb	r5, [r2, #0]
    49b4:	2d45      	cmp	r5, #69	; 0x45
    49b6:	d03e      	beq.n	4a36 <d_expr_primary+0x116>
    49b8:	2d6e      	cmp	r5, #110	; 0x6e
    49ba:	d001      	beq.n	49c0 <d_expr_primary+0xa0>
    49bc:	213d      	movs	r1, #61	; 0x3d
    49be:	e7de      	b.n	497e <d_expr_primary+0x5e>
    49c0:	1c53      	adds	r3, r2, #1
    49c2:	60e3      	str	r3, [r4, #12]
    49c4:	7855      	ldrb	r5, [r2, #1]
    49c6:	213e      	movs	r1, #62	; 0x3e
    49c8:	461a      	mov	r2, r3
    49ca:	e7d6      	b.n	497a <d_expr_primary+0x5a>
    49cc:	4620      	mov	r0, r4
    49ce:	f000 fc85 	bl	52dc <d_special_name>
    49d2:	68e3      	ldr	r3, [r4, #12]
    49d4:	4606      	mov	r6, r0
    49d6:	781a      	ldrb	r2, [r3, #0]
    49d8:	e7bd      	b.n	4956 <d_expr_primary+0x36>
    49da:	1c93      	adds	r3, r2, #2
    49dc:	60c3      	str	r3, [r0, #12]
    49de:	7892      	ldrb	r2, [r2, #2]
    49e0:	2a5a      	cmp	r2, #90	; 0x5a
    49e2:	bf18      	it	ne
    49e4:	2600      	movne	r6, #0
    49e6:	d1b6      	bne.n	4956 <d_expr_primary+0x36>
    49e8:	e7a7      	b.n	493a <d_expr_primary+0x1a>
    49ea:	1a9d      	subs	r5, r3, r2
    49ec:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
    49f0:	4298      	cmp	r0, r3
    49f2:	da1c      	bge.n	4a2e <d_expr_primary+0x10e>
    49f4:	f8d4 e010 	ldr.w	lr, [r4, #16]
    49f8:	eb00 0780 	add.w	r7, r0, r0, lsl #2
    49fc:	eb0e 0387 	add.w	r3, lr, r7, lsl #2
    4a00:	ea4f 0c87 	mov.w	ip, r7, lsl #2
    4a04:	2700      	movs	r7, #0
    4a06:	3001      	adds	r0, #1
    4a08:	42bd      	cmp	r5, r7
    4a0a:	e9c3 7701 	strd	r7, r7, [r3, #4]
    4a0e:	6160      	str	r0, [r4, #20]
    4a10:	dd0d      	ble.n	4a2e <d_expr_primary+0x10e>
    4a12:	e9c3 7701 	strd	r7, r7, [r3, #4]
    4a16:	f80e 700c 	strb.w	r7, [lr, ip]
    4a1a:	e9c3 2503 	strd	r2, r5, [r3, #12]
    4a1e:	4632      	mov	r2, r6
    4a20:	4620      	mov	r0, r4
    4a22:	f7fe fc35 	bl	3290 <d_make_comp>
    4a26:	68e3      	ldr	r3, [r4, #12]
    4a28:	4606      	mov	r6, r0
    4a2a:	781a      	ldrb	r2, [r3, #0]
    4a2c:	e793      	b.n	4956 <d_expr_primary+0x36>
    4a2e:	2300      	movs	r3, #0
    4a30:	e7f5      	b.n	4a1e <d_expr_primary+0xfe>
    4a32:	2500      	movs	r5, #0
    4a34:	e7da      	b.n	49ec <d_expr_primary+0xcc>
    4a36:	3201      	adds	r2, #1
    4a38:	60e2      	str	r2, [r4, #12]
    4a3a:	e7aa      	b.n	4992 <d_expr_primary+0x72>
    4a3c:	20001234 	.word	0x20001234

00004a40 <d_template_arg>:
    4a40:	b538      	push	{r3, r4, r5, lr}
    4a42:	68c2      	ldr	r2, [r0, #12]
    4a44:	7813      	ldrb	r3, [r2, #0]
    4a46:	2b4c      	cmp	r3, #76	; 0x4c
    4a48:	d020      	beq.n	4a8c <d_template_arg+0x4c>
    4a4a:	4604      	mov	r4, r0
    4a4c:	d808      	bhi.n	4a60 <d_template_arg+0x20>
    4a4e:	3b49      	subs	r3, #73	; 0x49
    4a50:	2b01      	cmp	r3, #1
    4a52:	d816      	bhi.n	4a82 <d_template_arg+0x42>
    4a54:	3201      	adds	r2, #1
    4a56:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    4a5a:	60c2      	str	r2, [r0, #12]
    4a5c:	f000 b81c 	b.w	4a98 <d_template_args_1>
    4a60:	2b58      	cmp	r3, #88	; 0x58
    4a62:	d10e      	bne.n	4a82 <d_template_arg+0x42>
    4a64:	3201      	adds	r2, #1
    4a66:	2301      	movs	r3, #1
    4a68:	6b05      	ldr	r5, [r0, #48]	; 0x30
    4a6a:	60c2      	str	r2, [r0, #12]
    4a6c:	6303      	str	r3, [r0, #48]	; 0x30
    4a6e:	f000 f8db 	bl	4c28 <d_expression_1>
    4a72:	68e3      	ldr	r3, [r4, #12]
    4a74:	6325      	str	r5, [r4, #48]	; 0x30
    4a76:	781a      	ldrb	r2, [r3, #0]
    4a78:	2a45      	cmp	r2, #69	; 0x45
    4a7a:	d10b      	bne.n	4a94 <d_template_arg+0x54>
    4a7c:	3301      	adds	r3, #1
    4a7e:	60e3      	str	r3, [r4, #12]
    4a80:	bd38      	pop	{r3, r4, r5, pc}
    4a82:	4620      	mov	r0, r4
    4a84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    4a88:	f7ff b854 	b.w	3b34 <d_type>
    4a8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    4a90:	f7ff bf46 	b.w	4920 <d_expr_primary>
    4a94:	2000      	movs	r0, #0
    4a96:	bd38      	pop	{r3, r4, r5, pc}

00004a98 <d_template_args_1>:
    4a98:	b570      	push	{r4, r5, r6, lr}
    4a9a:	68c3      	ldr	r3, [r0, #12]
    4a9c:	6a86      	ldr	r6, [r0, #40]	; 0x28
    4a9e:	781a      	ldrb	r2, [r3, #0]
    4aa0:	2a45      	cmp	r2, #69	; 0x45
    4aa2:	b082      	sub	sp, #8
    4aa4:	4604      	mov	r4, r0
    4aa6:	d01f      	beq.n	4ae8 <d_template_args_1+0x50>
    4aa8:	2300      	movs	r3, #0
    4aaa:	9301      	str	r3, [sp, #4]
    4aac:	ad01      	add	r5, sp, #4
    4aae:	e009      	b.n	4ac4 <d_template_args_1+0x2c>
    4ab0:	f7fe fbee 	bl	3290 <d_make_comp>
    4ab4:	6028      	str	r0, [r5, #0]
    4ab6:	f100 0510 	add.w	r5, r0, #16
    4aba:	b160      	cbz	r0, 4ad6 <d_template_args_1+0x3e>
    4abc:	68e3      	ldr	r3, [r4, #12]
    4abe:	781a      	ldrb	r2, [r3, #0]
    4ac0:	2a45      	cmp	r2, #69	; 0x45
    4ac2:	d00b      	beq.n	4adc <d_template_args_1+0x44>
    4ac4:	4620      	mov	r0, r4
    4ac6:	f7ff ffbb 	bl	4a40 <d_template_arg>
    4aca:	4602      	mov	r2, r0
    4acc:	2300      	movs	r3, #0
    4ace:	212f      	movs	r1, #47	; 0x2f
    4ad0:	4620      	mov	r0, r4
    4ad2:	2a00      	cmp	r2, #0
    4ad4:	d1ec      	bne.n	4ab0 <d_template_args_1+0x18>
    4ad6:	2000      	movs	r0, #0
    4ad8:	b002      	add	sp, #8
    4ada:	bd70      	pop	{r4, r5, r6, pc}
    4adc:	9801      	ldr	r0, [sp, #4]
    4ade:	62a6      	str	r6, [r4, #40]	; 0x28
    4ae0:	3301      	adds	r3, #1
    4ae2:	60e3      	str	r3, [r4, #12]
    4ae4:	b002      	add	sp, #8
    4ae6:	bd70      	pop	{r4, r5, r6, pc}
    4ae8:	1c5a      	adds	r2, r3, #1
    4aea:	2300      	movs	r3, #0
    4aec:	60c2      	str	r2, [r0, #12]
    4aee:	212f      	movs	r1, #47	; 0x2f
    4af0:	461a      	mov	r2, r3
    4af2:	b002      	add	sp, #8
    4af4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    4af8:	f7fe bbca 	b.w	3290 <d_make_comp>

00004afc <d_prefix>:
    4afc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4afe:	68c2      	ldr	r2, [r0, #12]
    4b00:	7814      	ldrb	r4, [r2, #0]
    4b02:	b394      	cbz	r4, 4b6a <d_prefix+0x6e>
    4b04:	4606      	mov	r6, r0
    4b06:	460f      	mov	r7, r1
    4b08:	2500      	movs	r5, #0
    4b0a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
    4b0e:	2b4a      	cmp	r3, #74	; 0x4a
    4b10:	d82b      	bhi.n	4b6a <d_prefix+0x6e>
    4b12:	e8df f003 	tbb	[pc, r3]
    4b16:	2d2d      	.short	0x2d2d
    4b18:	2d2d2d2d 	.word	0x2d2d2d2d
    4b1c:	2d2d2d2d 	.word	0x2d2d2d2d
    4b20:	2a2a2a2a 	.word	0x2a2a2a2a
    4b24:	2a2a2a2a 	.word	0x2a2a2a2a
    4b28:	2b772d2a 	.word	0x2b772d2a
    4b2c:	682a2a2a 	.word	0x682a2a2a
    4b30:	5f2d2a2a 	.word	0x5f2d2a2a
    4b34:	2a2a2a2a 	.word	0x2a2a2a2a
    4b38:	2d4b532a 	.word	0x2d4b532a
    4b3c:	2a2a2a2a 	.word	0x2a2a2a2a
    4b40:	2a2a2a2a 	.word	0x2a2a2a2a
    4b44:	2d2a2a2a 	.word	0x2d2a2a2a
    4b48:	2d2d2d2d 	.word	0x2d2d2d2d
    4b4c:	2d2d2d2d 	.word	0x2d2d2d2d
    4b50:	2d2d2d2d 	.word	0x2d2d2d2d
    4b54:	2d2d2d2d 	.word	0x2d2d2d2d
    4b58:	2d2d2d2d 	.word	0x2d2d2d2d
    4b5c:	2d2d2d2d 	.word	0x2d2d2d2d
    4b60:	2d          	.byte	0x2d
    4b61:	00          	.byte	0x00
    4b62:	68f2      	ldr	r2, [r6, #12]
    4b64:	7814      	ldrb	r4, [r2, #0]
    4b66:	2c00      	cmp	r4, #0
    4b68:	d1cf      	bne.n	4b0a <d_prefix+0xe>
    4b6a:	2500      	movs	r5, #0
    4b6c:	4628      	mov	r0, r5
    4b6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4b70:	4630      	mov	r0, r6
    4b72:	f7ff fd35 	bl	45e0 <d_unqualified_name>
    4b76:	4603      	mov	r3, r0
    4b78:	2d00      	cmp	r5, #0
    4b7a:	d14e      	bne.n	4c1a <d_prefix+0x11e>
    4b7c:	4605      	mov	r5, r0
    4b7e:	2c53      	cmp	r4, #83	; 0x53
    4b80:	d0ef      	beq.n	4b62 <d_prefix+0x66>
    4b82:	68f2      	ldr	r2, [r6, #12]
    4b84:	7814      	ldrb	r4, [r2, #0]
    4b86:	2c45      	cmp	r4, #69	; 0x45
    4b88:	d0f0      	beq.n	4b6c <d_prefix+0x70>
    4b8a:	2f00      	cmp	r7, #0
    4b8c:	d0eb      	beq.n	4b66 <d_prefix+0x6a>
    4b8e:	2d00      	cmp	r5, #0
    4b90:	d0eb      	beq.n	4b6a <d_prefix+0x6e>
    4b92:	e9d6 3108 	ldrd	r3, r1, [r6, #32]
    4b96:	428b      	cmp	r3, r1
    4b98:	dae7      	bge.n	4b6a <d_prefix+0x6e>
    4b9a:	69f1      	ldr	r1, [r6, #28]
    4b9c:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
    4ba0:	3301      	adds	r3, #1
    4ba2:	6233      	str	r3, [r6, #32]
    4ba4:	7814      	ldrb	r4, [r2, #0]
    4ba6:	2c00      	cmp	r4, #0
    4ba8:	d1af      	bne.n	4b0a <d_prefix+0xe>
    4baa:	e7de      	b.n	4b6a <d_prefix+0x6e>
    4bac:	4630      	mov	r0, r6
    4bae:	f7fe fe1b 	bl	37e8 <d_template_param>
    4bb2:	4603      	mov	r3, r0
    4bb4:	2d00      	cmp	r5, #0
    4bb6:	d130      	bne.n	4c1a <d_prefix+0x11e>
    4bb8:	461d      	mov	r5, r3
    4bba:	e7e2      	b.n	4b82 <d_prefix+0x86>
    4bbc:	2101      	movs	r1, #1
    4bbe:	4630      	mov	r0, r6
    4bc0:	f7fe feee 	bl	39a0 <d_substitution>
    4bc4:	4603      	mov	r3, r0
    4bc6:	bb45      	cbnz	r5, 4c1a <d_prefix+0x11e>
    4bc8:	68f2      	ldr	r2, [r6, #12]
    4bca:	7814      	ldrb	r4, [r2, #0]
    4bcc:	461d      	mov	r5, r3
    4bce:	2c00      	cmp	r4, #0
    4bd0:	d19b      	bne.n	4b0a <d_prefix+0xe>
    4bd2:	e7ca      	b.n	4b6a <d_prefix+0x6e>
    4bd4:	2d00      	cmp	r5, #0
    4bd6:	d0c8      	beq.n	4b6a <d_prefix+0x6e>
    4bd8:	1c53      	adds	r3, r2, #1
    4bda:	60f3      	str	r3, [r6, #12]
    4bdc:	7854      	ldrb	r4, [r2, #1]
    4bde:	461a      	mov	r2, r3
    4be0:	2c00      	cmp	r4, #0
    4be2:	d192      	bne.n	4b0a <d_prefix+0xe>
    4be4:	e7c1      	b.n	4b6a <d_prefix+0x6e>
    4be6:	2d00      	cmp	r5, #0
    4be8:	d0bf      	beq.n	4b6a <d_prefix+0x6e>
    4bea:	3201      	adds	r2, #1
    4bec:	60f2      	str	r2, [r6, #12]
    4bee:	4630      	mov	r0, r6
    4bf0:	f7ff ff52 	bl	4a98 <d_template_args_1>
    4bf4:	2104      	movs	r1, #4
    4bf6:	4603      	mov	r3, r0
    4bf8:	462a      	mov	r2, r5
    4bfa:	4630      	mov	r0, r6
    4bfc:	f7fe fb48 	bl	3290 <d_make_comp>
    4c00:	4605      	mov	r5, r0
    4c02:	e7bc      	b.n	4b7e <d_prefix+0x82>
    4c04:	7853      	ldrb	r3, [r2, #1]
    4c06:	f003 03df 	and.w	r3, r3, #223	; 0xdf
    4c0a:	2b54      	cmp	r3, #84	; 0x54
    4c0c:	4630      	mov	r0, r6
    4c0e:	d006      	beq.n	4c1e <d_prefix+0x122>
    4c10:	f7ff fce6 	bl	45e0 <d_unqualified_name>
    4c14:	4603      	mov	r3, r0
    4c16:	2d00      	cmp	r5, #0
    4c18:	d0ce      	beq.n	4bb8 <d_prefix+0xbc>
    4c1a:	2101      	movs	r1, #1
    4c1c:	e7ec      	b.n	4bf8 <d_prefix+0xfc>
    4c1e:	f7fe ff89 	bl	3b34 <d_type>
    4c22:	4603      	mov	r3, r0
    4c24:	e7c6      	b.n	4bb4 <d_prefix+0xb8>
    4c26:	bf00      	nop

00004c28 <d_expression_1>:
    4c28:	68c2      	ldr	r2, [r0, #12]
    4c2a:	7813      	ldrb	r3, [r2, #0]
    4c2c:	2b4c      	cmp	r3, #76	; 0x4c
    4c2e:	f000 8089 	beq.w	4d44 <d_expression_1+0x11c>
    4c32:	2b54      	cmp	r3, #84	; 0x54
    4c34:	f000 8088 	beq.w	4d48 <d_expression_1+0x120>
    4c38:	b5f0      	push	{r4, r5, r6, r7, lr}
    4c3a:	2b73      	cmp	r3, #115	; 0x73
    4c3c:	b083      	sub	sp, #12
    4c3e:	4604      	mov	r4, r0
    4c40:	d05a      	beq.n	4cf8 <d_expression_1+0xd0>
    4c42:	2b66      	cmp	r3, #102	; 0x66
    4c44:	d028      	beq.n	4c98 <d_expression_1+0x70>
    4c46:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    4c4a:	2909      	cmp	r1, #9
    4c4c:	d80c      	bhi.n	4c68 <d_expression_1+0x40>
    4c4e:	4620      	mov	r0, r4
    4c50:	f7ff fcc6 	bl	45e0 <d_unqualified_name>
    4c54:	4605      	mov	r5, r0
    4c56:	2800      	cmp	r0, #0
    4c58:	d070      	beq.n	4d3c <d_expression_1+0x114>
    4c5a:	68e3      	ldr	r3, [r4, #12]
    4c5c:	781a      	ldrb	r2, [r3, #0]
    4c5e:	2a49      	cmp	r2, #73	; 0x49
    4c60:	d074      	beq.n	4d4c <d_expression_1+0x124>
    4c62:	4628      	mov	r0, r5
    4c64:	b003      	add	sp, #12
    4c66:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4c68:	2b6f      	cmp	r3, #111	; 0x6f
    4c6a:	d061      	beq.n	4d30 <d_expression_1+0x108>
    4c6c:	2b69      	cmp	r3, #105	; 0x69
    4c6e:	d17b      	bne.n	4d68 <d_expression_1+0x140>
    4c70:	7853      	ldrb	r3, [r2, #1]
    4c72:	2b6c      	cmp	r3, #108	; 0x6c
    4c74:	d147      	bne.n	4d06 <d_expression_1+0xde>
    4c76:	3202      	adds	r2, #2
    4c78:	60e2      	str	r2, [r4, #12]
    4c7a:	2500      	movs	r5, #0
    4c7c:	7811      	ldrb	r1, [r2, #0]
    4c7e:	2900      	cmp	r1, #0
    4c80:	d05c      	beq.n	4d3c <d_expression_1+0x114>
    4c82:	7853      	ldrb	r3, [r2, #1]
    4c84:	2b00      	cmp	r3, #0
    4c86:	d059      	beq.n	4d3c <d_expression_1+0x114>
    4c88:	2145      	movs	r1, #69	; 0x45
    4c8a:	4620      	mov	r0, r4
    4c8c:	f000 fa42 	bl	5114 <d_exprlist>
    4c90:	462a      	mov	r2, r5
    4c92:	4603      	mov	r3, r0
    4c94:	2131      	movs	r1, #49	; 0x31
    4c96:	e061      	b.n	4d5c <d_expression_1+0x134>
    4c98:	7853      	ldrb	r3, [r2, #1]
    4c9a:	2b70      	cmp	r3, #112	; 0x70
    4c9c:	d133      	bne.n	4d06 <d_expression_1+0xde>
    4c9e:	1c93      	adds	r3, r2, #2
    4ca0:	60c3      	str	r3, [r0, #12]
    4ca2:	7893      	ldrb	r3, [r2, #2]
    4ca4:	2b54      	cmp	r3, #84	; 0x54
    4ca6:	f000 8148 	beq.w	4f3a <d_expression_1+0x312>
    4caa:	2b5f      	cmp	r3, #95	; 0x5f
    4cac:	f000 8086 	beq.w	4dbc <d_expression_1+0x194>
    4cb0:	2b6e      	cmp	r3, #110	; 0x6e
    4cb2:	d043      	beq.n	4d3c <d_expression_1+0x114>
    4cb4:	f7fe fb64 	bl	3380 <d_number>
    4cb8:	1c41      	adds	r1, r0, #1
    4cba:	d43f      	bmi.n	4d3c <d_expression_1+0x114>
    4cbc:	68e3      	ldr	r3, [r4, #12]
    4cbe:	781a      	ldrb	r2, [r3, #0]
    4cc0:	2a5f      	cmp	r2, #95	; 0x5f
    4cc2:	d13b      	bne.n	4d3c <d_expression_1+0x114>
    4cc4:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
    4cc8:	3301      	adds	r3, #1
    4cca:	4291      	cmp	r1, r2
    4ccc:	60e3      	str	r3, [r4, #12]
    4cce:	d035      	beq.n	4d3c <d_expression_1+0x114>
    4cd0:	3002      	adds	r0, #2
    4cd2:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4cd6:	4293      	cmp	r3, r2
    4cd8:	da30      	bge.n	4d3c <d_expression_1+0x114>
    4cda:	6922      	ldr	r2, [r4, #16]
    4cdc:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4ce0:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4ce4:	3301      	adds	r3, #1
    4ce6:	2600      	movs	r6, #0
    4ce8:	e9c5 6601 	strd	r6, r6, [r5, #4]
    4cec:	6163      	str	r3, [r4, #20]
    4cee:	2306      	movs	r3, #6
    4cf0:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    4cf4:	60e8      	str	r0, [r5, #12]
    4cf6:	e7b4      	b.n	4c62 <d_expression_1+0x3a>
    4cf8:	7853      	ldrb	r3, [r2, #1]
    4cfa:	2b72      	cmp	r3, #114	; 0x72
    4cfc:	f000 80f8 	beq.w	4ef0 <d_expression_1+0x2c8>
    4d00:	2b70      	cmp	r3, #112	; 0x70
    4d02:	f000 8112 	beq.w	4f2a <d_expression_1+0x302>
    4d06:	4620      	mov	r0, r4
    4d08:	f7ff fbe6 	bl	44d8 <d_operator_name>
    4d0c:	4605      	mov	r5, r0
    4d0e:	b1a8      	cbz	r0, 4d3c <d_expression_1+0x114>
    4d10:	7803      	ldrb	r3, [r0, #0]
    4d12:	2b32      	cmp	r3, #50	; 0x32
    4d14:	d035      	beq.n	4d82 <d_expression_1+0x15a>
    4d16:	2b34      	cmp	r3, #52	; 0x34
    4d18:	f000 819b 	beq.w	5052 <d_expression_1+0x42a>
    4d1c:	d80e      	bhi.n	4d3c <d_expression_1+0x114>
    4d1e:	2b33      	cmp	r3, #51	; 0x33
    4d20:	d10c      	bne.n	4d3c <d_expression_1+0x114>
    4d22:	68c3      	ldr	r3, [r0, #12]
    4d24:	2b03      	cmp	r3, #3
    4d26:	d809      	bhi.n	4d3c <d_expression_1+0x114>
    4d28:	e8df f003 	tbb	[pc, r3]
    4d2c:	0808ce6d 	.word	0x0808ce6d
    4d30:	7853      	ldrb	r3, [r2, #1]
    4d32:	2b6e      	cmp	r3, #110	; 0x6e
    4d34:	d1e7      	bne.n	4d06 <d_expression_1+0xde>
    4d36:	3202      	adds	r2, #2
    4d38:	60c2      	str	r2, [r0, #12]
    4d3a:	e788      	b.n	4c4e <d_expression_1+0x26>
    4d3c:	2500      	movs	r5, #0
    4d3e:	4628      	mov	r0, r5
    4d40:	b003      	add	sp, #12
    4d42:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4d44:	f7ff bdec 	b.w	4920 <d_expr_primary>
    4d48:	f7fe bd4e 	b.w	37e8 <d_template_param>
    4d4c:	3301      	adds	r3, #1
    4d4e:	60e3      	str	r3, [r4, #12]
    4d50:	4620      	mov	r0, r4
    4d52:	f7ff fea1 	bl	4a98 <d_template_args_1>
    4d56:	462a      	mov	r2, r5
    4d58:	4603      	mov	r3, r0
    4d5a:	2104      	movs	r1, #4
    4d5c:	4620      	mov	r0, r4
    4d5e:	b003      	add	sp, #12
    4d60:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    4d64:	f7fe ba94 	b.w	3290 <d_make_comp>
    4d68:	2b74      	cmp	r3, #116	; 0x74
    4d6a:	f040 80b2 	bne.w	4ed2 <d_expression_1+0x2aa>
    4d6e:	7853      	ldrb	r3, [r2, #1]
    4d70:	2b6c      	cmp	r3, #108	; 0x6c
    4d72:	d1c8      	bne.n	4d06 <d_expression_1+0xde>
    4d74:	3202      	adds	r2, #2
    4d76:	60e2      	str	r2, [r4, #12]
    4d78:	f7fe fedc 	bl	3b34 <d_type>
    4d7c:	68e2      	ldr	r2, [r4, #12]
    4d7e:	4605      	mov	r5, r0
    4d80:	e77c      	b.n	4c7c <d_expression_1+0x54>
    4d82:	68c1      	ldr	r1, [r0, #12]
    4d84:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4d86:	688a      	ldr	r2, [r1, #8]
    4d88:	680e      	ldr	r6, [r1, #0]
    4d8a:	3a02      	subs	r2, #2
    4d8c:	4413      	add	r3, r2
    4d8e:	62e3      	str	r3, [r4, #44]	; 0x2c
    4d90:	7833      	ldrb	r3, [r6, #0]
    4d92:	2b73      	cmp	r3, #115	; 0x73
    4d94:	d10b      	bne.n	4dae <d_expression_1+0x186>
    4d96:	7872      	ldrb	r2, [r6, #1]
    4d98:	2a74      	cmp	r2, #116	; 0x74
    4d9a:	d108      	bne.n	4dae <d_expression_1+0x186>
    4d9c:	78b2      	ldrb	r2, [r6, #2]
    4d9e:	b932      	cbnz	r2, 4dae <d_expression_1+0x186>
    4da0:	4620      	mov	r0, r4
    4da2:	f7fe fec7 	bl	3b34 <d_type>
    4da6:	462a      	mov	r2, r5
    4da8:	4603      	mov	r3, r0
    4daa:	2137      	movs	r1, #55	; 0x37
    4dac:	e7d6      	b.n	4d5c <d_expression_1+0x134>
    4dae:	68cf      	ldr	r7, [r1, #12]
    4db0:	2f03      	cmp	r7, #3
    4db2:	d8c3      	bhi.n	4d3c <d_expression_1+0x114>
    4db4:	e8df f007 	tbb	[pc, r7]
    4db8:	2b540627 	.word	0x2b540627
    4dbc:	3203      	adds	r2, #3
    4dbe:	60c2      	str	r2, [r0, #12]
    4dc0:	2001      	movs	r0, #1
    4dc2:	e786      	b.n	4cd2 <d_expression_1+0xaa>
    4dc4:	7832      	ldrb	r2, [r6, #0]
    4dc6:	2a70      	cmp	r2, #112	; 0x70
    4dc8:	f000 80c0 	beq.w	4f4c <d_expression_1+0x324>
    4dcc:	2a6d      	cmp	r2, #109	; 0x6d
    4dce:	f000 80bd 	beq.w	4f4c <d_expression_1+0x324>
    4dd2:	2700      	movs	r7, #0
    4dd4:	2b73      	cmp	r3, #115	; 0x73
    4dd6:	f040 80b4 	bne.w	4f42 <d_expression_1+0x31a>
    4dda:	7873      	ldrb	r3, [r6, #1]
    4ddc:	2b50      	cmp	r3, #80	; 0x50
    4dde:	f040 80b0 	bne.w	4f42 <d_expression_1+0x31a>
    4de2:	78b3      	ldrb	r3, [r6, #2]
    4de4:	2b00      	cmp	r3, #0
    4de6:	f040 80ac 	bne.w	4f42 <d_expression_1+0x31a>
    4dea:	4620      	mov	r0, r4
    4dec:	f7ff fe54 	bl	4a98 <d_template_args_1>
    4df0:	4603      	mov	r3, r0
    4df2:	b12f      	cbz	r7, 4e00 <d_expression_1+0x1d8>
    4df4:	461a      	mov	r2, r3
    4df6:	2139      	movs	r1, #57	; 0x39
    4df8:	4620      	mov	r0, r4
    4dfa:	f7fe fa49 	bl	3290 <d_make_comp>
    4dfe:	4603      	mov	r3, r0
    4e00:	462a      	mov	r2, r5
    4e02:	2137      	movs	r1, #55	; 0x37
    4e04:	e7aa      	b.n	4d5c <d_expression_1+0x134>
    4e06:	2300      	movs	r3, #0
    4e08:	462a      	mov	r2, r5
    4e0a:	2136      	movs	r1, #54	; 0x36
    4e0c:	e7a6      	b.n	4d5c <d_expression_1+0x134>
    4e0e:	2b71      	cmp	r3, #113	; 0x71
    4e10:	f040 80c4 	bne.w	4f9c <d_expression_1+0x374>
    4e14:	7872      	ldrb	r2, [r6, #1]
    4e16:	2a75      	cmp	r2, #117	; 0x75
    4e18:	f040 80c0 	bne.w	4f9c <d_expression_1+0x374>
    4e1c:	78b2      	ldrb	r2, [r6, #2]
    4e1e:	2a00      	cmp	r2, #0
    4e20:	f040 80bc 	bne.w	4f9c <d_expression_1+0x374>
    4e24:	4620      	mov	r0, r4
    4e26:	f7ff feff 	bl	4c28 <d_expression_1>
    4e2a:	4606      	mov	r6, r0
    4e2c:	4620      	mov	r0, r4
    4e2e:	f7ff fefb 	bl	4c28 <d_expression_1>
    4e32:	4607      	mov	r7, r0
    4e34:	4620      	mov	r0, r4
    4e36:	f7ff fef7 	bl	4c28 <d_expression_1>
    4e3a:	4603      	mov	r3, r0
    4e3c:	2800      	cmp	r0, #0
    4e3e:	f43f af7d 	beq.w	4d3c <d_expression_1+0x114>
    4e42:	463a      	mov	r2, r7
    4e44:	213c      	movs	r1, #60	; 0x3c
    4e46:	4620      	mov	r0, r4
    4e48:	f7fe fa22 	bl	3290 <d_make_comp>
    4e4c:	4632      	mov	r2, r6
    4e4e:	4603      	mov	r3, r0
    4e50:	213b      	movs	r1, #59	; 0x3b
    4e52:	4620      	mov	r0, r4
    4e54:	f7fe fa1c 	bl	3290 <d_make_comp>
    4e58:	462a      	mov	r2, r5
    4e5a:	4603      	mov	r3, r0
    4e5c:	213a      	movs	r1, #58	; 0x3a
    4e5e:	e77d      	b.n	4d5c <d_expression_1+0x134>
    4e60:	68eb      	ldr	r3, [r5, #12]
    4e62:	681b      	ldr	r3, [r3, #0]
    4e64:	785a      	ldrb	r2, [r3, #1]
    4e66:	2a63      	cmp	r2, #99	; 0x63
    4e68:	f000 810e 	beq.w	5088 <d_expression_1+0x460>
    4e6c:	7833      	ldrb	r3, [r6, #0]
    4e6e:	2b66      	cmp	r3, #102	; 0x66
    4e70:	f000 8133 	beq.w	50da <d_expression_1+0x4b2>
    4e74:	2b64      	cmp	r3, #100	; 0x64
    4e76:	f040 8127 	bne.w	50c8 <d_expression_1+0x4a0>
    4e7a:	7873      	ldrb	r3, [r6, #1]
    4e7c:	2b69      	cmp	r3, #105	; 0x69
    4e7e:	f040 8123 	bne.w	50c8 <d_expression_1+0x4a0>
    4e82:	78b3      	ldrb	r3, [r6, #2]
    4e84:	2b00      	cmp	r3, #0
    4e86:	f040 811f 	bne.w	50c8 <d_expression_1+0x4a0>
    4e8a:	4620      	mov	r0, r4
    4e8c:	f7ff fba8 	bl	45e0 <d_unqualified_name>
    4e90:	4607      	mov	r7, r0
    4e92:	7833      	ldrb	r3, [r6, #0]
    4e94:	2b63      	cmp	r3, #99	; 0x63
    4e96:	f040 80b4 	bne.w	5002 <d_expression_1+0x3da>
    4e9a:	7872      	ldrb	r2, [r6, #1]
    4e9c:	2a6c      	cmp	r2, #108	; 0x6c
    4e9e:	f040 80b0 	bne.w	5002 <d_expression_1+0x3da>
    4ea2:	78b2      	ldrb	r2, [r6, #2]
    4ea4:	2a00      	cmp	r2, #0
    4ea6:	f040 80ac 	bne.w	5002 <d_expression_1+0x3da>
    4eaa:	2145      	movs	r1, #69	; 0x45
    4eac:	4620      	mov	r0, r4
    4eae:	f000 f931 	bl	5114 <d_exprlist>
    4eb2:	4602      	mov	r2, r0
    4eb4:	4613      	mov	r3, r2
    4eb6:	2139      	movs	r1, #57	; 0x39
    4eb8:	463a      	mov	r2, r7
    4eba:	4620      	mov	r0, r4
    4ebc:	f7fe f9e8 	bl	3290 <d_make_comp>
    4ec0:	462a      	mov	r2, r5
    4ec2:	4603      	mov	r3, r0
    4ec4:	2138      	movs	r1, #56	; 0x38
    4ec6:	e749      	b.n	4d5c <d_expression_1+0x134>
    4ec8:	4620      	mov	r0, r4
    4eca:	f7ff fead 	bl	4c28 <d_expression_1>
    4ece:	4603      	mov	r3, r0
    4ed0:	e796      	b.n	4e00 <d_expression_1+0x1d8>
    4ed2:	2b75      	cmp	r3, #117	; 0x75
    4ed4:	f47f af17 	bne.w	4d06 <d_expression_1+0xde>
    4ed8:	3201      	adds	r2, #1
    4eda:	60c2      	str	r2, [r0, #12]
    4edc:	f7fe fcf0 	bl	38c0 <d_source_name>
    4ee0:	9001      	str	r0, [sp, #4]
    4ee2:	4620      	mov	r0, r4
    4ee4:	f7ff fdd8 	bl	4a98 <d_template_args_1>
    4ee8:	9a01      	ldr	r2, [sp, #4]
    4eea:	4603      	mov	r3, r0
    4eec:	213f      	movs	r1, #63	; 0x3f
    4eee:	e735      	b.n	4d5c <d_expression_1+0x134>
    4ef0:	1c93      	adds	r3, r2, #2
    4ef2:	6b81      	ldr	r1, [r0, #56]	; 0x38
    4ef4:	60c3      	str	r3, [r0, #12]
    4ef6:	7893      	ldrb	r3, [r2, #2]
    4ef8:	b131      	cbz	r1, 4f08 <d_expression_1+0x2e0>
    4efa:	2b55      	cmp	r3, #85	; 0x55
    4efc:	d84a      	bhi.n	4f94 <d_expression_1+0x36c>
    4efe:	2b42      	cmp	r3, #66	; 0x42
    4f00:	d832      	bhi.n	4f68 <d_expression_1+0x340>
    4f02:	3b30      	subs	r3, #48	; 0x30
    4f04:	2b09      	cmp	r3, #9
    4f06:	d936      	bls.n	4f76 <d_expression_1+0x34e>
    4f08:	4620      	mov	r0, r4
    4f0a:	f7fe fe13 	bl	3b34 <d_type>
    4f0e:	4605      	mov	r5, r0
    4f10:	4620      	mov	r0, r4
    4f12:	f7ff fb65 	bl	45e0 <d_unqualified_name>
    4f16:	68e3      	ldr	r3, [r4, #12]
    4f18:	7819      	ldrb	r1, [r3, #0]
    4f1a:	2949      	cmp	r1, #73	; 0x49
    4f1c:	4602      	mov	r2, r0
    4f1e:	f000 80a5 	beq.w	506c <d_expression_1+0x444>
    4f22:	4613      	mov	r3, r2
    4f24:	2101      	movs	r1, #1
    4f26:	462a      	mov	r2, r5
    4f28:	e718      	b.n	4d5c <d_expression_1+0x134>
    4f2a:	3202      	adds	r2, #2
    4f2c:	60c2      	str	r2, [r0, #12]
    4f2e:	f7ff fe7b 	bl	4c28 <d_expression_1>
    4f32:	2300      	movs	r3, #0
    4f34:	4602      	mov	r2, r0
    4f36:	214c      	movs	r1, #76	; 0x4c
    4f38:	e710      	b.n	4d5c <d_expression_1+0x134>
    4f3a:	3203      	adds	r2, #3
    4f3c:	60c2      	str	r2, [r0, #12]
    4f3e:	2000      	movs	r0, #0
    4f40:	e6c7      	b.n	4cd2 <d_expression_1+0xaa>
    4f42:	4620      	mov	r0, r4
    4f44:	f7ff fe70 	bl	4c28 <d_expression_1>
    4f48:	4603      	mov	r3, r0
    4f4a:	e752      	b.n	4df2 <d_expression_1+0x1ca>
    4f4c:	7871      	ldrb	r1, [r6, #1]
    4f4e:	4291      	cmp	r1, r2
    4f50:	f47f af3f 	bne.w	4dd2 <d_expression_1+0x1aa>
    4f54:	68e2      	ldr	r2, [r4, #12]
    4f56:	7811      	ldrb	r1, [r2, #0]
    4f58:	295f      	cmp	r1, #95	; 0x5f
    4f5a:	f47f af3b 	bne.w	4dd4 <d_expression_1+0x1ac>
    4f5e:	3201      	adds	r2, #1
    4f60:	60e2      	str	r2, [r4, #12]
    4f62:	7833      	ldrb	r3, [r6, #0]
    4f64:	2700      	movs	r7, #0
    4f66:	e735      	b.n	4dd4 <d_expression_1+0x1ac>
    4f68:	4a68      	ldr	r2, [pc, #416]	; (510c <d_expression_1+0x4e4>)
    4f6a:	3b43      	subs	r3, #67	; 0x43
    4f6c:	b2db      	uxtb	r3, r3
    4f6e:	fa22 f303 	lsr.w	r3, r2, r3
    4f72:	07db      	lsls	r3, r3, #31
    4f74:	d5c8      	bpl.n	4f08 <d_expression_1+0x2e0>
    4f76:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    4f7a:	63a3      	str	r3, [r4, #56]	; 0x38
    4f7c:	2100      	movs	r1, #0
    4f7e:	4620      	mov	r0, r4
    4f80:	f7ff fdbc 	bl	4afc <d_prefix>
    4f84:	68e3      	ldr	r3, [r4, #12]
    4f86:	781a      	ldrb	r2, [r3, #0]
    4f88:	2a45      	cmp	r2, #69	; 0x45
    4f8a:	4605      	mov	r5, r0
    4f8c:	d1c0      	bne.n	4f10 <d_expression_1+0x2e8>
    4f8e:	3301      	adds	r3, #1
    4f90:	60e3      	str	r3, [r4, #12]
    4f92:	e7bd      	b.n	4f10 <d_expression_1+0x2e8>
    4f94:	3b61      	subs	r3, #97	; 0x61
    4f96:	2b19      	cmp	r3, #25
    4f98:	d8b6      	bhi.n	4f08 <d_expression_1+0x2e0>
    4f9a:	e7ec      	b.n	4f76 <d_expression_1+0x34e>
    4f9c:	2b64      	cmp	r3, #100	; 0x64
    4f9e:	d106      	bne.n	4fae <d_expression_1+0x386>
    4fa0:	7873      	ldrb	r3, [r6, #1]
    4fa2:	2b58      	cmp	r3, #88	; 0x58
    4fa4:	d103      	bne.n	4fae <d_expression_1+0x386>
    4fa6:	78b3      	ldrb	r3, [r6, #2]
    4fa8:	2b00      	cmp	r3, #0
    4faa:	f43f af3b 	beq.w	4e24 <d_expression_1+0x1fc>
    4fae:	7833      	ldrb	r3, [r6, #0]
    4fb0:	2b66      	cmp	r3, #102	; 0x66
    4fb2:	f000 8097 	beq.w	50e4 <d_expression_1+0x4bc>
    4fb6:	2b6e      	cmp	r3, #110	; 0x6e
    4fb8:	f47f aec0 	bne.w	4d3c <d_expression_1+0x114>
    4fbc:	7873      	ldrb	r3, [r6, #1]
    4fbe:	2b77      	cmp	r3, #119	; 0x77
    4fc0:	d002      	beq.n	4fc8 <d_expression_1+0x3a0>
    4fc2:	2b61      	cmp	r3, #97	; 0x61
    4fc4:	f47f aeba 	bne.w	4d3c <d_expression_1+0x114>
    4fc8:	215f      	movs	r1, #95	; 0x5f
    4fca:	4620      	mov	r0, r4
    4fcc:	f000 f8a2 	bl	5114 <d_exprlist>
    4fd0:	4606      	mov	r6, r0
    4fd2:	4620      	mov	r0, r4
    4fd4:	f7fe fdae 	bl	3b34 <d_type>
    4fd8:	68e3      	ldr	r3, [r4, #12]
    4fda:	781a      	ldrb	r2, [r3, #0]
    4fdc:	2a45      	cmp	r2, #69	; 0x45
    4fde:	4607      	mov	r7, r0
    4fe0:	f000 8090 	beq.w	5104 <d_expression_1+0x4dc>
    4fe4:	2a70      	cmp	r2, #112	; 0x70
    4fe6:	f000 8081 	beq.w	50ec <d_expression_1+0x4c4>
    4fea:	2a69      	cmp	r2, #105	; 0x69
    4fec:	f47f aea6 	bne.w	4d3c <d_expression_1+0x114>
    4ff0:	785b      	ldrb	r3, [r3, #1]
    4ff2:	2b6c      	cmp	r3, #108	; 0x6c
    4ff4:	f47f aea2 	bne.w	4d3c <d_expression_1+0x114>
    4ff8:	4620      	mov	r0, r4
    4ffa:	f7ff fe15 	bl	4c28 <d_expression_1>
    4ffe:	4603      	mov	r3, r0
    5000:	e71f      	b.n	4e42 <d_expression_1+0x21a>
    5002:	2b64      	cmp	r3, #100	; 0x64
    5004:	d153      	bne.n	50ae <d_expression_1+0x486>
    5006:	7872      	ldrb	r2, [r6, #1]
    5008:	2a74      	cmp	r2, #116	; 0x74
    500a:	d150      	bne.n	50ae <d_expression_1+0x486>
    500c:	78b2      	ldrb	r2, [r6, #2]
    500e:	2a00      	cmp	r2, #0
    5010:	d14d      	bne.n	50ae <d_expression_1+0x486>
    5012:	68e3      	ldr	r3, [r4, #12]
    5014:	781a      	ldrb	r2, [r3, #0]
    5016:	2a67      	cmp	r2, #103	; 0x67
    5018:	d05b      	beq.n	50d2 <d_expression_1+0x4aa>
    501a:	2a73      	cmp	r2, #115	; 0x73
    501c:	d102      	bne.n	5024 <d_expression_1+0x3fc>
    501e:	785b      	ldrb	r3, [r3, #1]
    5020:	2b72      	cmp	r3, #114	; 0x72
    5022:	d04c      	beq.n	50be <d_expression_1+0x496>
    5024:	4620      	mov	r0, r4
    5026:	f7ff fadb 	bl	45e0 <d_unqualified_name>
    502a:	68e3      	ldr	r3, [r4, #12]
    502c:	7819      	ldrb	r1, [r3, #0]
    502e:	2949      	cmp	r1, #73	; 0x49
    5030:	4602      	mov	r2, r0
    5032:	f47f af3f 	bne.w	4eb4 <d_expression_1+0x28c>
    5036:	3301      	adds	r3, #1
    5038:	60e3      	str	r3, [r4, #12]
    503a:	4620      	mov	r0, r4
    503c:	9201      	str	r2, [sp, #4]
    503e:	f7ff fd2b 	bl	4a98 <d_template_args_1>
    5042:	9a01      	ldr	r2, [sp, #4]
    5044:	4603      	mov	r3, r0
    5046:	2104      	movs	r1, #4
    5048:	4620      	mov	r0, r4
    504a:	f7fe f921 	bl	3290 <d_make_comp>
    504e:	4602      	mov	r2, r0
    5050:	e730      	b.n	4eb4 <d_expression_1+0x28c>
    5052:	68e3      	ldr	r3, [r4, #12]
    5054:	781a      	ldrb	r2, [r3, #0]
    5056:	2a5f      	cmp	r2, #95	; 0x5f
    5058:	f47f af36 	bne.w	4ec8 <d_expression_1+0x2a0>
    505c:	3301      	adds	r3, #1
    505e:	60e3      	str	r3, [r4, #12]
    5060:	2145      	movs	r1, #69	; 0x45
    5062:	4620      	mov	r0, r4
    5064:	f000 f856 	bl	5114 <d_exprlist>
    5068:	4603      	mov	r3, r0
    506a:	e6c9      	b.n	4e00 <d_expression_1+0x1d8>
    506c:	3301      	adds	r3, #1
    506e:	60e3      	str	r3, [r4, #12]
    5070:	4620      	mov	r0, r4
    5072:	9201      	str	r2, [sp, #4]
    5074:	f7ff fd10 	bl	4a98 <d_template_args_1>
    5078:	9a01      	ldr	r2, [sp, #4]
    507a:	4603      	mov	r3, r0
    507c:	2104      	movs	r1, #4
    507e:	4620      	mov	r0, r4
    5080:	f7fe f906 	bl	3290 <d_make_comp>
    5084:	4602      	mov	r2, r0
    5086:	e74c      	b.n	4f22 <d_expression_1+0x2fa>
    5088:	781b      	ldrb	r3, [r3, #0]
    508a:	2b73      	cmp	r3, #115	; 0x73
    508c:	d00a      	beq.n	50a4 <d_expression_1+0x47c>
    508e:	3b63      	subs	r3, #99	; 0x63
    5090:	b2db      	uxtb	r3, r3
    5092:	2b0f      	cmp	r3, #15
    5094:	f63f aeea 	bhi.w	4e6c <d_expression_1+0x244>
    5098:	4a1d      	ldr	r2, [pc, #116]	; (5110 <d_expression_1+0x4e8>)
    509a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    509e:	2b00      	cmp	r3, #0
    50a0:	f43f aee4 	beq.w	4e6c <d_expression_1+0x244>
    50a4:	4620      	mov	r0, r4
    50a6:	f7fe fd45 	bl	3b34 <d_type>
    50aa:	4607      	mov	r7, r0
    50ac:	e6f1      	b.n	4e92 <d_expression_1+0x26a>
    50ae:	2b70      	cmp	r3, #112	; 0x70
    50b0:	d105      	bne.n	50be <d_expression_1+0x496>
    50b2:	7873      	ldrb	r3, [r6, #1]
    50b4:	2b74      	cmp	r3, #116	; 0x74
    50b6:	d102      	bne.n	50be <d_expression_1+0x496>
    50b8:	78b3      	ldrb	r3, [r6, #2]
    50ba:	2b00      	cmp	r3, #0
    50bc:	d0a9      	beq.n	5012 <d_expression_1+0x3ea>
    50be:	4620      	mov	r0, r4
    50c0:	f7ff fdb2 	bl	4c28 <d_expression_1>
    50c4:	4602      	mov	r2, r0
    50c6:	e6f5      	b.n	4eb4 <d_expression_1+0x28c>
    50c8:	4620      	mov	r0, r4
    50ca:	f7ff fdad 	bl	4c28 <d_expression_1>
    50ce:	4607      	mov	r7, r0
    50d0:	e6df      	b.n	4e92 <d_expression_1+0x26a>
    50d2:	785b      	ldrb	r3, [r3, #1]
    50d4:	2b73      	cmp	r3, #115	; 0x73
    50d6:	d1a5      	bne.n	5024 <d_expression_1+0x3fc>
    50d8:	e7f1      	b.n	50be <d_expression_1+0x496>
    50da:	4620      	mov	r0, r4
    50dc:	f7ff f9fc 	bl	44d8 <d_operator_name>
    50e0:	4607      	mov	r7, r0
    50e2:	e6d6      	b.n	4e92 <d_expression_1+0x26a>
    50e4:	4620      	mov	r0, r4
    50e6:	f7ff f9f7 	bl	44d8 <d_operator_name>
    50ea:	e69e      	b.n	4e2a <d_expression_1+0x202>
    50ec:	785a      	ldrb	r2, [r3, #1]
    50ee:	2a69      	cmp	r2, #105	; 0x69
    50f0:	f47f ae24 	bne.w	4d3c <d_expression_1+0x114>
    50f4:	3302      	adds	r3, #2
    50f6:	60e3      	str	r3, [r4, #12]
    50f8:	2145      	movs	r1, #69	; 0x45
    50fa:	4620      	mov	r0, r4
    50fc:	f000 f80a 	bl	5114 <d_exprlist>
    5100:	4603      	mov	r3, r0
    5102:	e69e      	b.n	4e42 <d_expression_1+0x21a>
    5104:	3301      	adds	r3, #1
    5106:	60e3      	str	r3, [r4, #12]
    5108:	2300      	movs	r3, #0
    510a:	e69a      	b.n	4e42 <d_expression_1+0x21a>
    510c:	00040201 	.word	0x00040201
    5110:	20000370 	.word	0x20000370

00005114 <d_exprlist>:
    5114:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    5118:	68c2      	ldr	r2, [r0, #12]
    511a:	460e      	mov	r6, r1
    511c:	7811      	ldrb	r1, [r2, #0]
    511e:	b082      	sub	sp, #8
    5120:	2300      	movs	r3, #0
    5122:	42b1      	cmp	r1, r6
    5124:	4604      	mov	r4, r0
    5126:	9301      	str	r3, [sp, #4]
    5128:	d024      	beq.n	5174 <d_exprlist+0x60>
    512a:	f8d0 8030 	ldr.w	r8, [r0, #48]	; 0x30
    512e:	ad01      	add	r5, sp, #4
    5130:	2701      	movs	r7, #1
    5132:	e009      	b.n	5148 <d_exprlist+0x34>
    5134:	f7fe f8ac 	bl	3290 <d_make_comp>
    5138:	6028      	str	r0, [r5, #0]
    513a:	f100 0510 	add.w	r5, r0, #16
    513e:	b178      	cbz	r0, 5160 <d_exprlist+0x4c>
    5140:	68e3      	ldr	r3, [r4, #12]
    5142:	781a      	ldrb	r2, [r3, #0]
    5144:	42b2      	cmp	r2, r6
    5146:	d00f      	beq.n	5168 <d_exprlist+0x54>
    5148:	6327      	str	r7, [r4, #48]	; 0x30
    514a:	4620      	mov	r0, r4
    514c:	f7ff fd6c 	bl	4c28 <d_expression_1>
    5150:	4602      	mov	r2, r0
    5152:	2300      	movs	r3, #0
    5154:	212e      	movs	r1, #46	; 0x2e
    5156:	4620      	mov	r0, r4
    5158:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
    515c:	2a00      	cmp	r2, #0
    515e:	d1e9      	bne.n	5134 <d_exprlist+0x20>
    5160:	2000      	movs	r0, #0
    5162:	b002      	add	sp, #8
    5164:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    5168:	9801      	ldr	r0, [sp, #4]
    516a:	3301      	adds	r3, #1
    516c:	60e3      	str	r3, [r4, #12]
    516e:	b002      	add	sp, #8
    5170:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    5174:	3201      	adds	r2, #1
    5176:	60c2      	str	r2, [r0, #12]
    5178:	212e      	movs	r1, #46	; 0x2e
    517a:	461a      	mov	r2, r3
    517c:	b002      	add	sp, #8
    517e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    5182:	f7fe b885 	b.w	3290 <d_make_comp>
    5186:	bf00      	nop

00005188 <d_cv_qualifiers>:
    5188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    518c:	460f      	mov	r7, r1
    518e:	68c1      	ldr	r1, [r0, #12]
    5190:	f1b2 0900 	subs.w	r9, r2, #0
    5194:	b083      	sub	sp, #12
    5196:	780a      	ldrb	r2, [r1, #0]
    5198:	4604      	mov	r4, r0
    519a:	bf15      	itete	ne
    519c:	f04f 0a1e 	movne.w	sl, #30
    51a0:	f04f 0a1b 	moveq.w	sl, #27
    51a4:	f04f 081d 	movne.w	r8, #29
    51a8:	f04f 081a 	moveq.w	r8, #26
    51ac:	bf14      	ite	ne
    51ae:	261c      	movne	r6, #28
    51b0:	2619      	moveq	r6, #25
    51b2:	463d      	mov	r5, r7
    51b4:	f04f 0b01 	mov.w	fp, #1
    51b8:	e01b      	b.n	51f2 <d_cv_qualifiers+0x6a>
    51ba:	2a56      	cmp	r2, #86	; 0x56
    51bc:	d033      	beq.n	5226 <d_cv_qualifiers+0x9e>
    51be:	2a4b      	cmp	r2, #75	; 0x4b
    51c0:	d037      	beq.n	5232 <d_cv_qualifiers+0xaa>
    51c2:	784b      	ldrb	r3, [r1, #1]
    51c4:	b353      	cbz	r3, 521c <d_cv_qualifiers+0x94>
    51c6:	1c8b      	adds	r3, r1, #2
    51c8:	60e3      	str	r3, [r4, #12]
    51ca:	784b      	ldrb	r3, [r1, #1]
    51cc:	2b78      	cmp	r3, #120	; 0x78
    51ce:	d04f      	beq.n	5270 <d_cv_qualifiers+0xe8>
    51d0:	2b6f      	cmp	r3, #111	; 0x6f
    51d2:	d134      	bne.n	523e <d_cv_qualifiers+0xb6>
    51d4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    51d6:	3309      	adds	r3, #9
    51d8:	62e3      	str	r3, [r4, #44]	; 0x2c
    51da:	2150      	movs	r1, #80	; 0x50
    51dc:	2300      	movs	r3, #0
    51de:	2200      	movs	r2, #0
    51e0:	4620      	mov	r0, r4
    51e2:	f7fe f855 	bl	3290 <d_make_comp>
    51e6:	6028      	str	r0, [r5, #0]
    51e8:	b1c0      	cbz	r0, 521c <d_cv_qualifiers+0x94>
    51ea:	68e1      	ldr	r1, [r4, #12]
    51ec:	780a      	ldrb	r2, [r1, #0]
    51ee:	f100 050c 	add.w	r5, r0, #12
    51f2:	4608      	mov	r0, r1
    51f4:	f7fe fa24 	bl	3640 <next_is_type_qual.isra.0>
    51f8:	2800      	cmp	r0, #0
    51fa:	d03f      	beq.n	527c <d_cv_qualifiers+0xf4>
    51fc:	1c4b      	adds	r3, r1, #1
    51fe:	2a72      	cmp	r2, #114	; 0x72
    5200:	60e3      	str	r3, [r4, #12]
    5202:	d1da      	bne.n	51ba <d_cv_qualifiers+0x32>
    5204:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5206:	3309      	adds	r3, #9
    5208:	62e3      	str	r3, [r4, #44]	; 0x2c
    520a:	4631      	mov	r1, r6
    520c:	2300      	movs	r3, #0
    520e:	2200      	movs	r2, #0
    5210:	4620      	mov	r0, r4
    5212:	f7fe f83d 	bl	3290 <d_make_comp>
    5216:	6028      	str	r0, [r5, #0]
    5218:	2800      	cmp	r0, #0
    521a:	d1e6      	bne.n	51ea <d_cv_qualifiers+0x62>
    521c:	2500      	movs	r5, #0
    521e:	4628      	mov	r0, r5
    5220:	b003      	add	sp, #12
    5222:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5226:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5228:	3309      	adds	r3, #9
    522a:	62e3      	str	r3, [r4, #44]	; 0x2c
    522c:	4641      	mov	r1, r8
    522e:	2300      	movs	r3, #0
    5230:	e7d5      	b.n	51de <d_cv_qualifiers+0x56>
    5232:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5234:	3306      	adds	r3, #6
    5236:	62e3      	str	r3, [r4, #44]	; 0x2c
    5238:	4651      	mov	r1, sl
    523a:	2300      	movs	r3, #0
    523c:	e7cf      	b.n	51de <d_cv_qualifiers+0x56>
    523e:	2b4f      	cmp	r3, #79	; 0x4f
    5240:	d138      	bne.n	52b4 <d_cv_qualifiers+0x12c>
    5242:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5244:	3309      	adds	r3, #9
    5246:	62e3      	str	r3, [r4, #44]	; 0x2c
    5248:	4620      	mov	r0, r4
    524a:	6b23      	ldr	r3, [r4, #48]	; 0x30
    524c:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
    5250:	9301      	str	r3, [sp, #4]
    5252:	f7ff fce9 	bl	4c28 <d_expression_1>
    5256:	9b01      	ldr	r3, [sp, #4]
    5258:	6323      	str	r3, [r4, #48]	; 0x30
    525a:	4603      	mov	r3, r0
    525c:	2800      	cmp	r0, #0
    525e:	d0dd      	beq.n	521c <d_cv_qualifiers+0x94>
    5260:	68e2      	ldr	r2, [r4, #12]
    5262:	7811      	ldrb	r1, [r2, #0]
    5264:	2945      	cmp	r1, #69	; 0x45
    5266:	d1d9      	bne.n	521c <d_cv_qualifiers+0x94>
    5268:	3201      	adds	r2, #1
    526a:	60e2      	str	r2, [r4, #12]
    526c:	2150      	movs	r1, #80	; 0x50
    526e:	e7b6      	b.n	51de <d_cv_qualifiers+0x56>
    5270:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5272:	3311      	adds	r3, #17
    5274:	62e3      	str	r3, [r4, #44]	; 0x2c
    5276:	214e      	movs	r1, #78	; 0x4e
    5278:	2300      	movs	r3, #0
    527a:	e7b0      	b.n	51de <d_cv_qualifiers+0x56>
    527c:	f1b9 0f00 	cmp.w	r9, #0
    5280:	d1cd      	bne.n	521e <d_cv_qualifiers+0x96>
    5282:	2a46      	cmp	r2, #70	; 0x46
    5284:	d1cb      	bne.n	521e <d_cv_qualifiers+0x96>
    5286:	42bd      	cmp	r5, r7
    5288:	d0c9      	beq.n	521e <d_cv_qualifiers+0x96>
    528a:	201d      	movs	r0, #29
    528c:	211e      	movs	r1, #30
    528e:	221c      	movs	r2, #28
    5290:	e004      	b.n	529c <d_cv_qualifiers+0x114>
    5292:	2b19      	cmp	r3, #25
    5294:	d00c      	beq.n	52b0 <d_cv_qualifiers+0x128>
    5296:	370c      	adds	r7, #12
    5298:	42bd      	cmp	r5, r7
    529a:	d0c0      	beq.n	521e <d_cv_qualifiers+0x96>
    529c:	683f      	ldr	r7, [r7, #0]
    529e:	783b      	ldrb	r3, [r7, #0]
    52a0:	2b1a      	cmp	r3, #26
    52a2:	d003      	beq.n	52ac <d_cv_qualifiers+0x124>
    52a4:	2b1b      	cmp	r3, #27
    52a6:	d1f4      	bne.n	5292 <d_cv_qualifiers+0x10a>
    52a8:	7039      	strb	r1, [r7, #0]
    52aa:	e7f4      	b.n	5296 <d_cv_qualifiers+0x10e>
    52ac:	7038      	strb	r0, [r7, #0]
    52ae:	e7f2      	b.n	5296 <d_cv_qualifiers+0x10e>
    52b0:	703a      	strb	r2, [r7, #0]
    52b2:	e7f0      	b.n	5296 <d_cv_qualifiers+0x10e>
    52b4:	2b77      	cmp	r3, #119	; 0x77
    52b6:	d1b1      	bne.n	521c <d_cv_qualifiers+0x94>
    52b8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    52ba:	3306      	adds	r3, #6
    52bc:	62e3      	str	r3, [r4, #44]	; 0x2c
    52be:	4620      	mov	r0, r4
    52c0:	f7ff f870 	bl	43a4 <d_parmlist>
    52c4:	4603      	mov	r3, r0
    52c6:	2800      	cmp	r0, #0
    52c8:	d0a8      	beq.n	521c <d_cv_qualifiers+0x94>
    52ca:	68e2      	ldr	r2, [r4, #12]
    52cc:	7811      	ldrb	r1, [r2, #0]
    52ce:	2945      	cmp	r1, #69	; 0x45
    52d0:	d1a4      	bne.n	521c <d_cv_qualifiers+0x94>
    52d2:	3201      	adds	r2, #1
    52d4:	60e2      	str	r2, [r4, #12]
    52d6:	2151      	movs	r1, #81	; 0x51
    52d8:	e781      	b.n	51de <d_cv_qualifiers+0x56>
    52da:	bf00      	nop

000052dc <d_special_name>:
    52dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    52e0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
    52e2:	68c3      	ldr	r3, [r0, #12]
    52e4:	f101 0214 	add.w	r2, r1, #20
    52e8:	62c2      	str	r2, [r0, #44]	; 0x2c
    52ea:	781a      	ldrb	r2, [r3, #0]
    52ec:	2a54      	cmp	r2, #84	; 0x54
    52ee:	b082      	sub	sp, #8
    52f0:	4604      	mov	r4, r0
    52f2:	d075      	beq.n	53e0 <d_special_name+0x104>
    52f4:	2a47      	cmp	r2, #71	; 0x47
    52f6:	d128      	bne.n	534a <d_special_name+0x6e>
    52f8:	1c5a      	adds	r2, r3, #1
    52fa:	60c2      	str	r2, [r0, #12]
    52fc:	785a      	ldrb	r2, [r3, #1]
    52fe:	b322      	cbz	r2, 534a <d_special_name+0x6e>
    5300:	1c9a      	adds	r2, r3, #2
    5302:	60c2      	str	r2, [r0, #12]
    5304:	785a      	ldrb	r2, [r3, #1]
    5306:	2a56      	cmp	r2, #86	; 0x56
    5308:	d823      	bhi.n	5352 <d_special_name+0x76>
    530a:	2a40      	cmp	r2, #64	; 0x40
    530c:	d91d      	bls.n	534a <d_special_name+0x6e>
    530e:	3a41      	subs	r2, #65	; 0x41
    5310:	2a15      	cmp	r2, #21
    5312:	d81a      	bhi.n	534a <d_special_name+0x6e>
    5314:	e8df f012 	tbh	[pc, r2, lsl #1]
    5318:	0019011d 	.word	0x0019011d
    531c:	00190019 	.word	0x00190019
    5320:	00190019 	.word	0x00190019
    5324:	00190019 	.word	0x00190019
    5328:	00190019 	.word	0x00190019
    532c:	00190019 	.word	0x00190019
    5330:	00190019 	.word	0x00190019
    5334:	00190019 	.word	0x00190019
    5338:	00ff0019 	.word	0x00ff0019
    533c:	00e90019 	.word	0x00e90019
    5340:	00de0019 	.word	0x00de0019
    5344:	68e3      	ldr	r3, [r4, #12]
    5346:	3302      	adds	r3, #2
    5348:	60e3      	str	r3, [r4, #12]
    534a:	2000      	movs	r0, #0
    534c:	b002      	add	sp, #8
    534e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    5352:	2a72      	cmp	r2, #114	; 0x72
    5354:	d1f9      	bne.n	534a <d_special_name+0x6e>
    5356:	f7fe f813 	bl	3380 <d_number>
    535a:	2801      	cmp	r0, #1
    535c:	ddf5      	ble.n	534a <d_special_name+0x6e>
    535e:	68e3      	ldr	r3, [r4, #12]
    5360:	781a      	ldrb	r2, [r3, #0]
    5362:	2a00      	cmp	r2, #0
    5364:	d0f1      	beq.n	534a <d_special_name+0x6e>
    5366:	1c5e      	adds	r6, r3, #1
    5368:	60e6      	str	r6, [r4, #12]
    536a:	781b      	ldrb	r3, [r3, #0]
    536c:	2b5f      	cmp	r3, #95	; 0x5f
    536e:	d1ec      	bne.n	534a <d_special_name+0x6e>
    5370:	2200      	movs	r2, #0
    5372:	1e45      	subs	r5, r0, #1
    5374:	4617      	mov	r7, r2
    5376:	f04f 0842 	mov.w	r8, #66	; 0x42
    537a:	7833      	ldrb	r3, [r6, #0]
    537c:	2b00      	cmp	r3, #0
    537e:	d0e4      	beq.n	534a <d_special_name+0x6e>
    5380:	2b24      	cmp	r3, #36	; 0x24
    5382:	f040 819f 	bne.w	56c4 <d_special_name+0x3e8>
    5386:	7873      	ldrb	r3, [r6, #1]
    5388:	2b53      	cmp	r3, #83	; 0x53
    538a:	f000 81bf 	beq.w	570c <d_special_name+0x430>
    538e:	2b5f      	cmp	r3, #95	; 0x5f
    5390:	f000 81ba 	beq.w	5708 <d_special_name+0x42c>
    5394:	2b24      	cmp	r3, #36	; 0x24
    5396:	d1d8      	bne.n	534a <d_special_name+0x6e>
    5398:	4619      	mov	r1, r3
    539a:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
    539e:	4298      	cmp	r0, r3
    53a0:	dad0      	bge.n	5344 <d_special_name+0x68>
    53a2:	6926      	ldr	r6, [r4, #16]
    53a4:	eb00 0c80 	add.w	ip, r0, r0, lsl #2
    53a8:	eb06 038c 	add.w	r3, r6, ip, lsl #2
    53ac:	3001      	adds	r0, #1
    53ae:	e9c3 7701 	strd	r7, r7, [r3, #4]
    53b2:	6160      	str	r0, [r4, #20]
    53b4:	f806 802c 	strb.w	r8, [r6, ip, lsl #2]
    53b8:	68e6      	ldr	r6, [r4, #12]
    53ba:	60d9      	str	r1, [r3, #12]
    53bc:	3d02      	subs	r5, #2
    53be:	3602      	adds	r6, #2
    53c0:	60e6      	str	r6, [r4, #12]
    53c2:	2a00      	cmp	r2, #0
    53c4:	f000 819e 	beq.w	5704 <d_special_name+0x428>
    53c8:	2141      	movs	r1, #65	; 0x41
    53ca:	4620      	mov	r0, r4
    53cc:	f7fd ff60 	bl	3290 <d_make_comp>
    53d0:	4602      	mov	r2, r0
    53d2:	2800      	cmp	r0, #0
    53d4:	d0b9      	beq.n	534a <d_special_name+0x6e>
    53d6:	2d00      	cmp	r5, #0
    53d8:	dccf      	bgt.n	537a <d_special_name+0x9e>
    53da:	2300      	movs	r3, #0
    53dc:	2140      	movs	r1, #64	; 0x40
    53de:	e07e      	b.n	54de <d_special_name+0x202>
    53e0:	1c5a      	adds	r2, r3, #1
    53e2:	60c2      	str	r2, [r0, #12]
    53e4:	785a      	ldrb	r2, [r3, #1]
    53e6:	2a00      	cmp	r2, #0
    53e8:	d0af      	beq.n	534a <d_special_name+0x6e>
    53ea:	1c9a      	adds	r2, r3, #2
    53ec:	60c2      	str	r2, [r0, #12]
    53ee:	785b      	ldrb	r3, [r3, #1]
    53f0:	3b41      	subs	r3, #65	; 0x41
    53f2:	2b35      	cmp	r3, #53	; 0x35
    53f4:	d8a9      	bhi.n	534a <d_special_name+0x6e>
    53f6:	a201      	add	r2, pc, #4	; (adr r2, 53fc <d_special_name+0x120>)
    53f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    53fc:	000055c3 	.word	0x000055c3
    5400:	0000534b 	.word	0x0000534b
    5404:	0000558f 	.word	0x0000558f
    5408:	0000534b 	.word	0x0000534b
    540c:	0000534b 	.word	0x0000534b
    5410:	000055cf 	.word	0x000055cf
    5414:	0000534b 	.word	0x0000534b
    5418:	00005633 	.word	0x00005633
    541c:	000056ad 	.word	0x000056ad
    5420:	000056a1 	.word	0x000056a1
    5424:	0000534b 	.word	0x0000534b
    5428:	0000534b 	.word	0x0000534b
    542c:	0000534b 	.word	0x0000534b
    5430:	0000534b 	.word	0x0000534b
    5434:	0000534b 	.word	0x0000534b
    5438:	0000534b 	.word	0x0000534b
    543c:	0000534b 	.word	0x0000534b
    5440:	0000534b 	.word	0x0000534b
    5444:	000056b9 	.word	0x000056b9
    5448:	0000563f 	.word	0x0000563f
    544c:	0000534b 	.word	0x0000534b
    5450:	0000564f 	.word	0x0000564f
    5454:	0000565f 	.word	0x0000565f
    5458:	0000534b 	.word	0x0000534b
    545c:	0000534b 	.word	0x0000534b
    5460:	0000534b 	.word	0x0000534b
    5464:	0000534b 	.word	0x0000534b
    5468:	0000534b 	.word	0x0000534b
    546c:	0000534b 	.word	0x0000534b
    5470:	0000534b 	.word	0x0000534b
    5474:	0000534b 	.word	0x0000534b
    5478:	0000534b 	.word	0x0000534b
    547c:	0000534b 	.word	0x0000534b
    5480:	0000534b 	.word	0x0000534b
    5484:	0000566b 	.word	0x0000566b
    5488:	0000534b 	.word	0x0000534b
    548c:	0000534b 	.word	0x0000534b
    5490:	0000534b 	.word	0x0000534b
    5494:	0000534b 	.word	0x0000534b
    5498:	000055db 	.word	0x000055db
    549c:	0000534b 	.word	0x0000534b
    54a0:	0000534b 	.word	0x0000534b
    54a4:	0000534b 	.word	0x0000534b
    54a8:	0000534b 	.word	0x0000534b
    54ac:	0000534b 	.word	0x0000534b
    54b0:	0000534b 	.word	0x0000534b
    54b4:	0000534b 	.word	0x0000534b
    54b8:	0000534b 	.word	0x0000534b
    54bc:	0000534b 	.word	0x0000534b
    54c0:	0000534b 	.word	0x0000534b
    54c4:	0000534b 	.word	0x0000534b
    54c8:	0000534b 	.word	0x0000534b
    54cc:	0000534b 	.word	0x0000534b
    54d0:	00005607 	.word	0x00005607
    54d4:	f000 f93c 	bl	5750 <d_name>
    54d8:	2300      	movs	r3, #0
    54da:	4602      	mov	r2, r0
    54dc:	2113      	movs	r1, #19
    54de:	4620      	mov	r0, r4
    54e0:	b002      	add	sp, #8
    54e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    54e6:	f7fd bed3 	b.w	3290 <d_make_comp>
    54ea:	789a      	ldrb	r2, [r3, #2]
    54ec:	2a00      	cmp	r2, #0
    54ee:	f000 810f 	beq.w	5710 <d_special_name+0x434>
    54f2:	1cda      	adds	r2, r3, #3
    54f4:	60c2      	str	r2, [r0, #12]
    54f6:	789a      	ldrb	r2, [r3, #2]
    54f8:	78db      	ldrb	r3, [r3, #3]
    54fa:	2a6e      	cmp	r2, #110	; 0x6e
    54fc:	d03a      	beq.n	5574 <d_special_name+0x298>
    54fe:	2b47      	cmp	r3, #71	; 0x47
    5500:	d002      	beq.n	5508 <d_special_name+0x22c>
    5502:	2b54      	cmp	r3, #84	; 0x54
    5504:	f040 8104 	bne.w	5710 <d_special_name+0x434>
    5508:	4620      	mov	r0, r4
    550a:	f7ff fee7 	bl	52dc <d_special_name>
    550e:	4602      	mov	r2, r0
    5510:	2300      	movs	r3, #0
    5512:	214a      	movs	r1, #74	; 0x4a
    5514:	e7e3      	b.n	54de <d_special_name+0x202>
    5516:	f000 f91b 	bl	5750 <d_name>
    551a:	e9d4 1305 	ldrd	r1, r3, [r4, #20]
    551e:	4299      	cmp	r1, r3
    5520:	4602      	mov	r2, r0
    5522:	f280 80ff 	bge.w	5724 <d_special_name+0x448>
    5526:	9001      	str	r0, [sp, #4]
    5528:	6920      	ldr	r0, [r4, #16]
    552a:	eb01 0681 	add.w	r6, r1, r1, lsl #2
    552e:	eb00 0586 	add.w	r5, r0, r6, lsl #2
    5532:	2300      	movs	r3, #0
    5534:	e9c5 3301 	strd	r3, r3, [r5, #4]
    5538:	3101      	adds	r1, #1
    553a:	2343      	movs	r3, #67	; 0x43
    553c:	6161      	str	r1, [r4, #20]
    553e:	f800 3026 	strb.w	r3, [r0, r6, lsl #2]
    5542:	4620      	mov	r0, r4
    5544:	f7fd ff1c 	bl	3380 <d_number>
    5548:	9a01      	ldr	r2, [sp, #4]
    554a:	60e8      	str	r0, [r5, #12]
    554c:	462b      	mov	r3, r5
    554e:	2116      	movs	r1, #22
    5550:	e7c5      	b.n	54de <d_special_name+0x202>
    5552:	789b      	ldrb	r3, [r3, #2]
    5554:	2b47      	cmp	r3, #71	; 0x47
    5556:	d001      	beq.n	555c <d_special_name+0x280>
    5558:	2b54      	cmp	r3, #84	; 0x54
    555a:	d106      	bne.n	556a <d_special_name+0x28e>
    555c:	4620      	mov	r0, r4
    555e:	f7ff febd 	bl	52dc <d_special_name>
    5562:	4602      	mov	r2, r0
    5564:	2300      	movs	r3, #0
    5566:	2117      	movs	r1, #23
    5568:	e7b9      	b.n	54de <d_special_name+0x202>
    556a:	2100      	movs	r1, #0
    556c:	f000 fa3e 	bl	59ec <d_encoding.part.0>
    5570:	4602      	mov	r2, r0
    5572:	e7f7      	b.n	5564 <d_special_name+0x288>
    5574:	2b47      	cmp	r3, #71	; 0x47
    5576:	f000 80e1 	beq.w	573c <d_special_name+0x460>
    557a:	2b54      	cmp	r3, #84	; 0x54
    557c:	f000 80de 	beq.w	573c <d_special_name+0x460>
    5580:	2100      	movs	r1, #0
    5582:	f000 fa33 	bl	59ec <d_encoding.part.0>
    5586:	4602      	mov	r2, r0
    5588:	2300      	movs	r3, #0
    558a:	214b      	movs	r1, #75	; 0x4b
    558c:	e7a7      	b.n	54de <d_special_name+0x202>
    558e:	f7fe fad1 	bl	3b34 <d_type>
    5592:	4605      	mov	r5, r0
    5594:	4620      	mov	r0, r4
    5596:	f7fd fef3 	bl	3380 <d_number>
    559a:	2800      	cmp	r0, #0
    559c:	f6ff aed5 	blt.w	534a <d_special_name+0x6e>
    55a0:	68e3      	ldr	r3, [r4, #12]
    55a2:	781a      	ldrb	r2, [r3, #0]
    55a4:	2a5f      	cmp	r2, #95	; 0x5f
    55a6:	f47f aed0 	bne.w	534a <d_special_name+0x6e>
    55aa:	3301      	adds	r3, #1
    55ac:	60e3      	str	r3, [r4, #12]
    55ae:	4620      	mov	r0, r4
    55b0:	f7fe fac0 	bl	3b34 <d_type>
    55b4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    55b6:	3105      	adds	r1, #5
    55b8:	62e1      	str	r1, [r4, #44]	; 0x2c
    55ba:	4602      	mov	r2, r0
    55bc:	462b      	mov	r3, r5
    55be:	210b      	movs	r1, #11
    55c0:	e78d      	b.n	54de <d_special_name+0x202>
    55c2:	f7ff fa3d 	bl	4a40 <d_template_arg>
    55c6:	2300      	movs	r3, #0
    55c8:	4602      	mov	r2, r0
    55ca:	2130      	movs	r1, #48	; 0x30
    55cc:	e787      	b.n	54de <d_special_name+0x202>
    55ce:	f7fe fab1 	bl	3b34 <d_type>
    55d2:	2300      	movs	r3, #0
    55d4:	4602      	mov	r2, r0
    55d6:	210e      	movs	r1, #14
    55d8:	e781      	b.n	54de <d_special_name+0x202>
    55da:	2168      	movs	r1, #104	; 0x68
    55dc:	f7fd ff0a 	bl	33f4 <d_call_offset>
    55e0:	2800      	cmp	r0, #0
    55e2:	f43f aeb2 	beq.w	534a <d_special_name+0x6e>
    55e6:	68e3      	ldr	r3, [r4, #12]
    55e8:	781b      	ldrb	r3, [r3, #0]
    55ea:	2b47      	cmp	r3, #71	; 0x47
    55ec:	f000 80a1 	beq.w	5732 <d_special_name+0x456>
    55f0:	2b54      	cmp	r3, #84	; 0x54
    55f2:	f000 809e 	beq.w	5732 <d_special_name+0x456>
    55f6:	2100      	movs	r1, #0
    55f8:	4620      	mov	r0, r4
    55fa:	f000 f9f7 	bl	59ec <d_encoding.part.0>
    55fe:	4602      	mov	r2, r0
    5600:	2300      	movs	r3, #0
    5602:	210f      	movs	r1, #15
    5604:	e76b      	b.n	54de <d_special_name+0x202>
    5606:	2176      	movs	r1, #118	; 0x76
    5608:	f7fd fef4 	bl	33f4 <d_call_offset>
    560c:	2800      	cmp	r0, #0
    560e:	f43f ae9c 	beq.w	534a <d_special_name+0x6e>
    5612:	68e3      	ldr	r3, [r4, #12]
    5614:	781b      	ldrb	r3, [r3, #0]
    5616:	2b47      	cmp	r3, #71	; 0x47
    5618:	f000 8086 	beq.w	5728 <d_special_name+0x44c>
    561c:	2b54      	cmp	r3, #84	; 0x54
    561e:	f000 8083 	beq.w	5728 <d_special_name+0x44c>
    5622:	2100      	movs	r1, #0
    5624:	4620      	mov	r0, r4
    5626:	f000 f9e1 	bl	59ec <d_encoding.part.0>
    562a:	4602      	mov	r2, r0
    562c:	2300      	movs	r3, #0
    562e:	2110      	movs	r1, #16
    5630:	e755      	b.n	54de <d_special_name+0x202>
    5632:	f000 f88d 	bl	5750 <d_name>
    5636:	2300      	movs	r3, #0
    5638:	4602      	mov	r2, r0
    563a:	2114      	movs	r1, #20
    563c:	e74f      	b.n	54de <d_special_name+0x202>
    563e:	310a      	adds	r1, #10
    5640:	62c1      	str	r1, [r0, #44]	; 0x2c
    5642:	f7fe fa77 	bl	3b34 <d_type>
    5646:	2300      	movs	r3, #0
    5648:	4602      	mov	r2, r0
    564a:	210a      	movs	r1, #10
    564c:	e747      	b.n	54de <d_special_name+0x202>
    564e:	310f      	adds	r1, #15
    5650:	62c1      	str	r1, [r0, #44]	; 0x2c
    5652:	f7fe fa6f 	bl	3b34 <d_type>
    5656:	2300      	movs	r3, #0
    5658:	4602      	mov	r2, r0
    565a:	2109      	movs	r1, #9
    565c:	e73f      	b.n	54de <d_special_name+0x202>
    565e:	f000 f877 	bl	5750 <d_name>
    5662:	2300      	movs	r3, #0
    5664:	4602      	mov	r2, r0
    5666:	2115      	movs	r1, #21
    5668:	e739      	b.n	54de <d_special_name+0x202>
    566a:	2100      	movs	r1, #0
    566c:	f7fd fec2 	bl	33f4 <d_call_offset>
    5670:	2800      	cmp	r0, #0
    5672:	f43f ae6a 	beq.w	534a <d_special_name+0x6e>
    5676:	2100      	movs	r1, #0
    5678:	4620      	mov	r0, r4
    567a:	f7fd febb 	bl	33f4 <d_call_offset>
    567e:	2800      	cmp	r0, #0
    5680:	f43f ae63 	beq.w	534a <d_special_name+0x6e>
    5684:	68e3      	ldr	r3, [r4, #12]
    5686:	781b      	ldrb	r3, [r3, #0]
    5688:	2b47      	cmp	r3, #71	; 0x47
    568a:	d05c      	beq.n	5746 <d_special_name+0x46a>
    568c:	2b54      	cmp	r3, #84	; 0x54
    568e:	d05a      	beq.n	5746 <d_special_name+0x46a>
    5690:	2100      	movs	r1, #0
    5692:	4620      	mov	r0, r4
    5694:	f000 f9aa 	bl	59ec <d_encoding.part.0>
    5698:	4602      	mov	r2, r0
    569a:	2300      	movs	r3, #0
    569c:	2111      	movs	r1, #17
    569e:	e71e      	b.n	54de <d_special_name+0x202>
    56a0:	f7fe fa48 	bl	3b34 <d_type>
    56a4:	2300      	movs	r3, #0
    56a6:	4602      	mov	r2, r0
    56a8:	2112      	movs	r1, #18
    56aa:	e718      	b.n	54de <d_special_name+0x202>
    56ac:	f7fe fa42 	bl	3b34 <d_type>
    56b0:	2300      	movs	r3, #0
    56b2:	4602      	mov	r2, r0
    56b4:	210c      	movs	r1, #12
    56b6:	e712      	b.n	54de <d_special_name+0x202>
    56b8:	f7fe fa3c 	bl	3b34 <d_type>
    56bc:	2300      	movs	r3, #0
    56be:	4602      	mov	r2, r0
    56c0:	210d      	movs	r1, #13
    56c2:	e70c      	b.n	54de <d_special_name+0x202>
    56c4:	46b4      	mov	ip, r6
    56c6:	2100      	movs	r1, #0
    56c8:	e004      	b.n	56d4 <d_special_name+0x3f8>
    56ca:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    56ce:	b123      	cbz	r3, 56da <d_special_name+0x3fe>
    56d0:	2b24      	cmp	r3, #36	; 0x24
    56d2:	d002      	beq.n	56da <d_special_name+0x3fe>
    56d4:	3101      	adds	r1, #1
    56d6:	42a9      	cmp	r1, r5
    56d8:	dbf7      	blt.n	56ca <d_special_name+0x3ee>
    56da:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
    56de:	4283      	cmp	r3, r0
    56e0:	da1c      	bge.n	571c <d_special_name+0x440>
    56e2:	6920      	ldr	r0, [r4, #16]
    56e4:	eb03 0c83 	add.w	ip, r3, r3, lsl #2
    56e8:	3301      	adds	r3, #1
    56ea:	6163      	str	r3, [r4, #20]
    56ec:	eb00 038c 	add.w	r3, r0, ip, lsl #2
    56f0:	e9c3 7701 	strd	r7, r7, [r3, #4]
    56f4:	f800 702c 	strb.w	r7, [r0, ip, lsl #2]
    56f8:	e9c3 6103 	strd	r6, r1, [r3, #12]
    56fc:	68e6      	ldr	r6, [r4, #12]
    56fe:	1a6d      	subs	r5, r5, r1
    5700:	440e      	add	r6, r1
    5702:	e65d      	b.n	53c0 <d_special_name+0xe4>
    5704:	461a      	mov	r2, r3
    5706:	e666      	b.n	53d6 <d_special_name+0xfa>
    5708:	212e      	movs	r1, #46	; 0x2e
    570a:	e646      	b.n	539a <d_special_name+0xbe>
    570c:	212f      	movs	r1, #47	; 0x2f
    570e:	e644      	b.n	539a <d_special_name+0xbe>
    5710:	2100      	movs	r1, #0
    5712:	4620      	mov	r0, r4
    5714:	f000 f96a 	bl	59ec <d_encoding.part.0>
    5718:	4602      	mov	r2, r0
    571a:	e6f9      	b.n	5510 <d_special_name+0x234>
    571c:	68e3      	ldr	r3, [r4, #12]
    571e:	440b      	add	r3, r1
    5720:	60e3      	str	r3, [r4, #12]
    5722:	e612      	b.n	534a <d_special_name+0x6e>
    5724:	2500      	movs	r5, #0
    5726:	e711      	b.n	554c <d_special_name+0x270>
    5728:	4620      	mov	r0, r4
    572a:	f7ff fdd7 	bl	52dc <d_special_name>
    572e:	4602      	mov	r2, r0
    5730:	e77c      	b.n	562c <d_special_name+0x350>
    5732:	4620      	mov	r0, r4
    5734:	f7ff fdd2 	bl	52dc <d_special_name>
    5738:	4602      	mov	r2, r0
    573a:	e761      	b.n	5600 <d_special_name+0x324>
    573c:	4620      	mov	r0, r4
    573e:	f7ff fdcd 	bl	52dc <d_special_name>
    5742:	4602      	mov	r2, r0
    5744:	e720      	b.n	5588 <d_special_name+0x2ac>
    5746:	4620      	mov	r0, r4
    5748:	f7ff fdc8 	bl	52dc <d_special_name>
    574c:	4602      	mov	r2, r0
    574e:	e7a4      	b.n	569a <d_special_name+0x3be>

00005750 <d_name>:
    5750:	b5f0      	push	{r4, r5, r6, r7, lr}
    5752:	68c2      	ldr	r2, [r0, #12]
    5754:	7813      	ldrb	r3, [r2, #0]
    5756:	3b4e      	subs	r3, #78	; 0x4e
    5758:	b083      	sub	sp, #12
    575a:	4604      	mov	r4, r0
    575c:	2b0c      	cmp	r3, #12
    575e:	d808      	bhi.n	5772 <d_name+0x22>
    5760:	e8df f003 	tbb	[pc, r3]
    5764:	07070731 	.word	0x07070731
    5768:	12071707 	.word	0x12071707
    576c:	07070707 	.word	0x07070707
    5770:	55          	.byte	0x55
    5771:	00          	.byte	0x00
    5772:	f7fe ff35 	bl	45e0 <d_unqualified_name>
    5776:	68e3      	ldr	r3, [r4, #12]
    5778:	781a      	ldrb	r2, [r3, #0]
    577a:	2a49      	cmp	r2, #73	; 0x49
    577c:	4605      	mov	r5, r0
    577e:	f000 80d2 	beq.w	5926 <d_name+0x1d6>
    5782:	4628      	mov	r0, r5
    5784:	b003      	add	sp, #12
    5786:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5788:	b003      	add	sp, #12
    578a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    578e:	f7fe bf27 	b.w	45e0 <d_unqualified_name>
    5792:	7853      	ldrb	r3, [r2, #1]
    5794:	2b74      	cmp	r3, #116	; 0x74
    5796:	f000 808e 	beq.w	58b6 <d_name+0x166>
    579a:	2100      	movs	r1, #0
    579c:	f7fe f900 	bl	39a0 <d_substitution>
    57a0:	68e3      	ldr	r3, [r4, #12]
    57a2:	781a      	ldrb	r2, [r3, #0]
    57a4:	2a49      	cmp	r2, #73	; 0x49
    57a6:	4605      	mov	r5, r0
    57a8:	d1eb      	bne.n	5782 <d_name+0x32>
    57aa:	3301      	adds	r3, #1
    57ac:	60e3      	str	r3, [r4, #12]
    57ae:	4620      	mov	r0, r4
    57b0:	f7ff f972 	bl	4a98 <d_template_args_1>
    57b4:	4603      	mov	r3, r0
    57b6:	462a      	mov	r2, r5
    57b8:	2104      	movs	r1, #4
    57ba:	4620      	mov	r0, r4
    57bc:	b003      	add	sp, #12
    57be:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    57c2:	f7fd bd65 	b.w	3290 <d_make_comp>
    57c6:	3201      	adds	r2, #1
    57c8:	60c2      	str	r2, [r0, #12]
    57ca:	a901      	add	r1, sp, #4
    57cc:	2201      	movs	r2, #1
    57ce:	f7ff fcdb 	bl	5188 <d_cv_qualifiers>
    57d2:	4605      	mov	r5, r0
    57d4:	2800      	cmp	r0, #0
    57d6:	f000 80b7 	beq.w	5948 <d_name+0x1f8>
    57da:	2100      	movs	r1, #0
    57dc:	4620      	mov	r0, r4
    57de:	f7fd fe2d 	bl	343c <d_ref_qualifier>
    57e2:	2101      	movs	r1, #1
    57e4:	4606      	mov	r6, r0
    57e6:	4620      	mov	r0, r4
    57e8:	f7ff f988 	bl	4afc <d_prefix>
    57ec:	6028      	str	r0, [r5, #0]
    57ee:	2800      	cmp	r0, #0
    57f0:	f000 80aa 	beq.w	5948 <d_name+0x1f8>
    57f4:	b116      	cbz	r6, 57fc <d_name+0xac>
    57f6:	9b01      	ldr	r3, [sp, #4]
    57f8:	60f3      	str	r3, [r6, #12]
    57fa:	9601      	str	r6, [sp, #4]
    57fc:	68e3      	ldr	r3, [r4, #12]
    57fe:	781a      	ldrb	r2, [r3, #0]
    5800:	2a45      	cmp	r2, #69	; 0x45
    5802:	f040 80a1 	bne.w	5948 <d_name+0x1f8>
    5806:	3301      	adds	r3, #1
    5808:	9d01      	ldr	r5, [sp, #4]
    580a:	60e3      	str	r3, [r4, #12]
    580c:	e7b9      	b.n	5782 <d_name+0x32>
    580e:	1c53      	adds	r3, r2, #1
    5810:	60c3      	str	r3, [r0, #12]
    5812:	7853      	ldrb	r3, [r2, #1]
    5814:	2b47      	cmp	r3, #71	; 0x47
    5816:	d002      	beq.n	581e <d_name+0xce>
    5818:	2b54      	cmp	r3, #84	; 0x54
    581a:	f040 8099 	bne.w	5950 <d_name+0x200>
    581e:	4620      	mov	r0, r4
    5820:	f7ff fd5c 	bl	52dc <d_special_name>
    5824:	4605      	mov	r5, r0
    5826:	2d00      	cmp	r5, #0
    5828:	f000 808e 	beq.w	5948 <d_name+0x1f8>
    582c:	68e3      	ldr	r3, [r4, #12]
    582e:	781a      	ldrb	r2, [r3, #0]
    5830:	2a45      	cmp	r2, #69	; 0x45
    5832:	f040 8089 	bne.w	5948 <d_name+0x1f8>
    5836:	1c5a      	adds	r2, r3, #1
    5838:	60e2      	str	r2, [r4, #12]
    583a:	785a      	ldrb	r2, [r3, #1]
    583c:	2a73      	cmp	r2, #115	; 0x73
    583e:	f000 80ad 	beq.w	599c <d_name+0x24c>
    5842:	2a64      	cmp	r2, #100	; 0x64
    5844:	f000 8089 	beq.w	595a <d_name+0x20a>
    5848:	4620      	mov	r0, r4
    584a:	f7ff ff81 	bl	5750 <d_name>
    584e:	4603      	mov	r3, r0
    5850:	b328      	cbz	r0, 589e <d_name+0x14e>
    5852:	7802      	ldrb	r2, [r0, #0]
    5854:	2a47      	cmp	r2, #71	; 0x47
    5856:	d022      	beq.n	589e <d_name+0x14e>
    5858:	2a49      	cmp	r2, #73	; 0x49
    585a:	d020      	beq.n	589e <d_name+0x14e>
    585c:	461f      	mov	r7, r3
    585e:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
    5862:	4620      	mov	r0, r4
    5864:	f7fd fe7e 	bl	3564 <d_discriminator>
    5868:	2800      	cmp	r0, #0
    586a:	d06d      	beq.n	5948 <d_name+0x1f8>
    586c:	1c73      	adds	r3, r6, #1
    586e:	bf08      	it	eq
    5870:	463b      	moveq	r3, r7
    5872:	d014      	beq.n	589e <d_name+0x14e>
    5874:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
    5878:	429a      	cmp	r2, r3
    587a:	f280 80b0 	bge.w	59de <d_name+0x28e>
    587e:	6921      	ldr	r1, [r4, #16]
    5880:	eb02 0082 	add.w	r0, r2, r2, lsl #2
    5884:	eb01 0380 	add.w	r3, r1, r0, lsl #2
    5888:	3201      	adds	r2, #1
    588a:	f04f 0c00 	mov.w	ip, #0
    588e:	e9c3 cc01 	strd	ip, ip, [r3, #4]
    5892:	6162      	str	r2, [r4, #20]
    5894:	2248      	movs	r2, #72	; 0x48
    5896:	f801 2020 	strb.w	r2, [r1, r0, lsl #2]
    589a:	e9c3 7603 	strd	r7, r6, [r3, #12]
    589e:	782a      	ldrb	r2, [r5, #0]
    58a0:	2a03      	cmp	r2, #3
    58a2:	d105      	bne.n	58b0 <d_name+0x160>
    58a4:	692a      	ldr	r2, [r5, #16]
    58a6:	7811      	ldrb	r1, [r2, #0]
    58a8:	2929      	cmp	r1, #41	; 0x29
    58aa:	bf04      	itt	eq
    58ac:	2100      	moveq	r1, #0
    58ae:	60d1      	streq	r1, [r2, #12]
    58b0:	462a      	mov	r2, r5
    58b2:	2102      	movs	r1, #2
    58b4:	e781      	b.n	57ba <d_name+0x6a>
    58b6:	e9d0 3105 	ldrd	r3, r1, [r0, #20]
    58ba:	3202      	adds	r2, #2
    58bc:	428b      	cmp	r3, r1
    58be:	60c2      	str	r2, [r0, #12]
    58c0:	f280 8088 	bge.w	59d4 <d_name+0x284>
    58c4:	6902      	ldr	r2, [r0, #16]
    58c6:	eb03 0583 	add.w	r5, r3, r3, lsl #2
    58ca:	00a9      	lsls	r1, r5, #2
    58cc:	3301      	adds	r3, #1
    58ce:	6143      	str	r3, [r0, #20]
    58d0:	eb02 0585 	add.w	r5, r2, r5, lsl #2
    58d4:	2300      	movs	r3, #0
    58d6:	e9c5 3301 	strd	r3, r3, [r5, #4]
    58da:	5453      	strb	r3, [r2, r1]
    58dc:	4a41      	ldr	r2, [pc, #260]	; (59e4 <d_name+0x294>)
    58de:	2303      	movs	r3, #3
    58e0:	e9c5 2303 	strd	r2, r3, [r5, #12]
    58e4:	4620      	mov	r0, r4
    58e6:	f7fe fe7b 	bl	45e0 <d_unqualified_name>
    58ea:	462a      	mov	r2, r5
    58ec:	4603      	mov	r3, r0
    58ee:	2101      	movs	r1, #1
    58f0:	4620      	mov	r0, r4
    58f2:	f7fd fccd 	bl	3290 <d_make_comp>
    58f6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    58f8:	68e3      	ldr	r3, [r4, #12]
    58fa:	3203      	adds	r2, #3
    58fc:	62e2      	str	r2, [r4, #44]	; 0x2c
    58fe:	781a      	ldrb	r2, [r3, #0]
    5900:	2a49      	cmp	r2, #73	; 0x49
    5902:	4605      	mov	r5, r0
    5904:	f47f af3d 	bne.w	5782 <d_name+0x32>
    5908:	b1f0      	cbz	r0, 5948 <d_name+0x1f8>
    590a:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
    590e:	428a      	cmp	r2, r1
    5910:	da1a      	bge.n	5948 <d_name+0x1f8>
    5912:	69e1      	ldr	r1, [r4, #28]
    5914:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
    5918:	3201      	adds	r2, #1
    591a:	6222      	str	r2, [r4, #32]
    591c:	781a      	ldrb	r2, [r3, #0]
    591e:	3a49      	subs	r2, #73	; 0x49
    5920:	2a01      	cmp	r2, #1
    5922:	d80f      	bhi.n	5944 <d_name+0x1f4>
    5924:	e741      	b.n	57aa <d_name+0x5a>
    5926:	b178      	cbz	r0, 5948 <d_name+0x1f8>
    5928:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
    592c:	428a      	cmp	r2, r1
    592e:	da0b      	bge.n	5948 <d_name+0x1f8>
    5930:	69e1      	ldr	r1, [r4, #28]
    5932:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
    5936:	3201      	adds	r2, #1
    5938:	6222      	str	r2, [r4, #32]
    593a:	781a      	ldrb	r2, [r3, #0]
    593c:	3a49      	subs	r2, #73	; 0x49
    593e:	2a01      	cmp	r2, #1
    5940:	f67f af33 	bls.w	57aa <d_name+0x5a>
    5944:	2300      	movs	r3, #0
    5946:	e736      	b.n	57b6 <d_name+0x66>
    5948:	2500      	movs	r5, #0
    594a:	4628      	mov	r0, r5
    594c:	b003      	add	sp, #12
    594e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5950:	2100      	movs	r1, #0
    5952:	f000 f84b 	bl	59ec <d_encoding.part.0>
    5956:	4605      	mov	r5, r0
    5958:	e765      	b.n	5826 <d_name+0xd6>
    595a:	1c9a      	adds	r2, r3, #2
    595c:	60e2      	str	r2, [r4, #12]
    595e:	789a      	ldrb	r2, [r3, #2]
    5960:	2a5f      	cmp	r2, #95	; 0x5f
    5962:	d039      	beq.n	59d8 <d_name+0x288>
    5964:	2a6e      	cmp	r2, #110	; 0x6e
    5966:	d0ef      	beq.n	5948 <d_name+0x1f8>
    5968:	4620      	mov	r0, r4
    596a:	f7fd fd09 	bl	3380 <d_number>
    596e:	1c46      	adds	r6, r0, #1
    5970:	d4ea      	bmi.n	5948 <d_name+0x1f8>
    5972:	68e3      	ldr	r3, [r4, #12]
    5974:	781a      	ldrb	r2, [r3, #0]
    5976:	2a5f      	cmp	r2, #95	; 0x5f
    5978:	d1e6      	bne.n	5948 <d_name+0x1f8>
    597a:	3301      	adds	r3, #1
    597c:	60e3      	str	r3, [r4, #12]
    597e:	4620      	mov	r0, r4
    5980:	f7ff fee6 	bl	5750 <d_name>
    5984:	4607      	mov	r7, r0
    5986:	2800      	cmp	r0, #0
    5988:	f43f af74 	beq.w	5874 <d_name+0x124>
    598c:	783b      	ldrb	r3, [r7, #0]
    598e:	2b47      	cmp	r3, #71	; 0x47
    5990:	f43f af70 	beq.w	5874 <d_name+0x124>
    5994:	2b49      	cmp	r3, #73	; 0x49
    5996:	f43f af6d 	beq.w	5874 <d_name+0x124>
    599a:	e762      	b.n	5862 <d_name+0x112>
    599c:	3302      	adds	r3, #2
    599e:	60e3      	str	r3, [r4, #12]
    59a0:	4620      	mov	r0, r4
    59a2:	f7fd fddf 	bl	3564 <d_discriminator>
    59a6:	2800      	cmp	r0, #0
    59a8:	d0ce      	beq.n	5948 <d_name+0x1f8>
    59aa:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
    59ae:	429a      	cmp	r2, r3
    59b0:	da15      	bge.n	59de <d_name+0x28e>
    59b2:	6921      	ldr	r1, [r4, #16]
    59b4:	eb02 0382 	add.w	r3, r2, r2, lsl #2
    59b8:	0098      	lsls	r0, r3, #2
    59ba:	3201      	adds	r2, #1
    59bc:	6162      	str	r2, [r4, #20]
    59be:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    59c2:	2200      	movs	r2, #0
    59c4:	e9c3 2201 	strd	r2, r2, [r3, #4]
    59c8:	540a      	strb	r2, [r1, r0]
    59ca:	4907      	ldr	r1, [pc, #28]	; (59e8 <d_name+0x298>)
    59cc:	220e      	movs	r2, #14
    59ce:	e9c3 1203 	strd	r1, r2, [r3, #12]
    59d2:	e764      	b.n	589e <d_name+0x14e>
    59d4:	2500      	movs	r5, #0
    59d6:	e785      	b.n	58e4 <d_name+0x194>
    59d8:	3303      	adds	r3, #3
    59da:	2600      	movs	r6, #0
    59dc:	e7ce      	b.n	597c <d_name+0x22c>
    59de:	2300      	movs	r3, #0
    59e0:	e75d      	b.n	589e <d_name+0x14e>
    59e2:	bf00      	nop
    59e4:	20001270 	.word	0x20001270
    59e8:	20001260 	.word	0x20001260

000059ec <d_encoding.part.0>:
    59ec:	b570      	push	{r4, r5, r6, lr}
    59ee:	4605      	mov	r5, r0
    59f0:	460e      	mov	r6, r1
    59f2:	f7ff fead 	bl	5750 <d_name>
    59f6:	b300      	cbz	r0, 5a3a <d_encoding.part.0+0x4e>
    59f8:	4604      	mov	r4, r0
    59fa:	b30e      	cbz	r6, 5a40 <d_encoding.part.0+0x54>
    59fc:	68ab      	ldr	r3, [r5, #8]
    59fe:	07db      	lsls	r3, r3, #31
    5a00:	d41e      	bmi.n	5a40 <d_encoding.part.0+0x54>
    5a02:	7823      	ldrb	r3, [r4, #0]
    5a04:	2b4e      	cmp	r3, #78	; 0x4e
    5a06:	f1a3 011c 	sub.w	r1, r3, #28
    5a0a:	f1a3 0250 	sub.w	r2, r3, #80	; 0x50
    5a0e:	d03a      	beq.n	5a86 <d_encoding.part.0+0x9a>
    5a10:	d837      	bhi.n	5a82 <d_encoding.part.0+0x96>
    5a12:	2904      	cmp	r1, #4
    5a14:	d937      	bls.n	5a86 <d_encoding.part.0+0x9a>
    5a16:	2b02      	cmp	r3, #2
    5a18:	d110      	bne.n	5a3c <d_encoding.part.0+0x50>
    5a1a:	6923      	ldr	r3, [r4, #16]
    5a1c:	b16b      	cbz	r3, 5a3a <d_encoding.part.0+0x4e>
    5a1e:	781a      	ldrb	r2, [r3, #0]
    5a20:	2a4e      	cmp	r2, #78	; 0x4e
    5a22:	f1a2 001c 	sub.w	r0, r2, #28
    5a26:	f1a2 0150 	sub.w	r1, r2, #80	; 0x50
    5a2a:	d002      	beq.n	5a32 <d_encoding.part.0+0x46>
    5a2c:	d83d      	bhi.n	5aaa <d_encoding.part.0+0xbe>
    5a2e:	2804      	cmp	r0, #4
    5a30:	d804      	bhi.n	5a3c <d_encoding.part.0+0x50>
    5a32:	68db      	ldr	r3, [r3, #12]
    5a34:	6123      	str	r3, [r4, #16]
    5a36:	2b00      	cmp	r3, #0
    5a38:	d1f1      	bne.n	5a1e <d_encoding.part.0+0x32>
    5a3a:	2400      	movs	r4, #0
    5a3c:	4620      	mov	r0, r4
    5a3e:	bd70      	pop	{r4, r5, r6, pc}
    5a40:	68eb      	ldr	r3, [r5, #12]
    5a42:	781b      	ldrb	r3, [r3, #0]
    5a44:	2b00      	cmp	r3, #0
    5a46:	d0f9      	beq.n	5a3c <d_encoding.part.0+0x50>
    5a48:	2b45      	cmp	r3, #69	; 0x45
    5a4a:	d0f7      	beq.n	5a3c <d_encoding.part.0+0x50>
    5a4c:	4621      	mov	r1, r4
    5a4e:	780b      	ldrb	r3, [r1, #0]
    5a50:	2b04      	cmp	r3, #4
    5a52:	d02d      	beq.n	5ab0 <d_encoding.part.0+0xc4>
    5a54:	d81e      	bhi.n	5a94 <d_encoding.part.0+0xa8>
    5a56:	2b02      	cmp	r3, #2
    5a58:	d11a      	bne.n	5a90 <d_encoding.part.0+0xa4>
    5a5a:	6909      	ldr	r1, [r1, #16]
    5a5c:	2900      	cmp	r1, #0
    5a5e:	d1f6      	bne.n	5a4e <d_encoding.part.0+0x62>
    5a60:	4628      	mov	r0, r5
    5a62:	f7fe fcdf 	bl	4424 <d_bare_function_type>
    5a66:	2800      	cmp	r0, #0
    5a68:	d0e7      	beq.n	5a3a <d_encoding.part.0+0x4e>
    5a6a:	b916      	cbnz	r6, 5a72 <d_encoding.part.0+0x86>
    5a6c:	7823      	ldrb	r3, [r4, #0]
    5a6e:	2b02      	cmp	r3, #2
    5a70:	d032      	beq.n	5ad8 <d_encoding.part.0+0xec>
    5a72:	4603      	mov	r3, r0
    5a74:	4622      	mov	r2, r4
    5a76:	4628      	mov	r0, r5
    5a78:	2103      	movs	r1, #3
    5a7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    5a7e:	f7fd bc07 	b.w	3290 <d_make_comp>
    5a82:	2a01      	cmp	r2, #1
    5a84:	d8da      	bhi.n	5a3c <d_encoding.part.0+0x50>
    5a86:	68e4      	ldr	r4, [r4, #12]
    5a88:	e7bb      	b.n	5a02 <d_encoding.part.0+0x16>
    5a8a:	3b1c      	subs	r3, #28
    5a8c:	2b04      	cmp	r3, #4
    5a8e:	d908      	bls.n	5aa2 <d_encoding.part.0+0xb6>
    5a90:	2100      	movs	r1, #0
    5a92:	e7e5      	b.n	5a60 <d_encoding.part.0+0x74>
    5a94:	2b4e      	cmp	r3, #78	; 0x4e
    5a96:	f1a3 0250 	sub.w	r2, r3, #80	; 0x50
    5a9a:	d002      	beq.n	5aa2 <d_encoding.part.0+0xb6>
    5a9c:	d9f5      	bls.n	5a8a <d_encoding.part.0+0x9e>
    5a9e:	2a01      	cmp	r2, #1
    5aa0:	d8f6      	bhi.n	5a90 <d_encoding.part.0+0xa4>
    5aa2:	68c9      	ldr	r1, [r1, #12]
    5aa4:	2900      	cmp	r1, #0
    5aa6:	d1d2      	bne.n	5a4e <d_encoding.part.0+0x62>
    5aa8:	e7da      	b.n	5a60 <d_encoding.part.0+0x74>
    5aaa:	2901      	cmp	r1, #1
    5aac:	d8c6      	bhi.n	5a3c <d_encoding.part.0+0x50>
    5aae:	e7c0      	b.n	5a32 <d_encoding.part.0+0x46>
    5ab0:	68cb      	ldr	r3, [r1, #12]
    5ab2:	b15b      	cbz	r3, 5acc <d_encoding.part.0+0xe0>
    5ab4:	7819      	ldrb	r1, [r3, #0]
    5ab6:	2908      	cmp	r1, #8
    5ab8:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
    5abc:	d808      	bhi.n	5ad0 <d_encoding.part.0+0xe4>
    5abe:	2906      	cmp	r1, #6
    5ac0:	d8e6      	bhi.n	5a90 <d_encoding.part.0+0xa4>
    5ac2:	2a01      	cmp	r2, #1
    5ac4:	d802      	bhi.n	5acc <d_encoding.part.0+0xe0>
    5ac6:	691b      	ldr	r3, [r3, #16]
    5ac8:	2b00      	cmp	r3, #0
    5aca:	d1f3      	bne.n	5ab4 <d_encoding.part.0+0xc8>
    5acc:	2101      	movs	r1, #1
    5ace:	e7c7      	b.n	5a60 <d_encoding.part.0+0x74>
    5ad0:	3935      	subs	r1, #53	; 0x35
    5ad2:	bf18      	it	ne
    5ad4:	2101      	movne	r1, #1
    5ad6:	e7c3      	b.n	5a60 <d_encoding.part.0+0x74>
    5ad8:	7803      	ldrb	r3, [r0, #0]
    5ada:	2b29      	cmp	r3, #41	; 0x29
    5adc:	bf08      	it	eq
    5ade:	60c6      	streq	r6, [r0, #12]
    5ae0:	e7c7      	b.n	5a72 <d_encoding.part.0+0x86>
    5ae2:	bf00      	nop

00005ae4 <d_print_comp_inner>:
    5ae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5ae8:	4604      	mov	r4, r0
    5aea:	b095      	sub	sp, #84	; 0x54
    5aec:	2a00      	cmp	r2, #0
    5aee:	d066      	beq.n	5bbe <d_print_comp_inner+0xda>
    5af0:	f8d0 5118 	ldr.w	r5, [r0, #280]	; 0x118
    5af4:	2d00      	cmp	r5, #0
    5af6:	d165      	bne.n	5bc4 <d_print_comp_inner+0xe0>
    5af8:	7817      	ldrb	r7, [r2, #0]
    5afa:	4616      	mov	r6, r2
    5afc:	2f51      	cmp	r7, #81	; 0x51
    5afe:	d85e      	bhi.n	5bbe <d_print_comp_inner+0xda>
    5b00:	e8df f017 	tbh	[pc, r7, lsl #1]
    5b04:	011b095c 	.word	0x011b095c
    5b08:	04ee011b 	.word	0x04ee011b
    5b0c:	02de0898 	.word	0x02de0898
    5b10:	0097044a 	.word	0x0097044a
    5b14:	08f9008b 	.word	0x08f9008b
    5b18:	03a608d2 	.word	0x03a608d2
    5b1c:	019101b8 	.word	0x019101b8
    5b20:	0747016a 	.word	0x0747016a
    5b24:	06f90720 	.word	0x06f90720
    5b28:	07bc07e3 	.word	0x07bc07e3
    5b2c:	076e0795 	.word	0x076e0795
    5b30:	0423037f 	.word	0x0423037f
    5b34:	009903f8 	.word	0x009903f8
    5b38:	00990099 	.word	0x00990099
    5b3c:	00630063 	.word	0x00630063
    5b40:	00630063 	.word	0x00630063
    5b44:	00630063 	.word	0x00630063
    5b48:	00c50063 	.word	0x00c50063
    5b4c:	006300c5 	.word	0x006300c5
    5b50:	09870063 	.word	0x09870063
    5b54:	04c80083 	.word	0x04c80083
    5b58:	00af068d 	.word	0x00af068d
    5b5c:	00af066b 	.word	0x00af066b
    5b60:	00e600e6 	.word	0x00e600e6
    5b64:	03340358 	.word	0x03340358
    5b68:	0831030a 	.word	0x0831030a
    5b6c:	080a005d 	.word	0x080a005d
    5b70:	06460663 	.word	0x06460663
    5b74:	005d05eb 	.word	0x005d05eb
    5b78:	005d0920 	.word	0x005d0920
    5b7c:	012a005d 	.word	0x012a005d
    5b80:	0455012a 	.word	0x0455012a
    5b84:	0858085e 	.word	0x0858085e
    5b88:	047804ba 	.word	0x047804ba
    5b8c:	05c4054f 	.word	0x05c4054f
    5b90:	0576059d 	.word	0x0576059d
    5b94:	02a4005d 	.word	0x02a4005d
    5b98:	0256027d 	.word	0x0256027d
    5b9c:	01df020a 	.word	0x01df020a
    5ba0:	03cd0063 	.word	0x03cd0063
    5ba4:	00630063 	.word	0x00630063
    5ba8:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
    5bac:	2900      	cmp	r1, #0
    5bae:	f2c1 8425 	blt.w	73fc <d_print_comp_inner+0x1918>
    5bb2:	f7fd fcfb 	bl	35ac <d_index_template_argument.part.0>
    5bb6:	4602      	mov	r2, r0
    5bb8:	2800      	cmp	r0, #0
    5bba:	f041 841f 	bne.w	73fc <d_print_comp_inner+0x1918>
    5bbe:	2301      	movs	r3, #1
    5bc0:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
    5bc4:	b015      	add	sp, #84	; 0x54
    5bc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5bca:	2200      	movs	r2, #0
    5bcc:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
    5bd0:	9304      	str	r3, [sp, #16]
    5bd2:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
    5bd6:	9307      	str	r3, [sp, #28]
    5bd8:	ab04      	add	r3, sp, #16
    5bda:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    5bde:	2300      	movs	r3, #0
    5be0:	9605      	str	r6, [sp, #20]
    5be2:	9306      	str	r3, [sp, #24]
    5be4:	2a00      	cmp	r2, #0
    5be6:	f001 87e6 	beq.w	7bb6 <d_print_comp_inner+0x20d2>
    5bea:	2111      	movs	r1, #17
    5bec:	4620      	mov	r0, r4
    5bee:	f001 fff3 	bl	7bd8 <d_print_comp>
    5bf2:	9b06      	ldr	r3, [sp, #24]
    5bf4:	2b00      	cmp	r3, #0
    5bf6:	f001 82e9 	beq.w	71cc <d_print_comp_inner+0x16e8>
    5bfa:	9b04      	ldr	r3, [sp, #16]
    5bfc:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    5c00:	2d00      	cmp	r5, #0
    5c02:	d0df      	beq.n	5bc4 <d_print_comp_inner+0xe0>
    5c04:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
    5c08:	e7dc      	b.n	5bc4 <d_print_comp_inner+0xe0>
    5c0a:	68f2      	ldr	r2, [r6, #12]
    5c0c:	2111      	movs	r1, #17
    5c0e:	4620      	mov	r0, r4
    5c10:	b015      	add	sp, #84	; 0x54
    5c12:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5c16:	f001 bfdf 	b.w	7bd8 <d_print_comp>
    5c1a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    5c1e:	29ff      	cmp	r1, #255	; 0xff
    5c20:	f001 855f 	beq.w	76e2 <d_print_comp_inner+0x1bfe>
    5c24:	1c4a      	adds	r2, r1, #1
    5c26:	237e      	movs	r3, #126	; 0x7e
    5c28:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    5c2c:	5463      	strb	r3, [r4, r1]
    5c2e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    5c32:	6932      	ldr	r2, [r6, #16]
    5c34:	e7ea      	b.n	5c0c <d_print_comp_inner+0x128>
    5c36:	f8d0 c114 	ldr.w	ip, [r0, #276]	; 0x114
    5c3a:	f1bc 0f00 	cmp.w	ip, #0
    5c3e:	d00e      	beq.n	5c5e <d_print_comp_inner+0x17a>
    5c40:	4663      	mov	r3, ip
    5c42:	6899      	ldr	r1, [r3, #8]
    5c44:	b941      	cbnz	r1, 5c58 <d_print_comp_inner+0x174>
    5c46:	685a      	ldr	r2, [r3, #4]
    5c48:	7812      	ldrb	r2, [r2, #0]
    5c4a:	f1a2 0019 	sub.w	r0, r2, #25
    5c4e:	2802      	cmp	r0, #2
    5c50:	f201 84ef 	bhi.w	7632 <d_print_comp_inner+0x1b4e>
    5c54:	4297      	cmp	r7, r2
    5c56:	d0d8      	beq.n	5c0a <d_print_comp_inner+0x126>
    5c58:	681b      	ldr	r3, [r3, #0]
    5c5a:	2b00      	cmp	r3, #0
    5c5c:	d1f1      	bne.n	5c42 <d_print_comp_inner+0x15e>
    5c5e:	68f2      	ldr	r2, [r6, #12]
    5c60:	e02b      	b.n	5cba <d_print_comp_inner+0x1d6>
    5c62:	e9d0 3144 	ldrd	r3, r1, [r0, #272]	; 0x110
    5c66:	aa04      	add	r2, sp, #16
    5c68:	f8c0 2114 	str.w	r2, [r0, #276]	; 0x114
    5c6c:	2200      	movs	r2, #0
    5c6e:	e9cd 1604 	strd	r1, r6, [sp, #16]
    5c72:	9206      	str	r2, [sp, #24]
    5c74:	2111      	movs	r1, #17
    5c76:	6932      	ldr	r2, [r6, #16]
    5c78:	9307      	str	r3, [sp, #28]
    5c7a:	f001 ffad 	bl	7bd8 <d_print_comp>
    5c7e:	9b06      	ldr	r3, [sp, #24]
    5c80:	2b00      	cmp	r3, #0
    5c82:	f001 84c3 	beq.w	760c <d_print_comp_inner+0x1b28>
    5c86:	9b04      	ldr	r3, [sp, #16]
    5c88:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    5c8c:	e79a      	b.n	5bc4 <d_print_comp_inner+0xe0>
    5c8e:	68d2      	ldr	r2, [r2, #12]
    5c90:	f8d0 5120 	ldr.w	r5, [r0, #288]	; 0x120
    5c94:	7813      	ldrb	r3, [r2, #0]
    5c96:	2d00      	cmp	r5, #0
    5c98:	f041 8370 	bne.w	737c <d_print_comp_inner+0x1898>
    5c9c:	2b05      	cmp	r3, #5
    5c9e:	f001 85d2 	beq.w	7846 <d_print_comp_inner+0x1d62>
    5ca2:	4610      	mov	r0, r2
    5ca4:	2b23      	cmp	r3, #35	; 0x23
    5ca6:	f001 82d8 	beq.w	725a <d_print_comp_inner+0x1776>
    5caa:	429f      	cmp	r7, r3
    5cac:	f001 82d5 	beq.w	725a <d_print_comp_inner+0x1776>
    5cb0:	2b24      	cmp	r3, #36	; 0x24
    5cb2:	f001 860a 	beq.w	78ca <d_print_comp_inner+0x1de6>
    5cb6:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
    5cba:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
    5cbe:	9307      	str	r3, [sp, #28]
    5cc0:	ab04      	add	r3, sp, #16
    5cc2:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    5cc6:	2300      	movs	r3, #0
    5cc8:	e9cd c604 	strd	ip, r6, [sp, #16]
    5ccc:	9306      	str	r3, [sp, #24]
    5cce:	e78c      	b.n	5bea <d_print_comp_inner+0x106>
    5cd0:	68d2      	ldr	r2, [r2, #12]
    5cd2:	b112      	cbz	r2, 5cda <d_print_comp_inner+0x1f6>
    5cd4:	2111      	movs	r1, #17
    5cd6:	f001 ff7f 	bl	7bd8 <d_print_comp>
    5cda:	6933      	ldr	r3, [r6, #16]
    5cdc:	2b00      	cmp	r3, #0
    5cde:	f43f af71 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    5ce2:	f8d4 5100 	ldr.w	r5, [r4, #256]	; 0x100
    5ce6:	2dfd      	cmp	r5, #253	; 0xfd
    5ce8:	f201 84a7 	bhi.w	763a <d_print_comp_inner+0x1b56>
    5cec:	f8df 8384 	ldr.w	r8, [pc, #900]	; 6074 <d_print_comp_inner+0x590>
    5cf0:	272c      	movs	r7, #44	; 0x2c
    5cf2:	f108 0a01 	add.w	sl, r8, #1
    5cf6:	f04f 0900 	mov.w	r9, #0
    5cfa:	4629      	mov	r1, r5
    5cfc:	e00b      	b.n	5d16 <d_print_comp_inner+0x232>
    5cfe:	460b      	mov	r3, r1
    5d00:	3101      	adds	r1, #1
    5d02:	45d0      	cmp	r8, sl
    5d04:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    5d08:	54e7      	strb	r7, [r4, r3]
    5d0a:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    5d0e:	f001 8264 	beq.w	71da <d_print_comp_inner+0x16f6>
    5d12:	f818 7f01 	ldrb.w	r7, [r8, #1]!
    5d16:	29ff      	cmp	r1, #255	; 0xff
    5d18:	d1f1      	bne.n	5cfe <d_print_comp_inner+0x21a>
    5d1a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    5d1e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    5d22:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    5d26:	4620      	mov	r0, r4
    5d28:	4798      	blx	r3
    5d2a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    5d2e:	3301      	adds	r3, #1
    5d30:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    5d34:	2101      	movs	r1, #1
    5d36:	2300      	movs	r3, #0
    5d38:	e7e3      	b.n	5d02 <d_print_comp_inner+0x21e>
    5d3a:	68d2      	ldr	r2, [r2, #12]
    5d3c:	2111      	movs	r1, #17
    5d3e:	f001 ff4b 	bl	7bd8 <d_print_comp>
    5d42:	49c7      	ldr	r1, [pc, #796]	; (6060 <d_print_comp_inner+0x57c>)
    5d44:	4620      	mov	r0, r4
    5d46:	f7fd fd1b 	bl	3780 <d_append_string>
    5d4a:	6937      	ldr	r7, [r6, #16]
    5d4c:	783b      	ldrb	r3, [r7, #0]
    5d4e:	2b48      	cmp	r3, #72	; 0x48
    5d50:	f001 808b 	beq.w	6e6a <d_print_comp_inner+0x1386>
    5d54:	463a      	mov	r2, r7
    5d56:	e759      	b.n	5c0c <d_print_comp_inner+0x128>
    5d58:	68d2      	ldr	r2, [r2, #12]
    5d5a:	7813      	ldrb	r3, [r2, #0]
    5d5c:	2b27      	cmp	r3, #39	; 0x27
    5d5e:	f041 835a 	bne.w	7416 <d_print_comp_inner+0x1932>
    5d62:	68d3      	ldr	r3, [r2, #12]
    5d64:	7c1d      	ldrb	r5, [r3, #16]
    5d66:	2d06      	cmp	r5, #6
    5d68:	f201 827d 	bhi.w	7266 <d_print_comp_inner+0x1782>
    5d6c:	2d00      	cmp	r5, #0
    5d6e:	f041 851c 	bne.w	77aa <d_print_comp_inner+0x1cc6>
    5d72:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    5d76:	29ff      	cmp	r1, #255	; 0xff
    5d78:	f001 84f0 	beq.w	775c <d_print_comp_inner+0x1c78>
    5d7c:	1c4b      	adds	r3, r1, #1
    5d7e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    5d82:	2328      	movs	r3, #40	; 0x28
    5d84:	5463      	strb	r3, [r4, r1]
    5d86:	4620      	mov	r0, r4
    5d88:	2111      	movs	r1, #17
    5d8a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    5d8e:	f001 ff23 	bl	7bd8 <d_print_comp>
    5d92:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    5d96:	29ff      	cmp	r1, #255	; 0xff
    5d98:	f001 84f7 	beq.w	778a <d_print_comp_inner+0x1ca6>
    5d9c:	1c4b      	adds	r3, r1, #1
    5d9e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    5da2:	2329      	movs	r3, #41	; 0x29
    5da4:	5463      	strb	r3, [r4, r1]
    5da6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    5daa:	7833      	ldrb	r3, [r6, #0]
    5dac:	2b3e      	cmp	r3, #62	; 0x3e
    5dae:	f001 84e6 	beq.w	777e <d_print_comp_inner+0x1c9a>
    5db2:	2d08      	cmp	r5, #8
    5db4:	f47f af3d 	bne.w	5c32 <d_print_comp_inner+0x14e>
    5db8:	215b      	movs	r1, #91	; 0x5b
    5dba:	4620      	mov	r0, r4
    5dbc:	f7fd fc58 	bl	3670 <d_append_char>
    5dc0:	2111      	movs	r1, #17
    5dc2:	6932      	ldr	r2, [r6, #16]
    5dc4:	4620      	mov	r0, r4
    5dc6:	f001 ff07 	bl	7bd8 <d_print_comp>
    5dca:	215d      	movs	r1, #93	; 0x5d
    5dcc:	4620      	mov	r0, r4
    5dce:	b015      	add	sp, #84	; 0x54
    5dd0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5dd4:	f7fd bc4c 	b.w	3670 <d_append_char>
    5dd8:	4fa2      	ldr	r7, [pc, #648]	; (6064 <d_print_comp_inner+0x580>)
    5dda:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    5dde:	f107 090f 	add.w	r9, r7, #15
    5de2:	2574      	movs	r5, #116	; 0x74
    5de4:	f04f 0800 	mov.w	r8, #0
    5de8:	e00b      	b.n	5e02 <d_print_comp_inner+0x31e>
    5dea:	460b      	mov	r3, r1
    5dec:	3101      	adds	r1, #1
    5dee:	454f      	cmp	r7, r9
    5df0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    5df4:	54e5      	strb	r5, [r4, r3]
    5df6:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    5dfa:	f43f af06 	beq.w	5c0a <d_print_comp_inner+0x126>
    5dfe:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    5e02:	29ff      	cmp	r1, #255	; 0xff
    5e04:	d1f1      	bne.n	5dea <d_print_comp_inner+0x306>
    5e06:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    5e0a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    5e0e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    5e12:	4620      	mov	r0, r4
    5e14:	4798      	blx	r3
    5e16:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    5e1a:	3301      	adds	r3, #1
    5e1c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    5e20:	2101      	movs	r1, #1
    5e22:	2300      	movs	r3, #0
    5e24:	e7e3      	b.n	5dee <d_print_comp_inner+0x30a>
    5e26:	4f90      	ldr	r7, [pc, #576]	; (6068 <d_print_comp_inner+0x584>)
    5e28:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    5e2c:	f107 0911 	add.w	r9, r7, #17
    5e30:	2574      	movs	r5, #116	; 0x74
    5e32:	f04f 0800 	mov.w	r8, #0
    5e36:	e00b      	b.n	5e50 <d_print_comp_inner+0x36c>
    5e38:	460b      	mov	r3, r1
    5e3a:	3101      	adds	r1, #1
    5e3c:	45b9      	cmp	r9, r7
    5e3e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    5e42:	54e5      	strb	r5, [r4, r3]
    5e44:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    5e48:	f43f aedf 	beq.w	5c0a <d_print_comp_inner+0x126>
    5e4c:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    5e50:	29ff      	cmp	r1, #255	; 0xff
    5e52:	d1f1      	bne.n	5e38 <d_print_comp_inner+0x354>
    5e54:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    5e58:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    5e5c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    5e60:	4620      	mov	r0, r4
    5e62:	4798      	blx	r3
    5e64:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    5e68:	3301      	adds	r3, #1
    5e6a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    5e6e:	2101      	movs	r1, #1
    5e70:	2300      	movs	r3, #0
    5e72:	e7e3      	b.n	5e3c <d_print_comp_inner+0x358>
    5e74:	4f7d      	ldr	r7, [pc, #500]	; (606c <d_print_comp_inner+0x588>)
    5e76:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    5e7a:	f107 090c 	add.w	r9, r7, #12
    5e7e:	2574      	movs	r5, #116	; 0x74
    5e80:	f04f 0800 	mov.w	r8, #0
    5e84:	e00b      	b.n	5e9e <d_print_comp_inner+0x3ba>
    5e86:	460b      	mov	r3, r1
    5e88:	3101      	adds	r1, #1
    5e8a:	454f      	cmp	r7, r9
    5e8c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    5e90:	54e5      	strb	r5, [r4, r3]
    5e92:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    5e96:	f43f aeb8 	beq.w	5c0a <d_print_comp_inner+0x126>
    5e9a:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    5e9e:	29ff      	cmp	r1, #255	; 0xff
    5ea0:	d1f1      	bne.n	5e86 <d_print_comp_inner+0x3a2>
    5ea2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    5ea6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    5eaa:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    5eae:	4620      	mov	r0, r4
    5eb0:	4798      	blx	r3
    5eb2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    5eb6:	3301      	adds	r3, #1
    5eb8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    5ebc:	2101      	movs	r1, #1
    5ebe:	2300      	movs	r3, #0
    5ec0:	e7e3      	b.n	5e8a <d_print_comp_inner+0x3a6>
    5ec2:	4f6b      	ldr	r7, [pc, #428]	; (6070 <d_print_comp_inner+0x58c>)
    5ec4:	68d2      	ldr	r2, [r2, #12]
    5ec6:	2111      	movs	r1, #17
    5ec8:	f001 fe86 	bl	7bd8 <d_print_comp>
    5ecc:	f107 0904 	add.w	r9, r7, #4
    5ed0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    5ed4:	255b      	movs	r5, #91	; 0x5b
    5ed6:	f04f 0800 	mov.w	r8, #0
    5eda:	e00b      	b.n	5ef4 <d_print_comp_inner+0x410>
    5edc:	460b      	mov	r3, r1
    5ede:	3101      	adds	r1, #1
    5ee0:	45b9      	cmp	r9, r7
    5ee2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    5ee6:	54e5      	strb	r5, [r4, r3]
    5ee8:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    5eec:	f000 87f3 	beq.w	6ed6 <d_print_comp_inner+0x13f2>
    5ef0:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    5ef4:	29ff      	cmp	r1, #255	; 0xff
    5ef6:	d1f1      	bne.n	5edc <d_print_comp_inner+0x3f8>
    5ef8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    5efc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    5f00:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    5f04:	4620      	mov	r0, r4
    5f06:	4798      	blx	r3
    5f08:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    5f0c:	3301      	adds	r3, #1
    5f0e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    5f12:	2101      	movs	r1, #1
    5f14:	2300      	movs	r3, #0
    5f16:	e7e3      	b.n	5ee0 <d_print_comp_inner+0x3fc>
    5f18:	f8d2 a00c 	ldr.w	sl, [r2, #12]
    5f1c:	4651      	mov	r1, sl
    5f1e:	f7fd fbe5 	bl	36ec <d_find_pack>
    5f22:	f04f 0800 	mov.w	r8, #0
    5f26:	b910      	cbnz	r0, 5f2e <d_print_comp_inner+0x44a>
    5f28:	f001 bd20 	b.w	796c <d_print_comp_inner+0x1e88>
    5f2c:	46c8      	mov	r8, r9
    5f2e:	7803      	ldrb	r3, [r0, #0]
    5f30:	2b2f      	cmp	r3, #47	; 0x2f
    5f32:	f108 0901 	add.w	r9, r8, #1
    5f36:	f041 8187 	bne.w	7248 <d_print_comp_inner+0x1764>
    5f3a:	68c3      	ldr	r3, [r0, #12]
    5f3c:	2b00      	cmp	r3, #0
    5f3e:	f001 8183 	beq.w	7248 <d_print_comp_inner+0x1764>
    5f42:	6900      	ldr	r0, [r0, #16]
    5f44:	2800      	cmp	r0, #0
    5f46:	d1f1      	bne.n	5f2c <d_print_comp_inner+0x448>
    5f48:	e003      	b.n	5f52 <d_print_comp_inner+0x46e>
    5f4a:	3501      	adds	r5, #1
    5f4c:	454d      	cmp	r5, r9
    5f4e:	f6bf ae39 	bge.w	5bc4 <d_print_comp_inner+0xe0>
    5f52:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
    5f56:	4652      	mov	r2, sl
    5f58:	2111      	movs	r1, #17
    5f5a:	4620      	mov	r0, r4
    5f5c:	f001 fe3c 	bl	7bd8 <d_print_comp>
    5f60:	45a8      	cmp	r8, r5
    5f62:	ddf2      	ble.n	5f4a <d_print_comp_inner+0x466>
    5f64:	4f43      	ldr	r7, [pc, #268]	; (6074 <d_print_comp_inner+0x590>)
    5f66:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    5f6a:	f107 0b01 	add.w	fp, r7, #1
    5f6e:	262c      	movs	r6, #44	; 0x2c
    5f70:	e00a      	b.n	5f88 <d_print_comp_inner+0x4a4>
    5f72:	460b      	mov	r3, r1
    5f74:	3101      	adds	r1, #1
    5f76:	45bb      	cmp	fp, r7
    5f78:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    5f7c:	54e6      	strb	r6, [r4, r3]
    5f7e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    5f82:	d0e2      	beq.n	5f4a <d_print_comp_inner+0x466>
    5f84:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    5f88:	29ff      	cmp	r1, #255	; 0xff
    5f8a:	d1f2      	bne.n	5f72 <d_print_comp_inner+0x48e>
    5f8c:	f04f 0200 	mov.w	r2, #0
    5f90:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    5f94:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
    5f98:	4620      	mov	r0, r4
    5f9a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    5f9e:	4798      	blx	r3
    5fa0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    5fa4:	3301      	adds	r3, #1
    5fa6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    5faa:	2101      	movs	r1, #1
    5fac:	2300      	movs	r3, #0
    5fae:	e7e2      	b.n	5f76 <d_print_comp_inner+0x492>
    5fb0:	4f31      	ldr	r7, [pc, #196]	; (6078 <d_print_comp_inner+0x594>)
    5fb2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    5fb6:	f107 0919 	add.w	r9, r7, #25
    5fba:	256e      	movs	r5, #110	; 0x6e
    5fbc:	f04f 0800 	mov.w	r8, #0
    5fc0:	e00b      	b.n	5fda <d_print_comp_inner+0x4f6>
    5fc2:	460b      	mov	r3, r1
    5fc4:	3101      	adds	r1, #1
    5fc6:	45b9      	cmp	r9, r7
    5fc8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    5fcc:	54e5      	strb	r5, [r4, r3]
    5fce:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    5fd2:	f43f ae1a 	beq.w	5c0a <d_print_comp_inner+0x126>
    5fd6:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    5fda:	29ff      	cmp	r1, #255	; 0xff
    5fdc:	d1f1      	bne.n	5fc2 <d_print_comp_inner+0x4de>
    5fde:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    5fe2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    5fe6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    5fea:	4620      	mov	r0, r4
    5fec:	4798      	blx	r3
    5fee:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    5ff2:	3301      	adds	r3, #1
    5ff4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    5ff8:	2101      	movs	r1, #1
    5ffa:	2300      	movs	r3, #0
    5ffc:	e7e3      	b.n	5fc6 <d_print_comp_inner+0x4e2>
    5ffe:	4f1f      	ldr	r7, [pc, #124]	; (607c <d_print_comp_inner+0x598>)
    6000:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6004:	f107 0915 	add.w	r9, r7, #21
    6008:	2574      	movs	r5, #116	; 0x74
    600a:	f04f 0800 	mov.w	r8, #0
    600e:	e00b      	b.n	6028 <d_print_comp_inner+0x544>
    6010:	460b      	mov	r3, r1
    6012:	3101      	adds	r1, #1
    6014:	45b9      	cmp	r9, r7
    6016:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    601a:	54e5      	strb	r5, [r4, r3]
    601c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6020:	f43f adf3 	beq.w	5c0a <d_print_comp_inner+0x126>
    6024:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6028:	29ff      	cmp	r1, #255	; 0xff
    602a:	d1f1      	bne.n	6010 <d_print_comp_inner+0x52c>
    602c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6030:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6034:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6038:	4620      	mov	r0, r4
    603a:	4798      	blx	r3
    603c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6040:	3301      	adds	r3, #1
    6042:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6046:	2101      	movs	r1, #1
    6048:	2300      	movs	r3, #0
    604a:	e7e3      	b.n	6014 <d_print_comp_inner+0x530>
    604c:	4f0c      	ldr	r7, [pc, #48]	; (6080 <d_print_comp_inner+0x59c>)
    604e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6052:	f107 090d 	add.w	r9, r7, #13
    6056:	257b      	movs	r5, #123	; 0x7b
    6058:	f04f 0800 	mov.w	r8, #0
    605c:	e01e      	b.n	609c <d_print_comp_inner+0x5b8>
    605e:	bf00      	nop
    6060:	2000127c 	.word	0x2000127c
    6064:	2000131c 	.word	0x2000131c
    6068:	20001308 	.word	0x20001308
    606c:	200012f8 	.word	0x200012f8
    6070:	20001274 	.word	0x20001274
    6074:	2000141c 	.word	0x2000141c
    6078:	200013e8 	.word	0x200013e8
    607c:	200013ec 	.word	0x200013ec
    6080:	200014f0 	.word	0x200014f0
    6084:	460b      	mov	r3, r1
    6086:	3101      	adds	r1, #1
    6088:	454f      	cmp	r7, r9
    608a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    608e:	54e5      	strb	r5, [r4, r3]
    6090:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6094:	f000 8739 	beq.w	6f0a <d_print_comp_inner+0x1426>
    6098:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    609c:	29ff      	cmp	r1, #255	; 0xff
    609e:	d1f1      	bne.n	6084 <d_print_comp_inner+0x5a0>
    60a0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    60a4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    60a8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    60ac:	4620      	mov	r0, r4
    60ae:	4798      	blx	r3
    60b0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    60b4:	3301      	adds	r3, #1
    60b6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    60ba:	2101      	movs	r1, #1
    60bc:	2300      	movs	r3, #0
    60be:	e7e3      	b.n	6088 <d_print_comp_inner+0x5a4>
    60c0:	f8d0 3120 	ldr.w	r3, [r0, #288]	; 0x120
    60c4:	2b00      	cmp	r3, #0
    60c6:	f001 818e 	beq.w	73e6 <d_print_comp_inner+0x1902>
    60ca:	4fd3      	ldr	r7, [pc, #844]	; (6418 <d_print_comp_inner+0x934>)
    60cc:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    60d0:	f107 0904 	add.w	r9, r7, #4
    60d4:	2561      	movs	r5, #97	; 0x61
    60d6:	f04f 0800 	mov.w	r8, #0
    60da:	e00b      	b.n	60f4 <d_print_comp_inner+0x610>
    60dc:	460b      	mov	r3, r1
    60de:	3101      	adds	r1, #1
    60e0:	45b9      	cmp	r9, r7
    60e2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    60e6:	54e5      	strb	r5, [r4, r3]
    60e8:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    60ec:	f001 814a 	beq.w	7384 <d_print_comp_inner+0x18a0>
    60f0:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    60f4:	29ff      	cmp	r1, #255	; 0xff
    60f6:	d1f1      	bne.n	60dc <d_print_comp_inner+0x5f8>
    60f8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    60fc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6100:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6104:	4620      	mov	r0, r4
    6106:	4798      	blx	r3
    6108:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    610c:	3301      	adds	r3, #1
    610e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6112:	2101      	movs	r1, #1
    6114:	2300      	movs	r3, #0
    6116:	e7e3      	b.n	60e0 <d_print_comp_inner+0x5fc>
    6118:	68d7      	ldr	r7, [r2, #12]
    611a:	4ec0      	ldr	r6, [pc, #768]	; (641c <d_print_comp_inner+0x938>)
    611c:	f8d7 8008 	ldr.w	r8, [r7, #8]
    6120:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6124:	f106 0a07 	add.w	sl, r6, #7
    6128:	256f      	movs	r5, #111	; 0x6f
    612a:	f04f 0900 	mov.w	r9, #0
    612e:	e00b      	b.n	6148 <d_print_comp_inner+0x664>
    6130:	460b      	mov	r3, r1
    6132:	3101      	adds	r1, #1
    6134:	45b2      	cmp	sl, r6
    6136:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    613a:	54e5      	strb	r5, [r4, r3]
    613c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6140:	f000 8726 	beq.w	6f90 <d_print_comp_inner+0x14ac>
    6144:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    6148:	29ff      	cmp	r1, #255	; 0xff
    614a:	d1f1      	bne.n	6130 <d_print_comp_inner+0x64c>
    614c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6150:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6154:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    6158:	4620      	mov	r0, r4
    615a:	4798      	blx	r3
    615c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6160:	3301      	adds	r3, #1
    6162:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6166:	2101      	movs	r1, #1
    6168:	2300      	movs	r3, #0
    616a:	e7e3      	b.n	6134 <d_print_comp_inner+0x650>
    616c:	e9d2 2503 	ldrd	r2, r5, [r2, #12]
    6170:	b112      	cbz	r2, 6178 <d_print_comp_inner+0x694>
    6172:	2111      	movs	r1, #17
    6174:	f001 fd30 	bl	7bd8 <d_print_comp>
    6178:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    617c:	29ff      	cmp	r1, #255	; 0xff
    617e:	f001 826d 	beq.w	765c <d_print_comp_inner+0x1b78>
    6182:	1c4a      	adds	r2, r1, #1
    6184:	237b      	movs	r3, #123	; 0x7b
    6186:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    618a:	4620      	mov	r0, r4
    618c:	5463      	strb	r3, [r4, r1]
    618e:	462a      	mov	r2, r5
    6190:	2111      	movs	r1, #17
    6192:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    6196:	f001 fd1f 	bl	7bd8 <d_print_comp>
    619a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    619e:	29ff      	cmp	r1, #255	; 0xff
    61a0:	f000 86e6 	beq.w	6f70 <d_print_comp_inner+0x148c>
    61a4:	1c4a      	adds	r2, r1, #1
    61a6:	237d      	movs	r3, #125	; 0x7d
    61a8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    61ac:	5463      	strb	r3, [r4, r1]
    61ae:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    61b2:	e507      	b.n	5bc4 <d_print_comp_inner+0xe0>
    61b4:	4f9a      	ldr	r7, [pc, #616]	; (6420 <d_print_comp_inner+0x93c>)
    61b6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    61ba:	f107 091d 	add.w	r9, r7, #29
    61be:	2574      	movs	r5, #116	; 0x74
    61c0:	f04f 0800 	mov.w	r8, #0
    61c4:	e00b      	b.n	61de <d_print_comp_inner+0x6fa>
    61c6:	460b      	mov	r3, r1
    61c8:	3101      	adds	r1, #1
    61ca:	45b9      	cmp	r9, r7
    61cc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    61d0:	54e5      	strb	r5, [r4, r3]
    61d2:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    61d6:	f43f ad18 	beq.w	5c0a <d_print_comp_inner+0x126>
    61da:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    61de:	29ff      	cmp	r1, #255	; 0xff
    61e0:	d1f1      	bne.n	61c6 <d_print_comp_inner+0x6e2>
    61e2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    61e6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    61ea:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    61ee:	4620      	mov	r0, r4
    61f0:	4798      	blx	r3
    61f2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    61f6:	3301      	adds	r3, #1
    61f8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    61fc:	2101      	movs	r1, #1
    61fe:	2300      	movs	r3, #0
    6200:	e7e3      	b.n	61ca <d_print_comp_inner+0x6e6>
    6202:	4f88      	ldr	r7, [pc, #544]	; (6424 <d_print_comp_inner+0x940>)
    6204:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6208:	f107 0914 	add.w	r9, r7, #20
    620c:	2572      	movs	r5, #114	; 0x72
    620e:	f04f 0800 	mov.w	r8, #0
    6212:	e00b      	b.n	622c <d_print_comp_inner+0x748>
    6214:	460b      	mov	r3, r1
    6216:	3101      	adds	r1, #1
    6218:	45b9      	cmp	r9, r7
    621a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    621e:	54e5      	strb	r5, [r4, r3]
    6220:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6224:	f000 86f4 	beq.w	7010 <d_print_comp_inner+0x152c>
    6228:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    622c:	29ff      	cmp	r1, #255	; 0xff
    622e:	d1f1      	bne.n	6214 <d_print_comp_inner+0x730>
    6230:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6234:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6238:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    623c:	4620      	mov	r0, r4
    623e:	4798      	blx	r3
    6240:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6244:	3301      	adds	r3, #1
    6246:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    624a:	2101      	movs	r1, #1
    624c:	2300      	movs	r3, #0
    624e:	e7e3      	b.n	6218 <d_print_comp_inner+0x734>
    6250:	4f75      	ldr	r7, [pc, #468]	; (6428 <d_print_comp_inner+0x944>)
    6252:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6256:	f107 0917 	add.w	r9, r7, #23
    625a:	2563      	movs	r5, #99	; 0x63
    625c:	f04f 0800 	mov.w	r8, #0
    6260:	e00b      	b.n	627a <d_print_comp_inner+0x796>
    6262:	460b      	mov	r3, r1
    6264:	3101      	adds	r1, #1
    6266:	454f      	cmp	r7, r9
    6268:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    626c:	54e5      	strb	r5, [r4, r3]
    626e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6272:	f000 877c 	beq.w	716e <d_print_comp_inner+0x168a>
    6276:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    627a:	29ff      	cmp	r1, #255	; 0xff
    627c:	d1f1      	bne.n	6262 <d_print_comp_inner+0x77e>
    627e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6282:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6286:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    628a:	4620      	mov	r0, r4
    628c:	4798      	blx	r3
    628e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6292:	3301      	adds	r3, #1
    6294:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6298:	2101      	movs	r1, #1
    629a:	2300      	movs	r3, #0
    629c:	e7e3      	b.n	6266 <d_print_comp_inner+0x782>
    629e:	4f63      	ldr	r7, [pc, #396]	; (642c <d_print_comp_inner+0x948>)
    62a0:	68d2      	ldr	r2, [r2, #12]
    62a2:	2111      	movs	r1, #17
    62a4:	f001 fc98 	bl	7bd8 <d_print_comp>
    62a8:	f107 0907 	add.w	r9, r7, #7
    62ac:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    62b0:	2520      	movs	r5, #32
    62b2:	f04f 0800 	mov.w	r8, #0
    62b6:	e00b      	b.n	62d0 <d_print_comp_inner+0x7ec>
    62b8:	460b      	mov	r3, r1
    62ba:	3101      	adds	r1, #1
    62bc:	45b9      	cmp	r9, r7
    62be:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    62c2:	54e5      	strb	r5, [r4, r3]
    62c4:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    62c8:	f000 8605 	beq.w	6ed6 <d_print_comp_inner+0x13f2>
    62cc:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    62d0:	29ff      	cmp	r1, #255	; 0xff
    62d2:	d1f1      	bne.n	62b8 <d_print_comp_inner+0x7d4>
    62d4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    62d8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    62dc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    62e0:	4620      	mov	r0, r4
    62e2:	4798      	blx	r3
    62e4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    62e8:	3301      	adds	r3, #1
    62ea:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    62ee:	2101      	movs	r1, #1
    62f0:	2300      	movs	r3, #0
    62f2:	e7e3      	b.n	62bc <d_print_comp_inner+0x7d8>
    62f4:	e9d2 5303 	ldrd	r5, r3, [r2, #12]
    62f8:	2b00      	cmp	r3, #0
    62fa:	f43f ac63 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    62fe:	442b      	add	r3, r5
    6300:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6304:	3d01      	subs	r5, #1
    6306:	1e5f      	subs	r7, r3, #1
    6308:	f04f 0800 	mov.w	r8, #0
    630c:	e009      	b.n	6322 <d_print_comp_inner+0x83e>
    630e:	460b      	mov	r3, r1
    6310:	3101      	adds	r1, #1
    6312:	42af      	cmp	r7, r5
    6314:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6318:	54e6      	strb	r6, [r4, r3]
    631a:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    631e:	f43f ac51 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    6322:	29ff      	cmp	r1, #255	; 0xff
    6324:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    6328:	d1f1      	bne.n	630e <d_print_comp_inner+0x82a>
    632a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    632e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6332:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6336:	4620      	mov	r0, r4
    6338:	4798      	blx	r3
    633a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    633e:	3301      	adds	r3, #1
    6340:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6344:	2101      	movs	r1, #1
    6346:	2300      	movs	r3, #0
    6348:	e7e3      	b.n	6312 <d_print_comp_inner+0x82e>
    634a:	4f39      	ldr	r7, [pc, #228]	; (6430 <d_print_comp_inner+0x94c>)
    634c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6350:	f107 0910 	add.w	r9, r7, #16
    6354:	2568      	movs	r5, #104	; 0x68
    6356:	f04f 0800 	mov.w	r8, #0
    635a:	e00b      	b.n	6374 <d_print_comp_inner+0x890>
    635c:	460b      	mov	r3, r1
    635e:	3101      	adds	r1, #1
    6360:	45b9      	cmp	r9, r7
    6362:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6366:	54e5      	strb	r5, [r4, r3]
    6368:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    636c:	f43f ac4d 	beq.w	5c0a <d_print_comp_inner+0x126>
    6370:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6374:	29ff      	cmp	r1, #255	; 0xff
    6376:	d1f1      	bne.n	635c <d_print_comp_inner+0x878>
    6378:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    637c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6380:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6384:	4620      	mov	r0, r4
    6386:	4798      	blx	r3
    6388:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    638c:	3301      	adds	r3, #1
    638e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6392:	2101      	movs	r1, #1
    6394:	2300      	movs	r3, #0
    6396:	e7e3      	b.n	6360 <d_print_comp_inner+0x87c>
    6398:	68d5      	ldr	r5, [r2, #12]
    639a:	2d00      	cmp	r5, #0
    639c:	f040 87a1 	bne.w	72e2 <d_print_comp_inner+0x17fe>
    63a0:	4924      	ldr	r1, [pc, #144]	; (6434 <d_print_comp_inner+0x950>)
    63a2:	4620      	mov	r0, r4
    63a4:	b015      	add	sp, #84	; 0x54
    63a6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    63aa:	f7fd b9e9 	b.w	3780 <d_append_string>
    63ae:	2111      	movs	r1, #17
    63b0:	68d2      	ldr	r2, [r2, #12]
    63b2:	f001 fc11 	bl	7bd8 <d_print_comp>
    63b6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    63ba:	29ff      	cmp	r1, #255	; 0xff
    63bc:	f001 816e 	beq.w	769c <d_print_comp_inner+0x1bb8>
    63c0:	1c4a      	adds	r2, r1, #1
    63c2:	2328      	movs	r3, #40	; 0x28
    63c4:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    63c8:	5463      	strb	r3, [r4, r1]
    63ca:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    63ce:	6932      	ldr	r2, [r6, #16]
    63d0:	2111      	movs	r1, #17
    63d2:	4620      	mov	r0, r4
    63d4:	f001 fc00 	bl	7bd8 <d_print_comp>
    63d8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    63dc:	29ff      	cmp	r1, #255	; 0xff
    63de:	f001 802c 	beq.w	743a <d_print_comp_inner+0x1956>
    63e2:	1c4a      	adds	r2, r1, #1
    63e4:	2329      	movs	r3, #41	; 0x29
    63e6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    63ea:	5463      	strb	r3, [r4, r1]
    63ec:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    63f0:	f7ff bbe8 	b.w	5bc4 <d_print_comp_inner+0xe0>
    63f4:	68d2      	ldr	r2, [r2, #12]
    63f6:	4910      	ldr	r1, [pc, #64]	; (6438 <d_print_comp_inner+0x954>)
    63f8:	a804      	add	r0, sp, #16
    63fa:	f004 f8b7 	bl	a56c <sprintf>
    63fe:	a804      	add	r0, sp, #16
    6400:	f008 fc3e 	bl	ec80 <strlen>
    6404:	2800      	cmp	r0, #0
    6406:	f43f abdd 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    640a:	ad04      	add	r5, sp, #16
    640c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6410:	182f      	adds	r7, r5, r0
    6412:	f04f 0800 	mov.w	r8, #0
    6416:	e01b      	b.n	6450 <d_print_comp_inner+0x96c>
    6418:	20001294 	.word	0x20001294
    641c:	20001420 	.word	0x20001420
    6420:	2000129c 	.word	0x2000129c
    6424:	200013bc 	.word	0x200013bc
    6428:	200012d4 	.word	0x200012d4
    642c:	20001500 	.word	0x20001500
    6430:	200013d4 	.word	0x200013d4
    6434:	20001490 	.word	0x20001490
    6438:	20001230 	.word	0x20001230
    643c:	460b      	mov	r3, r1
    643e:	3101      	adds	r1, #1
    6440:	42af      	cmp	r7, r5
    6442:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6446:	54e6      	strb	r6, [r4, r3]
    6448:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    644c:	f43f abba 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    6450:	29ff      	cmp	r1, #255	; 0xff
    6452:	f815 6b01 	ldrb.w	r6, [r5], #1
    6456:	d1f1      	bne.n	643c <d_print_comp_inner+0x958>
    6458:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    645c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6460:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6464:	4620      	mov	r0, r4
    6466:	4798      	blx	r3
    6468:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    646c:	3301      	adds	r3, #1
    646e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6472:	2101      	movs	r1, #1
    6474:	2300      	movs	r3, #0
    6476:	e7e3      	b.n	6440 <d_print_comp_inner+0x95c>
    6478:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    647c:	7b15      	ldrb	r5, [r2, #12]
    647e:	29ff      	cmp	r1, #255	; 0xff
    6480:	f001 811e 	beq.w	76c0 <d_print_comp_inner+0x1bdc>
    6484:	1c4b      	adds	r3, r1, #1
    6486:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    648a:	5465      	strb	r5, [r4, r1]
    648c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6490:	f7ff bb98 	b.w	5bc4 <d_print_comp_inner+0xe0>
    6494:	68d2      	ldr	r2, [r2, #12]
    6496:	b1ca      	cbz	r2, 64cc <d_print_comp_inner+0x9e8>
    6498:	f8d0 1114 	ldr.w	r1, [r0, #276]	; 0x114
    649c:	ab04      	add	r3, sp, #16
    649e:	f8c0 3114 	str.w	r3, [r0, #276]	; 0x114
    64a2:	2300      	movs	r3, #0
    64a4:	e9cd 1604 	strd	r1, r6, [sp, #16]
    64a8:	9306      	str	r3, [sp, #24]
    64aa:	2111      	movs	r1, #17
    64ac:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
    64b0:	9307      	str	r3, [sp, #28]
    64b2:	f001 fb91 	bl	7bd8 <d_print_comp>
    64b6:	9b06      	ldr	r3, [sp, #24]
    64b8:	9a04      	ldr	r2, [sp, #16]
    64ba:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
    64be:	2b00      	cmp	r3, #0
    64c0:	f47f ab80 	bne.w	5bc4 <d_print_comp_inner+0xe0>
    64c4:	2120      	movs	r1, #32
    64c6:	4620      	mov	r0, r4
    64c8:	f7fd f8d2 	bl	3670 <d_append_char>
    64cc:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
    64d0:	4632      	mov	r2, r6
    64d2:	2111      	movs	r1, #17
    64d4:	4620      	mov	r0, r4
    64d6:	b015      	add	sp, #84	; 0x54
    64d8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    64dc:	f001 bec6 	b.w	826c <d_print_function_type>
    64e0:	68d7      	ldr	r7, [r2, #12]
    64e2:	f8d0 9114 	ldr.w	r9, [r0, #276]	; 0x114
    64e6:	2200      	movs	r2, #0
    64e8:	f8c0 2114 	str.w	r2, [r0, #276]	; 0x114
    64ec:	2f00      	cmp	r7, #0
    64ee:	f43f ab66 	beq.w	5bbe <d_print_comp_inner+0xda>
    64f2:	f10d 0810 	add.w	r8, sp, #16
    64f6:	f8d0 c110 	ldr.w	ip, [r0, #272]	; 0x110
    64fa:	4643      	mov	r3, r8
    64fc:	4611      	mov	r1, r2
    64fe:	4696      	mov	lr, r2
    6500:	e9c3 2700 	strd	r2, r7, [r3]
    6504:	e9c3 ec02 	strd	lr, ip, [r3, #8]
    6508:	783a      	ldrb	r2, [r7, #0]
    650a:	2a4e      	cmp	r2, #78	; 0x4e
    650c:	469a      	mov	sl, r3
    650e:	f1a2 0b1c 	sub.w	fp, r2, #28
    6512:	f1a2 0050 	sub.w	r0, r2, #80	; 0x50
    6516:	f101 0501 	add.w	r5, r1, #1
    651a:	f000 8688 	beq.w	722e <d_print_comp_inner+0x174a>
    651e:	f200 84ed 	bhi.w	6efc <d_print_comp_inner+0x1418>
    6522:	f1bb 0f04 	cmp.w	fp, #4
    6526:	f240 8682 	bls.w	722e <d_print_comp_inner+0x174a>
    652a:	2a02      	cmp	r2, #2
    652c:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    6530:	d114      	bne.n	655c <d_print_comp_inner+0xa78>
    6532:	693f      	ldr	r7, [r7, #16]
    6534:	783a      	ldrb	r2, [r7, #0]
    6536:	2a48      	cmp	r2, #72	; 0x48
    6538:	f001 8250 	beq.w	79dc <d_print_comp_inner+0x1ef8>
    653c:	eb08 1101 	add.w	r1, r8, r1, lsl #4
    6540:	f04f 0a00 	mov.w	sl, #0
    6544:	2a4e      	cmp	r2, #78	; 0x4e
    6546:	f1a2 0350 	sub.w	r3, r2, #80	; 0x50
    654a:	f1a2 001c 	sub.w	r0, r2, #28
    654e:	f000 8787 	beq.w	7460 <d_print_comp_inner+0x197c>
    6552:	f200 8782 	bhi.w	745a <d_print_comp_inner+0x1976>
    6556:	2804      	cmp	r0, #4
    6558:	f240 8782 	bls.w	7460 <d_print_comp_inner+0x197c>
    655c:	2a04      	cmp	r2, #4
    655e:	d104      	bne.n	656a <d_print_comp_inner+0xa86>
    6560:	e9cd c702 	strd	ip, r7, [sp, #8]
    6564:	ab02      	add	r3, sp, #8
    6566:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    656a:	6932      	ldr	r2, [r6, #16]
    656c:	2111      	movs	r1, #17
    656e:	4620      	mov	r0, r4
    6570:	f001 fb32 	bl	7bd8 <d_print_comp>
    6574:	783b      	ldrb	r3, [r7, #0]
    6576:	2b04      	cmp	r3, #4
    6578:	d102      	bne.n	6580 <d_print_comp_inner+0xa9c>
    657a:	9b02      	ldr	r3, [sp, #8]
    657c:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    6580:	eb08 1805 	add.w	r8, r8, r5, lsl #4
    6584:	2720      	movs	r7, #32
    6586:	f858 6c08 	ldr.w	r6, [r8, #-8]
    658a:	3d01      	subs	r5, #1
    658c:	2e00      	cmp	r6, #0
    658e:	f000 863b 	beq.w	7208 <d_print_comp_inner+0x1724>
    6592:	f1a8 0810 	sub.w	r8, r8, #16
    6596:	2d00      	cmp	r5, #0
    6598:	d1f5      	bne.n	6586 <d_print_comp_inner+0xaa2>
    659a:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
    659e:	f7ff bb11 	b.w	5bc4 <d_print_comp_inner+0xe0>
    65a2:	4fab      	ldr	r7, [pc, #684]	; (6850 <d_print_comp_inner+0xd6c>)
    65a4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    65a8:	f107 0909 	add.w	r9, r7, #9
    65ac:	2564      	movs	r5, #100	; 0x64
    65ae:	f04f 0800 	mov.w	r8, #0
    65b2:	e00b      	b.n	65cc <d_print_comp_inner+0xae8>
    65b4:	460b      	mov	r3, r1
    65b6:	3101      	adds	r1, #1
    65b8:	454f      	cmp	r7, r9
    65ba:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    65be:	54e5      	strb	r5, [r4, r3]
    65c0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    65c4:	f000 85ff 	beq.w	71c6 <d_print_comp_inner+0x16e2>
    65c8:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    65cc:	29ff      	cmp	r1, #255	; 0xff
    65ce:	d1f1      	bne.n	65b4 <d_print_comp_inner+0xad0>
    65d0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    65d4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    65d8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    65dc:	4620      	mov	r0, r4
    65de:	4798      	blx	r3
    65e0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    65e4:	3301      	adds	r3, #1
    65e6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    65ea:	2101      	movs	r1, #1
    65ec:	2300      	movs	r3, #0
    65ee:	e7e3      	b.n	65b8 <d_print_comp_inner+0xad4>
    65f0:	4f98      	ldr	r7, [pc, #608]	; (6854 <d_print_comp_inner+0xd70>)
    65f2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    65f6:	f107 0907 	add.w	r9, r7, #7
    65fa:	257b      	movs	r5, #123	; 0x7b
    65fc:	f04f 0800 	mov.w	r8, #0
    6600:	e00b      	b.n	661a <d_print_comp_inner+0xb36>
    6602:	460b      	mov	r3, r1
    6604:	3101      	adds	r1, #1
    6606:	454f      	cmp	r7, r9
    6608:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    660c:	54e5      	strb	r5, [r4, r3]
    660e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6612:	f000 8546 	beq.w	70a2 <d_print_comp_inner+0x15be>
    6616:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    661a:	29ff      	cmp	r1, #255	; 0xff
    661c:	d1f1      	bne.n	6602 <d_print_comp_inner+0xb1e>
    661e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6622:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6626:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    662a:	4620      	mov	r0, r4
    662c:	4798      	blx	r3
    662e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6632:	3301      	adds	r3, #1
    6634:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6638:	2101      	movs	r1, #1
    663a:	2300      	movs	r3, #0
    663c:	e7e3      	b.n	6606 <d_print_comp_inner+0xb22>
    663e:	4f86      	ldr	r7, [pc, #536]	; (6858 <d_print_comp_inner+0xd74>)
    6640:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6644:	f107 091b 	add.w	r9, r7, #27
    6648:	2567      	movs	r5, #103	; 0x67
    664a:	f04f 0800 	mov.w	r8, #0
    664e:	e00b      	b.n	6668 <d_print_comp_inner+0xb84>
    6650:	460b      	mov	r3, r1
    6652:	3101      	adds	r1, #1
    6654:	45b9      	cmp	r9, r7
    6656:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    665a:	54e5      	strb	r5, [r4, r3]
    665c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6660:	f43f aad3 	beq.w	5c0a <d_print_comp_inner+0x126>
    6664:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6668:	29ff      	cmp	r1, #255	; 0xff
    666a:	d1f1      	bne.n	6650 <d_print_comp_inner+0xb6c>
    666c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6670:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6674:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6678:	4620      	mov	r0, r4
    667a:	4798      	blx	r3
    667c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6680:	3301      	adds	r3, #1
    6682:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6686:	2101      	movs	r1, #1
    6688:	2300      	movs	r3, #0
    668a:	e7e3      	b.n	6654 <d_print_comp_inner+0xb70>
    668c:	4f73      	ldr	r7, [pc, #460]	; (685c <d_print_comp_inner+0xd78>)
    668e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6692:	f107 091c 	add.w	r9, r7, #28
    6696:	2567      	movs	r5, #103	; 0x67
    6698:	f04f 0800 	mov.w	r8, #0
    669c:	e00b      	b.n	66b6 <d_print_comp_inner+0xbd2>
    669e:	460b      	mov	r3, r1
    66a0:	3101      	adds	r1, #1
    66a2:	45b9      	cmp	r9, r7
    66a4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    66a8:	54e5      	strb	r5, [r4, r3]
    66aa:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    66ae:	f43f aaac 	beq.w	5c0a <d_print_comp_inner+0x126>
    66b2:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    66b6:	29ff      	cmp	r1, #255	; 0xff
    66b8:	d1f1      	bne.n	669e <d_print_comp_inner+0xbba>
    66ba:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    66be:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    66c2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    66c6:	4620      	mov	r0, r4
    66c8:	4798      	blx	r3
    66ca:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    66ce:	3301      	adds	r3, #1
    66d0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    66d4:	2101      	movs	r1, #1
    66d6:	2300      	movs	r3, #0
    66d8:	e7e3      	b.n	66a2 <d_print_comp_inner+0xbbe>
    66da:	6913      	ldr	r3, [r2, #16]
    66dc:	781b      	ldrb	r3, [r3, #0]
    66de:	2b39      	cmp	r3, #57	; 0x39
    66e0:	f47f aa6d 	bne.w	5bbe <d_print_comp_inner+0xda>
    66e4:	68d2      	ldr	r2, [r2, #12]
    66e6:	68d3      	ldr	r3, [r2, #12]
    66e8:	681b      	ldr	r3, [r3, #0]
    66ea:	7859      	ldrb	r1, [r3, #1]
    66ec:	2963      	cmp	r1, #99	; 0x63
    66ee:	f001 8081 	beq.w	77f4 <d_print_comp_inner+0x1d10>
    66f2:	4632      	mov	r2, r6
    66f4:	2111      	movs	r1, #17
    66f6:	4620      	mov	r0, r4
    66f8:	f002 fb16 	bl	8d28 <d_maybe_print_fold_expression>
    66fc:	2800      	cmp	r0, #0
    66fe:	f47f aa61 	bne.w	5bc4 <d_print_comp_inner+0xe0>
    6702:	4632      	mov	r2, r6
    6704:	2111      	movs	r1, #17
    6706:	4620      	mov	r0, r4
    6708:	f002 fc38 	bl	8f7c <d_maybe_print_designated_init>
    670c:	2800      	cmp	r0, #0
    670e:	f47f aa59 	bne.w	5bc4 <d_print_comp_inner+0xe0>
    6712:	68f3      	ldr	r3, [r6, #12]
    6714:	781a      	ldrb	r2, [r3, #0]
    6716:	2a32      	cmp	r2, #50	; 0x32
    6718:	f001 81dd 	beq.w	7ad6 <d_print_comp_inner+0x1ff2>
    671c:	68db      	ldr	r3, [r3, #12]
    671e:	4950      	ldr	r1, [pc, #320]	; (6860 <d_print_comp_inner+0xd7c>)
    6720:	6818      	ldr	r0, [r3, #0]
    6722:	f006 fb11 	bl	cd48 <strcmp>
    6726:	6933      	ldr	r3, [r6, #16]
    6728:	b920      	cbnz	r0, 6734 <d_print_comp_inner+0xc50>
    672a:	68da      	ldr	r2, [r3, #12]
    672c:	7811      	ldrb	r1, [r2, #0]
    672e:	2903      	cmp	r1, #3
    6730:	f001 8200 	beq.w	7b34 <d_print_comp_inner+0x2050>
    6734:	68da      	ldr	r2, [r3, #12]
    6736:	2111      	movs	r1, #17
    6738:	4620      	mov	r0, r4
    673a:	f002 fa87 	bl	8c4c <d_print_subexpr>
    673e:	68f5      	ldr	r5, [r6, #12]
    6740:	4948      	ldr	r1, [pc, #288]	; (6864 <d_print_comp_inner+0xd80>)
    6742:	68eb      	ldr	r3, [r5, #12]
    6744:	681f      	ldr	r7, [r3, #0]
    6746:	4638      	mov	r0, r7
    6748:	f006 fafe 	bl	cd48 <strcmp>
    674c:	2800      	cmp	r0, #0
    674e:	f001 81e1 	beq.w	7b14 <d_print_comp_inner+0x2030>
    6752:	4943      	ldr	r1, [pc, #268]	; (6860 <d_print_comp_inner+0xd7c>)
    6754:	4638      	mov	r0, r7
    6756:	f006 faf7 	bl	cd48 <strcmp>
    675a:	2800      	cmp	r0, #0
    675c:	f041 81f8 	bne.w	7b50 <d_print_comp_inner+0x206c>
    6760:	6933      	ldr	r3, [r6, #16]
    6762:	2111      	movs	r1, #17
    6764:	691a      	ldr	r2, [r3, #16]
    6766:	4620      	mov	r0, r4
    6768:	f002 fa70 	bl	8c4c <d_print_subexpr>
    676c:	68f3      	ldr	r3, [r6, #12]
    676e:	781a      	ldrb	r2, [r3, #0]
    6770:	2a32      	cmp	r2, #50	; 0x32
    6772:	f47f aa27 	bne.w	5bc4 <d_print_comp_inner+0xe0>
    6776:	68db      	ldr	r3, [r3, #12]
    6778:	689a      	ldr	r2, [r3, #8]
    677a:	2a01      	cmp	r2, #1
    677c:	f47f aa22 	bne.w	5bc4 <d_print_comp_inner+0xe0>
    6780:	685b      	ldr	r3, [r3, #4]
    6782:	781b      	ldrb	r3, [r3, #0]
    6784:	2b3e      	cmp	r3, #62	; 0x3e
    6786:	f47f aa1d 	bne.w	5bc4 <d_print_comp_inner+0xe0>
    678a:	2129      	movs	r1, #41	; 0x29
    678c:	f7ff bb1e 	b.w	5dcc <d_print_comp_inner+0x2e8>
    6790:	e9d2 7503 	ldrd	r7, r5, [r2, #12]
    6794:	783b      	ldrb	r3, [r7, #0]
    6796:	2b32      	cmp	r3, #50	; 0x32
    6798:	f000 86b1 	beq.w	74fe <d_print_comp_inner+0x1a1a>
    679c:	2b34      	cmp	r3, #52	; 0x34
    679e:	f041 820d 	bne.w	7bbc <d_print_comp_inner+0x20d8>
    67a2:	2128      	movs	r1, #40	; 0x28
    67a4:	f7fc ff64 	bl	3670 <d_append_char>
    67a8:	4620      	mov	r0, r4
    67aa:	2111      	movs	r1, #17
    67ac:	68fa      	ldr	r2, [r7, #12]
    67ae:	f001 fa13 	bl	7bd8 <d_print_comp>
    67b2:	2129      	movs	r1, #41	; 0x29
    67b4:	4620      	mov	r0, r4
    67b6:	f7fc ff5b 	bl	3670 <d_append_char>
    67ba:	462a      	mov	r2, r5
    67bc:	2111      	movs	r1, #17
    67be:	4620      	mov	r0, r4
    67c0:	b015      	add	sp, #84	; 0x54
    67c2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    67c6:	f002 ba41 	b.w	8c4c <d_print_subexpr>
    67ca:	68d2      	ldr	r2, [r2, #12]
    67cc:	2111      	movs	r1, #17
    67ce:	4620      	mov	r0, r4
    67d0:	b015      	add	sp, #84	; 0x54
    67d2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    67d6:	f002 b83d 	b.w	8854 <d_print_expr_op>
    67da:	f9b2 3012 	ldrsh.w	r3, [r2, #18]
    67de:	2b00      	cmp	r3, #0
    67e0:	f040 871b 	bne.w	761a <d_print_comp_inner+0x1b36>
    67e4:	68f2      	ldr	r2, [r6, #12]
    67e6:	4b20      	ldr	r3, [pc, #128]	; (6868 <d_print_comp_inner+0xd84>)
    67e8:	68d1      	ldr	r1, [r2, #12]
    67ea:	4299      	cmp	r1, r3
    67ec:	d00f      	beq.n	680e <d_print_comp_inner+0xd2a>
    67ee:	2111      	movs	r1, #17
    67f0:	4620      	mov	r0, r4
    67f2:	f001 f9f1 	bl	7bd8 <d_print_comp>
    67f6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    67fa:	29ff      	cmp	r1, #255	; 0xff
    67fc:	f001 80be 	beq.w	797c <d_print_comp_inner+0x1e98>
    6800:	2320      	movs	r3, #32
    6802:	1c4a      	adds	r2, r1, #1
    6804:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    6808:	5463      	strb	r3, [r4, r1]
    680a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    680e:	f9b6 8010 	ldrsh.w	r8, [r6, #16]
    6812:	f1b8 0f00 	cmp.w	r8, #0
    6816:	f000 8540 	beq.w	729a <d_print_comp_inner+0x17b6>
    681a:	4914      	ldr	r1, [pc, #80]	; (686c <d_print_comp_inner+0xd88>)
    681c:	e5c1      	b.n	63a2 <d_print_comp_inner+0x8be>
    681e:	f8d0 c114 	ldr.w	ip, [r0, #276]	; 0x114
    6822:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
    6826:	9307      	str	r3, [sp, #28]
    6828:	f10d 0810 	add.w	r8, sp, #16
    682c:	2300      	movs	r3, #0
    682e:	46e1      	mov	r9, ip
    6830:	f8cd c010 	str.w	ip, [sp, #16]
    6834:	f8c0 8114 	str.w	r8, [r0, #276]	; 0x114
    6838:	9205      	str	r2, [sp, #20]
    683a:	9306      	str	r3, [sp, #24]
    683c:	f1bc 0f00 	cmp.w	ip, #0
    6840:	f001 813d 	beq.w	7abe <d_print_comp_inner+0x1fda>
    6844:	2701      	movs	r7, #1
    6846:	4665      	mov	r5, ip
    6848:	46be      	mov	lr, r7
    684a:	4694      	mov	ip, r2
    684c:	4646      	mov	r6, r8
    684e:	e028      	b.n	68a2 <d_print_comp_inner+0xdbe>
    6850:	20001480 	.word	0x20001480
    6854:	200014e0 	.word	0x200014e0
    6858:	200014c0 	.word	0x200014c0
    685c:	200014a0 	.word	0x200014a0
    6860:	2000143c 	.word	0x2000143c
    6864:	20001440 	.word	0x20001440
    6868:	20000b98 	.word	0x20000b98
    686c:	2000140c 	.word	0x2000140c
    6870:	68ab      	ldr	r3, [r5, #8]
    6872:	b9a3      	cbnz	r3, 689e <d_print_comp_inner+0xdba>
    6874:	2f03      	cmp	r7, #3
    6876:	f63f a9a2 	bhi.w	5bbe <d_print_comp_inner+0xda>
    687a:	ab14      	add	r3, sp, #80	; 0x50
    687c:	eb03 1b07 	add.w	fp, r3, r7, lsl #4
    6880:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
    6884:	f1ab 0a40 	sub.w	sl, fp, #64	; 0x40
    6888:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
    688c:	f84b 6c40 	str.w	r6, [fp, #-64]
    6890:	eb08 1607 	add.w	r6, r8, r7, lsl #4
    6894:	f8c4 6114 	str.w	r6, [r4, #276]	; 0x114
    6898:	3701      	adds	r7, #1
    689a:	f8c5 e008 	str.w	lr, [r5, #8]
    689e:	682d      	ldr	r5, [r5, #0]
    68a0:	b125      	cbz	r5, 68ac <d_print_comp_inner+0xdc8>
    68a2:	686b      	ldr	r3, [r5, #4]
    68a4:	781b      	ldrb	r3, [r3, #0]
    68a6:	3b19      	subs	r3, #25
    68a8:	2b02      	cmp	r3, #2
    68aa:	d9e1      	bls.n	6870 <d_print_comp_inner+0xd8c>
    68ac:	f8dc 2010 	ldr.w	r2, [ip, #16]
    68b0:	2111      	movs	r1, #17
    68b2:	4620      	mov	r0, r4
    68b4:	4666      	mov	r6, ip
    68b6:	f001 f98f 	bl	7bd8 <d_print_comp>
    68ba:	9b06      	ldr	r3, [sp, #24]
    68bc:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
    68c0:	2b00      	cmp	r3, #0
    68c2:	f47f a97f 	bne.w	5bc4 <d_print_comp_inner+0xe0>
    68c6:	2f01      	cmp	r7, #1
    68c8:	d00c      	beq.n	68e4 <d_print_comp_inner+0xe00>
    68ca:	eb08 1807 	add.w	r8, r8, r7, lsl #4
    68ce:	f858 2c0c 	ldr.w	r2, [r8, #-12]
    68d2:	3f01      	subs	r7, #1
    68d4:	2111      	movs	r1, #17
    68d6:	4620      	mov	r0, r4
    68d8:	f001 f9ac 	bl	7c34 <d_print_mod>
    68dc:	2f01      	cmp	r7, #1
    68de:	f1a8 0810 	sub.w	r8, r8, #16
    68e2:	d1f4      	bne.n	68ce <d_print_comp_inner+0xdea>
    68e4:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
    68e8:	4632      	mov	r2, r6
    68ea:	2111      	movs	r1, #17
    68ec:	4620      	mov	r0, r4
    68ee:	f001 fecd 	bl	868c <d_print_array_type>
    68f2:	f7ff b967 	b.w	5bc4 <d_print_comp_inner+0xe0>
    68f6:	4fc6      	ldr	r7, [pc, #792]	; (6c10 <d_print_comp_inner+0x112c>)
    68f8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    68fc:	f107 0919 	add.w	r9, r7, #25
    6900:	2563      	movs	r5, #99	; 0x63
    6902:	f04f 0800 	mov.w	r8, #0
    6906:	e00b      	b.n	6920 <d_print_comp_inner+0xe3c>
    6908:	460b      	mov	r3, r1
    690a:	3101      	adds	r1, #1
    690c:	45b9      	cmp	r9, r7
    690e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6912:	54e5      	strb	r5, [r4, r3]
    6914:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6918:	f43f a977 	beq.w	5c0a <d_print_comp_inner+0x126>
    691c:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6920:	29ff      	cmp	r1, #255	; 0xff
    6922:	d1f1      	bne.n	6908 <d_print_comp_inner+0xe24>
    6924:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6928:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    692c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6930:	4620      	mov	r0, r4
    6932:	4798      	blx	r3
    6934:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6938:	3301      	adds	r3, #1
    693a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    693e:	2101      	movs	r1, #1
    6940:	2300      	movs	r3, #0
    6942:	e7e3      	b.n	690c <d_print_comp_inner+0xe28>
    6944:	4fb3      	ldr	r7, [pc, #716]	; (6c14 <d_print_comp_inner+0x1130>)
    6946:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    694a:	f107 0910 	add.w	r9, r7, #16
    694e:	2576      	movs	r5, #118	; 0x76
    6950:	f04f 0800 	mov.w	r8, #0
    6954:	e00b      	b.n	696e <d_print_comp_inner+0xe8a>
    6956:	460b      	mov	r3, r1
    6958:	3101      	adds	r1, #1
    695a:	45b9      	cmp	r9, r7
    695c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6960:	54e5      	strb	r5, [r4, r3]
    6962:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6966:	f43f a950 	beq.w	5c0a <d_print_comp_inner+0x126>
    696a:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    696e:	29ff      	cmp	r1, #255	; 0xff
    6970:	d1f1      	bne.n	6956 <d_print_comp_inner+0xe72>
    6972:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6976:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    697a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    697e:	4620      	mov	r0, r4
    6980:	4798      	blx	r3
    6982:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6986:	3301      	adds	r3, #1
    6988:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    698c:	2101      	movs	r1, #1
    698e:	2300      	movs	r3, #0
    6990:	e7e3      	b.n	695a <d_print_comp_inner+0xe76>
    6992:	4fa1      	ldr	r7, [pc, #644]	; (6c18 <d_print_comp_inner+0x1134>)
    6994:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6998:	f107 0914 	add.w	r9, r7, #20
    699c:	256e      	movs	r5, #110	; 0x6e
    699e:	f04f 0800 	mov.w	r8, #0
    69a2:	e00b      	b.n	69bc <d_print_comp_inner+0xed8>
    69a4:	460b      	mov	r3, r1
    69a6:	3101      	adds	r1, #1
    69a8:	45b9      	cmp	r9, r7
    69aa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    69ae:	54e5      	strb	r5, [r4, r3]
    69b0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    69b4:	f43f a929 	beq.w	5c0a <d_print_comp_inner+0x126>
    69b8:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    69bc:	29ff      	cmp	r1, #255	; 0xff
    69be:	d1f1      	bne.n	69a4 <d_print_comp_inner+0xec0>
    69c0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    69c4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    69c8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    69cc:	4620      	mov	r0, r4
    69ce:	4798      	blx	r3
    69d0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    69d4:	3301      	adds	r3, #1
    69d6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    69da:	2101      	movs	r1, #1
    69dc:	2300      	movs	r3, #0
    69de:	e7e3      	b.n	69a8 <d_print_comp_inner+0xec4>
    69e0:	4f8e      	ldr	r7, [pc, #568]	; (6c1c <d_print_comp_inner+0x1138>)
    69e2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    69e6:	f107 0918 	add.w	r9, r7, #24
    69ea:	2554      	movs	r5, #84	; 0x54
    69ec:	f04f 0800 	mov.w	r8, #0
    69f0:	e00b      	b.n	6a0a <d_print_comp_inner+0xf26>
    69f2:	460b      	mov	r3, r1
    69f4:	3101      	adds	r1, #1
    69f6:	45b9      	cmp	r9, r7
    69f8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    69fc:	54e5      	strb	r5, [r4, r3]
    69fe:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6a02:	f43f a902 	beq.w	5c0a <d_print_comp_inner+0x126>
    6a06:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6a0a:	29ff      	cmp	r1, #255	; 0xff
    6a0c:	d1f1      	bne.n	69f2 <d_print_comp_inner+0xf0e>
    6a0e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6a12:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6a16:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6a1a:	4620      	mov	r0, r4
    6a1c:	4798      	blx	r3
    6a1e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6a22:	3301      	adds	r3, #1
    6a24:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6a28:	2101      	movs	r1, #1
    6a2a:	2300      	movs	r3, #0
    6a2c:	e7e3      	b.n	69f6 <d_print_comp_inner+0xf12>
    6a2e:	4f7c      	ldr	r7, [pc, #496]	; (6c20 <d_print_comp_inner+0x113c>)
    6a30:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6a34:	f107 0915 	add.w	r9, r7, #21
    6a38:	2554      	movs	r5, #84	; 0x54
    6a3a:	f04f 0800 	mov.w	r8, #0
    6a3e:	e00b      	b.n	6a58 <d_print_comp_inner+0xf74>
    6a40:	460b      	mov	r3, r1
    6a42:	3101      	adds	r1, #1
    6a44:	45b9      	cmp	r9, r7
    6a46:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6a4a:	54e5      	strb	r5, [r4, r3]
    6a4c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6a50:	f43f a8db 	beq.w	5c0a <d_print_comp_inner+0x126>
    6a54:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6a58:	29ff      	cmp	r1, #255	; 0xff
    6a5a:	d1f1      	bne.n	6a40 <d_print_comp_inner+0xf5c>
    6a5c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6a60:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6a64:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6a68:	4620      	mov	r0, r4
    6a6a:	4798      	blx	r3
    6a6c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6a70:	3301      	adds	r3, #1
    6a72:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6a76:	2101      	movs	r1, #1
    6a78:	2300      	movs	r3, #0
    6a7a:	e7e3      	b.n	6a44 <d_print_comp_inner+0xf60>
    6a7c:	4f69      	ldr	r7, [pc, #420]	; (6c24 <d_print_comp_inner+0x1140>)
    6a7e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6a82:	f107 0912 	add.w	r9, r7, #18
    6a86:	2567      	movs	r5, #103	; 0x67
    6a88:	f04f 0800 	mov.w	r8, #0
    6a8c:	e00b      	b.n	6aa6 <d_print_comp_inner+0xfc2>
    6a8e:	460b      	mov	r3, r1
    6a90:	3101      	adds	r1, #1
    6a92:	45b9      	cmp	r9, r7
    6a94:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6a98:	54e5      	strb	r5, [r4, r3]
    6a9a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6a9e:	f43f a8b4 	beq.w	5c0a <d_print_comp_inner+0x126>
    6aa2:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6aa6:	29ff      	cmp	r1, #255	; 0xff
    6aa8:	d1f1      	bne.n	6a8e <d_print_comp_inner+0xfaa>
    6aaa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6aae:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6ab2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6ab6:	4620      	mov	r0, r4
    6ab8:	4798      	blx	r3
    6aba:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6abe:	3301      	adds	r3, #1
    6ac0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6ac4:	2101      	movs	r1, #1
    6ac6:	2300      	movs	r3, #0
    6ac8:	e7e3      	b.n	6a92 <d_print_comp_inner+0xfae>
    6aca:	4f57      	ldr	r7, [pc, #348]	; (6c28 <d_print_comp_inner+0x1144>)
    6acc:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6ad0:	f107 090e 	add.w	r9, r7, #14
    6ad4:	256a      	movs	r5, #106	; 0x6a
    6ad6:	f04f 0800 	mov.w	r8, #0
    6ada:	e00b      	b.n	6af4 <d_print_comp_inner+0x1010>
    6adc:	460b      	mov	r3, r1
    6ade:	3101      	adds	r1, #1
    6ae0:	45b9      	cmp	r9, r7
    6ae2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6ae6:	54e5      	strb	r5, [r4, r3]
    6ae8:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6aec:	f43f a88d 	beq.w	5c0a <d_print_comp_inner+0x126>
    6af0:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6af4:	29ff      	cmp	r1, #255	; 0xff
    6af6:	d1f1      	bne.n	6adc <d_print_comp_inner+0xff8>
    6af8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6afc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6b00:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6b04:	4620      	mov	r0, r4
    6b06:	4798      	blx	r3
    6b08:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6b0c:	3301      	adds	r3, #1
    6b0e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6b12:	2101      	movs	r1, #1
    6b14:	2300      	movs	r3, #0
    6b16:	e7e3      	b.n	6ae0 <d_print_comp_inner+0xffc>
    6b18:	4f44      	ldr	r7, [pc, #272]	; (6c2c <d_print_comp_inner+0x1148>)
    6b1a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6b1e:	f107 0908 	add.w	r9, r7, #8
    6b22:	256f      	movs	r5, #111	; 0x6f
    6b24:	f04f 0800 	mov.w	r8, #0
    6b28:	e00b      	b.n	6b42 <d_print_comp_inner+0x105e>
    6b2a:	460b      	mov	r3, r1
    6b2c:	3101      	adds	r1, #1
    6b2e:	45b9      	cmp	r9, r7
    6b30:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6b34:	54e5      	strb	r5, [r4, r3]
    6b36:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6b3a:	f000 8295 	beq.w	7068 <d_print_comp_inner+0x1584>
    6b3e:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6b42:	29ff      	cmp	r1, #255	; 0xff
    6b44:	d1f1      	bne.n	6b2a <d_print_comp_inner+0x1046>
    6b46:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6b4a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6b4e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6b52:	4620      	mov	r0, r4
    6b54:	4798      	blx	r3
    6b56:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6b5a:	3301      	adds	r3, #1
    6b5c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6b60:	2101      	movs	r1, #1
    6b62:	2300      	movs	r3, #0
    6b64:	e7e3      	b.n	6b2e <d_print_comp_inner+0x104a>
    6b66:	4f31      	ldr	r7, [pc, #196]	; (6c2c <d_print_comp_inner+0x1148>)
    6b68:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6b6c:	f107 0908 	add.w	r9, r7, #8
    6b70:	256f      	movs	r5, #111	; 0x6f
    6b72:	f04f 0800 	mov.w	r8, #0
    6b76:	e00b      	b.n	6b90 <d_print_comp_inner+0x10ac>
    6b78:	460b      	mov	r3, r1
    6b7a:	3101      	adds	r1, #1
    6b7c:	45b9      	cmp	r9, r7
    6b7e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6b82:	54e5      	strb	r5, [r4, r3]
    6b84:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6b88:	f43f a853 	beq.w	5c32 <d_print_comp_inner+0x14e>
    6b8c:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6b90:	29ff      	cmp	r1, #255	; 0xff
    6b92:	d1f1      	bne.n	6b78 <d_print_comp_inner+0x1094>
    6b94:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6b98:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6b9c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6ba0:	4620      	mov	r0, r4
    6ba2:	4798      	blx	r3
    6ba4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6ba8:	3301      	adds	r3, #1
    6baa:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6bae:	2101      	movs	r1, #1
    6bb0:	2300      	movs	r3, #0
    6bb2:	e7e3      	b.n	6b7c <d_print_comp_inner+0x1098>
    6bb4:	68d2      	ldr	r2, [r2, #12]
    6bb6:	2111      	movs	r1, #17
    6bb8:	f001 f80e 	bl	7bd8 <d_print_comp>
    6bbc:	f7ff b839 	b.w	5c32 <d_print_comp_inner+0x14e>
    6bc0:	4f1b      	ldr	r7, [pc, #108]	; (6c30 <d_print_comp_inner+0x114c>)
    6bc2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6bc6:	f107 090d 	add.w	r9, r7, #13
    6bca:	256a      	movs	r5, #106	; 0x6a
    6bcc:	f04f 0800 	mov.w	r8, #0
    6bd0:	e00b      	b.n	6bea <d_print_comp_inner+0x1106>
    6bd2:	460b      	mov	r3, r1
    6bd4:	3101      	adds	r1, #1
    6bd6:	45b9      	cmp	r9, r7
    6bd8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6bdc:	54e5      	strb	r5, [r4, r3]
    6bde:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6be2:	f43f a812 	beq.w	5c0a <d_print_comp_inner+0x126>
    6be6:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6bea:	29ff      	cmp	r1, #255	; 0xff
    6bec:	d1f1      	bne.n	6bd2 <d_print_comp_inner+0x10ee>
    6bee:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6bf2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6bf6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6bfa:	4620      	mov	r0, r4
    6bfc:	4798      	blx	r3
    6bfe:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6c02:	3301      	adds	r3, #1
    6c04:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6c08:	2101      	movs	r1, #1
    6c0a:	2300      	movs	r3, #0
    6c0c:	e7e3      	b.n	6bd6 <d_print_comp_inner+0x10f2>
    6c0e:	bf00      	nop
    6c10:	20001348 	.word	0x20001348
    6c14:	20001334 	.word	0x20001334
    6c18:	20001330 	.word	0x20001330
    6c1c:	200013a0 	.word	0x200013a0
    6c20:	20001388 	.word	0x20001388
    6c24:	20001374 	.word	0x20001374
    6c28:	20001364 	.word	0x20001364
    6c2c:	2000142c 	.word	0x2000142c
    6c30:	20001470 	.word	0x20001470
    6c34:	2300      	movs	r3, #0
    6c36:	f8d0 8114 	ldr.w	r8, [r0, #276]	; 0x114
    6c3a:	f8d0 7148 	ldr.w	r7, [r0, #328]	; 0x148
    6c3e:	f8c4 2148 	str.w	r2, [r4, #328]	; 0x148
    6c42:	2111      	movs	r1, #17
    6c44:	f8c0 3114 	str.w	r3, [r0, #276]	; 0x114
    6c48:	68d2      	ldr	r2, [r2, #12]
    6c4a:	f000 ffc5 	bl	7bd8 <d_print_comp>
    6c4e:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    6c52:	2b3c      	cmp	r3, #60	; 0x3c
    6c54:	f000 857c 	beq.w	7750 <d_print_comp_inner+0x1c6c>
    6c58:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6c5c:	29ff      	cmp	r1, #255	; 0xff
    6c5e:	f000 8567 	beq.w	7730 <d_print_comp_inner+0x1c4c>
    6c62:	1c4b      	adds	r3, r1, #1
    6c64:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    6c68:	233c      	movs	r3, #60	; 0x3c
    6c6a:	5463      	strb	r3, [r4, r1]
    6c6c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    6c70:	6932      	ldr	r2, [r6, #16]
    6c72:	2111      	movs	r1, #17
    6c74:	4620      	mov	r0, r4
    6c76:	f000 ffaf 	bl	7bd8 <d_print_comp>
    6c7a:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    6c7e:	2b3e      	cmp	r3, #62	; 0x3e
    6c80:	f000 8550 	beq.w	7724 <d_print_comp_inner+0x1c40>
    6c84:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6c88:	29ff      	cmp	r1, #255	; 0xff
    6c8a:	f000 853b 	beq.w	7704 <d_print_comp_inner+0x1c20>
    6c8e:	1c4b      	adds	r3, r1, #1
    6c90:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    6c94:	233e      	movs	r3, #62	; 0x3e
    6c96:	5463      	strb	r3, [r4, r1]
    6c98:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    6c9c:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
    6ca0:	f8c4 7148 	str.w	r7, [r4, #328]	; 0x148
    6ca4:	f7fe bf8e 	b.w	5bc4 <d_print_comp_inner+0xe0>
    6ca8:	4fc4      	ldr	r7, [pc, #784]	; (6fbc <d_print_comp_inner+0x14d8>)
    6caa:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6cae:	f107 0907 	add.w	r9, r7, #7
    6cb2:	2556      	movs	r5, #86	; 0x56
    6cb4:	f04f 0800 	mov.w	r8, #0
    6cb8:	e00b      	b.n	6cd2 <d_print_comp_inner+0x11ee>
    6cba:	460b      	mov	r3, r1
    6cbc:	3101      	adds	r1, #1
    6cbe:	454f      	cmp	r7, r9
    6cc0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6cc4:	54e5      	strb	r5, [r4, r3]
    6cc6:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6cca:	f43e af9e 	beq.w	5c0a <d_print_comp_inner+0x126>
    6cce:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6cd2:	29ff      	cmp	r1, #255	; 0xff
    6cd4:	d1f1      	bne.n	6cba <d_print_comp_inner+0x11d6>
    6cd6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6cda:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6cde:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6ce2:	4620      	mov	r0, r4
    6ce4:	4798      	blx	r3
    6ce6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6cea:	3301      	adds	r3, #1
    6cec:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6cf0:	2101      	movs	r1, #1
    6cf2:	2300      	movs	r3, #0
    6cf4:	e7e3      	b.n	6cbe <d_print_comp_inner+0x11da>
    6cf6:	4fb2      	ldr	r7, [pc, #712]	; (6fc0 <d_print_comp_inner+0x14dc>)
    6cf8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6cfc:	f107 090a 	add.w	r9, r7, #10
    6d00:	2576      	movs	r5, #118	; 0x76
    6d02:	f04f 0800 	mov.w	r8, #0
    6d06:	e00b      	b.n	6d20 <d_print_comp_inner+0x123c>
    6d08:	460b      	mov	r3, r1
    6d0a:	3101      	adds	r1, #1
    6d0c:	45b9      	cmp	r9, r7
    6d0e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6d12:	54e5      	strb	r5, [r4, r3]
    6d14:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6d18:	f43e af77 	beq.w	5c0a <d_print_comp_inner+0x126>
    6d1c:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6d20:	29ff      	cmp	r1, #255	; 0xff
    6d22:	d1f1      	bne.n	6d08 <d_print_comp_inner+0x1224>
    6d24:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6d28:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6d2c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6d30:	4620      	mov	r0, r4
    6d32:	4798      	blx	r3
    6d34:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6d38:	3301      	adds	r3, #1
    6d3a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6d3e:	2101      	movs	r1, #1
    6d40:	2300      	movs	r3, #0
    6d42:	e7e3      	b.n	6d0c <d_print_comp_inner+0x1228>
    6d44:	6913      	ldr	r3, [r2, #16]
    6d46:	781a      	ldrb	r2, [r3, #0]
    6d48:	2a3b      	cmp	r2, #59	; 0x3b
    6d4a:	f47e af38 	bne.w	5bbe <d_print_comp_inner+0xda>
    6d4e:	691b      	ldr	r3, [r3, #16]
    6d50:	781b      	ldrb	r3, [r3, #0]
    6d52:	2b3c      	cmp	r3, #60	; 0x3c
    6d54:	f47e af33 	bne.w	5bbe <d_print_comp_inner+0xda>
    6d58:	4632      	mov	r2, r6
    6d5a:	2111      	movs	r1, #17
    6d5c:	f001 ffe4 	bl	8d28 <d_maybe_print_fold_expression>
    6d60:	2800      	cmp	r0, #0
    6d62:	f47e af2f 	bne.w	5bc4 <d_print_comp_inner+0xe0>
    6d66:	4632      	mov	r2, r6
    6d68:	2111      	movs	r1, #17
    6d6a:	4620      	mov	r0, r4
    6d6c:	f002 f906 	bl	8f7c <d_maybe_print_designated_init>
    6d70:	2800      	cmp	r0, #0
    6d72:	f47e af27 	bne.w	5bc4 <d_print_comp_inner+0xe0>
    6d76:	e9d6 8303 	ldrd	r8, r3, [r6, #12]
    6d7a:	e9d3 6303 	ldrd	r6, r3, [r3, #12]
    6d7e:	f8d8 200c 	ldr.w	r2, [r8, #12]
    6d82:	4990      	ldr	r1, [pc, #576]	; (6fc4 <d_print_comp_inner+0x14e0>)
    6d84:	6810      	ldr	r0, [r2, #0]
    6d86:	e9d3 7503 	ldrd	r7, r5, [r3, #12]
    6d8a:	f005 ffdd 	bl	cd48 <strcmp>
    6d8e:	2800      	cmp	r0, #0
    6d90:	f040 86e5 	bne.w	7b5e <d_print_comp_inner+0x207a>
    6d94:	4632      	mov	r2, r6
    6d96:	4620      	mov	r0, r4
    6d98:	2111      	movs	r1, #17
    6d9a:	f001 ff57 	bl	8c4c <d_print_subexpr>
    6d9e:	4642      	mov	r2, r8
    6da0:	4620      	mov	r0, r4
    6da2:	2111      	movs	r1, #17
    6da4:	f001 fd56 	bl	8854 <d_print_expr_op>
    6da8:	4620      	mov	r0, r4
    6daa:	463a      	mov	r2, r7
    6dac:	2111      	movs	r1, #17
    6dae:	f001 ff4d 	bl	8c4c <d_print_subexpr>
    6db2:	4985      	ldr	r1, [pc, #532]	; (6fc8 <d_print_comp_inner+0x14e4>)
    6db4:	4620      	mov	r0, r4
    6db6:	f7fc fce3 	bl	3780 <d_append_string>
    6dba:	e4fe      	b.n	67ba <d_print_comp_inner+0xcd6>
    6dbc:	e9d2 5303 	ldrd	r5, r3, [r2, #12]
    6dc0:	2b00      	cmp	r3, #0
    6dc2:	f43e aeff 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    6dc6:	442b      	add	r3, r5
    6dc8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6dcc:	3d01      	subs	r5, #1
    6dce:	1e5f      	subs	r7, r3, #1
    6dd0:	f04f 0800 	mov.w	r8, #0
    6dd4:	e009      	b.n	6dea <d_print_comp_inner+0x1306>
    6dd6:	460b      	mov	r3, r1
    6dd8:	3101      	adds	r1, #1
    6dda:	42af      	cmp	r7, r5
    6ddc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6de0:	54e6      	strb	r6, [r4, r3]
    6de2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6de6:	f43e aeed 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    6dea:	29ff      	cmp	r1, #255	; 0xff
    6dec:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    6df0:	d1f1      	bne.n	6dd6 <d_print_comp_inner+0x12f2>
    6df2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6df6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6dfa:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6dfe:	4620      	mov	r0, r4
    6e00:	4798      	blx	r3
    6e02:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6e06:	3301      	adds	r3, #1
    6e08:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6e0c:	2101      	movs	r1, #1
    6e0e:	2300      	movs	r3, #0
    6e10:	e7e3      	b.n	6dda <d_print_comp_inner+0x12f6>
    6e12:	68d2      	ldr	r2, [r2, #12]
    6e14:	e9d2 5300 	ldrd	r5, r3, [r2]
    6e18:	2b00      	cmp	r3, #0
    6e1a:	f43e aed3 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    6e1e:	442b      	add	r3, r5
    6e20:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6e24:	3d01      	subs	r5, #1
    6e26:	1e5f      	subs	r7, r3, #1
    6e28:	f04f 0800 	mov.w	r8, #0
    6e2c:	e009      	b.n	6e42 <d_print_comp_inner+0x135e>
    6e2e:	460b      	mov	r3, r1
    6e30:	3101      	adds	r1, #1
    6e32:	42af      	cmp	r7, r5
    6e34:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6e38:	54e6      	strb	r6, [r4, r3]
    6e3a:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6e3e:	f43e aec1 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    6e42:	29ff      	cmp	r1, #255	; 0xff
    6e44:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    6e48:	d1f1      	bne.n	6e2e <d_print_comp_inner+0x134a>
    6e4a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6e4e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6e52:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6e56:	4620      	mov	r0, r4
    6e58:	4798      	blx	r3
    6e5a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6e5e:	3301      	adds	r3, #1
    6e60:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6e64:	2101      	movs	r1, #1
    6e66:	2300      	movs	r3, #0
    6e68:	e7e3      	b.n	6e32 <d_print_comp_inner+0x134e>
    6e6a:	4958      	ldr	r1, [pc, #352]	; (6fcc <d_print_comp_inner+0x14e8>)
    6e6c:	4620      	mov	r0, r4
    6e6e:	f7fc fc87 	bl	3780 <d_append_string>
    6e72:	693a      	ldr	r2, [r7, #16]
    6e74:	4956      	ldr	r1, [pc, #344]	; (6fd0 <d_print_comp_inner+0x14ec>)
    6e76:	3201      	adds	r2, #1
    6e78:	a804      	add	r0, sp, #16
    6e7a:	f003 fb77 	bl	a56c <sprintf>
    6e7e:	a804      	add	r0, sp, #16
    6e80:	f007 fefe 	bl	ec80 <strlen>
    6e84:	2800      	cmp	r0, #0
    6e86:	f000 83fb 	beq.w	7680 <d_print_comp_inner+0x1b9c>
    6e8a:	ad04      	add	r5, sp, #16
    6e8c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6e90:	eb05 0900 	add.w	r9, r5, r0
    6e94:	f04f 0800 	mov.w	r8, #0
    6e98:	e009      	b.n	6eae <d_print_comp_inner+0x13ca>
    6e9a:	460b      	mov	r3, r1
    6e9c:	3101      	adds	r1, #1
    6e9e:	45a9      	cmp	r9, r5
    6ea0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6ea4:	54e6      	strb	r6, [r4, r3]
    6ea6:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6eaa:	f000 83e9 	beq.w	7680 <d_print_comp_inner+0x1b9c>
    6eae:	29ff      	cmp	r1, #255	; 0xff
    6eb0:	f815 6b01 	ldrb.w	r6, [r5], #1
    6eb4:	d1f1      	bne.n	6e9a <d_print_comp_inner+0x13b6>
    6eb6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6eba:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6ebe:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6ec2:	4620      	mov	r0, r4
    6ec4:	4798      	blx	r3
    6ec6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6eca:	3301      	adds	r3, #1
    6ecc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6ed0:	2101      	movs	r1, #1
    6ed2:	2300      	movs	r3, #0
    6ed4:	e7e3      	b.n	6e9e <d_print_comp_inner+0x13ba>
    6ed6:	2111      	movs	r1, #17
    6ed8:	6932      	ldr	r2, [r6, #16]
    6eda:	4620      	mov	r0, r4
    6edc:	f000 fe7c 	bl	7bd8 <d_print_comp>
    6ee0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6ee4:	29ff      	cmp	r1, #255	; 0xff
    6ee6:	f000 8299 	beq.w	741c <d_print_comp_inner+0x1938>
    6eea:	1c4a      	adds	r2, r1, #1
    6eec:	235d      	movs	r3, #93	; 0x5d
    6eee:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    6ef2:	5463      	strb	r3, [r4, r1]
    6ef4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    6ef8:	f7fe be64 	b.w	5bc4 <d_print_comp_inner+0xe0>
    6efc:	2801      	cmp	r0, #1
    6efe:	f240 8196 	bls.w	722e <d_print_comp_inner+0x174a>
    6f02:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    6f06:	f7ff bb30 	b.w	656a <d_print_comp_inner+0xa86>
    6f0a:	68f2      	ldr	r2, [r6, #12]
    6f0c:	4930      	ldr	r1, [pc, #192]	; (6fd0 <d_print_comp_inner+0x14ec>)
    6f0e:	3201      	adds	r2, #1
    6f10:	a804      	add	r0, sp, #16
    6f12:	f003 fb2b 	bl	a56c <sprintf>
    6f16:	a804      	add	r0, sp, #16
    6f18:	f007 feb2 	bl	ec80 <strlen>
    6f1c:	b318      	cbz	r0, 6f66 <d_print_comp_inner+0x1482>
    6f1e:	ad04      	add	r5, sp, #16
    6f20:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6f24:	182f      	adds	r7, r5, r0
    6f26:	f04f 0800 	mov.w	r8, #0
    6f2a:	e008      	b.n	6f3e <d_print_comp_inner+0x145a>
    6f2c:	460b      	mov	r3, r1
    6f2e:	3101      	adds	r1, #1
    6f30:	42af      	cmp	r7, r5
    6f32:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6f36:	54e6      	strb	r6, [r4, r3]
    6f38:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6f3c:	d015      	beq.n	6f6a <d_print_comp_inner+0x1486>
    6f3e:	29ff      	cmp	r1, #255	; 0xff
    6f40:	f815 6b01 	ldrb.w	r6, [r5], #1
    6f44:	d1f2      	bne.n	6f2c <d_print_comp_inner+0x1448>
    6f46:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6f4a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6f4e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6f52:	4620      	mov	r0, r4
    6f54:	4798      	blx	r3
    6f56:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6f5a:	3301      	adds	r3, #1
    6f5c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6f60:	2101      	movs	r1, #1
    6f62:	2300      	movs	r3, #0
    6f64:	e7e4      	b.n	6f30 <d_print_comp_inner+0x144c>
    6f66:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6f6a:	29ff      	cmp	r1, #255	; 0xff
    6f6c:	f47f a91a 	bne.w	61a4 <d_print_comp_inner+0x6c0>
    6f70:	2500      	movs	r5, #0
    6f72:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    6f76:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    6f7a:	4620      	mov	r0, r4
    6f7c:	4798      	blx	r3
    6f7e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6f82:	2201      	movs	r2, #1
    6f84:	4413      	add	r3, r2
    6f86:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6f8a:	4629      	mov	r1, r5
    6f8c:	f7ff b90b 	b.w	61a6 <d_print_comp_inner+0x6c2>
    6f90:	687d      	ldr	r5, [r7, #4]
    6f92:	782b      	ldrb	r3, [r5, #0]
    6f94:	3b61      	subs	r3, #97	; 0x61
    6f96:	2b19      	cmp	r3, #25
    6f98:	f240 832d 	bls.w	75f6 <d_print_comp_inner+0x1b12>
    6f9c:	f108 37ff 	add.w	r7, r8, #4294967295	; 0xffffffff
    6fa0:	5deb      	ldrb	r3, [r5, r7]
    6fa2:	2b20      	cmp	r3, #32
    6fa4:	bf18      	it	ne
    6fa6:	4647      	movne	r7, r8
    6fa8:	2f00      	cmp	r7, #0
    6faa:	f43e ae0b 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    6fae:	3d01      	subs	r5, #1
    6fb0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6fb4:	442f      	add	r7, r5
    6fb6:	f04f 0800 	mov.w	r8, #0
    6fba:	e015      	b.n	6fe8 <d_print_comp_inner+0x1504>
    6fbc:	200012c8 	.word	0x200012c8
    6fc0:	200012bc 	.word	0x200012bc
    6fc4:	20001444 	.word	0x20001444
    6fc8:	20001448 	.word	0x20001448
    6fcc:	20001280 	.word	0x20001280
    6fd0:	20001230 	.word	0x20001230
    6fd4:	460b      	mov	r3, r1
    6fd6:	3101      	adds	r1, #1
    6fd8:	42af      	cmp	r7, r5
    6fda:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6fde:	54e6      	strb	r6, [r4, r3]
    6fe0:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6fe4:	f43e adee 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    6fe8:	29ff      	cmp	r1, #255	; 0xff
    6fea:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    6fee:	d1f1      	bne.n	6fd4 <d_print_comp_inner+0x14f0>
    6ff0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6ff4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6ff8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6ffc:	4620      	mov	r0, r4
    6ffe:	4798      	blx	r3
    7000:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7004:	3301      	adds	r3, #1
    7006:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    700a:	2101      	movs	r1, #1
    700c:	2300      	movs	r3, #0
    700e:	e7e3      	b.n	6fd8 <d_print_comp_inner+0x14f4>
    7010:	4fcc      	ldr	r7, [pc, #816]	; (7344 <d_print_comp_inner+0x1860>)
    7012:	6932      	ldr	r2, [r6, #16]
    7014:	2111      	movs	r1, #17
    7016:	4620      	mov	r0, r4
    7018:	f000 fdde 	bl	7bd8 <d_print_comp>
    701c:	f107 0904 	add.w	r9, r7, #4
    7020:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7024:	2520      	movs	r5, #32
    7026:	f04f 0800 	mov.w	r8, #0
    702a:	e00b      	b.n	7044 <d_print_comp_inner+0x1560>
    702c:	460b      	mov	r3, r1
    702e:	3101      	adds	r1, #1
    7030:	45b9      	cmp	r9, r7
    7032:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7036:	54e5      	strb	r5, [r4, r3]
    7038:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    703c:	f43e ade5 	beq.w	5c0a <d_print_comp_inner+0x126>
    7040:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    7044:	29ff      	cmp	r1, #255	; 0xff
    7046:	d1f1      	bne.n	702c <d_print_comp_inner+0x1548>
    7048:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    704c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7050:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7054:	4620      	mov	r0, r4
    7056:	4798      	blx	r3
    7058:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    705c:	3301      	adds	r3, #1
    705e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7062:	2101      	movs	r1, #1
    7064:	2300      	movs	r3, #0
    7066:	e7e3      	b.n	7030 <d_print_comp_inner+0x154c>
    7068:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
    706c:	b133      	cbz	r3, 707c <d_print_comp_inner+0x1598>
    706e:	f8d4 1110 	ldr.w	r1, [r4, #272]	; 0x110
    7072:	9104      	str	r1, [sp, #16]
    7074:	aa04      	add	r2, sp, #16
    7076:	f8c4 2110 	str.w	r2, [r4, #272]	; 0x110
    707a:	9305      	str	r3, [sp, #20]
    707c:	68f2      	ldr	r2, [r6, #12]
    707e:	7813      	ldrb	r3, [r2, #0]
    7080:	2b04      	cmp	r3, #4
    7082:	f000 8207 	beq.w	7494 <d_print_comp_inner+0x19b0>
    7086:	2111      	movs	r1, #17
    7088:	4620      	mov	r0, r4
    708a:	f000 fda5 	bl	7bd8 <d_print_comp>
    708e:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
    7092:	2b00      	cmp	r3, #0
    7094:	f43e ad96 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    7098:	9b04      	ldr	r3, [sp, #16]
    709a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    709e:	f7fe bd91 	b.w	5bc4 <d_print_comp_inner+0xe0>
    70a2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
    70a6:	68f2      	ldr	r2, [r6, #12]
    70a8:	4fa7      	ldr	r7, [pc, #668]	; (7348 <d_print_comp_inner+0x1864>)
    70aa:	3301      	adds	r3, #1
    70ac:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
    70b0:	2111      	movs	r1, #17
    70b2:	4620      	mov	r0, r4
    70b4:	f000 fd90 	bl	7bd8 <d_print_comp>
    70b8:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
    70bc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    70c0:	3b01      	subs	r3, #1
    70c2:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
    70c6:	f107 0901 	add.w	r9, r7, #1
    70ca:	2529      	movs	r5, #41	; 0x29
    70cc:	f04f 0800 	mov.w	r8, #0
    70d0:	e00a      	b.n	70e8 <d_print_comp_inner+0x1604>
    70d2:	460b      	mov	r3, r1
    70d4:	3101      	adds	r1, #1
    70d6:	454f      	cmp	r7, r9
    70d8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    70dc:	54e5      	strb	r5, [r4, r3]
    70de:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    70e2:	d013      	beq.n	710c <d_print_comp_inner+0x1628>
    70e4:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    70e8:	29ff      	cmp	r1, #255	; 0xff
    70ea:	d1f2      	bne.n	70d2 <d_print_comp_inner+0x15ee>
    70ec:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    70f0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    70f4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    70f8:	4620      	mov	r0, r4
    70fa:	4798      	blx	r3
    70fc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7100:	3301      	adds	r3, #1
    7102:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7106:	2101      	movs	r1, #1
    7108:	2300      	movs	r3, #0
    710a:	e7e4      	b.n	70d6 <d_print_comp_inner+0x15f2>
    710c:	6932      	ldr	r2, [r6, #16]
    710e:	498f      	ldr	r1, [pc, #572]	; (734c <d_print_comp_inner+0x1868>)
    7110:	3201      	adds	r2, #1
    7112:	a804      	add	r0, sp, #16
    7114:	f003 fa2a 	bl	a56c <sprintf>
    7118:	a804      	add	r0, sp, #16
    711a:	f007 fdb1 	bl	ec80 <strlen>
    711e:	2800      	cmp	r0, #0
    7120:	f43f af21 	beq.w	6f66 <d_print_comp_inner+0x1482>
    7124:	ad04      	add	r5, sp, #16
    7126:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    712a:	182f      	adds	r7, r5, r0
    712c:	f04f 0800 	mov.w	r8, #0
    7130:	e009      	b.n	7146 <d_print_comp_inner+0x1662>
    7132:	460b      	mov	r3, r1
    7134:	3101      	adds	r1, #1
    7136:	42bd      	cmp	r5, r7
    7138:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    713c:	54e6      	strb	r6, [r4, r3]
    713e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7142:	f43f af12 	beq.w	6f6a <d_print_comp_inner+0x1486>
    7146:	29ff      	cmp	r1, #255	; 0xff
    7148:	f815 6b01 	ldrb.w	r6, [r5], #1
    714c:	d1f1      	bne.n	7132 <d_print_comp_inner+0x164e>
    714e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7152:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7156:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    715a:	4620      	mov	r0, r4
    715c:	4798      	blx	r3
    715e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7162:	3301      	adds	r3, #1
    7164:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7168:	2101      	movs	r1, #1
    716a:	2300      	movs	r3, #0
    716c:	e7e3      	b.n	7136 <d_print_comp_inner+0x1652>
    716e:	4f78      	ldr	r7, [pc, #480]	; (7350 <d_print_comp_inner+0x186c>)
    7170:	68f2      	ldr	r2, [r6, #12]
    7172:	2111      	movs	r1, #17
    7174:	4620      	mov	r0, r4
    7176:	f000 fd2f 	bl	7bd8 <d_print_comp>
    717a:	f107 0903 	add.w	r9, r7, #3
    717e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7182:	252d      	movs	r5, #45	; 0x2d
    7184:	f04f 0800 	mov.w	r8, #0
    7188:	e00b      	b.n	71a2 <d_print_comp_inner+0x16be>
    718a:	460b      	mov	r3, r1
    718c:	3101      	adds	r1, #1
    718e:	45b9      	cmp	r9, r7
    7190:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7194:	54e5      	strb	r5, [r4, r3]
    7196:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    719a:	f43e ad4a 	beq.w	5c32 <d_print_comp_inner+0x14e>
    719e:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    71a2:	29ff      	cmp	r1, #255	; 0xff
    71a4:	d1f1      	bne.n	718a <d_print_comp_inner+0x16a6>
    71a6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    71aa:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    71ae:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    71b2:	4620      	mov	r0, r4
    71b4:	4798      	blx	r3
    71b6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    71ba:	3301      	adds	r3, #1
    71bc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    71c0:	2101      	movs	r1, #1
    71c2:	2300      	movs	r3, #0
    71c4:	e7e3      	b.n	718e <d_print_comp_inner+0x16aa>
    71c6:	68f2      	ldr	r2, [r6, #12]
    71c8:	f7ff b902 	b.w	63d0 <d_print_comp_inner+0x8ec>
    71cc:	4632      	mov	r2, r6
    71ce:	2111      	movs	r1, #17
    71d0:	4620      	mov	r0, r4
    71d2:	f000 fd2f 	bl	7c34 <d_print_mod>
    71d6:	f7fe bd10 	b.w	5bfa <d_print_comp_inner+0x116>
    71da:	6932      	ldr	r2, [r6, #16]
    71dc:	f8d4 6128 	ldr.w	r6, [r4, #296]	; 0x128
    71e0:	460d      	mov	r5, r1
    71e2:	4620      	mov	r0, r4
    71e4:	2111      	movs	r1, #17
    71e6:	f000 fcf7 	bl	7bd8 <d_print_comp>
    71ea:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    71ee:	42b3      	cmp	r3, r6
    71f0:	f47e ace8 	bne.w	5bc4 <d_print_comp_inner+0xe0>
    71f4:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    71f8:	429d      	cmp	r5, r3
    71fa:	f47e ace3 	bne.w	5bc4 <d_print_comp_inner+0xe0>
    71fe:	3d02      	subs	r5, #2
    7200:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
    7204:	f7fe bcde 	b.w	5bc4 <d_print_comp_inner+0xe0>
    7208:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    720c:	29ff      	cmp	r1, #255	; 0xff
    720e:	f000 835f 	beq.w	78d0 <d_print_comp_inner+0x1dec>
    7212:	1c4b      	adds	r3, r1, #1
    7214:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    7218:	f858 2c0c 	ldr.w	r2, [r8, #-12]
    721c:	5467      	strb	r7, [r4, r1]
    721e:	4620      	mov	r0, r4
    7220:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    7224:	2111      	movs	r1, #17
    7226:	f000 fd05 	bl	7c34 <d_print_mod>
    722a:	f7ff b9b2 	b.w	6592 <d_print_comp_inner+0xaae>
    722e:	68ff      	ldr	r7, [r7, #12]
    7230:	4652      	mov	r2, sl
    7232:	2f00      	cmp	r7, #0
    7234:	f000 84ac 	beq.w	7b90 <d_print_comp_inner+0x20ac>
    7238:	2d04      	cmp	r5, #4
    723a:	f103 0310 	add.w	r3, r3, #16
    723e:	f000 81f1 	beq.w	7624 <d_print_comp_inner+0x1b40>
    7242:	4629      	mov	r1, r5
    7244:	f7ff b95c 	b.w	6500 <d_print_comp_inner+0xa1c>
    7248:	f1b8 0f00 	cmp.w	r8, #0
    724c:	f43e acba 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    7250:	46c1      	mov	r9, r8
    7252:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
    7256:	f7fe be7c 	b.w	5f52 <d_print_comp_inner+0x46e>
    725a:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
    725e:	68c2      	ldr	r2, [r0, #12]
    7260:	4606      	mov	r6, r0
    7262:	f7fe bd2a 	b.w	5cba <d_print_comp_inner+0x1d6>
    7266:	2d07      	cmp	r5, #7
    7268:	f47e ad83 	bne.w	5d72 <d_print_comp_inner+0x28e>
    726c:	6933      	ldr	r3, [r6, #16]
    726e:	7819      	ldrb	r1, [r3, #0]
    7270:	2900      	cmp	r1, #0
    7272:	f47e ad7e 	bne.w	5d72 <d_print_comp_inner+0x28e>
    7276:	6919      	ldr	r1, [r3, #16]
    7278:	2901      	cmp	r1, #1
    727a:	f47e ad7a 	bne.w	5d72 <d_print_comp_inner+0x28e>
    727e:	2f3d      	cmp	r7, #61	; 0x3d
    7280:	f47e ad77 	bne.w	5d72 <d_print_comp_inner+0x28e>
    7284:	68db      	ldr	r3, [r3, #12]
    7286:	781b      	ldrb	r3, [r3, #0]
    7288:	2b30      	cmp	r3, #48	; 0x30
    728a:	f000 849d 	beq.w	7bc8 <d_print_comp_inner+0x20e4>
    728e:	2b31      	cmp	r3, #49	; 0x31
    7290:	f47e ad6f 	bne.w	5d72 <d_print_comp_inner+0x28e>
    7294:	492f      	ldr	r1, [pc, #188]	; (7354 <d_print_comp_inner+0x1870>)
    7296:	f7ff b884 	b.w	63a2 <d_print_comp_inner+0x8be>
    729a:	4e2f      	ldr	r6, [pc, #188]	; (7358 <d_print_comp_inner+0x1874>)
    729c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    72a0:	1d77      	adds	r7, r6, #5
    72a2:	255f      	movs	r5, #95	; 0x5f
    72a4:	e00b      	b.n	72be <d_print_comp_inner+0x17da>
    72a6:	460b      	mov	r3, r1
    72a8:	3101      	adds	r1, #1
    72aa:	42b7      	cmp	r7, r6
    72ac:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    72b0:	54e5      	strb	r5, [r4, r3]
    72b2:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    72b6:	f43e ac85 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    72ba:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    72be:	29ff      	cmp	r1, #255	; 0xff
    72c0:	d1f1      	bne.n	72a6 <d_print_comp_inner+0x17c2>
    72c2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    72c6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    72ca:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    72ce:	4620      	mov	r0, r4
    72d0:	4798      	blx	r3
    72d2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    72d6:	3301      	adds	r3, #1
    72d8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    72dc:	2101      	movs	r1, #1
    72de:	2300      	movs	r3, #0
    72e0:	e7e3      	b.n	72aa <d_print_comp_inner+0x17c6>
    72e2:	491e      	ldr	r1, [pc, #120]	; (735c <d_print_comp_inner+0x1878>)
    72e4:	f7fc fa4c 	bl	3780 <d_append_string>
    72e8:	4918      	ldr	r1, [pc, #96]	; (734c <d_print_comp_inner+0x1868>)
    72ea:	462a      	mov	r2, r5
    72ec:	a804      	add	r0, sp, #16
    72ee:	f003 f93d 	bl	a56c <sprintf>
    72f2:	a804      	add	r0, sp, #16
    72f4:	f007 fcc4 	bl	ec80 <strlen>
    72f8:	b390      	cbz	r0, 7360 <d_print_comp_inner+0x187c>
    72fa:	ad04      	add	r5, sp, #16
    72fc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7300:	182f      	adds	r7, r5, r0
    7302:	f04f 0800 	mov.w	r8, #0
    7306:	e008      	b.n	731a <d_print_comp_inner+0x1836>
    7308:	460b      	mov	r3, r1
    730a:	3101      	adds	r1, #1
    730c:	42bd      	cmp	r5, r7
    730e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7312:	54e6      	strb	r6, [r4, r3]
    7314:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7318:	d024      	beq.n	7364 <d_print_comp_inner+0x1880>
    731a:	29ff      	cmp	r1, #255	; 0xff
    731c:	f815 6b01 	ldrb.w	r6, [r5], #1
    7320:	d1f2      	bne.n	7308 <d_print_comp_inner+0x1824>
    7322:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7326:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    732a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    732e:	4620      	mov	r0, r4
    7330:	4798      	blx	r3
    7332:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7336:	3301      	adds	r3, #1
    7338:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    733c:	2101      	movs	r1, #1
    733e:	2300      	movs	r3, #0
    7340:	e7e4      	b.n	730c <d_print_comp_inner+0x1828>
    7342:	bf00      	nop
    7344:	200013b4 	.word	0x200013b4
    7348:	200014ec 	.word	0x200014ec
    734c:	20001230 	.word	0x20001230
    7350:	200012f0 	.word	0x200012f0
    7354:	20001468 	.word	0x20001468
    7358:	20001414 	.word	0x20001414
    735c:	20001498 	.word	0x20001498
    7360:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7364:	29ff      	cmp	r1, #255	; 0xff
    7366:	f000 82f3 	beq.w	7950 <d_print_comp_inner+0x1e6c>
    736a:	237d      	movs	r3, #125	; 0x7d
    736c:	1c4a      	adds	r2, r1, #1
    736e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    7372:	5463      	strb	r3, [r4, r1]
    7374:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    7378:	f7fe bc24 	b.w	5bc4 <d_print_comp_inner+0xe0>
    737c:	4610      	mov	r0, r2
    737e:	2500      	movs	r5, #0
    7380:	f7fe bc90 	b.w	5ca4 <d_print_comp_inner+0x1c0>
    7384:	68f2      	ldr	r2, [r6, #12]
    7386:	49c2      	ldr	r1, [pc, #776]	; (7690 <d_print_comp_inner+0x1bac>)
    7388:	3201      	adds	r2, #1
    738a:	a804      	add	r0, sp, #16
    738c:	f003 f8ee 	bl	a56c <sprintf>
    7390:	a804      	add	r0, sp, #16
    7392:	f007 fc75 	bl	ec80 <strlen>
    7396:	2800      	cmp	r0, #0
    7398:	f43e ac14 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    739c:	ad04      	add	r5, sp, #16
    739e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    73a2:	182f      	adds	r7, r5, r0
    73a4:	f04f 0800 	mov.w	r8, #0
    73a8:	e009      	b.n	73be <d_print_comp_inner+0x18da>
    73aa:	460b      	mov	r3, r1
    73ac:	3101      	adds	r1, #1
    73ae:	42bd      	cmp	r5, r7
    73b0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    73b4:	54e6      	strb	r6, [r4, r3]
    73b6:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    73ba:	f43e ac03 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    73be:	29ff      	cmp	r1, #255	; 0xff
    73c0:	f815 6b01 	ldrb.w	r6, [r5], #1
    73c4:	d1f1      	bne.n	73aa <d_print_comp_inner+0x18c6>
    73c6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    73ca:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    73ce:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    73d2:	4620      	mov	r0, r4
    73d4:	4798      	blx	r3
    73d6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    73da:	3301      	adds	r3, #1
    73dc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    73e0:	2101      	movs	r1, #1
    73e2:	2300      	movs	r3, #0
    73e4:	e7e3      	b.n	73ae <d_print_comp_inner+0x18ca>
    73e6:	4611      	mov	r1, r2
    73e8:	f7fc f964 	bl	36b4 <d_lookup_template_argument>
    73ec:	4602      	mov	r2, r0
    73ee:	2800      	cmp	r0, #0
    73f0:	f43e abe5 	beq.w	5bbe <d_print_comp_inner+0xda>
    73f4:	7803      	ldrb	r3, [r0, #0]
    73f6:	2b2f      	cmp	r3, #47	; 0x2f
    73f8:	f43e abd6 	beq.w	5ba8 <d_print_comp_inner+0xc4>
    73fc:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
    7400:	682b      	ldr	r3, [r5, #0]
    7402:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    7406:	2111      	movs	r1, #17
    7408:	4620      	mov	r0, r4
    740a:	f000 fbe5 	bl	7bd8 <d_print_comp>
    740e:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
    7412:	f7fe bbd7 	b.w	5bc4 <d_print_comp_inner+0xe0>
    7416:	2500      	movs	r5, #0
    7418:	f7fe bcab 	b.w	5d72 <d_print_comp_inner+0x28e>
    741c:	2500      	movs	r5, #0
    741e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7422:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7426:	4620      	mov	r0, r4
    7428:	4798      	blx	r3
    742a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    742e:	2201      	movs	r2, #1
    7430:	4413      	add	r3, r2
    7432:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7436:	4629      	mov	r1, r5
    7438:	e558      	b.n	6eec <d_print_comp_inner+0x1408>
    743a:	2500      	movs	r5, #0
    743c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7440:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7444:	4620      	mov	r0, r4
    7446:	4798      	blx	r3
    7448:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    744c:	2201      	movs	r2, #1
    744e:	4413      	add	r3, r2
    7450:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7454:	4629      	mov	r1, r5
    7456:	f7fe bfc5 	b.w	63e4 <d_print_comp_inner+0x900>
    745a:	2b01      	cmp	r3, #1
    745c:	f63f a885 	bhi.w	656a <d_print_comp_inner+0xa86>
    7460:	2d04      	cmp	r5, #4
    7462:	f43e abac 	beq.w	5bbe <d_print_comp_inner+0xda>
    7466:	468e      	mov	lr, r1
    7468:	f101 0b10 	add.w	fp, r1, #16
    746c:	c90f      	ldmia	r1, {r0, r1, r2, r3}
    746e:	e88b 000f 	stmia.w	fp, {r0, r1, r2, r3}
    7472:	e9ce 7a01 	strd	r7, sl, [lr, #4]
    7476:	68ff      	ldr	r7, [r7, #12]
    7478:	f8ce e010 	str.w	lr, [lr, #16]
    747c:	3501      	adds	r5, #1
    747e:	f8ce c00c 	str.w	ip, [lr, #12]
    7482:	4659      	mov	r1, fp
    7484:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
    7488:	2f00      	cmp	r7, #0
    748a:	f43e ab98 	beq.w	5bbe <d_print_comp_inner+0xda>
    748e:	783a      	ldrb	r2, [r7, #0]
    7490:	f7ff b858 	b.w	6544 <d_print_comp_inner+0xa60>
    7494:	68d2      	ldr	r2, [r2, #12]
    7496:	2111      	movs	r1, #17
    7498:	4620      	mov	r0, r4
    749a:	f000 fb9d 	bl	7bd8 <d_print_comp>
    749e:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
    74a2:	b113      	cbz	r3, 74aa <d_print_comp_inner+0x19c6>
    74a4:	9b04      	ldr	r3, [sp, #16]
    74a6:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    74aa:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    74ae:	2b3c      	cmp	r3, #60	; 0x3c
    74b0:	f000 82be 	beq.w	7a30 <d_print_comp_inner+0x1f4c>
    74b4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    74b8:	29ff      	cmp	r1, #255	; 0xff
    74ba:	f000 82a9 	beq.w	7a10 <d_print_comp_inner+0x1f2c>
    74be:	1c4a      	adds	r2, r1, #1
    74c0:	233c      	movs	r3, #60	; 0x3c
    74c2:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    74c6:	5463      	strb	r3, [r4, r1]
    74c8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    74cc:	68f3      	ldr	r3, [r6, #12]
    74ce:	2111      	movs	r1, #17
    74d0:	691a      	ldr	r2, [r3, #16]
    74d2:	4620      	mov	r0, r4
    74d4:	f000 fb80 	bl	7bd8 <d_print_comp>
    74d8:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    74dc:	2b3e      	cmp	r3, #62	; 0x3e
    74de:	f000 8292 	beq.w	7a06 <d_print_comp_inner+0x1f22>
    74e2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    74e6:	29ff      	cmp	r1, #255	; 0xff
    74e8:	f000 827f 	beq.w	79ea <d_print_comp_inner+0x1f06>
    74ec:	233e      	movs	r3, #62	; 0x3e
    74ee:	1c4a      	adds	r2, r1, #1
    74f0:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    74f4:	5463      	strb	r3, [r4, r1]
    74f6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    74fa:	f7fe bb63 	b.w	5bc4 <d_print_comp_inner+0xe0>
    74fe:	68fb      	ldr	r3, [r7, #12]
    7500:	681e      	ldr	r6, [r3, #0]
    7502:	7833      	ldrb	r3, [r6, #0]
    7504:	2b61      	cmp	r3, #97	; 0x61
    7506:	f040 8092 	bne.w	762e <d_print_comp_inner+0x1b4a>
    750a:	7872      	ldrb	r2, [r6, #1]
    750c:	2a64      	cmp	r2, #100	; 0x64
    750e:	f040 808e 	bne.w	762e <d_print_comp_inner+0x1b4a>
    7512:	78b2      	ldrb	r2, [r6, #2]
    7514:	2a00      	cmp	r2, #0
    7516:	f040 808a 	bne.w	762e <d_print_comp_inner+0x1b4a>
    751a:	782a      	ldrb	r2, [r5, #0]
    751c:	2a03      	cmp	r2, #3
    751e:	f000 828c 	beq.w	7a3a <d_print_comp_inner+0x1f56>
    7522:	2a39      	cmp	r2, #57	; 0x39
    7524:	f000 8294 	beq.w	7a50 <d_print_comp_inner+0x1f6c>
    7528:	2b73      	cmp	r3, #115	; 0x73
    752a:	d111      	bne.n	7550 <d_print_comp_inner+0x1a6c>
    752c:	7872      	ldrb	r2, [r6, #1]
    752e:	2a5a      	cmp	r2, #90	; 0x5a
    7530:	d135      	bne.n	759e <d_print_comp_inner+0x1aba>
    7532:	78b2      	ldrb	r2, [r6, #2]
    7534:	bb9a      	cbnz	r2, 759e <d_print_comp_inner+0x1aba>
    7536:	4629      	mov	r1, r5
    7538:	4620      	mov	r0, r4
    753a:	f7fc f8d7 	bl	36ec <d_find_pack>
    753e:	f7fc f803 	bl	3548 <d_pack_length>
    7542:	4601      	mov	r1, r0
    7544:	4620      	mov	r0, r4
    7546:	b015      	add	sp, #84	; 0x54
    7548:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    754c:	f7fc b97c 	b.w	3848 <d_append_num>
    7550:	463a      	mov	r2, r7
    7552:	2111      	movs	r1, #17
    7554:	4620      	mov	r0, r4
    7556:	f001 f97d 	bl	8854 <d_print_expr_op>
    755a:	7833      	ldrb	r3, [r6, #0]
    755c:	2b67      	cmp	r3, #103	; 0x67
    755e:	d107      	bne.n	7570 <d_print_comp_inner+0x1a8c>
    7560:	7872      	ldrb	r2, [r6, #1]
    7562:	2a73      	cmp	r2, #115	; 0x73
    7564:	d104      	bne.n	7570 <d_print_comp_inner+0x1a8c>
    7566:	78b2      	ldrb	r2, [r6, #2]
    7568:	b912      	cbnz	r2, 7570 <d_print_comp_inner+0x1a8c>
    756a:	462a      	mov	r2, r5
    756c:	f7fe bb4e 	b.w	5c0c <d_print_comp_inner+0x128>
    7570:	2b73      	cmp	r3, #115	; 0x73
    7572:	f47f a922 	bne.w	67ba <d_print_comp_inner+0xcd6>
    7576:	7873      	ldrb	r3, [r6, #1]
    7578:	2b74      	cmp	r3, #116	; 0x74
    757a:	f47f a91e 	bne.w	67ba <d_print_comp_inner+0xcd6>
    757e:	78b3      	ldrb	r3, [r6, #2]
    7580:	2b00      	cmp	r3, #0
    7582:	f47f a91a 	bne.w	67ba <d_print_comp_inner+0xcd6>
    7586:	2128      	movs	r1, #40	; 0x28
    7588:	4620      	mov	r0, r4
    758a:	f7fc f871 	bl	3670 <d_append_char>
    758e:	2111      	movs	r1, #17
    7590:	462a      	mov	r2, r5
    7592:	4620      	mov	r0, r4
    7594:	f000 fb20 	bl	7bd8 <d_print_comp>
    7598:	2129      	movs	r1, #41	; 0x29
    759a:	f7fe bc17 	b.w	5dcc <d_print_comp_inner+0x2e8>
    759e:	2b73      	cmp	r3, #115	; 0x73
    75a0:	d1d6      	bne.n	7550 <d_print_comp_inner+0x1a6c>
    75a2:	7873      	ldrb	r3, [r6, #1]
    75a4:	2b50      	cmp	r3, #80	; 0x50
    75a6:	d1d3      	bne.n	7550 <d_print_comp_inner+0x1a6c>
    75a8:	78b3      	ldrb	r3, [r6, #2]
    75aa:	2b00      	cmp	r3, #0
    75ac:	d1d0      	bne.n	7550 <d_print_comp_inner+0x1a6c>
    75ae:	461e      	mov	r6, r3
    75b0:	e004      	b.n	75bc <d_print_comp_inner+0x1ad8>
    75b2:	3601      	adds	r6, #1
    75b4:	692d      	ldr	r5, [r5, #16]
    75b6:	2d00      	cmp	r5, #0
    75b8:	f000 819a 	beq.w	78f0 <d_print_comp_inner+0x1e0c>
    75bc:	782b      	ldrb	r3, [r5, #0]
    75be:	2b2f      	cmp	r3, #47	; 0x2f
    75c0:	f040 8196 	bne.w	78f0 <d_print_comp_inner+0x1e0c>
    75c4:	68eb      	ldr	r3, [r5, #12]
    75c6:	2b00      	cmp	r3, #0
    75c8:	f000 8192 	beq.w	78f0 <d_print_comp_inner+0x1e0c>
    75cc:	781a      	ldrb	r2, [r3, #0]
    75ce:	2a4c      	cmp	r2, #76	; 0x4c
    75d0:	d1ef      	bne.n	75b2 <d_print_comp_inner+0x1ace>
    75d2:	68d9      	ldr	r1, [r3, #12]
    75d4:	4620      	mov	r0, r4
    75d6:	f7fc f889 	bl	36ec <d_find_pack>
    75da:	4603      	mov	r3, r0
    75dc:	b148      	cbz	r0, 75f2 <d_print_comp_inner+0x1b0e>
    75de:	2300      	movs	r3, #0
    75e0:	e004      	b.n	75ec <d_print_comp_inner+0x1b08>
    75e2:	68c2      	ldr	r2, [r0, #12]
    75e4:	b12a      	cbz	r2, 75f2 <d_print_comp_inner+0x1b0e>
    75e6:	6900      	ldr	r0, [r0, #16]
    75e8:	3301      	adds	r3, #1
    75ea:	b110      	cbz	r0, 75f2 <d_print_comp_inner+0x1b0e>
    75ec:	7802      	ldrb	r2, [r0, #0]
    75ee:	2a2f      	cmp	r2, #47	; 0x2f
    75f0:	d0f7      	beq.n	75e2 <d_print_comp_inner+0x1afe>
    75f2:	441e      	add	r6, r3
    75f4:	e7de      	b.n	75b4 <d_print_comp_inner+0x1ad0>
    75f6:	29ff      	cmp	r1, #255	; 0xff
    75f8:	f000 81d1 	beq.w	799e <d_print_comp_inner+0x1eba>
    75fc:	1c4b      	adds	r3, r1, #1
    75fe:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    7602:	2320      	movs	r3, #32
    7604:	5463      	strb	r3, [r4, r1]
    7606:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    760a:	e4c7      	b.n	6f9c <d_print_comp_inner+0x14b8>
    760c:	4632      	mov	r2, r6
    760e:	2111      	movs	r1, #17
    7610:	4620      	mov	r0, r4
    7612:	f000 fb0f 	bl	7c34 <d_print_mod>
    7616:	f7fe bb36 	b.w	5c86 <d_print_comp_inner+0x1a2>
    761a:	491e      	ldr	r1, [pc, #120]	; (7694 <d_print_comp_inner+0x1bb0>)
    761c:	f7fc f8b0 	bl	3780 <d_append_string>
    7620:	f7ff b8e0 	b.w	67e4 <d_print_comp_inner+0xd00>
    7624:	2301      	movs	r3, #1
    7626:	e9c4 a345 	strd	sl, r3, [r4, #276]	; 0x114
    762a:	f7fe bacb 	b.w	5bc4 <d_print_comp_inner+0xe0>
    762e:	782a      	ldrb	r2, [r5, #0]
    7630:	e777      	b.n	7522 <d_print_comp_inner+0x1a3e>
    7632:	68f2      	ldr	r2, [r6, #12]
    7634:	460d      	mov	r5, r1
    7636:	f7fe bb40 	b.w	5cba <d_print_comp_inner+0x1d6>
    763a:	2700      	movs	r7, #0
    763c:	5567      	strb	r7, [r4, r5]
    763e:	4629      	mov	r1, r5
    7640:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7644:	4620      	mov	r0, r4
    7646:	4798      	blx	r3
    7648:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    764c:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
    7650:	3301      	adds	r3, #1
    7652:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7656:	463d      	mov	r5, r7
    7658:	f7fe bb48 	b.w	5cec <d_print_comp_inner+0x208>
    765c:	2600      	movs	r6, #0
    765e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7662:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7666:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    766a:	4620      	mov	r0, r4
    766c:	4798      	blx	r3
    766e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7672:	2201      	movs	r2, #1
    7674:	4413      	add	r3, r2
    7676:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    767a:	4631      	mov	r1, r6
    767c:	f7fe bd82 	b.w	6184 <d_print_comp_inner+0x6a0>
    7680:	4905      	ldr	r1, [pc, #20]	; (7698 <d_print_comp_inner+0x1bb4>)
    7682:	4620      	mov	r0, r4
    7684:	f7fc f87c 	bl	3780 <d_append_string>
    7688:	68ff      	ldr	r7, [r7, #12]
    768a:	463a      	mov	r2, r7
    768c:	f7fe babe 	b.w	5c0c <d_print_comp_inner+0x128>
    7690:	20001230 	.word	0x20001230
    7694:	20001404 	.word	0x20001404
    7698:	20001290 	.word	0x20001290
    769c:	2500      	movs	r5, #0
    769e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    76a2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    76a6:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    76aa:	4620      	mov	r0, r4
    76ac:	4798      	blx	r3
    76ae:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    76b2:	2201      	movs	r2, #1
    76b4:	4413      	add	r3, r2
    76b6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    76ba:	4629      	mov	r1, r5
    76bc:	f7fe be81 	b.w	63c2 <d_print_comp_inner+0x8de>
    76c0:	2600      	movs	r6, #0
    76c2:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    76c6:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    76ca:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    76ce:	4798      	blx	r3
    76d0:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    76d4:	2301      	movs	r3, #1
    76d6:	441a      	add	r2, r3
    76d8:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    76dc:	4631      	mov	r1, r6
    76de:	f7fe bed2 	b.w	6486 <d_print_comp_inner+0x9a2>
    76e2:	2500      	movs	r5, #0
    76e4:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    76e8:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    76ec:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    76f0:	4798      	blx	r3
    76f2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    76f6:	2201      	movs	r2, #1
    76f8:	4413      	add	r3, r2
    76fa:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    76fe:	4629      	mov	r1, r5
    7700:	f7fe ba91 	b.w	5c26 <d_print_comp_inner+0x142>
    7704:	2500      	movs	r5, #0
    7706:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    770a:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    770e:	4620      	mov	r0, r4
    7710:	4798      	blx	r3
    7712:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7716:	3301      	adds	r3, #1
    7718:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    771c:	4629      	mov	r1, r5
    771e:	2301      	movs	r3, #1
    7720:	f7ff bab6 	b.w	6c90 <d_print_comp_inner+0x11ac>
    7724:	2120      	movs	r1, #32
    7726:	4620      	mov	r0, r4
    7728:	f7fb ffa2 	bl	3670 <d_append_char>
    772c:	f7ff baaa 	b.w	6c84 <d_print_comp_inner+0x11a0>
    7730:	2500      	movs	r5, #0
    7732:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7736:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    773a:	4620      	mov	r0, r4
    773c:	4798      	blx	r3
    773e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7742:	3301      	adds	r3, #1
    7744:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7748:	4629      	mov	r1, r5
    774a:	2301      	movs	r3, #1
    774c:	f7ff ba8a 	b.w	6c64 <d_print_comp_inner+0x1180>
    7750:	2120      	movs	r1, #32
    7752:	4620      	mov	r0, r4
    7754:	f7fb ff8c 	bl	3670 <d_append_char>
    7758:	f7ff ba7e 	b.w	6c58 <d_print_comp_inner+0x1174>
    775c:	2700      	movs	r7, #0
    775e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7762:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    7766:	4620      	mov	r0, r4
    7768:	4798      	blx	r3
    776a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    776e:	68f2      	ldr	r2, [r6, #12]
    7770:	3301      	adds	r3, #1
    7772:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7776:	4639      	mov	r1, r7
    7778:	2301      	movs	r3, #1
    777a:	f7fe bb00 	b.w	5d7e <d_print_comp_inner+0x29a>
    777e:	212d      	movs	r1, #45	; 0x2d
    7780:	4620      	mov	r0, r4
    7782:	f7fb ff75 	bl	3670 <d_append_char>
    7786:	f7fe bb14 	b.w	5db2 <d_print_comp_inner+0x2ce>
    778a:	2700      	movs	r7, #0
    778c:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7790:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    7794:	4620      	mov	r0, r4
    7796:	4798      	blx	r3
    7798:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    779c:	3301      	adds	r3, #1
    779e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    77a2:	4639      	mov	r1, r7
    77a4:	2301      	movs	r3, #1
    77a6:	f7fe bafa 	b.w	5d9e <d_print_comp_inner+0x2ba>
    77aa:	6933      	ldr	r3, [r6, #16]
    77ac:	781b      	ldrb	r3, [r3, #0]
    77ae:	2b00      	cmp	r3, #0
    77b0:	f47e aadf 	bne.w	5d72 <d_print_comp_inner+0x28e>
    77b4:	2f3e      	cmp	r7, #62	; 0x3e
    77b6:	f000 81f6 	beq.w	7ba6 <d_print_comp_inner+0x20c2>
    77ba:	6932      	ldr	r2, [r6, #16]
    77bc:	2111      	movs	r1, #17
    77be:	4620      	mov	r0, r4
    77c0:	3d02      	subs	r5, #2
    77c2:	f000 fa09 	bl	7bd8 <d_print_comp>
    77c6:	2d04      	cmp	r5, #4
    77c8:	f63e a9fc 	bhi.w	5bc4 <d_print_comp_inner+0xe0>
    77cc:	e8df f005 	tbb	[pc, r5]
    77d0:	06090c0f 	.word	0x06090c0f
    77d4:	03          	.byte	0x03
    77d5:	00          	.byte	0x00
    77d6:	49c8      	ldr	r1, [pc, #800]	; (7af8 <d_print_comp_inner+0x2014>)
    77d8:	f7fe bde3 	b.w	63a2 <d_print_comp_inner+0x8be>
    77dc:	49c7      	ldr	r1, [pc, #796]	; (7afc <d_print_comp_inner+0x2018>)
    77de:	f7fe bde0 	b.w	63a2 <d_print_comp_inner+0x8be>
    77e2:	49c7      	ldr	r1, [pc, #796]	; (7b00 <d_print_comp_inner+0x201c>)
    77e4:	f7fe bddd 	b.w	63a2 <d_print_comp_inner+0x8be>
    77e8:	216c      	movs	r1, #108	; 0x6c
    77ea:	f7fe baef 	b.w	5dcc <d_print_comp_inner+0x2e8>
    77ee:	2175      	movs	r1, #117	; 0x75
    77f0:	f7fe baec 	b.w	5dcc <d_print_comp_inner+0x2e8>
    77f4:	781b      	ldrb	r3, [r3, #0]
    77f6:	2b73      	cmp	r3, #115	; 0x73
    77f8:	d00a      	beq.n	7810 <d_print_comp_inner+0x1d2c>
    77fa:	3b63      	subs	r3, #99	; 0x63
    77fc:	b2db      	uxtb	r3, r3
    77fe:	2b0f      	cmp	r3, #15
    7800:	f63e af77 	bhi.w	66f2 <d_print_comp_inner+0xc0e>
    7804:	49bf      	ldr	r1, [pc, #764]	; (7b04 <d_print_comp_inner+0x2020>)
    7806:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
    780a:	2b00      	cmp	r3, #0
    780c:	f43e af71 	beq.w	66f2 <d_print_comp_inner+0xc0e>
    7810:	2111      	movs	r1, #17
    7812:	4620      	mov	r0, r4
    7814:	f001 f81e 	bl	8854 <d_print_expr_op>
    7818:	213c      	movs	r1, #60	; 0x3c
    781a:	4620      	mov	r0, r4
    781c:	f7fb ff28 	bl	3670 <d_append_char>
    7820:	6933      	ldr	r3, [r6, #16]
    7822:	2111      	movs	r1, #17
    7824:	68da      	ldr	r2, [r3, #12]
    7826:	4620      	mov	r0, r4
    7828:	f000 f9d6 	bl	7bd8 <d_print_comp>
    782c:	49b6      	ldr	r1, [pc, #728]	; (7b08 <d_print_comp_inner+0x2024>)
    782e:	4620      	mov	r0, r4
    7830:	f7fb ffa6 	bl	3780 <d_append_string>
    7834:	6933      	ldr	r3, [r6, #16]
    7836:	2111      	movs	r1, #17
    7838:	691a      	ldr	r2, [r3, #16]
    783a:	4620      	mov	r0, r4
    783c:	f000 f9cc 	bl	7bd8 <d_print_comp>
    7840:	2129      	movs	r1, #41	; 0x29
    7842:	f7fe bac3 	b.w	5dcc <d_print_comp_inner+0x2e8>
    7846:	f8d0 c134 	ldr.w	ip, [r0, #308]	; 0x134
    784a:	f1bc 0f00 	cmp.w	ip, #0
    784e:	f340 8107 	ble.w	7a60 <d_print_comp_inner+0x1f7c>
    7852:	f8d0 e130 	ldr.w	lr, [r0, #304]	; 0x130
    7856:	462b      	mov	r3, r5
    7858:	4670      	mov	r0, lr
    785a:	e004      	b.n	7866 <d_print_comp_inner+0x1d82>
    785c:	4563      	cmp	r3, ip
    785e:	f100 0008 	add.w	r0, r0, #8
    7862:	f000 80fd 	beq.w	7a60 <d_print_comp_inner+0x1f7c>
    7866:	f85e 1033 	ldr.w	r1, [lr, r3, lsl #3]
    786a:	428a      	cmp	r2, r1
    786c:	f103 0301 	add.w	r3, r3, #1
    7870:	d1f4      	bne.n	785c <d_print_comp_inner+0x1d78>
    7872:	f8d4 c12c 	ldr.w	ip, [r4, #300]	; 0x12c
    7876:	4663      	mov	r3, ip
    7878:	f1bc 0f00 	cmp.w	ip, #0
    787c:	d104      	bne.n	7888 <d_print_comp_inner+0x1da4>
    787e:	e09d      	b.n	79bc <d_print_comp_inner+0x1ed8>
    7880:	685b      	ldr	r3, [r3, #4]
    7882:	2b00      	cmp	r3, #0
    7884:	f000 809a 	beq.w	79bc <d_print_comp_inner+0x1ed8>
    7888:	6819      	ldr	r1, [r3, #0]
    788a:	4291      	cmp	r1, r2
    788c:	d003      	beq.n	7896 <d_print_comp_inner+0x1db2>
    788e:	42b1      	cmp	r1, r6
    7890:	d1f6      	bne.n	7880 <d_print_comp_inner+0x1d9c>
    7892:	459c      	cmp	ip, r3
    7894:	d0f4      	beq.n	7880 <d_print_comp_inner+0x1d9c>
    7896:	4611      	mov	r1, r2
    7898:	4620      	mov	r0, r4
    789a:	9201      	str	r2, [sp, #4]
    789c:	f7fb ff0a 	bl	36b4 <d_lookup_template_argument>
    78a0:	9a01      	ldr	r2, [sp, #4]
    78a2:	2800      	cmp	r0, #0
    78a4:	f43e a98b 	beq.w	5bbe <d_print_comp_inner+0xda>
    78a8:	7803      	ldrb	r3, [r0, #0]
    78aa:	2b2f      	cmp	r3, #47	; 0x2f
    78ac:	f47e a9fa 	bne.w	5ca4 <d_print_comp_inner+0x1c0>
    78b0:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
    78b4:	2900      	cmp	r1, #0
    78b6:	f6fe a9fe 	blt.w	5cb6 <d_print_comp_inner+0x1d2>
    78ba:	f7fb fe77 	bl	35ac <d_index_template_argument.part.0>
    78be:	2800      	cmp	r0, #0
    78c0:	f000 816a 	beq.w	7b98 <d_print_comp_inner+0x20b4>
    78c4:	7803      	ldrb	r3, [r0, #0]
    78c6:	f7fe b9ed 	b.w	5ca4 <d_print_comp_inner+0x1c0>
    78ca:	68c2      	ldr	r2, [r0, #12]
    78cc:	f7fe b97e 	b.w	5bcc <d_print_comp_inner+0xe8>
    78d0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    78d4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    78d8:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    78dc:	4620      	mov	r0, r4
    78de:	4798      	blx	r3
    78e0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    78e4:	3301      	adds	r3, #1
    78e6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    78ea:	4631      	mov	r1, r6
    78ec:	2301      	movs	r3, #1
    78ee:	e491      	b.n	7214 <d_print_comp_inner+0x1730>
    78f0:	4986      	ldr	r1, [pc, #536]	; (7b0c <d_print_comp_inner+0x2028>)
    78f2:	4632      	mov	r2, r6
    78f4:	a804      	add	r0, sp, #16
    78f6:	f002 fe39 	bl	a56c <sprintf>
    78fa:	a804      	add	r0, sp, #16
    78fc:	f007 f9c0 	bl	ec80 <strlen>
    7900:	2800      	cmp	r0, #0
    7902:	f43e a95f 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    7906:	ad04      	add	r5, sp, #16
    7908:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    790c:	182f      	adds	r7, r5, r0
    790e:	f04f 0800 	mov.w	r8, #0
    7912:	e009      	b.n	7928 <d_print_comp_inner+0x1e44>
    7914:	460b      	mov	r3, r1
    7916:	3101      	adds	r1, #1
    7918:	42af      	cmp	r7, r5
    791a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    791e:	54e6      	strb	r6, [r4, r3]
    7920:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7924:	f43e a94e 	beq.w	5bc4 <d_print_comp_inner+0xe0>
    7928:	29ff      	cmp	r1, #255	; 0xff
    792a:	f815 6b01 	ldrb.w	r6, [r5], #1
    792e:	d1f1      	bne.n	7914 <d_print_comp_inner+0x1e30>
    7930:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7934:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7938:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    793c:	4620      	mov	r0, r4
    793e:	4798      	blx	r3
    7940:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7944:	3301      	adds	r3, #1
    7946:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    794a:	2101      	movs	r1, #1
    794c:	2300      	movs	r3, #0
    794e:	e7e3      	b.n	7918 <d_print_comp_inner+0x1e34>
    7950:	2500      	movs	r5, #0
    7952:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7956:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    795a:	4620      	mov	r0, r4
    795c:	4798      	blx	r3
    795e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7962:	3301      	adds	r3, #1
    7964:	4629      	mov	r1, r5
    7966:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    796a:	e4fe      	b.n	736a <d_print_comp_inner+0x1886>
    796c:	2111      	movs	r1, #17
    796e:	4620      	mov	r0, r4
    7970:	4652      	mov	r2, sl
    7972:	f001 f96b 	bl	8c4c <d_print_subexpr>
    7976:	4966      	ldr	r1, [pc, #408]	; (7b10 <d_print_comp_inner+0x202c>)
    7978:	f7fe bd13 	b.w	63a2 <d_print_comp_inner+0x8be>
    797c:	2500      	movs	r5, #0
    797e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7982:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7986:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    798a:	4620      	mov	r0, r4
    798c:	4798      	blx	r3
    798e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7992:	3301      	adds	r3, #1
    7994:	4629      	mov	r1, r5
    7996:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    799a:	f7fe bf31 	b.w	6800 <d_print_comp_inner+0xd1c>
    799e:	2600      	movs	r6, #0
    79a0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    79a4:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    79a8:	4620      	mov	r0, r4
    79aa:	4798      	blx	r3
    79ac:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    79b0:	687d      	ldr	r5, [r7, #4]
    79b2:	3301      	adds	r3, #1
    79b4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    79b8:	4631      	mov	r1, r6
    79ba:	e61f      	b.n	75fc <d_print_comp_inner+0x1b18>
    79bc:	6843      	ldr	r3, [r0, #4]
    79be:	f8d4 8110 	ldr.w	r8, [r4, #272]	; 0x110
    79c2:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    79c6:	4611      	mov	r1, r2
    79c8:	4620      	mov	r0, r4
    79ca:	9201      	str	r2, [sp, #4]
    79cc:	f7fb fe72 	bl	36b4 <d_lookup_template_argument>
    79d0:	9a01      	ldr	r2, [sp, #4]
    79d2:	2800      	cmp	r0, #0
    79d4:	f000 80e3 	beq.w	7b9e <d_print_comp_inner+0x20ba>
    79d8:	2501      	movs	r5, #1
    79da:	e765      	b.n	78a8 <d_print_comp_inner+0x1dc4>
    79dc:	68ff      	ldr	r7, [r7, #12]
    79de:	2f00      	cmp	r7, #0
    79e0:	f43e a8ed 	beq.w	5bbe <d_print_comp_inner+0xda>
    79e4:	783a      	ldrb	r2, [r7, #0]
    79e6:	f7fe bda9 	b.w	653c <d_print_comp_inner+0xa58>
    79ea:	2500      	movs	r5, #0
    79ec:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    79f0:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    79f4:	4620      	mov	r0, r4
    79f6:	4798      	blx	r3
    79f8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    79fc:	3301      	adds	r3, #1
    79fe:	4629      	mov	r1, r5
    7a00:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7a04:	e572      	b.n	74ec <d_print_comp_inner+0x1a08>
    7a06:	2120      	movs	r1, #32
    7a08:	4620      	mov	r0, r4
    7a0a:	f7fb fe31 	bl	3670 <d_append_char>
    7a0e:	e568      	b.n	74e2 <d_print_comp_inner+0x19fe>
    7a10:	2500      	movs	r5, #0
    7a12:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7a16:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7a1a:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7a1e:	4620      	mov	r0, r4
    7a20:	4798      	blx	r3
    7a22:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7a26:	3301      	adds	r3, #1
    7a28:	4629      	mov	r1, r5
    7a2a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7a2e:	e546      	b.n	74be <d_print_comp_inner+0x19da>
    7a30:	2120      	movs	r1, #32
    7a32:	4620      	mov	r0, r4
    7a34:	f7fb fe1c 	bl	3670 <d_append_char>
    7a38:	e53c      	b.n	74b4 <d_print_comp_inner+0x19d0>
    7a3a:	68ea      	ldr	r2, [r5, #12]
    7a3c:	7811      	ldrb	r1, [r2, #0]
    7a3e:	2901      	cmp	r1, #1
    7a40:	f47f ad72 	bne.w	7528 <d_print_comp_inner+0x1a44>
    7a44:	6929      	ldr	r1, [r5, #16]
    7a46:	7809      	ldrb	r1, [r1, #0]
    7a48:	2929      	cmp	r1, #41	; 0x29
    7a4a:	bf08      	it	eq
    7a4c:	4615      	moveq	r5, r2
    7a4e:	e56b      	b.n	7528 <d_print_comp_inner+0x1a44>
    7a50:	68ea      	ldr	r2, [r5, #12]
    7a52:	2111      	movs	r1, #17
    7a54:	4620      	mov	r0, r4
    7a56:	f001 f8f9 	bl	8c4c <d_print_subexpr>
    7a5a:	463a      	mov	r2, r7
    7a5c:	f7fe beb6 	b.w	67cc <d_print_comp_inner+0xce8>
    7a60:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
    7a64:	4563      	cmp	r3, ip
    7a66:	f77e a8aa 	ble.w	5bbe <d_print_comp_inner+0xda>
    7a6a:	f8d4 1130 	ldr.w	r1, [r4, #304]	; 0x130
    7a6e:	f8d4 e110 	ldr.w	lr, [r4, #272]	; 0x110
    7a72:	eb01 03cc 	add.w	r3, r1, ip, lsl #3
    7a76:	f10c 0001 	add.w	r0, ip, #1
    7a7a:	f8c4 0134 	str.w	r0, [r4, #308]	; 0x134
    7a7e:	3304      	adds	r3, #4
    7a80:	f841 203c 	str.w	r2, [r1, ip, lsl #3]
    7a84:	f1be 0f00 	cmp.w	lr, #0
    7a88:	f000 8092 	beq.w	7bb0 <d_print_comp_inner+0x20cc>
    7a8c:	e9d4 0950 	ldrd	r0, r9, [r4, #320]	; 0x140
    7a90:	4694      	mov	ip, r2
    7a92:	e010      	b.n	7ab6 <d_print_comp_inner+0x1fd2>
    7a94:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
    7a98:	f8de 2004 	ldr.w	r2, [lr, #4]
    7a9c:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
    7aa0:	3001      	adds	r0, #1
    7aa2:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
    7aa6:	604a      	str	r2, [r1, #4]
    7aa8:	6019      	str	r1, [r3, #0]
    7aaa:	f8de e000 	ldr.w	lr, [lr]
    7aae:	460b      	mov	r3, r1
    7ab0:	f1be 0f00 	cmp.w	lr, #0
    7ab4:	d07b      	beq.n	7bae <d_print_comp_inner+0x20ca>
    7ab6:	4581      	cmp	r9, r0
    7ab8:	dcec      	bgt.n	7a94 <d_print_comp_inner+0x1fb0>
    7aba:	f7fe b880 	b.w	5bbe <d_print_comp_inner+0xda>
    7abe:	6912      	ldr	r2, [r2, #16]
    7ac0:	2111      	movs	r1, #17
    7ac2:	f000 f889 	bl	7bd8 <d_print_comp>
    7ac6:	9b06      	ldr	r3, [sp, #24]
    7ac8:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
    7acc:	2b00      	cmp	r3, #0
    7ace:	f43e af09 	beq.w	68e4 <d_print_comp_inner+0xe00>
    7ad2:	f7fe b877 	b.w	5bc4 <d_print_comp_inner+0xe0>
    7ad6:	68da      	ldr	r2, [r3, #12]
    7ad8:	6891      	ldr	r1, [r2, #8]
    7ada:	2901      	cmp	r1, #1
    7adc:	f47e ae1e 	bne.w	671c <d_print_comp_inner+0xc38>
    7ae0:	6852      	ldr	r2, [r2, #4]
    7ae2:	7812      	ldrb	r2, [r2, #0]
    7ae4:	2a3e      	cmp	r2, #62	; 0x3e
    7ae6:	f47e ae19 	bne.w	671c <d_print_comp_inner+0xc38>
    7aea:	2128      	movs	r1, #40	; 0x28
    7aec:	4620      	mov	r0, r4
    7aee:	f7fb fdbf 	bl	3670 <d_append_char>
    7af2:	68f3      	ldr	r3, [r6, #12]
    7af4:	f7fe be12 	b.w	671c <d_print_comp_inner+0xc38>
    7af8:	2000145c 	.word	0x2000145c
    7afc:	20001458 	.word	0x20001458
    7b00:	20001454 	.word	0x20001454
    7b04:	20000370 	.word	0x20000370
    7b08:	20001438 	.word	0x20001438
    7b0c:	20001230 	.word	0x20001230
    7b10:	2000148c 	.word	0x2000148c
    7b14:	4620      	mov	r0, r4
    7b16:	215b      	movs	r1, #91	; 0x5b
    7b18:	f7fb fdaa 	bl	3670 <d_append_char>
    7b1c:	6933      	ldr	r3, [r6, #16]
    7b1e:	4620      	mov	r0, r4
    7b20:	691a      	ldr	r2, [r3, #16]
    7b22:	2111      	movs	r1, #17
    7b24:	f000 f858 	bl	7bd8 <d_print_comp>
    7b28:	215d      	movs	r1, #93	; 0x5d
    7b2a:	4620      	mov	r0, r4
    7b2c:	f7fb fda0 	bl	3670 <d_append_char>
    7b30:	f7fe be1c 	b.w	676c <d_print_comp_inner+0xc88>
    7b34:	6913      	ldr	r3, [r2, #16]
    7b36:	68d2      	ldr	r2, [r2, #12]
    7b38:	781b      	ldrb	r3, [r3, #0]
    7b3a:	2b29      	cmp	r3, #41	; 0x29
    7b3c:	bf1c      	itt	ne
    7b3e:	2301      	movne	r3, #1
    7b40:	f8c4 3118 	strne.w	r3, [r4, #280]	; 0x118
    7b44:	2111      	movs	r1, #17
    7b46:	4620      	mov	r0, r4
    7b48:	f001 f880 	bl	8c4c <d_print_subexpr>
    7b4c:	f7fe bdf7 	b.w	673e <d_print_comp_inner+0xc5a>
    7b50:	462a      	mov	r2, r5
    7b52:	2111      	movs	r1, #17
    7b54:	4620      	mov	r0, r4
    7b56:	f000 fe7d 	bl	8854 <d_print_expr_op>
    7b5a:	f7fe be01 	b.w	6760 <d_print_comp_inner+0xc7c>
    7b5e:	491c      	ldr	r1, [pc, #112]	; (7bd0 <d_print_comp_inner+0x20ec>)
    7b60:	4620      	mov	r0, r4
    7b62:	f7fb fe0d 	bl	3780 <d_append_string>
    7b66:	68f3      	ldr	r3, [r6, #12]
    7b68:	b143      	cbz	r3, 7b7c <d_print_comp_inner+0x2098>
    7b6a:	2111      	movs	r1, #17
    7b6c:	4620      	mov	r0, r4
    7b6e:	4632      	mov	r2, r6
    7b70:	f001 f86c 	bl	8c4c <d_print_subexpr>
    7b74:	2120      	movs	r1, #32
    7b76:	4620      	mov	r0, r4
    7b78:	f7fb fd7a 	bl	3670 <d_append_char>
    7b7c:	463a      	mov	r2, r7
    7b7e:	2111      	movs	r1, #17
    7b80:	4620      	mov	r0, r4
    7b82:	f000 f829 	bl	7bd8 <d_print_comp>
    7b86:	2d00      	cmp	r5, #0
    7b88:	f47e ae17 	bne.w	67ba <d_print_comp_inner+0xcd6>
    7b8c:	f7fe b81a 	b.w	5bc4 <d_print_comp_inner+0xe0>
    7b90:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    7b94:	f7fe b813 	b.w	5bbe <d_print_comp_inner+0xda>
    7b98:	2d00      	cmp	r5, #0
    7b9a:	f43e a810 	beq.w	5bbe <d_print_comp_inner+0xda>
    7b9e:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
    7ba2:	f7fe b80c 	b.w	5bbe <d_print_comp_inner+0xda>
    7ba6:	212d      	movs	r1, #45	; 0x2d
    7ba8:	f7fb fd62 	bl	3670 <d_append_char>
    7bac:	e605      	b.n	77ba <d_print_comp_inner+0x1cd6>
    7bae:	4662      	mov	r2, ip
    7bb0:	2100      	movs	r1, #0
    7bb2:	6019      	str	r1, [r3, #0]
    7bb4:	e66f      	b.n	7896 <d_print_comp_inner+0x1db2>
    7bb6:	68f2      	ldr	r2, [r6, #12]
    7bb8:	f7fe b817 	b.w	5bea <d_print_comp_inner+0x106>
    7bbc:	463a      	mov	r2, r7
    7bbe:	2111      	movs	r1, #17
    7bc0:	f000 fe48 	bl	8854 <d_print_expr_op>
    7bc4:	f7fe bdf9 	b.w	67ba <d_print_comp_inner+0xcd6>
    7bc8:	4902      	ldr	r1, [pc, #8]	; (7bd4 <d_print_comp_inner+0x20f0>)
    7bca:	f7fe bbea 	b.w	63a2 <d_print_comp_inner+0x8be>
    7bce:	bf00      	nop
    7bd0:	2000144c 	.word	0x2000144c
    7bd4:	20001460 	.word	0x20001460

00007bd8 <d_print_comp>:
    7bd8:	b530      	push	{r4, r5, lr}
    7bda:	4605      	mov	r5, r0
    7bdc:	b083      	sub	sp, #12
    7bde:	b31a      	cbz	r2, 7c28 <d_print_comp+0x50>
    7be0:	6853      	ldr	r3, [r2, #4]
    7be2:	2b01      	cmp	r3, #1
    7be4:	4614      	mov	r4, r2
    7be6:	dc1f      	bgt.n	7c28 <d_print_comp+0x50>
    7be8:	f8d0 111c 	ldr.w	r1, [r0, #284]	; 0x11c
    7bec:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
    7bf0:	dc1a      	bgt.n	7c28 <d_print_comp+0x50>
    7bf2:	3301      	adds	r3, #1
    7bf4:	6053      	str	r3, [r2, #4]
    7bf6:	3101      	adds	r1, #1
    7bf8:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
    7bfc:	f8c0 111c 	str.w	r1, [r0, #284]	; 0x11c
    7c00:	f8c0 d12c 	str.w	sp, [r0, #300]	; 0x12c
    7c04:	2111      	movs	r1, #17
    7c06:	e9cd 2300 	strd	r2, r3, [sp]
    7c0a:	f7fd ff6b 	bl	5ae4 <d_print_comp_inner>
    7c0e:	6862      	ldr	r2, [r4, #4]
    7c10:	f8d5 311c 	ldr.w	r3, [r5, #284]	; 0x11c
    7c14:	9901      	ldr	r1, [sp, #4]
    7c16:	f8c5 112c 	str.w	r1, [r5, #300]	; 0x12c
    7c1a:	3a01      	subs	r2, #1
    7c1c:	3b01      	subs	r3, #1
    7c1e:	6062      	str	r2, [r4, #4]
    7c20:	f8c5 311c 	str.w	r3, [r5, #284]	; 0x11c
    7c24:	b003      	add	sp, #12
    7c26:	bd30      	pop	{r4, r5, pc}
    7c28:	2301      	movs	r3, #1
    7c2a:	f8c5 3118 	str.w	r3, [r5, #280]	; 0x118
    7c2e:	b003      	add	sp, #12
    7c30:	bd30      	pop	{r4, r5, pc}
    7c32:	bf00      	nop

00007c34 <d_print_mod>:
    7c34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    7c38:	7813      	ldrb	r3, [r2, #0]
    7c3a:	3b03      	subs	r3, #3
    7c3c:	4615      	mov	r5, r2
    7c3e:	4604      	mov	r4, r0
    7c40:	2b4e      	cmp	r3, #78	; 0x4e
    7c42:	d850      	bhi.n	7ce6 <d_print_mod+0xb2>
    7c44:	e8df f013 	tbh	[pc, r3, lsl #1]
    7c48:	004f011c 	.word	0x004f011c
    7c4c:	004f004f 	.word	0x004f004f
    7c50:	004f004f 	.word	0x004f004f
    7c54:	004f004f 	.word	0x004f004f
    7c58:	004f004f 	.word	0x004f004f
    7c5c:	004f004f 	.word	0x004f004f
    7c60:	004f004f 	.word	0x004f004f
    7c64:	004f004f 	.word	0x004f004f
    7c68:	004f004f 	.word	0x004f004f
    7c6c:	004f004f 	.word	0x004f004f
    7c70:	004f004f 	.word	0x004f004f
    7c74:	007c0055 	.word	0x007c0055
    7c78:	005500a3 	.word	0x005500a3
    7c7c:	00a3007c 	.word	0x00a3007c
    7c80:	00fc00ef 	.word	0x00fc00ef
    7c84:	02870109 	.word	0x02870109
    7c88:	01300122 	.word	0x01300122
    7c8c:	017b0155 	.word	0x017b0155
    7c90:	004f004f 	.word	0x004f004f
    7c94:	004f004f 	.word	0x004f004f
    7c98:	004f01a1 	.word	0x004f01a1
    7c9c:	004f01d1 	.word	0x004f01d1
    7ca0:	004f004f 	.word	0x004f004f
    7ca4:	004f004f 	.word	0x004f004f
    7ca8:	004f004f 	.word	0x004f004f
    7cac:	004f004f 	.word	0x004f004f
    7cb0:	004f004f 	.word	0x004f004f
    7cb4:	004f004f 	.word	0x004f004f
    7cb8:	004f004f 	.word	0x004f004f
    7cbc:	004f004f 	.word	0x004f004f
    7cc0:	004f004f 	.word	0x004f004f
    7cc4:	004f004f 	.word	0x004f004f
    7cc8:	004f004f 	.word	0x004f004f
    7ccc:	004f004f 	.word	0x004f004f
    7cd0:	004f004f 	.word	0x004f004f
    7cd4:	004f004f 	.word	0x004f004f
    7cd8:	004f004f 	.word	0x004f004f
    7cdc:	01f8004f 	.word	0x01f8004f
    7ce0:	0234004f 	.word	0x0234004f
    7ce4:	00c8      	.short	0x00c8
    7ce6:	462a      	mov	r2, r5
    7ce8:	2111      	movs	r1, #17
    7cea:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    7cee:	f7ff bf73 	b.w	7bd8 <d_print_comp>
    7cf2:	4ed6      	ldr	r6, [pc, #856]	; (804c <d_print_mod+0x418>)
    7cf4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7cf8:	f106 0708 	add.w	r7, r6, #8
    7cfc:	2520      	movs	r5, #32
    7cfe:	f04f 0800 	mov.w	r8, #0
    7d02:	e00b      	b.n	7d1c <d_print_mod+0xe8>
    7d04:	460b      	mov	r3, r1
    7d06:	3101      	adds	r1, #1
    7d08:	42be      	cmp	r6, r7
    7d0a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7d0e:	54e5      	strb	r5, [r4, r3]
    7d10:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7d14:	f000 80c6 	beq.w	7ea4 <d_print_mod+0x270>
    7d18:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7d1c:	29ff      	cmp	r1, #255	; 0xff
    7d1e:	d1f1      	bne.n	7d04 <d_print_mod+0xd0>
    7d20:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7d24:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7d28:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7d2c:	4620      	mov	r0, r4
    7d2e:	4798      	blx	r3
    7d30:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7d34:	3301      	adds	r3, #1
    7d36:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7d3a:	2101      	movs	r1, #1
    7d3c:	2300      	movs	r3, #0
    7d3e:	e7e3      	b.n	7d08 <d_print_mod+0xd4>
    7d40:	4ec3      	ldr	r6, [pc, #780]	; (8050 <d_print_mod+0x41c>)
    7d42:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7d46:	f106 0708 	add.w	r7, r6, #8
    7d4a:	2520      	movs	r5, #32
    7d4c:	f04f 0800 	mov.w	r8, #0
    7d50:	e00b      	b.n	7d6a <d_print_mod+0x136>
    7d52:	460b      	mov	r3, r1
    7d54:	3101      	adds	r1, #1
    7d56:	42b7      	cmp	r7, r6
    7d58:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7d5c:	54e5      	strb	r5, [r4, r3]
    7d5e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7d62:	f000 809f 	beq.w	7ea4 <d_print_mod+0x270>
    7d66:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7d6a:	29ff      	cmp	r1, #255	; 0xff
    7d6c:	d1f1      	bne.n	7d52 <d_print_mod+0x11e>
    7d6e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7d72:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7d76:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7d7a:	4620      	mov	r0, r4
    7d7c:	4798      	blx	r3
    7d7e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7d82:	3301      	adds	r3, #1
    7d84:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7d88:	2101      	movs	r1, #1
    7d8a:	2300      	movs	r3, #0
    7d8c:	e7e3      	b.n	7d56 <d_print_mod+0x122>
    7d8e:	4eb1      	ldr	r6, [pc, #708]	; (8054 <d_print_mod+0x420>)
    7d90:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7d94:	1d77      	adds	r7, r6, #5
    7d96:	2520      	movs	r5, #32
    7d98:	f04f 0800 	mov.w	r8, #0
    7d9c:	e00a      	b.n	7db4 <d_print_mod+0x180>
    7d9e:	460b      	mov	r3, r1
    7da0:	3101      	adds	r1, #1
    7da2:	42b7      	cmp	r7, r6
    7da4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7da8:	54e5      	strb	r5, [r4, r3]
    7daa:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7dae:	d079      	beq.n	7ea4 <d_print_mod+0x270>
    7db0:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7db4:	29ff      	cmp	r1, #255	; 0xff
    7db6:	d1f2      	bne.n	7d9e <d_print_mod+0x16a>
    7db8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7dbc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7dc0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7dc4:	4620      	mov	r0, r4
    7dc6:	4798      	blx	r3
    7dc8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7dcc:	3301      	adds	r3, #1
    7dce:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7dd2:	2101      	movs	r1, #1
    7dd4:	2300      	movs	r3, #0
    7dd6:	e7e4      	b.n	7da2 <d_print_mod+0x16e>
    7dd8:	4f9f      	ldr	r7, [pc, #636]	; (8058 <d_print_mod+0x424>)
    7dda:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7dde:	f107 0905 	add.w	r9, r7, #5
    7de2:	2620      	movs	r6, #32
    7de4:	f04f 0800 	mov.w	r8, #0
    7de8:	e00b      	b.n	7e02 <d_print_mod+0x1ce>
    7dea:	460b      	mov	r3, r1
    7dec:	3101      	adds	r1, #1
    7dee:	45b9      	cmp	r9, r7
    7df0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7df4:	54e6      	strb	r6, [r4, r3]
    7df6:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7dfa:	f000 817f 	beq.w	80fc <d_print_mod+0x4c8>
    7dfe:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    7e02:	29ff      	cmp	r1, #255	; 0xff
    7e04:	d1f1      	bne.n	7dea <d_print_mod+0x1b6>
    7e06:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7e0a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7e0e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7e12:	4620      	mov	r0, r4
    7e14:	4798      	blx	r3
    7e16:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7e1a:	3301      	adds	r3, #1
    7e1c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7e20:	2101      	movs	r1, #1
    7e22:	2300      	movs	r3, #0
    7e24:	e7e3      	b.n	7dee <d_print_mod+0x1ba>
    7e26:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    7e2a:	2bff      	cmp	r3, #255	; 0xff
    7e2c:	f000 81d0 	beq.w	81d0 <d_print_mod+0x59c>
    7e30:	2220      	movs	r2, #32
    7e32:	1c59      	adds	r1, r3, #1
    7e34:	f8c0 1100 	str.w	r1, [r0, #256]	; 0x100
    7e38:	54c2      	strb	r2, [r0, r3]
    7e3a:	f880 2104 	strb.w	r2, [r0, #260]	; 0x104
    7e3e:	e027      	b.n	7e90 <d_print_mod+0x25c>
    7e40:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    7e44:	2bff      	cmp	r3, #255	; 0xff
    7e46:	f000 81b4 	beq.w	81b2 <d_print_mod+0x57e>
    7e4a:	1c59      	adds	r1, r3, #1
    7e4c:	2220      	movs	r2, #32
    7e4e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7e52:	54e2      	strb	r2, [r4, r3]
    7e54:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    7e58:	e028      	b.n	7eac <d_print_mod+0x278>
    7e5a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7e5e:	29ff      	cmp	r1, #255	; 0xff
    7e60:	f000 8197 	beq.w	8192 <d_print_mod+0x55e>
    7e64:	1c4a      	adds	r2, r1, #1
    7e66:	2320      	movs	r3, #32
    7e68:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    7e6c:	5463      	strb	r3, [r4, r1]
    7e6e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    7e72:	692a      	ldr	r2, [r5, #16]
    7e74:	4620      	mov	r0, r4
    7e76:	2111      	movs	r1, #17
    7e78:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    7e7c:	f7ff beac 	b.w	7bd8 <d_print_comp>
    7e80:	68ea      	ldr	r2, [r5, #12]
    7e82:	2111      	movs	r1, #17
    7e84:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    7e88:	f7ff bea6 	b.w	7bd8 <d_print_comp>
    7e8c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7e90:	29ff      	cmp	r1, #255	; 0xff
    7e92:	f000 81bc 	beq.w	820e <d_print_mod+0x5da>
    7e96:	1c4a      	adds	r2, r1, #1
    7e98:	2326      	movs	r3, #38	; 0x26
    7e9a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    7e9e:	5463      	strb	r3, [r4, r1]
    7ea0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    7ea4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    7ea8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7eac:	4d6b      	ldr	r5, [pc, #428]	; (805c <d_print_mod+0x428>)
    7eae:	2626      	movs	r6, #38	; 0x26
    7eb0:	1c6f      	adds	r7, r5, #1
    7eb2:	f04f 0800 	mov.w	r8, #0
    7eb6:	e00a      	b.n	7ece <d_print_mod+0x29a>
    7eb8:	460b      	mov	r3, r1
    7eba:	3101      	adds	r1, #1
    7ebc:	42bd      	cmp	r5, r7
    7ebe:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7ec2:	54e6      	strb	r6, [r4, r3]
    7ec4:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7ec8:	d0ec      	beq.n	7ea4 <d_print_mod+0x270>
    7eca:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    7ece:	29ff      	cmp	r1, #255	; 0xff
    7ed0:	d1f2      	bne.n	7eb8 <d_print_mod+0x284>
    7ed2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7ed6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7eda:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7ede:	4620      	mov	r0, r4
    7ee0:	4798      	blx	r3
    7ee2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7ee6:	3301      	adds	r3, #1
    7ee8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7eec:	2101      	movs	r1, #1
    7eee:	2300      	movs	r3, #0
    7ef0:	e7e4      	b.n	7ebc <d_print_mod+0x288>
    7ef2:	4e5b      	ldr	r6, [pc, #364]	; (8060 <d_print_mod+0x42c>)
    7ef4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7ef8:	f106 0708 	add.w	r7, r6, #8
    7efc:	2520      	movs	r5, #32
    7efe:	f04f 0800 	mov.w	r8, #0
    7f02:	e00a      	b.n	7f1a <d_print_mod+0x2e6>
    7f04:	460b      	mov	r3, r1
    7f06:	3101      	adds	r1, #1
    7f08:	42b7      	cmp	r7, r6
    7f0a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7f0e:	54e5      	strb	r5, [r4, r3]
    7f10:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7f14:	d0c6      	beq.n	7ea4 <d_print_mod+0x270>
    7f16:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7f1a:	29ff      	cmp	r1, #255	; 0xff
    7f1c:	d1f2      	bne.n	7f04 <d_print_mod+0x2d0>
    7f1e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7f22:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7f26:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7f2a:	4620      	mov	r0, r4
    7f2c:	4798      	blx	r3
    7f2e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7f32:	3301      	adds	r3, #1
    7f34:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7f38:	2101      	movs	r1, #1
    7f3a:	2300      	movs	r3, #0
    7f3c:	e7e4      	b.n	7f08 <d_print_mod+0x2d4>
    7f3e:	4e49      	ldr	r6, [pc, #292]	; (8064 <d_print_mod+0x430>)
    7f40:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7f44:	f106 070a 	add.w	r7, r6, #10
    7f48:	2520      	movs	r5, #32
    7f4a:	f04f 0800 	mov.w	r8, #0
    7f4e:	e00a      	b.n	7f66 <d_print_mod+0x332>
    7f50:	460b      	mov	r3, r1
    7f52:	3101      	adds	r1, #1
    7f54:	42b7      	cmp	r7, r6
    7f56:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7f5a:	54e5      	strb	r5, [r4, r3]
    7f5c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7f60:	d0a0      	beq.n	7ea4 <d_print_mod+0x270>
    7f62:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7f66:	29ff      	cmp	r1, #255	; 0xff
    7f68:	d1f2      	bne.n	7f50 <d_print_mod+0x31c>
    7f6a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7f6e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7f72:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7f76:	4620      	mov	r0, r4
    7f78:	4798      	blx	r3
    7f7a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7f7e:	3301      	adds	r3, #1
    7f80:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7f84:	2101      	movs	r1, #1
    7f86:	2300      	movs	r3, #0
    7f88:	e7e4      	b.n	7f54 <d_print_mod+0x320>
    7f8a:	f890 3104 	ldrb.w	r3, [r0, #260]	; 0x104
    7f8e:	2b28      	cmp	r3, #40	; 0x28
    7f90:	f040 80d5 	bne.w	813e <d_print_mod+0x50a>
    7f94:	4e34      	ldr	r6, [pc, #208]	; (8068 <d_print_mod+0x434>)
    7f96:	68ea      	ldr	r2, [r5, #12]
    7f98:	2111      	movs	r1, #17
    7f9a:	4620      	mov	r0, r4
    7f9c:	f7ff fe1c 	bl	7bd8 <d_print_comp>
    7fa0:	1cb7      	adds	r7, r6, #2
    7fa2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7fa6:	253a      	movs	r5, #58	; 0x3a
    7fa8:	f04f 0800 	mov.w	r8, #0
    7fac:	e00b      	b.n	7fc6 <d_print_mod+0x392>
    7fae:	460b      	mov	r3, r1
    7fb0:	3101      	adds	r1, #1
    7fb2:	42b7      	cmp	r7, r6
    7fb4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7fb8:	54e5      	strb	r5, [r4, r3]
    7fba:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7fbe:	f43f af71 	beq.w	7ea4 <d_print_mod+0x270>
    7fc2:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7fc6:	29ff      	cmp	r1, #255	; 0xff
    7fc8:	d1f1      	bne.n	7fae <d_print_mod+0x37a>
    7fca:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7fce:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7fd2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7fd6:	4620      	mov	r0, r4
    7fd8:	4798      	blx	r3
    7fda:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7fde:	3301      	adds	r3, #1
    7fe0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7fe4:	2101      	movs	r1, #1
    7fe6:	2300      	movs	r3, #0
    7fe8:	e7e3      	b.n	7fb2 <d_print_mod+0x37e>
    7fea:	4f20      	ldr	r7, [pc, #128]	; (806c <d_print_mod+0x438>)
    7fec:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7ff0:	f107 0909 	add.w	r9, r7, #9
    7ff4:	2620      	movs	r6, #32
    7ff6:	f04f 0800 	mov.w	r8, #0
    7ffa:	e00b      	b.n	8014 <d_print_mod+0x3e0>
    7ffc:	460b      	mov	r3, r1
    7ffe:	3101      	adds	r1, #1
    8000:	454f      	cmp	r7, r9
    8002:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8006:	54e6      	strb	r6, [r4, r3]
    8008:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    800c:	f000 8085 	beq.w	811a <d_print_mod+0x4e6>
    8010:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    8014:	29ff      	cmp	r1, #255	; 0xff
    8016:	d1f1      	bne.n	7ffc <d_print_mod+0x3c8>
    8018:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    801c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8020:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    8024:	4620      	mov	r0, r4
    8026:	4798      	blx	r3
    8028:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    802c:	3301      	adds	r3, #1
    802e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8032:	2101      	movs	r1, #1
    8034:	2300      	movs	r3, #0
    8036:	e7e3      	b.n	8000 <d_print_mod+0x3cc>
    8038:	4e0d      	ldr	r6, [pc, #52]	; (8070 <d_print_mod+0x43c>)
    803a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    803e:	f106 0710 	add.w	r7, r6, #16
    8042:	2520      	movs	r5, #32
    8044:	f04f 0800 	mov.w	r8, #0
    8048:	e020      	b.n	808c <d_print_mod+0x458>
    804a:	bf00      	nop
    804c:	2000150c 	.word	0x2000150c
    8050:	20001518 	.word	0x20001518
    8054:	20001524 	.word	0x20001524
    8058:	2000154c 	.word	0x2000154c
    805c:	20001554 	.word	0x20001554
    8060:	20001558 	.word	0x20001558
    8064:	20001564 	.word	0x20001564
    8068:	20001570 	.word	0x20001570
    806c:	20001574 	.word	0x20001574
    8070:	2000152c 	.word	0x2000152c
    8074:	460b      	mov	r3, r1
    8076:	3101      	adds	r1, #1
    8078:	42b7      	cmp	r7, r6
    807a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    807e:	54e5      	strb	r5, [r4, r3]
    8080:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    8084:	f43f af0e 	beq.w	7ea4 <d_print_mod+0x270>
    8088:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    808c:	29ff      	cmp	r1, #255	; 0xff
    808e:	d1f1      	bne.n	8074 <d_print_mod+0x440>
    8090:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8094:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8098:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    809c:	4620      	mov	r0, r4
    809e:	4798      	blx	r3
    80a0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    80a4:	3301      	adds	r3, #1
    80a6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    80aa:	2101      	movs	r1, #1
    80ac:	2300      	movs	r3, #0
    80ae:	e7e3      	b.n	8078 <d_print_mod+0x444>
    80b0:	4f6d      	ldr	r7, [pc, #436]	; (8268 <d_print_mod+0x634>)
    80b2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    80b6:	f107 0908 	add.w	r9, r7, #8
    80ba:	2620      	movs	r6, #32
    80bc:	f04f 0800 	mov.w	r8, #0
    80c0:	e00a      	b.n	80d8 <d_print_mod+0x4a4>
    80c2:	460b      	mov	r3, r1
    80c4:	3101      	adds	r1, #1
    80c6:	45b9      	cmp	r9, r7
    80c8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    80cc:	54e6      	strb	r6, [r4, r3]
    80ce:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    80d2:	d013      	beq.n	80fc <d_print_mod+0x4c8>
    80d4:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    80d8:	29ff      	cmp	r1, #255	; 0xff
    80da:	d1f2      	bne.n	80c2 <d_print_mod+0x48e>
    80dc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    80e0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    80e4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    80e8:	4620      	mov	r0, r4
    80ea:	4798      	blx	r3
    80ec:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    80f0:	3301      	adds	r3, #1
    80f2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    80f6:	2101      	movs	r1, #1
    80f8:	2300      	movs	r3, #0
    80fa:	e7e4      	b.n	80c6 <d_print_mod+0x492>
    80fc:	692a      	ldr	r2, [r5, #16]
    80fe:	2a00      	cmp	r2, #0
    8100:	f43f aed0 	beq.w	7ea4 <d_print_mod+0x270>
    8104:	29ff      	cmp	r1, #255	; 0xff
    8106:	d032      	beq.n	816e <d_print_mod+0x53a>
    8108:	1c48      	adds	r0, r1, #1
    810a:	2328      	movs	r3, #40	; 0x28
    810c:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
    8110:	5463      	strb	r3, [r4, r1]
    8112:	2111      	movs	r1, #17
    8114:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8118:	e001      	b.n	811e <d_print_mod+0x4ea>
    811a:	68ea      	ldr	r2, [r5, #12]
    811c:	2111      	movs	r1, #17
    811e:	4620      	mov	r0, r4
    8120:	f7ff fd5a 	bl	7bd8 <d_print_comp>
    8124:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8128:	29ff      	cmp	r1, #255	; 0xff
    812a:	d061      	beq.n	81f0 <d_print_mod+0x5bc>
    812c:	1c4a      	adds	r2, r1, #1
    812e:	2329      	movs	r3, #41	; 0x29
    8130:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8134:	5463      	strb	r3, [r4, r1]
    8136:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    813a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    813e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8142:	29ff      	cmp	r1, #255	; 0xff
    8144:	d072      	beq.n	822c <d_print_mod+0x5f8>
    8146:	1c4a      	adds	r2, r1, #1
    8148:	2320      	movs	r3, #32
    814a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    814e:	5463      	strb	r3, [r4, r1]
    8150:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8154:	e71e      	b.n	7f94 <d_print_mod+0x360>
    8156:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    815a:	29ff      	cmp	r1, #255	; 0xff
    815c:	d076      	beq.n	824c <d_print_mod+0x618>
    815e:	1c4a      	adds	r2, r1, #1
    8160:	232a      	movs	r3, #42	; 0x2a
    8162:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8166:	5463      	strb	r3, [r4, r1]
    8168:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    816c:	e69a      	b.n	7ea4 <d_print_mod+0x270>
    816e:	2600      	movs	r6, #0
    8170:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8174:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8178:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    817c:	4620      	mov	r0, r4
    817e:	4798      	blx	r3
    8180:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8184:	692a      	ldr	r2, [r5, #16]
    8186:	3301      	adds	r3, #1
    8188:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    818c:	2001      	movs	r0, #1
    818e:	4631      	mov	r1, r6
    8190:	e7bb      	b.n	810a <d_print_mod+0x4d6>
    8192:	2600      	movs	r6, #0
    8194:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    8198:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    819c:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    81a0:	4798      	blx	r3
    81a2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    81a6:	2201      	movs	r2, #1
    81a8:	4413      	add	r3, r2
    81aa:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    81ae:	4631      	mov	r1, r6
    81b0:	e659      	b.n	7e66 <d_print_mod+0x232>
    81b2:	2500      	movs	r5, #0
    81b4:	4619      	mov	r1, r3
    81b6:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    81ba:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    81be:	4798      	blx	r3
    81c0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    81c4:	2101      	movs	r1, #1
    81c6:	440b      	add	r3, r1
    81c8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    81cc:	462b      	mov	r3, r5
    81ce:	e63d      	b.n	7e4c <d_print_mod+0x218>
    81d0:	2100      	movs	r1, #0
    81d2:	e9d0 5242 	ldrd	r5, r2, [r0, #264]	; 0x108
    81d6:	f880 10ff 	strb.w	r1, [r0, #255]	; 0xff
    81da:	4619      	mov	r1, r3
    81dc:	47a8      	blx	r5
    81de:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    81e2:	2220      	movs	r2, #32
    81e4:	3301      	adds	r3, #1
    81e6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    81ea:	7022      	strb	r2, [r4, #0]
    81ec:	2101      	movs	r1, #1
    81ee:	e652      	b.n	7e96 <d_print_mod+0x262>
    81f0:	2500      	movs	r5, #0
    81f2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    81f6:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    81fa:	4620      	mov	r0, r4
    81fc:	4798      	blx	r3
    81fe:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8202:	2201      	movs	r2, #1
    8204:	4413      	add	r3, r2
    8206:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    820a:	4629      	mov	r1, r5
    820c:	e78f      	b.n	812e <d_print_mod+0x4fa>
    820e:	2500      	movs	r5, #0
    8210:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8214:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8218:	4620      	mov	r0, r4
    821a:	4798      	blx	r3
    821c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8220:	2201      	movs	r2, #1
    8222:	4413      	add	r3, r2
    8224:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8228:	4629      	mov	r1, r5
    822a:	e635      	b.n	7e98 <d_print_mod+0x264>
    822c:	2600      	movs	r6, #0
    822e:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    8232:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    8236:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    823a:	4798      	blx	r3
    823c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8240:	2201      	movs	r2, #1
    8242:	4413      	add	r3, r2
    8244:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8248:	4631      	mov	r1, r6
    824a:	e77d      	b.n	8148 <d_print_mod+0x514>
    824c:	2500      	movs	r5, #0
    824e:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    8252:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    8256:	4798      	blx	r3
    8258:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    825c:	2201      	movs	r2, #1
    825e:	4413      	add	r3, r2
    8260:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8264:	4629      	mov	r1, r5
    8266:	e77b      	b.n	8160 <d_print_mod+0x52c>
    8268:	20001540 	.word	0x20001540

0000826c <d_print_function_type>:
    826c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    8270:	4604      	mov	r4, r0
    8272:	4616      	mov	r6, r2
    8274:	461d      	mov	r5, r3
    8276:	b19b      	cbz	r3, 82a0 <d_print_function_type+0x34>
    8278:	4f71      	ldr	r7, [pc, #452]	; (8440 <d_print_function_type+0x1d4>)
    827a:	2001      	movs	r0, #1
    827c:	689a      	ldr	r2, [r3, #8]
    827e:	b97a      	cbnz	r2, 82a0 <d_print_function_type+0x34>
    8280:	685a      	ldr	r2, [r3, #4]
    8282:	7811      	ldrb	r1, [r2, #0]
    8284:	3919      	subs	r1, #25
    8286:	b2c9      	uxtb	r1, r1
    8288:	2912      	cmp	r1, #18
    828a:	fa00 f201 	lsl.w	r2, r0, r1
    828e:	d804      	bhi.n	829a <d_print_function_type+0x2e>
    8290:	423a      	tst	r2, r7
    8292:	d135      	bne.n	8300 <d_print_function_type+0x94>
    8294:	f412 6f60 	tst.w	r2, #3584	; 0xe00
    8298:	d174      	bne.n	8384 <d_print_function_type+0x118>
    829a:	681b      	ldr	r3, [r3, #0]
    829c:	2b00      	cmp	r3, #0
    829e:	d1ed      	bne.n	827c <d_print_function_type+0x10>
    82a0:	2300      	movs	r3, #0
    82a2:	f8d4 7114 	ldr.w	r7, [r4, #276]	; 0x114
    82a6:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    82aa:	462a      	mov	r2, r5
    82ac:	2111      	movs	r1, #17
    82ae:	4620      	mov	r0, r4
    82b0:	f000 f8c8 	bl	8444 <d_print_mod_list>
    82b4:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    82b8:	2bff      	cmp	r3, #255	; 0xff
    82ba:	d04b      	beq.n	8354 <d_print_function_type+0xe8>
    82bc:	2228      	movs	r2, #40	; 0x28
    82be:	1c59      	adds	r1, r3, #1
    82c0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    82c4:	54e2      	strb	r2, [r4, r3]
    82c6:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    82ca:	6932      	ldr	r2, [r6, #16]
    82cc:	b12a      	cbz	r2, 82da <d_print_function_type+0x6e>
    82ce:	2111      	movs	r1, #17
    82d0:	4620      	mov	r0, r4
    82d2:	f7ff fc81 	bl	7bd8 <d_print_comp>
    82d6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    82da:	29ff      	cmp	r1, #255	; 0xff
    82dc:	d076      	beq.n	83cc <d_print_function_type+0x160>
    82de:	1c4b      	adds	r3, r1, #1
    82e0:	2229      	movs	r2, #41	; 0x29
    82e2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    82e6:	4620      	mov	r0, r4
    82e8:	5462      	strb	r2, [r4, r1]
    82ea:	2301      	movs	r3, #1
    82ec:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    82f0:	2111      	movs	r1, #17
    82f2:	462a      	mov	r2, r5
    82f4:	f000 f8a6 	bl	8444 <d_print_mod_list>
    82f8:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
    82fc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    8300:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    8304:	2b20      	cmp	r3, #32
    8306:	d145      	bne.n	8394 <d_print_function_type+0x128>
    8308:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    830c:	29ff      	cmp	r1, #255	; 0xff
    830e:	d04e      	beq.n	83ae <d_print_function_type+0x142>
    8310:	1c4b      	adds	r3, r1, #1
    8312:	f04f 0828 	mov.w	r8, #40	; 0x28
    8316:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    831a:	f804 8001 	strb.w	r8, [r4, r1]
    831e:	f04f 0900 	mov.w	r9, #0
    8322:	f8d4 7114 	ldr.w	r7, [r4, #276]	; 0x114
    8326:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
    832a:	2111      	movs	r1, #17
    832c:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
    8330:	464b      	mov	r3, r9
    8332:	462a      	mov	r2, r5
    8334:	4620      	mov	r0, r4
    8336:	f000 f885 	bl	8444 <d_print_mod_list>
    833a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    833e:	29ff      	cmp	r1, #255	; 0xff
    8340:	d053      	beq.n	83ea <d_print_function_type+0x17e>
    8342:	1c4b      	adds	r3, r1, #1
    8344:	2229      	movs	r2, #41	; 0x29
    8346:	2bff      	cmp	r3, #255	; 0xff
    8348:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    834c:	5462      	strb	r2, [r4, r1]
    834e:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8352:	d1b3      	bne.n	82bc <d_print_function_type+0x50>
    8354:	4619      	mov	r1, r3
    8356:	2300      	movs	r3, #0
    8358:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
    835c:	4620      	mov	r0, r4
    835e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8362:	4798      	blx	r3
    8364:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8368:	3301      	adds	r3, #1
    836a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    836e:	2328      	movs	r3, #40	; 0x28
    8370:	7023      	strb	r3, [r4, #0]
    8372:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8376:	6932      	ldr	r2, [r6, #16]
    8378:	2101      	movs	r1, #1
    837a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    837e:	2a00      	cmp	r2, #0
    8380:	d1a5      	bne.n	82ce <d_print_function_type+0x62>
    8382:	e7ac      	b.n	82de <d_print_function_type+0x72>
    8384:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    8388:	f003 02fd 	and.w	r2, r3, #253	; 0xfd
    838c:	2a28      	cmp	r2, #40	; 0x28
    838e:	d0bb      	beq.n	8308 <d_print_function_type+0x9c>
    8390:	2b20      	cmp	r3, #32
    8392:	d0b9      	beq.n	8308 <d_print_function_type+0x9c>
    8394:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    8398:	2bff      	cmp	r3, #255	; 0xff
    839a:	d03e      	beq.n	841a <d_print_function_type+0x1ae>
    839c:	1c59      	adds	r1, r3, #1
    839e:	2220      	movs	r2, #32
    83a0:	29ff      	cmp	r1, #255	; 0xff
    83a2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    83a6:	54e2      	strb	r2, [r4, r3]
    83a8:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    83ac:	d1b0      	bne.n	8310 <d_print_function_type+0xa4>
    83ae:	2700      	movs	r7, #0
    83b0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    83b4:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    83b8:	4620      	mov	r0, r4
    83ba:	4798      	blx	r3
    83bc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    83c0:	3301      	adds	r3, #1
    83c2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    83c6:	4639      	mov	r1, r7
    83c8:	2301      	movs	r3, #1
    83ca:	e7a2      	b.n	8312 <d_print_function_type+0xa6>
    83cc:	2600      	movs	r6, #0
    83ce:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    83d2:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    83d6:	4620      	mov	r0, r4
    83d8:	4798      	blx	r3
    83da:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    83de:	3301      	adds	r3, #1
    83e0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    83e4:	4631      	mov	r1, r6
    83e6:	2301      	movs	r3, #1
    83e8:	e77a      	b.n	82e0 <d_print_function_type+0x74>
    83ea:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    83ee:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    83f2:	4620      	mov	r0, r4
    83f4:	4798      	blx	r3
    83f6:	f642 0329 	movw	r3, #10281	; 0x2829
    83fa:	8023      	strh	r3, [r4, #0]
    83fc:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
    8400:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8404:	6932      	ldr	r2, [r6, #16]
    8406:	3301      	adds	r3, #1
    8408:	2102      	movs	r1, #2
    840a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    840e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8412:	2a00      	cmp	r2, #0
    8414:	f47f af5b 	bne.w	82ce <d_print_function_type+0x62>
    8418:	e761      	b.n	82de <d_print_function_type+0x72>
    841a:	2200      	movs	r2, #0
    841c:	4619      	mov	r1, r3
    841e:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
    8422:	f8d4 7108 	ldr.w	r7, [r4, #264]	; 0x108
    8426:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    842a:	4620      	mov	r0, r4
    842c:	47b8      	blx	r7
    842e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8432:	2220      	movs	r2, #32
    8434:	3301      	adds	r3, #1
    8436:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    843a:	7022      	strb	r2, [r4, #0]
    843c:	2101      	movs	r1, #1
    843e:	e767      	b.n	8310 <d_print_function_type+0xa4>
    8440:	00043107 	.word	0x00043107

00008444 <d_print_mod_list>:
    8444:	2a00      	cmp	r2, #0
    8446:	f000 80c2 	beq.w	85ce <d_print_mod_list+0x18a>
    844a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    844e:	4605      	mov	r5, r0
    8450:	b088      	sub	sp, #32
    8452:	461e      	mov	r6, r3
    8454:	4614      	mov	r4, r2
    8456:	2701      	movs	r7, #1
    8458:	f8d5 2118 	ldr.w	r2, [r5, #280]	; 0x118
    845c:	b9ca      	cbnz	r2, 8492 <d_print_mod_list+0x4e>
    845e:	68a2      	ldr	r2, [r4, #8]
    8460:	bb0a      	cbnz	r2, 84a6 <d_print_mod_list+0x62>
    8462:	6862      	ldr	r2, [r4, #4]
    8464:	7811      	ldrb	r1, [r2, #0]
    8466:	b1be      	cbz	r6, 8498 <d_print_mod_list+0x54>
    8468:	68e3      	ldr	r3, [r4, #12]
    846a:	f8d5 8110 	ldr.w	r8, [r5, #272]	; 0x110
    846e:	60a7      	str	r7, [r4, #8]
    8470:	2929      	cmp	r1, #41	; 0x29
    8472:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
    8476:	d024      	beq.n	84c2 <d_print_mod_list+0x7e>
    8478:	292a      	cmp	r1, #42	; 0x2a
    847a:	d02c      	beq.n	84d6 <d_print_mod_list+0x92>
    847c:	2902      	cmp	r1, #2
    847e:	d034      	beq.n	84ea <d_print_mod_list+0xa6>
    8480:	2111      	movs	r1, #17
    8482:	4628      	mov	r0, r5
    8484:	f7ff fbd6 	bl	7c34 <d_print_mod>
    8488:	6824      	ldr	r4, [r4, #0]
    848a:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    848e:	2c00      	cmp	r4, #0
    8490:	d1e2      	bne.n	8458 <d_print_mod_list+0x14>
    8492:	b008      	add	sp, #32
    8494:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    8498:	294e      	cmp	r1, #78	; 0x4e
    849a:	d004      	beq.n	84a6 <d_print_mod_list+0x62>
    849c:	d807      	bhi.n	84ae <d_print_mod_list+0x6a>
    849e:	f1a1 031c 	sub.w	r3, r1, #28
    84a2:	2b04      	cmp	r3, #4
    84a4:	d8e0      	bhi.n	8468 <d_print_mod_list+0x24>
    84a6:	6824      	ldr	r4, [r4, #0]
    84a8:	2c00      	cmp	r4, #0
    84aa:	d1d5      	bne.n	8458 <d_print_mod_list+0x14>
    84ac:	e7f1      	b.n	8492 <d_print_mod_list+0x4e>
    84ae:	3950      	subs	r1, #80	; 0x50
    84b0:	2901      	cmp	r1, #1
    84b2:	d9f8      	bls.n	84a6 <d_print_mod_list+0x62>
    84b4:	68e3      	ldr	r3, [r4, #12]
    84b6:	f8d5 8110 	ldr.w	r8, [r5, #272]	; 0x110
    84ba:	60a7      	str	r7, [r4, #8]
    84bc:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
    84c0:	e7de      	b.n	8480 <d_print_mod_list+0x3c>
    84c2:	6823      	ldr	r3, [r4, #0]
    84c4:	2111      	movs	r1, #17
    84c6:	4628      	mov	r0, r5
    84c8:	f7ff fed0 	bl	826c <d_print_function_type>
    84cc:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    84d0:	b008      	add	sp, #32
    84d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    84d6:	6823      	ldr	r3, [r4, #0]
    84d8:	2111      	movs	r1, #17
    84da:	4628      	mov	r0, r5
    84dc:	f000 f8d6 	bl	868c <d_print_array_type>
    84e0:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    84e4:	b008      	add	sp, #32
    84e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    84ea:	4e64      	ldr	r6, [pc, #400]	; (867c <d_print_mod_list+0x238>)
    84ec:	f8d5 7114 	ldr.w	r7, [r5, #276]	; 0x114
    84f0:	68d2      	ldr	r2, [r2, #12]
    84f2:	f04f 0900 	mov.w	r9, #0
    84f6:	2111      	movs	r1, #17
    84f8:	f8c5 9114 	str.w	r9, [r5, #276]	; 0x114
    84fc:	4628      	mov	r0, r5
    84fe:	f7ff fb6b 	bl	7bd8 <d_print_comp>
    8502:	f106 0a01 	add.w	sl, r6, #1
    8506:	f8c5 7114 	str.w	r7, [r5, #276]	; 0x114
    850a:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    850e:	273a      	movs	r7, #58	; 0x3a
    8510:	e00a      	b.n	8528 <d_print_mod_list+0xe4>
    8512:	460b      	mov	r3, r1
    8514:	3101      	adds	r1, #1
    8516:	4556      	cmp	r6, sl
    8518:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    851c:	54ef      	strb	r7, [r5, r3]
    851e:	f885 7104 	strb.w	r7, [r5, #260]	; 0x104
    8522:	d013      	beq.n	854c <d_print_mod_list+0x108>
    8524:	f816 7f01 	ldrb.w	r7, [r6, #1]!
    8528:	29ff      	cmp	r1, #255	; 0xff
    852a:	d1f2      	bne.n	8512 <d_print_mod_list+0xce>
    852c:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    8530:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    8534:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    8538:	4628      	mov	r0, r5
    853a:	4798      	blx	r3
    853c:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    8540:	3301      	adds	r3, #1
    8542:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    8546:	2101      	movs	r1, #1
    8548:	2300      	movs	r3, #0
    854a:	e7e4      	b.n	8516 <d_print_mod_list+0xd2>
    854c:	6863      	ldr	r3, [r4, #4]
    854e:	691c      	ldr	r4, [r3, #16]
    8550:	7823      	ldrb	r3, [r4, #0]
    8552:	2b48      	cmp	r3, #72	; 0x48
    8554:	d017      	beq.n	8586 <d_print_mod_list+0x142>
    8556:	2b4e      	cmp	r3, #78	; 0x4e
    8558:	f1a3 0250 	sub.w	r2, r3, #80	; 0x50
    855c:	f1a3 011c 	sub.w	r1, r3, #28
    8560:	d00e      	beq.n	8580 <d_print_mod_list+0x13c>
    8562:	d80b      	bhi.n	857c <d_print_mod_list+0x138>
    8564:	2904      	cmp	r1, #4
    8566:	d90b      	bls.n	8580 <d_print_mod_list+0x13c>
    8568:	4622      	mov	r2, r4
    856a:	2111      	movs	r1, #17
    856c:	4628      	mov	r0, r5
    856e:	f7ff fb33 	bl	7bd8 <d_print_comp>
    8572:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    8576:	b008      	add	sp, #32
    8578:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    857c:	2a01      	cmp	r2, #1
    857e:	d8f3      	bhi.n	8568 <d_print_mod_list+0x124>
    8580:	68e4      	ldr	r4, [r4, #12]
    8582:	7823      	ldrb	r3, [r4, #0]
    8584:	e7e7      	b.n	8556 <d_print_mod_list+0x112>
    8586:	4f3e      	ldr	r7, [pc, #248]	; (8680 <d_print_mod_list+0x23c>)
    8588:	267b      	movs	r6, #123	; 0x7b
    858a:	f107 0a0c 	add.w	sl, r7, #12
    858e:	f04f 0900 	mov.w	r9, #0
    8592:	e00a      	b.n	85aa <d_print_mod_list+0x166>
    8594:	460b      	mov	r3, r1
    8596:	3101      	adds	r1, #1
    8598:	4557      	cmp	r7, sl
    859a:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    859e:	54ee      	strb	r6, [r5, r3]
    85a0:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
    85a4:	d014      	beq.n	85d0 <d_print_mod_list+0x18c>
    85a6:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    85aa:	29ff      	cmp	r1, #255	; 0xff
    85ac:	d1f2      	bne.n	8594 <d_print_mod_list+0x150>
    85ae:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    85b2:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    85b6:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    85ba:	4628      	mov	r0, r5
    85bc:	4798      	blx	r3
    85be:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    85c2:	3301      	adds	r3, #1
    85c4:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    85c8:	2101      	movs	r1, #1
    85ca:	2300      	movs	r3, #0
    85cc:	e7e4      	b.n	8598 <d_print_mod_list+0x154>
    85ce:	4770      	bx	lr
    85d0:	6922      	ldr	r2, [r4, #16]
    85d2:	492c      	ldr	r1, [pc, #176]	; (8684 <d_print_mod_list+0x240>)
    85d4:	3201      	adds	r2, #1
    85d6:	a801      	add	r0, sp, #4
    85d8:	f001 ffc8 	bl	a56c <sprintf>
    85dc:	a801      	add	r0, sp, #4
    85de:	f006 fb4f 	bl	ec80 <strlen>
    85e2:	b320      	cbz	r0, 862e <d_print_mod_list+0x1ea>
    85e4:	ae01      	add	r6, sp, #4
    85e6:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    85ea:	eb06 0a00 	add.w	sl, r6, r0
    85ee:	f04f 0900 	mov.w	r9, #0
    85f2:	e008      	b.n	8606 <d_print_mod_list+0x1c2>
    85f4:	460b      	mov	r3, r1
    85f6:	3101      	adds	r1, #1
    85f8:	4556      	cmp	r6, sl
    85fa:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    85fe:	54ef      	strb	r7, [r5, r3]
    8600:	f885 7104 	strb.w	r7, [r5, #260]	; 0x104
    8604:	d015      	beq.n	8632 <d_print_mod_list+0x1ee>
    8606:	29ff      	cmp	r1, #255	; 0xff
    8608:	f816 7b01 	ldrb.w	r7, [r6], #1
    860c:	d1f2      	bne.n	85f4 <d_print_mod_list+0x1b0>
    860e:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    8612:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    8616:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    861a:	4628      	mov	r0, r5
    861c:	4798      	blx	r3
    861e:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    8622:	3301      	adds	r3, #1
    8624:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    8628:	2101      	movs	r1, #1
    862a:	2300      	movs	r3, #0
    862c:	e7e4      	b.n	85f8 <d_print_mod_list+0x1b4>
    862e:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    8632:	4f15      	ldr	r7, [pc, #84]	; (8688 <d_print_mod_list+0x244>)
    8634:	267d      	movs	r6, #125	; 0x7d
    8636:	f107 0a02 	add.w	sl, r7, #2
    863a:	f04f 0900 	mov.w	r9, #0
    863e:	e00a      	b.n	8656 <d_print_mod_list+0x212>
    8640:	460b      	mov	r3, r1
    8642:	3101      	adds	r1, #1
    8644:	4557      	cmp	r7, sl
    8646:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    864a:	54ee      	strb	r6, [r5, r3]
    864c:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
    8650:	d096      	beq.n	8580 <d_print_mod_list+0x13c>
    8652:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    8656:	29ff      	cmp	r1, #255	; 0xff
    8658:	d1f2      	bne.n	8640 <d_print_mod_list+0x1fc>
    865a:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    865e:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    8662:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    8666:	4628      	mov	r0, r5
    8668:	4798      	blx	r3
    866a:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    866e:	3301      	adds	r3, #1
    8670:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    8674:	2101      	movs	r1, #1
    8676:	2300      	movs	r3, #0
    8678:	e7e4      	b.n	8644 <d_print_mod_list+0x200>
    867a:	bf00      	nop
    867c:	2000127c 	.word	0x2000127c
    8680:	20001280 	.word	0x20001280
    8684:	20001230 	.word	0x20001230
    8688:	20001290 	.word	0x20001290

0000868c <d_print_array_type>:
    868c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    8690:	4604      	mov	r4, r0
    8692:	4617      	mov	r7, r2
    8694:	b153      	cbz	r3, 86ac <d_print_array_type+0x20>
    8696:	461e      	mov	r6, r3
    8698:	689d      	ldr	r5, [r3, #8]
    869a:	b37d      	cbz	r5, 86fc <d_print_array_type+0x70>
    869c:	681b      	ldr	r3, [r3, #0]
    869e:	2b00      	cmp	r3, #0
    86a0:	d1fa      	bne.n	8698 <d_print_array_type+0xc>
    86a2:	4632      	mov	r2, r6
    86a4:	2111      	movs	r1, #17
    86a6:	4620      	mov	r0, r4
    86a8:	f7ff fecc 	bl	8444 <d_print_mod_list>
    86ac:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    86b0:	2bff      	cmp	r3, #255	; 0xff
    86b2:	f000 809d 	beq.w	87f0 <d_print_array_type+0x164>
    86b6:	1c59      	adds	r1, r3, #1
    86b8:	2220      	movs	r2, #32
    86ba:	29ff      	cmp	r1, #255	; 0xff
    86bc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    86c0:	54e2      	strb	r2, [r4, r3]
    86c2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    86c6:	d027      	beq.n	8718 <d_print_array_type+0x8c>
    86c8:	225b      	movs	r2, #91	; 0x5b
    86ca:	1c4b      	adds	r3, r1, #1
    86cc:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    86d0:	5462      	strb	r2, [r4, r1]
    86d2:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    86d6:	68fa      	ldr	r2, [r7, #12]
    86d8:	b12a      	cbz	r2, 86e6 <d_print_array_type+0x5a>
    86da:	2111      	movs	r1, #17
    86dc:	4620      	mov	r0, r4
    86de:	f7ff fa7b 	bl	7bd8 <d_print_comp>
    86e2:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    86e6:	2bff      	cmp	r3, #255	; 0xff
    86e8:	d02f      	beq.n	874a <d_print_array_type+0xbe>
    86ea:	1c59      	adds	r1, r3, #1
    86ec:	225d      	movs	r2, #93	; 0x5d
    86ee:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    86f2:	54e2      	strb	r2, [r4, r3]
    86f4:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    86f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    86fc:	685b      	ldr	r3, [r3, #4]
    86fe:	781b      	ldrb	r3, [r3, #0]
    8700:	2b2a      	cmp	r3, #42	; 0x2a
    8702:	d132      	bne.n	876a <d_print_array_type+0xde>
    8704:	2111      	movs	r1, #17
    8706:	462b      	mov	r3, r5
    8708:	4632      	mov	r2, r6
    870a:	4620      	mov	r0, r4
    870c:	f7ff fe9a 	bl	8444 <d_print_mod_list>
    8710:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8714:	29ff      	cmp	r1, #255	; 0xff
    8716:	d1d7      	bne.n	86c8 <d_print_array_type+0x3c>
    8718:	2200      	movs	r2, #0
    871a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    871e:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
    8722:	4620      	mov	r0, r4
    8724:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8728:	4798      	blx	r3
    872a:	225b      	movs	r2, #91	; 0x5b
    872c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8730:	7022      	strb	r2, [r4, #0]
    8732:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8736:	68fa      	ldr	r2, [r7, #12]
    8738:	1c59      	adds	r1, r3, #1
    873a:	2301      	movs	r3, #1
    873c:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
    8740:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8744:	2a00      	cmp	r2, #0
    8746:	d1c8      	bne.n	86da <d_print_array_type+0x4e>
    8748:	e7cf      	b.n	86ea <d_print_array_type+0x5e>
    874a:	2500      	movs	r5, #0
    874c:	4619      	mov	r1, r3
    874e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8752:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8756:	4620      	mov	r0, r4
    8758:	4798      	blx	r3
    875a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    875e:	2101      	movs	r1, #1
    8760:	440b      	add	r3, r1
    8762:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8766:	462b      	mov	r3, r5
    8768:	e7c0      	b.n	86ec <d_print_array_type+0x60>
    876a:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 8850 <d_print_array_type+0x1c4>
    876e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8772:	f04f 0920 	mov.w	r9, #32
    8776:	f108 0a01 	add.w	sl, r8, #1
    877a:	e00c      	b.n	8796 <d_print_array_type+0x10a>
    877c:	460b      	mov	r3, r1
    877e:	45d0      	cmp	r8, sl
    8780:	f101 0101 	add.w	r1, r1, #1
    8784:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8788:	f804 9003 	strb.w	r9, [r4, r3]
    878c:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
    8790:	d01a      	beq.n	87c8 <d_print_array_type+0x13c>
    8792:	f818 9f01 	ldrb.w	r9, [r8, #1]!
    8796:	29ff      	cmp	r1, #255	; 0xff
    8798:	d1f0      	bne.n	877c <d_print_array_type+0xf0>
    879a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    879e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    87a2:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    87a6:	4620      	mov	r0, r4
    87a8:	4798      	blx	r3
    87aa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    87ae:	3301      	adds	r3, #1
    87b0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    87b4:	2300      	movs	r3, #0
    87b6:	2101      	movs	r1, #1
    87b8:	45d0      	cmp	r8, sl
    87ba:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    87be:	f804 9003 	strb.w	r9, [r4, r3]
    87c2:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
    87c6:	d1e4      	bne.n	8792 <d_print_array_type+0x106>
    87c8:	2111      	movs	r1, #17
    87ca:	2300      	movs	r3, #0
    87cc:	4632      	mov	r2, r6
    87ce:	4620      	mov	r0, r4
    87d0:	f7ff fe38 	bl	8444 <d_print_mod_list>
    87d4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    87d8:	29ff      	cmp	r1, #255	; 0xff
    87da:	d026      	beq.n	882a <d_print_array_type+0x19e>
    87dc:	1c4b      	adds	r3, r1, #1
    87de:	2229      	movs	r2, #41	; 0x29
    87e0:	2bff      	cmp	r3, #255	; 0xff
    87e2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    87e6:	5462      	strb	r2, [r4, r1]
    87e8:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    87ec:	f47f af63 	bne.w	86b6 <d_print_array_type+0x2a>
    87f0:	2200      	movs	r2, #0
    87f2:	4619      	mov	r1, r3
    87f4:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
    87f8:	f8d4 5108 	ldr.w	r5, [r4, #264]	; 0x108
    87fc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8800:	4620      	mov	r0, r4
    8802:	47a8      	blx	r5
    8804:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8808:	225b      	movs	r2, #91	; 0x5b
    880a:	f645 3120 	movw	r1, #23328	; 0x5b20
    880e:	8021      	strh	r1, [r4, #0]
    8810:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8814:	68fa      	ldr	r2, [r7, #12]
    8816:	3301      	adds	r3, #1
    8818:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    881c:	2302      	movs	r3, #2
    881e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8822:	2a00      	cmp	r2, #0
    8824:	f47f af59 	bne.w	86da <d_print_array_type+0x4e>
    8828:	e75f      	b.n	86ea <d_print_array_type+0x5e>
    882a:	2200      	movs	r2, #0
    882c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8830:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
    8834:	4620      	mov	r0, r4
    8836:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    883a:	4798      	blx	r3
    883c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8840:	2229      	movs	r2, #41	; 0x29
    8842:	3301      	adds	r3, #1
    8844:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8848:	7022      	strb	r2, [r4, #0]
    884a:	2301      	movs	r3, #1
    884c:	e733      	b.n	86b6 <d_print_array_type+0x2a>
    884e:	bf00      	nop
    8850:	20001488 	.word	0x20001488

00008854 <d_print_expr_op>:
    8854:	7811      	ldrb	r1, [r2, #0]
    8856:	2932      	cmp	r1, #50	; 0x32
    8858:	d002      	beq.n	8860 <d_print_expr_op+0xc>
    885a:	2111      	movs	r1, #17
    885c:	f7ff b9bc 	b.w	7bd8 <d_print_comp>
    8860:	68d3      	ldr	r3, [r2, #12]
    8862:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    8866:	e9d3 5701 	ldrd	r5, r7, [r3, #4]
    886a:	b367      	cbz	r7, 88c6 <d_print_expr_op+0x72>
    886c:	442f      	add	r7, r5
    886e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8872:	4604      	mov	r4, r0
    8874:	3d01      	subs	r5, #1
    8876:	3f01      	subs	r7, #1
    8878:	f04f 0800 	mov.w	r8, #0
    887c:	e009      	b.n	8892 <d_print_expr_op+0x3e>
    887e:	460b      	mov	r3, r1
    8880:	42bd      	cmp	r5, r7
    8882:	f101 0101 	add.w	r1, r1, #1
    8886:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    888a:	54e6      	strb	r6, [r4, r3]
    888c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8890:	d019      	beq.n	88c6 <d_print_expr_op+0x72>
    8892:	29ff      	cmp	r1, #255	; 0xff
    8894:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    8898:	d1f1      	bne.n	887e <d_print_expr_op+0x2a>
    889a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    889e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    88a2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    88a6:	4620      	mov	r0, r4
    88a8:	4798      	blx	r3
    88aa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    88ae:	3301      	adds	r3, #1
    88b0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    88b4:	2300      	movs	r3, #0
    88b6:	2101      	movs	r1, #1
    88b8:	42bd      	cmp	r5, r7
    88ba:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    88be:	54e6      	strb	r6, [r4, r3]
    88c0:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    88c4:	d1e5      	bne.n	8892 <d_print_expr_op+0x3e>
    88c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    88ca:	bf00      	nop

000088cc <d_demangle_callback.constprop.0>:
    88cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    88d0:	ed2d 8b02 	vpush	{d8}
    88d4:	b0e7      	sub	sp, #412	; 0x19c
    88d6:	7803      	ldrb	r3, [r0, #0]
    88d8:	af00      	add	r7, sp, #0
    88da:	2b5f      	cmp	r3, #95	; 0x5f
    88dc:	e9c7 2100 	strd	r2, r1, [r7]
    88e0:	4605      	mov	r5, r0
    88e2:	f000 8144 	beq.w	8b6e <d_demangle_callback.constprop.0+0x2a2>
    88e6:	49a9      	ldr	r1, [pc, #676]	; (8b8c <d_demangle_callback.constprop.0+0x2c0>)
    88e8:	2208      	movs	r2, #8
    88ea:	4628      	mov	r0, r5
    88ec:	f001 fd44 	bl	a378 <strncmp>
    88f0:	2800      	cmp	r0, #0
    88f2:	f000 8107 	beq.w	8b04 <d_demangle_callback.constprop.0+0x238>
    88f6:	f04f 0900 	mov.w	r9, #0
    88fa:	2301      	movs	r3, #1
    88fc:	f1b9 0f02 	cmp.w	r9, #2
    8900:	647b      	str	r3, [r7, #68]	; 0x44
    8902:	bf0c      	ite	eq
    8904:	2345      	moveq	r3, #69	; 0x45
    8906:	2346      	movne	r3, #70	; 0x46
    8908:	f1a9 0a02 	sub.w	sl, r9, #2
    890c:	ee08 3a10 	vmov	s16, r3
    8910:	fa5f fa8a 	uxtb.w	sl, sl
    8914:	4628      	mov	r0, r5
    8916:	f006 f9b3 	bl	ec80 <strlen>
    891a:	182b      	adds	r3, r5, r0
    891c:	0042      	lsls	r2, r0, #1
    891e:	2100      	movs	r1, #0
    8920:	e9c7 5303 	strd	r5, r3, [r7, #12]
    8924:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
    8928:	f04f 0311 	mov.w	r3, #17
    892c:	e9c7 3505 	strd	r3, r5, [r7, #20]
    8930:	e9c7 1208 	strd	r1, r2, [r7, #32]
    8934:	e9c7 100b 	strd	r1, r0, [r7, #44]	; 0x2c
    8938:	e9c7 110d 	strd	r1, r1, [r7, #52]	; 0x34
    893c:	e9c7 110f 	strd	r1, r1, [r7, #60]	; 0x3c
    8940:	64b9      	str	r1, [r7, #72]	; 0x48
    8942:	f200 811b 	bhi.w	8b7c <d_demangle_callback.constprop.0+0x2b0>
    8946:	0083      	lsls	r3, r0, #2
    8948:	46e8      	mov	r8, sp
    894a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
    894e:	3307      	adds	r3, #7
    8950:	eba8 00c0 	sub.w	r0, r8, r0, lsl #3
    8954:	4685      	mov	sp, r0
    8956:	f023 0307 	bic.w	r3, r3, #7
    895a:	466e      	mov	r6, sp
    895c:	f1b9 0f01 	cmp.w	r9, #1
    8960:	ebad 0d03 	sub.w	sp, sp, r3
    8964:	61fe      	str	r6, [r7, #28]
    8966:	f8c7 d028 	str.w	sp, [r7, #40]	; 0x28
    896a:	d040      	beq.n	89ee <d_demangle_callback.constprop.0+0x122>
    896c:	f1ba 0f01 	cmp.w	sl, #1
    8970:	d835      	bhi.n	89de <d_demangle_callback.constprop.0+0x112>
    8972:	7aeb      	ldrb	r3, [r5, #11]
    8974:	f105 040b 	add.w	r4, r5, #11
    8978:	2b5f      	cmp	r3, #95	; 0x5f
    897a:	61bc      	str	r4, [r7, #24]
    897c:	d103      	bne.n	8986 <d_demangle_callback.constprop.0+0xba>
    897e:	7b2b      	ldrb	r3, [r5, #12]
    8980:	2b5a      	cmp	r3, #90	; 0x5a
    8982:	f000 80b0 	beq.w	8ae6 <d_demangle_callback.constprop.0+0x21a>
    8986:	2a00      	cmp	r2, #0
    8988:	f340 80ab 	ble.w	8ae2 <d_demangle_callback.constprop.0+0x216>
    898c:	4620      	mov	r0, r4
    898e:	f006 f977 	bl	ec80 <strlen>
    8992:	2300      	movs	r3, #0
    8994:	2201      	movs	r2, #1
    8996:	e9c6 3301 	strd	r3, r3, [r6, #4]
    899a:	623a      	str	r2, [r7, #32]
    899c:	2800      	cmp	r0, #0
    899e:	f000 80a0 	beq.w	8ae2 <d_demangle_callback.constprop.0+0x216>
    89a2:	e9c6 4003 	strd	r4, r0, [r6, #12]
    89a6:	7033      	strb	r3, [r6, #0]
    89a8:	2300      	movs	r3, #0
    89aa:	4632      	mov	r2, r6
    89ac:	ee18 1a10 	vmov	r1, s16
    89b0:	f107 000c 	add.w	r0, r7, #12
    89b4:	f7fa fc6c 	bl	3290 <d_make_comp>
    89b8:	4606      	mov	r6, r0
    89ba:	4620      	mov	r0, r4
    89bc:	f006 f960 	bl	ec80 <strlen>
    89c0:	1823      	adds	r3, r4, r0
    89c2:	61bb      	str	r3, [r7, #24]
    89c4:	5c23      	ldrb	r3, [r4, r0]
    89c6:	b913      	cbnz	r3, 89ce <d_demangle_callback.constprop.0+0x102>
    89c8:	2e00      	cmp	r6, #0
    89ca:	f040 80e1 	bne.w	8b90 <d_demangle_callback.constprop.0+0x2c4>
    89ce:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    89d0:	3301      	adds	r3, #1
    89d2:	f040 80c3 	bne.w	8b5c <d_demangle_callback.constprop.0+0x290>
    89d6:	2300      	movs	r3, #0
    89d8:	647b      	str	r3, [r7, #68]	; 0x44
    89da:	46c5      	mov	sp, r8
    89dc:	e79a      	b.n	8914 <d_demangle_callback.constprop.0+0x48>
    89de:	f107 000c 	add.w	r0, r7, #12
    89e2:	f7fb f8a7 	bl	3b34 <d_type>
    89e6:	69bb      	ldr	r3, [r7, #24]
    89e8:	4606      	mov	r6, r0
    89ea:	781b      	ldrb	r3, [r3, #0]
    89ec:	e7eb      	b.n	89c6 <d_demangle_callback.constprop.0+0xfa>
    89ee:	782b      	ldrb	r3, [r5, #0]
    89f0:	2b5f      	cmp	r3, #95	; 0x5f
    89f2:	d1ec      	bne.n	89ce <d_demangle_callback.constprop.0+0x102>
    89f4:	786b      	ldrb	r3, [r5, #1]
    89f6:	1c6a      	adds	r2, r5, #1
    89f8:	2b5a      	cmp	r3, #90	; 0x5a
    89fa:	61ba      	str	r2, [r7, #24]
    89fc:	d1e7      	bne.n	89ce <d_demangle_callback.constprop.0+0x102>
    89fe:	78ab      	ldrb	r3, [r5, #2]
    8a00:	1caa      	adds	r2, r5, #2
    8a02:	2b47      	cmp	r3, #71	; 0x47
    8a04:	61ba      	str	r2, [r7, #24]
    8a06:	f000 809b 	beq.w	8b40 <d_demangle_callback.constprop.0+0x274>
    8a0a:	2b54      	cmp	r3, #84	; 0x54
    8a0c:	f000 8098 	beq.w	8b40 <d_demangle_callback.constprop.0+0x274>
    8a10:	4649      	mov	r1, r9
    8a12:	f107 000c 	add.w	r0, r7, #12
    8a16:	f7fc ffe9 	bl	59ec <d_encoding.part.0>
    8a1a:	697b      	ldr	r3, [r7, #20]
    8a1c:	07db      	lsls	r3, r3, #31
    8a1e:	4606      	mov	r6, r0
    8a20:	f140 8097 	bpl.w	8b52 <d_demangle_callback.constprop.0+0x286>
    8a24:	69ba      	ldr	r2, [r7, #24]
    8a26:	7813      	ldrb	r3, [r2, #0]
    8a28:	2b2e      	cmp	r3, #46	; 0x2e
    8a2a:	d1cc      	bne.n	89c6 <d_demangle_callback.constprop.0+0xfa>
    8a2c:	4633      	mov	r3, r6
    8a2e:	4616      	mov	r6, r2
    8a30:	461a      	mov	r2, r3
    8a32:	7873      	ldrb	r3, [r6, #1]
    8a34:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
    8a38:	2919      	cmp	r1, #25
    8a3a:	f04f 0b00 	mov.w	fp, #0
    8a3e:	d945      	bls.n	8acc <d_demangle_callback.constprop.0+0x200>
    8a40:	2b5f      	cmp	r3, #95	; 0x5f
    8a42:	d043      	beq.n	8acc <d_demangle_callback.constprop.0+0x200>
    8a44:	3b30      	subs	r3, #48	; 0x30
    8a46:	2b09      	cmp	r3, #9
    8a48:	f200 80fd 	bhi.w	8c46 <d_demangle_callback.constprop.0+0x37a>
    8a4c:	7831      	ldrb	r1, [r6, #0]
    8a4e:	4634      	mov	r4, r6
    8a50:	292e      	cmp	r1, #46	; 0x2e
    8a52:	d112      	bne.n	8a7a <d_demangle_callback.constprop.0+0x1ae>
    8a54:	7863      	ldrb	r3, [r4, #1]
    8a56:	3b30      	subs	r3, #48	; 0x30
    8a58:	2b09      	cmp	r3, #9
    8a5a:	d80e      	bhi.n	8a7a <d_demangle_callback.constprop.0+0x1ae>
    8a5c:	78a3      	ldrb	r3, [r4, #2]
    8a5e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    8a62:	1ca0      	adds	r0, r4, #2
    8a64:	2909      	cmp	r1, #9
    8a66:	4604      	mov	r4, r0
    8a68:	d805      	bhi.n	8a76 <d_demangle_callback.constprop.0+0x1aa>
    8a6a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
    8a6e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    8a72:	2909      	cmp	r1, #9
    8a74:	d9f9      	bls.n	8a6a <d_demangle_callback.constprop.0+0x19e>
    8a76:	2b2e      	cmp	r3, #46	; 0x2e
    8a78:	d0ec      	beq.n	8a54 <d_demangle_callback.constprop.0+0x188>
    8a7a:	e9d7 1308 	ldrd	r1, r3, [r7, #32]
    8a7e:	4299      	cmp	r1, r3
    8a80:	61bc      	str	r4, [r7, #24]
    8a82:	eba4 0006 	sub.w	r0, r4, r6
    8a86:	da67      	bge.n	8b58 <d_demangle_callback.constprop.0+0x28c>
    8a88:	f8d7 c01c 	ldr.w	ip, [r7, #28]
    8a8c:	eb01 0e81 	add.w	lr, r1, r1, lsl #2
    8a90:	eb0c 038e 	add.w	r3, ip, lr, lsl #2
    8a94:	3101      	adds	r1, #1
    8a96:	2800      	cmp	r0, #0
    8a98:	e9c3 bb01 	strd	fp, fp, [r3, #4]
    8a9c:	6239      	str	r1, [r7, #32]
    8a9e:	dd5b      	ble.n	8b58 <d_demangle_callback.constprop.0+0x28c>
    8aa0:	e9c3 bb01 	strd	fp, fp, [r3, #4]
    8aa4:	f80c b02e 	strb.w	fp, [ip, lr, lsl #2]
    8aa8:	e9c3 6003 	strd	r6, r0, [r3, #12]
    8aac:	214f      	movs	r1, #79	; 0x4f
    8aae:	f107 000c 	add.w	r0, r7, #12
    8ab2:	f7fa fbed 	bl	3290 <d_make_comp>
    8ab6:	7823      	ldrb	r3, [r4, #0]
    8ab8:	2b2e      	cmp	r3, #46	; 0x2e
    8aba:	4602      	mov	r2, r0
    8abc:	f040 80c1 	bne.w	8c42 <d_demangle_callback.constprop.0+0x376>
    8ac0:	4626      	mov	r6, r4
    8ac2:	7873      	ldrb	r3, [r6, #1]
    8ac4:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
    8ac8:	2919      	cmp	r1, #25
    8aca:	d8b9      	bhi.n	8a40 <d_demangle_callback.constprop.0+0x174>
    8acc:	1cb3      	adds	r3, r6, #2
    8ace:	461c      	mov	r4, r3
    8ad0:	f813 1b01 	ldrb.w	r1, [r3], #1
    8ad4:	f1a1 0061 	sub.w	r0, r1, #97	; 0x61
    8ad8:	2819      	cmp	r0, #25
    8ada:	d9f8      	bls.n	8ace <d_demangle_callback.constprop.0+0x202>
    8adc:	295f      	cmp	r1, #95	; 0x5f
    8ade:	d0f6      	beq.n	8ace <d_demangle_callback.constprop.0+0x202>
    8ae0:	e7b6      	b.n	8a50 <d_demangle_callback.constprop.0+0x184>
    8ae2:	2600      	movs	r6, #0
    8ae4:	e760      	b.n	89a8 <d_demangle_callback.constprop.0+0xdc>
    8ae6:	7b6b      	ldrb	r3, [r5, #13]
    8ae8:	f105 020d 	add.w	r2, r5, #13
    8aec:	2b47      	cmp	r3, #71	; 0x47
    8aee:	61ba      	str	r2, [r7, #24]
    8af0:	f107 000c 	add.w	r0, r7, #12
    8af4:	d001      	beq.n	8afa <d_demangle_callback.constprop.0+0x22e>
    8af6:	2b54      	cmp	r3, #84	; 0x54
    8af8:	d11d      	bne.n	8b36 <d_demangle_callback.constprop.0+0x26a>
    8afa:	f7fc fbef 	bl	52dc <d_special_name>
    8afe:	69bc      	ldr	r4, [r7, #24]
    8b00:	4606      	mov	r6, r0
    8b02:	e751      	b.n	89a8 <d_demangle_callback.constprop.0+0xdc>
    8b04:	7a2b      	ldrb	r3, [r5, #8]
    8b06:	2b2e      	cmp	r3, #46	; 0x2e
    8b08:	d004      	beq.n	8b14 <d_demangle_callback.constprop.0+0x248>
    8b0a:	2b5f      	cmp	r3, #95	; 0x5f
    8b0c:	d002      	beq.n	8b14 <d_demangle_callback.constprop.0+0x248>
    8b0e:	2b24      	cmp	r3, #36	; 0x24
    8b10:	f47f aef1 	bne.w	88f6 <d_demangle_callback.constprop.0+0x2a>
    8b14:	7a6b      	ldrb	r3, [r5, #9]
    8b16:	2b44      	cmp	r3, #68	; 0x44
    8b18:	d002      	beq.n	8b20 <d_demangle_callback.constprop.0+0x254>
    8b1a:	2b49      	cmp	r3, #73	; 0x49
    8b1c:	f47f aeeb 	bne.w	88f6 <d_demangle_callback.constprop.0+0x2a>
    8b20:	7aaa      	ldrb	r2, [r5, #10]
    8b22:	2a5f      	cmp	r2, #95	; 0x5f
    8b24:	f47f aee7 	bne.w	88f6 <d_demangle_callback.constprop.0+0x2a>
    8b28:	2b49      	cmp	r3, #73	; 0x49
    8b2a:	bf0c      	ite	eq
    8b2c:	f04f 0902 	moveq.w	r9, #2
    8b30:	f04f 0903 	movne.w	r9, #3
    8b34:	e6e1      	b.n	88fa <d_demangle_callback.constprop.0+0x2e>
    8b36:	f7fc ff59 	bl	59ec <d_encoding.part.0>
    8b3a:	69bc      	ldr	r4, [r7, #24]
    8b3c:	4606      	mov	r6, r0
    8b3e:	e733      	b.n	89a8 <d_demangle_callback.constprop.0+0xdc>
    8b40:	f107 000c 	add.w	r0, r7, #12
    8b44:	f7fc fbca 	bl	52dc <d_special_name>
    8b48:	697b      	ldr	r3, [r7, #20]
    8b4a:	07db      	lsls	r3, r3, #31
    8b4c:	4606      	mov	r6, r0
    8b4e:	f53f af69 	bmi.w	8a24 <d_demangle_callback.constprop.0+0x158>
    8b52:	69bb      	ldr	r3, [r7, #24]
    8b54:	781b      	ldrb	r3, [r3, #0]
    8b56:	e736      	b.n	89c6 <d_demangle_callback.constprop.0+0xfa>
    8b58:	2300      	movs	r3, #0
    8b5a:	e7a7      	b.n	8aac <d_demangle_callback.constprop.0+0x1e0>
    8b5c:	2000      	movs	r0, #0
    8b5e:	f507 77ce 	add.w	r7, r7, #412	; 0x19c
    8b62:	46c5      	mov	sp, r8
    8b64:	46bd      	mov	sp, r7
    8b66:	ecbd 8b02 	vpop	{d8}
    8b6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8b6e:	7843      	ldrb	r3, [r0, #1]
    8b70:	2b5a      	cmp	r3, #90	; 0x5a
    8b72:	f47f aeb8 	bne.w	88e6 <d_demangle_callback.constprop.0+0x1a>
    8b76:	f04f 0901 	mov.w	r9, #1
    8b7a:	e6be      	b.n	88fa <d_demangle_callback.constprop.0+0x2e>
    8b7c:	4608      	mov	r0, r1
    8b7e:	f507 77ce 	add.w	r7, r7, #412	; 0x19c
    8b82:	46bd      	mov	sp, r7
    8b84:	ecbd 8b02 	vpop	{d8}
    8b88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8b8c:	20001580 	.word	0x20001580
    8b90:	f107 044c 	add.w	r4, r7, #76	; 0x4c
    8b94:	687a      	ldr	r2, [r7, #4]
    8b96:	f8c4 2108 	str.w	r2, [r4, #264]	; 0x108
    8b9a:	4631      	mov	r1, r6
    8b9c:	683a      	ldr	r2, [r7, #0]
    8b9e:	f8c4 210c 	str.w	r2, [r4, #268]	; 0x10c
    8ba2:	4620      	mov	r0, r4
    8ba4:	e9c4 3344 	strd	r3, r3, [r4, #272]	; 0x110
    8ba8:	e9c4 3349 	strd	r3, r3, [r4, #292]	; 0x124
    8bac:	e9c4 3346 	strd	r3, r3, [r4, #280]	; 0x118
    8bb0:	e9c4 334d 	strd	r3, r3, [r4, #308]	; 0x134
    8bb4:	e9c4 3350 	strd	r3, r3, [r4, #320]	; 0x140
    8bb8:	607b      	str	r3, [r7, #4]
    8bba:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8bbe:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8bc2:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
    8bc6:	f8c4 312c 	str.w	r3, [r4, #300]	; 0x12c
    8bca:	f7fa fc53 	bl	3474 <d_count_templates_scopes>
    8bce:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
    8bd2:	687b      	ldr	r3, [r7, #4]
    8bd4:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
    8bd8:	da01      	bge.n	8bde <d_demangle_callback.constprop.0+0x312>
    8bda:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
    8bde:	f8d4 1138 	ldr.w	r1, [r4, #312]	; 0x138
    8be2:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
    8be6:	2901      	cmp	r1, #1
    8be8:	fb01 f303 	mul.w	r3, r1, r3
    8bec:	4632      	mov	r2, r6
    8bee:	bfb8      	it	lt
    8bf0:	2101      	movlt	r1, #1
    8bf2:	466e      	mov	r6, sp
    8bf4:	eba6 01c1 	sub.w	r1, r6, r1, lsl #3
    8bf8:	2b01      	cmp	r3, #1
    8bfa:	468d      	mov	sp, r1
    8bfc:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
    8c00:	4668      	mov	r0, sp
    8c02:	bfb8      	it	lt
    8c04:	2301      	movlt	r3, #1
    8c06:	eba0 03c3 	sub.w	r3, r0, r3, lsl #3
    8c0a:	469d      	mov	sp, r3
    8c0c:	2500      	movs	r5, #0
    8c0e:	f8c4 1130 	str.w	r1, [r4, #304]	; 0x130
    8c12:	4620      	mov	r0, r4
    8c14:	2111      	movs	r1, #17
    8c16:	f8c4 d13c 	str.w	sp, [r4, #316]	; 0x13c
    8c1a:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
    8c1e:	f7fe ffdb 	bl	7bd8 <d_print_comp>
    8c22:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8c26:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8c2a:	5465      	strb	r5, [r4, r1]
    8c2c:	4620      	mov	r0, r4
    8c2e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8c32:	46b5      	mov	sp, r6
    8c34:	4798      	blx	r3
    8c36:	f8d4 0118 	ldr.w	r0, [r4, #280]	; 0x118
    8c3a:	fab0 f080 	clz	r0, r0
    8c3e:	0940      	lsrs	r0, r0, #5
    8c40:	e78d      	b.n	8b5e <d_demangle_callback.constprop.0+0x292>
    8c42:	4606      	mov	r6, r0
    8c44:	e6bf      	b.n	89c6 <d_demangle_callback.constprop.0+0xfa>
    8c46:	4616      	mov	r6, r2
    8c48:	e783      	b.n	8b52 <d_demangle_callback.constprop.0+0x286>
    8c4a:	bf00      	nop

00008c4c <d_print_subexpr>:
    8c4c:	b570      	push	{r4, r5, r6, lr}
    8c4e:	7813      	ldrb	r3, [r2, #0]
    8c50:	2b01      	cmp	r3, #1
    8c52:	b082      	sub	sp, #8
    8c54:	4615      	mov	r5, r2
    8c56:	4604      	mov	r4, r0
    8c58:	d903      	bls.n	8c62 <d_print_subexpr+0x16>
    8c5a:	2b31      	cmp	r3, #49	; 0x31
    8c5c:	d001      	beq.n	8c62 <d_print_subexpr+0x16>
    8c5e:	2b06      	cmp	r3, #6
    8c60:	d138      	bne.n	8cd4 <d_print_subexpr+0x88>
    8c62:	2601      	movs	r6, #1
    8c64:	686b      	ldr	r3, [r5, #4]
    8c66:	2b01      	cmp	r3, #1
    8c68:	dc22      	bgt.n	8cb0 <d_print_subexpr+0x64>
    8c6a:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
    8c6e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    8c72:	dc1d      	bgt.n	8cb0 <d_print_subexpr+0x64>
    8c74:	3301      	adds	r3, #1
    8c76:	3201      	adds	r2, #1
    8c78:	606b      	str	r3, [r5, #4]
    8c7a:	2111      	movs	r1, #17
    8c7c:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
    8c80:	f8c4 211c 	str.w	r2, [r4, #284]	; 0x11c
    8c84:	f8c4 d12c 	str.w	sp, [r4, #300]	; 0x12c
    8c88:	462a      	mov	r2, r5
    8c8a:	4620      	mov	r0, r4
    8c8c:	9301      	str	r3, [sp, #4]
    8c8e:	9500      	str	r5, [sp, #0]
    8c90:	f7fc ff28 	bl	5ae4 <d_print_comp_inner>
    8c94:	686a      	ldr	r2, [r5, #4]
    8c96:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
    8c9a:	9901      	ldr	r1, [sp, #4]
    8c9c:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
    8ca0:	3a01      	subs	r2, #1
    8ca2:	3b01      	subs	r3, #1
    8ca4:	606a      	str	r2, [r5, #4]
    8ca6:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
    8caa:	b136      	cbz	r6, 8cba <d_print_subexpr+0x6e>
    8cac:	b002      	add	sp, #8
    8cae:	bd70      	pop	{r4, r5, r6, pc}
    8cb0:	2301      	movs	r3, #1
    8cb2:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
    8cb6:	2e00      	cmp	r6, #0
    8cb8:	d1f8      	bne.n	8cac <d_print_subexpr+0x60>
    8cba:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8cbe:	29ff      	cmp	r1, #255	; 0xff
    8cc0:	d015      	beq.n	8cee <d_print_subexpr+0xa2>
    8cc2:	1c4a      	adds	r2, r1, #1
    8cc4:	2329      	movs	r3, #41	; 0x29
    8cc6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8cca:	5463      	strb	r3, [r4, r1]
    8ccc:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8cd0:	b002      	add	sp, #8
    8cd2:	bd70      	pop	{r4, r5, r6, pc}
    8cd4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8cd8:	29ff      	cmp	r1, #255	; 0xff
    8cda:	d016      	beq.n	8d0a <d_print_subexpr+0xbe>
    8cdc:	1c4a      	adds	r2, r1, #1
    8cde:	2328      	movs	r3, #40	; 0x28
    8ce0:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8ce4:	2600      	movs	r6, #0
    8ce6:	5463      	strb	r3, [r4, r1]
    8ce8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8cec:	e7ba      	b.n	8c64 <d_print_subexpr+0x18>
    8cee:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8cf2:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    8cf6:	4620      	mov	r0, r4
    8cf8:	4798      	blx	r3
    8cfa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8cfe:	2201      	movs	r2, #1
    8d00:	4413      	add	r3, r2
    8d02:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8d06:	4631      	mov	r1, r6
    8d08:	e7dc      	b.n	8cc4 <d_print_subexpr+0x78>
    8d0a:	2600      	movs	r6, #0
    8d0c:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    8d10:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    8d14:	4798      	blx	r3
    8d16:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8d1a:	2201      	movs	r2, #1
    8d1c:	4413      	add	r3, r2
    8d1e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8d22:	4631      	mov	r1, r6
    8d24:	e7db      	b.n	8cde <d_print_subexpr+0x92>
    8d26:	bf00      	nop

00008d28 <d_maybe_print_fold_expression>:
    8d28:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8d2c:	68d3      	ldr	r3, [r2, #12]
    8d2e:	68db      	ldr	r3, [r3, #12]
    8d30:	681b      	ldr	r3, [r3, #0]
    8d32:	7819      	ldrb	r1, [r3, #0]
    8d34:	2966      	cmp	r1, #102	; 0x66
    8d36:	d178      	bne.n	8e2a <d_maybe_print_fold_expression+0x102>
    8d38:	6912      	ldr	r2, [r2, #16]
    8d3a:	f8d0 7124 	ldr.w	r7, [r0, #292]	; 0x124
    8d3e:	e9d2 8a03 	ldrd	r8, sl, [r2, #12]
    8d42:	f89a 2000 	ldrb.w	r2, [sl]
    8d46:	2a3c      	cmp	r2, #60	; 0x3c
    8d48:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    8d4c:	bf08      	it	eq
    8d4e:	e9da a903 	ldrdeq	sl, r9, [sl, #12]
    8d52:	f8c0 2124 	str.w	r2, [r0, #292]	; 0x124
    8d56:	785b      	ldrb	r3, [r3, #1]
    8d58:	bf18      	it	ne
    8d5a:	f04f 0900 	movne.w	r9, #0
    8d5e:	2b6c      	cmp	r3, #108	; 0x6c
    8d60:	4604      	mov	r4, r0
    8d62:	f000 80a2 	beq.w	8eaa <d_maybe_print_fold_expression+0x182>
    8d66:	d863      	bhi.n	8e30 <d_maybe_print_fold_expression+0x108>
    8d68:	2b4c      	cmp	r3, #76	; 0x4c
    8d6a:	d001      	beq.n	8d70 <d_maybe_print_fold_expression+0x48>
    8d6c:	2b52      	cmp	r3, #82	; 0x52
    8d6e:	d157      	bne.n	8e20 <d_maybe_print_fold_expression+0xf8>
    8d70:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8d74:	29ff      	cmp	r1, #255	; 0xff
    8d76:	f000 80eb 	beq.w	8f50 <d_maybe_print_fold_expression+0x228>
    8d7a:	1c4b      	adds	r3, r1, #1
    8d7c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8d80:	2328      	movs	r3, #40	; 0x28
    8d82:	5463      	strb	r3, [r4, r1]
    8d84:	4652      	mov	r2, sl
    8d86:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8d8a:	2111      	movs	r1, #17
    8d8c:	4620      	mov	r0, r4
    8d8e:	4e78      	ldr	r6, [pc, #480]	; (8f70 <d_maybe_print_fold_expression+0x248>)
    8d90:	f7ff ff5c 	bl	8c4c <d_print_subexpr>
    8d94:	2111      	movs	r1, #17
    8d96:	4642      	mov	r2, r8
    8d98:	4620      	mov	r0, r4
    8d9a:	f7ff fd5b 	bl	8854 <d_print_expr_op>
    8d9e:	f106 0b02 	add.w	fp, r6, #2
    8da2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8da6:	252e      	movs	r5, #46	; 0x2e
    8da8:	f04f 0a00 	mov.w	sl, #0
    8dac:	e00b      	b.n	8dc6 <d_maybe_print_fold_expression+0x9e>
    8dae:	460b      	mov	r3, r1
    8db0:	455e      	cmp	r6, fp
    8db2:	f101 0101 	add.w	r1, r1, #1
    8db6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8dba:	54e5      	strb	r5, [r4, r3]
    8dbc:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    8dc0:	d019      	beq.n	8df6 <d_maybe_print_fold_expression+0xce>
    8dc2:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    8dc6:	29ff      	cmp	r1, #255	; 0xff
    8dc8:	d1f1      	bne.n	8dae <d_maybe_print_fold_expression+0x86>
    8dca:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8dce:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8dd2:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
    8dd6:	4620      	mov	r0, r4
    8dd8:	4798      	blx	r3
    8dda:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8dde:	3301      	adds	r3, #1
    8de0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8de4:	2300      	movs	r3, #0
    8de6:	2101      	movs	r1, #1
    8de8:	455e      	cmp	r6, fp
    8dea:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8dee:	54e5      	strb	r5, [r4, r3]
    8df0:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    8df4:	d1e5      	bne.n	8dc2 <d_maybe_print_fold_expression+0x9a>
    8df6:	4642      	mov	r2, r8
    8df8:	2111      	movs	r1, #17
    8dfa:	4620      	mov	r0, r4
    8dfc:	f7ff fd2a 	bl	8854 <d_print_expr_op>
    8e00:	464a      	mov	r2, r9
    8e02:	2111      	movs	r1, #17
    8e04:	4620      	mov	r0, r4
    8e06:	f7ff ff21 	bl	8c4c <d_print_subexpr>
    8e0a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8e0e:	29ff      	cmp	r1, #255	; 0xff
    8e10:	d07f      	beq.n	8f12 <d_maybe_print_fold_expression+0x1ea>
    8e12:	1c4a      	adds	r2, r1, #1
    8e14:	2329      	movs	r3, #41	; 0x29
    8e16:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8e1a:	5463      	strb	r3, [r4, r1]
    8e1c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8e20:	f8c4 7124 	str.w	r7, [r4, #292]	; 0x124
    8e24:	2001      	movs	r0, #1
    8e26:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8e2a:	2000      	movs	r0, #0
    8e2c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8e30:	2b72      	cmp	r3, #114	; 0x72
    8e32:	d1f5      	bne.n	8e20 <d_maybe_print_fold_expression+0xf8>
    8e34:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8e38:	29ff      	cmp	r1, #255	; 0xff
    8e3a:	d07b      	beq.n	8f34 <d_maybe_print_fold_expression+0x20c>
    8e3c:	1c4b      	adds	r3, r1, #1
    8e3e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8e42:	2328      	movs	r3, #40	; 0x28
    8e44:	5463      	strb	r3, [r4, r1]
    8e46:	4652      	mov	r2, sl
    8e48:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8e4c:	2111      	movs	r1, #17
    8e4e:	4620      	mov	r0, r4
    8e50:	4e48      	ldr	r6, [pc, #288]	; (8f74 <d_maybe_print_fold_expression+0x24c>)
    8e52:	f7ff fefb 	bl	8c4c <d_print_subexpr>
    8e56:	4642      	mov	r2, r8
    8e58:	2111      	movs	r1, #17
    8e5a:	4620      	mov	r0, r4
    8e5c:	f7ff fcfa 	bl	8854 <d_print_expr_op>
    8e60:	f106 0903 	add.w	r9, r6, #3
    8e64:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8e68:	252e      	movs	r5, #46	; 0x2e
    8e6a:	f04f 0800 	mov.w	r8, #0
    8e6e:	e00a      	b.n	8e86 <d_maybe_print_fold_expression+0x15e>
    8e70:	460b      	mov	r3, r1
    8e72:	3101      	adds	r1, #1
    8e74:	454e      	cmp	r6, r9
    8e76:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8e7a:	54e5      	strb	r5, [r4, r3]
    8e7c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    8e80:	d0ce      	beq.n	8e20 <d_maybe_print_fold_expression+0xf8>
    8e82:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    8e86:	29ff      	cmp	r1, #255	; 0xff
    8e88:	d1f2      	bne.n	8e70 <d_maybe_print_fold_expression+0x148>
    8e8a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8e8e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8e92:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    8e96:	4620      	mov	r0, r4
    8e98:	4798      	blx	r3
    8e9a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8e9e:	3301      	adds	r3, #1
    8ea0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8ea4:	2101      	movs	r1, #1
    8ea6:	2300      	movs	r3, #0
    8ea8:	e7e4      	b.n	8e74 <d_maybe_print_fold_expression+0x14c>
    8eaa:	4d33      	ldr	r5, [pc, #204]	; (8f78 <d_maybe_print_fold_expression+0x250>)
    8eac:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8eb0:	2628      	movs	r6, #40	; 0x28
    8eb2:	f105 0b03 	add.w	fp, r5, #3
    8eb6:	f04f 0900 	mov.w	r9, #0
    8eba:	e00b      	b.n	8ed4 <d_maybe_print_fold_expression+0x1ac>
    8ebc:	460b      	mov	r3, r1
    8ebe:	45ab      	cmp	fp, r5
    8ec0:	f101 0101 	add.w	r1, r1, #1
    8ec4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8ec8:	54e6      	strb	r6, [r4, r3]
    8eca:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8ece:	d019      	beq.n	8f04 <d_maybe_print_fold_expression+0x1dc>
    8ed0:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    8ed4:	29ff      	cmp	r1, #255	; 0xff
    8ed6:	d1f1      	bne.n	8ebc <d_maybe_print_fold_expression+0x194>
    8ed8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8edc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8ee0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    8ee4:	4620      	mov	r0, r4
    8ee6:	4798      	blx	r3
    8ee8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8eec:	3301      	adds	r3, #1
    8eee:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8ef2:	2300      	movs	r3, #0
    8ef4:	2101      	movs	r1, #1
    8ef6:	45ab      	cmp	fp, r5
    8ef8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8efc:	54e6      	strb	r6, [r4, r3]
    8efe:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8f02:	d1e5      	bne.n	8ed0 <d_maybe_print_fold_expression+0x1a8>
    8f04:	4642      	mov	r2, r8
    8f06:	2111      	movs	r1, #17
    8f08:	4620      	mov	r0, r4
    8f0a:	f7ff fca3 	bl	8854 <d_print_expr_op>
    8f0e:	4652      	mov	r2, sl
    8f10:	e777      	b.n	8e02 <d_maybe_print_fold_expression+0xda>
    8f12:	2500      	movs	r5, #0
    8f14:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8f18:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8f1c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8f20:	4620      	mov	r0, r4
    8f22:	4798      	blx	r3
    8f24:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8f28:	2201      	movs	r2, #1
    8f2a:	4413      	add	r3, r2
    8f2c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8f30:	4629      	mov	r1, r5
    8f32:	e76f      	b.n	8e14 <d_maybe_print_fold_expression+0xec>
    8f34:	2500      	movs	r5, #0
    8f36:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    8f3a:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    8f3e:	4798      	blx	r3
    8f40:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8f44:	3301      	adds	r3, #1
    8f46:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8f4a:	4629      	mov	r1, r5
    8f4c:	2301      	movs	r3, #1
    8f4e:	e776      	b.n	8e3e <d_maybe_print_fold_expression+0x116>
    8f50:	2500      	movs	r5, #0
    8f52:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8f56:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8f5a:	4620      	mov	r0, r4
    8f5c:	4798      	blx	r3
    8f5e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8f62:	3301      	adds	r3, #1
    8f64:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8f68:	4629      	mov	r1, r5
    8f6a:	2301      	movs	r3, #1
    8f6c:	e706      	b.n	8d7c <d_maybe_print_fold_expression+0x54>
    8f6e:	bf00      	nop
    8f70:	2000148c 	.word	0x2000148c
    8f74:	20001258 	.word	0x20001258
    8f78:	20001250 	.word	0x20001250

00008f7c <d_maybe_print_designated_init>:
    8f7c:	7813      	ldrb	r3, [r2, #0]
    8f7e:	f003 03fd 	and.w	r3, r3, #253	; 0xfd
    8f82:	2b38      	cmp	r3, #56	; 0x38
    8f84:	d001      	beq.n	8f8a <d_maybe_print_designated_init+0xe>
    8f86:	2000      	movs	r0, #0
    8f88:	4770      	bx	lr
    8f8a:	68d3      	ldr	r3, [r2, #12]
    8f8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    8f90:	68db      	ldr	r3, [r3, #12]
    8f92:	681f      	ldr	r7, [r3, #0]
    8f94:	783b      	ldrb	r3, [r7, #0]
    8f96:	2b64      	cmp	r3, #100	; 0x64
    8f98:	d002      	beq.n	8fa0 <d_maybe_print_designated_init+0x24>
    8f9a:	2000      	movs	r0, #0
    8f9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    8fa0:	787b      	ldrb	r3, [r7, #1]
    8fa2:	2b69      	cmp	r3, #105	; 0x69
    8fa4:	4604      	mov	r4, r0
    8fa6:	d011      	beq.n	8fcc <d_maybe_print_designated_init+0x50>
    8fa8:	f003 03df 	and.w	r3, r3, #223	; 0xdf
    8fac:	2b58      	cmp	r3, #88	; 0x58
    8fae:	d1f4      	bne.n	8f9a <d_maybe_print_designated_init+0x1e>
    8fb0:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8fb4:	6913      	ldr	r3, [r2, #16]
    8fb6:	29ff      	cmp	r1, #255	; 0xff
    8fb8:	e9d3 5603 	ldrd	r5, r6, [r3, #12]
    8fbc:	f000 808e 	beq.w	90dc <d_maybe_print_designated_init+0x160>
    8fc0:	1c4b      	adds	r3, r1, #1
    8fc2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8fc6:	235b      	movs	r3, #91	; 0x5b
    8fc8:	5463      	strb	r3, [r4, r1]
    8fca:	e00c      	b.n	8fe6 <d_maybe_print_designated_init+0x6a>
    8fcc:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8fd0:	6913      	ldr	r3, [r2, #16]
    8fd2:	29ff      	cmp	r1, #255	; 0xff
    8fd4:	e9d3 5603 	ldrd	r5, r6, [r3, #12]
    8fd8:	f000 80b1 	beq.w	913e <d_maybe_print_designated_init+0x1c2>
    8fdc:	1c4b      	adds	r3, r1, #1
    8fde:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8fe2:	232e      	movs	r3, #46	; 0x2e
    8fe4:	5463      	strb	r3, [r4, r1]
    8fe6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8fea:	462a      	mov	r2, r5
    8fec:	2111      	movs	r1, #17
    8fee:	4620      	mov	r0, r4
    8ff0:	f7fe fdf2 	bl	7bd8 <d_print_comp>
    8ff4:	787b      	ldrb	r3, [r7, #1]
    8ff6:	2b58      	cmp	r3, #88	; 0x58
    8ff8:	d03a      	beq.n	9070 <d_maybe_print_designated_init+0xf4>
    8ffa:	2b69      	cmp	r3, #105	; 0x69
    8ffc:	d00b      	beq.n	9016 <d_maybe_print_designated_init+0x9a>
    8ffe:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    9002:	29ff      	cmp	r1, #255	; 0xff
    9004:	f000 808a 	beq.w	911c <d_maybe_print_designated_init+0x1a0>
    9008:	1c4a      	adds	r2, r1, #1
    900a:	235d      	movs	r3, #93	; 0x5d
    900c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    9010:	5463      	strb	r3, [r4, r1]
    9012:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    9016:	7833      	ldrb	r3, [r6, #0]
    9018:	f003 03fd 	and.w	r3, r3, #253	; 0xfd
    901c:	2b38      	cmp	r3, #56	; 0x38
    901e:	d012      	beq.n	9046 <d_maybe_print_designated_init+0xca>
    9020:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    9024:	29ff      	cmp	r1, #255	; 0xff
    9026:	d068      	beq.n	90fa <d_maybe_print_designated_init+0x17e>
    9028:	1c4a      	adds	r2, r1, #1
    902a:	233d      	movs	r3, #61	; 0x3d
    902c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    9030:	4620      	mov	r0, r4
    9032:	5463      	strb	r3, [r4, r1]
    9034:	4632      	mov	r2, r6
    9036:	2111      	movs	r1, #17
    9038:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    903c:	f7ff fe06 	bl	8c4c <d_print_subexpr>
    9040:	2001      	movs	r0, #1
    9042:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    9046:	68f3      	ldr	r3, [r6, #12]
    9048:	68db      	ldr	r3, [r3, #12]
    904a:	681b      	ldr	r3, [r3, #0]
    904c:	781a      	ldrb	r2, [r3, #0]
    904e:	2a64      	cmp	r2, #100	; 0x64
    9050:	d1e6      	bne.n	9020 <d_maybe_print_designated_init+0xa4>
    9052:	785b      	ldrb	r3, [r3, #1]
    9054:	2b69      	cmp	r3, #105	; 0x69
    9056:	d003      	beq.n	9060 <d_maybe_print_designated_init+0xe4>
    9058:	f003 03df 	and.w	r3, r3, #223	; 0xdf
    905c:	2b58      	cmp	r3, #88	; 0x58
    905e:	d1df      	bne.n	9020 <d_maybe_print_designated_init+0xa4>
    9060:	4620      	mov	r0, r4
    9062:	4632      	mov	r2, r6
    9064:	2111      	movs	r1, #17
    9066:	f7fe fdb7 	bl	7bd8 <d_print_comp>
    906a:	2001      	movs	r0, #1
    906c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    9070:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 915c <d_maybe_print_designated_init+0x1e0>
    9074:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    9078:	f108 0a04 	add.w	sl, r8, #4
    907c:	2520      	movs	r5, #32
    907e:	f04f 0900 	mov.w	r9, #0
    9082:	e00b      	b.n	909c <d_maybe_print_designated_init+0x120>
    9084:	460b      	mov	r3, r1
    9086:	45c2      	cmp	sl, r8
    9088:	f101 0101 	add.w	r1, r1, #1
    908c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    9090:	54e5      	strb	r5, [r4, r3]
    9092:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    9096:	d019      	beq.n	90cc <d_maybe_print_designated_init+0x150>
    9098:	f818 5f01 	ldrb.w	r5, [r8, #1]!
    909c:	29ff      	cmp	r1, #255	; 0xff
    909e:	d1f1      	bne.n	9084 <d_maybe_print_designated_init+0x108>
    90a0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    90a4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    90a8:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    90ac:	4620      	mov	r0, r4
    90ae:	4798      	blx	r3
    90b0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    90b4:	3301      	adds	r3, #1
    90b6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    90ba:	2300      	movs	r3, #0
    90bc:	2101      	movs	r1, #1
    90be:	45c2      	cmp	sl, r8
    90c0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    90c4:	54e5      	strb	r5, [r4, r3]
    90c6:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    90ca:	d1e5      	bne.n	9098 <d_maybe_print_designated_init+0x11c>
    90cc:	68f2      	ldr	r2, [r6, #12]
    90ce:	2111      	movs	r1, #17
    90d0:	4620      	mov	r0, r4
    90d2:	f7fe fd81 	bl	7bd8 <d_print_comp>
    90d6:	6936      	ldr	r6, [r6, #16]
    90d8:	787b      	ldrb	r3, [r7, #1]
    90da:	e78e      	b.n	8ffa <d_maybe_print_designated_init+0x7e>
    90dc:	f04f 0800 	mov.w	r8, #0
    90e0:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    90e4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    90e8:	4798      	blx	r3
    90ea:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    90ee:	3301      	adds	r3, #1
    90f0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    90f4:	4641      	mov	r1, r8
    90f6:	2301      	movs	r3, #1
    90f8:	e763      	b.n	8fc2 <d_maybe_print_designated_init+0x46>
    90fa:	2500      	movs	r5, #0
    90fc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    9100:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    9104:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    9108:	4620      	mov	r0, r4
    910a:	4798      	blx	r3
    910c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    9110:	2201      	movs	r2, #1
    9112:	4413      	add	r3, r2
    9114:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    9118:	4629      	mov	r1, r5
    911a:	e786      	b.n	902a <d_maybe_print_designated_init+0xae>
    911c:	2500      	movs	r5, #0
    911e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    9122:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    9126:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    912a:	4620      	mov	r0, r4
    912c:	4798      	blx	r3
    912e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    9132:	2201      	movs	r2, #1
    9134:	4413      	add	r3, r2
    9136:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    913a:	4629      	mov	r1, r5
    913c:	e765      	b.n	900a <d_maybe_print_designated_init+0x8e>
    913e:	f04f 0800 	mov.w	r8, #0
    9142:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    9146:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    914a:	4798      	blx	r3
    914c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    9150:	3301      	adds	r3, #1
    9152:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    9156:	4641      	mov	r1, r8
    9158:	2301      	movs	r3, #1
    915a:	e740      	b.n	8fde <d_maybe_print_designated_init+0x62>
    915c:	20001248 	.word	0x20001248

00009160 <__cxa_demangle>:
    9160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9164:	461e      	mov	r6, r3
    9166:	b084      	sub	sp, #16
    9168:	2800      	cmp	r0, #0
    916a:	d040      	beq.n	91ee <__cxa_demangle+0x8e>
    916c:	460c      	mov	r4, r1
    916e:	4615      	mov	r5, r2
    9170:	b109      	cbz	r1, 9176 <__cxa_demangle+0x16>
    9172:	2a00      	cmp	r2, #0
    9174:	d03b      	beq.n	91ee <__cxa_demangle+0x8e>
    9176:	2300      	movs	r3, #0
    9178:	4929      	ldr	r1, [pc, #164]	; (9220 <__cxa_demangle+0xc0>)
    917a:	466a      	mov	r2, sp
    917c:	e9cd 3300 	strd	r3, r3, [sp]
    9180:	e9cd 3302 	strd	r3, r3, [sp, #8]
    9184:	f7ff fba2 	bl	88cc <d_demangle_callback.constprop.0>
    9188:	2800      	cmp	r0, #0
    918a:	d039      	beq.n	9200 <__cxa_demangle+0xa0>
    918c:	9b03      	ldr	r3, [sp, #12]
    918e:	9f00      	ldr	r7, [sp, #0]
    9190:	b9d3      	cbnz	r3, 91c8 <__cxa_demangle+0x68>
    9192:	f8dd 8008 	ldr.w	r8, [sp, #8]
    9196:	2f00      	cmp	r7, #0
    9198:	d03c      	beq.n	9214 <__cxa_demangle+0xb4>
    919a:	b32c      	cbz	r4, 91e8 <__cxa_demangle+0x88>
    919c:	4638      	mov	r0, r7
    919e:	f005 fd6f 	bl	ec80 <strlen>
    91a2:	682b      	ldr	r3, [r5, #0]
    91a4:	4298      	cmp	r0, r3
    91a6:	d219      	bcs.n	91dc <__cxa_demangle+0x7c>
    91a8:	4639      	mov	r1, r7
    91aa:	1c42      	adds	r2, r0, #1
    91ac:	4620      	mov	r0, r4
    91ae:	f7f7 fa39 	bl	624 <memcpy>
    91b2:	4638      	mov	r0, r7
    91b4:	f003 f98a 	bl	c4cc <free>
    91b8:	4627      	mov	r7, r4
    91ba:	b10e      	cbz	r6, 91c0 <__cxa_demangle+0x60>
    91bc:	2300      	movs	r3, #0
    91be:	6033      	str	r3, [r6, #0]
    91c0:	4638      	mov	r0, r7
    91c2:	b004      	add	sp, #16
    91c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    91c8:	f04f 0801 	mov.w	r8, #1
    91cc:	2f00      	cmp	r7, #0
    91ce:	d1e4      	bne.n	919a <__cxa_demangle+0x3a>
    91d0:	b18e      	cbz	r6, 91f6 <__cxa_demangle+0x96>
    91d2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    91d6:	6033      	str	r3, [r6, #0]
    91d8:	2700      	movs	r7, #0
    91da:	e7f1      	b.n	91c0 <__cxa_demangle+0x60>
    91dc:	4620      	mov	r0, r4
    91de:	f003 f975 	bl	c4cc <free>
    91e2:	f8c5 8000 	str.w	r8, [r5]
    91e6:	e7e8      	b.n	91ba <__cxa_demangle+0x5a>
    91e8:	2d00      	cmp	r5, #0
    91ea:	d1fa      	bne.n	91e2 <__cxa_demangle+0x82>
    91ec:	e7e5      	b.n	91ba <__cxa_demangle+0x5a>
    91ee:	b116      	cbz	r6, 91f6 <__cxa_demangle+0x96>
    91f0:	f06f 0302 	mvn.w	r3, #2
    91f4:	6033      	str	r3, [r6, #0]
    91f6:	2700      	movs	r7, #0
    91f8:	4638      	mov	r0, r7
    91fa:	b004      	add	sp, #16
    91fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9200:	9800      	ldr	r0, [sp, #0]
    9202:	f003 f963 	bl	c4cc <free>
    9206:	2e00      	cmp	r6, #0
    9208:	d0f5      	beq.n	91f6 <__cxa_demangle+0x96>
    920a:	f06f 0301 	mvn.w	r3, #1
    920e:	6033      	str	r3, [r6, #0]
    9210:	2700      	movs	r7, #0
    9212:	e7d5      	b.n	91c0 <__cxa_demangle+0x60>
    9214:	2e00      	cmp	r6, #0
    9216:	d0ee      	beq.n	91f6 <__cxa_demangle+0x96>
    9218:	f1b8 0f01 	cmp.w	r8, #1
    921c:	d0d9      	beq.n	91d2 <__cxa_demangle+0x72>
    921e:	e7f4      	b.n	920a <__cxa_demangle+0xaa>
    9220:	000035c9 	.word	0x000035c9

00009224 <__cxxabiv1::__is_gxx_exception_class(char*)>:
    9224:	7803      	ldrb	r3, [r0, #0]
    9226:	2b47      	cmp	r3, #71	; 0x47
    9228:	d001      	beq.n	922e <__cxxabiv1::__is_gxx_exception_class(char*)+0xa>
    922a:	2000      	movs	r0, #0
    922c:	4770      	bx	lr
    922e:	7843      	ldrb	r3, [r0, #1]
    9230:	2b4e      	cmp	r3, #78	; 0x4e
    9232:	d1fa      	bne.n	922a <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    9234:	7883      	ldrb	r3, [r0, #2]
    9236:	2b55      	cmp	r3, #85	; 0x55
    9238:	d1f7      	bne.n	922a <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    923a:	78c3      	ldrb	r3, [r0, #3]
    923c:	2b43      	cmp	r3, #67	; 0x43
    923e:	d1f4      	bne.n	922a <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    9240:	7903      	ldrb	r3, [r0, #4]
    9242:	2b43      	cmp	r3, #67	; 0x43
    9244:	d1f1      	bne.n	922a <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    9246:	7943      	ldrb	r3, [r0, #5]
    9248:	2b2b      	cmp	r3, #43	; 0x2b
    924a:	d1ee      	bne.n	922a <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    924c:	7983      	ldrb	r3, [r0, #6]
    924e:	2b2b      	cmp	r3, #43	; 0x2b
    9250:	d1eb      	bne.n	922a <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    9252:	79c0      	ldrb	r0, [r0, #7]
    9254:	2801      	cmp	r0, #1
    9256:	bf8c      	ite	hi
    9258:	2000      	movhi	r0, #0
    925a:	2001      	movls	r0, #1
    925c:	4770      	bx	lr
    925e:	bf00      	nop

00009260 <__cxa_call_terminate>:
    9260:	b510      	push	{r4, lr}
    9262:	b130      	cbz	r0, 9272 <__cxa_call_terminate+0x12>
    9264:	4604      	mov	r4, r0
    9266:	f000 f87d 	bl	9364 <__cxa_begin_catch>
    926a:	4620      	mov	r0, r4
    926c:	f7ff ffda 	bl	9224 <__cxxabiv1::__is_gxx_exception_class(char*)>
    9270:	b908      	cbnz	r0, 9276 <__cxa_call_terminate+0x16>
    9272:	f7f9 fc85 	bl	2b80 <std::terminate()>
    9276:	f854 0c14 	ldr.w	r0, [r4, #-20]
    927a:	f7f9 fc79 	bl	2b70 <__cxxabiv1::__terminate(void (*)())>
    927e:	bf00      	nop

00009280 <__cxa_call_unexpected>:
    9280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9284:	b085      	sub	sp, #20
    9286:	4602      	mov	r2, r0
    9288:	f7ff ffcc 	bl	9224 <__cxxabiv1::__is_gxx_exception_class(char*)>
    928c:	b138      	cbz	r0, 929e <__cxa_call_unexpected+0x1e>
    928e:	e952 7406 	ldrd	r7, r4, [r2, #-24]
    9292:	e9d2 850c 	ldrd	r8, r5, [r2, #48]	; 0x30
    9296:	f8d2 a028 	ldr.w	sl, [r2, #40]	; 0x28
    929a:	2600      	movs	r6, #0
    929c:	e005      	b.n	92aa <__cxa_call_unexpected+0x2a>
    929e:	4604      	mov	r4, r0
    92a0:	4607      	mov	r7, r0
    92a2:	2601      	movs	r6, #1
    92a4:	4605      	mov	r5, r0
    92a6:	4680      	mov	r8, r0
    92a8:	4682      	mov	sl, r0
    92aa:	4610      	mov	r0, r2
    92ac:	f000 f85a 	bl	9364 <__cxa_begin_catch>
    92b0:	b10e      	cbz	r6, 92b6 <__cxa_call_unexpected+0x36>
    92b2:	f7f9 fc73 	bl	2b9c <std::unexpected()>
    92b6:	4638      	mov	r0, r7
    92b8:	f7f9 fc6c 	bl	2b94 <__cxxabiv1::__unexpected(void (*)())>
    92bc:	f000 f852 	bl	9364 <__cxa_begin_catch>
    92c0:	b10e      	cbz	r6, 92c6 <__cxa_call_unexpected+0x46>
    92c2:	f7f9 fc5d 	bl	2b80 <std::terminate()>
    92c6:	f7f9 f935 	bl	2534 <__cxa_get_globals_fast>
    92ca:	6807      	ldr	r7, [r0, #0]
    92cc:	f8df b090 	ldr.w	fp, [pc, #144]	; 9360 <__cxa_call_unexpected+0xe0>
    92d0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
    92d4:	2b01      	cmp	r3, #1
    92d6:	bf0c      	ite	eq
    92d8:	683b      	ldreq	r3, [r7, #0]
    92da:	f107 0378 	addne.w	r3, r7, #120	; 0x78
    92de:	9302      	str	r3, [sp, #8]
    92e0:	f028 0303 	bic.w	r3, r8, #3
    92e4:	9301      	str	r3, [sp, #4]
    92e6:	3720      	adds	r7, #32
    92e8:	f04f 0900 	mov.w	r9, #0
    92ec:	45ca      	cmp	sl, r9
    92ee:	dd20      	ble.n	9332 <__cxa_call_unexpected+0xb2>
    92f0:	f8d5 8000 	ldr.w	r8, [r5]
    92f4:	f1b8 0f00 	cmp.w	r8, #0
    92f8:	d000      	beq.n	92fc <__cxa_call_unexpected+0x7c>
    92fa:	44a8      	add	r8, r5
    92fc:	ab02      	add	r3, sp, #8
    92fe:	2200      	movs	r2, #0
    9300:	4641      	mov	r1, r8
    9302:	4638      	mov	r0, r7
    9304:	f7f9 f844 	bl	2390 <__cxa_type_match>
    9308:	b108      	cbz	r0, 930e <__cxa_call_unexpected+0x8e>
    930a:	f7f9 fccf 	bl	2cac <__cxa_rethrow>
    930e:	f8d8 3000 	ldr.w	r3, [r8]
    9312:	9003      	str	r0, [sp, #12]
    9314:	aa03      	add	r2, sp, #12
    9316:	4640      	mov	r0, r8
    9318:	4659      	mov	r1, fp
    931a:	f8d3 8010 	ldr.w	r8, [r3, #16]
    931e:	2301      	movs	r3, #1
    9320:	47c0      	blx	r8
    9322:	9b01      	ldr	r3, [sp, #4]
    9324:	2800      	cmp	r0, #0
    9326:	bf18      	it	ne
    9328:	4606      	movne	r6, r0
    932a:	f109 0901 	add.w	r9, r9, #1
    932e:	441d      	add	r5, r3
    9330:	e7dc      	b.n	92ec <__cxa_call_unexpected+0x6c>
    9332:	b146      	cbz	r6, 9346 <__cxa_call_unexpected+0xc6>
    9334:	2004      	movs	r0, #4
    9336:	f7f8 ffe9 	bl	230c <__cxa_allocate_exception>
    933a:	4b07      	ldr	r3, [pc, #28]	; (9358 <__cxa_call_unexpected+0xd8>)
    933c:	4a07      	ldr	r2, [pc, #28]	; (935c <__cxa_call_unexpected+0xdc>)
    933e:	4908      	ldr	r1, [pc, #32]	; (9360 <__cxa_call_unexpected+0xe0>)
    9340:	6003      	str	r3, [r0, #0]
    9342:	f7f9 fc97 	bl	2c74 <__cxa_throw>
    9346:	4620      	mov	r0, r4
    9348:	f7f9 fc12 	bl	2b70 <__cxxabiv1::__terminate(void (*)())>
    934c:	f000 f848 	bl	93e0 <__cxa_end_catch>
    9350:	f000 f846 	bl	93e0 <__cxa_end_catch>
    9354:	f7f9 f816 	bl	2384 <__cxa_end_cleanup>
    9358:	20000854 	.word	0x20000854
    935c:	00002519 	.word	0x00002519
    9360:	20000684 	.word	0x20000684

00009364 <__cxa_begin_catch>:
    9364:	b538      	push	{r3, r4, r5, lr}
    9366:	4604      	mov	r4, r0
    9368:	f7f9 f8e8 	bl	253c <__cxa_get_globals>
    936c:	4622      	mov	r2, r4
    936e:	6805      	ldr	r5, [r0, #0]
    9370:	f812 3920 	ldrb.w	r3, [r2], #-32
    9374:	2b47      	cmp	r3, #71	; 0x47
    9376:	d003      	beq.n	9380 <__cxa_begin_catch+0x1c>
    9378:	bb85      	cbnz	r5, 93dc <__cxa_begin_catch+0x78>
    937a:	6002      	str	r2, [r0, #0]
    937c:	4628      	mov	r0, r5
    937e:	bd38      	pop	{r3, r4, r5, pc}
    9380:	7863      	ldrb	r3, [r4, #1]
    9382:	2b4e      	cmp	r3, #78	; 0x4e
    9384:	d1f8      	bne.n	9378 <__cxa_begin_catch+0x14>
    9386:	78a3      	ldrb	r3, [r4, #2]
    9388:	2b55      	cmp	r3, #85	; 0x55
    938a:	d1f5      	bne.n	9378 <__cxa_begin_catch+0x14>
    938c:	78e3      	ldrb	r3, [r4, #3]
    938e:	2b43      	cmp	r3, #67	; 0x43
    9390:	d1f2      	bne.n	9378 <__cxa_begin_catch+0x14>
    9392:	7923      	ldrb	r3, [r4, #4]
    9394:	2b43      	cmp	r3, #67	; 0x43
    9396:	d1ef      	bne.n	9378 <__cxa_begin_catch+0x14>
    9398:	7963      	ldrb	r3, [r4, #5]
    939a:	2b2b      	cmp	r3, #43	; 0x2b
    939c:	d1ec      	bne.n	9378 <__cxa_begin_catch+0x14>
    939e:	79a3      	ldrb	r3, [r4, #6]
    93a0:	2b2b      	cmp	r3, #43	; 0x2b
    93a2:	d1e9      	bne.n	9378 <__cxa_begin_catch+0x14>
    93a4:	79e3      	ldrb	r3, [r4, #7]
    93a6:	2b01      	cmp	r3, #1
    93a8:	d8e6      	bhi.n	9378 <__cxa_begin_catch+0x14>
    93aa:	f854 3c0c 	ldr.w	r3, [r4, #-12]
    93ae:	2b00      	cmp	r3, #0
    93b0:	db11      	blt.n	93d6 <__cxa_begin_catch+0x72>
    93b2:	3301      	adds	r3, #1
    93b4:	f844 3c0c 	str.w	r3, [r4, #-12]
    93b8:	6843      	ldr	r3, [r0, #4]
    93ba:	3b01      	subs	r3, #1
    93bc:	6043      	str	r3, [r0, #4]
    93be:	4295      	cmp	r5, r2
    93c0:	bf18      	it	ne
    93c2:	f844 5c10 	strne.w	r5, [r4, #-16]
    93c6:	6a65      	ldr	r5, [r4, #36]	; 0x24
    93c8:	bf18      	it	ne
    93ca:	6002      	strne	r2, [r0, #0]
    93cc:	4620      	mov	r0, r4
    93ce:	f000 fa13 	bl	97f8 <_Unwind_Complete>
    93d2:	4628      	mov	r0, r5
    93d4:	bd38      	pop	{r3, r4, r5, pc}
    93d6:	f1c3 0301 	rsb	r3, r3, #1
    93da:	e7eb      	b.n	93b4 <__cxa_begin_catch+0x50>
    93dc:	f7f9 fbd0 	bl	2b80 <std::terminate()>

000093e0 <__cxa_end_catch>:
    93e0:	b508      	push	{r3, lr}
    93e2:	f7f9 f8a7 	bl	2534 <__cxa_get_globals_fast>
    93e6:	6803      	ldr	r3, [r0, #0]
    93e8:	b37b      	cbz	r3, 944a <__cxa_end_catch+0x6a>
    93ea:	f893 2020 	ldrb.w	r2, [r3, #32]
    93ee:	2a47      	cmp	r2, #71	; 0x47
    93f0:	d007      	beq.n	9402 <__cxa_end_catch+0x22>
    93f2:	2200      	movs	r2, #0
    93f4:	6002      	str	r2, [r0, #0]
    93f6:	f103 0020 	add.w	r0, r3, #32
    93fa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    93fe:	f000 b9fd 	b.w	97fc <_Unwind_DeleteException>
    9402:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
    9406:	2a4e      	cmp	r2, #78	; 0x4e
    9408:	d1f3      	bne.n	93f2 <__cxa_end_catch+0x12>
    940a:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
    940e:	2a55      	cmp	r2, #85	; 0x55
    9410:	d1ef      	bne.n	93f2 <__cxa_end_catch+0x12>
    9412:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
    9416:	2a43      	cmp	r2, #67	; 0x43
    9418:	d1eb      	bne.n	93f2 <__cxa_end_catch+0x12>
    941a:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
    941e:	2a43      	cmp	r2, #67	; 0x43
    9420:	d1e7      	bne.n	93f2 <__cxa_end_catch+0x12>
    9422:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
    9426:	2a2b      	cmp	r2, #43	; 0x2b
    9428:	d1e3      	bne.n	93f2 <__cxa_end_catch+0x12>
    942a:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
    942e:	2a2b      	cmp	r2, #43	; 0x2b
    9430:	d1df      	bne.n	93f2 <__cxa_end_catch+0x12>
    9432:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
    9436:	2a01      	cmp	r2, #1
    9438:	d8db      	bhi.n	93f2 <__cxa_end_catch+0x12>
    943a:	695a      	ldr	r2, [r3, #20]
    943c:	2a00      	cmp	r2, #0
    943e:	db05      	blt.n	944c <__cxa_end_catch+0x6c>
    9440:	3a01      	subs	r2, #1
    9442:	d008      	beq.n	9456 <__cxa_end_catch+0x76>
    9444:	1c51      	adds	r1, r2, #1
    9446:	d00e      	beq.n	9466 <__cxa_end_catch+0x86>
    9448:	615a      	str	r2, [r3, #20]
    944a:	bd08      	pop	{r3, pc}
    944c:	3201      	adds	r2, #1
    944e:	d1fb      	bne.n	9448 <__cxa_end_catch+0x68>
    9450:	6919      	ldr	r1, [r3, #16]
    9452:	6001      	str	r1, [r0, #0]
    9454:	e7f8      	b.n	9448 <__cxa_end_catch+0x68>
    9456:	691a      	ldr	r2, [r3, #16]
    9458:	6002      	str	r2, [r0, #0]
    945a:	f103 0020 	add.w	r0, r3, #32
    945e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    9462:	f000 b9cb 	b.w	97fc <_Unwind_DeleteException>
    9466:	f7f9 fb8b 	bl	2b80 <std::terminate()>
    946a:	bf00      	nop

0000946c <__cxa_current_exception_type>:
    946c:	b508      	push	{r3, lr}
    946e:	f7f9 f865 	bl	253c <__cxa_get_globals>
    9472:	6800      	ldr	r0, [r0, #0]
    9474:	b130      	cbz	r0, 9484 <__cxa_current_exception_type+0x18>
    9476:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
    947a:	2b01      	cmp	r3, #1
    947c:	bf04      	itt	eq
    947e:	6800      	ldreq	r0, [r0, #0]
    9480:	3878      	subeq	r0, #120	; 0x78
    9482:	6800      	ldr	r0, [r0, #0]
    9484:	bd08      	pop	{r3, pc}
    9486:	bf00      	nop

00009488 <selfrel_offset31>:
    9488:	6803      	ldr	r3, [r0, #0]
    948a:	005a      	lsls	r2, r3, #1
    948c:	bf4c      	ite	mi
    948e:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
    9492:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
    9496:	4418      	add	r0, r3
    9498:	4770      	bx	lr
    949a:	bf00      	nop

0000949c <search_EIT_table>:
    949c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    94a0:	b329      	cbz	r1, 94ee <search_EIT_table+0x52>
    94a2:	1e4f      	subs	r7, r1, #1
    94a4:	4604      	mov	r4, r0
    94a6:	4615      	mov	r5, r2
    94a8:	463e      	mov	r6, r7
    94aa:	f04f 0800 	mov.w	r8, #0
    94ae:	eb08 0106 	add.w	r1, r8, r6
    94b2:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
    94b6:	1049      	asrs	r1, r1, #1
    94b8:	eb04 09c1 	add.w	r9, r4, r1, lsl #3
    94bc:	4648      	mov	r0, r9
    94be:	f7ff ffe3 	bl	9488 <selfrel_offset31>
    94c2:	4603      	mov	r3, r0
    94c4:	00c8      	lsls	r0, r1, #3
    94c6:	3008      	adds	r0, #8
    94c8:	428f      	cmp	r7, r1
    94ca:	4420      	add	r0, r4
    94cc:	d009      	beq.n	94e2 <search_EIT_table+0x46>
    94ce:	42ab      	cmp	r3, r5
    94d0:	d809      	bhi.n	94e6 <search_EIT_table+0x4a>
    94d2:	f7ff ffd9 	bl	9488 <selfrel_offset31>
    94d6:	3801      	subs	r0, #1
    94d8:	42a8      	cmp	r0, r5
    94da:	d20a      	bcs.n	94f2 <search_EIT_table+0x56>
    94dc:	f101 0801 	add.w	r8, r1, #1
    94e0:	e7e5      	b.n	94ae <search_EIT_table+0x12>
    94e2:	42ab      	cmp	r3, r5
    94e4:	d905      	bls.n	94f2 <search_EIT_table+0x56>
    94e6:	4588      	cmp	r8, r1
    94e8:	d001      	beq.n	94ee <search_EIT_table+0x52>
    94ea:	1e4e      	subs	r6, r1, #1
    94ec:	e7df      	b.n	94ae <search_EIT_table+0x12>
    94ee:	f04f 0900 	mov.w	r9, #0
    94f2:	4648      	mov	r0, r9
    94f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

000094f8 <__gnu_unwind_get_pr_addr>:
    94f8:	2801      	cmp	r0, #1
    94fa:	d007      	beq.n	950c <__gnu_unwind_get_pr_addr+0x14>
    94fc:	2802      	cmp	r0, #2
    94fe:	d007      	beq.n	9510 <__gnu_unwind_get_pr_addr+0x18>
    9500:	4b04      	ldr	r3, [pc, #16]	; (9514 <__gnu_unwind_get_pr_addr+0x1c>)
    9502:	2800      	cmp	r0, #0
    9504:	bf0c      	ite	eq
    9506:	4618      	moveq	r0, r3
    9508:	2000      	movne	r0, #0
    950a:	4770      	bx	lr
    950c:	4802      	ldr	r0, [pc, #8]	; (9518 <__gnu_unwind_get_pr_addr+0x20>)
    950e:	4770      	bx	lr
    9510:	4802      	ldr	r0, [pc, #8]	; (951c <__gnu_unwind_get_pr_addr+0x24>)
    9512:	4770      	bx	lr
    9514:	00009bc9 	.word	0x00009bc9
    9518:	00009bd1 	.word	0x00009bd1
    951c:	00009bd9 	.word	0x00009bd9

00009520 <get_eit_entry>:
    9520:	b530      	push	{r4, r5, lr}
    9522:	4b22      	ldr	r3, [pc, #136]	; (95ac <get_eit_entry+0x8c>)
    9524:	b083      	sub	sp, #12
    9526:	4604      	mov	r4, r0
    9528:	1e8d      	subs	r5, r1, #2
    952a:	b343      	cbz	r3, 957e <get_eit_entry+0x5e>
    952c:	a901      	add	r1, sp, #4
    952e:	4628      	mov	r0, r5
    9530:	f3af 8000 	nop.w
    9534:	b1f0      	cbz	r0, 9574 <get_eit_entry+0x54>
    9536:	9901      	ldr	r1, [sp, #4]
    9538:	462a      	mov	r2, r5
    953a:	f7ff ffaf 	bl	949c <search_EIT_table>
    953e:	4601      	mov	r1, r0
    9540:	b1c0      	cbz	r0, 9574 <get_eit_entry+0x54>
    9542:	f7ff ffa1 	bl	9488 <selfrel_offset31>
    9546:	684b      	ldr	r3, [r1, #4]
    9548:	64a0      	str	r0, [r4, #72]	; 0x48
    954a:	2b01      	cmp	r3, #1
    954c:	d02b      	beq.n	95a6 <get_eit_entry+0x86>
    954e:	2b00      	cmp	r3, #0
    9550:	f101 0004 	add.w	r0, r1, #4
    9554:	db25      	blt.n	95a2 <get_eit_entry+0x82>
    9556:	f7ff ff97 	bl	9488 <selfrel_offset31>
    955a:	2300      	movs	r3, #0
    955c:	6523      	str	r3, [r4, #80]	; 0x50
    955e:	6803      	ldr	r3, [r0, #0]
    9560:	64e0      	str	r0, [r4, #76]	; 0x4c
    9562:	2b00      	cmp	r3, #0
    9564:	db12      	blt.n	958c <get_eit_entry+0x6c>
    9566:	f7ff ff8f 	bl	9488 <selfrel_offset31>
    956a:	4603      	mov	r3, r0
    956c:	2000      	movs	r0, #0
    956e:	6123      	str	r3, [r4, #16]
    9570:	b003      	add	sp, #12
    9572:	bd30      	pop	{r4, r5, pc}
    9574:	2300      	movs	r3, #0
    9576:	2009      	movs	r0, #9
    9578:	6123      	str	r3, [r4, #16]
    957a:	b003      	add	sp, #12
    957c:	bd30      	pop	{r4, r5, pc}
    957e:	4b0c      	ldr	r3, [pc, #48]	; (95b0 <get_eit_entry+0x90>)
    9580:	490c      	ldr	r1, [pc, #48]	; (95b4 <get_eit_entry+0x94>)
    9582:	1ac9      	subs	r1, r1, r3
    9584:	10c9      	asrs	r1, r1, #3
    9586:	4618      	mov	r0, r3
    9588:	9101      	str	r1, [sp, #4]
    958a:	e7d5      	b.n	9538 <get_eit_entry+0x18>
    958c:	f3c3 6003 	ubfx	r0, r3, #24, #4
    9590:	f7ff ffb2 	bl	94f8 <__gnu_unwind_get_pr_addr>
    9594:	1e03      	subs	r3, r0, #0
    9596:	bf0c      	ite	eq
    9598:	2009      	moveq	r0, #9
    959a:	2000      	movne	r0, #0
    959c:	6123      	str	r3, [r4, #16]
    959e:	b003      	add	sp, #12
    95a0:	bd30      	pop	{r4, r5, pc}
    95a2:	2301      	movs	r3, #1
    95a4:	e7da      	b.n	955c <get_eit_entry+0x3c>
    95a6:	2300      	movs	r3, #0
    95a8:	2005      	movs	r0, #5
    95aa:	e7e0      	b.n	956e <get_eit_entry+0x4e>
    95ac:	00000000 	.word	0x00000000
    95b0:	00010c74 	.word	0x00010c74
    95b4:	00010f4c 	.word	0x00010f4c

000095b8 <restore_non_core_regs>:
    95b8:	6803      	ldr	r3, [r0, #0]
    95ba:	07da      	lsls	r2, r3, #31
    95bc:	b510      	push	{r4, lr}
    95be:	4604      	mov	r4, r0
    95c0:	d406      	bmi.n	95d0 <restore_non_core_regs+0x18>
    95c2:	079b      	lsls	r3, r3, #30
    95c4:	f100 0048 	add.w	r0, r0, #72	; 0x48
    95c8:	d509      	bpl.n	95de <restore_non_core_regs+0x26>
    95ca:	f000 fc75 	bl	9eb8 <__gnu_Unwind_Restore_VFP_D>
    95ce:	6823      	ldr	r3, [r4, #0]
    95d0:	0759      	lsls	r1, r3, #29
    95d2:	d509      	bpl.n	95e8 <restore_non_core_regs+0x30>
    95d4:	071a      	lsls	r2, r3, #28
    95d6:	d50e      	bpl.n	95f6 <restore_non_core_regs+0x3e>
    95d8:	06db      	lsls	r3, r3, #27
    95da:	d513      	bpl.n	9604 <restore_non_core_regs+0x4c>
    95dc:	bd10      	pop	{r4, pc}
    95de:	f000 fc63 	bl	9ea8 <__gnu_Unwind_Restore_VFP>
    95e2:	6823      	ldr	r3, [r4, #0]
    95e4:	0759      	lsls	r1, r3, #29
    95e6:	d4f5      	bmi.n	95d4 <restore_non_core_regs+0x1c>
    95e8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
    95ec:	f000 fc6c 	bl	9ec8 <__gnu_Unwind_Restore_VFP_D_16_to_31>
    95f0:	6823      	ldr	r3, [r4, #0]
    95f2:	071a      	lsls	r2, r3, #28
    95f4:	d4f0      	bmi.n	95d8 <restore_non_core_regs+0x20>
    95f6:	f504 70a8 	add.w	r0, r4, #336	; 0x150
    95fa:	f000 fc6d 	bl	9ed8 <__gnu_Unwind_Restore_WMMXD>
    95fe:	6823      	ldr	r3, [r4, #0]
    9600:	06db      	lsls	r3, r3, #27
    9602:	d4eb      	bmi.n	95dc <restore_non_core_regs+0x24>
    9604:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
    9608:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    960c:	f000 bca8 	b.w	9f60 <__gnu_Unwind_Restore_WMMXC>

00009610 <_Unwind_decode_typeinfo_ptr.constprop.0>:
    9610:	4603      	mov	r3, r0
    9612:	6800      	ldr	r0, [r0, #0]
    9614:	b100      	cbz	r0, 9618 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
    9616:	4418      	add	r0, r3
    9618:	4770      	bx	lr
    961a:	bf00      	nop

0000961c <_Unwind_DebugHook>:
    961c:	4770      	bx	lr
    961e:	bf00      	nop

00009620 <unwind_phase2>:
    9620:	b570      	push	{r4, r5, r6, lr}
    9622:	4604      	mov	r4, r0
    9624:	460e      	mov	r6, r1
    9626:	6c31      	ldr	r1, [r6, #64]	; 0x40
    9628:	4620      	mov	r0, r4
    962a:	f7ff ff79 	bl	9520 <get_eit_entry>
    962e:	4605      	mov	r5, r0
    9630:	b988      	cbnz	r0, 9656 <unwind_phase2+0x36>
    9632:	6c32      	ldr	r2, [r6, #64]	; 0x40
    9634:	6162      	str	r2, [r4, #20]
    9636:	6923      	ldr	r3, [r4, #16]
    9638:	4632      	mov	r2, r6
    963a:	4621      	mov	r1, r4
    963c:	2001      	movs	r0, #1
    963e:	4798      	blx	r3
    9640:	2808      	cmp	r0, #8
    9642:	d0f0      	beq.n	9626 <unwind_phase2+0x6>
    9644:	2807      	cmp	r0, #7
    9646:	d106      	bne.n	9656 <unwind_phase2+0x36>
    9648:	4628      	mov	r0, r5
    964a:	6c31      	ldr	r1, [r6, #64]	; 0x40
    964c:	f7ff ffe6 	bl	961c <_Unwind_DebugHook>
    9650:	1d30      	adds	r0, r6, #4
    9652:	f000 fc1d 	bl	9e90 <__restore_core_regs>
    9656:	f7f7 f9a9 	bl	9ac <abort>
    965a:	bf00      	nop

0000965c <unwind_phase2_forced>:
    965c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    9660:	1d0d      	adds	r5, r1, #4
    9662:	f8d0 800c 	ldr.w	r8, [r0, #12]
    9666:	f8d0 9018 	ldr.w	r9, [r0, #24]
    966a:	4607      	mov	r7, r0
    966c:	4614      	mov	r4, r2
    966e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    9670:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
    9674:	f10d 0c0c 	add.w	ip, sp, #12
    9678:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
    967c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    967e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
    9682:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    9684:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
    9688:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
    968c:	ae02      	add	r6, sp, #8
    968e:	f04f 0e00 	mov.w	lr, #0
    9692:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
    9696:	f8c6 e000 	str.w	lr, [r6]
    969a:	e020      	b.n	96de <unwind_phase2_forced+0x82>
    969c:	6c33      	ldr	r3, [r6, #64]	; 0x40
    969e:	617b      	str	r3, [r7, #20]
    96a0:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
    96a4:	4631      	mov	r1, r6
    96a6:	a87a      	add	r0, sp, #488	; 0x1e8
    96a8:	f7f6 ffbc 	bl	624 <memcpy>
    96ac:	693b      	ldr	r3, [r7, #16]
    96ae:	aa7a      	add	r2, sp, #488	; 0x1e8
    96b0:	4639      	mov	r1, r7
    96b2:	4650      	mov	r0, sl
    96b4:	4798      	blx	r3
    96b6:	9b88      	ldr	r3, [sp, #544]	; 0x220
    96b8:	6473      	str	r3, [r6, #68]	; 0x44
    96ba:	4621      	mov	r1, r4
    96bc:	e9cd 6900 	strd	r6, r9, [sp]
    96c0:	4605      	mov	r5, r0
    96c2:	463b      	mov	r3, r7
    96c4:	463a      	mov	r2, r7
    96c6:	2001      	movs	r0, #1
    96c8:	47c0      	blx	r8
    96ca:	4604      	mov	r4, r0
    96cc:	b9e0      	cbnz	r0, 9708 <unwind_phase2_forced+0xac>
    96ce:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
    96d2:	a97a      	add	r1, sp, #488	; 0x1e8
    96d4:	4630      	mov	r0, r6
    96d6:	f7f6 ffa5 	bl	624 <memcpy>
    96da:	2d08      	cmp	r5, #8
    96dc:	d11a      	bne.n	9714 <unwind_phase2_forced+0xb8>
    96de:	6c31      	ldr	r1, [r6, #64]	; 0x40
    96e0:	4638      	mov	r0, r7
    96e2:	f7ff ff1d 	bl	9520 <get_eit_entry>
    96e6:	3409      	adds	r4, #9
    96e8:	fa5f fa84 	uxtb.w	sl, r4
    96ec:	4605      	mov	r5, r0
    96ee:	2800      	cmp	r0, #0
    96f0:	d0d4      	beq.n	969c <unwind_phase2_forced+0x40>
    96f2:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    96f4:	6473      	str	r3, [r6, #68]	; 0x44
    96f6:	463a      	mov	r2, r7
    96f8:	e9cd 6900 	strd	r6, r9, [sp]
    96fc:	463b      	mov	r3, r7
    96fe:	f04a 0110 	orr.w	r1, sl, #16
    9702:	2001      	movs	r0, #1
    9704:	47c0      	blx	r8
    9706:	b100      	cbz	r0, 970a <unwind_phase2_forced+0xae>
    9708:	2509      	movs	r5, #9
    970a:	4628      	mov	r0, r5
    970c:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
    9710:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    9714:	2d07      	cmp	r5, #7
    9716:	d1f7      	bne.n	9708 <unwind_phase2_forced+0xac>
    9718:	4620      	mov	r0, r4
    971a:	6c31      	ldr	r1, [r6, #64]	; 0x40
    971c:	f7ff ff7e 	bl	961c <_Unwind_DebugHook>
    9720:	a803      	add	r0, sp, #12
    9722:	f000 fbb5 	bl	9e90 <__restore_core_regs>
    9726:	bf00      	nop

00009728 <__gnu_Unwind_RaiseException>:
    9728:	b5f0      	push	{r4, r5, r6, r7, lr}
    972a:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
    972c:	640b      	str	r3, [r1, #64]	; 0x40
    972e:	f101 0c04 	add.w	ip, r1, #4
    9732:	460e      	mov	r6, r1
    9734:	4605      	mov	r5, r0
    9736:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    973a:	b0f9      	sub	sp, #484	; 0x1e4
    973c:	ac01      	add	r4, sp, #4
    973e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    9740:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    9744:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    9746:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    974a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    974c:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
    9750:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    9754:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    9758:	9700      	str	r7, [sp, #0]
    975a:	e006      	b.n	976a <__gnu_Unwind_RaiseException+0x42>
    975c:	692b      	ldr	r3, [r5, #16]
    975e:	466a      	mov	r2, sp
    9760:	4629      	mov	r1, r5
    9762:	4798      	blx	r3
    9764:	2808      	cmp	r0, #8
    9766:	4604      	mov	r4, r0
    9768:	d108      	bne.n	977c <__gnu_Unwind_RaiseException+0x54>
    976a:	9910      	ldr	r1, [sp, #64]	; 0x40
    976c:	4628      	mov	r0, r5
    976e:	f7ff fed7 	bl	9520 <get_eit_entry>
    9772:	2800      	cmp	r0, #0
    9774:	d0f2      	beq.n	975c <__gnu_Unwind_RaiseException+0x34>
    9776:	2009      	movs	r0, #9
    9778:	b079      	add	sp, #484	; 0x1e4
    977a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    977c:	4668      	mov	r0, sp
    977e:	f7ff ff1b 	bl	95b8 <restore_non_core_regs>
    9782:	2c06      	cmp	r4, #6
    9784:	d1f7      	bne.n	9776 <__gnu_Unwind_RaiseException+0x4e>
    9786:	4631      	mov	r1, r6
    9788:	4628      	mov	r0, r5
    978a:	f7ff ff49 	bl	9620 <unwind_phase2>
    978e:	bf00      	nop

00009790 <__gnu_Unwind_ForcedUnwind>:
    9790:	60c1      	str	r1, [r0, #12]
    9792:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
    9794:	6182      	str	r2, [r0, #24]
    9796:	6419      	str	r1, [r3, #64]	; 0x40
    9798:	2200      	movs	r2, #0
    979a:	4619      	mov	r1, r3
    979c:	f7ff bf5e 	b.w	965c <unwind_phase2_forced>

000097a0 <__gnu_Unwind_Resume>:
    97a0:	b570      	push	{r4, r5, r6, lr}
    97a2:	68c6      	ldr	r6, [r0, #12]
    97a4:	6943      	ldr	r3, [r0, #20]
    97a6:	640b      	str	r3, [r1, #64]	; 0x40
    97a8:	b9ae      	cbnz	r6, 97d6 <__gnu_Unwind_Resume+0x36>
    97aa:	6903      	ldr	r3, [r0, #16]
    97ac:	460a      	mov	r2, r1
    97ae:	4604      	mov	r4, r0
    97b0:	460d      	mov	r5, r1
    97b2:	4601      	mov	r1, r0
    97b4:	2002      	movs	r0, #2
    97b6:	4798      	blx	r3
    97b8:	2807      	cmp	r0, #7
    97ba:	d005      	beq.n	97c8 <__gnu_Unwind_Resume+0x28>
    97bc:	2808      	cmp	r0, #8
    97be:	d10f      	bne.n	97e0 <__gnu_Unwind_Resume+0x40>
    97c0:	4629      	mov	r1, r5
    97c2:	4620      	mov	r0, r4
    97c4:	f7ff ff2c 	bl	9620 <unwind_phase2>
    97c8:	4630      	mov	r0, r6
    97ca:	6c29      	ldr	r1, [r5, #64]	; 0x40
    97cc:	f7ff ff26 	bl	961c <_Unwind_DebugHook>
    97d0:	1d28      	adds	r0, r5, #4
    97d2:	f000 fb5d 	bl	9e90 <__restore_core_regs>
    97d6:	2201      	movs	r2, #1
    97d8:	f7ff ff40 	bl	965c <unwind_phase2_forced>
    97dc:	f7f7 f8e6 	bl	9ac <abort>
    97e0:	f7f7 f8e4 	bl	9ac <abort>

000097e4 <__gnu_Unwind_Resume_or_Rethrow>:
    97e4:	68c2      	ldr	r2, [r0, #12]
    97e6:	b122      	cbz	r2, 97f2 <__gnu_Unwind_Resume_or_Rethrow+0xe>
    97e8:	6bca      	ldr	r2, [r1, #60]	; 0x3c
    97ea:	640a      	str	r2, [r1, #64]	; 0x40
    97ec:	2200      	movs	r2, #0
    97ee:	f7ff bf35 	b.w	965c <unwind_phase2_forced>
    97f2:	f7ff bf99 	b.w	9728 <__gnu_Unwind_RaiseException>
    97f6:	bf00      	nop

000097f8 <_Unwind_Complete>:
    97f8:	4770      	bx	lr
    97fa:	bf00      	nop

000097fc <_Unwind_DeleteException>:
    97fc:	6883      	ldr	r3, [r0, #8]
    97fe:	4601      	mov	r1, r0
    9800:	b10b      	cbz	r3, 9806 <_Unwind_DeleteException+0xa>
    9802:	2001      	movs	r0, #1
    9804:	4718      	bx	r3
    9806:	4770      	bx	lr

00009808 <_Unwind_VRS_Get>:
    9808:	2901      	cmp	r1, #1
    980a:	d012      	beq.n	9832 <_Unwind_VRS_Get+0x2a>
    980c:	d809      	bhi.n	9822 <_Unwind_VRS_Get+0x1a>
    980e:	b973      	cbnz	r3, 982e <_Unwind_VRS_Get+0x26>
    9810:	2a0f      	cmp	r2, #15
    9812:	d80c      	bhi.n	982e <_Unwind_VRS_Get+0x26>
    9814:	eb00 0282 	add.w	r2, r0, r2, lsl #2
    9818:	4618      	mov	r0, r3
    981a:	6853      	ldr	r3, [r2, #4]
    981c:	9a00      	ldr	r2, [sp, #0]
    981e:	6013      	str	r3, [r2, #0]
    9820:	4770      	bx	lr
    9822:	3903      	subs	r1, #3
    9824:	2901      	cmp	r1, #1
    9826:	bf94      	ite	ls
    9828:	2001      	movls	r0, #1
    982a:	2002      	movhi	r0, #2
    982c:	4770      	bx	lr
    982e:	2002      	movs	r0, #2
    9830:	4770      	bx	lr
    9832:	4608      	mov	r0, r1
    9834:	4770      	bx	lr
    9836:	bf00      	nop

00009838 <_Unwind_GetGR>:
    9838:	b500      	push	{lr}
    983a:	b085      	sub	sp, #20
    983c:	460a      	mov	r2, r1
    983e:	2300      	movs	r3, #0
    9840:	a903      	add	r1, sp, #12
    9842:	9100      	str	r1, [sp, #0]
    9844:	4619      	mov	r1, r3
    9846:	f7ff ffdf 	bl	9808 <_Unwind_VRS_Get>
    984a:	9803      	ldr	r0, [sp, #12]
    984c:	b005      	add	sp, #20
    984e:	f85d fb04 	ldr.w	pc, [sp], #4
    9852:	bf00      	nop

00009854 <_Unwind_VRS_Set>:
    9854:	2901      	cmp	r1, #1
    9856:	d012      	beq.n	987e <_Unwind_VRS_Set+0x2a>
    9858:	d809      	bhi.n	986e <_Unwind_VRS_Set+0x1a>
    985a:	b973      	cbnz	r3, 987a <_Unwind_VRS_Set+0x26>
    985c:	2a0f      	cmp	r2, #15
    985e:	d80c      	bhi.n	987a <_Unwind_VRS_Set+0x26>
    9860:	9900      	ldr	r1, [sp, #0]
    9862:	eb00 0282 	add.w	r2, r0, r2, lsl #2
    9866:	6809      	ldr	r1, [r1, #0]
    9868:	6051      	str	r1, [r2, #4]
    986a:	4618      	mov	r0, r3
    986c:	4770      	bx	lr
    986e:	3903      	subs	r1, #3
    9870:	2901      	cmp	r1, #1
    9872:	bf94      	ite	ls
    9874:	2001      	movls	r0, #1
    9876:	2002      	movhi	r0, #2
    9878:	4770      	bx	lr
    987a:	2002      	movs	r0, #2
    987c:	4770      	bx	lr
    987e:	4608      	mov	r0, r1
    9880:	4770      	bx	lr
    9882:	bf00      	nop

00009884 <_Unwind_SetGR>:
    9884:	b510      	push	{r4, lr}
    9886:	b084      	sub	sp, #16
    9888:	2300      	movs	r3, #0
    988a:	ac03      	add	r4, sp, #12
    988c:	9203      	str	r2, [sp, #12]
    988e:	9400      	str	r4, [sp, #0]
    9890:	460a      	mov	r2, r1
    9892:	4619      	mov	r1, r3
    9894:	f7ff ffde 	bl	9854 <_Unwind_VRS_Set>
    9898:	b004      	add	sp, #16
    989a:	bd10      	pop	{r4, pc}

0000989c <__gnu_Unwind_Backtrace>:
    989c:	b570      	push	{r4, r5, r6, lr}
    989e:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
    98a0:	6413      	str	r3, [r2, #64]	; 0x40
    98a2:	f102 0c04 	add.w	ip, r2, #4
    98a6:	4605      	mov	r5, r0
    98a8:	460c      	mov	r4, r1
    98aa:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    98ae:	f5ad 7d0e 	sub.w	sp, sp, #568	; 0x238
    98b2:	f10d 0e5c 	add.w	lr, sp, #92	; 0x5c
    98b6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    98ba:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    98be:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    98c2:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    98c6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    98ca:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
    98ce:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
    98d2:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
    98d6:	9616      	str	r6, [sp, #88]	; 0x58
    98d8:	e010      	b.n	98fc <__gnu_Unwind_Backtrace+0x60>
    98da:	f7ff ffd3 	bl	9884 <_Unwind_SetGR>
    98de:	4621      	mov	r1, r4
    98e0:	a816      	add	r0, sp, #88	; 0x58
    98e2:	47a8      	blx	r5
    98e4:	4603      	mov	r3, r0
    98e6:	aa16      	add	r2, sp, #88	; 0x58
    98e8:	4669      	mov	r1, sp
    98ea:	2008      	movs	r0, #8
    98ec:	b983      	cbnz	r3, 9910 <__gnu_Unwind_Backtrace+0x74>
    98ee:	9b04      	ldr	r3, [sp, #16]
    98f0:	4798      	blx	r3
    98f2:	2805      	cmp	r0, #5
    98f4:	4606      	mov	r6, r0
    98f6:	d00c      	beq.n	9912 <__gnu_Unwind_Backtrace+0x76>
    98f8:	2809      	cmp	r0, #9
    98fa:	d009      	beq.n	9910 <__gnu_Unwind_Backtrace+0x74>
    98fc:	9926      	ldr	r1, [sp, #152]	; 0x98
    98fe:	4668      	mov	r0, sp
    9900:	f7ff fe0e 	bl	9520 <get_eit_entry>
    9904:	4603      	mov	r3, r0
    9906:	466a      	mov	r2, sp
    9908:	210c      	movs	r1, #12
    990a:	a816      	add	r0, sp, #88	; 0x58
    990c:	2b00      	cmp	r3, #0
    990e:	d0e4      	beq.n	98da <__gnu_Unwind_Backtrace+0x3e>
    9910:	2609      	movs	r6, #9
    9912:	a816      	add	r0, sp, #88	; 0x58
    9914:	f7ff fe50 	bl	95b8 <restore_non_core_regs>
    9918:	4630      	mov	r0, r6
    991a:	f50d 7d0e 	add.w	sp, sp, #568	; 0x238
    991e:	bd70      	pop	{r4, r5, r6, pc}

00009920 <__gnu_unwind_pr_common>:
    9920:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9924:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
    9926:	b089      	sub	sp, #36	; 0x24
    9928:	461e      	mov	r6, r3
    992a:	f854 3b04 	ldr.w	r3, [r4], #4
    992e:	9406      	str	r4, [sp, #24]
    9930:	460d      	mov	r5, r1
    9932:	4617      	mov	r7, r2
    9934:	f000 0803 	and.w	r8, r0, #3
    9938:	2e00      	cmp	r6, #0
    993a:	d079      	beq.n	9a30 <__gnu_unwind_pr_common+0x110>
    993c:	0c1a      	lsrs	r2, r3, #16
    993e:	f88d 201d 	strb.w	r2, [sp, #29]
    9942:	041b      	lsls	r3, r3, #16
    9944:	b2d2      	uxtb	r2, r2
    9946:	9305      	str	r3, [sp, #20]
    9948:	eb04 0482 	add.w	r4, r4, r2, lsl #2
    994c:	2302      	movs	r3, #2
    994e:	f88d 301c 	strb.w	r3, [sp, #28]
    9952:	6d2b      	ldr	r3, [r5, #80]	; 0x50
    9954:	f1b8 0f02 	cmp.w	r8, #2
    9958:	bf08      	it	eq
    995a:	6bac      	ldreq	r4, [r5, #56]	; 0x38
    995c:	f013 0301 	ands.w	r3, r3, #1
    9960:	d00c      	beq.n	997c <__gnu_unwind_pr_common+0x5c>
    9962:	a905      	add	r1, sp, #20
    9964:	4638      	mov	r0, r7
    9966:	f000 fb95 	bl	a094 <__gnu_unwind_execute>
    996a:	b918      	cbnz	r0, 9974 <__gnu_unwind_pr_common+0x54>
    996c:	2008      	movs	r0, #8
    996e:	b009      	add	sp, #36	; 0x24
    9970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9974:	2009      	movs	r0, #9
    9976:	b009      	add	sp, #36	; 0x24
    9978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    997c:	f8d4 a000 	ldr.w	sl, [r4]
    9980:	f1ba 0f00 	cmp.w	sl, #0
    9984:	d0ed      	beq.n	9962 <__gnu_unwind_pr_common+0x42>
    9986:	9301      	str	r3, [sp, #4]
    9988:	f000 0308 	and.w	r3, r0, #8
    998c:	9302      	str	r3, [sp, #8]
    998e:	2e02      	cmp	r6, #2
    9990:	d04a      	beq.n	9a28 <__gnu_unwind_pr_common+0x108>
    9992:	f8b4 a000 	ldrh.w	sl, [r4]
    9996:	f8b4 9002 	ldrh.w	r9, [r4, #2]
    999a:	3404      	adds	r4, #4
    999c:	6cab      	ldr	r3, [r5, #72]	; 0x48
    999e:	f029 0b01 	bic.w	fp, r9, #1
    99a2:	210f      	movs	r1, #15
    99a4:	4638      	mov	r0, r7
    99a6:	449b      	add	fp, r3
    99a8:	f7ff ff46 	bl	9838 <_Unwind_GetGR>
    99ac:	4583      	cmp	fp, r0
    99ae:	d839      	bhi.n	9a24 <__gnu_unwind_pr_common+0x104>
    99b0:	f02a 0201 	bic.w	r2, sl, #1
    99b4:	445a      	add	r2, fp
    99b6:	4282      	cmp	r2, r0
    99b8:	bf94      	ite	ls
    99ba:	2200      	movls	r2, #0
    99bc:	2201      	movhi	r2, #1
    99be:	ea4f 0349 	mov.w	r3, r9, lsl #1
    99c2:	f003 0302 	and.w	r3, r3, #2
    99c6:	f00a 0a01 	and.w	sl, sl, #1
    99ca:	ea43 030a 	orr.w	r3, r3, sl
    99ce:	2b01      	cmp	r3, #1
    99d0:	d04b      	beq.n	9a6a <__gnu_unwind_pr_common+0x14a>
    99d2:	2b02      	cmp	r3, #2
    99d4:	d032      	beq.n	9a3c <__gnu_unwind_pr_common+0x11c>
    99d6:	2b00      	cmp	r3, #0
    99d8:	d1cc      	bne.n	9974 <__gnu_unwind_pr_common+0x54>
    99da:	f1b8 0f00 	cmp.w	r8, #0
    99de:	d002      	beq.n	99e6 <__gnu_unwind_pr_common+0xc6>
    99e0:	2a00      	cmp	r2, #0
    99e2:	f040 80cd 	bne.w	9b80 <__gnu_unwind_pr_common+0x260>
    99e6:	3404      	adds	r4, #4
    99e8:	f8d4 a000 	ldr.w	sl, [r4]
    99ec:	f1ba 0f00 	cmp.w	sl, #0
    99f0:	d1cd      	bne.n	998e <__gnu_unwind_pr_common+0x6e>
    99f2:	a905      	add	r1, sp, #20
    99f4:	4638      	mov	r0, r7
    99f6:	f000 fb4d 	bl	a094 <__gnu_unwind_execute>
    99fa:	2800      	cmp	r0, #0
    99fc:	d1ba      	bne.n	9974 <__gnu_unwind_pr_common+0x54>
    99fe:	9b01      	ldr	r3, [sp, #4]
    9a00:	2b00      	cmp	r3, #0
    9a02:	d0b3      	beq.n	996c <__gnu_unwind_pr_common+0x4c>
    9a04:	210f      	movs	r1, #15
    9a06:	4638      	mov	r0, r7
    9a08:	f7ff ff16 	bl	9838 <_Unwind_GetGR>
    9a0c:	210e      	movs	r1, #14
    9a0e:	4602      	mov	r2, r0
    9a10:	4638      	mov	r0, r7
    9a12:	f7ff ff37 	bl	9884 <_Unwind_SetGR>
    9a16:	4638      	mov	r0, r7
    9a18:	4a6a      	ldr	r2, [pc, #424]	; (9bc4 <__gnu_unwind_pr_common+0x2a4>)
    9a1a:	210f      	movs	r1, #15
    9a1c:	f7ff ff32 	bl	9884 <_Unwind_SetGR>
    9a20:	2007      	movs	r0, #7
    9a22:	e7a8      	b.n	9976 <__gnu_unwind_pr_common+0x56>
    9a24:	2200      	movs	r2, #0
    9a26:	e7ca      	b.n	99be <__gnu_unwind_pr_common+0x9e>
    9a28:	f8d4 9004 	ldr.w	r9, [r4, #4]
    9a2c:	3408      	adds	r4, #8
    9a2e:	e7b5      	b.n	999c <__gnu_unwind_pr_common+0x7c>
    9a30:	021b      	lsls	r3, r3, #8
    9a32:	9305      	str	r3, [sp, #20]
    9a34:	f88d 601d 	strb.w	r6, [sp, #29]
    9a38:	2303      	movs	r3, #3
    9a3a:	e788      	b.n	994e <__gnu_unwind_pr_common+0x2e>
    9a3c:	f8d4 9000 	ldr.w	r9, [r4]
    9a40:	f029 4b00 	bic.w	fp, r9, #2147483648	; 0x80000000
    9a44:	f1b8 0f00 	cmp.w	r8, #0
    9a48:	d146      	bne.n	9ad8 <__gnu_unwind_pr_common+0x1b8>
    9a4a:	b12a      	cbz	r2, 9a58 <__gnu_unwind_pr_common+0x138>
    9a4c:	9b02      	ldr	r3, [sp, #8]
    9a4e:	2b00      	cmp	r3, #0
    9a50:	d05b      	beq.n	9b0a <__gnu_unwind_pr_common+0x1ea>
    9a52:	f1bb 0f00 	cmp.w	fp, #0
    9a56:	d073      	beq.n	9b40 <__gnu_unwind_pr_common+0x220>
    9a58:	f1b9 0f00 	cmp.w	r9, #0
    9a5c:	da00      	bge.n	9a60 <__gnu_unwind_pr_common+0x140>
    9a5e:	3404      	adds	r4, #4
    9a60:	f10b 0b01 	add.w	fp, fp, #1
    9a64:	eb04 048b 	add.w	r4, r4, fp, lsl #2
    9a68:	e7be      	b.n	99e8 <__gnu_unwind_pr_common+0xc8>
    9a6a:	f1b8 0f00 	cmp.w	r8, #0
    9a6e:	d119      	bne.n	9aa4 <__gnu_unwind_pr_common+0x184>
    9a70:	b1b2      	cbz	r2, 9aa0 <__gnu_unwind_pr_common+0x180>
    9a72:	6861      	ldr	r1, [r4, #4]
    9a74:	6822      	ldr	r2, [r4, #0]
    9a76:	1c88      	adds	r0, r1, #2
    9a78:	ea4f 72d2 	mov.w	r2, r2, lsr #31
    9a7c:	f43f af7a 	beq.w	9974 <__gnu_unwind_pr_common+0x54>
    9a80:	f105 0358 	add.w	r3, r5, #88	; 0x58
    9a84:	3101      	adds	r1, #1
    9a86:	9304      	str	r3, [sp, #16]
    9a88:	f000 808e 	beq.w	9ba8 <__gnu_unwind_pr_common+0x288>
    9a8c:	1d20      	adds	r0, r4, #4
    9a8e:	f7ff fdbf 	bl	9610 <_Unwind_decode_typeinfo_ptr.constprop.0>
    9a92:	ab04      	add	r3, sp, #16
    9a94:	4601      	mov	r1, r0
    9a96:	4628      	mov	r0, r5
    9a98:	f7f8 fc7a 	bl	2390 <__cxa_type_match>
    9a9c:	2800      	cmp	r0, #0
    9a9e:	d159      	bne.n	9b54 <__gnu_unwind_pr_common+0x234>
    9aa0:	3408      	adds	r4, #8
    9aa2:	e7a1      	b.n	99e8 <__gnu_unwind_pr_common+0xc8>
    9aa4:	210d      	movs	r1, #13
    9aa6:	4638      	mov	r0, r7
    9aa8:	f8d5 9020 	ldr.w	r9, [r5, #32]
    9aac:	f7ff fec4 	bl	9838 <_Unwind_GetGR>
    9ab0:	4581      	cmp	r9, r0
    9ab2:	d1f5      	bne.n	9aa0 <__gnu_unwind_pr_common+0x180>
    9ab4:	6aab      	ldr	r3, [r5, #40]	; 0x28
    9ab6:	429c      	cmp	r4, r3
    9ab8:	d1f2      	bne.n	9aa0 <__gnu_unwind_pr_common+0x180>
    9aba:	4620      	mov	r0, r4
    9abc:	f7ff fce4 	bl	9488 <selfrel_offset31>
    9ac0:	210f      	movs	r1, #15
    9ac2:	4602      	mov	r2, r0
    9ac4:	4638      	mov	r0, r7
    9ac6:	f7ff fedd 	bl	9884 <_Unwind_SetGR>
    9aca:	4638      	mov	r0, r7
    9acc:	462a      	mov	r2, r5
    9ace:	2100      	movs	r1, #0
    9ad0:	f7ff fed8 	bl	9884 <_Unwind_SetGR>
    9ad4:	2007      	movs	r0, #7
    9ad6:	e74e      	b.n	9976 <__gnu_unwind_pr_common+0x56>
    9ad8:	210d      	movs	r1, #13
    9ada:	4638      	mov	r0, r7
    9adc:	f8d5 a020 	ldr.w	sl, [r5, #32]
    9ae0:	f7ff feaa 	bl	9838 <_Unwind_GetGR>
    9ae4:	4582      	cmp	sl, r0
    9ae6:	d1b7      	bne.n	9a58 <__gnu_unwind_pr_common+0x138>
    9ae8:	6aab      	ldr	r3, [r5, #40]	; 0x28
    9aea:	429c      	cmp	r4, r3
    9aec:	d1b4      	bne.n	9a58 <__gnu_unwind_pr_common+0x138>
    9aee:	2304      	movs	r3, #4
    9af0:	2200      	movs	r2, #0
    9af2:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
    9af6:	18e3      	adds	r3, r4, r3
    9af8:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
    9afc:	636b      	str	r3, [r5, #52]	; 0x34
    9afe:	6823      	ldr	r3, [r4, #0]
    9b00:	2b00      	cmp	r3, #0
    9b02:	db59      	blt.n	9bb8 <__gnu_unwind_pr_common+0x298>
    9b04:	2301      	movs	r3, #1
    9b06:	9301      	str	r3, [sp, #4]
    9b08:	e7aa      	b.n	9a60 <__gnu_unwind_pr_common+0x140>
    9b0a:	4699      	mov	r9, r3
    9b0c:	f105 0358 	add.w	r3, r5, #88	; 0x58
    9b10:	f8cd 800c 	str.w	r8, [sp, #12]
    9b14:	f104 0a04 	add.w	sl, r4, #4
    9b18:	46b0      	mov	r8, r6
    9b1a:	461e      	mov	r6, r3
    9b1c:	e00e      	b.n	9b3c <__gnu_unwind_pr_common+0x21c>
    9b1e:	4650      	mov	r0, sl
    9b20:	9604      	str	r6, [sp, #16]
    9b22:	f7ff fd75 	bl	9610 <_Unwind_decode_typeinfo_ptr.constprop.0>
    9b26:	2200      	movs	r2, #0
    9b28:	4601      	mov	r1, r0
    9b2a:	ab04      	add	r3, sp, #16
    9b2c:	4628      	mov	r0, r5
    9b2e:	f109 0901 	add.w	r9, r9, #1
    9b32:	f10a 0a04 	add.w	sl, sl, #4
    9b36:	f7f8 fc2b 	bl	2390 <__cxa_type_match>
    9b3a:	b9d8      	cbnz	r0, 9b74 <__gnu_unwind_pr_common+0x254>
    9b3c:	45d9      	cmp	r9, fp
    9b3e:	d1ee      	bne.n	9b1e <__gnu_unwind_pr_common+0x1fe>
    9b40:	210d      	movs	r1, #13
    9b42:	4638      	mov	r0, r7
    9b44:	f7ff fe78 	bl	9838 <_Unwind_GetGR>
    9b48:	9b04      	ldr	r3, [sp, #16]
    9b4a:	6228      	str	r0, [r5, #32]
    9b4c:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
    9b50:	2006      	movs	r0, #6
    9b52:	e710      	b.n	9976 <__gnu_unwind_pr_common+0x56>
    9b54:	4681      	mov	r9, r0
    9b56:	210d      	movs	r1, #13
    9b58:	4638      	mov	r0, r7
    9b5a:	f7ff fe6d 	bl	9838 <_Unwind_GetGR>
    9b5e:	f1b9 0f02 	cmp.w	r9, #2
    9b62:	bf04      	itt	eq
    9b64:	462b      	moveq	r3, r5
    9b66:	9a04      	ldreq	r2, [sp, #16]
    9b68:	6228      	str	r0, [r5, #32]
    9b6a:	bf14      	ite	ne
    9b6c:	9b04      	ldrne	r3, [sp, #16]
    9b6e:	f843 2f2c 	streq.w	r2, [r3, #44]!
    9b72:	e7eb      	b.n	9b4c <__gnu_unwind_pr_common+0x22c>
    9b74:	4646      	mov	r6, r8
    9b76:	f8d4 9000 	ldr.w	r9, [r4]
    9b7a:	f8dd 800c 	ldr.w	r8, [sp, #12]
    9b7e:	e76b      	b.n	9a58 <__gnu_unwind_pr_common+0x138>
    9b80:	4620      	mov	r0, r4
    9b82:	f7ff fc81 	bl	9488 <selfrel_offset31>
    9b86:	3404      	adds	r4, #4
    9b88:	4602      	mov	r2, r0
    9b8a:	63ac      	str	r4, [r5, #56]	; 0x38
    9b8c:	4628      	mov	r0, r5
    9b8e:	4614      	mov	r4, r2
    9b90:	f7f8 fc56 	bl	2440 <__cxa_begin_cleanup>
    9b94:	2800      	cmp	r0, #0
    9b96:	f43f aeed 	beq.w	9974 <__gnu_unwind_pr_common+0x54>
    9b9a:	4638      	mov	r0, r7
    9b9c:	4622      	mov	r2, r4
    9b9e:	210f      	movs	r1, #15
    9ba0:	f7ff fe70 	bl	9884 <_Unwind_SetGR>
    9ba4:	2007      	movs	r0, #7
    9ba6:	e6e6      	b.n	9976 <__gnu_unwind_pr_common+0x56>
    9ba8:	210d      	movs	r1, #13
    9baa:	4638      	mov	r0, r7
    9bac:	9301      	str	r3, [sp, #4]
    9bae:	f7ff fe43 	bl	9838 <_Unwind_GetGR>
    9bb2:	9b01      	ldr	r3, [sp, #4]
    9bb4:	6228      	str	r0, [r5, #32]
    9bb6:	e7c9      	b.n	9b4c <__gnu_unwind_pr_common+0x22c>
    9bb8:	f10b 0001 	add.w	r0, fp, #1
    9bbc:	eb04 0080 	add.w	r0, r4, r0, lsl #2
    9bc0:	e77c      	b.n	9abc <__gnu_unwind_pr_common+0x19c>
    9bc2:	bf00      	nop
    9bc4:	00009281 	.word	0x00009281

00009bc8 <__aeabi_unwind_cpp_pr0>:
    9bc8:	2300      	movs	r3, #0
    9bca:	f7ff bea9 	b.w	9920 <__gnu_unwind_pr_common>
    9bce:	bf00      	nop

00009bd0 <__aeabi_unwind_cpp_pr1>:
    9bd0:	2301      	movs	r3, #1
    9bd2:	f7ff bea5 	b.w	9920 <__gnu_unwind_pr_common>
    9bd6:	bf00      	nop

00009bd8 <__aeabi_unwind_cpp_pr2>:
    9bd8:	2302      	movs	r3, #2
    9bda:	f7ff bea1 	b.w	9920 <__gnu_unwind_pr_common>
    9bde:	bf00      	nop

00009be0 <_Unwind_VRS_Pop>:
    9be0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    9be4:	4606      	mov	r6, r0
    9be6:	b0c3      	sub	sp, #268	; 0x10c
    9be8:	4691      	mov	r9, r2
    9bea:	461c      	mov	r4, r3
    9bec:	2904      	cmp	r1, #4
    9bee:	f200 809b 	bhi.w	9d28 <_Unwind_VRS_Pop+0x148>
    9bf2:	e8df f001 	tbb	[pc, r1]
    9bf6:	567b      	.short	0x567b
    9bf8:	2e99      	.short	0x2e99
    9bfa:	03          	.byte	0x03
    9bfb:	00          	.byte	0x00
    9bfc:	2c00      	cmp	r4, #0
    9bfe:	f040 8093 	bne.w	9d28 <_Unwind_VRS_Pop+0x148>
    9c02:	2a10      	cmp	r2, #16
    9c04:	f200 8090 	bhi.w	9d28 <_Unwind_VRS_Pop+0x148>
    9c08:	6803      	ldr	r3, [r0, #0]
    9c0a:	06dc      	lsls	r4, r3, #27
    9c0c:	f100 80f3 	bmi.w	9df6 <_Unwind_VRS_Pop+0x216>
    9c10:	af20      	add	r7, sp, #128	; 0x80
    9c12:	4638      	mov	r0, r7
    9c14:	f000 f9ae 	bl	9f74 <__gnu_Unwind_Save_WMMXC>
    9c18:	6bb4      	ldr	r4, [r6, #56]	; 0x38
    9c1a:	4639      	mov	r1, r7
    9c1c:	2300      	movs	r3, #0
    9c1e:	f04f 0c01 	mov.w	ip, #1
    9c22:	fa0c f203 	lsl.w	r2, ip, r3
    9c26:	ea12 0f09 	tst.w	r2, r9
    9c2a:	4620      	mov	r0, r4
    9c2c:	f103 0301 	add.w	r3, r3, #1
    9c30:	d003      	beq.n	9c3a <_Unwind_VRS_Pop+0x5a>
    9c32:	f850 2b04 	ldr.w	r2, [r0], #4
    9c36:	600a      	str	r2, [r1, #0]
    9c38:	4604      	mov	r4, r0
    9c3a:	2b04      	cmp	r3, #4
    9c3c:	f101 0104 	add.w	r1, r1, #4
    9c40:	d1ef      	bne.n	9c22 <_Unwind_VRS_Pop+0x42>
    9c42:	4638      	mov	r0, r7
    9c44:	63b4      	str	r4, [r6, #56]	; 0x38
    9c46:	f000 f98b 	bl	9f60 <__gnu_Unwind_Restore_WMMXC>
    9c4a:	2000      	movs	r0, #0
    9c4c:	b043      	add	sp, #268	; 0x10c
    9c4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    9c52:	2c03      	cmp	r4, #3
    9c54:	d168      	bne.n	9d28 <_Unwind_VRS_Pop+0x148>
    9c56:	b294      	uxth	r4, r2
    9c58:	eb04 4312 	add.w	r3, r4, r2, lsr #16
    9c5c:	2b10      	cmp	r3, #16
    9c5e:	ea4f 4912 	mov.w	r9, r2, lsr #16
    9c62:	d861      	bhi.n	9d28 <_Unwind_VRS_Pop+0x148>
    9c64:	6803      	ldr	r3, [r0, #0]
    9c66:	071d      	lsls	r5, r3, #28
    9c68:	f100 80cd 	bmi.w	9e06 <_Unwind_VRS_Pop+0x226>
    9c6c:	af20      	add	r7, sp, #128	; 0x80
    9c6e:	4638      	mov	r0, r7
    9c70:	f000 f954 	bl	9f1c <__gnu_Unwind_Save_WMMXD>
    9c74:	6bb2      	ldr	r2, [r6, #56]	; 0x38
    9c76:	eb07 01c9 	add.w	r1, r7, r9, lsl #3
    9c7a:	b154      	cbz	r4, 9c92 <_Unwind_VRS_Pop+0xb2>
    9c7c:	460b      	mov	r3, r1
    9c7e:	1ad0      	subs	r0, r2, r3
    9c80:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
    9c84:	00e4      	lsls	r4, r4, #3
    9c86:	581d      	ldr	r5, [r3, r0]
    9c88:	f843 5b04 	str.w	r5, [r3], #4
    9c8c:	428b      	cmp	r3, r1
    9c8e:	d1fa      	bne.n	9c86 <_Unwind_VRS_Pop+0xa6>
    9c90:	4422      	add	r2, r4
    9c92:	4638      	mov	r0, r7
    9c94:	63b2      	str	r2, [r6, #56]	; 0x38
    9c96:	f000 f91f 	bl	9ed8 <__gnu_Unwind_Restore_WMMXD>
    9c9a:	2000      	movs	r0, #0
    9c9c:	b043      	add	sp, #268	; 0x10c
    9c9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    9ca2:	2c01      	cmp	r4, #1
    9ca4:	ea4f 4812 	mov.w	r8, r2, lsr #16
    9ca8:	fa1f f982 	uxth.w	r9, r2
    9cac:	d038      	beq.n	9d20 <_Unwind_VRS_Pop+0x140>
    9cae:	2c05      	cmp	r4, #5
    9cb0:	d13a      	bne.n	9d28 <_Unwind_VRS_Pop+0x148>
    9cb2:	eb08 0309 	add.w	r3, r8, r9
    9cb6:	2b20      	cmp	r3, #32
    9cb8:	d836      	bhi.n	9d28 <_Unwind_VRS_Pop+0x148>
    9cba:	f1b8 0f0f 	cmp.w	r8, #15
    9cbe:	d976      	bls.n	9dae <_Unwind_VRS_Pop+0x1ce>
    9cc0:	f1b9 0f00 	cmp.w	r9, #0
    9cc4:	f040 8083 	bne.w	9dce <_Unwind_VRS_Pop+0x1ee>
    9cc8:	2b0f      	cmp	r3, #15
    9cca:	d80b      	bhi.n	9ce4 <_Unwind_VRS_Pop+0x104>
    9ccc:	6833      	ldr	r3, [r6, #0]
    9cce:	07d8      	lsls	r0, r3, #31
    9cd0:	d508      	bpl.n	9ce4 <_Unwind_VRS_Pop+0x104>
    9cd2:	4630      	mov	r0, r6
    9cd4:	f023 0301 	bic.w	r3, r3, #1
    9cd8:	f043 0302 	orr.w	r3, r3, #2
    9cdc:	f840 3b48 	str.w	r3, [r0], #72
    9ce0:	f000 f8ee 	bl	9ec0 <__gnu_Unwind_Save_VFP_D>
    9ce4:	2000      	movs	r0, #0
    9ce6:	b043      	add	sp, #268	; 0x10c
    9ce8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    9cec:	b9e4      	cbnz	r4, 9d28 <_Unwind_VRS_Pop+0x148>
    9cee:	6b87      	ldr	r7, [r0, #56]	; 0x38
    9cf0:	4623      	mov	r3, r4
    9cf2:	fa1f fc82 	uxth.w	ip, r2
    9cf6:	2001      	movs	r0, #1
    9cf8:	1d34      	adds	r4, r6, #4
    9cfa:	fa00 f203 	lsl.w	r2, r0, r3
    9cfe:	ea12 0f0c 	tst.w	r2, ip
    9d02:	4639      	mov	r1, r7
    9d04:	d004      	beq.n	9d10 <_Unwind_VRS_Pop+0x130>
    9d06:	f851 2b04 	ldr.w	r2, [r1], #4
    9d0a:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
    9d0e:	460f      	mov	r7, r1
    9d10:	3301      	adds	r3, #1
    9d12:	2b10      	cmp	r3, #16
    9d14:	d1f1      	bne.n	9cfa <_Unwind_VRS_Pop+0x11a>
    9d16:	f419 5000 	ands.w	r0, r9, #8192	; 0x2000
    9d1a:	d1e3      	bne.n	9ce4 <_Unwind_VRS_Pop+0x104>
    9d1c:	63b7      	str	r7, [r6, #56]	; 0x38
    9d1e:	e004      	b.n	9d2a <_Unwind_VRS_Pop+0x14a>
    9d20:	eb08 0309 	add.w	r3, r8, r9
    9d24:	2b10      	cmp	r3, #16
    9d26:	d903      	bls.n	9d30 <_Unwind_VRS_Pop+0x150>
    9d28:	2002      	movs	r0, #2
    9d2a:	b043      	add	sp, #268	; 0x10c
    9d2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    9d30:	f1b8 0f0f 	cmp.w	r8, #15
    9d34:	d8f8      	bhi.n	9d28 <_Unwind_VRS_Pop+0x148>
    9d36:	6833      	ldr	r3, [r6, #0]
    9d38:	07da      	lsls	r2, r3, #31
    9d3a:	d506      	bpl.n	9d4a <_Unwind_VRS_Pop+0x16a>
    9d3c:	4630      	mov	r0, r6
    9d3e:	f023 0303 	bic.w	r3, r3, #3
    9d42:	f840 3b48 	str.w	r3, [r0], #72
    9d46:	f000 f8b3 	bl	9eb0 <__gnu_Unwind_Save_VFP>
    9d4a:	af20      	add	r7, sp, #128	; 0x80
    9d4c:	4638      	mov	r0, r7
    9d4e:	464d      	mov	r5, r9
    9d50:	f000 f8ae 	bl	9eb0 <__gnu_Unwind_Save_VFP>
    9d54:	6bb2      	ldr	r2, [r6, #56]	; 0x38
    9d56:	2d00      	cmp	r5, #0
    9d58:	d05e      	beq.n	9e18 <_Unwind_VRS_Pop+0x238>
    9d5a:	f04f 0900 	mov.w	r9, #0
    9d5e:	eb07 01c8 	add.w	r1, r7, r8, lsl #3
    9d62:	eb02 03c5 	add.w	r3, r2, r5, lsl #3
    9d66:	3904      	subs	r1, #4
    9d68:	f852 0b04 	ldr.w	r0, [r2], #4
    9d6c:	f841 0f04 	str.w	r0, [r1, #4]!
    9d70:	429a      	cmp	r2, r3
    9d72:	d1f9      	bne.n	9d68 <_Unwind_VRS_Pop+0x188>
    9d74:	f1b9 0f00 	cmp.w	r9, #0
    9d78:	d054      	beq.n	9e24 <_Unwind_VRS_Pop+0x244>
    9d7a:	466f      	mov	r7, sp
    9d7c:	4641      	mov	r1, r8
    9d7e:	2910      	cmp	r1, #16
    9d80:	bf38      	it	cc
    9d82:	2110      	movcc	r1, #16
    9d84:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
    9d88:	3984      	subs	r1, #132	; 0x84
    9d8a:	eb03 02c9 	add.w	r2, r3, r9, lsl #3
    9d8e:	f853 5b04 	ldr.w	r5, [r3], #4
    9d92:	f841 5f04 	str.w	r5, [r1, #4]!
    9d96:	429a      	cmp	r2, r3
    9d98:	d1f9      	bne.n	9d8e <_Unwind_VRS_Pop+0x1ae>
    9d9a:	2c01      	cmp	r4, #1
    9d9c:	d03b      	beq.n	9e16 <_Unwind_VRS_Pop+0x236>
    9d9e:	f1b8 0f0f 	cmp.w	r8, #15
    9da2:	63b2      	str	r2, [r6, #56]	; 0x38
    9da4:	d958      	bls.n	9e58 <_Unwind_VRS_Pop+0x278>
    9da6:	4638      	mov	r0, r7
    9da8:	f000 f88e 	bl	9ec8 <__gnu_Unwind_Restore_VFP_D_16_to_31>
    9dac:	e79a      	b.n	9ce4 <_Unwind_VRS_Pop+0x104>
    9dae:	2b10      	cmp	r3, #16
    9db0:	d954      	bls.n	9e5c <_Unwind_VRS_Pop+0x27c>
    9db2:	6832      	ldr	r2, [r6, #0]
    9db4:	07d7      	lsls	r7, r2, #31
    9db6:	f1a3 0910 	sub.w	r9, r3, #16
    9dba:	d509      	bpl.n	9dd0 <_Unwind_VRS_Pop+0x1f0>
    9dbc:	f022 0301 	bic.w	r3, r2, #1
    9dc0:	4630      	mov	r0, r6
    9dc2:	f043 0302 	orr.w	r3, r3, #2
    9dc6:	f840 3b48 	str.w	r3, [r0], #72
    9dca:	f000 f879 	bl	9ec0 <__gnu_Unwind_Save_VFP_D>
    9dce:	6832      	ldr	r2, [r6, #0]
    9dd0:	0753      	lsls	r3, r2, #29
    9dd2:	d439      	bmi.n	9e48 <_Unwind_VRS_Pop+0x268>
    9dd4:	f1b8 0f0f 	cmp.w	r8, #15
    9dd8:	d802      	bhi.n	9de0 <_Unwind_VRS_Pop+0x200>
    9dda:	a820      	add	r0, sp, #128	; 0x80
    9ddc:	f000 f870 	bl	9ec0 <__gnu_Unwind_Save_VFP_D>
    9de0:	466f      	mov	r7, sp
    9de2:	4638      	mov	r0, r7
    9de4:	f1c8 0510 	rsb	r5, r8, #16
    9de8:	f000 f872 	bl	9ed0 <__gnu_Unwind_Save_VFP_D_16_to_31>
    9dec:	2d00      	cmp	r5, #0
    9dee:	6bb2      	ldr	r2, [r6, #56]	; 0x38
    9df0:	dd28      	ble.n	9e44 <_Unwind_VRS_Pop+0x264>
    9df2:	af20      	add	r7, sp, #128	; 0x80
    9df4:	e7b3      	b.n	9d5e <_Unwind_VRS_Pop+0x17e>
    9df6:	f023 0310 	bic.w	r3, r3, #16
    9dfa:	6003      	str	r3, [r0, #0]
    9dfc:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
    9e00:	f000 f8b8 	bl	9f74 <__gnu_Unwind_Save_WMMXC>
    9e04:	e704      	b.n	9c10 <_Unwind_VRS_Pop+0x30>
    9e06:	f023 0308 	bic.w	r3, r3, #8
    9e0a:	6003      	str	r3, [r0, #0]
    9e0c:	f500 70a8 	add.w	r0, r0, #336	; 0x150
    9e10:	f000 f884 	bl	9f1c <__gnu_Unwind_Save_WMMXD>
    9e14:	e72a      	b.n	9c6c <_Unwind_VRS_Pop+0x8c>
    9e16:	af20      	add	r7, sp, #128	; 0x80
    9e18:	3204      	adds	r2, #4
    9e1a:	63b2      	str	r2, [r6, #56]	; 0x38
    9e1c:	4638      	mov	r0, r7
    9e1e:	f000 f843 	bl	9ea8 <__gnu_Unwind_Restore_VFP>
    9e22:	e75f      	b.n	9ce4 <_Unwind_VRS_Pop+0x104>
    9e24:	2c01      	cmp	r4, #1
    9e26:	d0f7      	beq.n	9e18 <_Unwind_VRS_Pop+0x238>
    9e28:	f1b8 0f0f 	cmp.w	r8, #15
    9e2c:	63b2      	str	r2, [r6, #56]	; 0x38
    9e2e:	f63f af59 	bhi.w	9ce4 <_Unwind_VRS_Pop+0x104>
    9e32:	4638      	mov	r0, r7
    9e34:	f000 f840 	bl	9eb8 <__gnu_Unwind_Restore_VFP_D>
    9e38:	f1b9 0f00 	cmp.w	r9, #0
    9e3c:	f43f af52 	beq.w	9ce4 <_Unwind_VRS_Pop+0x104>
    9e40:	466f      	mov	r7, sp
    9e42:	e7b0      	b.n	9da6 <_Unwind_VRS_Pop+0x1c6>
    9e44:	4613      	mov	r3, r2
    9e46:	e799      	b.n	9d7c <_Unwind_VRS_Pop+0x19c>
    9e48:	4630      	mov	r0, r6
    9e4a:	f022 0204 	bic.w	r2, r2, #4
    9e4e:	f840 2bd0 	str.w	r2, [r0], #208
    9e52:	f000 f83d 	bl	9ed0 <__gnu_Unwind_Save_VFP_D_16_to_31>
    9e56:	e7bd      	b.n	9dd4 <_Unwind_VRS_Pop+0x1f4>
    9e58:	af20      	add	r7, sp, #128	; 0x80
    9e5a:	e7ea      	b.n	9e32 <_Unwind_VRS_Pop+0x252>
    9e5c:	6833      	ldr	r3, [r6, #0]
    9e5e:	07d9      	lsls	r1, r3, #31
    9e60:	d508      	bpl.n	9e74 <_Unwind_VRS_Pop+0x294>
    9e62:	f023 0301 	bic.w	r3, r3, #1
    9e66:	4630      	mov	r0, r6
    9e68:	f043 0302 	orr.w	r3, r3, #2
    9e6c:	f840 3b48 	str.w	r3, [r0], #72
    9e70:	f000 f826 	bl	9ec0 <__gnu_Unwind_Save_VFP_D>
    9e74:	af20      	add	r7, sp, #128	; 0x80
    9e76:	4638      	mov	r0, r7
    9e78:	464d      	mov	r5, r9
    9e7a:	f000 f821 	bl	9ec0 <__gnu_Unwind_Save_VFP_D>
    9e7e:	6bb2      	ldr	r2, [r6, #56]	; 0x38
    9e80:	2d00      	cmp	r5, #0
    9e82:	f47f af6a 	bne.w	9d5a <_Unwind_VRS_Pop+0x17a>
    9e86:	4638      	mov	r0, r7
    9e88:	f000 f816 	bl	9eb8 <__gnu_Unwind_Restore_VFP_D>
    9e8c:	e72a      	b.n	9ce4 <_Unwind_VRS_Pop+0x104>
    9e8e:	bf00      	nop

00009e90 <__restore_core_regs>:
    9e90:	f100 0134 	add.w	r1, r0, #52	; 0x34
    9e94:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
    9e98:	469c      	mov	ip, r3
    9e9a:	46a6      	mov	lr, r4
    9e9c:	f84c 5d04 	str.w	r5, [ip, #-4]!
    9ea0:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
    9ea4:	46e5      	mov	sp, ip
    9ea6:	bd00      	pop	{pc}

00009ea8 <__gnu_Unwind_Restore_VFP>:
    9ea8:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
    9eac:	4770      	bx	lr
    9eae:	bf00      	nop

00009eb0 <__gnu_Unwind_Save_VFP>:
    9eb0:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
    9eb4:	4770      	bx	lr
    9eb6:	bf00      	nop

00009eb8 <__gnu_Unwind_Restore_VFP_D>:
    9eb8:	ec90 0b20 	vldmia	r0, {d0-d15}
    9ebc:	4770      	bx	lr
    9ebe:	bf00      	nop

00009ec0 <__gnu_Unwind_Save_VFP_D>:
    9ec0:	ec80 0b20 	vstmia	r0, {d0-d15}
    9ec4:	4770      	bx	lr
    9ec6:	bf00      	nop

00009ec8 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
    9ec8:	ecd0 0b20 	vldmia	r0, {d16-d31}
    9ecc:	4770      	bx	lr
    9ece:	bf00      	nop

00009ed0 <__gnu_Unwind_Save_VFP_D_16_to_31>:
    9ed0:	ecc0 0b20 	vstmia	r0, {d16-d31}
    9ed4:	4770      	bx	lr
    9ed6:	bf00      	nop

00009ed8 <__gnu_Unwind_Restore_WMMXD>:
    9ed8:	ecf0 0102 	ldfe	f0, [r0], #8
    9edc:	ecf0 1102 	ldfe	f1, [r0], #8
    9ee0:	ecf0 2102 	ldfe	f2, [r0], #8
    9ee4:	ecf0 3102 	ldfe	f3, [r0], #8
    9ee8:	ecf0 4102 	ldfe	f4, [r0], #8
    9eec:	ecf0 5102 	ldfe	f5, [r0], #8
    9ef0:	ecf0 6102 	ldfe	f6, [r0], #8
    9ef4:	ecf0 7102 	ldfe	f7, [r0], #8
    9ef8:	ecf0 8102 	ldfp	f0, [r0], #8
    9efc:	ecf0 9102 	ldfp	f1, [r0], #8
    9f00:	ecf0 a102 	ldfp	f2, [r0], #8
    9f04:	ecf0 b102 	ldfp	f3, [r0], #8
    9f08:	ecf0 c102 	ldfp	f4, [r0], #8
    9f0c:	ecf0 d102 	ldfp	f5, [r0], #8
    9f10:	ecf0 e102 	ldfp	f6, [r0], #8
    9f14:	ecf0 f102 	ldfp	f7, [r0], #8
    9f18:	4770      	bx	lr
    9f1a:	bf00      	nop

00009f1c <__gnu_Unwind_Save_WMMXD>:
    9f1c:	ece0 0102 	stfe	f0, [r0], #8
    9f20:	ece0 1102 	stfe	f1, [r0], #8
    9f24:	ece0 2102 	stfe	f2, [r0], #8
    9f28:	ece0 3102 	stfe	f3, [r0], #8
    9f2c:	ece0 4102 	stfe	f4, [r0], #8
    9f30:	ece0 5102 	stfe	f5, [r0], #8
    9f34:	ece0 6102 	stfe	f6, [r0], #8
    9f38:	ece0 7102 	stfe	f7, [r0], #8
    9f3c:	ece0 8102 	stfp	f0, [r0], #8
    9f40:	ece0 9102 	stfp	f1, [r0], #8
    9f44:	ece0 a102 	stfp	f2, [r0], #8
    9f48:	ece0 b102 	stfp	f3, [r0], #8
    9f4c:	ece0 c102 	stfp	f4, [r0], #8
    9f50:	ece0 d102 	stfp	f5, [r0], #8
    9f54:	ece0 e102 	stfp	f6, [r0], #8
    9f58:	ece0 f102 	stfp	f7, [r0], #8
    9f5c:	4770      	bx	lr
    9f5e:	bf00      	nop

00009f60 <__gnu_Unwind_Restore_WMMXC>:
    9f60:	fcb0 8101 	ldc2	1, cr8, [r0], #4
    9f64:	fcb0 9101 	ldc2	1, cr9, [r0], #4
    9f68:	fcb0 a101 	ldc2	1, cr10, [r0], #4
    9f6c:	fcb0 b101 	ldc2	1, cr11, [r0], #4
    9f70:	4770      	bx	lr
    9f72:	bf00      	nop

00009f74 <__gnu_Unwind_Save_WMMXC>:
    9f74:	fca0 8101 	stc2	1, cr8, [r0], #4
    9f78:	fca0 9101 	stc2	1, cr9, [r0], #4
    9f7c:	fca0 a101 	stc2	1, cr10, [r0], #4
    9f80:	fca0 b101 	stc2	1, cr11, [r0], #4
    9f84:	4770      	bx	lr
    9f86:	bf00      	nop

00009f88 <_Unwind_RaiseException>:
    9f88:	46ec      	mov	ip, sp
    9f8a:	b500      	push	{lr}
    9f8c:	e92d 5000 	stmdb	sp!, {ip, lr}
    9f90:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    9f94:	f04f 0300 	mov.w	r3, #0
    9f98:	e92d 000c 	stmdb	sp!, {r2, r3}
    9f9c:	a901      	add	r1, sp, #4
    9f9e:	f7ff fbc3 	bl	9728 <__gnu_Unwind_RaiseException>
    9fa2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    9fa6:	b012      	add	sp, #72	; 0x48
    9fa8:	4770      	bx	lr
    9faa:	bf00      	nop

00009fac <_Unwind_Resume>:
    9fac:	46ec      	mov	ip, sp
    9fae:	b500      	push	{lr}
    9fb0:	e92d 5000 	stmdb	sp!, {ip, lr}
    9fb4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    9fb8:	f04f 0300 	mov.w	r3, #0
    9fbc:	e92d 000c 	stmdb	sp!, {r2, r3}
    9fc0:	a901      	add	r1, sp, #4
    9fc2:	f7ff fbed 	bl	97a0 <__gnu_Unwind_Resume>
    9fc6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    9fca:	b012      	add	sp, #72	; 0x48
    9fcc:	4770      	bx	lr
    9fce:	bf00      	nop

00009fd0 <_Unwind_Resume_or_Rethrow>:
    9fd0:	46ec      	mov	ip, sp
    9fd2:	b500      	push	{lr}
    9fd4:	e92d 5000 	stmdb	sp!, {ip, lr}
    9fd8:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    9fdc:	f04f 0300 	mov.w	r3, #0
    9fe0:	e92d 000c 	stmdb	sp!, {r2, r3}
    9fe4:	a901      	add	r1, sp, #4
    9fe6:	f7ff fbfd 	bl	97e4 <__gnu_Unwind_Resume_or_Rethrow>
    9fea:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    9fee:	b012      	add	sp, #72	; 0x48
    9ff0:	4770      	bx	lr
    9ff2:	bf00      	nop

00009ff4 <_Unwind_ForcedUnwind>:
    9ff4:	46ec      	mov	ip, sp
    9ff6:	b500      	push	{lr}
    9ff8:	e92d 5000 	stmdb	sp!, {ip, lr}
    9ffc:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    a000:	f04f 0300 	mov.w	r3, #0
    a004:	e92d 000c 	stmdb	sp!, {r2, r3}
    a008:	ab01      	add	r3, sp, #4
    a00a:	f7ff fbc1 	bl	9790 <__gnu_Unwind_ForcedUnwind>
    a00e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    a012:	b012      	add	sp, #72	; 0x48
    a014:	4770      	bx	lr
    a016:	bf00      	nop

0000a018 <_Unwind_Backtrace>:
    a018:	46ec      	mov	ip, sp
    a01a:	b500      	push	{lr}
    a01c:	e92d 5000 	stmdb	sp!, {ip, lr}
    a020:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    a024:	f04f 0300 	mov.w	r3, #0
    a028:	e92d 000c 	stmdb	sp!, {r2, r3}
    a02c:	aa01      	add	r2, sp, #4
    a02e:	f7ff fc35 	bl	989c <__gnu_Unwind_Backtrace>
    a032:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    a036:	b012      	add	sp, #72	; 0x48
    a038:	4770      	bx	lr
    a03a:	bf00      	nop

0000a03c <next_unwind_byte>:
    a03c:	7a02      	ldrb	r2, [r0, #8]
    a03e:	4603      	mov	r3, r0
    a040:	b97a      	cbnz	r2, a062 <next_unwind_byte+0x26>
    a042:	7a42      	ldrb	r2, [r0, #9]
    a044:	b1a2      	cbz	r2, a070 <next_unwind_byte+0x34>
    a046:	6841      	ldr	r1, [r0, #4]
    a048:	3a01      	subs	r2, #1
    a04a:	b410      	push	{r4}
    a04c:	7242      	strb	r2, [r0, #9]
    a04e:	6808      	ldr	r0, [r1, #0]
    a050:	2203      	movs	r2, #3
    a052:	1d0c      	adds	r4, r1, #4
    a054:	721a      	strb	r2, [r3, #8]
    a056:	0202      	lsls	r2, r0, #8
    a058:	605c      	str	r4, [r3, #4]
    a05a:	0e00      	lsrs	r0, r0, #24
    a05c:	bc10      	pop	{r4}
    a05e:	601a      	str	r2, [r3, #0]
    a060:	4770      	bx	lr
    a062:	6800      	ldr	r0, [r0, #0]
    a064:	3a01      	subs	r2, #1
    a066:	721a      	strb	r2, [r3, #8]
    a068:	0202      	lsls	r2, r0, #8
    a06a:	601a      	str	r2, [r3, #0]
    a06c:	0e00      	lsrs	r0, r0, #24
    a06e:	4770      	bx	lr
    a070:	20b0      	movs	r0, #176	; 0xb0
    a072:	4770      	bx	lr

0000a074 <_Unwind_GetGR.constprop.0>:
    a074:	b500      	push	{lr}
    a076:	b085      	sub	sp, #20
    a078:	2300      	movs	r3, #0
    a07a:	aa03      	add	r2, sp, #12
    a07c:	9200      	str	r2, [sp, #0]
    a07e:	4619      	mov	r1, r3
    a080:	220c      	movs	r2, #12
    a082:	f7ff fbc1 	bl	9808 <_Unwind_VRS_Get>
    a086:	9803      	ldr	r0, [sp, #12]
    a088:	b005      	add	sp, #20
    a08a:	f85d fb04 	ldr.w	pc, [sp], #4
    a08e:	bf00      	nop

0000a090 <unwind_UCB_from_context>:
    a090:	f7ff bff0 	b.w	a074 <_Unwind_GetGR.constprop.0>

0000a094 <__gnu_unwind_execute>:
    a094:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    a098:	b085      	sub	sp, #20
    a09a:	4607      	mov	r7, r0
    a09c:	460e      	mov	r6, r1
    a09e:	f04f 0800 	mov.w	r8, #0
    a0a2:	ad03      	add	r5, sp, #12
    a0a4:	4630      	mov	r0, r6
    a0a6:	f7ff ffc9 	bl	a03c <next_unwind_byte>
    a0aa:	28b0      	cmp	r0, #176	; 0xb0
    a0ac:	4604      	mov	r4, r0
    a0ae:	f000 80cb 	beq.w	a248 <__gnu_unwind_execute+0x1b4>
    a0b2:	0603      	lsls	r3, r0, #24
    a0b4:	d540      	bpl.n	a138 <__gnu_unwind_execute+0xa4>
    a0b6:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
    a0ba:	2b80      	cmp	r3, #128	; 0x80
    a0bc:	d056      	beq.n	a16c <__gnu_unwind_execute+0xd8>
    a0be:	2bb0      	cmp	r3, #176	; 0xb0
    a0c0:	d07d      	beq.n	a1be <__gnu_unwind_execute+0x12a>
    a0c2:	d81c      	bhi.n	a0fe <__gnu_unwind_execute+0x6a>
    a0c4:	2b90      	cmp	r3, #144	; 0x90
    a0c6:	f000 8093 	beq.w	a1f0 <__gnu_unwind_execute+0x15c>
    a0ca:	2ba0      	cmp	r3, #160	; 0xa0
    a0cc:	d113      	bne.n	a0f6 <__gnu_unwind_execute+0x62>
    a0ce:	43c3      	mvns	r3, r0
    a0d0:	f003 0307 	and.w	r3, r3, #7
    a0d4:	f44f 627f 	mov.w	r2, #4080	; 0xff0
    a0d8:	411a      	asrs	r2, r3
    a0da:	0701      	lsls	r1, r0, #28
    a0dc:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
    a0e0:	f04f 0300 	mov.w	r3, #0
    a0e4:	bf48      	it	mi
    a0e6:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
    a0ea:	4619      	mov	r1, r3
    a0ec:	4638      	mov	r0, r7
    a0ee:	f7ff fd77 	bl	9be0 <_Unwind_VRS_Pop>
    a0f2:	2800      	cmp	r0, #0
    a0f4:	d0d6      	beq.n	a0a4 <__gnu_unwind_execute+0x10>
    a0f6:	2009      	movs	r0, #9
    a0f8:	b005      	add	sp, #20
    a0fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    a0fe:	2bc0      	cmp	r3, #192	; 0xc0
    a100:	d14b      	bne.n	a19a <__gnu_unwind_execute+0x106>
    a102:	28c6      	cmp	r0, #198	; 0xc6
    a104:	f000 8089 	beq.w	a21a <__gnu_unwind_execute+0x186>
    a108:	28c7      	cmp	r0, #199	; 0xc7
    a10a:	f000 80a2 	beq.w	a252 <__gnu_unwind_execute+0x1be>
    a10e:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
    a112:	2bc0      	cmp	r3, #192	; 0xc0
    a114:	f000 80bc 	beq.w	a290 <__gnu_unwind_execute+0x1fc>
    a118:	28c8      	cmp	r0, #200	; 0xc8
    a11a:	f000 80bf 	beq.w	a29c <__gnu_unwind_execute+0x208>
    a11e:	28c9      	cmp	r0, #201	; 0xc9
    a120:	d1e9      	bne.n	a0f6 <__gnu_unwind_execute+0x62>
    a122:	4630      	mov	r0, r6
    a124:	f7ff ff8a 	bl	a03c <next_unwind_byte>
    a128:	0302      	lsls	r2, r0, #12
    a12a:	f000 000f 	and.w	r0, r0, #15
    a12e:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
    a132:	3001      	adds	r0, #1
    a134:	4302      	orrs	r2, r0
    a136:	e039      	b.n	a1ac <__gnu_unwind_execute+0x118>
    a138:	0083      	lsls	r3, r0, #2
    a13a:	b2db      	uxtb	r3, r3
    a13c:	f103 0904 	add.w	r9, r3, #4
    a140:	2300      	movs	r3, #0
    a142:	4619      	mov	r1, r3
    a144:	9500      	str	r5, [sp, #0]
    a146:	220d      	movs	r2, #13
    a148:	4638      	mov	r0, r7
    a14a:	f7ff fb5d 	bl	9808 <_Unwind_VRS_Get>
    a14e:	9b03      	ldr	r3, [sp, #12]
    a150:	0660      	lsls	r0, r4, #25
    a152:	bf4c      	ite	mi
    a154:	eba3 0309 	submi.w	r3, r3, r9
    a158:	444b      	addpl	r3, r9
    a15a:	9303      	str	r3, [sp, #12]
    a15c:	2300      	movs	r3, #0
    a15e:	9500      	str	r5, [sp, #0]
    a160:	220d      	movs	r2, #13
    a162:	4619      	mov	r1, r3
    a164:	4638      	mov	r0, r7
    a166:	f7ff fb75 	bl	9854 <_Unwind_VRS_Set>
    a16a:	e79b      	b.n	a0a4 <__gnu_unwind_execute+0x10>
    a16c:	0204      	lsls	r4, r0, #8
    a16e:	4630      	mov	r0, r6
    a170:	f7ff ff64 	bl	a03c <next_unwind_byte>
    a174:	4320      	orrs	r0, r4
    a176:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
    a17a:	d0bc      	beq.n	a0f6 <__gnu_unwind_execute+0x62>
    a17c:	0104      	lsls	r4, r0, #4
    a17e:	2300      	movs	r3, #0
    a180:	b2a2      	uxth	r2, r4
    a182:	4619      	mov	r1, r3
    a184:	4638      	mov	r0, r7
    a186:	f7ff fd2b 	bl	9be0 <_Unwind_VRS_Pop>
    a18a:	2800      	cmp	r0, #0
    a18c:	d1b3      	bne.n	a0f6 <__gnu_unwind_execute+0x62>
    a18e:	f414 4f00 	tst.w	r4, #32768	; 0x8000
    a192:	bf18      	it	ne
    a194:	f04f 0801 	movne.w	r8, #1
    a198:	e784      	b.n	a0a4 <__gnu_unwind_execute+0x10>
    a19a:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
    a19e:	2bd0      	cmp	r3, #208	; 0xd0
    a1a0:	d1a9      	bne.n	a0f6 <__gnu_unwind_execute+0x62>
    a1a2:	f000 0207 	and.w	r2, r0, #7
    a1a6:	3201      	adds	r2, #1
    a1a8:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
    a1ac:	2305      	movs	r3, #5
    a1ae:	2101      	movs	r1, #1
    a1b0:	4638      	mov	r0, r7
    a1b2:	f7ff fd15 	bl	9be0 <_Unwind_VRS_Pop>
    a1b6:	2800      	cmp	r0, #0
    a1b8:	f43f af74 	beq.w	a0a4 <__gnu_unwind_execute+0x10>
    a1bc:	e79b      	b.n	a0f6 <__gnu_unwind_execute+0x62>
    a1be:	28b1      	cmp	r0, #177	; 0xb1
    a1c0:	d037      	beq.n	a232 <__gnu_unwind_execute+0x19e>
    a1c2:	28b2      	cmp	r0, #178	; 0xb2
    a1c4:	f000 8087 	beq.w	a2d6 <__gnu_unwind_execute+0x242>
    a1c8:	28b3      	cmp	r0, #179	; 0xb3
    a1ca:	d056      	beq.n	a27a <__gnu_unwind_execute+0x1e6>
    a1cc:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
    a1d0:	2bb4      	cmp	r3, #180	; 0xb4
    a1d2:	d090      	beq.n	a0f6 <__gnu_unwind_execute+0x62>
    a1d4:	f000 0207 	and.w	r2, r0, #7
    a1d8:	3201      	adds	r2, #1
    a1da:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
    a1de:	2301      	movs	r3, #1
    a1e0:	4619      	mov	r1, r3
    a1e2:	4638      	mov	r0, r7
    a1e4:	f7ff fcfc 	bl	9be0 <_Unwind_VRS_Pop>
    a1e8:	2800      	cmp	r0, #0
    a1ea:	f43f af5b 	beq.w	a0a4 <__gnu_unwind_execute+0x10>
    a1ee:	e782      	b.n	a0f6 <__gnu_unwind_execute+0x62>
    a1f0:	f000 030d 	and.w	r3, r0, #13
    a1f4:	2b0d      	cmp	r3, #13
    a1f6:	f43f af7e 	beq.w	a0f6 <__gnu_unwind_execute+0x62>
    a1fa:	2300      	movs	r3, #0
    a1fc:	f000 020f 	and.w	r2, r0, #15
    a200:	4619      	mov	r1, r3
    a202:	9500      	str	r5, [sp, #0]
    a204:	4638      	mov	r0, r7
    a206:	f7ff faff 	bl	9808 <_Unwind_VRS_Get>
    a20a:	2300      	movs	r3, #0
    a20c:	9500      	str	r5, [sp, #0]
    a20e:	220d      	movs	r2, #13
    a210:	4619      	mov	r1, r3
    a212:	4638      	mov	r0, r7
    a214:	f7ff fb1e 	bl	9854 <_Unwind_VRS_Set>
    a218:	e744      	b.n	a0a4 <__gnu_unwind_execute+0x10>
    a21a:	4630      	mov	r0, r6
    a21c:	f7ff ff0e 	bl	a03c <next_unwind_byte>
    a220:	0302      	lsls	r2, r0, #12
    a222:	f000 000f 	and.w	r0, r0, #15
    a226:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
    a22a:	3001      	adds	r0, #1
    a22c:	4302      	orrs	r2, r0
    a22e:	2303      	movs	r3, #3
    a230:	e7d6      	b.n	a1e0 <__gnu_unwind_execute+0x14c>
    a232:	4630      	mov	r0, r6
    a234:	f7ff ff02 	bl	a03c <next_unwind_byte>
    a238:	4602      	mov	r2, r0
    a23a:	2800      	cmp	r0, #0
    a23c:	f43f af5b 	beq.w	a0f6 <__gnu_unwind_execute+0x62>
    a240:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
    a244:	d0cc      	beq.n	a1e0 <__gnu_unwind_execute+0x14c>
    a246:	e756      	b.n	a0f6 <__gnu_unwind_execute+0x62>
    a248:	f1b8 0f00 	cmp.w	r8, #0
    a24c:	d032      	beq.n	a2b4 <__gnu_unwind_execute+0x220>
    a24e:	2000      	movs	r0, #0
    a250:	e752      	b.n	a0f8 <__gnu_unwind_execute+0x64>
    a252:	4630      	mov	r0, r6
    a254:	f7ff fef2 	bl	a03c <next_unwind_byte>
    a258:	4602      	mov	r2, r0
    a25a:	2800      	cmp	r0, #0
    a25c:	f43f af4b 	beq.w	a0f6 <__gnu_unwind_execute+0x62>
    a260:	f010 0ff0 	tst.w	r0, #240	; 0xf0
    a264:	f47f af47 	bne.w	a0f6 <__gnu_unwind_execute+0x62>
    a268:	2300      	movs	r3, #0
    a26a:	2104      	movs	r1, #4
    a26c:	4638      	mov	r0, r7
    a26e:	f7ff fcb7 	bl	9be0 <_Unwind_VRS_Pop>
    a272:	2800      	cmp	r0, #0
    a274:	f43f af16 	beq.w	a0a4 <__gnu_unwind_execute+0x10>
    a278:	e73d      	b.n	a0f6 <__gnu_unwind_execute+0x62>
    a27a:	4630      	mov	r0, r6
    a27c:	f7ff fede 	bl	a03c <next_unwind_byte>
    a280:	0302      	lsls	r2, r0, #12
    a282:	f000 000f 	and.w	r0, r0, #15
    a286:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
    a28a:	3001      	adds	r0, #1
    a28c:	4302      	orrs	r2, r0
    a28e:	e7a6      	b.n	a1de <__gnu_unwind_execute+0x14a>
    a290:	f000 020f 	and.w	r2, r0, #15
    a294:	3201      	adds	r2, #1
    a296:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
    a29a:	e7c8      	b.n	a22e <__gnu_unwind_execute+0x19a>
    a29c:	4630      	mov	r0, r6
    a29e:	f7ff fecd 	bl	a03c <next_unwind_byte>
    a2a2:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
    a2a6:	f000 030f 	and.w	r3, r0, #15
    a2aa:	3210      	adds	r2, #16
    a2ac:	3301      	adds	r3, #1
    a2ae:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
    a2b2:	e77b      	b.n	a1ac <__gnu_unwind_execute+0x118>
    a2b4:	ac03      	add	r4, sp, #12
    a2b6:	4643      	mov	r3, r8
    a2b8:	220e      	movs	r2, #14
    a2ba:	4641      	mov	r1, r8
    a2bc:	9400      	str	r4, [sp, #0]
    a2be:	4638      	mov	r0, r7
    a2c0:	f7ff faa2 	bl	9808 <_Unwind_VRS_Get>
    a2c4:	9400      	str	r4, [sp, #0]
    a2c6:	4643      	mov	r3, r8
    a2c8:	220f      	movs	r2, #15
    a2ca:	4641      	mov	r1, r8
    a2cc:	4638      	mov	r0, r7
    a2ce:	f7ff fac1 	bl	9854 <_Unwind_VRS_Set>
    a2d2:	4640      	mov	r0, r8
    a2d4:	e710      	b.n	a0f8 <__gnu_unwind_execute+0x64>
    a2d6:	2300      	movs	r3, #0
    a2d8:	220d      	movs	r2, #13
    a2da:	4619      	mov	r1, r3
    a2dc:	9500      	str	r5, [sp, #0]
    a2de:	4638      	mov	r0, r7
    a2e0:	f7ff fa92 	bl	9808 <_Unwind_VRS_Get>
    a2e4:	4630      	mov	r0, r6
    a2e6:	f7ff fea9 	bl	a03c <next_unwind_byte>
    a2ea:	0602      	lsls	r2, r0, #24
    a2ec:	9c03      	ldr	r4, [sp, #12]
    a2ee:	f04f 0902 	mov.w	r9, #2
    a2f2:	d50c      	bpl.n	a30e <__gnu_unwind_execute+0x27a>
    a2f4:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    a2f8:	fa00 f009 	lsl.w	r0, r0, r9
    a2fc:	4404      	add	r4, r0
    a2fe:	4630      	mov	r0, r6
    a300:	9403      	str	r4, [sp, #12]
    a302:	f7ff fe9b 	bl	a03c <next_unwind_byte>
    a306:	0603      	lsls	r3, r0, #24
    a308:	f109 0907 	add.w	r9, r9, #7
    a30c:	d4f2      	bmi.n	a2f4 <__gnu_unwind_execute+0x260>
    a30e:	f000 037f 	and.w	r3, r0, #127	; 0x7f
    a312:	fa03 f309 	lsl.w	r3, r3, r9
    a316:	f504 7401 	add.w	r4, r4, #516	; 0x204
    a31a:	4423      	add	r3, r4
    a31c:	e71d      	b.n	a15a <__gnu_unwind_execute+0xc6>
    a31e:	bf00      	nop

0000a320 <__gnu_unwind_frame>:
    a320:	b510      	push	{r4, lr}
    a322:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
    a324:	6853      	ldr	r3, [r2, #4]
    a326:	b084      	sub	sp, #16
    a328:	f04f 0c03 	mov.w	ip, #3
    a32c:	3208      	adds	r2, #8
    a32e:	021c      	lsls	r4, r3, #8
    a330:	4608      	mov	r0, r1
    a332:	0e1b      	lsrs	r3, r3, #24
    a334:	a901      	add	r1, sp, #4
    a336:	9401      	str	r4, [sp, #4]
    a338:	9202      	str	r2, [sp, #8]
    a33a:	f88d c00c 	strb.w	ip, [sp, #12]
    a33e:	f88d 300d 	strb.w	r3, [sp, #13]
    a342:	f7ff fea7 	bl	a094 <__gnu_unwind_execute>
    a346:	b004      	add	sp, #16
    a348:	bd10      	pop	{r4, pc}
    a34a:	bf00      	nop

0000a34c <_Unwind_GetRegionStart>:
    a34c:	b508      	push	{r3, lr}
    a34e:	f7ff fe9f 	bl	a090 <unwind_UCB_from_context>
    a352:	6c80      	ldr	r0, [r0, #72]	; 0x48
    a354:	bd08      	pop	{r3, pc}
    a356:	bf00      	nop

0000a358 <_Unwind_GetLanguageSpecificData>:
    a358:	b508      	push	{r3, lr}
    a35a:	f7ff fe99 	bl	a090 <unwind_UCB_from_context>
    a35e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    a360:	79c3      	ldrb	r3, [r0, #7]
    a362:	3302      	adds	r3, #2
    a364:	eb00 0083 	add.w	r0, r0, r3, lsl #2
    a368:	bd08      	pop	{r3, pc}
    a36a:	bf00      	nop

0000a36c <_Unwind_GetDataRelBase>:
    a36c:	b508      	push	{r3, lr}
    a36e:	f7f6 fb1d 	bl	9ac <abort>

0000a372 <_Unwind_GetTextRelBase>:
    a372:	b508      	push	{r3, lr}
    a374:	f7ff fffa 	bl	a36c <_Unwind_GetDataRelBase>

0000a378 <strncmp>:
    a378:	2a00      	cmp	r2, #0
    a37a:	d03e      	beq.n	a3fa <strncmp+0x82>
    a37c:	ea40 0301 	orr.w	r3, r0, r1
    a380:	079b      	lsls	r3, r3, #30
    a382:	b530      	push	{r4, r5, lr}
    a384:	4684      	mov	ip, r0
    a386:	d12f      	bne.n	a3e8 <strncmp+0x70>
    a388:	2a03      	cmp	r2, #3
    a38a:	d92d      	bls.n	a3e8 <strncmp+0x70>
    a38c:	460b      	mov	r3, r1
    a38e:	e008      	b.n	a3a2 <strncmp+0x2a>
    a390:	3a04      	subs	r2, #4
    a392:	4684      	mov	ip, r0
    a394:	4619      	mov	r1, r3
    a396:	d025      	beq.n	a3e4 <strncmp+0x6c>
    a398:	f01e 3f80 	tst.w	lr, #2155905152	; 0x80808080
    a39c:	d122      	bne.n	a3e4 <strncmp+0x6c>
    a39e:	2a03      	cmp	r2, #3
    a3a0:	d922      	bls.n	a3e8 <strncmp+0x70>
    a3a2:	6804      	ldr	r4, [r0, #0]
    a3a4:	4619      	mov	r1, r3
    a3a6:	f853 5b04 	ldr.w	r5, [r3], #4
    a3aa:	f1a4 3e01 	sub.w	lr, r4, #16843009	; 0x1010101
    a3ae:	42ac      	cmp	r4, r5
    a3b0:	4684      	mov	ip, r0
    a3b2:	ea2e 0e04 	bic.w	lr, lr, r4
    a3b6:	f100 0004 	add.w	r0, r0, #4
    a3ba:	d0e9      	beq.n	a390 <strncmp+0x18>
    a3bc:	f89c 0000 	ldrb.w	r0, [ip]
    a3c0:	780c      	ldrb	r4, [r1, #0]
    a3c2:	42a0      	cmp	r0, r4
    a3c4:	d11b      	bne.n	a3fe <strncmp+0x86>
    a3c6:	46e6      	mov	lr, ip
    a3c8:	b168      	cbz	r0, a3e6 <strncmp+0x6e>
    a3ca:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
    a3ce:	f811 4f01 	ldrb.w	r4, [r1, #1]!
    a3d2:	eba2 030e 	sub.w	r3, r2, lr
    a3d6:	42a0      	cmp	r0, r4
    a3d8:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
    a3dc:	d10f      	bne.n	a3fe <strncmp+0x86>
    a3de:	eb1c 0303 	adds.w	r3, ip, r3
    a3e2:	d1f1      	bne.n	a3c8 <strncmp+0x50>
    a3e4:	2000      	movs	r0, #0
    a3e6:	bd30      	pop	{r4, r5, pc}
    a3e8:	f89c 0000 	ldrb.w	r0, [ip]
    a3ec:	780c      	ldrb	r4, [r1, #0]
    a3ee:	4284      	cmp	r4, r0
    a3f0:	d105      	bne.n	a3fe <strncmp+0x86>
    a3f2:	2a01      	cmp	r2, #1
    a3f4:	d0f6      	beq.n	a3e4 <strncmp+0x6c>
    a3f6:	46e6      	mov	lr, ip
    a3f8:	e7e6      	b.n	a3c8 <strncmp+0x50>
    a3fa:	4610      	mov	r0, r2
    a3fc:	4770      	bx	lr
    a3fe:	1b00      	subs	r0, r0, r4
    a400:	bd30      	pop	{r4, r5, pc}
    a402:	bf00      	nop

0000a404 <strncpy>:
    a404:	ea40 0301 	orr.w	r3, r0, r1
    a408:	079b      	lsls	r3, r3, #30
    a40a:	b530      	push	{r4, r5, lr}
    a40c:	d101      	bne.n	a412 <strncpy+0xe>
    a40e:	2a03      	cmp	r2, #3
    a410:	d80f      	bhi.n	a432 <strncpy+0x2e>
    a412:	4684      	mov	ip, r0
    a414:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
    a418:	e007      	b.n	a42a <strncpy+0x26>
    a41a:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
    a41e:	f803 1b01 	strb.w	r1, [r3], #1
    a422:	1e54      	subs	r4, r2, #1
    a424:	b1c1      	cbz	r1, a458 <strncpy+0x54>
    a426:	469c      	mov	ip, r3
    a428:	4622      	mov	r2, r4
    a42a:	4663      	mov	r3, ip
    a42c:	2a00      	cmp	r2, #0
    a42e:	d1f4      	bne.n	a41a <strncpy+0x16>
    a430:	bd30      	pop	{r4, r5, pc}
    a432:	460b      	mov	r3, r1
    a434:	4684      	mov	ip, r0
    a436:	4619      	mov	r1, r3
    a438:	f853 5b04 	ldr.w	r5, [r3], #4
    a43c:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
    a440:	ea24 0405 	bic.w	r4, r4, r5
    a444:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
    a448:	d1e4      	bne.n	a414 <strncpy+0x10>
    a44a:	3a04      	subs	r2, #4
    a44c:	2a03      	cmp	r2, #3
    a44e:	f84c 5b04 	str.w	r5, [ip], #4
    a452:	4619      	mov	r1, r3
    a454:	d8ef      	bhi.n	a436 <strncpy+0x32>
    a456:	e7dd      	b.n	a414 <strncpy+0x10>
    a458:	4494      	add	ip, r2
    a45a:	2c00      	cmp	r4, #0
    a45c:	d0e8      	beq.n	a430 <strncpy+0x2c>
    a45e:	f803 1b01 	strb.w	r1, [r3], #1
    a462:	4563      	cmp	r3, ip
    a464:	d1fb      	bne.n	a45e <strncpy+0x5a>
    a466:	bd30      	pop	{r4, r5, pc}

0000a468 <fputc>:
    a468:	b530      	push	{r4, r5, lr}
    a46a:	4b17      	ldr	r3, [pc, #92]	; (a4c8 <fputc+0x60>)
    a46c:	681d      	ldr	r5, [r3, #0]
    a46e:	460c      	mov	r4, r1
    a470:	b083      	sub	sp, #12
    a472:	4601      	mov	r1, r0
    a474:	b10d      	cbz	r5, a47a <fputc+0x12>
    a476:	6b6b      	ldr	r3, [r5, #52]	; 0x34
    a478:	b1fb      	cbz	r3, a4ba <fputc+0x52>
    a47a:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a47c:	07db      	lsls	r3, r3, #31
    a47e:	d402      	bmi.n	a486 <fputc+0x1e>
    a480:	89a3      	ldrh	r3, [r4, #12]
    a482:	0598      	lsls	r0, r3, #22
    a484:	d513      	bpl.n	a4ae <fputc+0x46>
    a486:	4622      	mov	r2, r4
    a488:	4628      	mov	r0, r5
    a48a:	f002 fe99 	bl	d1c0 <_putc_r>
    a48e:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a490:	07da      	lsls	r2, r3, #31
    a492:	4605      	mov	r5, r0
    a494:	d402      	bmi.n	a49c <fputc+0x34>
    a496:	89a3      	ldrh	r3, [r4, #12]
    a498:	059b      	lsls	r3, r3, #22
    a49a:	d502      	bpl.n	a4a2 <fputc+0x3a>
    a49c:	4628      	mov	r0, r5
    a49e:	b003      	add	sp, #12
    a4a0:	bd30      	pop	{r4, r5, pc}
    a4a2:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a4a4:	f002 fc3e 	bl	cd24 <__retarget_lock_release_recursive>
    a4a8:	4628      	mov	r0, r5
    a4aa:	b003      	add	sp, #12
    a4ac:	bd30      	pop	{r4, r5, pc}
    a4ae:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a4b0:	9101      	str	r1, [sp, #4]
    a4b2:	f002 fc35 	bl	cd20 <__retarget_lock_acquire_recursive>
    a4b6:	9901      	ldr	r1, [sp, #4]
    a4b8:	e7e5      	b.n	a486 <fputc+0x1e>
    a4ba:	9001      	str	r0, [sp, #4]
    a4bc:	4628      	mov	r0, r5
    a4be:	f004 fb4b 	bl	eb58 <__sinit>
    a4c2:	9901      	ldr	r1, [sp, #4]
    a4c4:	e7d9      	b.n	a47a <fputc+0x12>
    a4c6:	bf00      	nop
    a4c8:	200026f4 	.word	0x200026f4

0000a4cc <_fputs_r>:
    a4cc:	b530      	push	{r4, r5, lr}
    a4ce:	b087      	sub	sp, #28
    a4d0:	4605      	mov	r5, r0
    a4d2:	4608      	mov	r0, r1
    a4d4:	4614      	mov	r4, r2
    a4d6:	9101      	str	r1, [sp, #4]
    a4d8:	f004 fbd2 	bl	ec80 <strlen>
    a4dc:	aa01      	add	r2, sp, #4
    a4de:	2301      	movs	r3, #1
    a4e0:	e9cd 0202 	strd	r0, r2, [sp, #8]
    a4e4:	9005      	str	r0, [sp, #20]
    a4e6:	9304      	str	r3, [sp, #16]
    a4e8:	b10d      	cbz	r5, a4ee <_fputs_r+0x22>
    a4ea:	6b6b      	ldr	r3, [r5, #52]	; 0x34
    a4ec:	b36b      	cbz	r3, a54a <_fputs_r+0x7e>
    a4ee:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a4f0:	f013 0f01 	tst.w	r3, #1
    a4f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a4f8:	b29a      	uxth	r2, r3
    a4fa:	d101      	bne.n	a500 <_fputs_r+0x34>
    a4fc:	0598      	lsls	r0, r3, #22
    a4fe:	d51d      	bpl.n	a53c <_fputs_r+0x70>
    a500:	0491      	lsls	r1, r2, #18
    a502:	d406      	bmi.n	a512 <_fputs_r+0x46>
    a504:	6e62      	ldr	r2, [r4, #100]	; 0x64
    a506:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
    a50a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
    a50e:	81a3      	strh	r3, [r4, #12]
    a510:	6662      	str	r2, [r4, #100]	; 0x64
    a512:	aa03      	add	r2, sp, #12
    a514:	4628      	mov	r0, r5
    a516:	4621      	mov	r1, r4
    a518:	f000 f848 	bl	a5ac <__sfvwrite_r>
    a51c:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a51e:	07da      	lsls	r2, r3, #31
    a520:	4605      	mov	r5, r0
    a522:	d402      	bmi.n	a52a <_fputs_r+0x5e>
    a524:	89a3      	ldrh	r3, [r4, #12]
    a526:	059b      	lsls	r3, r3, #22
    a528:	d502      	bpl.n	a530 <_fputs_r+0x64>
    a52a:	4628      	mov	r0, r5
    a52c:	b007      	add	sp, #28
    a52e:	bd30      	pop	{r4, r5, pc}
    a530:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a532:	f002 fbf7 	bl	cd24 <__retarget_lock_release_recursive>
    a536:	4628      	mov	r0, r5
    a538:	b007      	add	sp, #28
    a53a:	bd30      	pop	{r4, r5, pc}
    a53c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a53e:	f002 fbef 	bl	cd20 <__retarget_lock_acquire_recursive>
    a542:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a546:	b29a      	uxth	r2, r3
    a548:	e7da      	b.n	a500 <_fputs_r+0x34>
    a54a:	4628      	mov	r0, r5
    a54c:	f004 fb04 	bl	eb58 <__sinit>
    a550:	e7cd      	b.n	a4ee <_fputs_r+0x22>
    a552:	bf00      	nop

0000a554 <fputs>:
    a554:	b410      	push	{r4}
    a556:	4c04      	ldr	r4, [pc, #16]	; (a568 <fputs+0x14>)
    a558:	4603      	mov	r3, r0
    a55a:	460a      	mov	r2, r1
    a55c:	6820      	ldr	r0, [r4, #0]
    a55e:	f85d 4b04 	ldr.w	r4, [sp], #4
    a562:	4619      	mov	r1, r3
    a564:	f7ff bfb2 	b.w	a4cc <_fputs_r>
    a568:	200026f4 	.word	0x200026f4

0000a56c <sprintf>:
    a56c:	b40e      	push	{r1, r2, r3}
    a56e:	b510      	push	{r4, lr}
    a570:	b09d      	sub	sp, #116	; 0x74
    a572:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    a576:	ab1f      	add	r3, sp, #124	; 0x7c
    a578:	e9cd 0106 	strd	r0, r1, [sp, #24]
    a57c:	9104      	str	r1, [sp, #16]
    a57e:	4909      	ldr	r1, [pc, #36]	; (a5a4 <sprintf+0x38>)
    a580:	f853 2b04 	ldr.w	r2, [r3], #4
    a584:	9002      	str	r0, [sp, #8]
    a586:	4c08      	ldr	r4, [pc, #32]	; (a5a8 <sprintf+0x3c>)
    a588:	6808      	ldr	r0, [r1, #0]
    a58a:	9301      	str	r3, [sp, #4]
    a58c:	a902      	add	r1, sp, #8
    a58e:	9405      	str	r4, [sp, #20]
    a590:	f000 f9f2 	bl	a978 <_svfprintf_r>
    a594:	9b02      	ldr	r3, [sp, #8]
    a596:	2200      	movs	r2, #0
    a598:	701a      	strb	r2, [r3, #0]
    a59a:	b01d      	add	sp, #116	; 0x74
    a59c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    a5a0:	b003      	add	sp, #12
    a5a2:	4770      	bx	lr
    a5a4:	200026f4 	.word	0x200026f4
    a5a8:	ffff0208 	.word	0xffff0208

0000a5ac <__sfvwrite_r>:
    a5ac:	6893      	ldr	r3, [r2, #8]
    a5ae:	2b00      	cmp	r3, #0
    a5b0:	f000 8085 	beq.w	a6be <__sfvwrite_r+0x112>
    a5b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a5b8:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
    a5bc:	460c      	mov	r4, r1
    a5be:	0719      	lsls	r1, r3, #28
    a5c0:	4680      	mov	r8, r0
    a5c2:	b083      	sub	sp, #12
    a5c4:	4617      	mov	r7, r2
    a5c6:	b298      	uxth	r0, r3
    a5c8:	d525      	bpl.n	a616 <__sfvwrite_r+0x6a>
    a5ca:	6923      	ldr	r3, [r4, #16]
    a5cc:	b31b      	cbz	r3, a616 <__sfvwrite_r+0x6a>
    a5ce:	f010 0302 	ands.w	r3, r0, #2
    a5d2:	683d      	ldr	r5, [r7, #0]
    a5d4:	d02d      	beq.n	a632 <__sfvwrite_r+0x86>
    a5d6:	f04f 0a00 	mov.w	sl, #0
    a5da:	f8df b2c0 	ldr.w	fp, [pc, #704]	; a89c <__sfvwrite_r+0x2f0>
    a5de:	4656      	mov	r6, sl
    a5e0:	46b9      	mov	r9, r7
    a5e2:	455e      	cmp	r6, fp
    a5e4:	4633      	mov	r3, r6
    a5e6:	4652      	mov	r2, sl
    a5e8:	bf28      	it	cs
    a5ea:	465b      	movcs	r3, fp
    a5ec:	4640      	mov	r0, r8
    a5ee:	2e00      	cmp	r6, #0
    a5f0:	d052      	beq.n	a698 <__sfvwrite_r+0xec>
    a5f2:	69e1      	ldr	r1, [r4, #28]
    a5f4:	6a67      	ldr	r7, [r4, #36]	; 0x24
    a5f6:	47b8      	blx	r7
    a5f8:	2800      	cmp	r0, #0
    a5fa:	dd56      	ble.n	a6aa <__sfvwrite_r+0xfe>
    a5fc:	f8d9 3008 	ldr.w	r3, [r9, #8]
    a600:	1a1b      	subs	r3, r3, r0
    a602:	4482      	add	sl, r0
    a604:	1a36      	subs	r6, r6, r0
    a606:	f8c9 3008 	str.w	r3, [r9, #8]
    a60a:	2b00      	cmp	r3, #0
    a60c:	d1e9      	bne.n	a5e2 <__sfvwrite_r+0x36>
    a60e:	2000      	movs	r0, #0
    a610:	b003      	add	sp, #12
    a612:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a616:	4621      	mov	r1, r4
    a618:	4640      	mov	r0, r8
    a61a:	f002 fcff 	bl	d01c <__swsetup_r>
    a61e:	2800      	cmp	r0, #0
    a620:	f040 8138 	bne.w	a894 <__sfvwrite_r+0x2e8>
    a624:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a628:	683d      	ldr	r5, [r7, #0]
    a62a:	b298      	uxth	r0, r3
    a62c:	f010 0302 	ands.w	r3, r0, #2
    a630:	d1d1      	bne.n	a5d6 <__sfvwrite_r+0x2a>
    a632:	f010 0901 	ands.w	r9, r0, #1
    a636:	d144      	bne.n	a6c2 <__sfvwrite_r+0x116>
    a638:	464e      	mov	r6, r9
    a63a:	9700      	str	r7, [sp, #0]
    a63c:	b346      	cbz	r6, a690 <__sfvwrite_r+0xe4>
    a63e:	0582      	lsls	r2, r0, #22
    a640:	f8d4 b008 	ldr.w	fp, [r4, #8]
    a644:	f140 8085 	bpl.w	a752 <__sfvwrite_r+0x1a6>
    a648:	45b3      	cmp	fp, r6
    a64a:	465a      	mov	r2, fp
    a64c:	f200 80b4 	bhi.w	a7b8 <__sfvwrite_r+0x20c>
    a650:	f410 6f90 	tst.w	r0, #1152	; 0x480
    a654:	f040 80c1 	bne.w	a7da <__sfvwrite_r+0x22e>
    a658:	6820      	ldr	r0, [r4, #0]
    a65a:	9201      	str	r2, [sp, #4]
    a65c:	4649      	mov	r1, r9
    a65e:	f002 fa1d 	bl	ca9c <memmove>
    a662:	68a3      	ldr	r3, [r4, #8]
    a664:	9a01      	ldr	r2, [sp, #4]
    a666:	eba3 010b 	sub.w	r1, r3, fp
    a66a:	6823      	ldr	r3, [r4, #0]
    a66c:	60a1      	str	r1, [r4, #8]
    a66e:	4413      	add	r3, r2
    a670:	46b2      	mov	sl, r6
    a672:	6023      	str	r3, [r4, #0]
    a674:	2600      	movs	r6, #0
    a676:	9a00      	ldr	r2, [sp, #0]
    a678:	6893      	ldr	r3, [r2, #8]
    a67a:	eba3 030a 	sub.w	r3, r3, sl
    a67e:	44d1      	add	r9, sl
    a680:	6093      	str	r3, [r2, #8]
    a682:	2b00      	cmp	r3, #0
    a684:	d0c3      	beq.n	a60e <__sfvwrite_r+0x62>
    a686:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
    a68a:	b280      	uxth	r0, r0
    a68c:	2e00      	cmp	r6, #0
    a68e:	d1d6      	bne.n	a63e <__sfvwrite_r+0x92>
    a690:	e9d5 9600 	ldrd	r9, r6, [r5]
    a694:	3508      	adds	r5, #8
    a696:	e7d1      	b.n	a63c <__sfvwrite_r+0x90>
    a698:	e9d5 a600 	ldrd	sl, r6, [r5]
    a69c:	3508      	adds	r5, #8
    a69e:	e7a0      	b.n	a5e2 <__sfvwrite_r+0x36>
    a6a0:	4621      	mov	r1, r4
    a6a2:	4640      	mov	r0, r8
    a6a4:	f004 f998 	bl	e9d8 <_fflush_r>
    a6a8:	b388      	cbz	r0, a70e <__sfvwrite_r+0x162>
    a6aa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a6ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    a6b2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a6b6:	81a3      	strh	r3, [r4, #12]
    a6b8:	b003      	add	sp, #12
    a6ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a6be:	2000      	movs	r0, #0
    a6c0:	4770      	bx	lr
    a6c2:	461e      	mov	r6, r3
    a6c4:	46ba      	mov	sl, r7
    a6c6:	4699      	mov	r9, r3
    a6c8:	4618      	mov	r0, r3
    a6ca:	9500      	str	r5, [sp, #0]
    a6cc:	461f      	mov	r7, r3
    a6ce:	b366      	cbz	r6, a72a <__sfvwrite_r+0x17e>
    a6d0:	2800      	cmp	r0, #0
    a6d2:	d032      	beq.n	a73a <__sfvwrite_r+0x18e>
    a6d4:	464a      	mov	r2, r9
    a6d6:	e9d4 1304 	ldrd	r1, r3, [r4, #16]
    a6da:	6820      	ldr	r0, [r4, #0]
    a6dc:	68a5      	ldr	r5, [r4, #8]
    a6de:	42b2      	cmp	r2, r6
    a6e0:	bf28      	it	cs
    a6e2:	4632      	movcs	r2, r6
    a6e4:	4288      	cmp	r0, r1
    a6e6:	d904      	bls.n	a6f2 <__sfvwrite_r+0x146>
    a6e8:	eb05 0b03 	add.w	fp, r5, r3
    a6ec:	455a      	cmp	r2, fp
    a6ee:	f300 80a7 	bgt.w	a840 <__sfvwrite_r+0x294>
    a6f2:	4293      	cmp	r3, r2
    a6f4:	dc64      	bgt.n	a7c0 <__sfvwrite_r+0x214>
    a6f6:	69e1      	ldr	r1, [r4, #28]
    a6f8:	6a65      	ldr	r5, [r4, #36]	; 0x24
    a6fa:	463a      	mov	r2, r7
    a6fc:	4640      	mov	r0, r8
    a6fe:	47a8      	blx	r5
    a700:	f1b0 0b00 	subs.w	fp, r0, #0
    a704:	ddd1      	ble.n	a6aa <__sfvwrite_r+0xfe>
    a706:	ebb9 090b 	subs.w	r9, r9, fp
    a70a:	d0c9      	beq.n	a6a0 <__sfvwrite_r+0xf4>
    a70c:	2001      	movs	r0, #1
    a70e:	f8da 3008 	ldr.w	r3, [sl, #8]
    a712:	eba3 030b 	sub.w	r3, r3, fp
    a716:	445f      	add	r7, fp
    a718:	eba6 060b 	sub.w	r6, r6, fp
    a71c:	f8ca 3008 	str.w	r3, [sl, #8]
    a720:	2b00      	cmp	r3, #0
    a722:	f43f af74 	beq.w	a60e <__sfvwrite_r+0x62>
    a726:	2e00      	cmp	r6, #0
    a728:	d1d2      	bne.n	a6d0 <__sfvwrite_r+0x124>
    a72a:	9a00      	ldr	r2, [sp, #0]
    a72c:	6856      	ldr	r6, [r2, #4]
    a72e:	4613      	mov	r3, r2
    a730:	3208      	adds	r2, #8
    a732:	9200      	str	r2, [sp, #0]
    a734:	2e00      	cmp	r6, #0
    a736:	d0f8      	beq.n	a72a <__sfvwrite_r+0x17e>
    a738:	681f      	ldr	r7, [r3, #0]
    a73a:	4632      	mov	r2, r6
    a73c:	210a      	movs	r1, #10
    a73e:	4638      	mov	r0, r7
    a740:	f004 fa36 	bl	ebb0 <memchr>
    a744:	2800      	cmp	r0, #0
    a746:	f000 809c 	beq.w	a882 <__sfvwrite_r+0x2d6>
    a74a:	3001      	adds	r0, #1
    a74c:	eba0 0907 	sub.w	r9, r0, r7
    a750:	e7c0      	b.n	a6d4 <__sfvwrite_r+0x128>
    a752:	6820      	ldr	r0, [r4, #0]
    a754:	6923      	ldr	r3, [r4, #16]
    a756:	4298      	cmp	r0, r3
    a758:	d816      	bhi.n	a788 <__sfvwrite_r+0x1dc>
    a75a:	6962      	ldr	r2, [r4, #20]
    a75c:	42b2      	cmp	r2, r6
    a75e:	d813      	bhi.n	a788 <__sfvwrite_r+0x1dc>
    a760:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
    a764:	42b3      	cmp	r3, r6
    a766:	bf28      	it	cs
    a768:	4633      	movcs	r3, r6
    a76a:	69e1      	ldr	r1, [r4, #28]
    a76c:	fb93 f3f2 	sdiv	r3, r3, r2
    a770:	6a67      	ldr	r7, [r4, #36]	; 0x24
    a772:	fb02 f303 	mul.w	r3, r2, r3
    a776:	4640      	mov	r0, r8
    a778:	464a      	mov	r2, r9
    a77a:	47b8      	blx	r7
    a77c:	f1b0 0a00 	subs.w	sl, r0, #0
    a780:	dd93      	ble.n	a6aa <__sfvwrite_r+0xfe>
    a782:	eba6 060a 	sub.w	r6, r6, sl
    a786:	e776      	b.n	a676 <__sfvwrite_r+0xca>
    a788:	45b3      	cmp	fp, r6
    a78a:	46da      	mov	sl, fp
    a78c:	bf28      	it	cs
    a78e:	46b2      	movcs	sl, r6
    a790:	4652      	mov	r2, sl
    a792:	4649      	mov	r1, r9
    a794:	f002 f982 	bl	ca9c <memmove>
    a798:	68a3      	ldr	r3, [r4, #8]
    a79a:	6822      	ldr	r2, [r4, #0]
    a79c:	eba3 030a 	sub.w	r3, r3, sl
    a7a0:	4452      	add	r2, sl
    a7a2:	60a3      	str	r3, [r4, #8]
    a7a4:	6022      	str	r2, [r4, #0]
    a7a6:	2b00      	cmp	r3, #0
    a7a8:	d1eb      	bne.n	a782 <__sfvwrite_r+0x1d6>
    a7aa:	4621      	mov	r1, r4
    a7ac:	4640      	mov	r0, r8
    a7ae:	f004 f913 	bl	e9d8 <_fflush_r>
    a7b2:	2800      	cmp	r0, #0
    a7b4:	d0e5      	beq.n	a782 <__sfvwrite_r+0x1d6>
    a7b6:	e778      	b.n	a6aa <__sfvwrite_r+0xfe>
    a7b8:	6820      	ldr	r0, [r4, #0]
    a7ba:	46b3      	mov	fp, r6
    a7bc:	4632      	mov	r2, r6
    a7be:	e74c      	b.n	a65a <__sfvwrite_r+0xae>
    a7c0:	4639      	mov	r1, r7
    a7c2:	9201      	str	r2, [sp, #4]
    a7c4:	f002 f96a 	bl	ca9c <memmove>
    a7c8:	9a01      	ldr	r2, [sp, #4]
    a7ca:	68a3      	ldr	r3, [r4, #8]
    a7cc:	1a9b      	subs	r3, r3, r2
    a7ce:	60a3      	str	r3, [r4, #8]
    a7d0:	6823      	ldr	r3, [r4, #0]
    a7d2:	4413      	add	r3, r2
    a7d4:	6023      	str	r3, [r4, #0]
    a7d6:	4693      	mov	fp, r2
    a7d8:	e795      	b.n	a706 <__sfvwrite_r+0x15a>
    a7da:	6823      	ldr	r3, [r4, #0]
    a7dc:	6921      	ldr	r1, [r4, #16]
    a7de:	eba3 0b01 	sub.w	fp, r3, r1
    a7e2:	6963      	ldr	r3, [r4, #20]
    a7e4:	eb03 0a43 	add.w	sl, r3, r3, lsl #1
    a7e8:	eb0a 7ada 	add.w	sl, sl, sl, lsr #31
    a7ec:	f10b 0301 	add.w	r3, fp, #1
    a7f0:	ea4f 0a6a 	mov.w	sl, sl, asr #1
    a7f4:	4433      	add	r3, r6
    a7f6:	4553      	cmp	r3, sl
    a7f8:	4652      	mov	r2, sl
    a7fa:	bf84      	itt	hi
    a7fc:	469a      	movhi	sl, r3
    a7fe:	4652      	movhi	r2, sl
    a800:	0543      	lsls	r3, r0, #21
    a802:	d52c      	bpl.n	a85e <__sfvwrite_r+0x2b2>
    a804:	4611      	mov	r1, r2
    a806:	4640      	mov	r0, r8
    a808:	f001 fe68 	bl	c4dc <_malloc_r>
    a80c:	2800      	cmp	r0, #0
    a80e:	d03b      	beq.n	a888 <__sfvwrite_r+0x2dc>
    a810:	465a      	mov	r2, fp
    a812:	6921      	ldr	r1, [r4, #16]
    a814:	9001      	str	r0, [sp, #4]
    a816:	f7f5 ff05 	bl	624 <memcpy>
    a81a:	89a2      	ldrh	r2, [r4, #12]
    a81c:	9b01      	ldr	r3, [sp, #4]
    a81e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
    a822:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    a826:	81a2      	strh	r2, [r4, #12]
    a828:	eb03 000b 	add.w	r0, r3, fp
    a82c:	6123      	str	r3, [r4, #16]
    a82e:	ebaa 030b 	sub.w	r3, sl, fp
    a832:	f8c4 a014 	str.w	sl, [r4, #20]
    a836:	60a3      	str	r3, [r4, #8]
    a838:	6020      	str	r0, [r4, #0]
    a83a:	46b3      	mov	fp, r6
    a83c:	4632      	mov	r2, r6
    a83e:	e70c      	b.n	a65a <__sfvwrite_r+0xae>
    a840:	4639      	mov	r1, r7
    a842:	465a      	mov	r2, fp
    a844:	f002 f92a 	bl	ca9c <memmove>
    a848:	6823      	ldr	r3, [r4, #0]
    a84a:	445b      	add	r3, fp
    a84c:	6023      	str	r3, [r4, #0]
    a84e:	4621      	mov	r1, r4
    a850:	4640      	mov	r0, r8
    a852:	f004 f8c1 	bl	e9d8 <_fflush_r>
    a856:	2800      	cmp	r0, #0
    a858:	f43f af55 	beq.w	a706 <__sfvwrite_r+0x15a>
    a85c:	e725      	b.n	a6aa <__sfvwrite_r+0xfe>
    a85e:	4640      	mov	r0, r8
    a860:	f004 faba 	bl	edd8 <_realloc_r>
    a864:	4603      	mov	r3, r0
    a866:	2800      	cmp	r0, #0
    a868:	d1de      	bne.n	a828 <__sfvwrite_r+0x27c>
    a86a:	6921      	ldr	r1, [r4, #16]
    a86c:	4640      	mov	r0, r8
    a86e:	f004 fcef 	bl	f250 <_free_r>
    a872:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a876:	220c      	movs	r2, #12
    a878:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    a87c:	f8c8 2000 	str.w	r2, [r8]
    a880:	e715      	b.n	a6ae <__sfvwrite_r+0x102>
    a882:	1c72      	adds	r2, r6, #1
    a884:	4691      	mov	r9, r2
    a886:	e726      	b.n	a6d6 <__sfvwrite_r+0x12a>
    a888:	220c      	movs	r2, #12
    a88a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a88e:	f8c8 2000 	str.w	r2, [r8]
    a892:	e70c      	b.n	a6ae <__sfvwrite_r+0x102>
    a894:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a898:	e6ba      	b.n	a610 <__sfvwrite_r+0x64>
    a89a:	bf00      	nop
    a89c:	7ffffc00 	.word	0x7ffffc00

0000a8a0 <_fwrite_r>:
    a8a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a8a4:	b086      	sub	sp, #24
    a8a6:	fb02 f703 	mul.w	r7, r2, r3
    a8aa:	461d      	mov	r5, r3
    a8ac:	ab01      	add	r3, sp, #4
    a8ae:	9303      	str	r3, [sp, #12]
    a8b0:	2301      	movs	r3, #1
    a8b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    a8b4:	9101      	str	r1, [sp, #4]
    a8b6:	4690      	mov	r8, r2
    a8b8:	9702      	str	r7, [sp, #8]
    a8ba:	9705      	str	r7, [sp, #20]
    a8bc:	9304      	str	r3, [sp, #16]
    a8be:	4606      	mov	r6, r0
    a8c0:	b110      	cbz	r0, a8c8 <_fwrite_r+0x28>
    a8c2:	6b43      	ldr	r3, [r0, #52]	; 0x34
    a8c4:	2b00      	cmp	r3, #0
    a8c6:	d03d      	beq.n	a944 <_fwrite_r+0xa4>
    a8c8:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a8ca:	f013 0f01 	tst.w	r3, #1
    a8ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a8d2:	b29a      	uxth	r2, r3
    a8d4:	d101      	bne.n	a8da <_fwrite_r+0x3a>
    a8d6:	0599      	lsls	r1, r3, #22
    a8d8:	d52d      	bpl.n	a936 <_fwrite_r+0x96>
    a8da:	0492      	lsls	r2, r2, #18
    a8dc:	d406      	bmi.n	a8ec <_fwrite_r+0x4c>
    a8de:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
    a8e2:	81a3      	strh	r3, [r4, #12]
    a8e4:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a8e6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
    a8ea:	6663      	str	r3, [r4, #100]	; 0x64
    a8ec:	4630      	mov	r0, r6
    a8ee:	aa03      	add	r2, sp, #12
    a8f0:	4621      	mov	r1, r4
    a8f2:	f7ff fe5b 	bl	a5ac <__sfvwrite_r>
    a8f6:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a8f8:	b178      	cbz	r0, a91a <_fwrite_r+0x7a>
    a8fa:	07da      	lsls	r2, r3, #31
    a8fc:	d506      	bpl.n	a90c <_fwrite_r+0x6c>
    a8fe:	9b05      	ldr	r3, [sp, #20]
    a900:	1aff      	subs	r7, r7, r3
    a902:	fbb7 f0f8 	udiv	r0, r7, r8
    a906:	b006      	add	sp, #24
    a908:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    a90c:	89a3      	ldrh	r3, [r4, #12]
    a90e:	059b      	lsls	r3, r3, #22
    a910:	d4f5      	bmi.n	a8fe <_fwrite_r+0x5e>
    a912:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a914:	f002 fa06 	bl	cd24 <__retarget_lock_release_recursive>
    a918:	e7f1      	b.n	a8fe <_fwrite_r+0x5e>
    a91a:	07d8      	lsls	r0, r3, #31
    a91c:	d407      	bmi.n	a92e <_fwrite_r+0x8e>
    a91e:	89a3      	ldrh	r3, [r4, #12]
    a920:	0599      	lsls	r1, r3, #22
    a922:	d404      	bmi.n	a92e <_fwrite_r+0x8e>
    a924:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a926:	f002 f9fd 	bl	cd24 <__retarget_lock_release_recursive>
    a92a:	4628      	mov	r0, r5
    a92c:	e7eb      	b.n	a906 <_fwrite_r+0x66>
    a92e:	4628      	mov	r0, r5
    a930:	b006      	add	sp, #24
    a932:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    a936:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a938:	f002 f9f2 	bl	cd20 <__retarget_lock_acquire_recursive>
    a93c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a940:	b29a      	uxth	r2, r3
    a942:	e7ca      	b.n	a8da <_fwrite_r+0x3a>
    a944:	f004 f908 	bl	eb58 <__sinit>
    a948:	e7be      	b.n	a8c8 <_fwrite_r+0x28>
    a94a:	bf00      	nop

0000a94c <fwrite>:
    a94c:	b510      	push	{r4, lr}
    a94e:	4c06      	ldr	r4, [pc, #24]	; (a968 <fwrite+0x1c>)
    a950:	b082      	sub	sp, #8
    a952:	4684      	mov	ip, r0
    a954:	9300      	str	r3, [sp, #0]
    a956:	6820      	ldr	r0, [r4, #0]
    a958:	4613      	mov	r3, r2
    a95a:	460a      	mov	r2, r1
    a95c:	4661      	mov	r1, ip
    a95e:	f7ff ff9f 	bl	a8a0 <_fwrite_r>
    a962:	b002      	add	sp, #8
    a964:	bd10      	pop	{r4, pc}
    a966:	bf00      	nop
    a968:	200026f4 	.word	0x200026f4

0000a96c <__errno>:
    a96c:	4b01      	ldr	r3, [pc, #4]	; (a974 <__errno+0x8>)
    a96e:	6818      	ldr	r0, [r3, #0]
    a970:	4770      	bx	lr
    a972:	bf00      	nop
    a974:	200026f4 	.word	0x200026f4

0000a978 <_svfprintf_r>:
    a978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a97c:	ed2d 8b08 	vpush	{d8-d11}
    a980:	b0d1      	sub	sp, #324	; 0x144
    a982:	460c      	mov	r4, r1
    a984:	ee0b 1a10 	vmov	s22, r1
    a988:	4690      	mov	r8, r2
    a98a:	9308      	str	r3, [sp, #32]
    a98c:	4683      	mov	fp, r0
    a98e:	f002 f9d1 	bl	cd34 <_localeconv_r>
    a992:	6803      	ldr	r3, [r0, #0]
    a994:	9312      	str	r3, [sp, #72]	; 0x48
    a996:	4618      	mov	r0, r3
    a998:	f004 f972 	bl	ec80 <strlen>
    a99c:	af20      	add	r7, sp, #128	; 0x80
    a99e:	9010      	str	r0, [sp, #64]	; 0x40
    a9a0:	2208      	movs	r2, #8
    a9a2:	2100      	movs	r1, #0
    a9a4:	4638      	mov	r0, r7
    a9a6:	f002 f915 	bl	cbd4 <memset>
    a9aa:	89a3      	ldrh	r3, [r4, #12]
    a9ac:	061b      	lsls	r3, r3, #24
    a9ae:	d503      	bpl.n	a9b8 <_svfprintf_r+0x40>
    a9b0:	6923      	ldr	r3, [r4, #16]
    a9b2:	2b00      	cmp	r3, #0
    a9b4:	f000 8755 	beq.w	b862 <_svfprintf_r+0xeea>
    a9b8:	2300      	movs	r3, #0
    a9ba:	ed9f 8b83 	vldr	d8, [pc, #524]	; abc8 <_svfprintf_r+0x250>
    a9be:	ed9f 9b84 	vldr	d9, [pc, #528]	; abd0 <_svfprintf_r+0x258>
    a9c2:	e9cd 3325 	strd	r3, r3, [sp, #148]	; 0x94
    a9c6:	e9cd 3313 	strd	r3, r3, [sp, #76]	; 0x4c
    a9ca:	e9cd 3315 	strd	r3, r3, [sp, #84]	; 0x54
    a9ce:	aa27      	add	r2, sp, #156	; 0x9c
    a9d0:	930e      	str	r3, [sp, #56]	; 0x38
    a9d2:	9224      	str	r2, [sp, #144]	; 0x90
    a9d4:	4692      	mov	sl, r2
    a9d6:	9311      	str	r3, [sp, #68]	; 0x44
    a9d8:	9304      	str	r3, [sp, #16]
    a9da:	4644      	mov	r4, r8
    a9dc:	46a1      	mov	r9, r4
    a9de:	4b7e      	ldr	r3, [pc, #504]	; (abd8 <_svfprintf_r+0x260>)
    a9e0:	f8d3 50e4 	ldr.w	r5, [r3, #228]	; 0xe4
    a9e4:	f002 f9a0 	bl	cd28 <__locale_mb_cur_max>
    a9e8:	464a      	mov	r2, r9
    a9ea:	4603      	mov	r3, r0
    a9ec:	a91c      	add	r1, sp, #112	; 0x70
    a9ee:	9700      	str	r7, [sp, #0]
    a9f0:	4658      	mov	r0, fp
    a9f2:	47a8      	blx	r5
    a9f4:	2800      	cmp	r0, #0
    a9f6:	f000 80b0 	beq.w	ab5a <_svfprintf_r+0x1e2>
    a9fa:	f2c0 80a6 	blt.w	ab4a <_svfprintf_r+0x1d2>
    a9fe:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    aa00:	2a25      	cmp	r2, #37	; 0x25
    aa02:	4603      	mov	r3, r0
    aa04:	d001      	beq.n	aa0a <_svfprintf_r+0x92>
    aa06:	4499      	add	r9, r3
    aa08:	e7e9      	b.n	a9de <_svfprintf_r+0x66>
    aa0a:	ebb9 0504 	subs.w	r5, r9, r4
    aa0e:	4606      	mov	r6, r0
    aa10:	f040 80a7 	bne.w	ab62 <_svfprintf_r+0x1ea>
    aa14:	2300      	movs	r3, #0
    aa16:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    aa1a:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
    aa1e:	4698      	mov	r8, r3
    aa20:	9306      	str	r3, [sp, #24]
    aa22:	f109 0901 	add.w	r9, r9, #1
    aa26:	f899 3000 	ldrb.w	r3, [r9]
    aa2a:	9203      	str	r2, [sp, #12]
    aa2c:	252b      	movs	r5, #43	; 0x2b
    aa2e:	2620      	movs	r6, #32
    aa30:	f109 0901 	add.w	r9, r9, #1
    aa34:	f1a3 0220 	sub.w	r2, r3, #32
    aa38:	2a5a      	cmp	r2, #90	; 0x5a
    aa3a:	f200 80cf 	bhi.w	abdc <_svfprintf_r+0x264>
    aa3e:	e8df f012 	tbh	[pc, r2, lsl #1]
    aa42:	02e8      	.short	0x02e8
    aa44:	00cd00cd 	.word	0x00cd00cd
    aa48:	00cd02e3 	.word	0x00cd02e3
    aa4c:	00cd00cd 	.word	0x00cd00cd
    aa50:	00cd006a 	.word	0x00cd006a
    aa54:	020500cd 	.word	0x020500cd
    aa58:	00cd0284 	.word	0x00cd0284
    aa5c:	02c90210 	.word	0x02c90210
    aa60:	02bd00cd 	.word	0x02bd00cd
    aa64:	005b005b 	.word	0x005b005b
    aa68:	005b005b 	.word	0x005b005b
    aa6c:	005b005b 	.word	0x005b005b
    aa70:	005b005b 	.word	0x005b005b
    aa74:	00cd005b 	.word	0x00cd005b
    aa78:	00cd00cd 	.word	0x00cd00cd
    aa7c:	00cd00cd 	.word	0x00cd00cd
    aa80:	00cd00cd 	.word	0x00cd00cd
    aa84:	00cd0153 	.word	0x00cd0153
    aa88:	021a0183 	.word	0x021a0183
    aa8c:	01530153 	.word	0x01530153
    aa90:	00cd0153 	.word	0x00cd0153
    aa94:	00cd00cd 	.word	0x00cd00cd
    aa98:	021500cd 	.word	0x021500cd
    aa9c:	00cd00cd 	.word	0x00cd00cd
    aaa0:	00cd0296 	.word	0x00cd0296
    aaa4:	00cd00cd 	.word	0x00cd00cd
    aaa8:	00cd01ab 	.word	0x00cd01ab
    aaac:	00cd02aa 	.word	0x00cd02aa
    aab0:	06e300cd 	.word	0x06e300cd
    aab4:	00cd00cd 	.word	0x00cd00cd
    aab8:	00cd00cd 	.word	0x00cd00cd
    aabc:	00cd00cd 	.word	0x00cd00cd
    aac0:	00cd00cd 	.word	0x00cd00cd
    aac4:	00cd0153 	.word	0x00cd0153
    aac8:	01de0183 	.word	0x01de0183
    aacc:	01530153 	.word	0x01530153
    aad0:	02770153 	.word	0x02770153
    aad4:	007f01de 	.word	0x007f01de
    aad8:	028900cd 	.word	0x028900cd
    aadc:	025f00cd 	.word	0x025f00cd
    aae0:	022f06e0 	.word	0x022f06e0
    aae4:	00cd007f 	.word	0x00cd007f
    aae8:	007c01ab 	.word	0x007c01ab
    aaec:	00cd06b8 	.word	0x00cd06b8
    aaf0:	06bd00cd 	.word	0x06bd00cd
    aaf4:	007c00cd 	.word	0x007c00cd
    aaf8:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    aafc:	2100      	movs	r1, #0
    aafe:	f819 3b01 	ldrb.w	r3, [r9], #1
    ab02:	eb01 0181 	add.w	r1, r1, r1, lsl #2
    ab06:	eb02 0141 	add.w	r1, r2, r1, lsl #1
    ab0a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    ab0e:	2a09      	cmp	r2, #9
    ab10:	d9f5      	bls.n	aafe <_svfprintf_r+0x186>
    ab12:	9106      	str	r1, [sp, #24]
    ab14:	e78e      	b.n	aa34 <_svfprintf_r+0xbc>
    ab16:	4658      	mov	r0, fp
    ab18:	f002 f90c 	bl	cd34 <_localeconv_r>
    ab1c:	6843      	ldr	r3, [r0, #4]
    ab1e:	9315      	str	r3, [sp, #84]	; 0x54
    ab20:	4618      	mov	r0, r3
    ab22:	f004 f8ad 	bl	ec80 <strlen>
    ab26:	9016      	str	r0, [sp, #88]	; 0x58
    ab28:	4658      	mov	r0, fp
    ab2a:	f002 f903 	bl	cd34 <_localeconv_r>
    ab2e:	6883      	ldr	r3, [r0, #8]
    ab30:	9313      	str	r3, [sp, #76]	; 0x4c
    ab32:	9b16      	ldr	r3, [sp, #88]	; 0x58
    ab34:	2b00      	cmp	r3, #0
    ab36:	f040 862d 	bne.w	b794 <_svfprintf_r+0xe1c>
    ab3a:	f899 3000 	ldrb.w	r3, [r9]
    ab3e:	e777      	b.n	aa30 <_svfprintf_r+0xb8>
    ab40:	f899 3000 	ldrb.w	r3, [r9]
    ab44:	f048 0820 	orr.w	r8, r8, #32
    ab48:	e772      	b.n	aa30 <_svfprintf_r+0xb8>
    ab4a:	2208      	movs	r2, #8
    ab4c:	2100      	movs	r1, #0
    ab4e:	4638      	mov	r0, r7
    ab50:	f002 f840 	bl	cbd4 <memset>
    ab54:	2301      	movs	r3, #1
    ab56:	4499      	add	r9, r3
    ab58:	e741      	b.n	a9de <_svfprintf_r+0x66>
    ab5a:	ebb9 0504 	subs.w	r5, r9, r4
    ab5e:	4606      	mov	r6, r0
    ab60:	d011      	beq.n	ab86 <_svfprintf_r+0x20e>
    ab62:	9b26      	ldr	r3, [sp, #152]	; 0x98
    ab64:	442b      	add	r3, r5
    ab66:	9326      	str	r3, [sp, #152]	; 0x98
    ab68:	9b25      	ldr	r3, [sp, #148]	; 0x94
    ab6a:	3301      	adds	r3, #1
    ab6c:	2b07      	cmp	r3, #7
    ab6e:	e9ca 4500 	strd	r4, r5, [sl]
    ab72:	9325      	str	r3, [sp, #148]	; 0x94
    ab74:	dc1c      	bgt.n	abb0 <_svfprintf_r+0x238>
    ab76:	f10a 0a08 	add.w	sl, sl, #8
    ab7a:	9b04      	ldr	r3, [sp, #16]
    ab7c:	442b      	add	r3, r5
    ab7e:	9304      	str	r3, [sp, #16]
    ab80:	2e00      	cmp	r6, #0
    ab82:	f47f af47 	bne.w	aa14 <_svfprintf_r+0x9c>
    ab86:	9b26      	ldr	r3, [sp, #152]	; 0x98
    ab88:	2b00      	cmp	r3, #0
    ab8a:	f041 820b 	bne.w	bfa4 <_svfprintf_r+0x162c>
    ab8e:	ee1b 3a10 	vmov	r3, s22
    ab92:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
    ab96:	f013 0f40 	tst.w	r3, #64	; 0x40
    ab9a:	9b04      	ldr	r3, [sp, #16]
    ab9c:	bf18      	it	ne
    ab9e:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
    aba2:	9304      	str	r3, [sp, #16]
    aba4:	9804      	ldr	r0, [sp, #16]
    aba6:	b051      	add	sp, #324	; 0x144
    aba8:	ecbd 8b08 	vpop	{d8-d11}
    abac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    abb0:	ee1b 1a10 	vmov	r1, s22
    abb4:	aa24      	add	r2, sp, #144	; 0x90
    abb6:	4658      	mov	r0, fp
    abb8:	f004 fd2c 	bl	f614 <__ssprint_r>
    abbc:	2800      	cmp	r0, #0
    abbe:	d1e6      	bne.n	ab8e <_svfprintf_r+0x216>
    abc0:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    abc4:	e7d9      	b.n	ab7a <_svfprintf_r+0x202>
    abc6:	bf00      	nop
	...
    abd0:	ffffffff 	.word	0xffffffff
    abd4:	7fefffff 	.word	0x7fefffff
    abd8:	2000216c 	.word	0x2000216c
    abdc:	930b      	str	r3, [sp, #44]	; 0x2c
    abde:	2b00      	cmp	r3, #0
    abe0:	d0d1      	beq.n	ab86 <_svfprintf_r+0x20e>
    abe2:	2100      	movs	r1, #0
    abe4:	e9cd 110c 	strd	r1, r1, [sp, #48]	; 0x30
    abe8:	f88d 30dc 	strb.w	r3, [sp, #220]	; 0xdc
    abec:	2301      	movs	r3, #1
    abee:	f88d 1067 	strb.w	r1, [sp, #103]	; 0x67
    abf2:	9302      	str	r3, [sp, #8]
    abf4:	9107      	str	r1, [sp, #28]
    abf6:	9305      	str	r3, [sp, #20]
    abf8:	9103      	str	r1, [sp, #12]
    abfa:	910f      	str	r1, [sp, #60]	; 0x3c
    abfc:	ac37      	add	r4, sp, #220	; 0xdc
    abfe:	f018 0302 	ands.w	r3, r8, #2
    ac02:	9309      	str	r3, [sp, #36]	; 0x24
    ac04:	d002      	beq.n	ac0c <_svfprintf_r+0x294>
    ac06:	9b02      	ldr	r3, [sp, #8]
    ac08:	3302      	adds	r3, #2
    ac0a:	9302      	str	r3, [sp, #8]
    ac0c:	f018 0384 	ands.w	r3, r8, #132	; 0x84
    ac10:	930a      	str	r3, [sp, #40]	; 0x28
    ac12:	d105      	bne.n	ac20 <_svfprintf_r+0x2a8>
    ac14:	9b06      	ldr	r3, [sp, #24]
    ac16:	9a02      	ldr	r2, [sp, #8]
    ac18:	1a9d      	subs	r5, r3, r2
    ac1a:	2d00      	cmp	r5, #0
    ac1c:	f300 8369 	bgt.w	b2f2 <_svfprintf_r+0x97a>
    ac20:	9a26      	ldr	r2, [sp, #152]	; 0x98
    ac22:	b189      	cbz	r1, ac48 <_svfprintf_r+0x2d0>
    ac24:	9925      	ldr	r1, [sp, #148]	; 0x94
    ac26:	f10d 0067 	add.w	r0, sp, #103	; 0x67
    ac2a:	3101      	adds	r1, #1
    ac2c:	3201      	adds	r2, #1
    ac2e:	f8ca 0000 	str.w	r0, [sl]
    ac32:	2907      	cmp	r1, #7
    ac34:	f04f 0001 	mov.w	r0, #1
    ac38:	9226      	str	r2, [sp, #152]	; 0x98
    ac3a:	9125      	str	r1, [sp, #148]	; 0x94
    ac3c:	f8ca 0004 	str.w	r0, [sl, #4]
    ac40:	f300 83a2 	bgt.w	b388 <_svfprintf_r+0xa10>
    ac44:	f10a 0a08 	add.w	sl, sl, #8
    ac48:	9b09      	ldr	r3, [sp, #36]	; 0x24
    ac4a:	b183      	cbz	r3, ac6e <_svfprintf_r+0x2f6>
    ac4c:	9b25      	ldr	r3, [sp, #148]	; 0x94
    ac4e:	a91a      	add	r1, sp, #104	; 0x68
    ac50:	3301      	adds	r3, #1
    ac52:	3202      	adds	r2, #2
    ac54:	f8ca 1000 	str.w	r1, [sl]
    ac58:	2b07      	cmp	r3, #7
    ac5a:	f04f 0102 	mov.w	r1, #2
    ac5e:	9226      	str	r2, [sp, #152]	; 0x98
    ac60:	9325      	str	r3, [sp, #148]	; 0x94
    ac62:	f8ca 1004 	str.w	r1, [sl, #4]
    ac66:	f300 83a3 	bgt.w	b3b0 <_svfprintf_r+0xa38>
    ac6a:	f10a 0a08 	add.w	sl, sl, #8
    ac6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    ac70:	2b80      	cmp	r3, #128	; 0x80
    ac72:	f000 826c 	beq.w	b14e <_svfprintf_r+0x7d6>
    ac76:	9b03      	ldr	r3, [sp, #12]
    ac78:	9905      	ldr	r1, [sp, #20]
    ac7a:	1a5d      	subs	r5, r3, r1
    ac7c:	2d00      	cmp	r5, #0
    ac7e:	f300 82a5 	bgt.w	b1cc <_svfprintf_r+0x854>
    ac82:	f418 7f80 	tst.w	r8, #256	; 0x100
    ac86:	f040 820d 	bne.w	b0a4 <_svfprintf_r+0x72c>
    ac8a:	9b05      	ldr	r3, [sp, #20]
    ac8c:	f8ca 3004 	str.w	r3, [sl, #4]
    ac90:	441a      	add	r2, r3
    ac92:	9b25      	ldr	r3, [sp, #148]	; 0x94
    ac94:	f8ca 4000 	str.w	r4, [sl]
    ac98:	3301      	adds	r3, #1
    ac9a:	2b07      	cmp	r3, #7
    ac9c:	9226      	str	r2, [sp, #152]	; 0x98
    ac9e:	9325      	str	r3, [sp, #148]	; 0x94
    aca0:	f300 831b 	bgt.w	b2da <_svfprintf_r+0x962>
    aca4:	f10a 0a08 	add.w	sl, sl, #8
    aca8:	f018 0f04 	tst.w	r8, #4
    acac:	d005      	beq.n	acba <_svfprintf_r+0x342>
    acae:	9b06      	ldr	r3, [sp, #24]
    acb0:	9902      	ldr	r1, [sp, #8]
    acb2:	1a5c      	subs	r4, r3, r1
    acb4:	2c00      	cmp	r4, #0
    acb6:	f300 8388 	bgt.w	b3ca <_svfprintf_r+0xa52>
    acba:	9b04      	ldr	r3, [sp, #16]
    acbc:	9906      	ldr	r1, [sp, #24]
    acbe:	9802      	ldr	r0, [sp, #8]
    acc0:	4281      	cmp	r1, r0
    acc2:	bfac      	ite	ge
    acc4:	185b      	addge	r3, r3, r1
    acc6:	181b      	addlt	r3, r3, r0
    acc8:	9304      	str	r3, [sp, #16]
    acca:	2a00      	cmp	r2, #0
    accc:	f040 82b0 	bne.w	b230 <_svfprintf_r+0x8b8>
    acd0:	2300      	movs	r3, #0
    acd2:	9325      	str	r3, [sp, #148]	; 0x94
    acd4:	9b07      	ldr	r3, [sp, #28]
    acd6:	b11b      	cbz	r3, ace0 <_svfprintf_r+0x368>
    acd8:	9907      	ldr	r1, [sp, #28]
    acda:	4658      	mov	r0, fp
    acdc:	f004 fab8 	bl	f250 <_free_r>
    ace0:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    ace4:	464c      	mov	r4, r9
    ace6:	e679      	b.n	a9dc <_svfprintf_r+0x64>
    ace8:	930b      	str	r3, [sp, #44]	; 0x2c
    acea:	9b08      	ldr	r3, [sp, #32]
    acec:	3307      	adds	r3, #7
    acee:	f023 0307 	bic.w	r3, r3, #7
    acf2:	ecb3 8b02 	vldmia	r3!, {d8}
    acf6:	eeb0 7bc8 	vabs.f64	d7, d8
    acfa:	eeb4 7b49 	vcmp.f64	d7, d9
    acfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ad02:	9308      	str	r3, [sp, #32]
    ad04:	f340 84e9 	ble.w	b6da <_svfprintf_r+0xd62>
    ad08:	eeb5 8bc0 	vcmpe.f64	d8, #0.0
    ad0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ad10:	f101 8059 	bmi.w	bdc6 <_svfprintf_r+0x144e>
    ad14:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    ad18:	4cab      	ldr	r4, [pc, #684]	; (afc8 <_svfprintf_r+0x650>)
    ad1a:	4bac      	ldr	r3, [pc, #688]	; (afcc <_svfprintf_r+0x654>)
    ad1c:	f028 0880 	bic.w	r8, r8, #128	; 0x80
    ad20:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    ad22:	2a47      	cmp	r2, #71	; 0x47
    ad24:	bfc8      	it	gt
    ad26:	461c      	movgt	r4, r3
    ad28:	2300      	movs	r3, #0
    ad2a:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
    ad2e:	2203      	movs	r2, #3
    ad30:	9307      	str	r3, [sp, #28]
    ad32:	9202      	str	r2, [sp, #8]
    ad34:	9205      	str	r2, [sp, #20]
    ad36:	9303      	str	r3, [sp, #12]
    ad38:	930f      	str	r3, [sp, #60]	; 0x3c
    ad3a:	2900      	cmp	r1, #0
    ad3c:	f43f af5f 	beq.w	abfe <_svfprintf_r+0x286>
    ad40:	9b02      	ldr	r3, [sp, #8]
    ad42:	3301      	adds	r3, #1
    ad44:	9302      	str	r3, [sp, #8]
    ad46:	e75a      	b.n	abfe <_svfprintf_r+0x286>
    ad48:	2b43      	cmp	r3, #67	; 0x43
    ad4a:	930b      	str	r3, [sp, #44]	; 0x2c
    ad4c:	d003      	beq.n	ad56 <_svfprintf_r+0x3de>
    ad4e:	f018 0f10 	tst.w	r8, #16
    ad52:	f000 855d 	beq.w	b810 <_svfprintf_r+0xe98>
    ad56:	9d08      	ldr	r5, [sp, #32]
    ad58:	2208      	movs	r2, #8
    ad5a:	2100      	movs	r1, #0
    ad5c:	a822      	add	r0, sp, #136	; 0x88
    ad5e:	ac37      	add	r4, sp, #220	; 0xdc
    ad60:	f001 ff38 	bl	cbd4 <memset>
    ad64:	ab22      	add	r3, sp, #136	; 0x88
    ad66:	f855 2b04 	ldr.w	r2, [r5], #4
    ad6a:	4621      	mov	r1, r4
    ad6c:	4658      	mov	r0, fp
    ad6e:	f001 ff89 	bl	cc84 <_wcrtomb_r>
    ad72:	4603      	mov	r3, r0
    ad74:	3301      	adds	r3, #1
    ad76:	9005      	str	r0, [sp, #20]
    ad78:	f001 82ee 	beq.w	c358 <_svfprintf_r+0x19e0>
    ad7c:	9b05      	ldr	r3, [sp, #20]
    ad7e:	9508      	str	r5, [sp, #32]
    ad80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    ad84:	9302      	str	r3, [sp, #8]
    ad86:	2100      	movs	r1, #0
    ad88:	e9cd 110c 	strd	r1, r1, [sp, #48]	; 0x30
    ad8c:	f88d 1067 	strb.w	r1, [sp, #103]	; 0x67
    ad90:	9107      	str	r1, [sp, #28]
    ad92:	9103      	str	r1, [sp, #12]
    ad94:	910f      	str	r1, [sp, #60]	; 0x3c
    ad96:	e732      	b.n	abfe <_svfprintf_r+0x286>
    ad98:	930b      	str	r3, [sp, #44]	; 0x2c
    ad9a:	9b08      	ldr	r3, [sp, #32]
    ad9c:	461a      	mov	r2, r3
    ad9e:	2300      	movs	r3, #0
    ada0:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
    ada4:	4613      	mov	r3, r2
    ada6:	f853 4b04 	ldr.w	r4, [r3], #4
    adaa:	9308      	str	r3, [sp, #32]
    adac:	2c00      	cmp	r4, #0
    adae:	f000 8548 	beq.w	b842 <_svfprintf_r+0xeca>
    adb2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    adb4:	2b53      	cmp	r3, #83	; 0x53
    adb6:	f000 86ec 	beq.w	bb92 <_svfprintf_r+0x121a>
    adba:	f018 0310 	ands.w	r3, r8, #16
    adbe:	930c      	str	r3, [sp, #48]	; 0x30
    adc0:	f040 86e7 	bne.w	bb92 <_svfprintf_r+0x121a>
    adc4:	9b03      	ldr	r3, [sp, #12]
    adc6:	1c5d      	adds	r5, r3, #1
    adc8:	f001 80e5 	beq.w	bf96 <_svfprintf_r+0x161e>
    adcc:	990c      	ldr	r1, [sp, #48]	; 0x30
    adce:	461a      	mov	r2, r3
    add0:	4620      	mov	r0, r4
    add2:	f003 feed 	bl	ebb0 <memchr>
    add6:	9007      	str	r0, [sp, #28]
    add8:	2800      	cmp	r0, #0
    adda:	f001 8328 	beq.w	c42e <_svfprintf_r+0x1ab6>
    adde:	9b07      	ldr	r3, [sp, #28]
    ade0:	1b1a      	subs	r2, r3, r4
    ade2:	9205      	str	r2, [sp, #20]
    ade4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ade6:	9303      	str	r3, [sp, #12]
    ade8:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
    adec:	930f      	str	r3, [sp, #60]	; 0x3c
    adee:	930d      	str	r3, [sp, #52]	; 0x34
    adf0:	9307      	str	r3, [sp, #28]
    adf2:	2373      	movs	r3, #115	; 0x73
    adf4:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    adf8:	9202      	str	r2, [sp, #8]
    adfa:	930b      	str	r3, [sp, #44]	; 0x2c
    adfc:	e79d      	b.n	ad3a <_svfprintf_r+0x3c2>
    adfe:	f018 0f20 	tst.w	r8, #32
    ae02:	930b      	str	r3, [sp, #44]	; 0x2c
    ae04:	9b08      	ldr	r3, [sp, #32]
    ae06:	d03d      	beq.n	ae84 <_svfprintf_r+0x50c>
    ae08:	3307      	adds	r3, #7
    ae0a:	f023 0307 	bic.w	r3, r3, #7
    ae0e:	461a      	mov	r2, r3
    ae10:	4611      	mov	r1, r2
    ae12:	685b      	ldr	r3, [r3, #4]
    ae14:	f851 2b08 	ldr.w	r2, [r1], #8
    ae18:	9108      	str	r1, [sp, #32]
    ae1a:	4619      	mov	r1, r3
    ae1c:	2b00      	cmp	r3, #0
    ae1e:	f2c0 840c 	blt.w	b63a <_svfprintf_r+0xcc2>
    ae22:	9b03      	ldr	r3, [sp, #12]
    ae24:	3301      	adds	r3, #1
    ae26:	f000 829e 	beq.w	b366 <_svfprintf_r+0x9ee>
    ae2a:	f028 0080 	bic.w	r0, r8, #128	; 0x80
    ae2e:	ea52 0301 	orrs.w	r3, r2, r1
    ae32:	9002      	str	r0, [sp, #8]
    ae34:	f040 8299 	bne.w	b36a <_svfprintf_r+0x9f2>
    ae38:	9b03      	ldr	r3, [sp, #12]
    ae3a:	2b00      	cmp	r3, #0
    ae3c:	f040 829a 	bne.w	b374 <_svfprintf_r+0x9fc>
    ae40:	4680      	mov	r8, r0
    ae42:	2300      	movs	r3, #0
    ae44:	9303      	str	r3, [sp, #12]
    ae46:	9305      	str	r3, [sp, #20]
    ae48:	ac50      	add	r4, sp, #320	; 0x140
    ae4a:	e106      	b.n	b05a <_svfprintf_r+0x6e2>
    ae4c:	9b08      	ldr	r3, [sp, #32]
    ae4e:	f853 2b04 	ldr.w	r2, [r3], #4
    ae52:	9206      	str	r2, [sp, #24]
    ae54:	2a00      	cmp	r2, #0
    ae56:	f280 8419 	bge.w	b68c <_svfprintf_r+0xd14>
    ae5a:	9a06      	ldr	r2, [sp, #24]
    ae5c:	9308      	str	r3, [sp, #32]
    ae5e:	4252      	negs	r2, r2
    ae60:	9206      	str	r2, [sp, #24]
    ae62:	f899 3000 	ldrb.w	r3, [r9]
    ae66:	f048 0804 	orr.w	r8, r8, #4
    ae6a:	e5e1      	b.n	aa30 <_svfprintf_r+0xb8>
    ae6c:	f899 3000 	ldrb.w	r3, [r9]
    ae70:	f048 0808 	orr.w	r8, r8, #8
    ae74:	e5dc      	b.n	aa30 <_svfprintf_r+0xb8>
    ae76:	f048 0810 	orr.w	r8, r8, #16
    ae7a:	f018 0f20 	tst.w	r8, #32
    ae7e:	930b      	str	r3, [sp, #44]	; 0x2c
    ae80:	9b08      	ldr	r3, [sp, #32]
    ae82:	d1c1      	bne.n	ae08 <_svfprintf_r+0x490>
    ae84:	f018 0f10 	tst.w	r8, #16
    ae88:	f040 840b 	bne.w	b6a2 <_svfprintf_r+0xd2a>
    ae8c:	f018 0f40 	tst.w	r8, #64	; 0x40
    ae90:	f000 8403 	beq.w	b69a <_svfprintf_r+0xd22>
    ae94:	f933 2b04 	ldrsh.w	r2, [r3], #4
    ae98:	9308      	str	r3, [sp, #32]
    ae9a:	17d1      	asrs	r1, r2, #31
    ae9c:	460b      	mov	r3, r1
    ae9e:	e7bd      	b.n	ae1c <_svfprintf_r+0x4a4>
    aea0:	9b08      	ldr	r3, [sp, #32]
    aea2:	f048 0202 	orr.w	r2, r8, #2
    aea6:	9202      	str	r2, [sp, #8]
    aea8:	f853 2b04 	ldr.w	r2, [r3], #4
    aeac:	9308      	str	r3, [sp, #32]
    aeae:	f647 0330 	movw	r3, #30768	; 0x7830
    aeb2:	f8ad 3068 	strh.w	r3, [sp, #104]	; 0x68
    aeb6:	2078      	movs	r0, #120	; 0x78
    aeb8:	4b45      	ldr	r3, [pc, #276]	; (afd0 <_svfprintf_r+0x658>)
    aeba:	9311      	str	r3, [sp, #68]	; 0x44
    aebc:	2100      	movs	r1, #0
    aebe:	2302      	movs	r3, #2
    aec0:	900b      	str	r0, [sp, #44]	; 0x2c
    aec2:	2000      	movs	r0, #0
    aec4:	9c03      	ldr	r4, [sp, #12]
    aec6:	f88d 0067 	strb.w	r0, [sp, #103]	; 0x67
    aeca:	1c60      	adds	r0, r4, #1
    aecc:	f000 80ad 	beq.w	b02a <_svfprintf_r+0x6b2>
    aed0:	9802      	ldr	r0, [sp, #8]
    aed2:	f020 0880 	bic.w	r8, r0, #128	; 0x80
    aed6:	ea52 0001 	orrs.w	r0, r2, r1
    aeda:	f040 80a4 	bne.w	b026 <_svfprintf_r+0x6ae>
    aede:	2c00      	cmp	r4, #0
    aee0:	f040 86ae 	bne.w	bc40 <_svfprintf_r+0x12c8>
    aee4:	2b00      	cmp	r3, #0
    aee6:	d1ac      	bne.n	ae42 <_svfprintf_r+0x4ca>
    aee8:	9b02      	ldr	r3, [sp, #8]
    aeea:	f013 0301 	ands.w	r3, r3, #1
    aeee:	9305      	str	r3, [sp, #20]
    aef0:	f000 83d1 	beq.w	b696 <_svfprintf_r+0xd1e>
    aef4:	2330      	movs	r3, #48	; 0x30
    aef6:	f88d 313f 	strb.w	r3, [sp, #319]	; 0x13f
    aefa:	f20d 143f 	addw	r4, sp, #319	; 0x13f
    aefe:	e0ac      	b.n	b05a <_svfprintf_r+0x6e2>
    af00:	f018 0f20 	tst.w	r8, #32
    af04:	f040 83d4 	bne.w	b6b0 <_svfprintf_r+0xd38>
    af08:	f018 0f10 	tst.w	r8, #16
    af0c:	f040 869f 	bne.w	bc4e <_svfprintf_r+0x12d6>
    af10:	f018 0f40 	tst.w	r8, #64	; 0x40
    af14:	f040 8797 	bne.w	be46 <_svfprintf_r+0x14ce>
    af18:	f418 7f00 	tst.w	r8, #512	; 0x200
    af1c:	f000 8697 	beq.w	bc4e <_svfprintf_r+0x12d6>
    af20:	9b08      	ldr	r3, [sp, #32]
    af22:	9904      	ldr	r1, [sp, #16]
    af24:	f853 2b04 	ldr.w	r2, [r3], #4
    af28:	9308      	str	r3, [sp, #32]
    af2a:	7011      	strb	r1, [r2, #0]
    af2c:	464c      	mov	r4, r9
    af2e:	e555      	b.n	a9dc <_svfprintf_r+0x64>
    af30:	f899 3000 	ldrb.w	r3, [r9]
    af34:	2b68      	cmp	r3, #104	; 0x68
    af36:	bf03      	ittte	eq
    af38:	f899 3001 	ldrbeq.w	r3, [r9, #1]
    af3c:	f448 7800 	orreq.w	r8, r8, #512	; 0x200
    af40:	f109 0901 	addeq.w	r9, r9, #1
    af44:	f048 0840 	orrne.w	r8, r8, #64	; 0x40
    af48:	e572      	b.n	aa30 <_svfprintf_r+0xb8>
    af4a:	f899 3000 	ldrb.w	r3, [r9]
    af4e:	f88d 5067 	strb.w	r5, [sp, #103]	; 0x67
    af52:	e56d      	b.n	aa30 <_svfprintf_r+0xb8>
    af54:	f899 3000 	ldrb.w	r3, [r9]
    af58:	2b6c      	cmp	r3, #108	; 0x6c
    af5a:	bf03      	ittte	eq
    af5c:	f899 3001 	ldrbeq.w	r3, [r9, #1]
    af60:	f048 0820 	orreq.w	r8, r8, #32
    af64:	f109 0901 	addeq.w	r9, r9, #1
    af68:	f048 0810 	orrne.w	r8, r8, #16
    af6c:	e560      	b.n	aa30 <_svfprintf_r+0xb8>
    af6e:	930b      	str	r3, [sp, #44]	; 0x2c
    af70:	f048 0810 	orr.w	r8, r8, #16
    af74:	f018 0120 	ands.w	r1, r8, #32
    af78:	f000 8351 	beq.w	b61e <_svfprintf_r+0xca6>
    af7c:	9b08      	ldr	r3, [sp, #32]
    af7e:	3307      	adds	r3, #7
    af80:	f023 0307 	bic.w	r3, r3, #7
    af84:	6859      	ldr	r1, [r3, #4]
    af86:	f853 2b08 	ldr.w	r2, [r3], #8
    af8a:	9308      	str	r3, [sp, #32]
    af8c:	f428 6380 	bic.w	r3, r8, #1024	; 0x400
    af90:	9302      	str	r3, [sp, #8]
    af92:	2300      	movs	r3, #0
    af94:	e795      	b.n	aec2 <_svfprintf_r+0x54a>
    af96:	930b      	str	r3, [sp, #44]	; 0x2c
    af98:	f048 0310 	orr.w	r3, r8, #16
    af9c:	9302      	str	r3, [sp, #8]
    af9e:	9b02      	ldr	r3, [sp, #8]
    afa0:	f013 0120 	ands.w	r1, r3, #32
    afa4:	f000 8329 	beq.w	b5fa <_svfprintf_r+0xc82>
    afa8:	9b08      	ldr	r3, [sp, #32]
    afaa:	3307      	adds	r3, #7
    afac:	f023 0307 	bic.w	r3, r3, #7
    afb0:	6859      	ldr	r1, [r3, #4]
    afb2:	f853 2b08 	ldr.w	r2, [r3], #8
    afb6:	9308      	str	r3, [sp, #32]
    afb8:	2301      	movs	r3, #1
    afba:	e782      	b.n	aec2 <_svfprintf_r+0x54a>
    afbc:	f899 3000 	ldrb.w	r3, [r9]
    afc0:	f048 0880 	orr.w	r8, r8, #128	; 0x80
    afc4:	e534      	b.n	aa30 <_svfprintf_r+0xb8>
    afc6:	bf00      	nop
    afc8:	20000a94 	.word	0x20000a94
    afcc:	20000a98 	.word	0x20000a98
    afd0:	20000aa4 	.word	0x20000aa4
    afd4:	4649      	mov	r1, r9
    afd6:	f811 3b01 	ldrb.w	r3, [r1], #1
    afda:	2b2a      	cmp	r3, #42	; 0x2a
    afdc:	f001 8249 	beq.w	c472 <_svfprintf_r+0x1afa>
    afe0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    afe4:	2a09      	cmp	r2, #9
    afe6:	4689      	mov	r9, r1
    afe8:	bf98      	it	ls
    afea:	2100      	movls	r1, #0
    afec:	f201 8144 	bhi.w	c278 <_svfprintf_r+0x1900>
    aff0:	f819 3b01 	ldrb.w	r3, [r9], #1
    aff4:	eb01 0181 	add.w	r1, r1, r1, lsl #2
    aff8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
    affc:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    b000:	2a09      	cmp	r2, #9
    b002:	d9f5      	bls.n	aff0 <_svfprintf_r+0x678>
    b004:	9103      	str	r1, [sp, #12]
    b006:	e515      	b.n	aa34 <_svfprintf_r+0xbc>
    b008:	f899 3000 	ldrb.w	r3, [r9]
    b00c:	f048 0801 	orr.w	r8, r8, #1
    b010:	e50e      	b.n	aa30 <_svfprintf_r+0xb8>
    b012:	f89d 3067 	ldrb.w	r3, [sp, #103]	; 0x67
    b016:	2b00      	cmp	r3, #0
    b018:	f47f ad8f 	bne.w	ab3a <_svfprintf_r+0x1c2>
    b01c:	f899 3000 	ldrb.w	r3, [r9]
    b020:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
    b024:	e504      	b.n	aa30 <_svfprintf_r+0xb8>
    b026:	f8cd 8008 	str.w	r8, [sp, #8]
    b02a:	2b01      	cmp	r3, #1
    b02c:	f000 819d 	beq.w	b36a <_svfprintf_r+0x9f2>
    b030:	2b02      	cmp	r3, #2
    b032:	ac50      	add	r4, sp, #320	; 0x140
    b034:	d120      	bne.n	b078 <_svfprintf_r+0x700>
    b036:	9811      	ldr	r0, [sp, #68]	; 0x44
    b038:	f002 030f 	and.w	r3, r2, #15
    b03c:	0912      	lsrs	r2, r2, #4
    b03e:	5cc3      	ldrb	r3, [r0, r3]
    b040:	f804 3d01 	strb.w	r3, [r4, #-1]!
    b044:	ea42 7201 	orr.w	r2, r2, r1, lsl #28
    b048:	0909      	lsrs	r1, r1, #4
    b04a:	ea52 0301 	orrs.w	r3, r2, r1
    b04e:	d1f3      	bne.n	b038 <_svfprintf_r+0x6c0>
    b050:	ab50      	add	r3, sp, #320	; 0x140
    b052:	1b1b      	subs	r3, r3, r4
    b054:	f8dd 8008 	ldr.w	r8, [sp, #8]
    b058:	9305      	str	r3, [sp, #20]
    b05a:	9a05      	ldr	r2, [sp, #20]
    b05c:	9803      	ldr	r0, [sp, #12]
    b05e:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    b062:	4282      	cmp	r2, r0
    b064:	f04f 0300 	mov.w	r3, #0
    b068:	bfb8      	it	lt
    b06a:	4602      	movlt	r2, r0
    b06c:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
    b070:	9307      	str	r3, [sp, #28]
    b072:	9202      	str	r2, [sp, #8]
    b074:	930f      	str	r3, [sp, #60]	; 0x3c
    b076:	e660      	b.n	ad3a <_svfprintf_r+0x3c2>
    b078:	f002 0307 	and.w	r3, r2, #7
    b07c:	08d2      	lsrs	r2, r2, #3
    b07e:	ea42 7241 	orr.w	r2, r2, r1, lsl #29
    b082:	08c9      	lsrs	r1, r1, #3
    b084:	3330      	adds	r3, #48	; 0x30
    b086:	ea52 0501 	orrs.w	r5, r2, r1
    b08a:	4620      	mov	r0, r4
    b08c:	f804 3d01 	strb.w	r3, [r4, #-1]!
    b090:	d1f2      	bne.n	b078 <_svfprintf_r+0x700>
    b092:	9a02      	ldr	r2, [sp, #8]
    b094:	07d1      	lsls	r1, r2, #31
    b096:	f100 824d 	bmi.w	b534 <_svfprintf_r+0xbbc>
    b09a:	ab50      	add	r3, sp, #320	; 0x140
    b09c:	1b1b      	subs	r3, r3, r4
    b09e:	4690      	mov	r8, r2
    b0a0:	9305      	str	r3, [sp, #20]
    b0a2:	e7da      	b.n	b05a <_svfprintf_r+0x6e2>
    b0a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b0a6:	2b65      	cmp	r3, #101	; 0x65
    b0a8:	f340 80d4 	ble.w	b254 <_svfprintf_r+0x8dc>
    b0ac:	eeb5 8b40 	vcmp.f64	d8, #0.0
    b0b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    b0b4:	f040 81c1 	bne.w	b43a <_svfprintf_r+0xac2>
    b0b8:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b0ba:	49ba      	ldr	r1, [pc, #744]	; (b3a4 <_svfprintf_r+0xa2c>)
    b0bc:	f8ca 1000 	str.w	r1, [sl]
    b0c0:	3301      	adds	r3, #1
    b0c2:	3201      	adds	r2, #1
    b0c4:	2101      	movs	r1, #1
    b0c6:	2b07      	cmp	r3, #7
    b0c8:	9226      	str	r2, [sp, #152]	; 0x98
    b0ca:	9325      	str	r3, [sp, #148]	; 0x94
    b0cc:	f8ca 1004 	str.w	r1, [sl, #4]
    b0d0:	f300 8551 	bgt.w	bb76 <_svfprintf_r+0x11fe>
    b0d4:	f10a 0a08 	add.w	sl, sl, #8
    b0d8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    b0da:	990e      	ldr	r1, [sp, #56]	; 0x38
    b0dc:	428b      	cmp	r3, r1
    b0de:	f280 82d0 	bge.w	b682 <_svfprintf_r+0xd0a>
    b0e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
    b0e4:	9912      	ldr	r1, [sp, #72]	; 0x48
    b0e6:	441a      	add	r2, r3
    b0e8:	e9ca 1300 	strd	r1, r3, [sl]
    b0ec:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b0ee:	9226      	str	r2, [sp, #152]	; 0x98
    b0f0:	3301      	adds	r3, #1
    b0f2:	2b07      	cmp	r3, #7
    b0f4:	9325      	str	r3, [sp, #148]	; 0x94
    b0f6:	f300 8397 	bgt.w	b828 <_svfprintf_r+0xeb0>
    b0fa:	f10a 0a08 	add.w	sl, sl, #8
    b0fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b100:	1e5c      	subs	r4, r3, #1
    b102:	2c00      	cmp	r4, #0
    b104:	f77f add0 	ble.w	aca8 <_svfprintf_r+0x330>
    b108:	2c10      	cmp	r4, #16
    b10a:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b10c:	f340 856e 	ble.w	bbec <_svfprintf_r+0x1274>
    b110:	ee1b 6a10 	vmov	r6, s22
    b114:	2510      	movs	r5, #16
    b116:	e005      	b.n	b124 <_svfprintf_r+0x7ac>
    b118:	f10a 0a08 	add.w	sl, sl, #8
    b11c:	3c10      	subs	r4, #16
    b11e:	2c10      	cmp	r4, #16
    b120:	f340 8564 	ble.w	bbec <_svfprintf_r+0x1274>
    b124:	3301      	adds	r3, #1
    b126:	49a0      	ldr	r1, [pc, #640]	; (b3a8 <_svfprintf_r+0xa30>)
    b128:	3210      	adds	r2, #16
    b12a:	2b07      	cmp	r3, #7
    b12c:	e9ca 1500 	strd	r1, r5, [sl]
    b130:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b134:	ddf0      	ble.n	b118 <_svfprintf_r+0x7a0>
    b136:	aa24      	add	r2, sp, #144	; 0x90
    b138:	4631      	mov	r1, r6
    b13a:	4658      	mov	r0, fp
    b13c:	f004 fa6a 	bl	f614 <__ssprint_r>
    b140:	2800      	cmp	r0, #0
    b142:	d17e      	bne.n	b242 <_svfprintf_r+0x8ca>
    b144:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b148:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b14c:	e7e6      	b.n	b11c <_svfprintf_r+0x7a4>
    b14e:	9b06      	ldr	r3, [sp, #24]
    b150:	9902      	ldr	r1, [sp, #8]
    b152:	1a5d      	subs	r5, r3, r1
    b154:	2d00      	cmp	r5, #0
    b156:	f77f ad8e 	ble.w	ac76 <_svfprintf_r+0x2fe>
    b15a:	2d10      	cmp	r5, #16
    b15c:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b15e:	dd21      	ble.n	b1a4 <_svfprintf_r+0x82c>
    b160:	9409      	str	r4, [sp, #36]	; 0x24
    b162:	2610      	movs	r6, #16
    b164:	ee1b 4a10 	vmov	r4, s22
    b168:	e004      	b.n	b174 <_svfprintf_r+0x7fc>
    b16a:	3d10      	subs	r5, #16
    b16c:	2d10      	cmp	r5, #16
    b16e:	f10a 0a08 	add.w	sl, sl, #8
    b172:	dd16      	ble.n	b1a2 <_svfprintf_r+0x82a>
    b174:	3301      	adds	r3, #1
    b176:	498c      	ldr	r1, [pc, #560]	; (b3a8 <_svfprintf_r+0xa30>)
    b178:	3210      	adds	r2, #16
    b17a:	2b07      	cmp	r3, #7
    b17c:	e9ca 1600 	strd	r1, r6, [sl]
    b180:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b184:	ddf1      	ble.n	b16a <_svfprintf_r+0x7f2>
    b186:	aa24      	add	r2, sp, #144	; 0x90
    b188:	4621      	mov	r1, r4
    b18a:	4658      	mov	r0, fp
    b18c:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b190:	f004 fa40 	bl	f614 <__ssprint_r>
    b194:	2800      	cmp	r0, #0
    b196:	d154      	bne.n	b242 <_svfprintf_r+0x8ca>
    b198:	3d10      	subs	r5, #16
    b19a:	2d10      	cmp	r5, #16
    b19c:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b1a0:	dce8      	bgt.n	b174 <_svfprintf_r+0x7fc>
    b1a2:	9c09      	ldr	r4, [sp, #36]	; 0x24
    b1a4:	4980      	ldr	r1, [pc, #512]	; (b3a8 <_svfprintf_r+0xa30>)
    b1a6:	f8ca 5004 	str.w	r5, [sl, #4]
    b1aa:	3301      	adds	r3, #1
    b1ac:	442a      	add	r2, r5
    b1ae:	2b07      	cmp	r3, #7
    b1b0:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b1b4:	f8ca 1000 	str.w	r1, [sl]
    b1b8:	f300 8526 	bgt.w	bc08 <_svfprintf_r+0x1290>
    b1bc:	9b03      	ldr	r3, [sp, #12]
    b1be:	9905      	ldr	r1, [sp, #20]
    b1c0:	1a5d      	subs	r5, r3, r1
    b1c2:	2d00      	cmp	r5, #0
    b1c4:	f10a 0a08 	add.w	sl, sl, #8
    b1c8:	f77f ad5b 	ble.w	ac82 <_svfprintf_r+0x30a>
    b1cc:	2d10      	cmp	r5, #16
    b1ce:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b1d0:	dd1f      	ble.n	b212 <_svfprintf_r+0x89a>
    b1d2:	4651      	mov	r1, sl
    b1d4:	2610      	movs	r6, #16
    b1d6:	ee1b aa10 	vmov	sl, s22
    b1da:	e004      	b.n	b1e6 <_svfprintf_r+0x86e>
    b1dc:	3d10      	subs	r5, #16
    b1de:	2d10      	cmp	r5, #16
    b1e0:	f101 0108 	add.w	r1, r1, #8
    b1e4:	dd14      	ble.n	b210 <_svfprintf_r+0x898>
    b1e6:	3301      	adds	r3, #1
    b1e8:	486f      	ldr	r0, [pc, #444]	; (b3a8 <_svfprintf_r+0xa30>)
    b1ea:	3210      	adds	r2, #16
    b1ec:	2b07      	cmp	r3, #7
    b1ee:	e9c1 0600 	strd	r0, r6, [r1]
    b1f2:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b1f6:	ddf1      	ble.n	b1dc <_svfprintf_r+0x864>
    b1f8:	aa24      	add	r2, sp, #144	; 0x90
    b1fa:	4651      	mov	r1, sl
    b1fc:	4658      	mov	r0, fp
    b1fe:	f004 fa09 	bl	f614 <__ssprint_r>
    b202:	b9f0      	cbnz	r0, b242 <_svfprintf_r+0x8ca>
    b204:	3d10      	subs	r5, #16
    b206:	2d10      	cmp	r5, #16
    b208:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b20c:	a927      	add	r1, sp, #156	; 0x9c
    b20e:	dcea      	bgt.n	b1e6 <_svfprintf_r+0x86e>
    b210:	468a      	mov	sl, r1
    b212:	3301      	adds	r3, #1
    b214:	4964      	ldr	r1, [pc, #400]	; (b3a8 <_svfprintf_r+0xa30>)
    b216:	f8ca 5004 	str.w	r5, [sl, #4]
    b21a:	442a      	add	r2, r5
    b21c:	2b07      	cmp	r3, #7
    b21e:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b222:	f8ca 1000 	str.w	r1, [sl]
    b226:	f300 81da 	bgt.w	b5de <_svfprintf_r+0xc66>
    b22a:	f10a 0a08 	add.w	sl, sl, #8
    b22e:	e528      	b.n	ac82 <_svfprintf_r+0x30a>
    b230:	ee1b 1a10 	vmov	r1, s22
    b234:	aa24      	add	r2, sp, #144	; 0x90
    b236:	4658      	mov	r0, fp
    b238:	f004 f9ec 	bl	f614 <__ssprint_r>
    b23c:	2800      	cmp	r0, #0
    b23e:	f43f ad47 	beq.w	acd0 <_svfprintf_r+0x358>
    b242:	9b07      	ldr	r3, [sp, #28]
    b244:	2b00      	cmp	r3, #0
    b246:	f43f aca2 	beq.w	ab8e <_svfprintf_r+0x216>
    b24a:	9907      	ldr	r1, [sp, #28]
    b24c:	4658      	mov	r0, fp
    b24e:	f003 ffff 	bl	f250 <_free_r>
    b252:	e49c      	b.n	ab8e <_svfprintf_r+0x216>
    b254:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b256:	2b01      	cmp	r3, #1
    b258:	f340 817a 	ble.w	b550 <_svfprintf_r+0xbd8>
    b25c:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b25e:	f8ca 4000 	str.w	r4, [sl]
    b262:	3301      	adds	r3, #1
    b264:	3201      	adds	r2, #1
    b266:	2101      	movs	r1, #1
    b268:	2b07      	cmp	r3, #7
    b26a:	9226      	str	r2, [sp, #152]	; 0x98
    b26c:	9325      	str	r3, [sp, #148]	; 0x94
    b26e:	f8ca 1004 	str.w	r1, [sl, #4]
    b272:	f300 81f8 	bgt.w	b666 <_svfprintf_r+0xcee>
    b276:	f10a 0a08 	add.w	sl, sl, #8
    b27a:	9910      	ldr	r1, [sp, #64]	; 0x40
    b27c:	9812      	ldr	r0, [sp, #72]	; 0x48
    b27e:	3301      	adds	r3, #1
    b280:	440a      	add	r2, r1
    b282:	2b07      	cmp	r3, #7
    b284:	e9ca 0100 	strd	r0, r1, [sl]
    b288:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b28c:	f300 81dd 	bgt.w	b64a <_svfprintf_r+0xcd2>
    b290:	f10a 0a08 	add.w	sl, sl, #8
    b294:	eeb5 8b40 	vcmp.f64	d8, #0.0
    b298:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    b29c:	f000 8177 	beq.w	b58e <_svfprintf_r+0xc16>
    b2a0:	990e      	ldr	r1, [sp, #56]	; 0x38
    b2a2:	3301      	adds	r3, #1
    b2a4:	3901      	subs	r1, #1
    b2a6:	3401      	adds	r4, #1
    b2a8:	440a      	add	r2, r1
    b2aa:	2b07      	cmp	r3, #7
    b2ac:	f8ca 4000 	str.w	r4, [sl]
    b2b0:	9325      	str	r3, [sp, #148]	; 0x94
    b2b2:	f8ca 1004 	str.w	r1, [sl, #4]
    b2b6:	9226      	str	r2, [sp, #152]	; 0x98
    b2b8:	f300 815b 	bgt.w	b572 <_svfprintf_r+0xbfa>
    b2bc:	f10a 0a08 	add.w	sl, sl, #8
    b2c0:	9914      	ldr	r1, [sp, #80]	; 0x50
    b2c2:	f8ca 1004 	str.w	r1, [sl, #4]
    b2c6:	3301      	adds	r3, #1
    b2c8:	440a      	add	r2, r1
    b2ca:	2b07      	cmp	r3, #7
    b2cc:	a91e      	add	r1, sp, #120	; 0x78
    b2ce:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b2d2:	f8ca 1000 	str.w	r1, [sl]
    b2d6:	f77f ace5 	ble.w	aca4 <_svfprintf_r+0x32c>
    b2da:	ee1b 1a10 	vmov	r1, s22
    b2de:	aa24      	add	r2, sp, #144	; 0x90
    b2e0:	4658      	mov	r0, fp
    b2e2:	f004 f997 	bl	f614 <__ssprint_r>
    b2e6:	2800      	cmp	r0, #0
    b2e8:	d1ab      	bne.n	b242 <_svfprintf_r+0x8ca>
    b2ea:	9a26      	ldr	r2, [sp, #152]	; 0x98
    b2ec:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b2f0:	e4da      	b.n	aca8 <_svfprintf_r+0x330>
    b2f2:	2d10      	cmp	r5, #16
    b2f4:	e9dd 1225 	ldrd	r1, r2, [sp, #148]	; 0x94
    b2f8:	4e2c      	ldr	r6, [pc, #176]	; (b3ac <_svfprintf_r+0xa34>)
    b2fa:	dd24      	ble.n	b346 <_svfprintf_r+0x9ce>
    b2fc:	9417      	str	r4, [sp, #92]	; 0x5c
    b2fe:	2310      	movs	r3, #16
    b300:	ee1b 4a10 	vmov	r4, s22
    b304:	4608      	mov	r0, r1
    b306:	e004      	b.n	b312 <_svfprintf_r+0x99a>
    b308:	3d10      	subs	r5, #16
    b30a:	2d10      	cmp	r5, #16
    b30c:	f10a 0a08 	add.w	sl, sl, #8
    b310:	dd17      	ble.n	b342 <_svfprintf_r+0x9ca>
    b312:	3001      	adds	r0, #1
    b314:	3210      	adds	r2, #16
    b316:	2807      	cmp	r0, #7
    b318:	e9ca 6300 	strd	r6, r3, [sl]
    b31c:	e9cd 0225 	strd	r0, r2, [sp, #148]	; 0x94
    b320:	ddf2      	ble.n	b308 <_svfprintf_r+0x990>
    b322:	aa24      	add	r2, sp, #144	; 0x90
    b324:	4621      	mov	r1, r4
    b326:	4658      	mov	r0, fp
    b328:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b32c:	f004 f972 	bl	f614 <__ssprint_r>
    b330:	2800      	cmp	r0, #0
    b332:	d186      	bne.n	b242 <_svfprintf_r+0x8ca>
    b334:	3d10      	subs	r5, #16
    b336:	2d10      	cmp	r5, #16
    b338:	e9dd 0225 	ldrd	r0, r2, [sp, #148]	; 0x94
    b33c:	f04f 0310 	mov.w	r3, #16
    b340:	dce7      	bgt.n	b312 <_svfprintf_r+0x99a>
    b342:	9c17      	ldr	r4, [sp, #92]	; 0x5c
    b344:	4601      	mov	r1, r0
    b346:	3101      	adds	r1, #1
    b348:	442a      	add	r2, r5
    b34a:	2907      	cmp	r1, #7
    b34c:	e9cd 1225 	strd	r1, r2, [sp, #148]	; 0x94
    b350:	f8ca 6000 	str.w	r6, [sl]
    b354:	f8ca 5004 	str.w	r5, [sl, #4]
    b358:	f300 83bd 	bgt.w	bad6 <_svfprintf_r+0x115e>
    b35c:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    b360:	f10a 0a08 	add.w	sl, sl, #8
    b364:	e45d      	b.n	ac22 <_svfprintf_r+0x2aa>
    b366:	f8cd 8008 	str.w	r8, [sp, #8]
    b36a:	2a0a      	cmp	r2, #10
    b36c:	f171 0300 	sbcs.w	r3, r1, #0
    b370:	f080 8345 	bcs.w	b9fe <_svfprintf_r+0x1086>
    b374:	3230      	adds	r2, #48	; 0x30
    b376:	2301      	movs	r3, #1
    b378:	f8dd 8008 	ldr.w	r8, [sp, #8]
    b37c:	f88d 213f 	strb.w	r2, [sp, #319]	; 0x13f
    b380:	9305      	str	r3, [sp, #20]
    b382:	f20d 143f 	addw	r4, sp, #319	; 0x13f
    b386:	e668      	b.n	b05a <_svfprintf_r+0x6e2>
    b388:	ee1b 1a10 	vmov	r1, s22
    b38c:	aa24      	add	r2, sp, #144	; 0x90
    b38e:	4658      	mov	r0, fp
    b390:	f004 f940 	bl	f614 <__ssprint_r>
    b394:	2800      	cmp	r0, #0
    b396:	f47f af54 	bne.w	b242 <_svfprintf_r+0x8ca>
    b39a:	9a26      	ldr	r2, [sp, #152]	; 0x98
    b39c:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b3a0:	e452      	b.n	ac48 <_svfprintf_r+0x2d0>
    b3a2:	bf00      	nop
    b3a4:	20000ad4 	.word	0x20000ad4
    b3a8:	20002000 	.word	0x20002000
    b3ac:	20000ad8 	.word	0x20000ad8
    b3b0:	ee1b 1a10 	vmov	r1, s22
    b3b4:	aa24      	add	r2, sp, #144	; 0x90
    b3b6:	4658      	mov	r0, fp
    b3b8:	f004 f92c 	bl	f614 <__ssprint_r>
    b3bc:	2800      	cmp	r0, #0
    b3be:	f47f af40 	bne.w	b242 <_svfprintf_r+0x8ca>
    b3c2:	9a26      	ldr	r2, [sp, #152]	; 0x98
    b3c4:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b3c8:	e451      	b.n	ac6e <_svfprintf_r+0x2f6>
    b3ca:	2c10      	cmp	r4, #16
    b3cc:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b3ce:	4ebe      	ldr	r6, [pc, #760]	; (b6c8 <_svfprintf_r+0xd50>)
    b3d0:	dd1f      	ble.n	b412 <_svfprintf_r+0xa9a>
    b3d2:	ee1b 8a10 	vmov	r8, s22
    b3d6:	2510      	movs	r5, #16
    b3d8:	e004      	b.n	b3e4 <_svfprintf_r+0xa6c>
    b3da:	3c10      	subs	r4, #16
    b3dc:	2c10      	cmp	r4, #16
    b3de:	f10a 0a08 	add.w	sl, sl, #8
    b3e2:	dd16      	ble.n	b412 <_svfprintf_r+0xa9a>
    b3e4:	3301      	adds	r3, #1
    b3e6:	3210      	adds	r2, #16
    b3e8:	2b07      	cmp	r3, #7
    b3ea:	e9ca 6500 	strd	r6, r5, [sl]
    b3ee:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b3f2:	ddf2      	ble.n	b3da <_svfprintf_r+0xa62>
    b3f4:	aa24      	add	r2, sp, #144	; 0x90
    b3f6:	4641      	mov	r1, r8
    b3f8:	4658      	mov	r0, fp
    b3fa:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b3fe:	f004 f909 	bl	f614 <__ssprint_r>
    b402:	2800      	cmp	r0, #0
    b404:	f47f af1d 	bne.w	b242 <_svfprintf_r+0x8ca>
    b408:	3c10      	subs	r4, #16
    b40a:	2c10      	cmp	r4, #16
    b40c:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b410:	dce8      	bgt.n	b3e4 <_svfprintf_r+0xa6c>
    b412:	3301      	adds	r3, #1
    b414:	4422      	add	r2, r4
    b416:	2b07      	cmp	r3, #7
    b418:	e9ca 6400 	strd	r6, r4, [sl]
    b41c:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b420:	f77f ac4b 	ble.w	acba <_svfprintf_r+0x342>
    b424:	ee1b 1a10 	vmov	r1, s22
    b428:	aa24      	add	r2, sp, #144	; 0x90
    b42a:	4658      	mov	r0, fp
    b42c:	f004 f8f2 	bl	f614 <__ssprint_r>
    b430:	2800      	cmp	r0, #0
    b432:	f47f af06 	bne.w	b242 <_svfprintf_r+0x8ca>
    b436:	9a26      	ldr	r2, [sp, #152]	; 0x98
    b438:	e43f      	b.n	acba <_svfprintf_r+0x342>
    b43a:	991b      	ldr	r1, [sp, #108]	; 0x6c
    b43c:	2900      	cmp	r1, #0
    b43e:	f340 835a 	ble.w	baf6 <_svfprintf_r+0x117e>
    b442:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    b444:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b446:	429e      	cmp	r6, r3
    b448:	bfa8      	it	ge
    b44a:	461e      	movge	r6, r3
    b44c:	2e00      	cmp	r6, #0
    b44e:	dd0b      	ble.n	b468 <_svfprintf_r+0xaf0>
    b450:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b452:	3301      	adds	r3, #1
    b454:	4432      	add	r2, r6
    b456:	2b07      	cmp	r3, #7
    b458:	e9ca 4600 	strd	r4, r6, [sl]
    b45c:	9226      	str	r2, [sp, #152]	; 0x98
    b45e:	9325      	str	r3, [sp, #148]	; 0x94
    b460:	f300 8689 	bgt.w	c176 <_svfprintf_r+0x17fe>
    b464:	f10a 0a08 	add.w	sl, sl, #8
    b468:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    b46a:	2e00      	cmp	r6, #0
    b46c:	bfa8      	it	ge
    b46e:	1bad      	subge	r5, r5, r6
    b470:	2d00      	cmp	r5, #0
    b472:	f300 8203 	bgt.w	b87c <_svfprintf_r+0xf04>
    b476:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b478:	f418 6f80 	tst.w	r8, #1024	; 0x400
    b47c:	4423      	add	r3, r4
    b47e:	9305      	str	r3, [sp, #20]
    b480:	f040 821f 	bne.w	b8c2 <_svfprintf_r+0xf4a>
    b484:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    b486:	990e      	ldr	r1, [sp, #56]	; 0x38
    b488:	428b      	cmp	r3, r1
    b48a:	db03      	blt.n	b494 <_svfprintf_r+0xb1c>
    b48c:	f018 0f01 	tst.w	r8, #1
    b490:	f000 84cf 	beq.w	be32 <_svfprintf_r+0x14ba>
    b494:	9910      	ldr	r1, [sp, #64]	; 0x40
    b496:	9812      	ldr	r0, [sp, #72]	; 0x48
    b498:	440a      	add	r2, r1
    b49a:	e9ca 0100 	strd	r0, r1, [sl]
    b49e:	9925      	ldr	r1, [sp, #148]	; 0x94
    b4a0:	9226      	str	r2, [sp, #152]	; 0x98
    b4a2:	3101      	adds	r1, #1
    b4a4:	2907      	cmp	r1, #7
    b4a6:	9125      	str	r1, [sp, #148]	; 0x94
    b4a8:	f300 86a5 	bgt.w	c1f6 <_svfprintf_r+0x187e>
    b4ac:	f10a 0a08 	add.w	sl, sl, #8
    b4b0:	990e      	ldr	r1, [sp, #56]	; 0x38
    b4b2:	1865      	adds	r5, r4, r1
    b4b4:	1acc      	subs	r4, r1, r3
    b4b6:	9b05      	ldr	r3, [sp, #20]
    b4b8:	1aed      	subs	r5, r5, r3
    b4ba:	42a5      	cmp	r5, r4
    b4bc:	bfa8      	it	ge
    b4be:	4625      	movge	r5, r4
    b4c0:	2d00      	cmp	r5, #0
    b4c2:	dd0d      	ble.n	b4e0 <_svfprintf_r+0xb68>
    b4c4:	f8ca 3000 	str.w	r3, [sl]
    b4c8:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b4ca:	f8ca 5004 	str.w	r5, [sl, #4]
    b4ce:	3301      	adds	r3, #1
    b4d0:	442a      	add	r2, r5
    b4d2:	2b07      	cmp	r3, #7
    b4d4:	9226      	str	r2, [sp, #152]	; 0x98
    b4d6:	9325      	str	r3, [sp, #148]	; 0x94
    b4d8:	f300 86bb 	bgt.w	c252 <_svfprintf_r+0x18da>
    b4dc:	f10a 0a08 	add.w	sl, sl, #8
    b4e0:	2d00      	cmp	r5, #0
    b4e2:	bfa8      	it	ge
    b4e4:	1b64      	subge	r4, r4, r5
    b4e6:	2c00      	cmp	r4, #0
    b4e8:	f77f abde 	ble.w	aca8 <_svfprintf_r+0x330>
    b4ec:	2c10      	cmp	r4, #16
    b4ee:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b4f0:	f340 837c 	ble.w	bbec <_svfprintf_r+0x1274>
    b4f4:	ee1b 6a10 	vmov	r6, s22
    b4f8:	2510      	movs	r5, #16
    b4fa:	e005      	b.n	b508 <_svfprintf_r+0xb90>
    b4fc:	f10a 0a08 	add.w	sl, sl, #8
    b500:	3c10      	subs	r4, #16
    b502:	2c10      	cmp	r4, #16
    b504:	f340 8372 	ble.w	bbec <_svfprintf_r+0x1274>
    b508:	3301      	adds	r3, #1
    b50a:	4970      	ldr	r1, [pc, #448]	; (b6cc <_svfprintf_r+0xd54>)
    b50c:	3210      	adds	r2, #16
    b50e:	2b07      	cmp	r3, #7
    b510:	e9ca 1500 	strd	r1, r5, [sl]
    b514:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b518:	ddf0      	ble.n	b4fc <_svfprintf_r+0xb84>
    b51a:	aa24      	add	r2, sp, #144	; 0x90
    b51c:	4631      	mov	r1, r6
    b51e:	4658      	mov	r0, fp
    b520:	f004 f878 	bl	f614 <__ssprint_r>
    b524:	2800      	cmp	r0, #0
    b526:	f47f ae8c 	bne.w	b242 <_svfprintf_r+0x8ca>
    b52a:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b52e:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b532:	e7e5      	b.n	b500 <_svfprintf_r+0xb88>
    b534:	2b30      	cmp	r3, #48	; 0x30
    b536:	f43f ad8b 	beq.w	b050 <_svfprintf_r+0x6d8>
    b53a:	2330      	movs	r3, #48	; 0x30
    b53c:	3802      	subs	r0, #2
    b53e:	f804 3c01 	strb.w	r3, [r4, #-1]
    b542:	ab50      	add	r3, sp, #320	; 0x140
    b544:	1a1b      	subs	r3, r3, r0
    b546:	f8dd 8008 	ldr.w	r8, [sp, #8]
    b54a:	9305      	str	r3, [sp, #20]
    b54c:	4604      	mov	r4, r0
    b54e:	e584      	b.n	b05a <_svfprintf_r+0x6e2>
    b550:	f018 0f01 	tst.w	r8, #1
    b554:	f47f ae82 	bne.w	b25c <_svfprintf_r+0x8e4>
    b558:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b55a:	f8ca 4000 	str.w	r4, [sl]
    b55e:	3301      	adds	r3, #1
    b560:	3201      	adds	r2, #1
    b562:	2101      	movs	r1, #1
    b564:	2b07      	cmp	r3, #7
    b566:	9226      	str	r2, [sp, #152]	; 0x98
    b568:	9325      	str	r3, [sp, #148]	; 0x94
    b56a:	f8ca 1004 	str.w	r1, [sl, #4]
    b56e:	f77f aea5 	ble.w	b2bc <_svfprintf_r+0x944>
    b572:	ee1b 1a10 	vmov	r1, s22
    b576:	aa24      	add	r2, sp, #144	; 0x90
    b578:	4658      	mov	r0, fp
    b57a:	f004 f84b 	bl	f614 <__ssprint_r>
    b57e:	2800      	cmp	r0, #0
    b580:	f47f ae5f 	bne.w	b242 <_svfprintf_r+0x8ca>
    b584:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b588:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b58c:	e698      	b.n	b2c0 <_svfprintf_r+0x948>
    b58e:	990e      	ldr	r1, [sp, #56]	; 0x38
    b590:	1e4c      	subs	r4, r1, #1
    b592:	2c00      	cmp	r4, #0
    b594:	f77f ae94 	ble.w	b2c0 <_svfprintf_r+0x948>
    b598:	2c10      	cmp	r4, #16
    b59a:	f340 8361 	ble.w	bc60 <_svfprintf_r+0x12e8>
    b59e:	ee1b 6a10 	vmov	r6, s22
    b5a2:	2510      	movs	r5, #16
    b5a4:	e005      	b.n	b5b2 <_svfprintf_r+0xc3a>
    b5a6:	f10a 0a08 	add.w	sl, sl, #8
    b5aa:	3c10      	subs	r4, #16
    b5ac:	2c10      	cmp	r4, #16
    b5ae:	f340 8357 	ble.w	bc60 <_svfprintf_r+0x12e8>
    b5b2:	3301      	adds	r3, #1
    b5b4:	4945      	ldr	r1, [pc, #276]	; (b6cc <_svfprintf_r+0xd54>)
    b5b6:	3210      	adds	r2, #16
    b5b8:	2b07      	cmp	r3, #7
    b5ba:	e9ca 1500 	strd	r1, r5, [sl]
    b5be:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b5c2:	ddf0      	ble.n	b5a6 <_svfprintf_r+0xc2e>
    b5c4:	aa24      	add	r2, sp, #144	; 0x90
    b5c6:	4631      	mov	r1, r6
    b5c8:	4658      	mov	r0, fp
    b5ca:	f004 f823 	bl	f614 <__ssprint_r>
    b5ce:	2800      	cmp	r0, #0
    b5d0:	f47f ae37 	bne.w	b242 <_svfprintf_r+0x8ca>
    b5d4:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b5d8:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b5dc:	e7e5      	b.n	b5aa <_svfprintf_r+0xc32>
    b5de:	ee1b 1a10 	vmov	r1, s22
    b5e2:	aa24      	add	r2, sp, #144	; 0x90
    b5e4:	4658      	mov	r0, fp
    b5e6:	f004 f815 	bl	f614 <__ssprint_r>
    b5ea:	2800      	cmp	r0, #0
    b5ec:	f47f ae29 	bne.w	b242 <_svfprintf_r+0x8ca>
    b5f0:	9a26      	ldr	r2, [sp, #152]	; 0x98
    b5f2:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b5f6:	f7ff bb44 	b.w	ac82 <_svfprintf_r+0x30a>
    b5fa:	9b02      	ldr	r3, [sp, #8]
    b5fc:	f013 0310 	ands.w	r3, r3, #16
    b600:	f040 80c1 	bne.w	b786 <_svfprintf_r+0xe0e>
    b604:	9a02      	ldr	r2, [sp, #8]
    b606:	f012 0240 	ands.w	r2, r2, #64	; 0x40
    b60a:	f000 837a 	beq.w	bd02 <_svfprintf_r+0x138a>
    b60e:	9808      	ldr	r0, [sp, #32]
    b610:	f850 2b04 	ldr.w	r2, [r0], #4
    b614:	9008      	str	r0, [sp, #32]
    b616:	4619      	mov	r1, r3
    b618:	b292      	uxth	r2, r2
    b61a:	2301      	movs	r3, #1
    b61c:	e451      	b.n	aec2 <_svfprintf_r+0x54a>
    b61e:	f018 0310 	ands.w	r3, r8, #16
    b622:	d155      	bne.n	b6d0 <_svfprintf_r+0xd58>
    b624:	f018 0240 	ands.w	r2, r8, #64	; 0x40
    b628:	f000 835d 	beq.w	bce6 <_svfprintf_r+0x136e>
    b62c:	9808      	ldr	r0, [sp, #32]
    b62e:	f850 2b04 	ldr.w	r2, [r0], #4
    b632:	9008      	str	r0, [sp, #32]
    b634:	4619      	mov	r1, r3
    b636:	b292      	uxth	r2, r2
    b638:	e4a8      	b.n	af8c <_svfprintf_r+0x614>
    b63a:	4252      	negs	r2, r2
    b63c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    b640:	f8cd 8008 	str.w	r8, [sp, #8]
    b644:	202d      	movs	r0, #45	; 0x2d
    b646:	2301      	movs	r3, #1
    b648:	e43c      	b.n	aec4 <_svfprintf_r+0x54c>
    b64a:	ee1b 1a10 	vmov	r1, s22
    b64e:	aa24      	add	r2, sp, #144	; 0x90
    b650:	4658      	mov	r0, fp
    b652:	f003 ffdf 	bl	f614 <__ssprint_r>
    b656:	2800      	cmp	r0, #0
    b658:	f47f adf3 	bne.w	b242 <_svfprintf_r+0x8ca>
    b65c:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b660:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b664:	e616      	b.n	b294 <_svfprintf_r+0x91c>
    b666:	ee1b 1a10 	vmov	r1, s22
    b66a:	aa24      	add	r2, sp, #144	; 0x90
    b66c:	4658      	mov	r0, fp
    b66e:	f003 ffd1 	bl	f614 <__ssprint_r>
    b672:	2800      	cmp	r0, #0
    b674:	f47f ade5 	bne.w	b242 <_svfprintf_r+0x8ca>
    b678:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b67c:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b680:	e5fb      	b.n	b27a <_svfprintf_r+0x902>
    b682:	f018 0f01 	tst.w	r8, #1
    b686:	f43f ab0f 	beq.w	aca8 <_svfprintf_r+0x330>
    b68a:	e52a      	b.n	b0e2 <_svfprintf_r+0x76a>
    b68c:	9308      	str	r3, [sp, #32]
    b68e:	f899 3000 	ldrb.w	r3, [r9]
    b692:	f7ff b9cd 	b.w	aa30 <_svfprintf_r+0xb8>
    b696:	ac50      	add	r4, sp, #320	; 0x140
    b698:	e4df      	b.n	b05a <_svfprintf_r+0x6e2>
    b69a:	f418 7f00 	tst.w	r8, #512	; 0x200
    b69e:	f040 83db 	bne.w	be58 <_svfprintf_r+0x14e0>
    b6a2:	f853 2b04 	ldr.w	r2, [r3], #4
    b6a6:	9308      	str	r3, [sp, #32]
    b6a8:	17d1      	asrs	r1, r2, #31
    b6aa:	460b      	mov	r3, r1
    b6ac:	f7ff bbb6 	b.w	ae1c <_svfprintf_r+0x4a4>
    b6b0:	9b08      	ldr	r3, [sp, #32]
    b6b2:	9804      	ldr	r0, [sp, #16]
    b6b4:	f853 1b04 	ldr.w	r1, [r3], #4
    b6b8:	9308      	str	r3, [sp, #32]
    b6ba:	17c2      	asrs	r2, r0, #31
    b6bc:	e9c1 0200 	strd	r0, r2, [r1]
    b6c0:	464c      	mov	r4, r9
    b6c2:	f7ff b98b 	b.w	a9dc <_svfprintf_r+0x64>
    b6c6:	bf00      	nop
    b6c8:	20000ad8 	.word	0x20000ad8
    b6cc:	20002000 	.word	0x20002000
    b6d0:	9b08      	ldr	r3, [sp, #32]
    b6d2:	f853 2b04 	ldr.w	r2, [r3], #4
    b6d6:	9308      	str	r3, [sp, #32]
    b6d8:	e458      	b.n	af8c <_svfprintf_r+0x614>
    b6da:	eeb4 8b48 	vcmp.f64	d8, d8
    b6de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    b6e2:	f180 8694 	bvs.w	c40e <_svfprintf_r+0x1a96>
    b6e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b6e8:	2b61      	cmp	r3, #97	; 0x61
    b6ea:	f000 8552 	beq.w	c192 <_svfprintf_r+0x181a>
    b6ee:	2b41      	cmp	r3, #65	; 0x41
    b6f0:	f000 85c0 	beq.w	c274 <_svfprintf_r+0x18fc>
    b6f4:	9b03      	ldr	r3, [sp, #12]
    b6f6:	3301      	adds	r3, #1
    b6f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b6fa:	f023 0520 	bic.w	r5, r3, #32
    b6fe:	f000 8480 	beq.w	c002 <_svfprintf_r+0x168a>
    b702:	2d47      	cmp	r5, #71	; 0x47
    b704:	d104      	bne.n	b710 <_svfprintf_r+0xd98>
    b706:	9b03      	ldr	r3, [sp, #12]
    b708:	2b00      	cmp	r3, #0
    b70a:	bf08      	it	eq
    b70c:	2301      	moveq	r3, #1
    b70e:	9303      	str	r3, [sp, #12]
    b710:	ee18 3a90 	vmov	r3, s17
    b714:	2b00      	cmp	r3, #0
    b716:	f448 7280 	orr.w	r2, r8, #256	; 0x100
    b71a:	4646      	mov	r6, r8
    b71c:	f2c0 8618 	blt.w	c350 <_svfprintf_r+0x19d8>
    b720:	eeb0 ab48 	vmov.f64	d10, d8
    b724:	2300      	movs	r3, #0
    b726:	4690      	mov	r8, r2
    b728:	9309      	str	r3, [sp, #36]	; 0x24
    b72a:	9307      	str	r3, [sp, #28]
    b72c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b72e:	3b41      	subs	r3, #65	; 0x41
    b730:	2b25      	cmp	r3, #37	; 0x25
    b732:	f200 8398 	bhi.w	be66 <_svfprintf_r+0x14ee>
    b736:	e8df f013 	tbh	[pc, r3, lsl #1]
    b73a:	046f      	.short	0x046f
    b73c:	03960396 	.word	0x03960396
    b740:	04680396 	.word	0x04680396
    b744:	0396046c 	.word	0x0396046c
    b748:	03960396 	.word	0x03960396
    b74c:	03960396 	.word	0x03960396
    b750:	03960396 	.word	0x03960396
    b754:	03960396 	.word	0x03960396
    b758:	03960396 	.word	0x03960396
    b75c:	03960396 	.word	0x03960396
    b760:	03960396 	.word	0x03960396
    b764:	03960396 	.word	0x03960396
    b768:	03960396 	.word	0x03960396
    b76c:	03960396 	.word	0x03960396
    b770:	03960396 	.word	0x03960396
    b774:	03960396 	.word	0x03960396
    b778:	03960396 	.word	0x03960396
    b77c:	03960396 	.word	0x03960396
    b780:	04680396 	.word	0x04680396
    b784:	046c      	.short	0x046c
    b786:	9b08      	ldr	r3, [sp, #32]
    b788:	f853 2b04 	ldr.w	r2, [r3], #4
    b78c:	9308      	str	r3, [sp, #32]
    b78e:	2301      	movs	r3, #1
    b790:	f7ff bb97 	b.w	aec2 <_svfprintf_r+0x54a>
    b794:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    b796:	2b00      	cmp	r3, #0
    b798:	f43f a9cf 	beq.w	ab3a <_svfprintf_r+0x1c2>
    b79c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    b79e:	781b      	ldrb	r3, [r3, #0]
    b7a0:	2b00      	cmp	r3, #0
    b7a2:	f43f a9ca 	beq.w	ab3a <_svfprintf_r+0x1c2>
    b7a6:	f899 3000 	ldrb.w	r3, [r9]
    b7aa:	f448 6880 	orr.w	r8, r8, #1024	; 0x400
    b7ae:	f7ff b93f 	b.w	aa30 <_svfprintf_r+0xb8>
    b7b2:	930b      	str	r3, [sp, #44]	; 0x2c
    b7b4:	f8cd 8008 	str.w	r8, [sp, #8]
    b7b8:	f7ff bbf1 	b.w	af9e <_svfprintf_r+0x626>
    b7bc:	930b      	str	r3, [sp, #44]	; 0x2c
    b7be:	4b9a      	ldr	r3, [pc, #616]	; (ba28 <_svfprintf_r+0x10b0>)
    b7c0:	9311      	str	r3, [sp, #68]	; 0x44
    b7c2:	f018 0120 	ands.w	r1, r8, #32
    b7c6:	f000 8105 	beq.w	b9d4 <_svfprintf_r+0x105c>
    b7ca:	9b08      	ldr	r3, [sp, #32]
    b7cc:	3307      	adds	r3, #7
    b7ce:	f023 0307 	bic.w	r3, r3, #7
    b7d2:	6859      	ldr	r1, [r3, #4]
    b7d4:	f853 2b08 	ldr.w	r2, [r3], #8
    b7d8:	9308      	str	r3, [sp, #32]
    b7da:	f018 0f01 	tst.w	r8, #1
    b7de:	d00a      	beq.n	b7f6 <_svfprintf_r+0xe7e>
    b7e0:	ea52 0301 	orrs.w	r3, r2, r1
    b7e4:	d007      	beq.n	b7f6 <_svfprintf_r+0xe7e>
    b7e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b7e8:	f88d 3069 	strb.w	r3, [sp, #105]	; 0x69
    b7ec:	2330      	movs	r3, #48	; 0x30
    b7ee:	f048 0802 	orr.w	r8, r8, #2
    b7f2:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
    b7f6:	f428 6380 	bic.w	r3, r8, #1024	; 0x400
    b7fa:	9302      	str	r3, [sp, #8]
    b7fc:	2302      	movs	r3, #2
    b7fe:	f7ff bb60 	b.w	aec2 <_svfprintf_r+0x54a>
    b802:	930b      	str	r3, [sp, #44]	; 0x2c
    b804:	f7ff bbb6 	b.w	af74 <_svfprintf_r+0x5fc>
    b808:	930b      	str	r3, [sp, #44]	; 0x2c
    b80a:	4b88      	ldr	r3, [pc, #544]	; (ba2c <_svfprintf_r+0x10b4>)
    b80c:	9311      	str	r3, [sp, #68]	; 0x44
    b80e:	e7d8      	b.n	b7c2 <_svfprintf_r+0xe4a>
    b810:	9b08      	ldr	r3, [sp, #32]
    b812:	2101      	movs	r1, #1
    b814:	f853 2b04 	ldr.w	r2, [r3], #4
    b818:	9102      	str	r1, [sp, #8]
    b81a:	f88d 20dc 	strb.w	r2, [sp, #220]	; 0xdc
    b81e:	9308      	str	r3, [sp, #32]
    b820:	9105      	str	r1, [sp, #20]
    b822:	ac37      	add	r4, sp, #220	; 0xdc
    b824:	f7ff baaf 	b.w	ad86 <_svfprintf_r+0x40e>
    b828:	ee1b 1a10 	vmov	r1, s22
    b82c:	aa24      	add	r2, sp, #144	; 0x90
    b82e:	4658      	mov	r0, fp
    b830:	f003 fef0 	bl	f614 <__ssprint_r>
    b834:	2800      	cmp	r0, #0
    b836:	f47f ad04 	bne.w	b242 <_svfprintf_r+0x8ca>
    b83a:	9a26      	ldr	r2, [sp, #152]	; 0x98
    b83c:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b840:	e45d      	b.n	b0fe <_svfprintf_r+0x786>
    b842:	9b03      	ldr	r3, [sp, #12]
    b844:	9407      	str	r4, [sp, #28]
    b846:	2b06      	cmp	r3, #6
    b848:	4622      	mov	r2, r4
    b84a:	bf28      	it	cs
    b84c:	2306      	movcs	r3, #6
    b84e:	9403      	str	r4, [sp, #12]
    b850:	4621      	mov	r1, r4
    b852:	e9cd 220c 	strd	r2, r2, [sp, #48]	; 0x30
    b856:	4c76      	ldr	r4, [pc, #472]	; (ba30 <_svfprintf_r+0x10b8>)
    b858:	9302      	str	r3, [sp, #8]
    b85a:	9305      	str	r3, [sp, #20]
    b85c:	920f      	str	r2, [sp, #60]	; 0x3c
    b85e:	f7ff ba6c 	b.w	ad3a <_svfprintf_r+0x3c2>
    b862:	2140      	movs	r1, #64	; 0x40
    b864:	4658      	mov	r0, fp
    b866:	f000 fe39 	bl	c4dc <_malloc_r>
    b86a:	6020      	str	r0, [r4, #0]
    b86c:	6120      	str	r0, [r4, #16]
    b86e:	2800      	cmp	r0, #0
    b870:	f000 860f 	beq.w	c492 <_svfprintf_r+0x1b1a>
    b874:	2340      	movs	r3, #64	; 0x40
    b876:	6163      	str	r3, [r4, #20]
    b878:	f7ff b89e 	b.w	a9b8 <_svfprintf_r+0x40>
    b87c:	2d10      	cmp	r5, #16
    b87e:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b880:	f340 825d 	ble.w	bd3e <_svfprintf_r+0x13c6>
    b884:	4651      	mov	r1, sl
    b886:	2610      	movs	r6, #16
    b888:	ee1b aa10 	vmov	sl, s22
    b88c:	e004      	b.n	b898 <_svfprintf_r+0xf20>
    b88e:	3108      	adds	r1, #8
    b890:	3d10      	subs	r5, #16
    b892:	2d10      	cmp	r5, #16
    b894:	f340 8252 	ble.w	bd3c <_svfprintf_r+0x13c4>
    b898:	3301      	adds	r3, #1
    b89a:	4866      	ldr	r0, [pc, #408]	; (ba34 <_svfprintf_r+0x10bc>)
    b89c:	3210      	adds	r2, #16
    b89e:	2b07      	cmp	r3, #7
    b8a0:	e9c1 0600 	strd	r0, r6, [r1]
    b8a4:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b8a8:	ddf1      	ble.n	b88e <_svfprintf_r+0xf16>
    b8aa:	aa24      	add	r2, sp, #144	; 0x90
    b8ac:	4651      	mov	r1, sl
    b8ae:	4658      	mov	r0, fp
    b8b0:	f003 feb0 	bl	f614 <__ssprint_r>
    b8b4:	2800      	cmp	r0, #0
    b8b6:	f47f acc4 	bne.w	b242 <_svfprintf_r+0x8ca>
    b8ba:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b8be:	a927      	add	r1, sp, #156	; 0x9c
    b8c0:	e7e6      	b.n	b890 <_svfprintf_r+0xf18>
    b8c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b8c4:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
    b8c8:	18e3      	adds	r3, r4, r3
    b8ca:	9303      	str	r3, [sp, #12]
    b8cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b8ce:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
    b8d2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
    b8d4:	9d05      	ldr	r5, [sp, #20]
    b8d6:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
    b8da:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
    b8de:	940b      	str	r4, [sp, #44]	; 0x2c
    b8e0:	ee1b 1a10 	vmov	r1, s22
    b8e4:	4650      	mov	r0, sl
    b8e6:	2b00      	cmp	r3, #0
    b8e8:	d034      	beq.n	b954 <_svfprintf_r+0xfdc>
    b8ea:	f1b8 0f00 	cmp.w	r8, #0
    b8ee:	d135      	bne.n	b95c <_svfprintf_r+0xfe4>
    b8f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b8f2:	3b01      	subs	r3, #1
    b8f4:	3e01      	subs	r6, #1
    b8f6:	930d      	str	r3, [sp, #52]	; 0x34
    b8f8:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b8fa:	e9c0 3900 	strd	r3, r9, [r0]
    b8fe:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b900:	3301      	adds	r3, #1
    b902:	444a      	add	r2, r9
    b904:	2b07      	cmp	r3, #7
    b906:	9226      	str	r2, [sp, #152]	; 0x98
    b908:	9325      	str	r3, [sp, #148]	; 0x94
    b90a:	dc6c      	bgt.n	b9e6 <_svfprintf_r+0x106e>
    b90c:	3008      	adds	r0, #8
    b90e:	9b03      	ldr	r3, [sp, #12]
    b910:	f896 c000 	ldrb.w	ip, [r6]
    b914:	1b5b      	subs	r3, r3, r5
    b916:	4563      	cmp	r3, ip
    b918:	bfa8      	it	ge
    b91a:	4663      	movge	r3, ip
    b91c:	2b00      	cmp	r3, #0
    b91e:	469a      	mov	sl, r3
    b920:	dd0c      	ble.n	b93c <_svfprintf_r+0xfc4>
    b922:	9c25      	ldr	r4, [sp, #148]	; 0x94
    b924:	3401      	adds	r4, #1
    b926:	441a      	add	r2, r3
    b928:	2c07      	cmp	r4, #7
    b92a:	e9c0 5300 	strd	r5, r3, [r0]
    b92e:	9226      	str	r2, [sp, #152]	; 0x98
    b930:	9425      	str	r4, [sp, #148]	; 0x94
    b932:	f300 8177 	bgt.w	bc24 <_svfprintf_r+0x12ac>
    b936:	f896 c000 	ldrb.w	ip, [r6]
    b93a:	3008      	adds	r0, #8
    b93c:	f1ba 0f00 	cmp.w	sl, #0
    b940:	bfac      	ite	ge
    b942:	ebac 040a 	subge.w	r4, ip, sl
    b946:	4664      	movlt	r4, ip
    b948:	2c00      	cmp	r4, #0
    b94a:	dc0a      	bgt.n	b962 <_svfprintf_r+0xfea>
    b94c:	4465      	add	r5, ip
    b94e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b950:	2b00      	cmp	r3, #0
    b952:	d1ca      	bne.n	b8ea <_svfprintf_r+0xf72>
    b954:	f1b8 0f00 	cmp.w	r8, #0
    b958:	f000 83ac 	beq.w	c0b4 <_svfprintf_r+0x173c>
    b95c:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
    b960:	e7ca      	b.n	b8f8 <_svfprintf_r+0xf80>
    b962:	2c10      	cmp	r4, #16
    b964:	f8dd c094 	ldr.w	ip, [sp, #148]	; 0x94
    b968:	dd24      	ble.n	b9b4 <_svfprintf_r+0x103c>
    b96a:	9505      	str	r5, [sp, #20]
    b96c:	f04f 0a10 	mov.w	sl, #16
    b970:	4663      	mov	r3, ip
    b972:	460d      	mov	r5, r1
    b974:	e004      	b.n	b980 <_svfprintf_r+0x1008>
    b976:	3c10      	subs	r4, #16
    b978:	2c10      	cmp	r4, #16
    b97a:	f100 0008 	add.w	r0, r0, #8
    b97e:	dd16      	ble.n	b9ae <_svfprintf_r+0x1036>
    b980:	3301      	adds	r3, #1
    b982:	492c      	ldr	r1, [pc, #176]	; (ba34 <_svfprintf_r+0x10bc>)
    b984:	3210      	adds	r2, #16
    b986:	2b07      	cmp	r3, #7
    b988:	e9c0 1a00 	strd	r1, sl, [r0]
    b98c:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b990:	ddf1      	ble.n	b976 <_svfprintf_r+0xffe>
    b992:	aa24      	add	r2, sp, #144	; 0x90
    b994:	4629      	mov	r1, r5
    b996:	4658      	mov	r0, fp
    b998:	f003 fe3c 	bl	f614 <__ssprint_r>
    b99c:	2800      	cmp	r0, #0
    b99e:	f47f ac50 	bne.w	b242 <_svfprintf_r+0x8ca>
    b9a2:	3c10      	subs	r4, #16
    b9a4:	2c10      	cmp	r4, #16
    b9a6:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b9aa:	a827      	add	r0, sp, #156	; 0x9c
    b9ac:	dce8      	bgt.n	b980 <_svfprintf_r+0x1008>
    b9ae:	4629      	mov	r1, r5
    b9b0:	9d05      	ldr	r5, [sp, #20]
    b9b2:	469c      	mov	ip, r3
    b9b4:	f10c 0301 	add.w	r3, ip, #1
    b9b8:	4422      	add	r2, r4
    b9ba:	6044      	str	r4, [r0, #4]
    b9bc:	2b07      	cmp	r3, #7
    b9be:	4c1d      	ldr	r4, [pc, #116]	; (ba34 <_svfprintf_r+0x10bc>)
    b9c0:	6004      	str	r4, [r0, #0]
    b9c2:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b9c6:	f300 83c6 	bgt.w	c156 <_svfprintf_r+0x17de>
    b9ca:	f896 c000 	ldrb.w	ip, [r6]
    b9ce:	3008      	adds	r0, #8
    b9d0:	4465      	add	r5, ip
    b9d2:	e7bc      	b.n	b94e <_svfprintf_r+0xfd6>
    b9d4:	f018 0310 	ands.w	r3, r8, #16
    b9d8:	f000 80c2 	beq.w	bb60 <_svfprintf_r+0x11e8>
    b9dc:	9b08      	ldr	r3, [sp, #32]
    b9de:	f853 2b04 	ldr.w	r2, [r3], #4
    b9e2:	9308      	str	r3, [sp, #32]
    b9e4:	e6f9      	b.n	b7da <_svfprintf_r+0xe62>
    b9e6:	aa24      	add	r2, sp, #144	; 0x90
    b9e8:	4658      	mov	r0, fp
    b9ea:	9105      	str	r1, [sp, #20]
    b9ec:	f003 fe12 	bl	f614 <__ssprint_r>
    b9f0:	2800      	cmp	r0, #0
    b9f2:	f47f ac26 	bne.w	b242 <_svfprintf_r+0x8ca>
    b9f6:	9a26      	ldr	r2, [sp, #152]	; 0x98
    b9f8:	9905      	ldr	r1, [sp, #20]
    b9fa:	a827      	add	r0, sp, #156	; 0x9c
    b9fc:	e787      	b.n	b90e <_svfprintf_r+0xf96>
    b9fe:	9802      	ldr	r0, [sp, #8]
    ba00:	f8cd a01c 	str.w	sl, [sp, #28]
    ba04:	ac50      	add	r4, sp, #320	; 0x140
    ba06:	f400 6080 	and.w	r0, r0, #1024	; 0x400
    ba0a:	2500      	movs	r5, #0
    ba0c:	ee0a ba10 	vmov	s20, fp
    ba10:	4b09      	ldr	r3, [pc, #36]	; (ba38 <_svfprintf_r+0x10c0>)
    ba12:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
    ba16:	f8cd 9014 	str.w	r9, [sp, #20]
    ba1a:	46a3      	mov	fp, r4
    ba1c:	f04f 0805 	mov.w	r8, #5
    ba20:	46ac      	mov	ip, r5
    ba22:	4604      	mov	r4, r0
    ba24:	e010      	b.n	ba48 <_svfprintf_r+0x10d0>
    ba26:	bf00      	nop
    ba28:	20000aa4 	.word	0x20000aa4
    ba2c:	20000ab8 	.word	0x20000ab8
    ba30:	20000acc 	.word	0x20000acc
    ba34:	20002000 	.word	0x20002000
    ba38:	cccccccd 	.word	0xcccccccd
    ba3c:	2a0a      	cmp	r2, #10
    ba3e:	f171 0100 	sbcs.w	r1, r1, #0
    ba42:	d336      	bcc.n	bab2 <_svfprintf_r+0x113a>
    ba44:	464a      	mov	r2, r9
    ba46:	4631      	mov	r1, r6
    ba48:	1850      	adds	r0, r2, r1
    ba4a:	f140 0000 	adc.w	r0, r0, #0
    ba4e:	fba3 5600 	umull	r5, r6, r3, r0
    ba52:	f026 0503 	bic.w	r5, r6, #3
    ba56:	eb05 0596 	add.w	r5, r5, r6, lsr #2
    ba5a:	1b40      	subs	r0, r0, r5
    ba5c:	1a15      	subs	r5, r2, r0
    ba5e:	f04f 36cc 	mov.w	r6, #3435973836	; 0xcccccccc
    ba62:	f161 0e00 	sbc.w	lr, r1, #0
    ba66:	fb06 f605 	mul.w	r6, r6, r5
    ba6a:	fba5 9503 	umull	r9, r5, r5, r3
    ba6e:	fb03 660e 	mla	r6, r3, lr, r6
    ba72:	f009 0e01 	and.w	lr, r9, #1
    ba76:	442e      	add	r6, r5
    ba78:	fbae 5e08 	umull	r5, lr, lr, r8
    ba7c:	182d      	adds	r5, r5, r0
    ba7e:	ea4f 0959 	mov.w	r9, r9, lsr #1
    ba82:	3530      	adds	r5, #48	; 0x30
    ba84:	f80b 5c01 	strb.w	r5, [fp, #-1]
    ba88:	ea49 79c6 	orr.w	r9, r9, r6, lsl #31
    ba8c:	f10c 0c01 	add.w	ip, ip, #1
    ba90:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
    ba94:	0876      	lsrs	r6, r6, #1
    ba96:	2c00      	cmp	r4, #0
    ba98:	d0d0      	beq.n	ba3c <_svfprintf_r+0x10c4>
    ba9a:	f89a 0000 	ldrb.w	r0, [sl]
    ba9e:	4584      	cmp	ip, r0
    baa0:	d1cc      	bne.n	ba3c <_svfprintf_r+0x10c4>
    baa2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
    baa6:	d0c9      	beq.n	ba3c <_svfprintf_r+0x10c4>
    baa8:	2a0a      	cmp	r2, #10
    baaa:	f171 0100 	sbcs.w	r1, r1, #0
    baae:	f080 818f 	bcs.w	bdd0 <_svfprintf_r+0x1458>
    bab2:	465c      	mov	r4, fp
    bab4:	ab50      	add	r3, sp, #320	; 0x140
    bab6:	1b1b      	subs	r3, r3, r4
    bab8:	f8dd 9014 	ldr.w	r9, [sp, #20]
    babc:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
    bac0:	ee1a ba10 	vmov	fp, s20
    bac4:	f8dd a01c 	ldr.w	sl, [sp, #28]
    bac8:	f8dd 8008 	ldr.w	r8, [sp, #8]
    bacc:	f8cd c038 	str.w	ip, [sp, #56]	; 0x38
    bad0:	9305      	str	r3, [sp, #20]
    bad2:	f7ff bac2 	b.w	b05a <_svfprintf_r+0x6e2>
    bad6:	ee1b 1a10 	vmov	r1, s22
    bada:	aa24      	add	r2, sp, #144	; 0x90
    badc:	4658      	mov	r0, fp
    bade:	f003 fd99 	bl	f614 <__ssprint_r>
    bae2:	2800      	cmp	r0, #0
    bae4:	f47f abad 	bne.w	b242 <_svfprintf_r+0x8ca>
    bae8:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    baec:	9a26      	ldr	r2, [sp, #152]	; 0x98
    baee:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    baf2:	f7ff b896 	b.w	ac22 <_svfprintf_r+0x2aa>
    baf6:	9b25      	ldr	r3, [sp, #148]	; 0x94
    baf8:	48be      	ldr	r0, [pc, #760]	; (bdf4 <_svfprintf_r+0x147c>)
    bafa:	f8ca 0000 	str.w	r0, [sl]
    bafe:	3301      	adds	r3, #1
    bb00:	3201      	adds	r2, #1
    bb02:	2001      	movs	r0, #1
    bb04:	2b07      	cmp	r3, #7
    bb06:	9226      	str	r2, [sp, #152]	; 0x98
    bb08:	9325      	str	r3, [sp, #148]	; 0x94
    bb0a:	f8ca 0004 	str.w	r0, [sl, #4]
    bb0e:	f300 8177 	bgt.w	be00 <_svfprintf_r+0x1488>
    bb12:	f10a 0a08 	add.w	sl, sl, #8
    bb16:	2900      	cmp	r1, #0
    bb18:	f040 80af 	bne.w	bc7a <_svfprintf_r+0x1302>
    bb1c:	990e      	ldr	r1, [sp, #56]	; 0x38
    bb1e:	f008 0301 	and.w	r3, r8, #1
    bb22:	430b      	orrs	r3, r1
    bb24:	f43f a8c0 	beq.w	aca8 <_svfprintf_r+0x330>
    bb28:	9b10      	ldr	r3, [sp, #64]	; 0x40
    bb2a:	9912      	ldr	r1, [sp, #72]	; 0x48
    bb2c:	441a      	add	r2, r3
    bb2e:	e9ca 1300 	strd	r1, r3, [sl]
    bb32:	9b25      	ldr	r3, [sp, #148]	; 0x94
    bb34:	9226      	str	r2, [sp, #152]	; 0x98
    bb36:	3301      	adds	r3, #1
    bb38:	2b07      	cmp	r3, #7
    bb3a:	9325      	str	r3, [sp, #148]	; 0x94
    bb3c:	f300 8252 	bgt.w	bfe4 <_svfprintf_r+0x166c>
    bb40:	f10a 0a08 	add.w	sl, sl, #8
    bb44:	990e      	ldr	r1, [sp, #56]	; 0x38
    bb46:	f8ca 4000 	str.w	r4, [sl]
    bb4a:	3301      	adds	r3, #1
    bb4c:	440a      	add	r2, r1
    bb4e:	2b07      	cmp	r3, #7
    bb50:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    bb54:	f8ca 1004 	str.w	r1, [sl, #4]
    bb58:	f77f a8a4 	ble.w	aca4 <_svfprintf_r+0x32c>
    bb5c:	f7ff bbbd 	b.w	b2da <_svfprintf_r+0x962>
    bb60:	f018 0240 	ands.w	r2, r8, #64	; 0x40
    bb64:	f000 80dd 	beq.w	bd22 <_svfprintf_r+0x13aa>
    bb68:	9808      	ldr	r0, [sp, #32]
    bb6a:	f850 2b04 	ldr.w	r2, [r0], #4
    bb6e:	9008      	str	r0, [sp, #32]
    bb70:	4619      	mov	r1, r3
    bb72:	b292      	uxth	r2, r2
    bb74:	e631      	b.n	b7da <_svfprintf_r+0xe62>
    bb76:	ee1b 1a10 	vmov	r1, s22
    bb7a:	aa24      	add	r2, sp, #144	; 0x90
    bb7c:	4658      	mov	r0, fp
    bb7e:	f003 fd49 	bl	f614 <__ssprint_r>
    bb82:	2800      	cmp	r0, #0
    bb84:	f47f ab5d 	bne.w	b242 <_svfprintf_r+0x8ca>
    bb88:	9a26      	ldr	r2, [sp, #152]	; 0x98
    bb8a:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    bb8e:	f7ff baa3 	b.w	b0d8 <_svfprintf_r+0x760>
    bb92:	ae22      	add	r6, sp, #136	; 0x88
    bb94:	2208      	movs	r2, #8
    bb96:	2100      	movs	r1, #0
    bb98:	4630      	mov	r0, r6
    bb9a:	941d      	str	r4, [sp, #116]	; 0x74
    bb9c:	f001 f81a 	bl	cbd4 <memset>
    bba0:	9b03      	ldr	r3, [sp, #12]
    bba2:	1c5a      	adds	r2, r3, #1
    bba4:	f000 80db 	beq.w	bd5e <_svfprintf_r+0x13e6>
    bba8:	2500      	movs	r5, #0
    bbaa:	f8cd 9008 	str.w	r9, [sp, #8]
    bbae:	f8cd 801c 	str.w	r8, [sp, #28]
    bbb2:	4699      	mov	r9, r3
    bbb4:	46a8      	mov	r8, r5
    bbb6:	e00c      	b.n	bbd2 <_svfprintf_r+0x125a>
    bbb8:	a937      	add	r1, sp, #220	; 0xdc
    bbba:	4658      	mov	r0, fp
    bbbc:	f001 f862 	bl	cc84 <_wcrtomb_r>
    bbc0:	1c43      	adds	r3, r0, #1
    bbc2:	4440      	add	r0, r8
    bbc4:	f000 83c8 	beq.w	c358 <_svfprintf_r+0x19e0>
    bbc8:	4548      	cmp	r0, r9
    bbca:	dc08      	bgt.n	bbde <_svfprintf_r+0x1266>
    bbcc:	f000 8418 	beq.w	c400 <_svfprintf_r+0x1a88>
    bbd0:	4680      	mov	r8, r0
    bbd2:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    bbd4:	5952      	ldr	r2, [r2, r5]
    bbd6:	4633      	mov	r3, r6
    bbd8:	3504      	adds	r5, #4
    bbda:	2a00      	cmp	r2, #0
    bbdc:	d1ec      	bne.n	bbb8 <_svfprintf_r+0x1240>
    bbde:	f8cd 8014 	str.w	r8, [sp, #20]
    bbe2:	f8dd 9008 	ldr.w	r9, [sp, #8]
    bbe6:	f8dd 801c 	ldr.w	r8, [sp, #28]
    bbea:	e0c5      	b.n	bd78 <_svfprintf_r+0x1400>
    bbec:	3301      	adds	r3, #1
    bbee:	4982      	ldr	r1, [pc, #520]	; (bdf8 <_svfprintf_r+0x1480>)
    bbf0:	f8ca 4004 	str.w	r4, [sl, #4]
    bbf4:	4422      	add	r2, r4
    bbf6:	2b07      	cmp	r3, #7
    bbf8:	f8ca 1000 	str.w	r1, [sl]
    bbfc:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    bc00:	f77f a850 	ble.w	aca4 <_svfprintf_r+0x32c>
    bc04:	f7ff bb69 	b.w	b2da <_svfprintf_r+0x962>
    bc08:	ee1b 1a10 	vmov	r1, s22
    bc0c:	aa24      	add	r2, sp, #144	; 0x90
    bc0e:	4658      	mov	r0, fp
    bc10:	f003 fd00 	bl	f614 <__ssprint_r>
    bc14:	2800      	cmp	r0, #0
    bc16:	f47f ab14 	bne.w	b242 <_svfprintf_r+0x8ca>
    bc1a:	9a26      	ldr	r2, [sp, #152]	; 0x98
    bc1c:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    bc20:	f7ff b829 	b.w	ac76 <_svfprintf_r+0x2fe>
    bc24:	aa24      	add	r2, sp, #144	; 0x90
    bc26:	4658      	mov	r0, fp
    bc28:	9105      	str	r1, [sp, #20]
    bc2a:	f003 fcf3 	bl	f614 <__ssprint_r>
    bc2e:	2800      	cmp	r0, #0
    bc30:	f47f ab07 	bne.w	b242 <_svfprintf_r+0x8ca>
    bc34:	f896 c000 	ldrb.w	ip, [r6]
    bc38:	9a26      	ldr	r2, [sp, #152]	; 0x98
    bc3a:	9905      	ldr	r1, [sp, #20]
    bc3c:	a827      	add	r0, sp, #156	; 0x9c
    bc3e:	e67d      	b.n	b93c <_svfprintf_r+0xfc4>
    bc40:	2b01      	cmp	r3, #1
    bc42:	f8cd 8008 	str.w	r8, [sp, #8]
    bc46:	f47f a9f3 	bne.w	b030 <_svfprintf_r+0x6b8>
    bc4a:	f7ff bb93 	b.w	b374 <_svfprintf_r+0x9fc>
    bc4e:	9b08      	ldr	r3, [sp, #32]
    bc50:	9904      	ldr	r1, [sp, #16]
    bc52:	f853 2b04 	ldr.w	r2, [r3], #4
    bc56:	464c      	mov	r4, r9
    bc58:	6011      	str	r1, [r2, #0]
    bc5a:	9308      	str	r3, [sp, #32]
    bc5c:	f7fe bebe 	b.w	a9dc <_svfprintf_r+0x64>
    bc60:	3301      	adds	r3, #1
    bc62:	4965      	ldr	r1, [pc, #404]	; (bdf8 <_svfprintf_r+0x1480>)
    bc64:	f8ca 4004 	str.w	r4, [sl, #4]
    bc68:	4422      	add	r2, r4
    bc6a:	2b07      	cmp	r3, #7
    bc6c:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    bc70:	f8ca 1000 	str.w	r1, [sl]
    bc74:	f77f ab22 	ble.w	b2bc <_svfprintf_r+0x944>
    bc78:	e47b      	b.n	b572 <_svfprintf_r+0xbfa>
    bc7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
    bc7c:	9812      	ldr	r0, [sp, #72]	; 0x48
    bc7e:	441a      	add	r2, r3
    bc80:	e9ca 0300 	strd	r0, r3, [sl]
    bc84:	9b25      	ldr	r3, [sp, #148]	; 0x94
    bc86:	9226      	str	r2, [sp, #152]	; 0x98
    bc88:	3301      	adds	r3, #1
    bc8a:	2b07      	cmp	r3, #7
    bc8c:	9325      	str	r3, [sp, #148]	; 0x94
    bc8e:	f300 81a9 	bgt.w	bfe4 <_svfprintf_r+0x166c>
    bc92:	f10a 0a08 	add.w	sl, sl, #8
    bc96:	2900      	cmp	r1, #0
    bc98:	f6bf af54 	bge.w	bb44 <_svfprintf_r+0x11cc>
    bc9c:	424d      	negs	r5, r1
    bc9e:	3110      	adds	r1, #16
    bca0:	f280 830f 	bge.w	c2c2 <_svfprintf_r+0x194a>
    bca4:	ee1b 1a10 	vmov	r1, s22
    bca8:	2610      	movs	r6, #16
    bcaa:	e005      	b.n	bcb8 <_svfprintf_r+0x1340>
    bcac:	f10a 0a08 	add.w	sl, sl, #8
    bcb0:	3d10      	subs	r5, #16
    bcb2:	2d10      	cmp	r5, #16
    bcb4:	f340 8305 	ble.w	c2c2 <_svfprintf_r+0x194a>
    bcb8:	3301      	adds	r3, #1
    bcba:	484f      	ldr	r0, [pc, #316]	; (bdf8 <_svfprintf_r+0x1480>)
    bcbc:	3210      	adds	r2, #16
    bcbe:	2b07      	cmp	r3, #7
    bcc0:	e9ca 0600 	strd	r0, r6, [sl]
    bcc4:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    bcc8:	ddf0      	ble.n	bcac <_svfprintf_r+0x1334>
    bcca:	aa24      	add	r2, sp, #144	; 0x90
    bccc:	4658      	mov	r0, fp
    bcce:	9103      	str	r1, [sp, #12]
    bcd0:	f003 fca0 	bl	f614 <__ssprint_r>
    bcd4:	2800      	cmp	r0, #0
    bcd6:	f47f aab4 	bne.w	b242 <_svfprintf_r+0x8ca>
    bcda:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    bcde:	9903      	ldr	r1, [sp, #12]
    bce0:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    bce4:	e7e4      	b.n	bcb0 <_svfprintf_r+0x1338>
    bce6:	9b08      	ldr	r3, [sp, #32]
    bce8:	f418 7100 	ands.w	r1, r8, #512	; 0x200
    bcec:	bf1a      	itte	ne
    bcee:	4611      	movne	r1, r2
    bcf0:	f853 2b04 	ldrne.w	r2, [r3], #4
    bcf4:	f853 2b04 	ldreq.w	r2, [r3], #4
    bcf8:	9308      	str	r3, [sp, #32]
    bcfa:	bf18      	it	ne
    bcfc:	b2d2      	uxtbne	r2, r2
    bcfe:	f7ff b945 	b.w	af8c <_svfprintf_r+0x614>
    bd02:	9b02      	ldr	r3, [sp, #8]
    bd04:	f413 7100 	ands.w	r1, r3, #512	; 0x200
    bd08:	9b08      	ldr	r3, [sp, #32]
    bd0a:	bf1a      	itte	ne
    bd0c:	4611      	movne	r1, r2
    bd0e:	f853 2b04 	ldrne.w	r2, [r3], #4
    bd12:	f853 2b04 	ldreq.w	r2, [r3], #4
    bd16:	9308      	str	r3, [sp, #32]
    bd18:	bf18      	it	ne
    bd1a:	b2d2      	uxtbne	r2, r2
    bd1c:	2301      	movs	r3, #1
    bd1e:	f7ff b8d0 	b.w	aec2 <_svfprintf_r+0x54a>
    bd22:	9b08      	ldr	r3, [sp, #32]
    bd24:	f418 7100 	ands.w	r1, r8, #512	; 0x200
    bd28:	bf1a      	itte	ne
    bd2a:	4611      	movne	r1, r2
    bd2c:	f853 2b04 	ldrne.w	r2, [r3], #4
    bd30:	f853 2b04 	ldreq.w	r2, [r3], #4
    bd34:	9308      	str	r3, [sp, #32]
    bd36:	bf18      	it	ne
    bd38:	b2d2      	uxtbne	r2, r2
    bd3a:	e54e      	b.n	b7da <_svfprintf_r+0xe62>
    bd3c:	468a      	mov	sl, r1
    bd3e:	3301      	adds	r3, #1
    bd40:	492d      	ldr	r1, [pc, #180]	; (bdf8 <_svfprintf_r+0x1480>)
    bd42:	f8ca 5004 	str.w	r5, [sl, #4]
    bd46:	442a      	add	r2, r5
    bd48:	2b07      	cmp	r3, #7
    bd4a:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    bd4e:	f8ca 1000 	str.w	r1, [sl]
    bd52:	f300 8139 	bgt.w	bfc8 <_svfprintf_r+0x1650>
    bd56:	f10a 0a08 	add.w	sl, sl, #8
    bd5a:	f7ff bb8c 	b.w	b476 <_svfprintf_r+0xafe>
    bd5e:	2300      	movs	r3, #0
    bd60:	4619      	mov	r1, r3
    bd62:	9600      	str	r6, [sp, #0]
    bd64:	aa1d      	add	r2, sp, #116	; 0x74
    bd66:	4658      	mov	r0, fp
    bd68:	f001 fe76 	bl	da58 <_wcsrtombs_r>
    bd6c:	4603      	mov	r3, r0
    bd6e:	3301      	adds	r3, #1
    bd70:	9005      	str	r0, [sp, #20]
    bd72:	f000 82f1 	beq.w	c358 <_svfprintf_r+0x19e0>
    bd76:	941d      	str	r4, [sp, #116]	; 0x74
    bd78:	9b05      	ldr	r3, [sp, #20]
    bd7a:	2b00      	cmp	r3, #0
    bd7c:	d04e      	beq.n	be1c <_svfprintf_r+0x14a4>
    bd7e:	2b63      	cmp	r3, #99	; 0x63
    bd80:	f300 8118 	bgt.w	bfb4 <_svfprintf_r+0x163c>
    bd84:	2300      	movs	r3, #0
    bd86:	9307      	str	r3, [sp, #28]
    bd88:	ac37      	add	r4, sp, #220	; 0xdc
    bd8a:	2208      	movs	r2, #8
    bd8c:	2100      	movs	r1, #0
    bd8e:	4630      	mov	r0, r6
    bd90:	f000 ff20 	bl	cbd4 <memset>
    bd94:	9d05      	ldr	r5, [sp, #20]
    bd96:	9600      	str	r6, [sp, #0]
    bd98:	462b      	mov	r3, r5
    bd9a:	aa1d      	add	r2, sp, #116	; 0x74
    bd9c:	4621      	mov	r1, r4
    bd9e:	4658      	mov	r0, fp
    bda0:	f001 fe5a 	bl	da58 <_wcsrtombs_r>
    bda4:	4285      	cmp	r5, r0
    bda6:	f040 837c 	bne.w	c4a2 <_svfprintf_r+0x1b2a>
    bdaa:	9a05      	ldr	r2, [sp, #20]
    bdac:	2300      	movs	r3, #0
    bdae:	54a3      	strb	r3, [r4, r2]
    bdb0:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
    bdb4:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
    bdb8:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    bdbc:	9303      	str	r3, [sp, #12]
    bdbe:	9202      	str	r2, [sp, #8]
    bdc0:	930f      	str	r3, [sp, #60]	; 0x3c
    bdc2:	f7fe bfba 	b.w	ad3a <_svfprintf_r+0x3c2>
    bdc6:	212d      	movs	r1, #45	; 0x2d
    bdc8:	f88d 1067 	strb.w	r1, [sp, #103]	; 0x67
    bdcc:	f7fe bfa4 	b.w	ad18 <_svfprintf_r+0x3a0>
    bdd0:	9b16      	ldr	r3, [sp, #88]	; 0x58
    bdd2:	9915      	ldr	r1, [sp, #84]	; 0x54
    bdd4:	ebab 0b03 	sub.w	fp, fp, r3
    bdd8:	461a      	mov	r2, r3
    bdda:	4658      	mov	r0, fp
    bddc:	f7fe fb12 	bl	a404 <strncpy>
    bde0:	f89a 2001 	ldrb.w	r2, [sl, #1]
    bde4:	4b05      	ldr	r3, [pc, #20]	; (bdfc <_svfprintf_r+0x1484>)
    bde6:	b10a      	cbz	r2, bdec <_svfprintf_r+0x1474>
    bde8:	f10a 0a01 	add.w	sl, sl, #1
    bdec:	f04f 0c00 	mov.w	ip, #0
    bdf0:	e628      	b.n	ba44 <_svfprintf_r+0x10cc>
    bdf2:	bf00      	nop
    bdf4:	20000ad4 	.word	0x20000ad4
    bdf8:	20002000 	.word	0x20002000
    bdfc:	cccccccd 	.word	0xcccccccd
    be00:	ee1b 1a10 	vmov	r1, s22
    be04:	aa24      	add	r2, sp, #144	; 0x90
    be06:	4658      	mov	r0, fp
    be08:	f003 fc04 	bl	f614 <__ssprint_r>
    be0c:	2800      	cmp	r0, #0
    be0e:	f47f aa18 	bne.w	b242 <_svfprintf_r+0x8ca>
    be12:	991b      	ldr	r1, [sp, #108]	; 0x6c
    be14:	9a26      	ldr	r2, [sp, #152]	; 0x98
    be16:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    be1a:	e67c      	b.n	bb16 <_svfprintf_r+0x119e>
    be1c:	9b05      	ldr	r3, [sp, #20]
    be1e:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    be22:	930f      	str	r3, [sp, #60]	; 0x3c
    be24:	e9cd 3302 	strd	r3, r3, [sp, #8]
    be28:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
    be2c:	9307      	str	r3, [sp, #28]
    be2e:	f7fe bf84 	b.w	ad3a <_svfprintf_r+0x3c2>
    be32:	990e      	ldr	r1, [sp, #56]	; 0x38
    be34:	9805      	ldr	r0, [sp, #20]
    be36:	1865      	adds	r5, r4, r1
    be38:	1a2d      	subs	r5, r5, r0
    be3a:	1acc      	subs	r4, r1, r3
    be3c:	42a5      	cmp	r5, r4
    be3e:	bfa8      	it	ge
    be40:	4625      	movge	r5, r4
    be42:	f7ff bb4d 	b.w	b4e0 <_svfprintf_r+0xb68>
    be46:	9b08      	ldr	r3, [sp, #32]
    be48:	9904      	ldr	r1, [sp, #16]
    be4a:	f853 2b04 	ldr.w	r2, [r3], #4
    be4e:	9308      	str	r3, [sp, #32]
    be50:	8011      	strh	r1, [r2, #0]
    be52:	464c      	mov	r4, r9
    be54:	f7fe bdc2 	b.w	a9dc <_svfprintf_r+0x64>
    be58:	f913 2b04 	ldrsb.w	r2, [r3], #4
    be5c:	9308      	str	r3, [sp, #32]
    be5e:	17d1      	asrs	r1, r2, #31
    be60:	460b      	mov	r3, r1
    be62:	f7fe bfdb 	b.w	ae1c <_svfprintf_r+0x4a4>
    be66:	9a03      	ldr	r2, [sp, #12]
    be68:	2102      	movs	r1, #2
    be6a:	ab22      	add	r3, sp, #136	; 0x88
    be6c:	9301      	str	r3, [sp, #4]
    be6e:	ab1d      	add	r3, sp, #116	; 0x74
    be70:	9300      	str	r3, [sp, #0]
    be72:	4658      	mov	r0, fp
    be74:	ab1b      	add	r3, sp, #108	; 0x6c
    be76:	eeb0 0b4a 	vmov.f64	d0, d10
    be7a:	9202      	str	r2, [sp, #8]
    be7c:	f001 fe8c 	bl	db98 <_dtoa_r>
    be80:	2d47      	cmp	r5, #71	; 0x47
    be82:	9a02      	ldr	r2, [sp, #8]
    be84:	4604      	mov	r4, r0
    be86:	f000 8161 	beq.w	c14c <_svfprintf_r+0x17d4>
    be8a:	2d46      	cmp	r5, #70	; 0x46
    be8c:	4410      	add	r0, r2
    be8e:	d105      	bne.n	be9c <_svfprintf_r+0x1524>
    be90:	7823      	ldrb	r3, [r4, #0]
    be92:	2b30      	cmp	r3, #48	; 0x30
    be94:	f000 826f 	beq.w	c376 <_svfprintf_r+0x19fe>
    be98:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    be9a:	4410      	add	r0, r2
    be9c:	eeb5 ab40 	vcmp.f64	d10, #0.0
    bea0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    bea4:	f040 8146 	bne.w	c134 <_svfprintf_r+0x17bc>
    bea8:	4603      	mov	r3, r0
    beaa:	1b1b      	subs	r3, r3, r4
    beac:	930e      	str	r3, [sp, #56]	; 0x38
    beae:	2d47      	cmp	r5, #71	; 0x47
    beb0:	f000 8110 	beq.w	c0d4 <_svfprintf_r+0x175c>
    beb4:	2d46      	cmp	r5, #70	; 0x46
    beb6:	f000 81b5 	beq.w	c224 <_svfprintf_r+0x18ac>
    beba:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    bebc:	930c      	str	r3, [sp, #48]	; 0x30
    bebe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bec0:	2d41      	cmp	r5, #65	; 0x41
    bec2:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
    bec6:	931b      	str	r3, [sp, #108]	; 0x6c
    bec8:	f000 81e5 	beq.w	c296 <_svfprintf_r+0x191e>
    becc:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
    bed0:	2100      	movs	r1, #0
    bed2:	2b00      	cmp	r3, #0
    bed4:	bfb8      	it	lt
    bed6:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
    bed8:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
    bedc:	bfba      	itte	lt
    bede:	f1c3 0301 	rsblt	r3, r3, #1
    bee2:	222d      	movlt	r2, #45	; 0x2d
    bee4:	222b      	movge	r2, #43	; 0x2b
    bee6:	2b09      	cmp	r3, #9
    bee8:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
    beec:	f340 81da 	ble.w	c2a4 <_svfprintf_r+0x192c>
    bef0:	f10d 058f 	add.w	r5, sp, #143	; 0x8f
    bef4:	f8df c41c 	ldr.w	ip, [pc, #1052]	; c314 <_svfprintf_r+0x199c>
    bef8:	462a      	mov	r2, r5
    befa:	4610      	mov	r0, r2
    befc:	fb8c 2103 	smull	r2, r1, ip, r3
    bf00:	17da      	asrs	r2, r3, #31
    bf02:	ebc2 02a1 	rsb	r2, r2, r1, asr #2
    bf06:	eb02 0182 	add.w	r1, r2, r2, lsl #2
    bf0a:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
    bf0e:	3130      	adds	r1, #48	; 0x30
    bf10:	f800 1c01 	strb.w	r1, [r0, #-1]
    bf14:	4619      	mov	r1, r3
    bf16:	2963      	cmp	r1, #99	; 0x63
    bf18:	4613      	mov	r3, r2
    bf1a:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
    bf1e:	dcec      	bgt.n	befa <_svfprintf_r+0x1582>
    bf20:	3330      	adds	r3, #48	; 0x30
    bf22:	b2d9      	uxtb	r1, r3
    bf24:	1e83      	subs	r3, r0, #2
    bf26:	429d      	cmp	r5, r3
    bf28:	f802 1c01 	strb.w	r1, [r2, #-1]
    bf2c:	f240 828b 	bls.w	c446 <_svfprintf_r+0x1ace>
    bf30:	4613      	mov	r3, r2
    bf32:	f10d 027a 	add.w	r2, sp, #122	; 0x7a
    bf36:	e001      	b.n	bf3c <_svfprintf_r+0x15c4>
    bf38:	f813 1b01 	ldrb.w	r1, [r3], #1
    bf3c:	f802 1b01 	strb.w	r1, [r2], #1
    bf40:	429d      	cmp	r5, r3
    bf42:	d1f9      	bne.n	bf38 <_svfprintf_r+0x15c0>
    bf44:	f10d 0391 	add.w	r3, sp, #145	; 0x91
    bf48:	f10d 027a 	add.w	r2, sp, #122	; 0x7a
    bf4c:	1a1b      	subs	r3, r3, r0
    bf4e:	4413      	add	r3, r2
    bf50:	aa1e      	add	r2, sp, #120	; 0x78
    bf52:	1a9b      	subs	r3, r3, r2
    bf54:	9314      	str	r3, [sp, #80]	; 0x50
    bf56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bf58:	9a14      	ldr	r2, [sp, #80]	; 0x50
    bf5a:	2b01      	cmp	r3, #1
    bf5c:	441a      	add	r2, r3
    bf5e:	9205      	str	r2, [sp, #20]
    bf60:	f340 8203 	ble.w	c36a <_svfprintf_r+0x19f2>
    bf64:	9b05      	ldr	r3, [sp, #20]
    bf66:	9a10      	ldr	r2, [sp, #64]	; 0x40
    bf68:	4413      	add	r3, r2
    bf6a:	9305      	str	r3, [sp, #20]
    bf6c:	f426 6380 	bic.w	r3, r6, #1024	; 0x400
    bf70:	9a05      	ldr	r2, [sp, #20]
    bf72:	f443 7880 	orr.w	r8, r3, #256	; 0x100
    bf76:	2300      	movs	r3, #0
    bf78:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
    bf7c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
    bf80:	930f      	str	r3, [sp, #60]	; 0x3c
    bf82:	9202      	str	r2, [sp, #8]
    bf84:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bf86:	2b00      	cmp	r3, #0
    bf88:	f040 80b1 	bne.w	c0ee <_svfprintf_r+0x1776>
    bf8c:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    bf90:	9303      	str	r3, [sp, #12]
    bf92:	f7fe bed2 	b.w	ad3a <_svfprintf_r+0x3c2>
    bf96:	4620      	mov	r0, r4
    bf98:	f002 fe72 	bl	ec80 <strlen>
    bf9c:	4602      	mov	r2, r0
    bf9e:	9005      	str	r0, [sp, #20]
    bfa0:	f7fe bf20 	b.w	ade4 <_svfprintf_r+0x46c>
    bfa4:	ee1b 1a10 	vmov	r1, s22
    bfa8:	aa24      	add	r2, sp, #144	; 0x90
    bfaa:	4658      	mov	r0, fp
    bfac:	f003 fb32 	bl	f614 <__ssprint_r>
    bfb0:	f7fe bded 	b.w	ab8e <_svfprintf_r+0x216>
    bfb4:	1c59      	adds	r1, r3, #1
    bfb6:	4658      	mov	r0, fp
    bfb8:	f000 fa90 	bl	c4dc <_malloc_r>
    bfbc:	4604      	mov	r4, r0
    bfbe:	2800      	cmp	r0, #0
    bfc0:	f000 81ca 	beq.w	c358 <_svfprintf_r+0x19e0>
    bfc4:	9007      	str	r0, [sp, #28]
    bfc6:	e6e0      	b.n	bd8a <_svfprintf_r+0x1412>
    bfc8:	ee1b 1a10 	vmov	r1, s22
    bfcc:	aa24      	add	r2, sp, #144	; 0x90
    bfce:	4658      	mov	r0, fp
    bfd0:	f003 fb20 	bl	f614 <__ssprint_r>
    bfd4:	2800      	cmp	r0, #0
    bfd6:	f47f a934 	bne.w	b242 <_svfprintf_r+0x8ca>
    bfda:	9a26      	ldr	r2, [sp, #152]	; 0x98
    bfdc:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    bfe0:	f7ff ba49 	b.w	b476 <_svfprintf_r+0xafe>
    bfe4:	ee1b 1a10 	vmov	r1, s22
    bfe8:	aa24      	add	r2, sp, #144	; 0x90
    bfea:	4658      	mov	r0, fp
    bfec:	f003 fb12 	bl	f614 <__ssprint_r>
    bff0:	2800      	cmp	r0, #0
    bff2:	f47f a926 	bne.w	b242 <_svfprintf_r+0x8ca>
    bff6:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    bffa:	991b      	ldr	r1, [sp, #108]	; 0x6c
    bffc:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    c000:	e649      	b.n	bc96 <_svfprintf_r+0x131e>
    c002:	2306      	movs	r3, #6
    c004:	9303      	str	r3, [sp, #12]
    c006:	f7ff bb83 	b.w	b710 <_svfprintf_r+0xd98>
    c00a:	9b03      	ldr	r3, [sp, #12]
    c00c:	2102      	movs	r1, #2
    c00e:	1c5a      	adds	r2, r3, #1
    c010:	e72b      	b.n	be6a <_svfprintf_r+0x14f2>
    c012:	9a03      	ldr	r2, [sp, #12]
    c014:	2103      	movs	r1, #3
    c016:	e728      	b.n	be6a <_svfprintf_r+0x14f2>
    c018:	a81b      	add	r0, sp, #108	; 0x6c
    c01a:	eeb0 0b4a 	vmov.f64	d0, d10
    c01e:	f002 fe9f 	bl	ed60 <frexp>
    c022:	eeb4 7b00 	vmov.f64	d7, #64	; 0x3e000000  0.125
    c026:	ee20 0b07 	vmul.f64	d0, d0, d7
    c02a:	eeb5 0b40 	vcmp.f64	d0, #0.0
    c02e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c032:	d101      	bne.n	c038 <_svfprintf_r+0x16c0>
    c034:	2301      	movs	r3, #1
    c036:	931b      	str	r3, [sp, #108]	; 0x6c
    c038:	48b3      	ldr	r0, [pc, #716]	; (c308 <_svfprintf_r+0x1990>)
    c03a:	9b03      	ldr	r3, [sp, #12]
    c03c:	eeb3 5b00 	vmov.f64	d5, #48	; 0x41800000  16.0
    c040:	3b01      	subs	r3, #1
    c042:	4622      	mov	r2, r4
    c044:	e004      	b.n	c050 <_svfprintf_r+0x16d8>
    c046:	eeb5 0b40 	vcmp.f64	d0, #0.0
    c04a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c04e:	d013      	beq.n	c078 <_svfprintf_r+0x1700>
    c050:	ee20 0b05 	vmul.f64	d0, d0, d5
    c054:	eefd 7bc0 	vcvt.s32.f64	s15, d0
    c058:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    c05c:	ee17 1a90 	vmov	r1, s15
    c060:	5c41      	ldrb	r1, [r0, r1]
    c062:	eeb8 6be7 	vcvt.f64.s32	d6, s15
    c066:	4694      	mov	ip, r2
    c068:	ee30 0b46 	vsub.f64	d0, d0, d6
    c06c:	f802 1b01 	strb.w	r1, [r2], #1
    c070:	4619      	mov	r1, r3
    c072:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
    c076:	d1e6      	bne.n	c046 <_svfprintf_r+0x16ce>
    c078:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    c07c:	eeb4 0bc6 	vcmpe.f64	d0, d6
    c080:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c084:	f300 8148 	bgt.w	c318 <_svfprintf_r+0x19a0>
    c088:	eeb4 0b46 	vcmp.f64	d0, d6
    c08c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c090:	d104      	bne.n	c09c <_svfprintf_r+0x1724>
    c092:	ee17 3a90 	vmov	r3, s15
    c096:	07db      	lsls	r3, r3, #31
    c098:	f100 813e 	bmi.w	c318 <_svfprintf_r+0x19a0>
    c09c:	2900      	cmp	r1, #0
    c09e:	db06      	blt.n	c0ae <_svfprintf_r+0x1736>
    c0a0:	1c4b      	adds	r3, r1, #1
    c0a2:	4413      	add	r3, r2
    c0a4:	2130      	movs	r1, #48	; 0x30
    c0a6:	f802 1b01 	strb.w	r1, [r2], #1
    c0aa:	4293      	cmp	r3, r2
    c0ac:	d1fb      	bne.n	c0a6 <_svfprintf_r+0x172e>
    c0ae:	1b13      	subs	r3, r2, r4
    c0b0:	930e      	str	r3, [sp, #56]	; 0x38
    c0b2:	e6fc      	b.n	beae <_svfprintf_r+0x1536>
    c0b4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    c0b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c0b8:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
    c0bc:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
    c0c0:	9613      	str	r6, [sp, #76]	; 0x4c
    c0c2:	18e3      	adds	r3, r4, r3
    c0c4:	429d      	cmp	r5, r3
    c0c6:	4629      	mov	r1, r5
    c0c8:	bf28      	it	cs
    c0ca:	4619      	movcs	r1, r3
    c0cc:	4682      	mov	sl, r0
    c0ce:	9105      	str	r1, [sp, #20]
    c0d0:	f7ff b9d8 	b.w	b484 <_svfprintf_r+0xb0c>
    c0d4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    c0d6:	930c      	str	r3, [sp, #48]	; 0x30
    c0d8:	1cda      	adds	r2, r3, #3
    c0da:	db02      	blt.n	c0e2 <_svfprintf_r+0x176a>
    c0dc:	9a03      	ldr	r2, [sp, #12]
    c0de:	4293      	cmp	r3, r2
    c0e0:	dd0c      	ble.n	c0fc <_svfprintf_r+0x1784>
    c0e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    c0e4:	3b02      	subs	r3, #2
    c0e6:	930b      	str	r3, [sp, #44]	; 0x2c
    c0e8:	f023 0520 	bic.w	r5, r3, #32
    c0ec:	e6e7      	b.n	bebe <_svfprintf_r+0x1546>
    c0ee:	212d      	movs	r1, #45	; 0x2d
    c0f0:	2300      	movs	r3, #0
    c0f2:	f88d 1067 	strb.w	r1, [sp, #103]	; 0x67
    c0f6:	9303      	str	r3, [sp, #12]
    c0f8:	f7fe be22 	b.w	ad40 <_svfprintf_r+0x3c8>
    c0fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c0fe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    c100:	4293      	cmp	r3, r2
    c102:	f2c0 80bd 	blt.w	c280 <_svfprintf_r+0x1908>
    c106:	07f0      	lsls	r0, r6, #31
    c108:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c10a:	f140 8132 	bpl.w	c372 <_svfprintf_r+0x19fa>
    c10e:	9a10      	ldr	r2, [sp, #64]	; 0x40
    c110:	4413      	add	r3, r2
    c112:	9305      	str	r3, [sp, #20]
    c114:	0571      	lsls	r1, r6, #21
    c116:	d503      	bpl.n	c120 <_svfprintf_r+0x17a8>
    c118:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c11a:	2b00      	cmp	r3, #0
    c11c:	f300 8135 	bgt.w	c38a <_svfprintf_r+0x1a12>
    c120:	9b05      	ldr	r3, [sp, #20]
    c122:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    c126:	9302      	str	r3, [sp, #8]
    c128:	2367      	movs	r3, #103	; 0x67
    c12a:	930b      	str	r3, [sp, #44]	; 0x2c
    c12c:	2300      	movs	r3, #0
    c12e:	930f      	str	r3, [sp, #60]	; 0x3c
    c130:	930d      	str	r3, [sp, #52]	; 0x34
    c132:	e727      	b.n	bf84 <_svfprintf_r+0x160c>
    c134:	9b22      	ldr	r3, [sp, #136]	; 0x88
    c136:	4283      	cmp	r3, r0
    c138:	f4bf aeb7 	bcs.w	beaa <_svfprintf_r+0x1532>
    c13c:	2130      	movs	r1, #48	; 0x30
    c13e:	1c5a      	adds	r2, r3, #1
    c140:	9222      	str	r2, [sp, #136]	; 0x88
    c142:	7019      	strb	r1, [r3, #0]
    c144:	9b22      	ldr	r3, [sp, #136]	; 0x88
    c146:	4298      	cmp	r0, r3
    c148:	d8f9      	bhi.n	c13e <_svfprintf_r+0x17c6>
    c14a:	e6ae      	b.n	beaa <_svfprintf_r+0x1532>
    c14c:	07f3      	lsls	r3, r6, #31
    c14e:	f100 80a7 	bmi.w	c2a0 <_svfprintf_r+0x1928>
    c152:	9b22      	ldr	r3, [sp, #136]	; 0x88
    c154:	e6a9      	b.n	beaa <_svfprintf_r+0x1532>
    c156:	aa24      	add	r2, sp, #144	; 0x90
    c158:	4658      	mov	r0, fp
    c15a:	9105      	str	r1, [sp, #20]
    c15c:	f003 fa5a 	bl	f614 <__ssprint_r>
    c160:	2800      	cmp	r0, #0
    c162:	f47f a86e 	bne.w	b242 <_svfprintf_r+0x8ca>
    c166:	f896 c000 	ldrb.w	ip, [r6]
    c16a:	9a26      	ldr	r2, [sp, #152]	; 0x98
    c16c:	9905      	ldr	r1, [sp, #20]
    c16e:	a827      	add	r0, sp, #156	; 0x9c
    c170:	4465      	add	r5, ip
    c172:	f7ff bbec 	b.w	b94e <_svfprintf_r+0xfd6>
    c176:	ee1b 1a10 	vmov	r1, s22
    c17a:	aa24      	add	r2, sp, #144	; 0x90
    c17c:	4658      	mov	r0, fp
    c17e:	f003 fa49 	bl	f614 <__ssprint_r>
    c182:	2800      	cmp	r0, #0
    c184:	f47f a85d 	bne.w	b242 <_svfprintf_r+0x8ca>
    c188:	9a26      	ldr	r2, [sp, #152]	; 0x98
    c18a:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    c18e:	f7ff b96b 	b.w	b468 <_svfprintf_r+0xaf0>
    c192:	2378      	movs	r3, #120	; 0x78
    c194:	f88d 3069 	strb.w	r3, [sp, #105]	; 0x69
    c198:	2330      	movs	r3, #48	; 0x30
    c19a:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
    c19e:	9b03      	ldr	r3, [sp, #12]
    c1a0:	2b63      	cmp	r3, #99	; 0x63
    c1a2:	f048 0602 	orr.w	r6, r8, #2
    c1a6:	f300 80a6 	bgt.w	c2f6 <_svfprintf_r+0x197e>
    c1aa:	2300      	movs	r3, #0
    c1ac:	9307      	str	r3, [sp, #28]
    c1ae:	ac37      	add	r4, sp, #220	; 0xdc
    c1b0:	ee18 3a90 	vmov	r3, s17
    c1b4:	2b00      	cmp	r3, #0
    c1b6:	f448 7881 	orr.w	r8, r8, #258	; 0x102
    c1ba:	db2b      	blt.n	c214 <_svfprintf_r+0x189c>
    c1bc:	eeb0 ab48 	vmov.f64	d10, d8
    c1c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    c1c2:	f023 0520 	bic.w	r5, r3, #32
    c1c6:	2300      	movs	r3, #0
    c1c8:	9309      	str	r3, [sp, #36]	; 0x24
    c1ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    c1cc:	2b61      	cmp	r3, #97	; 0x61
    c1ce:	f47f aaad 	bne.w	b72c <_svfprintf_r+0xdb4>
    c1d2:	eeb0 0b4a 	vmov.f64	d0, d10
    c1d6:	a81b      	add	r0, sp, #108	; 0x6c
    c1d8:	f002 fdc2 	bl	ed60 <frexp>
    c1dc:	eeb4 7b00 	vmov.f64	d7, #64	; 0x3e000000  0.125
    c1e0:	ee20 0b07 	vmul.f64	d0, d0, d7
    c1e4:	eeb5 0b40 	vcmp.f64	d0, #0.0
    c1e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c1ec:	d101      	bne.n	c1f2 <_svfprintf_r+0x187a>
    c1ee:	2301      	movs	r3, #1
    c1f0:	931b      	str	r3, [sp, #108]	; 0x6c
    c1f2:	4846      	ldr	r0, [pc, #280]	; (c30c <_svfprintf_r+0x1994>)
    c1f4:	e721      	b.n	c03a <_svfprintf_r+0x16c2>
    c1f6:	ee1b 1a10 	vmov	r1, s22
    c1fa:	aa24      	add	r2, sp, #144	; 0x90
    c1fc:	4658      	mov	r0, fp
    c1fe:	f003 fa09 	bl	f614 <__ssprint_r>
    c202:	2800      	cmp	r0, #0
    c204:	f47f a81d 	bne.w	b242 <_svfprintf_r+0x8ca>
    c208:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    c20a:	9a26      	ldr	r2, [sp, #152]	; 0x98
    c20c:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    c210:	f7ff b94e 	b.w	b4b0 <_svfprintf_r+0xb38>
    c214:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    c216:	f023 0520 	bic.w	r5, r3, #32
    c21a:	232d      	movs	r3, #45	; 0x2d
    c21c:	9309      	str	r3, [sp, #36]	; 0x24
    c21e:	eeb1 ab48 	vneg.f64	d10, d8
    c222:	e7d2      	b.n	c1ca <_svfprintf_r+0x1852>
    c224:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    c226:	920c      	str	r2, [sp, #48]	; 0x30
    c228:	2a00      	cmp	r2, #0
    c22a:	f006 0301 	and.w	r3, r6, #1
    c22e:	f340 810d 	ble.w	c44c <_svfprintf_r+0x1ad4>
    c232:	9903      	ldr	r1, [sp, #12]
    c234:	430b      	orrs	r3, r1
    c236:	f040 80cf 	bne.w	c3d8 <_svfprintf_r+0x1a60>
    c23a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c23c:	9305      	str	r3, [sp, #20]
    c23e:	2366      	movs	r3, #102	; 0x66
    c240:	930b      	str	r3, [sp, #44]	; 0x2c
    c242:	0572      	lsls	r2, r6, #21
    c244:	f100 80a3 	bmi.w	c38e <_svfprintf_r+0x1a16>
    c248:	9b05      	ldr	r3, [sp, #20]
    c24a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    c24e:	9302      	str	r3, [sp, #8]
    c250:	e76c      	b.n	c12c <_svfprintf_r+0x17b4>
    c252:	ee1b 1a10 	vmov	r1, s22
    c256:	aa24      	add	r2, sp, #144	; 0x90
    c258:	4658      	mov	r0, fp
    c25a:	f003 f9db 	bl	f614 <__ssprint_r>
    c25e:	2800      	cmp	r0, #0
    c260:	f47e afef 	bne.w	b242 <_svfprintf_r+0x8ca>
    c264:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
    c266:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c268:	9a26      	ldr	r2, [sp, #152]	; 0x98
    c26a:	1b1c      	subs	r4, r3, r4
    c26c:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    c270:	f7ff b936 	b.w	b4e0 <_svfprintf_r+0xb68>
    c274:	2358      	movs	r3, #88	; 0x58
    c276:	e78d      	b.n	c194 <_svfprintf_r+0x181c>
    c278:	2200      	movs	r2, #0
    c27a:	9203      	str	r2, [sp, #12]
    c27c:	f7fe bbda 	b.w	aa34 <_svfprintf_r+0xbc>
    c280:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c282:	9a10      	ldr	r2, [sp, #64]	; 0x40
    c284:	189a      	adds	r2, r3, r2
    c286:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c288:	9205      	str	r2, [sp, #20]
    c28a:	2b00      	cmp	r3, #0
    c28c:	f340 80ab 	ble.w	c3e6 <_svfprintf_r+0x1a6e>
    c290:	2367      	movs	r3, #103	; 0x67
    c292:	930b      	str	r3, [sp, #44]	; 0x2c
    c294:	e7d5      	b.n	c242 <_svfprintf_r+0x18ca>
    c296:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    c298:	320f      	adds	r2, #15
    c29a:	b2d2      	uxtb	r2, r2
    c29c:	2101      	movs	r1, #1
    c29e:	e618      	b.n	bed2 <_svfprintf_r+0x155a>
    c2a0:	18a0      	adds	r0, r4, r2
    c2a2:	e5fb      	b.n	be9c <_svfprintf_r+0x1524>
    c2a4:	2900      	cmp	r1, #0
    c2a6:	f040 80a8 	bne.w	c3fa <_svfprintf_r+0x1a82>
    c2aa:	2230      	movs	r2, #48	; 0x30
    c2ac:	f88d 207a 	strb.w	r2, [sp, #122]	; 0x7a
    c2b0:	f10d 027b 	add.w	r2, sp, #123	; 0x7b
    c2b4:	3330      	adds	r3, #48	; 0x30
    c2b6:	f802 3b01 	strb.w	r3, [r2], #1
    c2ba:	ab1e      	add	r3, sp, #120	; 0x78
    c2bc:	1ad3      	subs	r3, r2, r3
    c2be:	9314      	str	r3, [sp, #80]	; 0x50
    c2c0:	e649      	b.n	bf56 <_svfprintf_r+0x15de>
    c2c2:	3301      	adds	r3, #1
    c2c4:	4912      	ldr	r1, [pc, #72]	; (c310 <_svfprintf_r+0x1998>)
    c2c6:	f8ca 5004 	str.w	r5, [sl, #4]
    c2ca:	442a      	add	r2, r5
    c2cc:	2b07      	cmp	r3, #7
    c2ce:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    c2d2:	f8ca 1000 	str.w	r1, [sl]
    c2d6:	f77f ac33 	ble.w	bb40 <_svfprintf_r+0x11c8>
    c2da:	ee1b 1a10 	vmov	r1, s22
    c2de:	aa24      	add	r2, sp, #144	; 0x90
    c2e0:	4658      	mov	r0, fp
    c2e2:	f003 f997 	bl	f614 <__ssprint_r>
    c2e6:	2800      	cmp	r0, #0
    c2e8:	f47e afab 	bne.w	b242 <_svfprintf_r+0x8ca>
    c2ec:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    c2f0:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    c2f4:	e426      	b.n	bb44 <_svfprintf_r+0x11cc>
    c2f6:	1c59      	adds	r1, r3, #1
    c2f8:	4658      	mov	r0, fp
    c2fa:	f000 f8ef 	bl	c4dc <_malloc_r>
    c2fe:	4604      	mov	r4, r0
    c300:	b350      	cbz	r0, c358 <_svfprintf_r+0x19e0>
    c302:	9007      	str	r0, [sp, #28]
    c304:	e754      	b.n	c1b0 <_svfprintf_r+0x1838>
    c306:	bf00      	nop
    c308:	20000ab8 	.word	0x20000ab8
    c30c:	20000aa4 	.word	0x20000aa4
    c310:	20002000 	.word	0x20002000
    c314:	66666667 	.word	0x66666667
    c318:	f8cd c088 	str.w	ip, [sp, #136]	; 0x88
    c31c:	f812 1c01 	ldrb.w	r1, [r2, #-1]
    c320:	f890 c00f 	ldrb.w	ip, [r0, #15]
    c324:	4561      	cmp	r1, ip
    c326:	4613      	mov	r3, r2
    c328:	d10a      	bne.n	c340 <_svfprintf_r+0x19c8>
    c32a:	f04f 0e30 	mov.w	lr, #48	; 0x30
    c32e:	f803 ec01 	strb.w	lr, [r3, #-1]
    c332:	9b22      	ldr	r3, [sp, #136]	; 0x88
    c334:	1e59      	subs	r1, r3, #1
    c336:	9122      	str	r1, [sp, #136]	; 0x88
    c338:	f813 1c01 	ldrb.w	r1, [r3, #-1]
    c33c:	458c      	cmp	ip, r1
    c33e:	d0f6      	beq.n	c32e <_svfprintf_r+0x19b6>
    c340:	2939      	cmp	r1, #57	; 0x39
    c342:	bf16      	itet	ne
    c344:	3101      	addne	r1, #1
    c346:	7a81      	ldrbeq	r1, [r0, #10]
    c348:	b2c9      	uxtbne	r1, r1
    c34a:	f803 1c01 	strb.w	r1, [r3, #-1]
    c34e:	e6ae      	b.n	c0ae <_svfprintf_r+0x1736>
    c350:	2300      	movs	r3, #0
    c352:	4690      	mov	r8, r2
    c354:	9307      	str	r3, [sp, #28]
    c356:	e760      	b.n	c21a <_svfprintf_r+0x18a2>
    c358:	ee1b 2a10 	vmov	r2, s22
    c35c:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
    c360:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    c364:	8193      	strh	r3, [r2, #12]
    c366:	f7fe bc16 	b.w	ab96 <_svfprintf_r+0x21e>
    c36a:	07f5      	lsls	r5, r6, #31
    c36c:	f57f adfe 	bpl.w	bf6c <_svfprintf_r+0x15f4>
    c370:	e5f8      	b.n	bf64 <_svfprintf_r+0x15ec>
    c372:	9305      	str	r3, [sp, #20]
    c374:	e6ce      	b.n	c114 <_svfprintf_r+0x179c>
    c376:	eeb5 ab40 	vcmp.f64	d10, #0.0
    c37a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c37e:	f43f ad8b 	beq.w	be98 <_svfprintf_r+0x1520>
    c382:	f1c2 0201 	rsb	r2, r2, #1
    c386:	921b      	str	r2, [sp, #108]	; 0x6c
    c388:	e587      	b.n	be9a <_svfprintf_r+0x1522>
    c38a:	2367      	movs	r3, #103	; 0x67
    c38c:	930b      	str	r3, [sp, #44]	; 0x2c
    c38e:	9913      	ldr	r1, [sp, #76]	; 0x4c
    c390:	780b      	ldrb	r3, [r1, #0]
    c392:	2bff      	cmp	r3, #255	; 0xff
    c394:	d079      	beq.n	c48a <_svfprintf_r+0x1b12>
    c396:	2500      	movs	r5, #0
    c398:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    c39a:	4628      	mov	r0, r5
    c39c:	e003      	b.n	c3a6 <_svfprintf_r+0x1a2e>
    c39e:	3001      	adds	r0, #1
    c3a0:	3101      	adds	r1, #1
    c3a2:	2bff      	cmp	r3, #255	; 0xff
    c3a4:	d008      	beq.n	c3b8 <_svfprintf_r+0x1a40>
    c3a6:	4293      	cmp	r3, r2
    c3a8:	da06      	bge.n	c3b8 <_svfprintf_r+0x1a40>
    c3aa:	1ad2      	subs	r2, r2, r3
    c3ac:	784b      	ldrb	r3, [r1, #1]
    c3ae:	2b00      	cmp	r3, #0
    c3b0:	d1f5      	bne.n	c39e <_svfprintf_r+0x1a26>
    c3b2:	780b      	ldrb	r3, [r1, #0]
    c3b4:	3501      	adds	r5, #1
    c3b6:	e7f4      	b.n	c3a2 <_svfprintf_r+0x1a2a>
    c3b8:	920c      	str	r2, [sp, #48]	; 0x30
    c3ba:	9113      	str	r1, [sp, #76]	; 0x4c
    c3bc:	900d      	str	r0, [sp, #52]	; 0x34
    c3be:	950f      	str	r5, [sp, #60]	; 0x3c
    c3c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    c3c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    c3c4:	9916      	ldr	r1, [sp, #88]	; 0x58
    c3c6:	4413      	add	r3, r2
    c3c8:	9a05      	ldr	r2, [sp, #20]
    c3ca:	fb01 2303 	mla	r3, r1, r3, r2
    c3ce:	9305      	str	r3, [sp, #20]
    c3d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    c3d4:	9302      	str	r3, [sp, #8]
    c3d6:	e5d5      	b.n	bf84 <_svfprintf_r+0x160c>
    c3d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    c3da:	18d3      	adds	r3, r2, r3
    c3dc:	4419      	add	r1, r3
    c3de:	2366      	movs	r3, #102	; 0x66
    c3e0:	9105      	str	r1, [sp, #20]
    c3e2:	930b      	str	r3, [sp, #44]	; 0x2c
    c3e4:	e72d      	b.n	c242 <_svfprintf_r+0x18ca>
    c3e6:	f1c3 0301 	rsb	r3, r3, #1
    c3ea:	441a      	add	r2, r3
    c3ec:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
    c3f0:	9302      	str	r3, [sp, #8]
    c3f2:	2367      	movs	r3, #103	; 0x67
    c3f4:	9205      	str	r2, [sp, #20]
    c3f6:	930b      	str	r3, [sp, #44]	; 0x2c
    c3f8:	e698      	b.n	c12c <_svfprintf_r+0x17b4>
    c3fa:	f10d 027a 	add.w	r2, sp, #122	; 0x7a
    c3fe:	e759      	b.n	c2b4 <_svfprintf_r+0x193c>
    c400:	9b03      	ldr	r3, [sp, #12]
    c402:	f8dd 9008 	ldr.w	r9, [sp, #8]
    c406:	f8dd 801c 	ldr.w	r8, [sp, #28]
    c40a:	9305      	str	r3, [sp, #20]
    c40c:	e4b4      	b.n	bd78 <_svfprintf_r+0x1400>
    c40e:	ee18 3a90 	vmov	r3, s17
    c412:	2b00      	cmp	r3, #0
    c414:	bfb4      	ite	lt
    c416:	212d      	movlt	r1, #45	; 0x2d
    c418:	f89d 1067 	ldrbge.w	r1, [sp, #103]	; 0x67
    c41c:	4c25      	ldr	r4, [pc, #148]	; (c4b4 <_svfprintf_r+0x1b3c>)
    c41e:	4b26      	ldr	r3, [pc, #152]	; (c4b8 <_svfprintf_r+0x1b40>)
    c420:	bfb8      	it	lt
    c422:	f88d 1067 	strblt.w	r1, [sp, #103]	; 0x67
    c426:	f028 0880 	bic.w	r8, r8, #128	; 0x80
    c42a:	f7fe bc79 	b.w	ad20 <_svfprintf_r+0x3a8>
    c42e:	9b03      	ldr	r3, [sp, #12]
    c430:	9302      	str	r3, [sp, #8]
    c432:	9305      	str	r3, [sp, #20]
    c434:	2373      	movs	r3, #115	; 0x73
    c436:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    c43a:	9003      	str	r0, [sp, #12]
    c43c:	900f      	str	r0, [sp, #60]	; 0x3c
    c43e:	900d      	str	r0, [sp, #52]	; 0x34
    c440:	930b      	str	r3, [sp, #44]	; 0x2c
    c442:	f7fe bc7a 	b.w	ad3a <_svfprintf_r+0x3c2>
    c446:	2302      	movs	r3, #2
    c448:	9314      	str	r3, [sp, #80]	; 0x50
    c44a:	e584      	b.n	bf56 <_svfprintf_r+0x15de>
    c44c:	9a03      	ldr	r2, [sp, #12]
    c44e:	4313      	orrs	r3, r2
    c450:	d105      	bne.n	c45e <_svfprintf_r+0x1ae6>
    c452:	2301      	movs	r3, #1
    c454:	2266      	movs	r2, #102	; 0x66
    c456:	9302      	str	r3, [sp, #8]
    c458:	920b      	str	r2, [sp, #44]	; 0x2c
    c45a:	9305      	str	r3, [sp, #20]
    c45c:	e666      	b.n	c12c <_svfprintf_r+0x17b4>
    c45e:	9b10      	ldr	r3, [sp, #64]	; 0x40
    c460:	3301      	adds	r3, #1
    c462:	441a      	add	r2, r3
    c464:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
    c468:	9302      	str	r3, [sp, #8]
    c46a:	2366      	movs	r3, #102	; 0x66
    c46c:	9205      	str	r2, [sp, #20]
    c46e:	930b      	str	r3, [sp, #44]	; 0x2c
    c470:	e65c      	b.n	c12c <_svfprintf_r+0x17b4>
    c472:	9a08      	ldr	r2, [sp, #32]
    c474:	f899 3001 	ldrb.w	r3, [r9, #1]
    c478:	4689      	mov	r9, r1
    c47a:	f852 1b04 	ldr.w	r1, [r2], #4
    c47e:	9208      	str	r2, [sp, #32]
    c480:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
    c484:	9103      	str	r1, [sp, #12]
    c486:	f7fe bad3 	b.w	aa30 <_svfprintf_r+0xb8>
    c48a:	2300      	movs	r3, #0
    c48c:	930f      	str	r3, [sp, #60]	; 0x3c
    c48e:	930d      	str	r3, [sp, #52]	; 0x34
    c490:	e796      	b.n	c3c0 <_svfprintf_r+0x1a48>
    c492:	230c      	movs	r3, #12
    c494:	f8cb 3000 	str.w	r3, [fp]
    c498:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    c49c:	9304      	str	r3, [sp, #16]
    c49e:	f7fe bb81 	b.w	aba4 <_svfprintf_r+0x22c>
    c4a2:	ee1b 2a10 	vmov	r2, s22
    c4a6:	8993      	ldrh	r3, [r2, #12]
    c4a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    c4ac:	8193      	strh	r3, [r2, #12]
    c4ae:	f7fe bec8 	b.w	b242 <_svfprintf_r+0x8ca>
    c4b2:	bf00      	nop
    c4b4:	20000a9c 	.word	0x20000a9c
    c4b8:	20000aa0 	.word	0x20000aa0

0000c4bc <malloc>:
    c4bc:	4b02      	ldr	r3, [pc, #8]	; (c4c8 <malloc+0xc>)
    c4be:	4601      	mov	r1, r0
    c4c0:	6818      	ldr	r0, [r3, #0]
    c4c2:	f000 b80b 	b.w	c4dc <_malloc_r>
    c4c6:	bf00      	nop
    c4c8:	200026f4 	.word	0x200026f4

0000c4cc <free>:
    c4cc:	4b02      	ldr	r3, [pc, #8]	; (c4d8 <free+0xc>)
    c4ce:	4601      	mov	r1, r0
    c4d0:	6818      	ldr	r0, [r3, #0]
    c4d2:	f002 bebd 	b.w	f250 <_free_r>
    c4d6:	bf00      	nop
    c4d8:	200026f4 	.word	0x200026f4

0000c4dc <_malloc_r>:
    c4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c4e0:	f101 060b 	add.w	r6, r1, #11
    c4e4:	2e16      	cmp	r6, #22
    c4e6:	b083      	sub	sp, #12
    c4e8:	4604      	mov	r4, r0
    c4ea:	d824      	bhi.n	c536 <_malloc_r+0x5a>
    c4ec:	2910      	cmp	r1, #16
    c4ee:	f200 80ba 	bhi.w	c666 <_malloc_r+0x18a>
    c4f2:	f000 fea1 	bl	d238 <__malloc_lock>
    c4f6:	2610      	movs	r6, #16
    c4f8:	2218      	movs	r2, #24
    c4fa:	2002      	movs	r0, #2
    c4fc:	4fb5      	ldr	r7, [pc, #724]	; (c7d4 <_malloc_r+0x2f8>)
    c4fe:	443a      	add	r2, r7
    c500:	f1a2 0108 	sub.w	r1, r2, #8
    c504:	6853      	ldr	r3, [r2, #4]
    c506:	428b      	cmp	r3, r1
    c508:	f000 80ba 	beq.w	c680 <_malloc_r+0x1a4>
    c50c:	685a      	ldr	r2, [r3, #4]
    c50e:	68d9      	ldr	r1, [r3, #12]
    c510:	f022 0203 	bic.w	r2, r2, #3
    c514:	441a      	add	r2, r3
    c516:	689d      	ldr	r5, [r3, #8]
    c518:	60e9      	str	r1, [r5, #12]
    c51a:	608d      	str	r5, [r1, #8]
    c51c:	6851      	ldr	r1, [r2, #4]
    c51e:	f041 0101 	orr.w	r1, r1, #1
    c522:	4620      	mov	r0, r4
    c524:	6051      	str	r1, [r2, #4]
    c526:	f103 0508 	add.w	r5, r3, #8
    c52a:	f000 fe8b 	bl	d244 <__malloc_unlock>
    c52e:	4628      	mov	r0, r5
    c530:	b003      	add	sp, #12
    c532:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c536:	f036 0607 	bics.w	r6, r6, #7
    c53a:	f100 8094 	bmi.w	c666 <_malloc_r+0x18a>
    c53e:	42b1      	cmp	r1, r6
    c540:	f200 8091 	bhi.w	c666 <_malloc_r+0x18a>
    c544:	f000 fe78 	bl	d238 <__malloc_lock>
    c548:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
    c54c:	f0c0 819a 	bcc.w	c884 <_malloc_r+0x3a8>
    c550:	0a73      	lsrs	r3, r6, #9
    c552:	f000 808f 	beq.w	c674 <_malloc_r+0x198>
    c556:	2b04      	cmp	r3, #4
    c558:	f200 816f 	bhi.w	c83a <_malloc_r+0x35e>
    c55c:	09b3      	lsrs	r3, r6, #6
    c55e:	f103 0039 	add.w	r0, r3, #57	; 0x39
    c562:	f103 0c38 	add.w	ip, r3, #56	; 0x38
    c566:	00c3      	lsls	r3, r0, #3
    c568:	4f9a      	ldr	r7, [pc, #616]	; (c7d4 <_malloc_r+0x2f8>)
    c56a:	443b      	add	r3, r7
    c56c:	f1a3 0508 	sub.w	r5, r3, #8
    c570:	685b      	ldr	r3, [r3, #4]
    c572:	429d      	cmp	r5, r3
    c574:	d106      	bne.n	c584 <_malloc_r+0xa8>
    c576:	e00c      	b.n	c592 <_malloc_r+0xb6>
    c578:	2900      	cmp	r1, #0
    c57a:	f280 8127 	bge.w	c7cc <_malloc_r+0x2f0>
    c57e:	68db      	ldr	r3, [r3, #12]
    c580:	429d      	cmp	r5, r3
    c582:	d006      	beq.n	c592 <_malloc_r+0xb6>
    c584:	685a      	ldr	r2, [r3, #4]
    c586:	f022 0203 	bic.w	r2, r2, #3
    c58a:	1b91      	subs	r1, r2, r6
    c58c:	290f      	cmp	r1, #15
    c58e:	ddf3      	ble.n	c578 <_malloc_r+0x9c>
    c590:	4660      	mov	r0, ip
    c592:	693d      	ldr	r5, [r7, #16]
    c594:	f8df c250 	ldr.w	ip, [pc, #592]	; c7e8 <_malloc_r+0x30c>
    c598:	4565      	cmp	r5, ip
    c59a:	d07c      	beq.n	c696 <_malloc_r+0x1ba>
    c59c:	686a      	ldr	r2, [r5, #4]
    c59e:	f022 0203 	bic.w	r2, r2, #3
    c5a2:	1b93      	subs	r3, r2, r6
    c5a4:	2b0f      	cmp	r3, #15
    c5a6:	f300 817b 	bgt.w	c8a0 <_malloc_r+0x3c4>
    c5aa:	2b00      	cmp	r3, #0
    c5ac:	e9c7 cc04 	strd	ip, ip, [r7, #16]
    c5b0:	f280 816c 	bge.w	c88c <_malloc_r+0x3b0>
    c5b4:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
    c5b8:	f080 811a 	bcs.w	c7f0 <_malloc_r+0x314>
    c5bc:	08d3      	lsrs	r3, r2, #3
    c5be:	6879      	ldr	r1, [r7, #4]
    c5c0:	3301      	adds	r3, #1
    c5c2:	ea4f 1e52 	mov.w	lr, r2, lsr #5
    c5c6:	2201      	movs	r2, #1
    c5c8:	fa02 f20e 	lsl.w	r2, r2, lr
    c5cc:	430a      	orrs	r2, r1
    c5ce:	f857 e033 	ldr.w	lr, [r7, r3, lsl #3]
    c5d2:	f8c5 e008 	str.w	lr, [r5, #8]
    c5d6:	eb07 01c3 	add.w	r1, r7, r3, lsl #3
    c5da:	3908      	subs	r1, #8
    c5dc:	60e9      	str	r1, [r5, #12]
    c5de:	607a      	str	r2, [r7, #4]
    c5e0:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
    c5e4:	f8ce 500c 	str.w	r5, [lr, #12]
    c5e8:	1083      	asrs	r3, r0, #2
    c5ea:	2101      	movs	r1, #1
    c5ec:	4099      	lsls	r1, r3
    c5ee:	4291      	cmp	r1, r2
    c5f0:	d857      	bhi.n	c6a2 <_malloc_r+0x1c6>
    c5f2:	4211      	tst	r1, r2
    c5f4:	d106      	bne.n	c604 <_malloc_r+0x128>
    c5f6:	f020 0003 	bic.w	r0, r0, #3
    c5fa:	0049      	lsls	r1, r1, #1
    c5fc:	4211      	tst	r1, r2
    c5fe:	f100 0004 	add.w	r0, r0, #4
    c602:	d0fa      	beq.n	c5fa <_malloc_r+0x11e>
    c604:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
    c608:	464d      	mov	r5, r9
    c60a:	4686      	mov	lr, r0
    c60c:	f8d5 800c 	ldr.w	r8, [r5, #12]
    c610:	4545      	cmp	r5, r8
    c612:	d108      	bne.n	c626 <_malloc_r+0x14a>
    c614:	e11d      	b.n	c852 <_malloc_r+0x376>
    c616:	2b00      	cmp	r3, #0
    c618:	f280 8124 	bge.w	c864 <_malloc_r+0x388>
    c61c:	f8d8 800c 	ldr.w	r8, [r8, #12]
    c620:	4545      	cmp	r5, r8
    c622:	f000 8116 	beq.w	c852 <_malloc_r+0x376>
    c626:	f8d8 2004 	ldr.w	r2, [r8, #4]
    c62a:	f022 0203 	bic.w	r2, r2, #3
    c62e:	1b93      	subs	r3, r2, r6
    c630:	2b0f      	cmp	r3, #15
    c632:	ddf0      	ble.n	c616 <_malloc_r+0x13a>
    c634:	4620      	mov	r0, r4
    c636:	e9d8 5402 	ldrd	r5, r4, [r8, #8]
    c63a:	eb08 0106 	add.w	r1, r8, r6
    c63e:	f046 0601 	orr.w	r6, r6, #1
    c642:	f8c8 6004 	str.w	r6, [r8, #4]
    c646:	60ec      	str	r4, [r5, #12]
    c648:	60a5      	str	r5, [r4, #8]
    c64a:	f043 0401 	orr.w	r4, r3, #1
    c64e:	e9c7 1104 	strd	r1, r1, [r7, #16]
    c652:	e9c1 cc02 	strd	ip, ip, [r1, #8]
    c656:	604c      	str	r4, [r1, #4]
    c658:	f848 3002 	str.w	r3, [r8, r2]
    c65c:	f000 fdf2 	bl	d244 <__malloc_unlock>
    c660:	f108 0508 	add.w	r5, r8, #8
    c664:	e002      	b.n	c66c <_malloc_r+0x190>
    c666:	230c      	movs	r3, #12
    c668:	6023      	str	r3, [r4, #0]
    c66a:	2500      	movs	r5, #0
    c66c:	4628      	mov	r0, r5
    c66e:	b003      	add	sp, #12
    c670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c674:	f44f 7300 	mov.w	r3, #512	; 0x200
    c678:	2040      	movs	r0, #64	; 0x40
    c67a:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
    c67e:	e773      	b.n	c568 <_malloc_r+0x8c>
    c680:	68d3      	ldr	r3, [r2, #12]
    c682:	429a      	cmp	r2, r3
    c684:	bf08      	it	eq
    c686:	3002      	addeq	r0, #2
    c688:	f47f af40 	bne.w	c50c <_malloc_r+0x30>
    c68c:	693d      	ldr	r5, [r7, #16]
    c68e:	f8df c158 	ldr.w	ip, [pc, #344]	; c7e8 <_malloc_r+0x30c>
    c692:	4565      	cmp	r5, ip
    c694:	d182      	bne.n	c59c <_malloc_r+0xc0>
    c696:	687a      	ldr	r2, [r7, #4]
    c698:	1083      	asrs	r3, r0, #2
    c69a:	2101      	movs	r1, #1
    c69c:	4099      	lsls	r1, r3
    c69e:	4291      	cmp	r1, r2
    c6a0:	d9a7      	bls.n	c5f2 <_malloc_r+0x116>
    c6a2:	68bd      	ldr	r5, [r7, #8]
    c6a4:	686b      	ldr	r3, [r5, #4]
    c6a6:	f023 0903 	bic.w	r9, r3, #3
    c6aa:	454e      	cmp	r6, r9
    c6ac:	d803      	bhi.n	c6b6 <_malloc_r+0x1da>
    c6ae:	eba9 0306 	sub.w	r3, r9, r6
    c6b2:	2b0f      	cmp	r3, #15
    c6b4:	dc7a      	bgt.n	c7ac <_malloc_r+0x2d0>
    c6b6:	f8df b134 	ldr.w	fp, [pc, #308]	; c7ec <_malloc_r+0x310>
    c6ba:	4b47      	ldr	r3, [pc, #284]	; (c7d8 <_malloc_r+0x2fc>)
    c6bc:	f8db 2000 	ldr.w	r2, [fp]
    c6c0:	681b      	ldr	r3, [r3, #0]
    c6c2:	3201      	adds	r2, #1
    c6c4:	4433      	add	r3, r6
    c6c6:	eb05 0a09 	add.w	sl, r5, r9
    c6ca:	f000 8133 	beq.w	c934 <_malloc_r+0x458>
    c6ce:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    c6d2:	330f      	adds	r3, #15
    c6d4:	f423 687f 	bic.w	r8, r3, #4080	; 0xff0
    c6d8:	f028 080f 	bic.w	r8, r8, #15
    c6dc:	4641      	mov	r1, r8
    c6de:	4620      	mov	r0, r4
    c6e0:	f002 ff4c 	bl	f57c <_sbrk_r>
    c6e4:	1c41      	adds	r1, r0, #1
    c6e6:	4602      	mov	r2, r0
    c6e8:	f000 80f3 	beq.w	c8d2 <_malloc_r+0x3f6>
    c6ec:	4582      	cmp	sl, r0
    c6ee:	f200 80ee 	bhi.w	c8ce <_malloc_r+0x3f2>
    c6f2:	4b3a      	ldr	r3, [pc, #232]	; (c7dc <_malloc_r+0x300>)
    c6f4:	6819      	ldr	r1, [r3, #0]
    c6f6:	4441      	add	r1, r8
    c6f8:	6019      	str	r1, [r3, #0]
    c6fa:	4608      	mov	r0, r1
    c6fc:	f000 814e 	beq.w	c99c <_malloc_r+0x4c0>
    c700:	f8db 1000 	ldr.w	r1, [fp]
    c704:	9301      	str	r3, [sp, #4]
    c706:	3101      	adds	r1, #1
    c708:	bf1b      	ittet	ne
    c70a:	eba2 010a 	subne.w	r1, r2, sl
    c70e:	1809      	addne	r1, r1, r0
    c710:	f8cb 2000 	streq.w	r2, [fp]
    c714:	6019      	strne	r1, [r3, #0]
    c716:	f012 0b07 	ands.w	fp, r2, #7
    c71a:	f000 8117 	beq.w	c94c <_malloc_r+0x470>
    c71e:	f1cb 0108 	rsb	r1, fp, #8
    c722:	440a      	add	r2, r1
    c724:	f5cb 5180 	rsb	r1, fp, #4096	; 0x1000
    c728:	4490      	add	r8, r2
    c72a:	3108      	adds	r1, #8
    c72c:	eba1 0108 	sub.w	r1, r1, r8
    c730:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
    c734:	4651      	mov	r1, sl
    c736:	4620      	mov	r0, r4
    c738:	9200      	str	r2, [sp, #0]
    c73a:	f002 ff1f 	bl	f57c <_sbrk_r>
    c73e:	1c42      	adds	r2, r0, #1
    c740:	e9dd 2300 	ldrd	r2, r3, [sp]
    c744:	f000 814f 	beq.w	c9e6 <_malloc_r+0x50a>
    c748:	1a80      	subs	r0, r0, r2
    c74a:	eb00 080a 	add.w	r8, r0, sl
    c74e:	6819      	ldr	r1, [r3, #0]
    c750:	60ba      	str	r2, [r7, #8]
    c752:	f048 0001 	orr.w	r0, r8, #1
    c756:	4451      	add	r1, sl
    c758:	42bd      	cmp	r5, r7
    c75a:	6050      	str	r0, [r2, #4]
    c75c:	6019      	str	r1, [r3, #0]
    c75e:	f000 8129 	beq.w	c9b4 <_malloc_r+0x4d8>
    c762:	f1b9 0f0f 	cmp.w	r9, #15
    c766:	f240 8127 	bls.w	c9b8 <_malloc_r+0x4dc>
    c76a:	6868      	ldr	r0, [r5, #4]
    c76c:	f1a9 0c0c 	sub.w	ip, r9, #12
    c770:	f02c 0c07 	bic.w	ip, ip, #7
    c774:	f000 0001 	and.w	r0, r0, #1
    c778:	ea40 000c 	orr.w	r0, r0, ip
    c77c:	6068      	str	r0, [r5, #4]
    c77e:	f04f 0e05 	mov.w	lr, #5
    c782:	eb05 000c 	add.w	r0, r5, ip
    c786:	f1bc 0f0f 	cmp.w	ip, #15
    c78a:	e9c0 ee01 	strd	lr, lr, [r0, #4]
    c78e:	f200 8132 	bhi.w	c9f6 <_malloc_r+0x51a>
    c792:	6850      	ldr	r0, [r2, #4]
    c794:	4615      	mov	r5, r2
    c796:	4b12      	ldr	r3, [pc, #72]	; (c7e0 <_malloc_r+0x304>)
    c798:	681a      	ldr	r2, [r3, #0]
    c79a:	428a      	cmp	r2, r1
    c79c:	bf38      	it	cc
    c79e:	6019      	strcc	r1, [r3, #0]
    c7a0:	4b10      	ldr	r3, [pc, #64]	; (c7e4 <_malloc_r+0x308>)
    c7a2:	681a      	ldr	r2, [r3, #0]
    c7a4:	428a      	cmp	r2, r1
    c7a6:	bf38      	it	cc
    c7a8:	6019      	strcc	r1, [r3, #0]
    c7aa:	e094      	b.n	c8d6 <_malloc_r+0x3fa>
    c7ac:	19aa      	adds	r2, r5, r6
    c7ae:	f043 0301 	orr.w	r3, r3, #1
    c7b2:	f046 0601 	orr.w	r6, r6, #1
    c7b6:	606e      	str	r6, [r5, #4]
    c7b8:	4620      	mov	r0, r4
    c7ba:	60ba      	str	r2, [r7, #8]
    c7bc:	6053      	str	r3, [r2, #4]
    c7be:	f000 fd41 	bl	d244 <__malloc_unlock>
    c7c2:	3508      	adds	r5, #8
    c7c4:	4628      	mov	r0, r5
    c7c6:	b003      	add	sp, #12
    c7c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c7cc:	68d9      	ldr	r1, [r3, #12]
    c7ce:	441a      	add	r2, r3
    c7d0:	e6a1      	b.n	c516 <_malloc_r+0x3a>
    c7d2:	bf00      	nop
    c7d4:	200022d8 	.word	0x200022d8
    c7d8:	20002eb4 	.word	0x20002eb4
    c7dc:	20002e84 	.word	0x20002e84
    c7e0:	20002eac 	.word	0x20002eac
    c7e4:	20002eb0 	.word	0x20002eb0
    c7e8:	200022e0 	.word	0x200022e0
    c7ec:	200026e0 	.word	0x200026e0
    c7f0:	f5b2 6f20 	cmp.w	r2, #2560	; 0xa00
    c7f4:	ea4f 2352 	mov.w	r3, r2, lsr #9
    c7f8:	d363      	bcc.n	c8c2 <_malloc_r+0x3e6>
    c7fa:	2b14      	cmp	r3, #20
    c7fc:	f200 80b7 	bhi.w	c96e <_malloc_r+0x492>
    c800:	f103 015c 	add.w	r1, r3, #92	; 0x5c
    c804:	00c9      	lsls	r1, r1, #3
    c806:	335b      	adds	r3, #91	; 0x5b
    c808:	eb07 0e01 	add.w	lr, r7, r1
    c80c:	5879      	ldr	r1, [r7, r1]
    c80e:	f1ae 0e08 	sub.w	lr, lr, #8
    c812:	458e      	cmp	lr, r1
    c814:	f000 8091 	beq.w	c93a <_malloc_r+0x45e>
    c818:	684b      	ldr	r3, [r1, #4]
    c81a:	f023 0303 	bic.w	r3, r3, #3
    c81e:	4293      	cmp	r3, r2
    c820:	d902      	bls.n	c828 <_malloc_r+0x34c>
    c822:	6889      	ldr	r1, [r1, #8]
    c824:	458e      	cmp	lr, r1
    c826:	d1f7      	bne.n	c818 <_malloc_r+0x33c>
    c828:	f8d1 e00c 	ldr.w	lr, [r1, #12]
    c82c:	687a      	ldr	r2, [r7, #4]
    c82e:	e9c5 1e02 	strd	r1, lr, [r5, #8]
    c832:	f8ce 5008 	str.w	r5, [lr, #8]
    c836:	60cd      	str	r5, [r1, #12]
    c838:	e6d6      	b.n	c5e8 <_malloc_r+0x10c>
    c83a:	2b14      	cmp	r3, #20
    c83c:	d959      	bls.n	c8f2 <_malloc_r+0x416>
    c83e:	2b54      	cmp	r3, #84	; 0x54
    c840:	f200 809d 	bhi.w	c97e <_malloc_r+0x4a2>
    c844:	0b33      	lsrs	r3, r6, #12
    c846:	f103 006f 	add.w	r0, r3, #111	; 0x6f
    c84a:	f103 0c6e 	add.w	ip, r3, #110	; 0x6e
    c84e:	00c3      	lsls	r3, r0, #3
    c850:	e68a      	b.n	c568 <_malloc_r+0x8c>
    c852:	f10e 0e01 	add.w	lr, lr, #1
    c856:	f01e 0f03 	tst.w	lr, #3
    c85a:	f105 0508 	add.w	r5, r5, #8
    c85e:	f47f aed5 	bne.w	c60c <_malloc_r+0x130>
    c862:	e051      	b.n	c908 <_malloc_r+0x42c>
    c864:	4442      	add	r2, r8
    c866:	4645      	mov	r5, r8
    c868:	6853      	ldr	r3, [r2, #4]
    c86a:	f8d8 100c 	ldr.w	r1, [r8, #12]
    c86e:	f043 0301 	orr.w	r3, r3, #1
    c872:	6053      	str	r3, [r2, #4]
    c874:	f855 3f08 	ldr.w	r3, [r5, #8]!
    c878:	4620      	mov	r0, r4
    c87a:	60d9      	str	r1, [r3, #12]
    c87c:	608b      	str	r3, [r1, #8]
    c87e:	f000 fce1 	bl	d244 <__malloc_unlock>
    c882:	e6f3      	b.n	c66c <_malloc_r+0x190>
    c884:	08f0      	lsrs	r0, r6, #3
    c886:	f106 0208 	add.w	r2, r6, #8
    c88a:	e637      	b.n	c4fc <_malloc_r+0x20>
    c88c:	442a      	add	r2, r5
    c88e:	4620      	mov	r0, r4
    c890:	6853      	ldr	r3, [r2, #4]
    c892:	f043 0301 	orr.w	r3, r3, #1
    c896:	6053      	str	r3, [r2, #4]
    c898:	3508      	adds	r5, #8
    c89a:	f000 fcd3 	bl	d244 <__malloc_unlock>
    c89e:	e6e5      	b.n	c66c <_malloc_r+0x190>
    c8a0:	19a9      	adds	r1, r5, r6
    c8a2:	4620      	mov	r0, r4
    c8a4:	f046 0601 	orr.w	r6, r6, #1
    c8a8:	f043 0401 	orr.w	r4, r3, #1
    c8ac:	606e      	str	r6, [r5, #4]
    c8ae:	e9c7 1104 	strd	r1, r1, [r7, #16]
    c8b2:	e9c1 cc02 	strd	ip, ip, [r1, #8]
    c8b6:	604c      	str	r4, [r1, #4]
    c8b8:	50ab      	str	r3, [r5, r2]
    c8ba:	f000 fcc3 	bl	d244 <__malloc_unlock>
    c8be:	3508      	adds	r5, #8
    c8c0:	e6d4      	b.n	c66c <_malloc_r+0x190>
    c8c2:	0993      	lsrs	r3, r2, #6
    c8c4:	f103 0139 	add.w	r1, r3, #57	; 0x39
    c8c8:	00c9      	lsls	r1, r1, #3
    c8ca:	3338      	adds	r3, #56	; 0x38
    c8cc:	e79c      	b.n	c808 <_malloc_r+0x32c>
    c8ce:	42bd      	cmp	r5, r7
    c8d0:	d05f      	beq.n	c992 <_malloc_r+0x4b6>
    c8d2:	68bd      	ldr	r5, [r7, #8]
    c8d4:	6868      	ldr	r0, [r5, #4]
    c8d6:	f020 0803 	bic.w	r8, r0, #3
    c8da:	4546      	cmp	r6, r8
    c8dc:	eba8 0306 	sub.w	r3, r8, r6
    c8e0:	d802      	bhi.n	c8e8 <_malloc_r+0x40c>
    c8e2:	2b0f      	cmp	r3, #15
    c8e4:	f73f af62 	bgt.w	c7ac <_malloc_r+0x2d0>
    c8e8:	4620      	mov	r0, r4
    c8ea:	f000 fcab 	bl	d244 <__malloc_unlock>
    c8ee:	2500      	movs	r5, #0
    c8f0:	e6bc      	b.n	c66c <_malloc_r+0x190>
    c8f2:	f103 005c 	add.w	r0, r3, #92	; 0x5c
    c8f6:	f103 0c5b 	add.w	ip, r3, #91	; 0x5b
    c8fa:	00c3      	lsls	r3, r0, #3
    c8fc:	e634      	b.n	c568 <_malloc_r+0x8c>
    c8fe:	f859 3908 	ldr.w	r3, [r9], #-8
    c902:	454b      	cmp	r3, r9
    c904:	f040 8096 	bne.w	ca34 <_malloc_r+0x558>
    c908:	f010 0f03 	tst.w	r0, #3
    c90c:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
    c910:	d1f5      	bne.n	c8fe <_malloc_r+0x422>
    c912:	687b      	ldr	r3, [r7, #4]
    c914:	ea23 0301 	bic.w	r3, r3, r1
    c918:	607b      	str	r3, [r7, #4]
    c91a:	0049      	lsls	r1, r1, #1
    c91c:	4299      	cmp	r1, r3
    c91e:	f63f aec0 	bhi.w	c6a2 <_malloc_r+0x1c6>
    c922:	b919      	cbnz	r1, c92c <_malloc_r+0x450>
    c924:	e6bd      	b.n	c6a2 <_malloc_r+0x1c6>
    c926:	0049      	lsls	r1, r1, #1
    c928:	f10e 0e04 	add.w	lr, lr, #4
    c92c:	4219      	tst	r1, r3
    c92e:	d0fa      	beq.n	c926 <_malloc_r+0x44a>
    c930:	4670      	mov	r0, lr
    c932:	e667      	b.n	c604 <_malloc_r+0x128>
    c934:	f103 0810 	add.w	r8, r3, #16
    c938:	e6d0      	b.n	c6dc <_malloc_r+0x200>
    c93a:	109a      	asrs	r2, r3, #2
    c93c:	f04f 0801 	mov.w	r8, #1
    c940:	687b      	ldr	r3, [r7, #4]
    c942:	fa08 f202 	lsl.w	r2, r8, r2
    c946:	431a      	orrs	r2, r3
    c948:	607a      	str	r2, [r7, #4]
    c94a:	e770      	b.n	c82e <_malloc_r+0x352>
    c94c:	eb02 0108 	add.w	r1, r2, r8
    c950:	4249      	negs	r1, r1
    c952:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
    c956:	4651      	mov	r1, sl
    c958:	4620      	mov	r0, r4
    c95a:	9200      	str	r2, [sp, #0]
    c95c:	f002 fe0e 	bl	f57c <_sbrk_r>
    c960:	1c43      	adds	r3, r0, #1
    c962:	e9dd 2300 	ldrd	r2, r3, [sp]
    c966:	f47f aeef 	bne.w	c748 <_malloc_r+0x26c>
    c96a:	46da      	mov	sl, fp
    c96c:	e6ef      	b.n	c74e <_malloc_r+0x272>
    c96e:	2b54      	cmp	r3, #84	; 0x54
    c970:	d825      	bhi.n	c9be <_malloc_r+0x4e2>
    c972:	0b13      	lsrs	r3, r2, #12
    c974:	f103 016f 	add.w	r1, r3, #111	; 0x6f
    c978:	00c9      	lsls	r1, r1, #3
    c97a:	336e      	adds	r3, #110	; 0x6e
    c97c:	e744      	b.n	c808 <_malloc_r+0x32c>
    c97e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    c982:	d825      	bhi.n	c9d0 <_malloc_r+0x4f4>
    c984:	0bf3      	lsrs	r3, r6, #15
    c986:	f103 0078 	add.w	r0, r3, #120	; 0x78
    c98a:	f103 0c77 	add.w	ip, r3, #119	; 0x77
    c98e:	00c3      	lsls	r3, r0, #3
    c990:	e5ea      	b.n	c568 <_malloc_r+0x8c>
    c992:	4b29      	ldr	r3, [pc, #164]	; (ca38 <_malloc_r+0x55c>)
    c994:	6818      	ldr	r0, [r3, #0]
    c996:	4440      	add	r0, r8
    c998:	6018      	str	r0, [r3, #0]
    c99a:	e6b1      	b.n	c700 <_malloc_r+0x224>
    c99c:	f3ca 0c0b 	ubfx	ip, sl, #0, #12
    c9a0:	f1bc 0f00 	cmp.w	ip, #0
    c9a4:	f47f aeac 	bne.w	c700 <_malloc_r+0x224>
    c9a8:	68bd      	ldr	r5, [r7, #8]
    c9aa:	44c8      	add	r8, r9
    c9ac:	f048 0001 	orr.w	r0, r8, #1
    c9b0:	6068      	str	r0, [r5, #4]
    c9b2:	e6f0      	b.n	c796 <_malloc_r+0x2ba>
    c9b4:	4615      	mov	r5, r2
    c9b6:	e6ee      	b.n	c796 <_malloc_r+0x2ba>
    c9b8:	2301      	movs	r3, #1
    c9ba:	6053      	str	r3, [r2, #4]
    c9bc:	e794      	b.n	c8e8 <_malloc_r+0x40c>
    c9be:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    c9c2:	d823      	bhi.n	ca0c <_malloc_r+0x530>
    c9c4:	0bd3      	lsrs	r3, r2, #15
    c9c6:	f103 0178 	add.w	r1, r3, #120	; 0x78
    c9ca:	00c9      	lsls	r1, r1, #3
    c9cc:	3377      	adds	r3, #119	; 0x77
    c9ce:	e71b      	b.n	c808 <_malloc_r+0x32c>
    c9d0:	f240 5254 	movw	r2, #1364	; 0x554
    c9d4:	4293      	cmp	r3, r2
    c9d6:	d823      	bhi.n	ca20 <_malloc_r+0x544>
    c9d8:	0cb3      	lsrs	r3, r6, #18
    c9da:	f103 007d 	add.w	r0, r3, #125	; 0x7d
    c9de:	f103 0c7c 	add.w	ip, r3, #124	; 0x7c
    c9e2:	00c3      	lsls	r3, r0, #3
    c9e4:	e5c0      	b.n	c568 <_malloc_r+0x8c>
    c9e6:	f1ab 0b08 	sub.w	fp, fp, #8
    c9ea:	44d8      	add	r8, fp
    c9ec:	eba8 0802 	sub.w	r8, r8, r2
    c9f0:	f04f 0a00 	mov.w	sl, #0
    c9f4:	e6ab      	b.n	c74e <_malloc_r+0x272>
    c9f6:	f105 0108 	add.w	r1, r5, #8
    c9fa:	4620      	mov	r0, r4
    c9fc:	9300      	str	r3, [sp, #0]
    c9fe:	f002 fc27 	bl	f250 <_free_r>
    ca02:	68bd      	ldr	r5, [r7, #8]
    ca04:	9b00      	ldr	r3, [sp, #0]
    ca06:	6868      	ldr	r0, [r5, #4]
    ca08:	6819      	ldr	r1, [r3, #0]
    ca0a:	e6c4      	b.n	c796 <_malloc_r+0x2ba>
    ca0c:	f240 5154 	movw	r1, #1364	; 0x554
    ca10:	428b      	cmp	r3, r1
    ca12:	d80b      	bhi.n	ca2c <_malloc_r+0x550>
    ca14:	0c93      	lsrs	r3, r2, #18
    ca16:	f103 017d 	add.w	r1, r3, #125	; 0x7d
    ca1a:	00c9      	lsls	r1, r1, #3
    ca1c:	337c      	adds	r3, #124	; 0x7c
    ca1e:	e6f3      	b.n	c808 <_malloc_r+0x32c>
    ca20:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
    ca24:	207f      	movs	r0, #127	; 0x7f
    ca26:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
    ca2a:	e59d      	b.n	c568 <_malloc_r+0x8c>
    ca2c:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
    ca30:	237e      	movs	r3, #126	; 0x7e
    ca32:	e6e9      	b.n	c808 <_malloc_r+0x32c>
    ca34:	687b      	ldr	r3, [r7, #4]
    ca36:	e770      	b.n	c91a <_malloc_r+0x43e>
    ca38:	20002e84 	.word	0x20002e84

0000ca3c <memcmp>:
    ca3c:	2a03      	cmp	r2, #3
    ca3e:	b570      	push	{r4, r5, r6, lr}
    ca40:	d914      	bls.n	ca6c <memcmp+0x30>
    ca42:	ea40 0301 	orr.w	r3, r0, r1
    ca46:	079b      	lsls	r3, r3, #30
    ca48:	d122      	bne.n	ca90 <memcmp+0x54>
    ca4a:	4604      	mov	r4, r0
    ca4c:	460b      	mov	r3, r1
    ca4e:	4619      	mov	r1, r3
    ca50:	4620      	mov	r0, r4
    ca52:	680e      	ldr	r6, [r1, #0]
    ca54:	6805      	ldr	r5, [r0, #0]
    ca56:	42b5      	cmp	r5, r6
    ca58:	f104 0404 	add.w	r4, r4, #4
    ca5c:	f103 0304 	add.w	r3, r3, #4
    ca60:	d116      	bne.n	ca90 <memcmp+0x54>
    ca62:	3a04      	subs	r2, #4
    ca64:	2a03      	cmp	r2, #3
    ca66:	4620      	mov	r0, r4
    ca68:	4619      	mov	r1, r3
    ca6a:	d8f0      	bhi.n	ca4e <memcmp+0x12>
    ca6c:	1e54      	subs	r4, r2, #1
    ca6e:	b19a      	cbz	r2, ca98 <memcmp+0x5c>
    ca70:	1e42      	subs	r2, r0, #1
    ca72:	3901      	subs	r1, #1
    ca74:	e001      	b.n	ca7a <memcmp+0x3e>
    ca76:	18c3      	adds	r3, r0, r3
    ca78:	d00c      	beq.n	ca94 <memcmp+0x58>
    ca7a:	f812 ef01 	ldrb.w	lr, [r2, #1]!
    ca7e:	f811 cf01 	ldrb.w	ip, [r1, #1]!
    ca82:	45e6      	cmp	lr, ip
    ca84:	eba4 0302 	sub.w	r3, r4, r2
    ca88:	d0f5      	beq.n	ca76 <memcmp+0x3a>
    ca8a:	ebae 000c 	sub.w	r0, lr, ip
    ca8e:	bd70      	pop	{r4, r5, r6, pc}
    ca90:	1e54      	subs	r4, r2, #1
    ca92:	e7ed      	b.n	ca70 <memcmp+0x34>
    ca94:	4618      	mov	r0, r3
    ca96:	bd70      	pop	{r4, r5, r6, pc}
    ca98:	4610      	mov	r0, r2
    ca9a:	bd70      	pop	{r4, r5, r6, pc}

0000ca9c <memmove>:
    ca9c:	4288      	cmp	r0, r1
    ca9e:	d90d      	bls.n	cabc <memmove+0x20>
    caa0:	188b      	adds	r3, r1, r2
    caa2:	4283      	cmp	r3, r0
    caa4:	d90a      	bls.n	cabc <memmove+0x20>
    caa6:	eb00 0c02 	add.w	ip, r0, r2
    caaa:	b1ba      	cbz	r2, cadc <memmove+0x40>
    caac:	4662      	mov	r2, ip
    caae:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
    cab2:	f802 cd01 	strb.w	ip, [r2, #-1]!
    cab6:	4299      	cmp	r1, r3
    cab8:	d1f9      	bne.n	caae <memmove+0x12>
    caba:	4770      	bx	lr
    cabc:	2a0f      	cmp	r2, #15
    cabe:	d80e      	bhi.n	cade <memmove+0x42>
    cac0:	4603      	mov	r3, r0
    cac2:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    cac6:	b14a      	cbz	r2, cadc <memmove+0x40>
    cac8:	f10c 0c01 	add.w	ip, ip, #1
    cacc:	3b01      	subs	r3, #1
    cace:	448c      	add	ip, r1
    cad0:	f811 2b01 	ldrb.w	r2, [r1], #1
    cad4:	f803 2f01 	strb.w	r2, [r3, #1]!
    cad8:	4561      	cmp	r1, ip
    cada:	d1f9      	bne.n	cad0 <memmove+0x34>
    cadc:	4770      	bx	lr
    cade:	ea40 0301 	orr.w	r3, r0, r1
    cae2:	079b      	lsls	r3, r3, #30
    cae4:	d150      	bne.n	cb88 <memmove+0xec>
    cae6:	f1a2 0310 	sub.w	r3, r2, #16
    caea:	b570      	push	{r4, r5, r6, lr}
    caec:	f101 0c20 	add.w	ip, r1, #32
    caf0:	f023 050f 	bic.w	r5, r3, #15
    caf4:	f101 0e10 	add.w	lr, r1, #16
    caf8:	f100 0410 	add.w	r4, r0, #16
    cafc:	44ac      	add	ip, r5
    cafe:	091b      	lsrs	r3, r3, #4
    cb00:	f85e 5c10 	ldr.w	r5, [lr, #-16]
    cb04:	f844 5c10 	str.w	r5, [r4, #-16]
    cb08:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
    cb0c:	f844 5c0c 	str.w	r5, [r4, #-12]
    cb10:	f85e 5c08 	ldr.w	r5, [lr, #-8]
    cb14:	f844 5c08 	str.w	r5, [r4, #-8]
    cb18:	f85e 5c04 	ldr.w	r5, [lr, #-4]
    cb1c:	f844 5c04 	str.w	r5, [r4, #-4]
    cb20:	f10e 0e10 	add.w	lr, lr, #16
    cb24:	45e6      	cmp	lr, ip
    cb26:	f104 0410 	add.w	r4, r4, #16
    cb2a:	d1e9      	bne.n	cb00 <memmove+0x64>
    cb2c:	3301      	adds	r3, #1
    cb2e:	f012 0f0c 	tst.w	r2, #12
    cb32:	eb01 1103 	add.w	r1, r1, r3, lsl #4
    cb36:	f002 040f 	and.w	r4, r2, #15
    cb3a:	eb00 1303 	add.w	r3, r0, r3, lsl #4
    cb3e:	d027      	beq.n	cb90 <memmove+0xf4>
    cb40:	3c04      	subs	r4, #4
    cb42:	f024 0603 	bic.w	r6, r4, #3
    cb46:	ea4f 0c94 	mov.w	ip, r4, lsr #2
    cb4a:	441e      	add	r6, r3
    cb4c:	1f1c      	subs	r4, r3, #4
    cb4e:	468e      	mov	lr, r1
    cb50:	f85e 5b04 	ldr.w	r5, [lr], #4
    cb54:	f844 5f04 	str.w	r5, [r4, #4]!
    cb58:	42b4      	cmp	r4, r6
    cb5a:	d1f9      	bne.n	cb50 <memmove+0xb4>
    cb5c:	f10c 0401 	add.w	r4, ip, #1
    cb60:	f002 0203 	and.w	r2, r2, #3
    cb64:	eb03 0384 	add.w	r3, r3, r4, lsl #2
    cb68:	eb01 0184 	add.w	r1, r1, r4, lsl #2
    cb6c:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    cb70:	b14a      	cbz	r2, cb86 <memmove+0xea>
    cb72:	f10c 0c01 	add.w	ip, ip, #1
    cb76:	3b01      	subs	r3, #1
    cb78:	448c      	add	ip, r1
    cb7a:	f811 2b01 	ldrb.w	r2, [r1], #1
    cb7e:	f803 2f01 	strb.w	r2, [r3, #1]!
    cb82:	4561      	cmp	r1, ip
    cb84:	d1f9      	bne.n	cb7a <memmove+0xde>
    cb86:	bd70      	pop	{r4, r5, r6, pc}
    cb88:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    cb8c:	4603      	mov	r3, r0
    cb8e:	e79b      	b.n	cac8 <memmove+0x2c>
    cb90:	4622      	mov	r2, r4
    cb92:	e7eb      	b.n	cb6c <memmove+0xd0>

0000cb94 <__assert_func>:
    cb94:	b500      	push	{lr}
    cb96:	4c0b      	ldr	r4, [pc, #44]	; (cbc4 <__assert_func+0x30>)
    cb98:	6825      	ldr	r5, [r4, #0]
    cb9a:	4614      	mov	r4, r2
    cb9c:	68ee      	ldr	r6, [r5, #12]
    cb9e:	461a      	mov	r2, r3
    cba0:	b085      	sub	sp, #20
    cba2:	4603      	mov	r3, r0
    cba4:	460d      	mov	r5, r1
    cba6:	b14c      	cbz	r4, cbbc <__assert_func+0x28>
    cba8:	4907      	ldr	r1, [pc, #28]	; (cbc8 <__assert_func+0x34>)
    cbaa:	9500      	str	r5, [sp, #0]
    cbac:	e9cd 1401 	strd	r1, r4, [sp, #4]
    cbb0:	4630      	mov	r0, r6
    cbb2:	4906      	ldr	r1, [pc, #24]	; (cbcc <__assert_func+0x38>)
    cbb4:	f002 fc7a 	bl	f4ac <fiprintf>
    cbb8:	f7f3 fef8 	bl	9ac <abort>
    cbbc:	4904      	ldr	r1, [pc, #16]	; (cbd0 <__assert_func+0x3c>)
    cbbe:	460c      	mov	r4, r1
    cbc0:	e7f3      	b.n	cbaa <__assert_func+0x16>
    cbc2:	bf00      	nop
    cbc4:	200026f4 	.word	0x200026f4
    cbc8:	20000874 	.word	0x20000874
    cbcc:	20000884 	.word	0x20000884
    cbd0:	20000880 	.word	0x20000880

0000cbd4 <memset>:
    cbd4:	0783      	lsls	r3, r0, #30
    cbd6:	b530      	push	{r4, r5, lr}
    cbd8:	d048      	beq.n	cc6c <memset+0x98>
    cbda:	1e54      	subs	r4, r2, #1
    cbdc:	2a00      	cmp	r2, #0
    cbde:	d03f      	beq.n	cc60 <memset+0x8c>
    cbe0:	b2ca      	uxtb	r2, r1
    cbe2:	4603      	mov	r3, r0
    cbe4:	e001      	b.n	cbea <memset+0x16>
    cbe6:	3c01      	subs	r4, #1
    cbe8:	d33a      	bcc.n	cc60 <memset+0x8c>
    cbea:	f803 2b01 	strb.w	r2, [r3], #1
    cbee:	079d      	lsls	r5, r3, #30
    cbf0:	d1f9      	bne.n	cbe6 <memset+0x12>
    cbf2:	2c03      	cmp	r4, #3
    cbf4:	d92d      	bls.n	cc52 <memset+0x7e>
    cbf6:	b2cd      	uxtb	r5, r1
    cbf8:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
    cbfc:	2c0f      	cmp	r4, #15
    cbfe:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
    cc02:	d936      	bls.n	cc72 <memset+0x9e>
    cc04:	f1a4 0210 	sub.w	r2, r4, #16
    cc08:	f022 0c0f 	bic.w	ip, r2, #15
    cc0c:	f103 0e20 	add.w	lr, r3, #32
    cc10:	44e6      	add	lr, ip
    cc12:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    cc16:	f103 0210 	add.w	r2, r3, #16
    cc1a:	e942 5504 	strd	r5, r5, [r2, #-16]
    cc1e:	e942 5502 	strd	r5, r5, [r2, #-8]
    cc22:	3210      	adds	r2, #16
    cc24:	4572      	cmp	r2, lr
    cc26:	d1f8      	bne.n	cc1a <memset+0x46>
    cc28:	f10c 0201 	add.w	r2, ip, #1
    cc2c:	f014 0f0c 	tst.w	r4, #12
    cc30:	eb03 1202 	add.w	r2, r3, r2, lsl #4
    cc34:	f004 0c0f 	and.w	ip, r4, #15
    cc38:	d013      	beq.n	cc62 <memset+0x8e>
    cc3a:	f1ac 0304 	sub.w	r3, ip, #4
    cc3e:	f023 0303 	bic.w	r3, r3, #3
    cc42:	3304      	adds	r3, #4
    cc44:	4413      	add	r3, r2
    cc46:	f842 5b04 	str.w	r5, [r2], #4
    cc4a:	4293      	cmp	r3, r2
    cc4c:	d1fb      	bne.n	cc46 <memset+0x72>
    cc4e:	f00c 0403 	and.w	r4, ip, #3
    cc52:	b12c      	cbz	r4, cc60 <memset+0x8c>
    cc54:	b2c9      	uxtb	r1, r1
    cc56:	441c      	add	r4, r3
    cc58:	f803 1b01 	strb.w	r1, [r3], #1
    cc5c:	429c      	cmp	r4, r3
    cc5e:	d1fb      	bne.n	cc58 <memset+0x84>
    cc60:	bd30      	pop	{r4, r5, pc}
    cc62:	4664      	mov	r4, ip
    cc64:	4613      	mov	r3, r2
    cc66:	2c00      	cmp	r4, #0
    cc68:	d1f4      	bne.n	cc54 <memset+0x80>
    cc6a:	e7f9      	b.n	cc60 <memset+0x8c>
    cc6c:	4603      	mov	r3, r0
    cc6e:	4614      	mov	r4, r2
    cc70:	e7bf      	b.n	cbf2 <memset+0x1e>
    cc72:	461a      	mov	r2, r3
    cc74:	46a4      	mov	ip, r4
    cc76:	e7e0      	b.n	cc3a <memset+0x66>

0000cc78 <__cxa_atexit>:
    cc78:	4613      	mov	r3, r2
    cc7a:	460a      	mov	r2, r1
    cc7c:	4601      	mov	r1, r0
    cc7e:	2002      	movs	r0, #2
    cc80:	f003 bde2 	b.w	10848 <__register_exitproc>

0000cc84 <_wcrtomb_r>:
    cc84:	b570      	push	{r4, r5, r6, lr}
    cc86:	4605      	mov	r5, r0
    cc88:	b084      	sub	sp, #16
    cc8a:	b15b      	cbz	r3, cca4 <_wcrtomb_r+0x20>
    cc8c:	461c      	mov	r4, r3
    cc8e:	b169      	cbz	r1, ccac <_wcrtomb_r+0x28>
    cc90:	4b0e      	ldr	r3, [pc, #56]	; (cccc <_wcrtomb_r+0x48>)
    cc92:	4628      	mov	r0, r5
    cc94:	f8d3 60e0 	ldr.w	r6, [r3, #224]	; 0xe0
    cc98:	4623      	mov	r3, r4
    cc9a:	47b0      	blx	r6
    cc9c:	1c43      	adds	r3, r0, #1
    cc9e:	d00f      	beq.n	ccc0 <_wcrtomb_r+0x3c>
    cca0:	b004      	add	sp, #16
    cca2:	bd70      	pop	{r4, r5, r6, pc}
    cca4:	f500 7482 	add.w	r4, r0, #260	; 0x104
    cca8:	2900      	cmp	r1, #0
    ccaa:	d1f1      	bne.n	cc90 <_wcrtomb_r+0xc>
    ccac:	4a07      	ldr	r2, [pc, #28]	; (cccc <_wcrtomb_r+0x48>)
    ccae:	4623      	mov	r3, r4
    ccb0:	f8d2 60e0 	ldr.w	r6, [r2, #224]	; 0xe0
    ccb4:	4628      	mov	r0, r5
    ccb6:	460a      	mov	r2, r1
    ccb8:	a901      	add	r1, sp, #4
    ccba:	47b0      	blx	r6
    ccbc:	1c43      	adds	r3, r0, #1
    ccbe:	d1ef      	bne.n	cca0 <_wcrtomb_r+0x1c>
    ccc0:	2200      	movs	r2, #0
    ccc2:	238a      	movs	r3, #138	; 0x8a
    ccc4:	6022      	str	r2, [r4, #0]
    ccc6:	602b      	str	r3, [r5, #0]
    ccc8:	b004      	add	sp, #16
    ccca:	bd70      	pop	{r4, r5, r6, pc}
    cccc:	2000216c 	.word	0x2000216c

0000ccd0 <__libc_init_array>:
    ccd0:	b570      	push	{r4, r5, r6, lr}
    ccd2:	4e0d      	ldr	r6, [pc, #52]	; (cd08 <__libc_init_array+0x38>)
    ccd4:	4d0d      	ldr	r5, [pc, #52]	; (cd0c <__libc_init_array+0x3c>)
    ccd6:	1b76      	subs	r6, r6, r5
    ccd8:	10b6      	asrs	r6, r6, #2
    ccda:	d006      	beq.n	ccea <__libc_init_array+0x1a>
    ccdc:	2400      	movs	r4, #0
    ccde:	f855 3b04 	ldr.w	r3, [r5], #4
    cce2:	3401      	adds	r4, #1
    cce4:	4798      	blx	r3
    cce6:	42a6      	cmp	r6, r4
    cce8:	d1f9      	bne.n	ccde <__libc_init_array+0xe>
    ccea:	4e09      	ldr	r6, [pc, #36]	; (cd10 <__libc_init_array+0x40>)
    ccec:	4d09      	ldr	r5, [pc, #36]	; (cd14 <__libc_init_array+0x44>)
    ccee:	1b76      	subs	r6, r6, r5
    ccf0:	f003 ffba 	bl	10c68 <___init_veneer>
    ccf4:	10b6      	asrs	r6, r6, #2
    ccf6:	d006      	beq.n	cd06 <__libc_init_array+0x36>
    ccf8:	2400      	movs	r4, #0
    ccfa:	f855 3b04 	ldr.w	r3, [r5], #4
    ccfe:	3401      	adds	r4, #1
    cd00:	4798      	blx	r3
    cd02:	42a6      	cmp	r6, r4
    cd04:	d1f9      	bne.n	ccfa <__libc_init_array+0x2a>
    cd06:	bd70      	pop	{r4, r5, r6, pc}
    cd08:	60001e80 	.word	0x60001e80
    cd0c:	60001e80 	.word	0x60001e80
    cd10:	60001e8c 	.word	0x60001e8c
    cd14:	60001e80 	.word	0x60001e80

0000cd18 <__retarget_lock_init_recursive>:
    cd18:	4770      	bx	lr
    cd1a:	bf00      	nop

0000cd1c <__retarget_lock_close_recursive>:
    cd1c:	4770      	bx	lr
    cd1e:	bf00      	nop

0000cd20 <__retarget_lock_acquire_recursive>:
    cd20:	4770      	bx	lr
    cd22:	bf00      	nop

0000cd24 <__retarget_lock_release_recursive>:
    cd24:	4770      	bx	lr
    cd26:	bf00      	nop

0000cd28 <__locale_mb_cur_max>:
    cd28:	4b01      	ldr	r3, [pc, #4]	; (cd30 <__locale_mb_cur_max+0x8>)
    cd2a:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
    cd2e:	4770      	bx	lr
    cd30:	2000216c 	.word	0x2000216c

0000cd34 <_localeconv_r>:
    cd34:	4800      	ldr	r0, [pc, #0]	; (cd38 <_localeconv_r+0x4>)
    cd36:	4770      	bx	lr
    cd38:	2000225c 	.word	0x2000225c
    cd3c:	00000000 	.word	0x00000000
    cd40:	eba2 0003 	sub.w	r0, r2, r3
    cd44:	4770      	bx	lr
    cd46:	bf00      	nop

0000cd48 <strcmp>:
    cd48:	7802      	ldrb	r2, [r0, #0]
    cd4a:	780b      	ldrb	r3, [r1, #0]
    cd4c:	2a01      	cmp	r2, #1
    cd4e:	bf28      	it	cs
    cd50:	429a      	cmpcs	r2, r3
    cd52:	d1f5      	bne.n	cd40 <_localeconv_r+0xc>
    cd54:	e96d 4504 	strd	r4, r5, [sp, #-16]!
    cd58:	ea40 0401 	orr.w	r4, r0, r1
    cd5c:	e9cd 6702 	strd	r6, r7, [sp, #8]
    cd60:	f06f 0c00 	mvn.w	ip, #0
    cd64:	ea4f 7244 	mov.w	r2, r4, lsl #29
    cd68:	b312      	cbz	r2, cdb0 <strcmp+0x68>
    cd6a:	ea80 0401 	eor.w	r4, r0, r1
    cd6e:	f014 0f07 	tst.w	r4, #7
    cd72:	d16a      	bne.n	ce4a <strcmp+0x102>
    cd74:	f000 0407 	and.w	r4, r0, #7
    cd78:	f020 0007 	bic.w	r0, r0, #7
    cd7c:	f004 0503 	and.w	r5, r4, #3
    cd80:	f021 0107 	bic.w	r1, r1, #7
    cd84:	ea4f 05c5 	mov.w	r5, r5, lsl #3
    cd88:	e8f0 2304 	ldrd	r2, r3, [r0], #16
    cd8c:	f014 0f04 	tst.w	r4, #4
    cd90:	e8f1 6704 	ldrd	r6, r7, [r1], #16
    cd94:	fa0c f405 	lsl.w	r4, ip, r5
    cd98:	ea62 0204 	orn	r2, r2, r4
    cd9c:	ea66 0604 	orn	r6, r6, r4
    cda0:	d00a      	beq.n	cdb8 <strcmp+0x70>
    cda2:	ea63 0304 	orn	r3, r3, r4
    cda6:	4662      	mov	r2, ip
    cda8:	ea67 0704 	orn	r7, r7, r4
    cdac:	4666      	mov	r6, ip
    cdae:	e003      	b.n	cdb8 <strcmp+0x70>
    cdb0:	e8f0 2304 	ldrd	r2, r3, [r0], #16
    cdb4:	e8f1 6704 	ldrd	r6, r7, [r1], #16
    cdb8:	fa82 f54c 	uadd8	r5, r2, ip
    cdbc:	ea82 0406 	eor.w	r4, r2, r6
    cdc0:	faa4 f48c 	sel	r4, r4, ip
    cdc4:	bb6c      	cbnz	r4, ce22 <strcmp+0xda>
    cdc6:	fa83 f54c 	uadd8	r5, r3, ip
    cdca:	ea83 0507 	eor.w	r5, r3, r7
    cdce:	faa5 f58c 	sel	r5, r5, ip
    cdd2:	b995      	cbnz	r5, cdfa <strcmp+0xb2>
    cdd4:	e950 2302 	ldrd	r2, r3, [r0, #-8]
    cdd8:	e951 6702 	ldrd	r6, r7, [r1, #-8]
    cddc:	fa82 f54c 	uadd8	r5, r2, ip
    cde0:	ea82 0406 	eor.w	r4, r2, r6
    cde4:	faa4 f48c 	sel	r4, r4, ip
    cde8:	fa83 f54c 	uadd8	r5, r3, ip
    cdec:	ea83 0507 	eor.w	r5, r3, r7
    cdf0:	faa5 f58c 	sel	r5, r5, ip
    cdf4:	4325      	orrs	r5, r4
    cdf6:	d0db      	beq.n	cdb0 <strcmp+0x68>
    cdf8:	b99c      	cbnz	r4, ce22 <strcmp+0xda>
    cdfa:	ba2d      	rev	r5, r5
    cdfc:	fab5 f485 	clz	r4, r5
    ce00:	f024 0407 	bic.w	r4, r4, #7
    ce04:	fa27 f104 	lsr.w	r1, r7, r4
    ce08:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
    ce0c:	fa23 f304 	lsr.w	r3, r3, r4
    ce10:	f003 00ff 	and.w	r0, r3, #255	; 0xff
    ce14:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    ce18:	e8fd 4504 	ldrd	r4, r5, [sp], #16
    ce1c:	eba0 0001 	sub.w	r0, r0, r1
    ce20:	4770      	bx	lr
    ce22:	ba24      	rev	r4, r4
    ce24:	fab4 f484 	clz	r4, r4
    ce28:	f024 0407 	bic.w	r4, r4, #7
    ce2c:	fa26 f104 	lsr.w	r1, r6, r4
    ce30:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
    ce34:	fa22 f204 	lsr.w	r2, r2, r4
    ce38:	f002 00ff 	and.w	r0, r2, #255	; 0xff
    ce3c:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    ce40:	e8fd 4504 	ldrd	r4, r5, [sp], #16
    ce44:	eba0 0001 	sub.w	r0, r0, r1
    ce48:	4770      	bx	lr
    ce4a:	f014 0f03 	tst.w	r4, #3
    ce4e:	d13c      	bne.n	ceca <strcmp+0x182>
    ce50:	f010 0403 	ands.w	r4, r0, #3
    ce54:	d128      	bne.n	cea8 <strcmp+0x160>
    ce56:	f850 2b08 	ldr.w	r2, [r0], #8
    ce5a:	f851 3b08 	ldr.w	r3, [r1], #8
    ce5e:	fa82 f54c 	uadd8	r5, r2, ip
    ce62:	ea82 0503 	eor.w	r5, r2, r3
    ce66:	faa5 f58c 	sel	r5, r5, ip
    ce6a:	b95d      	cbnz	r5, ce84 <strcmp+0x13c>
    ce6c:	f850 2c04 	ldr.w	r2, [r0, #-4]
    ce70:	f851 3c04 	ldr.w	r3, [r1, #-4]
    ce74:	fa82 f54c 	uadd8	r5, r2, ip
    ce78:	ea82 0503 	eor.w	r5, r2, r3
    ce7c:	faa5 f58c 	sel	r5, r5, ip
    ce80:	2d00      	cmp	r5, #0
    ce82:	d0e8      	beq.n	ce56 <strcmp+0x10e>
    ce84:	ba2d      	rev	r5, r5
    ce86:	fab5 f485 	clz	r4, r5
    ce8a:	f024 0407 	bic.w	r4, r4, #7
    ce8e:	fa23 f104 	lsr.w	r1, r3, r4
    ce92:	fa22 f204 	lsr.w	r2, r2, r4
    ce96:	f002 00ff 	and.w	r0, r2, #255	; 0xff
    ce9a:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    ce9e:	e8fd 4504 	ldrd	r4, r5, [sp], #16
    cea2:	eba0 0001 	sub.w	r0, r0, r1
    cea6:	4770      	bx	lr
    cea8:	ea4f 04c4 	mov.w	r4, r4, lsl #3
    ceac:	f020 0003 	bic.w	r0, r0, #3
    ceb0:	f850 2b08 	ldr.w	r2, [r0], #8
    ceb4:	f021 0103 	bic.w	r1, r1, #3
    ceb8:	f851 3b08 	ldr.w	r3, [r1], #8
    cebc:	fa0c f404 	lsl.w	r4, ip, r4
    cec0:	ea62 0204 	orn	r2, r2, r4
    cec4:	ea63 0304 	orn	r3, r3, r4
    cec8:	e7c9      	b.n	ce5e <strcmp+0x116>
    ceca:	f010 0403 	ands.w	r4, r0, #3
    cece:	d01a      	beq.n	cf06 <strcmp+0x1be>
    ced0:	eba1 0104 	sub.w	r1, r1, r4
    ced4:	f020 0003 	bic.w	r0, r0, #3
    ced8:	07e4      	lsls	r4, r4, #31
    ceda:	f850 2b04 	ldr.w	r2, [r0], #4
    cede:	d006      	beq.n	ceee <strcmp+0x1a6>
    cee0:	d20f      	bcs.n	cf02 <strcmp+0x1ba>
    cee2:	788b      	ldrb	r3, [r1, #2]
    cee4:	fa5f f4a2 	uxtb.w	r4, r2, ror #16
    cee8:	1ae4      	subs	r4, r4, r3
    ceea:	d106      	bne.n	cefa <strcmp+0x1b2>
    ceec:	b12b      	cbz	r3, cefa <strcmp+0x1b2>
    ceee:	78cb      	ldrb	r3, [r1, #3]
    cef0:	fa5f f4b2 	uxtb.w	r4, r2, ror #24
    cef4:	1ae4      	subs	r4, r4, r3
    cef6:	d100      	bne.n	cefa <strcmp+0x1b2>
    cef8:	b91b      	cbnz	r3, cf02 <strcmp+0x1ba>
    cefa:	4620      	mov	r0, r4
    cefc:	f85d 4b10 	ldr.w	r4, [sp], #16
    cf00:	4770      	bx	lr
    cf02:	f101 0104 	add.w	r1, r1, #4
    cf06:	f850 2b04 	ldr.w	r2, [r0], #4
    cf0a:	07cc      	lsls	r4, r1, #31
    cf0c:	f021 0103 	bic.w	r1, r1, #3
    cf10:	f851 3b04 	ldr.w	r3, [r1], #4
    cf14:	d848      	bhi.n	cfa8 <strcmp+0x260>
    cf16:	d224      	bcs.n	cf62 <strcmp+0x21a>
    cf18:	f022 447f 	bic.w	r4, r2, #4278190080	; 0xff000000
    cf1c:	fa82 f54c 	uadd8	r5, r2, ip
    cf20:	ea94 2513 	eors.w	r5, r4, r3, lsr #8
    cf24:	faa5 f58c 	sel	r5, r5, ip
    cf28:	d10a      	bne.n	cf40 <strcmp+0x1f8>
    cf2a:	b965      	cbnz	r5, cf46 <strcmp+0x1fe>
    cf2c:	f851 3b04 	ldr.w	r3, [r1], #4
    cf30:	ea84 0402 	eor.w	r4, r4, r2
    cf34:	ebb4 6f03 	cmp.w	r4, r3, lsl #24
    cf38:	d10e      	bne.n	cf58 <strcmp+0x210>
    cf3a:	f850 2b04 	ldr.w	r2, [r0], #4
    cf3e:	e7eb      	b.n	cf18 <strcmp+0x1d0>
    cf40:	ea4f 2313 	mov.w	r3, r3, lsr #8
    cf44:	e055      	b.n	cff2 <strcmp+0x2aa>
    cf46:	f035 457f 	bics.w	r5, r5, #4278190080	; 0xff000000
    cf4a:	d14d      	bne.n	cfe8 <strcmp+0x2a0>
    cf4c:	7808      	ldrb	r0, [r1, #0]
    cf4e:	e8fd 4504 	ldrd	r4, r5, [sp], #16
    cf52:	f1c0 0000 	rsb	r0, r0, #0
    cf56:	4770      	bx	lr
    cf58:	ea4f 6212 	mov.w	r2, r2, lsr #24
    cf5c:	f003 03ff 	and.w	r3, r3, #255	; 0xff
    cf60:	e047      	b.n	cff2 <strcmp+0x2aa>
    cf62:	ea02 441c 	and.w	r4, r2, ip, lsr #16
    cf66:	fa82 f54c 	uadd8	r5, r2, ip
    cf6a:	ea94 4513 	eors.w	r5, r4, r3, lsr #16
    cf6e:	faa5 f58c 	sel	r5, r5, ip
    cf72:	d10a      	bne.n	cf8a <strcmp+0x242>
    cf74:	b965      	cbnz	r5, cf90 <strcmp+0x248>
    cf76:	f851 3b04 	ldr.w	r3, [r1], #4
    cf7a:	ea84 0402 	eor.w	r4, r4, r2
    cf7e:	ebb4 4f03 	cmp.w	r4, r3, lsl #16
    cf82:	d10c      	bne.n	cf9e <strcmp+0x256>
    cf84:	f850 2b04 	ldr.w	r2, [r0], #4
    cf88:	e7eb      	b.n	cf62 <strcmp+0x21a>
    cf8a:	ea4f 4313 	mov.w	r3, r3, lsr #16
    cf8e:	e030      	b.n	cff2 <strcmp+0x2aa>
    cf90:	ea15 451c 	ands.w	r5, r5, ip, lsr #16
    cf94:	d128      	bne.n	cfe8 <strcmp+0x2a0>
    cf96:	880b      	ldrh	r3, [r1, #0]
    cf98:	ea4f 4212 	mov.w	r2, r2, lsr #16
    cf9c:	e029      	b.n	cff2 <strcmp+0x2aa>
    cf9e:	ea4f 4212 	mov.w	r2, r2, lsr #16
    cfa2:	ea03 431c 	and.w	r3, r3, ip, lsr #16
    cfa6:	e024      	b.n	cff2 <strcmp+0x2aa>
    cfa8:	f002 04ff 	and.w	r4, r2, #255	; 0xff
    cfac:	fa82 f54c 	uadd8	r5, r2, ip
    cfb0:	ea94 6513 	eors.w	r5, r4, r3, lsr #24
    cfb4:	faa5 f58c 	sel	r5, r5, ip
    cfb8:	d10a      	bne.n	cfd0 <strcmp+0x288>
    cfba:	b965      	cbnz	r5, cfd6 <strcmp+0x28e>
    cfbc:	f851 3b04 	ldr.w	r3, [r1], #4
    cfc0:	ea84 0402 	eor.w	r4, r4, r2
    cfc4:	ebb4 2f03 	cmp.w	r4, r3, lsl #8
    cfc8:	d109      	bne.n	cfde <strcmp+0x296>
    cfca:	f850 2b04 	ldr.w	r2, [r0], #4
    cfce:	e7eb      	b.n	cfa8 <strcmp+0x260>
    cfd0:	ea4f 6313 	mov.w	r3, r3, lsr #24
    cfd4:	e00d      	b.n	cff2 <strcmp+0x2aa>
    cfd6:	f015 0fff 	tst.w	r5, #255	; 0xff
    cfda:	d105      	bne.n	cfe8 <strcmp+0x2a0>
    cfdc:	680b      	ldr	r3, [r1, #0]
    cfde:	ea4f 2212 	mov.w	r2, r2, lsr #8
    cfe2:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
    cfe6:	e004      	b.n	cff2 <strcmp+0x2aa>
    cfe8:	f04f 0000 	mov.w	r0, #0
    cfec:	e8fd 4504 	ldrd	r4, r5, [sp], #16
    cff0:	4770      	bx	lr
    cff2:	ba12      	rev	r2, r2
    cff4:	ba1b      	rev	r3, r3
    cff6:	fa82 f44c 	uadd8	r4, r2, ip
    cffa:	ea82 0403 	eor.w	r4, r2, r3
    cffe:	faa4 f58c 	sel	r5, r4, ip
    d002:	fab5 f485 	clz	r4, r5
    d006:	fa02 f204 	lsl.w	r2, r2, r4
    d00a:	fa03 f304 	lsl.w	r3, r3, r4
    d00e:	ea4f 6012 	mov.w	r0, r2, lsr #24
    d012:	e8fd 4504 	ldrd	r4, r5, [sp], #16
    d016:	eba0 6013 	sub.w	r0, r0, r3, lsr #24
    d01a:	4770      	bx	lr

0000d01c <__swsetup_r>:
    d01c:	b538      	push	{r3, r4, r5, lr}
    d01e:	4b31      	ldr	r3, [pc, #196]	; (d0e4 <__swsetup_r+0xc8>)
    d020:	681b      	ldr	r3, [r3, #0]
    d022:	4605      	mov	r5, r0
    d024:	460c      	mov	r4, r1
    d026:	b113      	cbz	r3, d02e <__swsetup_r+0x12>
    d028:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    d02a:	2a00      	cmp	r2, #0
    d02c:	d04e      	beq.n	d0cc <__swsetup_r+0xb0>
    d02e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    d032:	0718      	lsls	r0, r3, #28
    d034:	b29a      	uxth	r2, r3
    d036:	d51c      	bpl.n	d072 <__swsetup_r+0x56>
    d038:	6921      	ldr	r1, [r4, #16]
    d03a:	b329      	cbz	r1, d088 <__swsetup_r+0x6c>
    d03c:	f012 0001 	ands.w	r0, r2, #1
    d040:	d007      	beq.n	d052 <__swsetup_r+0x36>
    d042:	2000      	movs	r0, #0
    d044:	60a0      	str	r0, [r4, #8]
    d046:	6960      	ldr	r0, [r4, #20]
    d048:	4240      	negs	r0, r0
    d04a:	61a0      	str	r0, [r4, #24]
    d04c:	b139      	cbz	r1, d05e <__swsetup_r+0x42>
    d04e:	2000      	movs	r0, #0
    d050:	bd38      	pop	{r3, r4, r5, pc}
    d052:	0795      	lsls	r5, r2, #30
    d054:	bf58      	it	pl
    d056:	6960      	ldrpl	r0, [r4, #20]
    d058:	60a0      	str	r0, [r4, #8]
    d05a:	2900      	cmp	r1, #0
    d05c:	d1f7      	bne.n	d04e <__swsetup_r+0x32>
    d05e:	0612      	lsls	r2, r2, #24
    d060:	bf58      	it	pl
    d062:	4608      	movpl	r0, r1
    d064:	d5f4      	bpl.n	d050 <__swsetup_r+0x34>
    d066:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    d06a:	81a3      	strh	r3, [r4, #12]
    d06c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d070:	bd38      	pop	{r3, r4, r5, pc}
    d072:	06d1      	lsls	r1, r2, #27
    d074:	d52e      	bpl.n	d0d4 <__swsetup_r+0xb8>
    d076:	0752      	lsls	r2, r2, #29
    d078:	d414      	bmi.n	d0a4 <__swsetup_r+0x88>
    d07a:	6921      	ldr	r1, [r4, #16]
    d07c:	f043 0308 	orr.w	r3, r3, #8
    d080:	81a3      	strh	r3, [r4, #12]
    d082:	b29a      	uxth	r2, r3
    d084:	2900      	cmp	r1, #0
    d086:	d1d9      	bne.n	d03c <__swsetup_r+0x20>
    d088:	f402 7020 	and.w	r0, r2, #640	; 0x280
    d08c:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
    d090:	d0d4      	beq.n	d03c <__swsetup_r+0x20>
    d092:	4621      	mov	r1, r4
    d094:	4628      	mov	r0, r5
    d096:	f000 f827 	bl	d0e8 <__smakebuf_r>
    d09a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    d09e:	6921      	ldr	r1, [r4, #16]
    d0a0:	b29a      	uxth	r2, r3
    d0a2:	e7cb      	b.n	d03c <__swsetup_r+0x20>
    d0a4:	6b21      	ldr	r1, [r4, #48]	; 0x30
    d0a6:	b151      	cbz	r1, d0be <__swsetup_r+0xa2>
    d0a8:	f104 0240 	add.w	r2, r4, #64	; 0x40
    d0ac:	4291      	cmp	r1, r2
    d0ae:	d004      	beq.n	d0ba <__swsetup_r+0x9e>
    d0b0:	4628      	mov	r0, r5
    d0b2:	f002 f8cd 	bl	f250 <_free_r>
    d0b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    d0ba:	2200      	movs	r2, #0
    d0bc:	6322      	str	r2, [r4, #48]	; 0x30
    d0be:	6921      	ldr	r1, [r4, #16]
    d0c0:	2200      	movs	r2, #0
    d0c2:	e9c4 1200 	strd	r1, r2, [r4]
    d0c6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
    d0ca:	e7d7      	b.n	d07c <__swsetup_r+0x60>
    d0cc:	4618      	mov	r0, r3
    d0ce:	f001 fd43 	bl	eb58 <__sinit>
    d0d2:	e7ac      	b.n	d02e <__swsetup_r+0x12>
    d0d4:	2209      	movs	r2, #9
    d0d6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    d0da:	602a      	str	r2, [r5, #0]
    d0dc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d0e0:	81a3      	strh	r3, [r4, #12]
    d0e2:	bd38      	pop	{r3, r4, r5, pc}
    d0e4:	200026f4 	.word	0x200026f4

0000d0e8 <__smakebuf_r>:
    d0e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d0ec:	898b      	ldrh	r3, [r1, #12]
    d0ee:	460c      	mov	r4, r1
    d0f0:	0799      	lsls	r1, r3, #30
    d0f2:	b096      	sub	sp, #88	; 0x58
    d0f4:	d508      	bpl.n	d108 <__smakebuf_r+0x20>
    d0f6:	f104 0343 	add.w	r3, r4, #67	; 0x43
    d0fa:	2201      	movs	r2, #1
    d0fc:	e9c4 3204 	strd	r3, r2, [r4, #16]
    d100:	6023      	str	r3, [r4, #0]
    d102:	b016      	add	sp, #88	; 0x58
    d104:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d108:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    d10c:	2900      	cmp	r1, #0
    d10e:	4606      	mov	r6, r0
    d110:	db25      	blt.n	d15e <__smakebuf_r+0x76>
    d112:	466a      	mov	r2, sp
    d114:	f002 f9a2 	bl	f45c <_fstat_r>
    d118:	2800      	cmp	r0, #0
    d11a:	db1f      	blt.n	d15c <__smakebuf_r+0x74>
    d11c:	9d01      	ldr	r5, [sp, #4]
    d11e:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
    d122:	f5a5 5500 	sub.w	r5, r5, #8192	; 0x2000
    d126:	fab5 f585 	clz	r5, r5
    d12a:	f44f 6880 	mov.w	r8, #1024	; 0x400
    d12e:	096d      	lsrs	r5, r5, #5
    d130:	f44f 6700 	mov.w	r7, #2048	; 0x800
    d134:	4641      	mov	r1, r8
    d136:	4630      	mov	r0, r6
    d138:	f7ff f9d0 	bl	c4dc <_malloc_r>
    d13c:	b1e0      	cbz	r0, d178 <__smakebuf_r+0x90>
    d13e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    d142:	f8c4 8014 	str.w	r8, [r4, #20]
    d146:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    d14a:	6020      	str	r0, [r4, #0]
    d14c:	6120      	str	r0, [r4, #16]
    d14e:	81a3      	strh	r3, [r4, #12]
    d150:	bb35      	cbnz	r5, d1a0 <__smakebuf_r+0xb8>
    d152:	433b      	orrs	r3, r7
    d154:	81a3      	strh	r3, [r4, #12]
    d156:	b016      	add	sp, #88	; 0x58
    d158:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d15c:	89a3      	ldrh	r3, [r4, #12]
    d15e:	f013 0580 	ands.w	r5, r3, #128	; 0x80
    d162:	d019      	beq.n	d198 <__smakebuf_r+0xb0>
    d164:	f04f 0840 	mov.w	r8, #64	; 0x40
    d168:	2500      	movs	r5, #0
    d16a:	4641      	mov	r1, r8
    d16c:	4630      	mov	r0, r6
    d16e:	462f      	mov	r7, r5
    d170:	f7ff f9b4 	bl	c4dc <_malloc_r>
    d174:	2800      	cmp	r0, #0
    d176:	d1e2      	bne.n	d13e <__smakebuf_r+0x56>
    d178:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    d17c:	059a      	lsls	r2, r3, #22
    d17e:	d4c0      	bmi.n	d102 <__smakebuf_r+0x1a>
    d180:	f023 0303 	bic.w	r3, r3, #3
    d184:	f104 0243 	add.w	r2, r4, #67	; 0x43
    d188:	f043 0302 	orr.w	r3, r3, #2
    d18c:	2101      	movs	r1, #1
    d18e:	e9c4 2104 	strd	r2, r1, [r4, #16]
    d192:	81a3      	strh	r3, [r4, #12]
    d194:	6022      	str	r2, [r4, #0]
    d196:	e7b4      	b.n	d102 <__smakebuf_r+0x1a>
    d198:	f44f 6880 	mov.w	r8, #1024	; 0x400
    d19c:	462f      	mov	r7, r5
    d19e:	e7c9      	b.n	d134 <__smakebuf_r+0x4c>
    d1a0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    d1a4:	4630      	mov	r0, r6
    d1a6:	f002 f96f 	bl	f488 <_isatty_r>
    d1aa:	b910      	cbnz	r0, d1b2 <__smakebuf_r+0xca>
    d1ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    d1b0:	e7cf      	b.n	d152 <__smakebuf_r+0x6a>
    d1b2:	89a3      	ldrh	r3, [r4, #12]
    d1b4:	f023 0303 	bic.w	r3, r3, #3
    d1b8:	f043 0301 	orr.w	r3, r3, #1
    d1bc:	b21b      	sxth	r3, r3
    d1be:	e7c8      	b.n	d152 <__smakebuf_r+0x6a>

0000d1c0 <_putc_r>:
    d1c0:	b570      	push	{r4, r5, r6, lr}
    d1c2:	460e      	mov	r6, r1
    d1c4:	4614      	mov	r4, r2
    d1c6:	4605      	mov	r5, r0
    d1c8:	b110      	cbz	r0, d1d0 <_putc_r+0x10>
    d1ca:	6b43      	ldr	r3, [r0, #52]	; 0x34
    d1cc:	2b00      	cmp	r3, #0
    d1ce:	d02f      	beq.n	d230 <_putc_r+0x70>
    d1d0:	6e63      	ldr	r3, [r4, #100]	; 0x64
    d1d2:	07d8      	lsls	r0, r3, #31
    d1d4:	d402      	bmi.n	d1dc <_putc_r+0x1c>
    d1d6:	89a3      	ldrh	r3, [r4, #12]
    d1d8:	0599      	lsls	r1, r3, #22
    d1da:	d520      	bpl.n	d21e <_putc_r+0x5e>
    d1dc:	68a3      	ldr	r3, [r4, #8]
    d1de:	3b01      	subs	r3, #1
    d1e0:	2b00      	cmp	r3, #0
    d1e2:	60a3      	str	r3, [r4, #8]
    d1e4:	da19      	bge.n	d21a <_putc_r+0x5a>
    d1e6:	69a2      	ldr	r2, [r4, #24]
    d1e8:	4293      	cmp	r3, r2
    d1ea:	db0f      	blt.n	d20c <_putc_r+0x4c>
    d1ec:	b2f0      	uxtb	r0, r6
    d1ee:	280a      	cmp	r0, #10
    d1f0:	d00c      	beq.n	d20c <_putc_r+0x4c>
    d1f2:	6823      	ldr	r3, [r4, #0]
    d1f4:	1c5a      	adds	r2, r3, #1
    d1f6:	6022      	str	r2, [r4, #0]
    d1f8:	4605      	mov	r5, r0
    d1fa:	701e      	strb	r6, [r3, #0]
    d1fc:	6e63      	ldr	r3, [r4, #100]	; 0x64
    d1fe:	07da      	lsls	r2, r3, #31
    d200:	d402      	bmi.n	d208 <_putc_r+0x48>
    d202:	89a3      	ldrh	r3, [r4, #12]
    d204:	059b      	lsls	r3, r3, #22
    d206:	d50e      	bpl.n	d226 <_putc_r+0x66>
    d208:	4628      	mov	r0, r5
    d20a:	bd70      	pop	{r4, r5, r6, pc}
    d20c:	4628      	mov	r0, r5
    d20e:	4622      	mov	r2, r4
    d210:	4631      	mov	r1, r6
    d212:	f003 fac1 	bl	10798 <__swbuf_r>
    d216:	4605      	mov	r5, r0
    d218:	e7f0      	b.n	d1fc <_putc_r+0x3c>
    d21a:	b2f0      	uxtb	r0, r6
    d21c:	e7e9      	b.n	d1f2 <_putc_r+0x32>
    d21e:	6da0      	ldr	r0, [r4, #88]	; 0x58
    d220:	f7ff fd7e 	bl	cd20 <__retarget_lock_acquire_recursive>
    d224:	e7da      	b.n	d1dc <_putc_r+0x1c>
    d226:	6da0      	ldr	r0, [r4, #88]	; 0x58
    d228:	f7ff fd7c 	bl	cd24 <__retarget_lock_release_recursive>
    d22c:	4628      	mov	r0, r5
    d22e:	bd70      	pop	{r4, r5, r6, pc}
    d230:	f001 fc92 	bl	eb58 <__sinit>
    d234:	e7cc      	b.n	d1d0 <_putc_r+0x10>
    d236:	bf00      	nop

0000d238 <__malloc_lock>:
    d238:	4801      	ldr	r0, [pc, #4]	; (d240 <__malloc_lock+0x8>)
    d23a:	f7ff bd71 	b.w	cd20 <__retarget_lock_acquire_recursive>
    d23e:	bf00      	nop
    d240:	20002e7c 	.word	0x20002e7c

0000d244 <__malloc_unlock>:
    d244:	4801      	ldr	r0, [pc, #4]	; (d24c <__malloc_unlock+0x8>)
    d246:	f7ff bd6d 	b.w	cd24 <__retarget_lock_release_recursive>
    d24a:	bf00      	nop
    d24c:	20002e7c 	.word	0x20002e7c

0000d250 <_Balloc>:
    d250:	6c43      	ldr	r3, [r0, #68]	; 0x44
    d252:	b570      	push	{r4, r5, r6, lr}
    d254:	4605      	mov	r5, r0
    d256:	460c      	mov	r4, r1
    d258:	b14b      	cbz	r3, d26e <_Balloc+0x1e>
    d25a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    d25e:	b180      	cbz	r0, d282 <_Balloc+0x32>
    d260:	6802      	ldr	r2, [r0, #0]
    d262:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
    d266:	2300      	movs	r3, #0
    d268:	e9c0 3303 	strd	r3, r3, [r0, #12]
    d26c:	bd70      	pop	{r4, r5, r6, pc}
    d26e:	2221      	movs	r2, #33	; 0x21
    d270:	2104      	movs	r1, #4
    d272:	f000 fba9 	bl	d9c8 <_calloc_r>
    d276:	4603      	mov	r3, r0
    d278:	6468      	str	r0, [r5, #68]	; 0x44
    d27a:	2800      	cmp	r0, #0
    d27c:	d1ed      	bne.n	d25a <_Balloc+0xa>
    d27e:	2000      	movs	r0, #0
    d280:	bd70      	pop	{r4, r5, r6, pc}
    d282:	2101      	movs	r1, #1
    d284:	fa01 f604 	lsl.w	r6, r1, r4
    d288:	1d72      	adds	r2, r6, #5
    d28a:	0092      	lsls	r2, r2, #2
    d28c:	4628      	mov	r0, r5
    d28e:	f000 fb9b 	bl	d9c8 <_calloc_r>
    d292:	2800      	cmp	r0, #0
    d294:	d0f3      	beq.n	d27e <_Balloc+0x2e>
    d296:	e9c0 4601 	strd	r4, r6, [r0, #4]
    d29a:	e7e4      	b.n	d266 <_Balloc+0x16>

0000d29c <_Bfree>:
    d29c:	b131      	cbz	r1, d2ac <_Bfree+0x10>
    d29e:	6c43      	ldr	r3, [r0, #68]	; 0x44
    d2a0:	684a      	ldr	r2, [r1, #4]
    d2a2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
    d2a6:	6008      	str	r0, [r1, #0]
    d2a8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    d2ac:	4770      	bx	lr
    d2ae:	bf00      	nop

0000d2b0 <__multadd>:
    d2b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d2b4:	690e      	ldr	r6, [r1, #16]
    d2b6:	4680      	mov	r8, r0
    d2b8:	460f      	mov	r7, r1
    d2ba:	461d      	mov	r5, r3
    d2bc:	f101 0e14 	add.w	lr, r1, #20
    d2c0:	2000      	movs	r0, #0
    d2c2:	f8de 1000 	ldr.w	r1, [lr]
    d2c6:	b28c      	uxth	r4, r1
    d2c8:	fb02 5304 	mla	r3, r2, r4, r5
    d2cc:	0c09      	lsrs	r1, r1, #16
    d2ce:	ea4f 4c13 	mov.w	ip, r3, lsr #16
    d2d2:	fb02 cc01 	mla	ip, r2, r1, ip
    d2d6:	3001      	adds	r0, #1
    d2d8:	b29c      	uxth	r4, r3
    d2da:	eb04 440c 	add.w	r4, r4, ip, lsl #16
    d2de:	4286      	cmp	r6, r0
    d2e0:	f84e 4b04 	str.w	r4, [lr], #4
    d2e4:	ea4f 451c 	mov.w	r5, ip, lsr #16
    d2e8:	dceb      	bgt.n	d2c2 <__multadd+0x12>
    d2ea:	b13d      	cbz	r5, d2fc <__multadd+0x4c>
    d2ec:	68bb      	ldr	r3, [r7, #8]
    d2ee:	42b3      	cmp	r3, r6
    d2f0:	dd07      	ble.n	d302 <__multadd+0x52>
    d2f2:	eb07 0386 	add.w	r3, r7, r6, lsl #2
    d2f6:	3601      	adds	r6, #1
    d2f8:	615d      	str	r5, [r3, #20]
    d2fa:	613e      	str	r6, [r7, #16]
    d2fc:	4638      	mov	r0, r7
    d2fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d302:	6879      	ldr	r1, [r7, #4]
    d304:	4640      	mov	r0, r8
    d306:	3101      	adds	r1, #1
    d308:	f7ff ffa2 	bl	d250 <_Balloc>
    d30c:	4604      	mov	r4, r0
    d30e:	b1b0      	cbz	r0, d33e <__multadd+0x8e>
    d310:	693a      	ldr	r2, [r7, #16]
    d312:	3202      	adds	r2, #2
    d314:	f107 010c 	add.w	r1, r7, #12
    d318:	0092      	lsls	r2, r2, #2
    d31a:	300c      	adds	r0, #12
    d31c:	f7f3 f982 	bl	624 <memcpy>
    d320:	f8d8 3044 	ldr.w	r3, [r8, #68]	; 0x44
    d324:	687a      	ldr	r2, [r7, #4]
    d326:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    d32a:	6039      	str	r1, [r7, #0]
    d32c:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
    d330:	4627      	mov	r7, r4
    d332:	eb07 0386 	add.w	r3, r7, r6, lsl #2
    d336:	3601      	adds	r6, #1
    d338:	615d      	str	r5, [r3, #20]
    d33a:	613e      	str	r6, [r7, #16]
    d33c:	e7de      	b.n	d2fc <__multadd+0x4c>
    d33e:	4b03      	ldr	r3, [pc, #12]	; (d34c <__multadd+0x9c>)
    d340:	4803      	ldr	r0, [pc, #12]	; (d350 <__multadd+0xa0>)
    d342:	4622      	mov	r2, r4
    d344:	21ba      	movs	r1, #186	; 0xba
    d346:	f7ff fc25 	bl	cb94 <__assert_func>
    d34a:	bf00      	nop
    d34c:	200008b4 	.word	0x200008b4
    d350:	200008c8 	.word	0x200008c8

0000d354 <__hi0bits>:
    d354:	0c03      	lsrs	r3, r0, #16
    d356:	041b      	lsls	r3, r3, #16
    d358:	b9d3      	cbnz	r3, d390 <__hi0bits+0x3c>
    d35a:	0400      	lsls	r0, r0, #16
    d35c:	2310      	movs	r3, #16
    d35e:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
    d362:	bf04      	itt	eq
    d364:	0200      	lsleq	r0, r0, #8
    d366:	3308      	addeq	r3, #8
    d368:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
    d36c:	bf04      	itt	eq
    d36e:	0100      	lsleq	r0, r0, #4
    d370:	3304      	addeq	r3, #4
    d372:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
    d376:	bf04      	itt	eq
    d378:	0080      	lsleq	r0, r0, #2
    d37a:	3302      	addeq	r3, #2
    d37c:	2800      	cmp	r0, #0
    d37e:	db05      	blt.n	d38c <__hi0bits+0x38>
    d380:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
    d384:	f103 0301 	add.w	r3, r3, #1
    d388:	bf08      	it	eq
    d38a:	2320      	moveq	r3, #32
    d38c:	4618      	mov	r0, r3
    d38e:	4770      	bx	lr
    d390:	2300      	movs	r3, #0
    d392:	e7e4      	b.n	d35e <__hi0bits+0xa>

0000d394 <__lo0bits>:
    d394:	6803      	ldr	r3, [r0, #0]
    d396:	f013 0207 	ands.w	r2, r3, #7
    d39a:	d008      	beq.n	d3ae <__lo0bits+0x1a>
    d39c:	07d9      	lsls	r1, r3, #31
    d39e:	d41f      	bmi.n	d3e0 <__lo0bits+0x4c>
    d3a0:	079a      	lsls	r2, r3, #30
    d3a2:	d522      	bpl.n	d3ea <__lo0bits+0x56>
    d3a4:	085b      	lsrs	r3, r3, #1
    d3a6:	6003      	str	r3, [r0, #0]
    d3a8:	2201      	movs	r2, #1
    d3aa:	4610      	mov	r0, r2
    d3ac:	4770      	bx	lr
    d3ae:	b299      	uxth	r1, r3
    d3b0:	b909      	cbnz	r1, d3b6 <__lo0bits+0x22>
    d3b2:	0c1b      	lsrs	r3, r3, #16
    d3b4:	2210      	movs	r2, #16
    d3b6:	b2d9      	uxtb	r1, r3
    d3b8:	b909      	cbnz	r1, d3be <__lo0bits+0x2a>
    d3ba:	3208      	adds	r2, #8
    d3bc:	0a1b      	lsrs	r3, r3, #8
    d3be:	0719      	lsls	r1, r3, #28
    d3c0:	bf04      	itt	eq
    d3c2:	091b      	lsreq	r3, r3, #4
    d3c4:	3204      	addeq	r2, #4
    d3c6:	0799      	lsls	r1, r3, #30
    d3c8:	bf04      	itt	eq
    d3ca:	089b      	lsreq	r3, r3, #2
    d3cc:	3202      	addeq	r2, #2
    d3ce:	07d9      	lsls	r1, r3, #31
    d3d0:	d403      	bmi.n	d3da <__lo0bits+0x46>
    d3d2:	085b      	lsrs	r3, r3, #1
    d3d4:	f102 0201 	add.w	r2, r2, #1
    d3d8:	d005      	beq.n	d3e6 <__lo0bits+0x52>
    d3da:	6003      	str	r3, [r0, #0]
    d3dc:	4610      	mov	r0, r2
    d3de:	4770      	bx	lr
    d3e0:	2200      	movs	r2, #0
    d3e2:	4610      	mov	r0, r2
    d3e4:	4770      	bx	lr
    d3e6:	2220      	movs	r2, #32
    d3e8:	e7df      	b.n	d3aa <__lo0bits+0x16>
    d3ea:	089b      	lsrs	r3, r3, #2
    d3ec:	2202      	movs	r2, #2
    d3ee:	6003      	str	r3, [r0, #0]
    d3f0:	4610      	mov	r0, r2
    d3f2:	4770      	bx	lr

0000d3f4 <__i2b>:
    d3f4:	b538      	push	{r3, r4, r5, lr}
    d3f6:	6c43      	ldr	r3, [r0, #68]	; 0x44
    d3f8:	4604      	mov	r4, r0
    d3fa:	460d      	mov	r5, r1
    d3fc:	b14b      	cbz	r3, d412 <__i2b+0x1e>
    d3fe:	6858      	ldr	r0, [r3, #4]
    d400:	b1b0      	cbz	r0, d430 <__i2b+0x3c>
    d402:	6802      	ldr	r2, [r0, #0]
    d404:	605a      	str	r2, [r3, #4]
    d406:	2200      	movs	r2, #0
    d408:	2301      	movs	r3, #1
    d40a:	e9c0 3504 	strd	r3, r5, [r0, #16]
    d40e:	60c2      	str	r2, [r0, #12]
    d410:	bd38      	pop	{r3, r4, r5, pc}
    d412:	2221      	movs	r2, #33	; 0x21
    d414:	2104      	movs	r1, #4
    d416:	f000 fad7 	bl	d9c8 <_calloc_r>
    d41a:	4603      	mov	r3, r0
    d41c:	6460      	str	r0, [r4, #68]	; 0x44
    d41e:	2800      	cmp	r0, #0
    d420:	d1ed      	bne.n	d3fe <__i2b+0xa>
    d422:	4b09      	ldr	r3, [pc, #36]	; (d448 <__i2b+0x54>)
    d424:	4809      	ldr	r0, [pc, #36]	; (d44c <__i2b+0x58>)
    d426:	2200      	movs	r2, #0
    d428:	f240 1145 	movw	r1, #325	; 0x145
    d42c:	f7ff fbb2 	bl	cb94 <__assert_func>
    d430:	221c      	movs	r2, #28
    d432:	2101      	movs	r1, #1
    d434:	4620      	mov	r0, r4
    d436:	f000 fac7 	bl	d9c8 <_calloc_r>
    d43a:	2800      	cmp	r0, #0
    d43c:	d0f1      	beq.n	d422 <__i2b+0x2e>
    d43e:	2201      	movs	r2, #1
    d440:	2302      	movs	r3, #2
    d442:	e9c0 2301 	strd	r2, r3, [r0, #4]
    d446:	e7de      	b.n	d406 <__i2b+0x12>
    d448:	200008b4 	.word	0x200008b4
    d44c:	200008c8 	.word	0x200008c8

0000d450 <__multiply>:
    d450:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d454:	690e      	ldr	r6, [r1, #16]
    d456:	6915      	ldr	r5, [r2, #16]
    d458:	42ae      	cmp	r6, r5
    d45a:	b085      	sub	sp, #20
    d45c:	4688      	mov	r8, r1
    d45e:	4614      	mov	r4, r2
    d460:	db05      	blt.n	d46e <__multiply+0x1e>
    d462:	462a      	mov	r2, r5
    d464:	4623      	mov	r3, r4
    d466:	4635      	mov	r5, r6
    d468:	460c      	mov	r4, r1
    d46a:	4616      	mov	r6, r2
    d46c:	4698      	mov	r8, r3
    d46e:	68a3      	ldr	r3, [r4, #8]
    d470:	6861      	ldr	r1, [r4, #4]
    d472:	19af      	adds	r7, r5, r6
    d474:	42bb      	cmp	r3, r7
    d476:	bfb8      	it	lt
    d478:	3101      	addlt	r1, #1
    d47a:	f7ff fee9 	bl	d250 <_Balloc>
    d47e:	9001      	str	r0, [sp, #4]
    d480:	2800      	cmp	r0, #0
    d482:	f000 8087 	beq.w	d594 <__multiply+0x144>
    d486:	9b01      	ldr	r3, [sp, #4]
    d488:	f103 0914 	add.w	r9, r3, #20
    d48c:	eb09 0a87 	add.w	sl, r9, r7, lsl #2
    d490:	45d1      	cmp	r9, sl
    d492:	d205      	bcs.n	d4a0 <__multiply+0x50>
    d494:	464b      	mov	r3, r9
    d496:	2200      	movs	r2, #0
    d498:	f843 2b04 	str.w	r2, [r3], #4
    d49c:	459a      	cmp	sl, r3
    d49e:	d8fb      	bhi.n	d498 <__multiply+0x48>
    d4a0:	f108 0814 	add.w	r8, r8, #20
    d4a4:	eb08 0b86 	add.w	fp, r8, r6, lsl #2
    d4a8:	f104 0314 	add.w	r3, r4, #20
    d4ac:	45d8      	cmp	r8, fp
    d4ae:	461a      	mov	r2, r3
    d4b0:	eb03 0585 	add.w	r5, r3, r5, lsl #2
    d4b4:	d25f      	bcs.n	d576 <__multiply+0x126>
    d4b6:	1b2b      	subs	r3, r5, r4
    d4b8:	3b15      	subs	r3, #21
    d4ba:	f023 0303 	bic.w	r3, r3, #3
    d4be:	3304      	adds	r3, #4
    d4c0:	3415      	adds	r4, #21
    d4c2:	42a5      	cmp	r5, r4
    d4c4:	bf38      	it	cc
    d4c6:	2304      	movcc	r3, #4
    d4c8:	e9cd a702 	strd	sl, r7, [sp, #8]
    d4cc:	46ac      	mov	ip, r5
    d4ce:	461f      	mov	r7, r3
    d4d0:	4692      	mov	sl, r2
    d4d2:	e005      	b.n	d4e0 <__multiply+0x90>
    d4d4:	0c09      	lsrs	r1, r1, #16
    d4d6:	d129      	bne.n	d52c <__multiply+0xdc>
    d4d8:	45c3      	cmp	fp, r8
    d4da:	f109 0904 	add.w	r9, r9, #4
    d4de:	d948      	bls.n	d572 <__multiply+0x122>
    d4e0:	f858 1b04 	ldr.w	r1, [r8], #4
    d4e4:	b28d      	uxth	r5, r1
    d4e6:	2d00      	cmp	r5, #0
    d4e8:	d0f4      	beq.n	d4d4 <__multiply+0x84>
    d4ea:	4656      	mov	r6, sl
    d4ec:	464c      	mov	r4, r9
    d4ee:	2300      	movs	r3, #0
    d4f0:	f856 1b04 	ldr.w	r1, [r6], #4
    d4f4:	6822      	ldr	r2, [r4, #0]
    d4f6:	fa1f fe81 	uxth.w	lr, r1
    d4fa:	b290      	uxth	r0, r2
    d4fc:	0c09      	lsrs	r1, r1, #16
    d4fe:	fb05 000e 	mla	r0, r5, lr, r0
    d502:	0c12      	lsrs	r2, r2, #16
    d504:	4403      	add	r3, r0
    d506:	fb05 2201 	mla	r2, r5, r1, r2
    d50a:	eb02 4213 	add.w	r2, r2, r3, lsr #16
    d50e:	b29b      	uxth	r3, r3
    d510:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    d514:	45b4      	cmp	ip, r6
    d516:	f844 3b04 	str.w	r3, [r4], #4
    d51a:	ea4f 4312 	mov.w	r3, r2, lsr #16
    d51e:	d8e7      	bhi.n	d4f0 <__multiply+0xa0>
    d520:	f849 3007 	str.w	r3, [r9, r7]
    d524:	f858 1c04 	ldr.w	r1, [r8, #-4]
    d528:	0c09      	lsrs	r1, r1, #16
    d52a:	d0d5      	beq.n	d4d8 <__multiply+0x88>
    d52c:	f8d9 3000 	ldr.w	r3, [r9]
    d530:	4650      	mov	r0, sl
    d532:	461a      	mov	r2, r3
    d534:	464c      	mov	r4, r9
    d536:	2600      	movs	r6, #0
    d538:	8805      	ldrh	r5, [r0, #0]
    d53a:	0c12      	lsrs	r2, r2, #16
    d53c:	fb01 2205 	mla	r2, r1, r5, r2
    d540:	4416      	add	r6, r2
    d542:	b29b      	uxth	r3, r3
    d544:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
    d548:	f844 3b04 	str.w	r3, [r4], #4
    d54c:	f850 5b04 	ldr.w	r5, [r0], #4
    d550:	6822      	ldr	r2, [r4, #0]
    d552:	0c2d      	lsrs	r5, r5, #16
    d554:	b293      	uxth	r3, r2
    d556:	fb01 3305 	mla	r3, r1, r5, r3
    d55a:	eb03 4316 	add.w	r3, r3, r6, lsr #16
    d55e:	4584      	cmp	ip, r0
    d560:	ea4f 4613 	mov.w	r6, r3, lsr #16
    d564:	d8e8      	bhi.n	d538 <__multiply+0xe8>
    d566:	45c3      	cmp	fp, r8
    d568:	f849 3007 	str.w	r3, [r9, r7]
    d56c:	f109 0904 	add.w	r9, r9, #4
    d570:	d8b6      	bhi.n	d4e0 <__multiply+0x90>
    d572:	e9dd a702 	ldrd	sl, r7, [sp, #8]
    d576:	2f00      	cmp	r7, #0
    d578:	dc02      	bgt.n	d580 <__multiply+0x130>
    d57a:	e005      	b.n	d588 <__multiply+0x138>
    d57c:	3f01      	subs	r7, #1
    d57e:	d003      	beq.n	d588 <__multiply+0x138>
    d580:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
    d584:	2b00      	cmp	r3, #0
    d586:	d0f9      	beq.n	d57c <__multiply+0x12c>
    d588:	9b01      	ldr	r3, [sp, #4]
    d58a:	4618      	mov	r0, r3
    d58c:	611f      	str	r7, [r3, #16]
    d58e:	b005      	add	sp, #20
    d590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d594:	4b03      	ldr	r3, [pc, #12]	; (d5a4 <__multiply+0x154>)
    d596:	4804      	ldr	r0, [pc, #16]	; (d5a8 <__multiply+0x158>)
    d598:	9a01      	ldr	r2, [sp, #4]
    d59a:	f44f 71b1 	mov.w	r1, #354	; 0x162
    d59e:	f7ff faf9 	bl	cb94 <__assert_func>
    d5a2:	bf00      	nop
    d5a4:	200008b4 	.word	0x200008b4
    d5a8:	200008c8 	.word	0x200008c8

0000d5ac <__pow5mult>:
    d5ac:	f012 0303 	ands.w	r3, r2, #3
    d5b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d5b4:	4614      	mov	r4, r2
    d5b6:	4606      	mov	r6, r0
    d5b8:	d132      	bne.n	d620 <__pow5mult+0x74>
    d5ba:	460d      	mov	r5, r1
    d5bc:	10a4      	asrs	r4, r4, #2
    d5be:	d020      	beq.n	d602 <__pow5mult+0x56>
    d5c0:	f8d6 8040 	ldr.w	r8, [r6, #64]	; 0x40
    d5c4:	f1b8 0f00 	cmp.w	r8, #0
    d5c8:	d033      	beq.n	d632 <__pow5mult+0x86>
    d5ca:	07e3      	lsls	r3, r4, #31
    d5cc:	f04f 0700 	mov.w	r7, #0
    d5d0:	d407      	bmi.n	d5e2 <__pow5mult+0x36>
    d5d2:	1064      	asrs	r4, r4, #1
    d5d4:	d015      	beq.n	d602 <__pow5mult+0x56>
    d5d6:	f8d8 0000 	ldr.w	r0, [r8]
    d5da:	b1a8      	cbz	r0, d608 <__pow5mult+0x5c>
    d5dc:	4680      	mov	r8, r0
    d5de:	07e3      	lsls	r3, r4, #31
    d5e0:	d5f7      	bpl.n	d5d2 <__pow5mult+0x26>
    d5e2:	4642      	mov	r2, r8
    d5e4:	4629      	mov	r1, r5
    d5e6:	4630      	mov	r0, r6
    d5e8:	f7ff ff32 	bl	d450 <__multiply>
    d5ec:	b1b5      	cbz	r5, d61c <__pow5mult+0x70>
    d5ee:	6869      	ldr	r1, [r5, #4]
    d5f0:	6c73      	ldr	r3, [r6, #68]	; 0x44
    d5f2:	1064      	asrs	r4, r4, #1
    d5f4:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
    d5f8:	602a      	str	r2, [r5, #0]
    d5fa:	f843 5021 	str.w	r5, [r3, r1, lsl #2]
    d5fe:	4605      	mov	r5, r0
    d600:	d1e9      	bne.n	d5d6 <__pow5mult+0x2a>
    d602:	4628      	mov	r0, r5
    d604:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d608:	4642      	mov	r2, r8
    d60a:	4641      	mov	r1, r8
    d60c:	4630      	mov	r0, r6
    d60e:	f7ff ff1f 	bl	d450 <__multiply>
    d612:	f8c8 0000 	str.w	r0, [r8]
    d616:	6007      	str	r7, [r0, #0]
    d618:	4680      	mov	r8, r0
    d61a:	e7e0      	b.n	d5de <__pow5mult+0x32>
    d61c:	4605      	mov	r5, r0
    d61e:	e7d8      	b.n	d5d2 <__pow5mult+0x26>
    d620:	3b01      	subs	r3, #1
    d622:	4a0f      	ldr	r2, [pc, #60]	; (d660 <__pow5mult+0xb4>)
    d624:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
    d628:	2300      	movs	r3, #0
    d62a:	f7ff fe41 	bl	d2b0 <__multadd>
    d62e:	4605      	mov	r5, r0
    d630:	e7c4      	b.n	d5bc <__pow5mult+0x10>
    d632:	2101      	movs	r1, #1
    d634:	4630      	mov	r0, r6
    d636:	f7ff fe0b 	bl	d250 <_Balloc>
    d63a:	4680      	mov	r8, r0
    d63c:	b140      	cbz	r0, d650 <__pow5mult+0xa4>
    d63e:	2301      	movs	r3, #1
    d640:	f240 2271 	movw	r2, #625	; 0x271
    d644:	e9c0 3204 	strd	r3, r2, [r0, #16]
    d648:	2300      	movs	r3, #0
    d64a:	6430      	str	r0, [r6, #64]	; 0x40
    d64c:	6003      	str	r3, [r0, #0]
    d64e:	e7bc      	b.n	d5ca <__pow5mult+0x1e>
    d650:	4b04      	ldr	r3, [pc, #16]	; (d664 <__pow5mult+0xb8>)
    d652:	4805      	ldr	r0, [pc, #20]	; (d668 <__pow5mult+0xbc>)
    d654:	4642      	mov	r2, r8
    d656:	f240 1145 	movw	r1, #325	; 0x145
    d65a:	f7ff fa9b 	bl	cb94 <__assert_func>
    d65e:	bf00      	nop
    d660:	2000193c 	.word	0x2000193c
    d664:	200008b4 	.word	0x200008b4
    d668:	200008c8 	.word	0x200008c8

0000d66c <__lshift>:
    d66c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    d670:	460d      	mov	r5, r1
    d672:	4614      	mov	r4, r2
    d674:	692f      	ldr	r7, [r5, #16]
    d676:	68ab      	ldr	r3, [r5, #8]
    d678:	6849      	ldr	r1, [r1, #4]
    d67a:	eb07 1762 	add.w	r7, r7, r2, asr #5
    d67e:	1c7e      	adds	r6, r7, #1
    d680:	429e      	cmp	r6, r3
    d682:	4680      	mov	r8, r0
    d684:	ea4f 1962 	mov.w	r9, r2, asr #5
    d688:	dd04      	ble.n	d694 <__lshift+0x28>
    d68a:	005b      	lsls	r3, r3, #1
    d68c:	429e      	cmp	r6, r3
    d68e:	f101 0101 	add.w	r1, r1, #1
    d692:	dcfa      	bgt.n	d68a <__lshift+0x1e>
    d694:	4640      	mov	r0, r8
    d696:	f7ff fddb 	bl	d250 <_Balloc>
    d69a:	4684      	mov	ip, r0
    d69c:	2800      	cmp	r0, #0
    d69e:	d052      	beq.n	d746 <__lshift+0xda>
    d6a0:	f1b9 0f00 	cmp.w	r9, #0
    d6a4:	f100 0214 	add.w	r2, r0, #20
    d6a8:	dd0e      	ble.n	d6c8 <__lshift+0x5c>
    d6aa:	f109 0105 	add.w	r1, r9, #5
    d6ae:	ea4f 0e81 	mov.w	lr, r1, lsl #2
    d6b2:	4613      	mov	r3, r2
    d6b4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
    d6b8:	2000      	movs	r0, #0
    d6ba:	f843 0b04 	str.w	r0, [r3], #4
    d6be:	428b      	cmp	r3, r1
    d6c0:	d1fb      	bne.n	d6ba <__lshift+0x4e>
    d6c2:	f1ae 0314 	sub.w	r3, lr, #20
    d6c6:	441a      	add	r2, r3
    d6c8:	6929      	ldr	r1, [r5, #16]
    d6ca:	f105 0314 	add.w	r3, r5, #20
    d6ce:	f014 0e1f 	ands.w	lr, r4, #31
    d6d2:	eb03 0181 	add.w	r1, r3, r1, lsl #2
    d6d6:	d02e      	beq.n	d736 <__lshift+0xca>
    d6d8:	f1ce 0920 	rsb	r9, lr, #32
    d6dc:	4610      	mov	r0, r2
    d6de:	f04f 0a00 	mov.w	sl, #0
    d6e2:	681c      	ldr	r4, [r3, #0]
    d6e4:	fa04 f40e 	lsl.w	r4, r4, lr
    d6e8:	ea44 040a 	orr.w	r4, r4, sl
    d6ec:	f840 4b04 	str.w	r4, [r0], #4
    d6f0:	f853 4b04 	ldr.w	r4, [r3], #4
    d6f4:	4299      	cmp	r1, r3
    d6f6:	fa24 fa09 	lsr.w	sl, r4, r9
    d6fa:	d8f2      	bhi.n	d6e2 <__lshift+0x76>
    d6fc:	1b4b      	subs	r3, r1, r5
    d6fe:	3b15      	subs	r3, #21
    d700:	f023 0303 	bic.w	r3, r3, #3
    d704:	3304      	adds	r3, #4
    d706:	f105 0015 	add.w	r0, r5, #21
    d70a:	4281      	cmp	r1, r0
    d70c:	bf38      	it	cc
    d70e:	2304      	movcc	r3, #4
    d710:	f1ba 0f00 	cmp.w	sl, #0
    d714:	bf18      	it	ne
    d716:	4637      	movne	r7, r6
    d718:	f842 a003 	str.w	sl, [r2, r3]
    d71c:	f8d8 3044 	ldr.w	r3, [r8, #68]	; 0x44
    d720:	686a      	ldr	r2, [r5, #4]
    d722:	f8cc 7010 	str.w	r7, [ip, #16]
    d726:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    d72a:	6029      	str	r1, [r5, #0]
    d72c:	4660      	mov	r0, ip
    d72e:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
    d732:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    d736:	3a04      	subs	r2, #4
    d738:	f853 0b04 	ldr.w	r0, [r3], #4
    d73c:	f842 0f04 	str.w	r0, [r2, #4]!
    d740:	4299      	cmp	r1, r3
    d742:	d8f9      	bhi.n	d738 <__lshift+0xcc>
    d744:	e7ea      	b.n	d71c <__lshift+0xb0>
    d746:	4b03      	ldr	r3, [pc, #12]	; (d754 <__lshift+0xe8>)
    d748:	4803      	ldr	r0, [pc, #12]	; (d758 <__lshift+0xec>)
    d74a:	4662      	mov	r2, ip
    d74c:	f44f 71ef 	mov.w	r1, #478	; 0x1de
    d750:	f7ff fa20 	bl	cb94 <__assert_func>
    d754:	200008b4 	.word	0x200008b4
    d758:	200008c8 	.word	0x200008c8

0000d75c <__mcmp>:
    d75c:	690b      	ldr	r3, [r1, #16]
    d75e:	4684      	mov	ip, r0
    d760:	6900      	ldr	r0, [r0, #16]
    d762:	1ac0      	subs	r0, r0, r3
    d764:	d116      	bne.n	d794 <__mcmp+0x38>
    d766:	f10c 0c14 	add.w	ip, ip, #20
    d76a:	3114      	adds	r1, #20
    d76c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
    d770:	b410      	push	{r4}
    d772:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    d776:	e001      	b.n	d77c <__mcmp+0x20>
    d778:	4594      	cmp	ip, r2
    d77a:	d208      	bcs.n	d78e <__mcmp+0x32>
    d77c:	f852 4d04 	ldr.w	r4, [r2, #-4]!
    d780:	f853 1d04 	ldr.w	r1, [r3, #-4]!
    d784:	428c      	cmp	r4, r1
    d786:	d0f7      	beq.n	d778 <__mcmp+0x1c>
    d788:	d205      	bcs.n	d796 <__mcmp+0x3a>
    d78a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d78e:	f85d 4b04 	ldr.w	r4, [sp], #4
    d792:	4770      	bx	lr
    d794:	4770      	bx	lr
    d796:	2001      	movs	r0, #1
    d798:	f85d 4b04 	ldr.w	r4, [sp], #4
    d79c:	4770      	bx	lr
    d79e:	bf00      	nop

0000d7a0 <__mdiff>:
    d7a0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d7a4:	690f      	ldr	r7, [r1, #16]
    d7a6:	6913      	ldr	r3, [r2, #16]
    d7a8:	1aff      	subs	r7, r7, r3
    d7aa:	2f00      	cmp	r7, #0
    d7ac:	460e      	mov	r6, r1
    d7ae:	4690      	mov	r8, r2
    d7b0:	d17f      	bne.n	d8b2 <__mdiff+0x112>
    d7b2:	f101 0514 	add.w	r5, r1, #20
    d7b6:	3214      	adds	r2, #20
    d7b8:	eb02 0283 	add.w	r2, r2, r3, lsl #2
    d7bc:	eb05 0383 	add.w	r3, r5, r3, lsl #2
    d7c0:	e001      	b.n	d7c6 <__mdiff+0x26>
    d7c2:	429d      	cmp	r5, r3
    d7c4:	d278      	bcs.n	d8b8 <__mdiff+0x118>
    d7c6:	f853 1d04 	ldr.w	r1, [r3, #-4]!
    d7ca:	f852 4d04 	ldr.w	r4, [r2, #-4]!
    d7ce:	42a1      	cmp	r1, r4
    d7d0:	d0f7      	beq.n	d7c2 <__mdiff+0x22>
    d7d2:	d369      	bcc.n	d8a8 <__mdiff+0x108>
    d7d4:	6871      	ldr	r1, [r6, #4]
    d7d6:	f7ff fd3b 	bl	d250 <_Balloc>
    d7da:	4681      	mov	r9, r0
    d7dc:	2800      	cmp	r0, #0
    d7de:	d077      	beq.n	d8d0 <__mdiff+0x130>
    d7e0:	6935      	ldr	r5, [r6, #16]
    d7e2:	f8d8 2010 	ldr.w	r2, [r8, #16]
    d7e6:	60c7      	str	r7, [r0, #12]
    d7e8:	f108 0e14 	add.w	lr, r8, #20
    d7ec:	f106 0014 	add.w	r0, r6, #20
    d7f0:	f109 0a14 	add.w	sl, r9, #20
    d7f4:	f106 0110 	add.w	r1, r6, #16
    d7f8:	eb0e 0282 	add.w	r2, lr, r2, lsl #2
    d7fc:	eb00 0785 	add.w	r7, r0, r5, lsl #2
    d800:	4656      	mov	r6, sl
    d802:	f04f 0c00 	mov.w	ip, #0
    d806:	f85e 4b04 	ldr.w	r4, [lr], #4
    d80a:	f851 bf04 	ldr.w	fp, [r1, #4]!
    d80e:	b2a3      	uxth	r3, r4
    d810:	fa1c fc8b 	uxtah	ip, ip, fp
    d814:	ebac 0303 	sub.w	r3, ip, r3
    d818:	ea4f 4c14 	mov.w	ip, r4, lsr #16
    d81c:	ebcc 4c1b 	rsb	ip, ip, fp, lsr #16
    d820:	eb0c 4c23 	add.w	ip, ip, r3, asr #16
    d824:	b29b      	uxth	r3, r3
    d826:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
    d82a:	4572      	cmp	r2, lr
    d82c:	f846 3b04 	str.w	r3, [r6], #4
    d830:	ea4f 4c2c 	mov.w	ip, ip, asr #16
    d834:	d8e7      	bhi.n	d806 <__mdiff+0x66>
    d836:	eba2 0108 	sub.w	r1, r2, r8
    d83a:	3915      	subs	r1, #21
    d83c:	f108 0815 	add.w	r8, r8, #21
    d840:	4542      	cmp	r2, r8
    d842:	f021 0403 	bic.w	r4, r1, #3
    d846:	f104 0404 	add.w	r4, r4, #4
    d84a:	bf38      	it	cc
    d84c:	2404      	movcc	r4, #4
    d84e:	4420      	add	r0, r4
    d850:	f021 0203 	bic.w	r2, r1, #3
    d854:	bf38      	it	cc
    d856:	2200      	movcc	r2, #0
    d858:	4287      	cmp	r7, r0
    d85a:	4452      	add	r2, sl
    d85c:	4454      	add	r4, sl
    d85e:	d918      	bls.n	d892 <__mdiff+0xf2>
    d860:	4626      	mov	r6, r4
    d862:	4601      	mov	r1, r0
    d864:	f851 3b04 	ldr.w	r3, [r1], #4
    d868:	fa1c fc83 	uxtah	ip, ip, r3
    d86c:	ea4f 422c 	mov.w	r2, ip, asr #16
    d870:	eb02 4213 	add.w	r2, r2, r3, lsr #16
    d874:	fa1f fc8c 	uxth.w	ip, ip
    d878:	ea4c 4302 	orr.w	r3, ip, r2, lsl #16
    d87c:	428f      	cmp	r7, r1
    d87e:	f846 3b04 	str.w	r3, [r6], #4
    d882:	ea4f 4c22 	mov.w	ip, r2, asr #16
    d886:	d8ed      	bhi.n	d864 <__mdiff+0xc4>
    d888:	3f01      	subs	r7, #1
    d88a:	1a3f      	subs	r7, r7, r0
    d88c:	f027 0703 	bic.w	r7, r7, #3
    d890:	19e2      	adds	r2, r4, r7
    d892:	b923      	cbnz	r3, d89e <__mdiff+0xfe>
    d894:	f852 3d04 	ldr.w	r3, [r2, #-4]!
    d898:	3d01      	subs	r5, #1
    d89a:	2b00      	cmp	r3, #0
    d89c:	d0fa      	beq.n	d894 <__mdiff+0xf4>
    d89e:	f8c9 5010 	str.w	r5, [r9, #16]
    d8a2:	4648      	mov	r0, r9
    d8a4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d8a8:	4633      	mov	r3, r6
    d8aa:	2701      	movs	r7, #1
    d8ac:	4646      	mov	r6, r8
    d8ae:	4698      	mov	r8, r3
    d8b0:	e790      	b.n	d7d4 <__mdiff+0x34>
    d8b2:	dbf9      	blt.n	d8a8 <__mdiff+0x108>
    d8b4:	2700      	movs	r7, #0
    d8b6:	e78d      	b.n	d7d4 <__mdiff+0x34>
    d8b8:	2100      	movs	r1, #0
    d8ba:	f7ff fcc9 	bl	d250 <_Balloc>
    d8be:	4681      	mov	r9, r0
    d8c0:	b168      	cbz	r0, d8de <__mdiff+0x13e>
    d8c2:	2201      	movs	r2, #1
    d8c4:	2300      	movs	r3, #0
    d8c6:	e9c9 2304 	strd	r2, r3, [r9, #16]
    d8ca:	4648      	mov	r0, r9
    d8cc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d8d0:	4b06      	ldr	r3, [pc, #24]	; (d8ec <__mdiff+0x14c>)
    d8d2:	4807      	ldr	r0, [pc, #28]	; (d8f0 <__mdiff+0x150>)
    d8d4:	464a      	mov	r2, r9
    d8d6:	f240 2145 	movw	r1, #581	; 0x245
    d8da:	f7ff f95b 	bl	cb94 <__assert_func>
    d8de:	4b03      	ldr	r3, [pc, #12]	; (d8ec <__mdiff+0x14c>)
    d8e0:	4803      	ldr	r0, [pc, #12]	; (d8f0 <__mdiff+0x150>)
    d8e2:	464a      	mov	r2, r9
    d8e4:	f240 2137 	movw	r1, #567	; 0x237
    d8e8:	f7ff f954 	bl	cb94 <__assert_func>
    d8ec:	200008b4 	.word	0x200008b4
    d8f0:	200008c8 	.word	0x200008c8

0000d8f4 <__d2b>:
    d8f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    d8f8:	4688      	mov	r8, r1
    d8fa:	b083      	sub	sp, #12
    d8fc:	2101      	movs	r1, #1
    d8fe:	ec57 6b10 	vmov	r6, r7, d0
    d902:	4615      	mov	r5, r2
    d904:	f7ff fca4 	bl	d250 <_Balloc>
    d908:	4604      	mov	r4, r0
    d90a:	2800      	cmp	r0, #0
    d90c:	d051      	beq.n	d9b2 <__d2b+0xbe>
    d90e:	f3c7 590a 	ubfx	r9, r7, #20, #11
    d912:	f3c7 0313 	ubfx	r3, r7, #0, #20
    d916:	f1b9 0f00 	cmp.w	r9, #0
    d91a:	d001      	beq.n	d920 <__d2b+0x2c>
    d91c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    d920:	2e00      	cmp	r6, #0
    d922:	9301      	str	r3, [sp, #4]
    d924:	d118      	bne.n	d958 <__d2b+0x64>
    d926:	a801      	add	r0, sp, #4
    d928:	f7ff fd34 	bl	d394 <__lo0bits>
    d92c:	9a01      	ldr	r2, [sp, #4]
    d92e:	6162      	str	r2, [r4, #20]
    d930:	2201      	movs	r2, #1
    d932:	f100 0320 	add.w	r3, r0, #32
    d936:	6122      	str	r2, [r4, #16]
    d938:	f1b9 0f00 	cmp.w	r9, #0
    d93c:	d025      	beq.n	d98a <__d2b+0x96>
    d93e:	f2a9 4933 	subw	r9, r9, #1075	; 0x433
    d942:	eb09 0203 	add.w	r2, r9, r3
    d946:	4620      	mov	r0, r4
    d948:	f1c3 0335 	rsb	r3, r3, #53	; 0x35
    d94c:	f8c8 2000 	str.w	r2, [r8]
    d950:	602b      	str	r3, [r5, #0]
    d952:	b003      	add	sp, #12
    d954:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    d958:	4668      	mov	r0, sp
    d95a:	9600      	str	r6, [sp, #0]
    d95c:	f7ff fd1a 	bl	d394 <__lo0bits>
    d960:	4603      	mov	r3, r0
    d962:	b310      	cbz	r0, d9aa <__d2b+0xb6>
    d964:	e9dd 0200 	ldrd	r0, r2, [sp]
    d968:	f1c3 0120 	rsb	r1, r3, #32
    d96c:	fa02 f101 	lsl.w	r1, r2, r1
    d970:	4301      	orrs	r1, r0
    d972:	40da      	lsrs	r2, r3
    d974:	6161      	str	r1, [r4, #20]
    d976:	9201      	str	r2, [sp, #4]
    d978:	2a00      	cmp	r2, #0
    d97a:	61a2      	str	r2, [r4, #24]
    d97c:	bf14      	ite	ne
    d97e:	2202      	movne	r2, #2
    d980:	2201      	moveq	r2, #1
    d982:	6122      	str	r2, [r4, #16]
    d984:	f1b9 0f00 	cmp.w	r9, #0
    d988:	d1d9      	bne.n	d93e <__d2b+0x4a>
    d98a:	f2a3 4332 	subw	r3, r3, #1074	; 0x432
    d98e:	f8c8 3000 	str.w	r3, [r8]
    d992:	eb04 0382 	add.w	r3, r4, r2, lsl #2
    d996:	6918      	ldr	r0, [r3, #16]
    d998:	f7ff fcdc 	bl	d354 <__hi0bits>
    d99c:	ebc0 1342 	rsb	r3, r0, r2, lsl #5
    d9a0:	4620      	mov	r0, r4
    d9a2:	602b      	str	r3, [r5, #0]
    d9a4:	b003      	add	sp, #12
    d9a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    d9aa:	9a00      	ldr	r2, [sp, #0]
    d9ac:	6162      	str	r2, [r4, #20]
    d9ae:	9a01      	ldr	r2, [sp, #4]
    d9b0:	e7e2      	b.n	d978 <__d2b+0x84>
    d9b2:	4b03      	ldr	r3, [pc, #12]	; (d9c0 <__d2b+0xcc>)
    d9b4:	4803      	ldr	r0, [pc, #12]	; (d9c4 <__d2b+0xd0>)
    d9b6:	4622      	mov	r2, r4
    d9b8:	f240 310f 	movw	r1, #783	; 0x30f
    d9bc:	f7ff f8ea 	bl	cb94 <__assert_func>
    d9c0:	200008b4 	.word	0x200008b4
    d9c4:	200008c8 	.word	0x200008c8

0000d9c8 <_calloc_r>:
    d9c8:	b538      	push	{r3, r4, r5, lr}
    d9ca:	fba1 1402 	umull	r1, r4, r1, r2
    d9ce:	bb8c      	cbnz	r4, da34 <_calloc_r+0x6c>
    d9d0:	f7fe fd84 	bl	c4dc <_malloc_r>
    d9d4:	4605      	mov	r5, r0
    d9d6:	b1e0      	cbz	r0, da12 <_calloc_r+0x4a>
    d9d8:	f850 2c04 	ldr.w	r2, [r0, #-4]
    d9dc:	f022 0203 	bic.w	r2, r2, #3
    d9e0:	3a04      	subs	r2, #4
    d9e2:	2a24      	cmp	r2, #36	; 0x24
    d9e4:	d817      	bhi.n	da16 <_calloc_r+0x4e>
    d9e6:	2a13      	cmp	r2, #19
    d9e8:	d91a      	bls.n	da20 <_calloc_r+0x58>
    d9ea:	2a1b      	cmp	r2, #27
    d9ec:	e9c0 4400 	strd	r4, r4, [r0]
    d9f0:	d91d      	bls.n	da2e <_calloc_r+0x66>
    d9f2:	2a24      	cmp	r2, #36	; 0x24
    d9f4:	bf14      	ite	ne
    d9f6:	f100 0210 	addne.w	r2, r0, #16
    d9fa:	f100 0218 	addeq.w	r2, r0, #24
    d9fe:	f04f 0300 	mov.w	r3, #0
    da02:	e9c0 4402 	strd	r4, r4, [r0, #8]
    da06:	bf04      	itt	eq
    da08:	6104      	streq	r4, [r0, #16]
    da0a:	6144      	streq	r4, [r0, #20]
    da0c:	e9c2 3300 	strd	r3, r3, [r2]
    da10:	6093      	str	r3, [r2, #8]
    da12:	4628      	mov	r0, r5
    da14:	bd38      	pop	{r3, r4, r5, pc}
    da16:	4621      	mov	r1, r4
    da18:	f7ff f8dc 	bl	cbd4 <memset>
    da1c:	4628      	mov	r0, r5
    da1e:	bd38      	pop	{r3, r4, r5, pc}
    da20:	4602      	mov	r2, r0
    da22:	2300      	movs	r3, #0
    da24:	e9c2 3300 	strd	r3, r3, [r2]
    da28:	6093      	str	r3, [r2, #8]
    da2a:	4628      	mov	r0, r5
    da2c:	bd38      	pop	{r3, r4, r5, pc}
    da2e:	f100 0208 	add.w	r2, r0, #8
    da32:	e7f6      	b.n	da22 <_calloc_r+0x5a>
    da34:	f7fc ff9a 	bl	a96c <__errno>
    da38:	230c      	movs	r3, #12
    da3a:	2500      	movs	r5, #0
    da3c:	6003      	str	r3, [r0, #0]
    da3e:	e7e8      	b.n	da12 <_calloc_r+0x4a>

0000da40 <realloc>:
    da40:	b410      	push	{r4}
    da42:	4c04      	ldr	r4, [pc, #16]	; (da54 <realloc+0x14>)
    da44:	4603      	mov	r3, r0
    da46:	460a      	mov	r2, r1
    da48:	6820      	ldr	r0, [r4, #0]
    da4a:	f85d 4b04 	ldr.w	r4, [sp], #4
    da4e:	4619      	mov	r1, r3
    da50:	f001 b9c2 	b.w	edd8 <_realloc_r>
    da54:	200026f4 	.word	0x200026f4

0000da58 <_wcsrtombs_r>:
    da58:	b510      	push	{r4, lr}
    da5a:	b082      	sub	sp, #8
    da5c:	9c04      	ldr	r4, [sp, #16]
    da5e:	e9cd 3400 	strd	r3, r4, [sp]
    da62:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    da66:	f003 f831 	bl	10acc <_wcsnrtombs_r>
    da6a:	b002      	add	sp, #8
    da6c:	bd10      	pop	{r4, pc}
    da6e:	bf00      	nop

0000da70 <quorem>:
    da70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    da74:	6903      	ldr	r3, [r0, #16]
    da76:	690c      	ldr	r4, [r1, #16]
    da78:	42a3      	cmp	r3, r4
    da7a:	b083      	sub	sp, #12
    da7c:	f2c0 8087 	blt.w	db8e <quorem+0x11e>
    da80:	3c01      	subs	r4, #1
    da82:	f101 0514 	add.w	r5, r1, #20
    da86:	00a3      	lsls	r3, r4, #2
    da88:	f100 0814 	add.w	r8, r0, #20
    da8c:	9300      	str	r3, [sp, #0]
    da8e:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
    da92:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
    da96:	3301      	adds	r3, #1
    da98:	4681      	mov	r9, r0
    da9a:	429a      	cmp	r2, r3
    da9c:	eb08 0084 	add.w	r0, r8, r4, lsl #2
    daa0:	eb05 0784 	add.w	r7, r5, r4, lsl #2
    daa4:	9001      	str	r0, [sp, #4]
    daa6:	fbb2 f6f3 	udiv	r6, r2, r3
    daaa:	d33b      	bcc.n	db24 <quorem+0xb4>
    daac:	f04f 0c00 	mov.w	ip, #0
    dab0:	46ae      	mov	lr, r5
    dab2:	4640      	mov	r0, r8
    dab4:	46e2      	mov	sl, ip
    dab6:	4663      	mov	r3, ip
    dab8:	f85e bb04 	ldr.w	fp, [lr], #4
    dabc:	6802      	ldr	r2, [r0, #0]
    dabe:	fa1f fc8b 	uxth.w	ip, fp
    dac2:	fb06 330c 	mla	r3, r6, ip, r3
    dac6:	ea4f 4c13 	mov.w	ip, r3, lsr #16
    daca:	ea4f 4b1b 	mov.w	fp, fp, lsr #16
    dace:	fb06 cc0b 	mla	ip, r6, fp, ip
    dad2:	b29b      	uxth	r3, r3
    dad4:	ebaa 0303 	sub.w	r3, sl, r3
    dad8:	fa1f fa8c 	uxth.w	sl, ip
    dadc:	fa13 f382 	uxtah	r3, r3, r2
    dae0:	ebca 4212 	rsb	r2, sl, r2, lsr #16
    dae4:	eb02 4223 	add.w	r2, r2, r3, asr #16
    dae8:	b29b      	uxth	r3, r3
    daea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    daee:	4577      	cmp	r7, lr
    daf0:	f840 3b04 	str.w	r3, [r0], #4
    daf4:	ea4f 4a22 	mov.w	sl, r2, asr #16
    daf8:	ea4f 431c 	mov.w	r3, ip, lsr #16
    dafc:	d2dc      	bcs.n	dab8 <quorem+0x48>
    dafe:	9b00      	ldr	r3, [sp, #0]
    db00:	f858 3003 	ldr.w	r3, [r8, r3]
    db04:	b973      	cbnz	r3, db24 <quorem+0xb4>
    db06:	9b01      	ldr	r3, [sp, #4]
    db08:	3b04      	subs	r3, #4
    db0a:	4598      	cmp	r8, r3
    db0c:	d304      	bcc.n	db18 <quorem+0xa8>
    db0e:	e007      	b.n	db20 <quorem+0xb0>
    db10:	4598      	cmp	r8, r3
    db12:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
    db16:	d203      	bcs.n	db20 <quorem+0xb0>
    db18:	f853 2904 	ldr.w	r2, [r3], #-4
    db1c:	2a00      	cmp	r2, #0
    db1e:	d0f7      	beq.n	db10 <quorem+0xa0>
    db20:	f8c9 4010 	str.w	r4, [r9, #16]
    db24:	4648      	mov	r0, r9
    db26:	f7ff fe19 	bl	d75c <__mcmp>
    db2a:	2800      	cmp	r0, #0
    db2c:	db2b      	blt.n	db86 <quorem+0x116>
    db2e:	3601      	adds	r6, #1
    db30:	4641      	mov	r1, r8
    db32:	2300      	movs	r3, #0
    db34:	f855 0b04 	ldr.w	r0, [r5], #4
    db38:	f8d1 c000 	ldr.w	ip, [r1]
    db3c:	b282      	uxth	r2, r0
    db3e:	1a9a      	subs	r2, r3, r2
    db40:	0c03      	lsrs	r3, r0, #16
    db42:	fa12 f28c 	uxtah	r2, r2, ip
    db46:	ebc3 431c 	rsb	r3, r3, ip, lsr #16
    db4a:	eb03 4322 	add.w	r3, r3, r2, asr #16
    db4e:	b292      	uxth	r2, r2
    db50:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
    db54:	42af      	cmp	r7, r5
    db56:	f841 2b04 	str.w	r2, [r1], #4
    db5a:	ea4f 4323 	mov.w	r3, r3, asr #16
    db5e:	d2e9      	bcs.n	db34 <quorem+0xc4>
    db60:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
    db64:	eb08 0384 	add.w	r3, r8, r4, lsl #2
    db68:	b96a      	cbnz	r2, db86 <quorem+0x116>
    db6a:	3b04      	subs	r3, #4
    db6c:	4598      	cmp	r8, r3
    db6e:	d304      	bcc.n	db7a <quorem+0x10a>
    db70:	e007      	b.n	db82 <quorem+0x112>
    db72:	4598      	cmp	r8, r3
    db74:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
    db78:	d203      	bcs.n	db82 <quorem+0x112>
    db7a:	f853 2904 	ldr.w	r2, [r3], #-4
    db7e:	2a00      	cmp	r2, #0
    db80:	d0f7      	beq.n	db72 <quorem+0x102>
    db82:	f8c9 4010 	str.w	r4, [r9, #16]
    db86:	4630      	mov	r0, r6
    db88:	b003      	add	sp, #12
    db8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    db8e:	2000      	movs	r0, #0
    db90:	b003      	add	sp, #12
    db92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    db96:	bf00      	nop

0000db98 <_dtoa_r>:
    db98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    db9c:	ed2d 8b02 	vpush	{d8}
    dba0:	b08f      	sub	sp, #60	; 0x3c
    dba2:	ed8d 0b02 	vstr	d0, [sp, #8]
    dba6:	9101      	str	r1, [sp, #4]
    dba8:	6b81      	ldr	r1, [r0, #56]	; 0x38
    dbaa:	9d1a      	ldr	r5, [sp, #104]	; 0x68
    dbac:	9305      	str	r3, [sp, #20]
    dbae:	ec57 6b10 	vmov	r6, r7, d0
    dbb2:	4604      	mov	r4, r0
    dbb4:	4693      	mov	fp, r2
    dbb6:	b141      	cbz	r1, dbca <_dtoa_r+0x32>
    dbb8:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
    dbba:	604a      	str	r2, [r1, #4]
    dbbc:	2301      	movs	r3, #1
    dbbe:	4093      	lsls	r3, r2
    dbc0:	608b      	str	r3, [r1, #8]
    dbc2:	f7ff fb6b 	bl	d29c <_Bfree>
    dbc6:	2300      	movs	r3, #0
    dbc8:	63a3      	str	r3, [r4, #56]	; 0x38
    dbca:	f1b7 0800 	subs.w	r8, r7, #0
    dbce:	bfb4      	ite	lt
    dbd0:	2301      	movlt	r3, #1
    dbd2:	2300      	movge	r3, #0
    dbd4:	602b      	str	r3, [r5, #0]
    dbd6:	4bbe      	ldr	r3, [pc, #760]	; (ded0 <_dtoa_r+0x338>)
    dbd8:	bfbc      	itt	lt
    dbda:	f028 4800 	biclt.w	r8, r8, #2147483648	; 0x80000000
    dbde:	f8cd 800c 	strlt.w	r8, [sp, #12]
    dbe2:	ea33 0308 	bics.w	r3, r3, r8
    dbe6:	f000 809f 	beq.w	dd28 <_dtoa_r+0x190>
    dbea:	ed9d 8b02 	vldr	d8, [sp, #8]
    dbee:	eeb5 8b40 	vcmp.f64	d8, #0.0
    dbf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dbf6:	d111      	bne.n	dc1c <_dtoa_r+0x84>
    dbf8:	9a05      	ldr	r2, [sp, #20]
    dbfa:	2301      	movs	r3, #1
    dbfc:	6013      	str	r3, [r2, #0]
    dbfe:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    dc00:	2b00      	cmp	r3, #0
    dc02:	f000 823f 	beq.w	e084 <_dtoa_r+0x4ec>
    dc06:	4bb3      	ldr	r3, [pc, #716]	; (ded4 <_dtoa_r+0x33c>)
    dc08:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    dc0a:	6013      	str	r3, [r2, #0]
    dc0c:	3b01      	subs	r3, #1
    dc0e:	9300      	str	r3, [sp, #0]
    dc10:	9800      	ldr	r0, [sp, #0]
    dc12:	b00f      	add	sp, #60	; 0x3c
    dc14:	ecbd 8b02 	vpop	{d8}
    dc18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dc1c:	aa0c      	add	r2, sp, #48	; 0x30
    dc1e:	a90d      	add	r1, sp, #52	; 0x34
    dc20:	4620      	mov	r0, r4
    dc22:	eeb0 0b48 	vmov.f64	d0, d8
    dc26:	f7ff fe65 	bl	d8f4 <__d2b>
    dc2a:	ea5f 5318 	movs.w	r3, r8, lsr #20
    dc2e:	4605      	mov	r5, r0
    dc30:	f040 8092 	bne.w	dd58 <_dtoa_r+0x1c0>
    dc34:	e9dd 130c 	ldrd	r1, r3, [sp, #48]	; 0x30
    dc38:	440b      	add	r3, r1
    dc3a:	f203 4232 	addw	r2, r3, #1074	; 0x432
    dc3e:	2a20      	cmp	r2, #32
    dc40:	f340 82fa 	ble.w	e238 <_dtoa_r+0x6a0>
    dc44:	f1c2 0240 	rsb	r2, r2, #64	; 0x40
    dc48:	fa08 f802 	lsl.w	r8, r8, r2
    dc4c:	f203 4212 	addw	r2, r3, #1042	; 0x412
    dc50:	40d6      	lsrs	r6, r2
    dc52:	ea48 0206 	orr.w	r2, r8, r6
    dc56:	ee07 2a10 	vmov	s14, r2
    dc5a:	eeb8 7b47 	vcvt.f64.u32	d7, s14
    dc5e:	1e58      	subs	r0, r3, #1
    dc60:	ee17 6a90 	vmov	r6, s15
    dc64:	ec53 2b17 	vmov	r2, r3, d7
    dc68:	f04f 0a01 	mov.w	sl, #1
    dc6c:	f1a6 73f8 	sub.w	r3, r6, #32505856	; 0x1f00000
    dc70:	ed9f 3b91 	vldr	d3, [pc, #580]	; deb8 <_dtoa_r+0x320>
    dc74:	ed9f 7b92 	vldr	d7, [pc, #584]	; dec0 <_dtoa_r+0x328>
    dc78:	ed9f 5b93 	vldr	d5, [pc, #588]	; dec8 <_dtoa_r+0x330>
    dc7c:	ee06 0a90 	vmov	s13, r0
    dc80:	ec43 2b12 	vmov	d2, r2, r3
    dc84:	eeb8 4be6 	vcvt.f64.s32	d4, s13
    dc88:	eeb7 6b08 	vmov.f64	d6, #120	; 0x3fc00000  1.5
    dc8c:	ee32 6b46 	vsub.f64	d6, d2, d6
    dc90:	eea6 7b03 	vfma.f64	d7, d6, d3
    dc94:	eea4 7b05 	vfma.f64	d7, d4, d5
    dc98:	eefd 6bc7 	vcvt.s32.f64	s13, d7
    dc9c:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
    dca0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dca4:	ee16 7a90 	vmov	r7, s13
    dca8:	d508      	bpl.n	dcbc <_dtoa_r+0x124>
    dcaa:	eeb8 6be6 	vcvt.f64.s32	d6, s13
    dcae:	eeb4 6b47 	vcmp.f64	d6, d7
    dcb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dcb6:	bf18      	it	ne
    dcb8:	f107 37ff 	addne.w	r7, r7, #4294967295	; 0xffffffff
    dcbc:	2f16      	cmp	r7, #22
    dcbe:	f200 8145 	bhi.w	df4c <_dtoa_r+0x3b4>
    dcc2:	4b85      	ldr	r3, [pc, #532]	; (ded8 <_dtoa_r+0x340>)
    dcc4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
    dcc8:	ed93 7b00 	vldr	d7, [r3]
    dccc:	eeb4 8bc7 	vcmpe.f64	d8, d7
    dcd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dcd4:	d557      	bpl.n	dd86 <_dtoa_r+0x1ee>
    dcd6:	1a09      	subs	r1, r1, r0
    dcd8:	2300      	movs	r3, #0
    dcda:	f1b1 0801 	subs.w	r8, r1, #1
    dcde:	f107 37ff 	add.w	r7, r7, #4294967295	; 0xffffffff
    dce2:	930a      	str	r3, [sp, #40]	; 0x28
    dce4:	f100 8139 	bmi.w	df5a <_dtoa_r+0x3c2>
    dce8:	2300      	movs	r3, #0
    dcea:	9306      	str	r3, [sp, #24]
    dcec:	2f00      	cmp	r7, #0
    dcee:	da52      	bge.n	dd96 <_dtoa_r+0x1fe>
    dcf0:	9b06      	ldr	r3, [sp, #24]
    dcf2:	9704      	str	r7, [sp, #16]
    dcf4:	1bdb      	subs	r3, r3, r7
    dcf6:	9306      	str	r3, [sp, #24]
    dcf8:	427b      	negs	r3, r7
    dcfa:	9308      	str	r3, [sp, #32]
    dcfc:	9b01      	ldr	r3, [sp, #4]
    dcfe:	2b09      	cmp	r3, #9
    dd00:	f04f 0700 	mov.w	r7, #0
    dd04:	d84e      	bhi.n	dda4 <_dtoa_r+0x20c>
    dd06:	2b05      	cmp	r3, #5
    dd08:	f340 829d 	ble.w	e246 <_dtoa_r+0x6ae>
    dd0c:	3b04      	subs	r3, #4
    dd0e:	9301      	str	r3, [sp, #4]
    dd10:	2600      	movs	r6, #0
    dd12:	9b01      	ldr	r3, [sp, #4]
    dd14:	1e9a      	subs	r2, r3, #2
    dd16:	2a03      	cmp	r2, #3
    dd18:	f200 8125 	bhi.w	df66 <_dtoa_r+0x3ce>
    dd1c:	e8df f012 	tbh	[pc, r2, lsl #1]
    dd20:	03a703aa 	.word	0x03a703aa
    dd24:	037e039d 	.word	0x037e039d
    dd28:	9a05      	ldr	r2, [sp, #20]
    dd2a:	f3c8 0813 	ubfx	r8, r8, #0, #20
    dd2e:	f242 730f 	movw	r3, #9999	; 0x270f
    dd32:	ea58 0806 	orrs.w	r8, r8, r6
    dd36:	6013      	str	r3, [r2, #0]
    dd38:	d11e      	bne.n	dd78 <_dtoa_r+0x1e0>
    dd3a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    dd3c:	2b00      	cmp	r3, #0
    dd3e:	f000 8591 	beq.w	e864 <_dtoa_r+0xccc>
    dd42:	4b66      	ldr	r3, [pc, #408]	; (dedc <_dtoa_r+0x344>)
    dd44:	9300      	str	r3, [sp, #0]
    dd46:	3308      	adds	r3, #8
    dd48:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    dd4a:	9800      	ldr	r0, [sp, #0]
    dd4c:	6013      	str	r3, [r2, #0]
    dd4e:	b00f      	add	sp, #60	; 0x3c
    dd50:	ecbd 8b02 	vpop	{d8}
    dd54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dd58:	ee18 6a90 	vmov	r6, s17
    dd5c:	f3c6 0613 	ubfx	r6, r6, #0, #20
    dd60:	f2a3 30ff 	subw	r0, r3, #1023	; 0x3ff
    dd64:	ec53 2b18 	vmov	r2, r3, d8
    dd68:	f046 537f 	orr.w	r3, r6, #1069547520	; 0x3fc00000
    dd6c:	990c      	ldr	r1, [sp, #48]	; 0x30
    dd6e:	f04f 0a00 	mov.w	sl, #0
    dd72:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
    dd76:	e77b      	b.n	dc70 <_dtoa_r+0xd8>
    dd78:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    dd7a:	2b00      	cmp	r3, #0
    dd7c:	f040 833b 	bne.w	e3f6 <_dtoa_r+0x85e>
    dd80:	4b57      	ldr	r3, [pc, #348]	; (dee0 <_dtoa_r+0x348>)
    dd82:	9300      	str	r3, [sp, #0]
    dd84:	e744      	b.n	dc10 <_dtoa_r+0x78>
    dd86:	1a09      	subs	r1, r1, r0
    dd88:	2300      	movs	r3, #0
    dd8a:	f1b1 0801 	subs.w	r8, r1, #1
    dd8e:	930a      	str	r3, [sp, #40]	; 0x28
    dd90:	f100 80e3 	bmi.w	df5a <_dtoa_r+0x3c2>
    dd94:	9306      	str	r3, [sp, #24]
    dd96:	2300      	movs	r3, #0
    dd98:	9308      	str	r3, [sp, #32]
    dd9a:	9b01      	ldr	r3, [sp, #4]
    dd9c:	9704      	str	r7, [sp, #16]
    dd9e:	2b09      	cmp	r3, #9
    dda0:	44b8      	add	r8, r7
    dda2:	d9b0      	bls.n	dd06 <_dtoa_r+0x16e>
    dda4:	2300      	movs	r3, #0
    dda6:	2601      	movs	r6, #1
    dda8:	9301      	str	r3, [sp, #4]
    ddaa:	9607      	str	r6, [sp, #28]
    ddac:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
    ddb0:	469b      	mov	fp, r3
    ddb2:	2100      	movs	r1, #0
    ddb4:	63e1      	str	r1, [r4, #60]	; 0x3c
    ddb6:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
    ddba:	4620      	mov	r0, r4
    ddbc:	f7ff fa48 	bl	d250 <_Balloc>
    ddc0:	9000      	str	r0, [sp, #0]
    ddc2:	2800      	cmp	r0, #0
    ddc4:	f000 8540 	beq.w	e848 <_dtoa_r+0xcb0>
    ddc8:	9b00      	ldr	r3, [sp, #0]
    ddca:	63a3      	str	r3, [r4, #56]	; 0x38
    ddcc:	f1b9 0f0e 	cmp.w	r9, #14
    ddd0:	f200 80dc 	bhi.w	df8c <_dtoa_r+0x3f4>
    ddd4:	2e00      	cmp	r6, #0
    ddd6:	f000 80d9 	beq.w	df8c <_dtoa_r+0x3f4>
    ddda:	9b04      	ldr	r3, [sp, #16]
    dddc:	2b00      	cmp	r3, #0
    ddde:	f340 83de 	ble.w	e59e <_dtoa_r+0xa06>
    dde2:	4a3d      	ldr	r2, [pc, #244]	; (ded8 <_dtoa_r+0x340>)
    dde4:	f003 010f 	and.w	r1, r3, #15
    dde8:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
    ddec:	ed92 7b00 	vldr	d7, [r2]
    ddf0:	111a      	asrs	r2, r3, #4
    ddf2:	05db      	lsls	r3, r3, #23
    ddf4:	f140 8382 	bpl.w	e4fc <_dtoa_r+0x964>
    ddf8:	493a      	ldr	r1, [pc, #232]	; (dee4 <_dtoa_r+0x34c>)
    ddfa:	ed91 6b08 	vldr	d6, [r1, #32]
    ddfe:	f002 020f 	and.w	r2, r2, #15
    de02:	2003      	movs	r0, #3
    de04:	ee88 5b06 	vdiv.f64	d5, d8, d6
    de08:	b15a      	cbz	r2, de22 <_dtoa_r+0x28a>
    de0a:	4936      	ldr	r1, [pc, #216]	; (dee4 <_dtoa_r+0x34c>)
    de0c:	07d6      	lsls	r6, r2, #31
    de0e:	d504      	bpl.n	de1a <_dtoa_r+0x282>
    de10:	ed91 6b00 	vldr	d6, [r1]
    de14:	3001      	adds	r0, #1
    de16:	ee27 7b06 	vmul.f64	d7, d7, d6
    de1a:	1052      	asrs	r2, r2, #1
    de1c:	f101 0108 	add.w	r1, r1, #8
    de20:	d1f4      	bne.n	de0c <_dtoa_r+0x274>
    de22:	ee85 6b07 	vdiv.f64	d6, d5, d7
    de26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    de28:	b13b      	cbz	r3, de3a <_dtoa_r+0x2a2>
    de2a:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
    de2e:	eeb4 6bc7 	vcmpe.f64	d6, d7
    de32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    de36:	f100 84ae 	bmi.w	e796 <_dtoa_r+0xbfe>
    de3a:	ee07 0a90 	vmov	s15, r0
    de3e:	eeb8 5be7 	vcvt.f64.s32	d5, s15
    de42:	eeb1 7b0c 	vmov.f64	d7, #28	; 0x40e00000  7.0
    de46:	eea5 7b06 	vfma.f64	d7, d5, d6
    de4a:	ee17 2a90 	vmov	r2, s15
    de4e:	ec51 0b17 	vmov	r0, r1, d7
    de52:	f1a2 7150 	sub.w	r1, r2, #54525952	; 0x3400000
    de56:	f1b9 0f00 	cmp.w	r9, #0
    de5a:	f000 8388 	beq.w	e56e <_dtoa_r+0x9d6>
    de5e:	9e04      	ldr	r6, [sp, #16]
    de60:	464a      	mov	r2, r9
    de62:	9b07      	ldr	r3, [sp, #28]
    de64:	2b00      	cmp	r3, #0
    de66:	f000 8447 	beq.w	e6f8 <_dtoa_r+0xb60>
    de6a:	eeb6 3b00 	vmov.f64	d3, #96	; 0x3f000000  0.5
    de6e:	4b1a      	ldr	r3, [pc, #104]	; (ded8 <_dtoa_r+0x340>)
    de70:	eefd 4bc6 	vcvt.s32.f64	s9, d6
    de74:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
    de78:	eeb8 7be4 	vcvt.f64.s32	d7, s9
    de7c:	ee36 7b47 	vsub.f64	d7, d6, d7
    de80:	ed1c 6b02 	vldr	d6, [ip, #-8]
    de84:	ee83 5b06 	vdiv.f64	d5, d3, d6
    de88:	ec41 0b16 	vmov	d6, r0, r1
    de8c:	ee14 0a90 	vmov	r0, s9
    de90:	ee35 5b46 	vsub.f64	d5, d5, d6
    de94:	9900      	ldr	r1, [sp, #0]
    de96:	eeb4 5bc7 	vcmpe.f64	d5, d7
    de9a:	3030      	adds	r0, #48	; 0x30
    de9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dea0:	f801 0b01 	strb.w	r0, [r1], #1
    dea4:	f300 84ac 	bgt.w	e800 <_dtoa_r+0xc68>
    dea8:	eeb7 2b00 	vmov.f64	d2, #112	; 0x3f800000  1.0
    deac:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
    deb0:	f04f 0c00 	mov.w	ip, #0
    deb4:	e031      	b.n	df1a <_dtoa_r+0x382>
    deb6:	bf00      	nop
    deb8:	636f4361 	.word	0x636f4361
    debc:	3fd287a7 	.word	0x3fd287a7
    dec0:	8b60c8b3 	.word	0x8b60c8b3
    dec4:	3fc68a28 	.word	0x3fc68a28
    dec8:	509f79fb 	.word	0x509f79fb
    decc:	3fd34413 	.word	0x3fd34413
    ded0:	7ff00000 	.word	0x7ff00000
    ded4:	20000ad5 	.word	0x20000ad5
    ded8:	200002a8 	.word	0x200002a8
    dedc:	20000a28 	.word	0x20000a28
    dee0:	20000a34 	.word	0x20000a34
    dee4:	20000280 	.word	0x20000280
    dee8:	f10c 0c01 	add.w	ip, ip, #1
    deec:	4594      	cmp	ip, r2
    deee:	da4d      	bge.n	df8c <_dtoa_r+0x3f4>
    def0:	ee27 7b04 	vmul.f64	d7, d7, d4
    def4:	ee25 5b04 	vmul.f64	d5, d5, d4
    def8:	eefd 6bc7 	vcvt.s32.f64	s13, d7
    defc:	ee16 3a90 	vmov	r3, s13
    df00:	eeb8 3be6 	vcvt.f64.s32	d3, s13
    df04:	3330      	adds	r3, #48	; 0x30
    df06:	ee37 7b43 	vsub.f64	d7, d7, d3
    df0a:	eeb4 7bc5 	vcmpe.f64	d7, d5
    df0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    df12:	f801 3b01 	strb.w	r3, [r1], #1
    df16:	f100 8473 	bmi.w	e800 <_dtoa_r+0xc68>
    df1a:	ee32 6b47 	vsub.f64	d6, d2, d7
    df1e:	eeb4 6bc5 	vcmpe.f64	d6, d5
    df22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    df26:	d5df      	bpl.n	dee8 <_dtoa_r+0x350>
    df28:	9a00      	ldr	r2, [sp, #0]
    df2a:	9604      	str	r6, [sp, #16]
    df2c:	e002      	b.n	df34 <_dtoa_r+0x39c>
    df2e:	428a      	cmp	r2, r1
    df30:	f000 8450 	beq.w	e7d4 <_dtoa_r+0xc3c>
    df34:	4689      	mov	r9, r1
    df36:	f811 3d01 	ldrb.w	r3, [r1, #-1]!
    df3a:	2b39      	cmp	r3, #57	; 0x39
    df3c:	d0f7      	beq.n	df2e <_dtoa_r+0x396>
    df3e:	3301      	adds	r3, #1
    df40:	b2db      	uxtb	r3, r3
    df42:	700b      	strb	r3, [r1, #0]
    df44:	9b04      	ldr	r3, [sp, #16]
    df46:	3301      	adds	r3, #1
    df48:	9304      	str	r3, [sp, #16]
    df4a:	e155      	b.n	e1f8 <_dtoa_r+0x660>
    df4c:	1a09      	subs	r1, r1, r0
    df4e:	2301      	movs	r3, #1
    df50:	f1b1 0801 	subs.w	r8, r1, #1
    df54:	930a      	str	r3, [sp, #40]	; 0x28
    df56:	f57f aec7 	bpl.w	dce8 <_dtoa_r+0x150>
    df5a:	f1c1 0301 	rsb	r3, r1, #1
    df5e:	9306      	str	r3, [sp, #24]
    df60:	f04f 0800 	mov.w	r8, #0
    df64:	e6c2      	b.n	dcec <_dtoa_r+0x154>
    df66:	2600      	movs	r6, #0
    df68:	63e6      	str	r6, [r4, #60]	; 0x3c
    df6a:	4631      	mov	r1, r6
    df6c:	4620      	mov	r0, r4
    df6e:	f7ff f96f 	bl	d250 <_Balloc>
    df72:	9000      	str	r0, [sp, #0]
    df74:	2800      	cmp	r0, #0
    df76:	f000 8467 	beq.w	e848 <_dtoa_r+0xcb0>
    df7a:	9b00      	ldr	r3, [sp, #0]
    df7c:	63a3      	str	r3, [r4, #56]	; 0x38
    df7e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    df82:	930b      	str	r3, [sp, #44]	; 0x2c
    df84:	4699      	mov	r9, r3
    df86:	2301      	movs	r3, #1
    df88:	46b3      	mov	fp, r6
    df8a:	9307      	str	r3, [sp, #28]
    df8c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    df8e:	2a00      	cmp	r2, #0
    df90:	db55      	blt.n	e03e <_dtoa_r+0x4a6>
    df92:	9904      	ldr	r1, [sp, #16]
    df94:	290e      	cmp	r1, #14
    df96:	dc52      	bgt.n	e03e <_dtoa_r+0x4a6>
    df98:	4bb7      	ldr	r3, [pc, #732]	; (e278 <_dtoa_r+0x6e0>)
    df9a:	f1bb 0f00 	cmp.w	fp, #0
    df9e:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
    dfa2:	ed93 6b00 	vldr	d6, [r3]
    dfa6:	da15      	bge.n	dfd4 <_dtoa_r+0x43c>
    dfa8:	f1b9 0f00 	cmp.w	r9, #0
    dfac:	dc12      	bgt.n	dfd4 <_dtoa_r+0x43c>
    dfae:	f040 82f2 	bne.w	e596 <_dtoa_r+0x9fe>
    dfb2:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
    dfb6:	ee26 7b07 	vmul.f64	d7, d6, d7
    dfba:	eeb4 8bc7 	vcmpe.f64	d8, d7
    dfbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dfc2:	46ca      	mov	sl, r9
    dfc4:	464e      	mov	r6, r9
    dfc6:	f200 826d 	bhi.w	e4a4 <_dtoa_r+0x90c>
    dfca:	f8dd 8000 	ldr.w	r8, [sp]
    dfce:	ea6f 0b0b 	mvn.w	fp, fp
    dfd2:	e270      	b.n	e4b6 <_dtoa_r+0x91e>
    dfd4:	ee88 7b06 	vdiv.f64	d7, d8, d6
    dfd8:	eebd 7bc7 	vcvt.s32.f64	s14, d7
    dfdc:	9900      	ldr	r1, [sp, #0]
    dfde:	ee17 3a10 	vmov	r3, s14
    dfe2:	f1b9 0f01 	cmp.w	r9, #1
    dfe6:	f103 0330 	add.w	r3, r3, #48	; 0x30
    dfea:	eeb8 5bc7 	vcvt.f64.s32	d5, s14
    dfee:	f801 3b01 	strb.w	r3, [r1], #1
    dff2:	eea5 8b46 	vfms.f64	d8, d5, d6
    dff6:	f000 8334 	beq.w	e662 <_dtoa_r+0xaca>
    dffa:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
    dffe:	2301      	movs	r3, #1
    e000:	e011      	b.n	e026 <_dtoa_r+0x48e>
    e002:	ee88 7b06 	vdiv.f64	d7, d8, d6
    e006:	eebd 7bc7 	vcvt.s32.f64	s14, d7
    e00a:	3301      	adds	r3, #1
    e00c:	ee17 2a10 	vmov	r2, s14
    e010:	454b      	cmp	r3, r9
    e012:	f102 0230 	add.w	r2, r2, #48	; 0x30
    e016:	eeb8 5bc7 	vcvt.f64.s32	d5, s14
    e01a:	f801 2b01 	strb.w	r2, [r1], #1
    e01e:	eea5 8b46 	vfms.f64	d8, d5, d6
    e022:	f000 831e 	beq.w	e662 <_dtoa_r+0xaca>
    e026:	ee28 8b04 	vmul.f64	d8, d8, d4
    e02a:	eeb5 8b40 	vcmp.f64	d8, #0.0
    e02e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e032:	d1e6      	bne.n	e002 <_dtoa_r+0x46a>
    e034:	9b04      	ldr	r3, [sp, #16]
    e036:	3301      	adds	r3, #1
    e038:	9304      	str	r3, [sp, #16]
    e03a:	4689      	mov	r9, r1
    e03c:	e0dc      	b.n	e1f8 <_dtoa_r+0x660>
    e03e:	9b07      	ldr	r3, [sp, #28]
    e040:	b343      	cbz	r3, e094 <_dtoa_r+0x4fc>
    e042:	9b01      	ldr	r3, [sp, #4]
    e044:	2b01      	cmp	r3, #1
    e046:	f340 8276 	ble.w	e536 <_dtoa_r+0x99e>
    e04a:	9b08      	ldr	r3, [sp, #32]
    e04c:	f109 3aff 	add.w	sl, r9, #4294967295	; 0xffffffff
    e050:	4553      	cmp	r3, sl
    e052:	f280 823f 	bge.w	e4d4 <_dtoa_r+0x93c>
    e056:	9b08      	ldr	r3, [sp, #32]
    e058:	f8cd a020 	str.w	sl, [sp, #32]
    e05c:	ebaa 0203 	sub.w	r2, sl, r3
    e060:	4417      	add	r7, r2
    e062:	f04f 0a00 	mov.w	sl, #0
    e066:	f1b9 0f00 	cmp.w	r9, #0
    e06a:	f2c0 8325 	blt.w	e6b8 <_dtoa_r+0xb20>
    e06e:	9b06      	ldr	r3, [sp, #24]
    e070:	9309      	str	r3, [sp, #36]	; 0x24
    e072:	444b      	add	r3, r9
    e074:	44c8      	add	r8, r9
    e076:	9306      	str	r3, [sp, #24]
    e078:	2101      	movs	r1, #1
    e07a:	4620      	mov	r0, r4
    e07c:	f7ff f9ba 	bl	d3f4 <__i2b>
    e080:	4606      	mov	r6, r0
    e082:	e00c      	b.n	e09e <_dtoa_r+0x506>
    e084:	4b7d      	ldr	r3, [pc, #500]	; (e27c <_dtoa_r+0x6e4>)
    e086:	9300      	str	r3, [sp, #0]
    e088:	9800      	ldr	r0, [sp, #0]
    e08a:	b00f      	add	sp, #60	; 0x3c
    e08c:	ecbd 8b02 	vpop	{d8}
    e090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e094:	9b06      	ldr	r3, [sp, #24]
    e096:	f8dd a020 	ldr.w	sl, [sp, #32]
    e09a:	9e07      	ldr	r6, [sp, #28]
    e09c:	9309      	str	r3, [sp, #36]	; 0x24
    e09e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    e0a0:	b16b      	cbz	r3, e0be <_dtoa_r+0x526>
    e0a2:	f1b8 0f00 	cmp.w	r8, #0
    e0a6:	dd0a      	ble.n	e0be <_dtoa_r+0x526>
    e0a8:	4543      	cmp	r3, r8
    e0aa:	9906      	ldr	r1, [sp, #24]
    e0ac:	461a      	mov	r2, r3
    e0ae:	bfa8      	it	ge
    e0b0:	4642      	movge	r2, r8
    e0b2:	1a89      	subs	r1, r1, r2
    e0b4:	1a9b      	subs	r3, r3, r2
    e0b6:	9106      	str	r1, [sp, #24]
    e0b8:	9309      	str	r3, [sp, #36]	; 0x24
    e0ba:	eba8 0802 	sub.w	r8, r8, r2
    e0be:	9b08      	ldr	r3, [sp, #32]
    e0c0:	b163      	cbz	r3, e0dc <_dtoa_r+0x544>
    e0c2:	9b07      	ldr	r3, [sp, #28]
    e0c4:	2b00      	cmp	r3, #0
    e0c6:	f000 82a7 	beq.w	e618 <_dtoa_r+0xa80>
    e0ca:	f1ba 0f00 	cmp.w	sl, #0
    e0ce:	f300 8204 	bgt.w	e4da <_dtoa_r+0x942>
    e0d2:	9b08      	ldr	r3, [sp, #32]
    e0d4:	ebb3 020a 	subs.w	r2, r3, sl
    e0d8:	f040 82ff 	bne.w	e6da <_dtoa_r+0xb42>
    e0dc:	2101      	movs	r1, #1
    e0de:	4620      	mov	r0, r4
    e0e0:	f7ff f988 	bl	d3f4 <__i2b>
    e0e4:	2f00      	cmp	r7, #0
    e0e6:	4682      	mov	sl, r0
    e0e8:	f300 80af 	bgt.w	e24a <_dtoa_r+0x6b2>
    e0ec:	9b01      	ldr	r3, [sp, #4]
    e0ee:	2b01      	cmp	r3, #1
    e0f0:	f340 8187 	ble.w	e402 <_dtoa_r+0x86a>
    e0f4:	2300      	movs	r3, #0
    e0f6:	9308      	str	r3, [sp, #32]
    e0f8:	2001      	movs	r0, #1
    e0fa:	2f00      	cmp	r7, #0
    e0fc:	f040 80b1 	bne.w	e262 <_dtoa_r+0x6ca>
    e100:	4440      	add	r0, r8
    e102:	f010 001f 	ands.w	r0, r0, #31
    e106:	f000 817a 	beq.w	e3fe <_dtoa_r+0x866>
    e10a:	f1c0 0220 	rsb	r2, r0, #32
    e10e:	2a04      	cmp	r2, #4
    e110:	f300 8088 	bgt.w	e224 <_dtoa_r+0x68c>
    e114:	f040 81f6 	bne.w	e504 <_dtoa_r+0x96c>
    e118:	9b06      	ldr	r3, [sp, #24]
    e11a:	2b00      	cmp	r3, #0
    e11c:	dd05      	ble.n	e12a <_dtoa_r+0x592>
    e11e:	4629      	mov	r1, r5
    e120:	461a      	mov	r2, r3
    e122:	4620      	mov	r0, r4
    e124:	f7ff faa2 	bl	d66c <__lshift>
    e128:	4605      	mov	r5, r0
    e12a:	f1b8 0f00 	cmp.w	r8, #0
    e12e:	dd05      	ble.n	e13c <_dtoa_r+0x5a4>
    e130:	4651      	mov	r1, sl
    e132:	4642      	mov	r2, r8
    e134:	4620      	mov	r0, r4
    e136:	f7ff fa99 	bl	d66c <__lshift>
    e13a:	4682      	mov	sl, r0
    e13c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    e13e:	2b00      	cmp	r3, #0
    e140:	f040 813f 	bne.w	e3c2 <_dtoa_r+0x82a>
    e144:	f1b9 0f00 	cmp.w	r9, #0
    e148:	f340 8125 	ble.w	e396 <_dtoa_r+0x7fe>
    e14c:	9b07      	ldr	r3, [sp, #28]
    e14e:	2b00      	cmp	r3, #0
    e150:	f040 80a3 	bne.w	e29a <_dtoa_r+0x702>
    e154:	9b04      	ldr	r3, [sp, #16]
    e156:	3301      	adds	r3, #1
    e158:	9304      	str	r3, [sp, #16]
    e15a:	f8dd 8000 	ldr.w	r8, [sp]
    e15e:	2701      	movs	r7, #1
    e160:	e007      	b.n	e172 <_dtoa_r+0x5da>
    e162:	4629      	mov	r1, r5
    e164:	2300      	movs	r3, #0
    e166:	220a      	movs	r2, #10
    e168:	4620      	mov	r0, r4
    e16a:	f7ff f8a1 	bl	d2b0 <__multadd>
    e16e:	3701      	adds	r7, #1
    e170:	4605      	mov	r5, r0
    e172:	4651      	mov	r1, sl
    e174:	4628      	mov	r0, r5
    e176:	f7ff fc7b 	bl	da70 <quorem>
    e17a:	45b9      	cmp	r9, r7
    e17c:	f100 0030 	add.w	r0, r0, #48	; 0x30
    e180:	f808 0b01 	strb.w	r0, [r8], #1
    e184:	dced      	bgt.n	e162 <_dtoa_r+0x5ca>
    e186:	f1b9 0f00 	cmp.w	r9, #0
    e18a:	9a00      	ldr	r2, [sp, #0]
    e18c:	bfcc      	ite	gt
    e18e:	46cb      	movgt	fp, r9
    e190:	f04f 0b01 	movle.w	fp, #1
    e194:	4603      	mov	r3, r0
    e196:	4493      	add	fp, r2
    e198:	2700      	movs	r7, #0
    e19a:	4629      	mov	r1, r5
    e19c:	2201      	movs	r2, #1
    e19e:	4620      	mov	r0, r4
    e1a0:	9301      	str	r3, [sp, #4]
    e1a2:	f7ff fa63 	bl	d66c <__lshift>
    e1a6:	4651      	mov	r1, sl
    e1a8:	4605      	mov	r5, r0
    e1aa:	f7ff fad7 	bl	d75c <__mcmp>
    e1ae:	2800      	cmp	r0, #0
    e1b0:	f340 81af 	ble.w	e512 <_dtoa_r+0x97a>
    e1b4:	f81b 3c01 	ldrb.w	r3, [fp, #-1]
    e1b8:	9a00      	ldr	r2, [sp, #0]
    e1ba:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
    e1be:	e004      	b.n	e1ca <_dtoa_r+0x632>
    e1c0:	455a      	cmp	r2, fp
    e1c2:	f000 81b1 	beq.w	e528 <_dtoa_r+0x990>
    e1c6:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
    e1ca:	2b39      	cmp	r3, #57	; 0x39
    e1cc:	f10b 0901 	add.w	r9, fp, #1
    e1d0:	d0f6      	beq.n	e1c0 <_dtoa_r+0x628>
    e1d2:	3301      	adds	r3, #1
    e1d4:	f88b 3000 	strb.w	r3, [fp]
    e1d8:	4651      	mov	r1, sl
    e1da:	4620      	mov	r0, r4
    e1dc:	f7ff f85e 	bl	d29c <_Bfree>
    e1e0:	b156      	cbz	r6, e1f8 <_dtoa_r+0x660>
    e1e2:	b12f      	cbz	r7, e1f0 <_dtoa_r+0x658>
    e1e4:	42b7      	cmp	r7, r6
    e1e6:	d003      	beq.n	e1f0 <_dtoa_r+0x658>
    e1e8:	4639      	mov	r1, r7
    e1ea:	4620      	mov	r0, r4
    e1ec:	f7ff f856 	bl	d29c <_Bfree>
    e1f0:	4631      	mov	r1, r6
    e1f2:	4620      	mov	r0, r4
    e1f4:	f7ff f852 	bl	d29c <_Bfree>
    e1f8:	4629      	mov	r1, r5
    e1fa:	4620      	mov	r0, r4
    e1fc:	f7ff f84e 	bl	d29c <_Bfree>
    e200:	2300      	movs	r3, #0
    e202:	f889 3000 	strb.w	r3, [r9]
    e206:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    e20a:	601a      	str	r2, [r3, #0]
    e20c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    e20e:	2b00      	cmp	r3, #0
    e210:	f43f acfe 	beq.w	dc10 <_dtoa_r+0x78>
    e214:	9800      	ldr	r0, [sp, #0]
    e216:	f8c3 9000 	str.w	r9, [r3]
    e21a:	b00f      	add	sp, #60	; 0x3c
    e21c:	ecbd 8b02 	vpop	{d8}
    e220:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e224:	f1c0 001c 	rsb	r0, r0, #28
    e228:	9b06      	ldr	r3, [sp, #24]
    e22a:	4403      	add	r3, r0
    e22c:	9306      	str	r3, [sp, #24]
    e22e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    e230:	4403      	add	r3, r0
    e232:	9309      	str	r3, [sp, #36]	; 0x24
    e234:	4480      	add	r8, r0
    e236:	e76f      	b.n	e118 <_dtoa_r+0x580>
    e238:	f1c2 0220 	rsb	r2, r2, #32
    e23c:	fa06 f202 	lsl.w	r2, r6, r2
    e240:	ee07 2a10 	vmov	s14, r2
    e244:	e509      	b.n	dc5a <_dtoa_r+0xc2>
    e246:	2601      	movs	r6, #1
    e248:	e563      	b.n	dd12 <_dtoa_r+0x17a>
    e24a:	4601      	mov	r1, r0
    e24c:	463a      	mov	r2, r7
    e24e:	4620      	mov	r0, r4
    e250:	f7ff f9ac 	bl	d5ac <__pow5mult>
    e254:	9b01      	ldr	r3, [sp, #4]
    e256:	2b01      	cmp	r3, #1
    e258:	4682      	mov	sl, r0
    e25a:	f340 81c5 	ble.w	e5e8 <_dtoa_r+0xa50>
    e25e:	2300      	movs	r3, #0
    e260:	9308      	str	r3, [sp, #32]
    e262:	f8da 2010 	ldr.w	r2, [sl, #16]
    e266:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
    e26a:	6910      	ldr	r0, [r2, #16]
    e26c:	f7ff f872 	bl	d354 <__hi0bits>
    e270:	f1c0 0020 	rsb	r0, r0, #32
    e274:	e744      	b.n	e100 <_dtoa_r+0x568>
    e276:	bf00      	nop
    e278:	200002a8 	.word	0x200002a8
    e27c:	20000ad4 	.word	0x20000ad4
    e280:	4631      	mov	r1, r6
    e282:	2300      	movs	r3, #0
    e284:	220a      	movs	r2, #10
    e286:	4620      	mov	r0, r4
    e288:	f7ff f812 	bl	d2b0 <__multadd>
    e28c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    e28e:	2b00      	cmp	r3, #0
    e290:	4606      	mov	r6, r0
    e292:	f340 82ce 	ble.w	e832 <_dtoa_r+0xc9a>
    e296:	9704      	str	r7, [sp, #16]
    e298:	4699      	mov	r9, r3
    e29a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    e29c:	2b00      	cmp	r3, #0
    e29e:	dd05      	ble.n	e2ac <_dtoa_r+0x714>
    e2a0:	4631      	mov	r1, r6
    e2a2:	461a      	mov	r2, r3
    e2a4:	4620      	mov	r0, r4
    e2a6:	f7ff f9e1 	bl	d66c <__lshift>
    e2aa:	4606      	mov	r6, r0
    e2ac:	9b08      	ldr	r3, [sp, #32]
    e2ae:	2b00      	cmp	r3, #0
    e2b0:	f040 81eb 	bne.w	e68a <_dtoa_r+0xaf2>
    e2b4:	46b0      	mov	r8, r6
    e2b6:	9b02      	ldr	r3, [sp, #8]
    e2b8:	9f00      	ldr	r7, [sp, #0]
    e2ba:	f003 0201 	and.w	r2, r3, #1
    e2be:	1e7b      	subs	r3, r7, #1
    e2c0:	444b      	add	r3, r9
    e2c2:	9308      	str	r3, [sp, #32]
    e2c4:	9b01      	ldr	r3, [sp, #4]
    e2c6:	920a      	str	r2, [sp, #40]	; 0x28
    e2c8:	4313      	orrs	r3, r2
    e2ca:	9309      	str	r3, [sp, #36]	; 0x24
    e2cc:	4651      	mov	r1, sl
    e2ce:	4628      	mov	r0, r5
    e2d0:	f7ff fbce 	bl	da70 <quorem>
    e2d4:	4631      	mov	r1, r6
    e2d6:	4683      	mov	fp, r0
    e2d8:	4628      	mov	r0, r5
    e2da:	f7ff fa3f 	bl	d75c <__mcmp>
    e2de:	4642      	mov	r2, r8
    e2e0:	4651      	mov	r1, sl
    e2e2:	4681      	mov	r9, r0
    e2e4:	4620      	mov	r0, r4
    e2e6:	f7ff fa5b 	bl	d7a0 <__mdiff>
    e2ea:	68c2      	ldr	r2, [r0, #12]
    e2ec:	4601      	mov	r1, r0
    e2ee:	f10b 0330 	add.w	r3, fp, #48	; 0x30
    e2f2:	2a00      	cmp	r2, #0
    e2f4:	d142      	bne.n	e37c <_dtoa_r+0x7e4>
    e2f6:	e9cd 0306 	strd	r0, r3, [sp, #24]
    e2fa:	4628      	mov	r0, r5
    e2fc:	f7ff fa2e 	bl	d75c <__mcmp>
    e300:	9906      	ldr	r1, [sp, #24]
    e302:	9002      	str	r0, [sp, #8]
    e304:	4620      	mov	r0, r4
    e306:	f7fe ffc9 	bl	d29c <_Bfree>
    e30a:	9a02      	ldr	r2, [sp, #8]
    e30c:	9b07      	ldr	r3, [sp, #28]
    e30e:	b91a      	cbnz	r2, e318 <_dtoa_r+0x780>
    e310:	9909      	ldr	r1, [sp, #36]	; 0x24
    e312:	2900      	cmp	r1, #0
    e314:	f000 827e 	beq.w	e814 <_dtoa_r+0xc7c>
    e318:	f1b9 0f00 	cmp.w	r9, #0
    e31c:	f2c0 8183 	blt.w	e626 <_dtoa_r+0xa8e>
    e320:	9901      	ldr	r1, [sp, #4]
    e322:	ea49 0901 	orr.w	r9, r9, r1
    e326:	990a      	ldr	r1, [sp, #40]	; 0x28
    e328:	ea51 0909 	orrs.w	r9, r1, r9
    e32c:	f000 817b 	beq.w	e626 <_dtoa_r+0xa8e>
    e330:	2a00      	cmp	r2, #0
    e332:	f300 81c6 	bgt.w	e6c2 <_dtoa_r+0xb2a>
    e336:	9a08      	ldr	r2, [sp, #32]
    e338:	703b      	strb	r3, [r7, #0]
    e33a:	f107 0901 	add.w	r9, r7, #1
    e33e:	4297      	cmp	r7, r2
    e340:	46cb      	mov	fp, r9
    e342:	f000 81c4 	beq.w	e6ce <_dtoa_r+0xb36>
    e346:	4629      	mov	r1, r5
    e348:	2300      	movs	r3, #0
    e34a:	220a      	movs	r2, #10
    e34c:	4620      	mov	r0, r4
    e34e:	f7fe ffaf 	bl	d2b0 <__multadd>
    e352:	4546      	cmp	r6, r8
    e354:	4605      	mov	r5, r0
    e356:	4631      	mov	r1, r6
    e358:	f04f 0300 	mov.w	r3, #0
    e35c:	f04f 020a 	mov.w	r2, #10
    e360:	4620      	mov	r0, r4
    e362:	d012      	beq.n	e38a <_dtoa_r+0x7f2>
    e364:	f7fe ffa4 	bl	d2b0 <__multadd>
    e368:	4641      	mov	r1, r8
    e36a:	4606      	mov	r6, r0
    e36c:	2300      	movs	r3, #0
    e36e:	220a      	movs	r2, #10
    e370:	4620      	mov	r0, r4
    e372:	f7fe ff9d 	bl	d2b0 <__multadd>
    e376:	464f      	mov	r7, r9
    e378:	4680      	mov	r8, r0
    e37a:	e7a7      	b.n	e2cc <_dtoa_r+0x734>
    e37c:	4620      	mov	r0, r4
    e37e:	9302      	str	r3, [sp, #8]
    e380:	f7fe ff8c 	bl	d29c <_Bfree>
    e384:	9b02      	ldr	r3, [sp, #8]
    e386:	2201      	movs	r2, #1
    e388:	e7c6      	b.n	e318 <_dtoa_r+0x780>
    e38a:	f7fe ff91 	bl	d2b0 <__multadd>
    e38e:	464f      	mov	r7, r9
    e390:	4606      	mov	r6, r0
    e392:	4680      	mov	r8, r0
    e394:	e79a      	b.n	e2cc <_dtoa_r+0x734>
    e396:	9b01      	ldr	r3, [sp, #4]
    e398:	2b02      	cmp	r3, #2
    e39a:	dc71      	bgt.n	e480 <_dtoa_r+0x8e8>
    e39c:	9b07      	ldr	r3, [sp, #28]
    e39e:	2b00      	cmp	r3, #0
    e3a0:	f47f af7b 	bne.w	e29a <_dtoa_r+0x702>
    e3a4:	9b04      	ldr	r3, [sp, #16]
    e3a6:	4651      	mov	r1, sl
    e3a8:	3301      	adds	r3, #1
    e3aa:	4628      	mov	r0, r5
    e3ac:	9304      	str	r3, [sp, #16]
    e3ae:	f7ff fb5f 	bl	da70 <quorem>
    e3b2:	f8dd b000 	ldr.w	fp, [sp]
    e3b6:	f100 0330 	add.w	r3, r0, #48	; 0x30
    e3ba:	f80b 3b01 	strb.w	r3, [fp], #1
    e3be:	2700      	movs	r7, #0
    e3c0:	e6eb      	b.n	e19a <_dtoa_r+0x602>
    e3c2:	4651      	mov	r1, sl
    e3c4:	4628      	mov	r0, r5
    e3c6:	f7ff f9c9 	bl	d75c <__mcmp>
    e3ca:	2800      	cmp	r0, #0
    e3cc:	f6bf aeba 	bge.w	e144 <_dtoa_r+0x5ac>
    e3d0:	4629      	mov	r1, r5
    e3d2:	2300      	movs	r3, #0
    e3d4:	220a      	movs	r2, #10
    e3d6:	4620      	mov	r0, r4
    e3d8:	f7fe ff6a 	bl	d2b0 <__multadd>
    e3dc:	9b04      	ldr	r3, [sp, #16]
    e3de:	1e5f      	subs	r7, r3, #1
    e3e0:	9b07      	ldr	r3, [sp, #28]
    e3e2:	4605      	mov	r5, r0
    e3e4:	2b00      	cmp	r3, #0
    e3e6:	f47f af4b 	bne.w	e280 <_dtoa_r+0x6e8>
    e3ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    e3ec:	2b00      	cmp	r3, #0
    e3ee:	f340 8218 	ble.w	e822 <_dtoa_r+0xc8a>
    e3f2:	4699      	mov	r9, r3
    e3f4:	e6b1      	b.n	e15a <_dtoa_r+0x5c2>
    e3f6:	4bbc      	ldr	r3, [pc, #752]	; (e6e8 <_dtoa_r+0xb50>)
    e3f8:	9300      	str	r3, [sp, #0]
    e3fa:	3303      	adds	r3, #3
    e3fc:	e4a4      	b.n	dd48 <_dtoa_r+0x1b0>
    e3fe:	201c      	movs	r0, #28
    e400:	e712      	b.n	e228 <_dtoa_r+0x690>
    e402:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    e406:	2800      	cmp	r0, #0
    e408:	f47f ae74 	bne.w	e0f4 <_dtoa_r+0x55c>
    e40c:	f3c1 0213 	ubfx	r2, r1, #0, #20
    e410:	2a00      	cmp	r2, #0
    e412:	f000 80f4 	beq.w	e5fe <_dtoa_r+0xa66>
    e416:	9b02      	ldr	r3, [sp, #8]
    e418:	9308      	str	r3, [sp, #32]
    e41a:	e66d      	b.n	e0f8 <_dtoa_r+0x560>
    e41c:	2301      	movs	r3, #1
    e41e:	9307      	str	r3, [sp, #28]
    e420:	9b04      	ldr	r3, [sp, #16]
    e422:	445b      	add	r3, fp
    e424:	f103 0901 	add.w	r9, r3, #1
    e428:	f1b9 0f01 	cmp.w	r9, #1
    e42c:	46cc      	mov	ip, r9
    e42e:	930b      	str	r3, [sp, #44]	; 0x2c
    e430:	bfb8      	it	lt
    e432:	f04f 0c01 	movlt.w	ip, #1
    e436:	2100      	movs	r1, #0
    e438:	f1bc 0f17 	cmp.w	ip, #23
    e43c:	63e1      	str	r1, [r4, #60]	; 0x3c
    e43e:	f77f acbc 	ble.w	ddba <_dtoa_r+0x222>
    e442:	2001      	movs	r0, #1
    e444:	2204      	movs	r2, #4
    e446:	0052      	lsls	r2, r2, #1
    e448:	f102 0314 	add.w	r3, r2, #20
    e44c:	4563      	cmp	r3, ip
    e44e:	4601      	mov	r1, r0
    e450:	f100 0001 	add.w	r0, r0, #1
    e454:	d9f7      	bls.n	e446 <_dtoa_r+0x8ae>
    e456:	63e1      	str	r1, [r4, #60]	; 0x3c
    e458:	e4af      	b.n	ddba <_dtoa_r+0x222>
    e45a:	2301      	movs	r3, #1
    e45c:	9307      	str	r3, [sp, #28]
    e45e:	f1bb 0f00 	cmp.w	fp, #0
    e462:	dd52      	ble.n	e50a <_dtoa_r+0x972>
    e464:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
    e468:	46d9      	mov	r9, fp
    e46a:	46dc      	mov	ip, fp
    e46c:	e7e3      	b.n	e436 <_dtoa_r+0x89e>
    e46e:	2300      	movs	r3, #0
    e470:	9307      	str	r3, [sp, #28]
    e472:	e7d5      	b.n	e420 <_dtoa_r+0x888>
    e474:	2300      	movs	r3, #0
    e476:	9307      	str	r3, [sp, #28]
    e478:	e7f1      	b.n	e45e <_dtoa_r+0x8c6>
    e47a:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
    e47e:	9704      	str	r7, [sp, #16]
    e480:	f1b9 0f00 	cmp.w	r9, #0
    e484:	f47f ada1 	bne.w	dfca <_dtoa_r+0x432>
    e488:	4651      	mov	r1, sl
    e48a:	464b      	mov	r3, r9
    e48c:	2205      	movs	r2, #5
    e48e:	4620      	mov	r0, r4
    e490:	f7fe ff0e 	bl	d2b0 <__multadd>
    e494:	4601      	mov	r1, r0
    e496:	4682      	mov	sl, r0
    e498:	4628      	mov	r0, r5
    e49a:	f7ff f95f 	bl	d75c <__mcmp>
    e49e:	2800      	cmp	r0, #0
    e4a0:	f77f ad93 	ble.w	dfca <_dtoa_r+0x432>
    e4a4:	9b04      	ldr	r3, [sp, #16]
    e4a6:	f103 0b01 	add.w	fp, r3, #1
    e4aa:	9b00      	ldr	r3, [sp, #0]
    e4ac:	2231      	movs	r2, #49	; 0x31
    e4ae:	4698      	mov	r8, r3
    e4b0:	f803 2b01 	strb.w	r2, [r3], #1
    e4b4:	9300      	str	r3, [sp, #0]
    e4b6:	4651      	mov	r1, sl
    e4b8:	4620      	mov	r0, r4
    e4ba:	f7fe feef 	bl	d29c <_Bfree>
    e4be:	f10b 0301 	add.w	r3, fp, #1
    e4c2:	f8dd 9000 	ldr.w	r9, [sp]
    e4c6:	9304      	str	r3, [sp, #16]
    e4c8:	f8cd 8000 	str.w	r8, [sp]
    e4cc:	2e00      	cmp	r6, #0
    e4ce:	f47f ae8f 	bne.w	e1f0 <_dtoa_r+0x658>
    e4d2:	e691      	b.n	e1f8 <_dtoa_r+0x660>
    e4d4:	eba3 0a0a 	sub.w	sl, r3, sl
    e4d8:	e5c5      	b.n	e066 <_dtoa_r+0x4ce>
    e4da:	4631      	mov	r1, r6
    e4dc:	4652      	mov	r2, sl
    e4de:	4620      	mov	r0, r4
    e4e0:	f7ff f864 	bl	d5ac <__pow5mult>
    e4e4:	462a      	mov	r2, r5
    e4e6:	4601      	mov	r1, r0
    e4e8:	4606      	mov	r6, r0
    e4ea:	4620      	mov	r0, r4
    e4ec:	f7fe ffb0 	bl	d450 <__multiply>
    e4f0:	4629      	mov	r1, r5
    e4f2:	4605      	mov	r5, r0
    e4f4:	4620      	mov	r0, r4
    e4f6:	f7fe fed1 	bl	d29c <_Bfree>
    e4fa:	e5ea      	b.n	e0d2 <_dtoa_r+0x53a>
    e4fc:	2002      	movs	r0, #2
    e4fe:	eeb0 5b48 	vmov.f64	d5, d8
    e502:	e481      	b.n	de08 <_dtoa_r+0x270>
    e504:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
    e508:	e68e      	b.n	e228 <_dtoa_r+0x690>
    e50a:	f04f 0b01 	mov.w	fp, #1
    e50e:	46d9      	mov	r9, fp
    e510:	e44f      	b.n	ddb2 <_dtoa_r+0x21a>
    e512:	d103      	bne.n	e51c <_dtoa_r+0x984>
    e514:	9b01      	ldr	r3, [sp, #4]
    e516:	07db      	lsls	r3, r3, #31
    e518:	f53f ae4c 	bmi.w	e1b4 <_dtoa_r+0x61c>
    e51c:	46d9      	mov	r9, fp
    e51e:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
    e522:	2b30      	cmp	r3, #48	; 0x30
    e524:	d0fa      	beq.n	e51c <_dtoa_r+0x984>
    e526:	e657      	b.n	e1d8 <_dtoa_r+0x640>
    e528:	9b04      	ldr	r3, [sp, #16]
    e52a:	9a00      	ldr	r2, [sp, #0]
    e52c:	3301      	adds	r3, #1
    e52e:	9304      	str	r3, [sp, #16]
    e530:	2331      	movs	r3, #49	; 0x31
    e532:	7013      	strb	r3, [r2, #0]
    e534:	e650      	b.n	e1d8 <_dtoa_r+0x640>
    e536:	f1ba 0f00 	cmp.w	sl, #0
    e53a:	f000 8123 	beq.w	e784 <_dtoa_r+0xbec>
    e53e:	f202 4233 	addw	r2, r2, #1075	; 0x433
    e542:	9b06      	ldr	r3, [sp, #24]
    e544:	9309      	str	r3, [sp, #36]	; 0x24
    e546:	4413      	add	r3, r2
    e548:	f8dd a020 	ldr.w	sl, [sp, #32]
    e54c:	9306      	str	r3, [sp, #24]
    e54e:	4490      	add	r8, r2
    e550:	e592      	b.n	e078 <_dtoa_r+0x4e0>
    e552:	ee07 0a90 	vmov	s15, r0
    e556:	eeb1 5b0c 	vmov.f64	d5, #28	; 0x40e00000  7.0
    e55a:	eeb8 7be7 	vcvt.f64.s32	d7, s15
    e55e:	eea6 5b07 	vfma.f64	d5, d6, d7
    e562:	ee15 2a90 	vmov	r2, s11
    e566:	ec51 0b15 	vmov	r0, r1, d5
    e56a:	f1a2 7150 	sub.w	r1, r2, #54525952	; 0x3400000
    e56e:	ec41 0b15 	vmov	d5, r0, r1
    e572:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
    e576:	ee36 7b47 	vsub.f64	d7, d6, d7
    e57a:	eeb4 7bc5 	vcmpe.f64	d7, d5
    e57e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e582:	f300 8137 	bgt.w	e7f4 <_dtoa_r+0xc5c>
    e586:	eeb1 5b45 	vneg.f64	d5, d5
    e58a:	eeb4 7bc5 	vcmpe.f64	d7, d5
    e58e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e592:	f57f acfb 	bpl.w	df8c <_dtoa_r+0x3f4>
    e596:	f04f 0a00 	mov.w	sl, #0
    e59a:	4656      	mov	r6, sl
    e59c:	e515      	b.n	dfca <_dtoa_r+0x432>
    e59e:	f000 80f5 	beq.w	e78c <_dtoa_r+0xbf4>
    e5a2:	9b04      	ldr	r3, [sp, #16]
    e5a4:	4951      	ldr	r1, [pc, #324]	; (e6ec <_dtoa_r+0xb54>)
    e5a6:	425a      	negs	r2, r3
    e5a8:	f002 000f 	and.w	r0, r2, #15
    e5ac:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
    e5b0:	ed91 6b00 	vldr	d6, [r1]
    e5b4:	1112      	asrs	r2, r2, #4
    e5b6:	ee28 6b06 	vmul.f64	d6, d8, d6
    e5ba:	f000 8142 	beq.w	e842 <_dtoa_r+0xcaa>
    e5be:	eeb0 7b46 	vmov.f64	d7, d6
    e5c2:	494b      	ldr	r1, [pc, #300]	; (e6f0 <_dtoa_r+0xb58>)
    e5c4:	2600      	movs	r6, #0
    e5c6:	2002      	movs	r0, #2
    e5c8:	07d3      	lsls	r3, r2, #31
    e5ca:	d505      	bpl.n	e5d8 <_dtoa_r+0xa40>
    e5cc:	ed91 5b00 	vldr	d5, [r1]
    e5d0:	3001      	adds	r0, #1
    e5d2:	2601      	movs	r6, #1
    e5d4:	ee27 7b05 	vmul.f64	d7, d7, d5
    e5d8:	1052      	asrs	r2, r2, #1
    e5da:	f101 0108 	add.w	r1, r1, #8
    e5de:	d1f3      	bne.n	e5c8 <_dtoa_r+0xa30>
    e5e0:	2e00      	cmp	r6, #0
    e5e2:	fe06 6b07 	vseleq.f64	d6, d6, d7
    e5e6:	e41e      	b.n	de26 <_dtoa_r+0x28e>
    e5e8:	9b02      	ldr	r3, [sp, #8]
    e5ea:	2b00      	cmp	r3, #0
    e5ec:	f47f ae37 	bne.w	e25e <_dtoa_r+0x6c6>
    e5f0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    e5f4:	f3c1 0213 	ubfx	r2, r1, #0, #20
    e5f8:	2a00      	cmp	r2, #0
    e5fa:	f040 8137 	bne.w	e86c <_dtoa_r+0xcd4>
    e5fe:	4a3d      	ldr	r2, [pc, #244]	; (e6f4 <_dtoa_r+0xb5c>)
    e600:	400a      	ands	r2, r1
    e602:	2a00      	cmp	r2, #0
    e604:	f000 80fa 	beq.w	e7fc <_dtoa_r+0xc64>
    e608:	9b06      	ldr	r3, [sp, #24]
    e60a:	3301      	adds	r3, #1
    e60c:	9306      	str	r3, [sp, #24]
    e60e:	2301      	movs	r3, #1
    e610:	f108 0801 	add.w	r8, r8, #1
    e614:	9308      	str	r3, [sp, #32]
    e616:	e56f      	b.n	e0f8 <_dtoa_r+0x560>
    e618:	4629      	mov	r1, r5
    e61a:	9a08      	ldr	r2, [sp, #32]
    e61c:	4620      	mov	r0, r4
    e61e:	f7fe ffc5 	bl	d5ac <__pow5mult>
    e622:	4605      	mov	r5, r0
    e624:	e55a      	b.n	e0dc <_dtoa_r+0x544>
    e626:	2a00      	cmp	r2, #0
    e628:	dd12      	ble.n	e650 <_dtoa_r+0xab8>
    e62a:	4629      	mov	r1, r5
    e62c:	2201      	movs	r2, #1
    e62e:	4620      	mov	r0, r4
    e630:	9301      	str	r3, [sp, #4]
    e632:	f7ff f81b 	bl	d66c <__lshift>
    e636:	4651      	mov	r1, sl
    e638:	4605      	mov	r5, r0
    e63a:	f7ff f88f 	bl	d75c <__mcmp>
    e63e:	2800      	cmp	r0, #0
    e640:	9b01      	ldr	r3, [sp, #4]
    e642:	f340 80e1 	ble.w	e808 <_dtoa_r+0xc70>
    e646:	2b39      	cmp	r3, #57	; 0x39
    e648:	f000 80ca 	beq.w	e7e0 <_dtoa_r+0xc48>
    e64c:	f10b 0331 	add.w	r3, fp, #49	; 0x31
    e650:	46b9      	mov	r9, r7
    e652:	f809 3b01 	strb.w	r3, [r9], #1
    e656:	9b04      	ldr	r3, [sp, #16]
    e658:	3301      	adds	r3, #1
    e65a:	4637      	mov	r7, r6
    e65c:	9304      	str	r3, [sp, #16]
    e65e:	4646      	mov	r6, r8
    e660:	e5ba      	b.n	e1d8 <_dtoa_r+0x640>
    e662:	ee38 8b08 	vadd.f64	d8, d8, d8
    e666:	eeb4 8bc6 	vcmpe.f64	d8, d6
    e66a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e66e:	dc0a      	bgt.n	e686 <_dtoa_r+0xaee>
    e670:	eeb4 8b46 	vcmp.f64	d8, d6
    e674:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e678:	f47f acdc 	bne.w	e034 <_dtoa_r+0x49c>
    e67c:	ee17 3a10 	vmov	r3, s14
    e680:	07d8      	lsls	r0, r3, #31
    e682:	f57f acd7 	bpl.w	e034 <_dtoa_r+0x49c>
    e686:	9a00      	ldr	r2, [sp, #0]
    e688:	e454      	b.n	df34 <_dtoa_r+0x39c>
    e68a:	6871      	ldr	r1, [r6, #4]
    e68c:	4620      	mov	r0, r4
    e68e:	f7fe fddf 	bl	d250 <_Balloc>
    e692:	4607      	mov	r7, r0
    e694:	2800      	cmp	r0, #0
    e696:	f000 80de 	beq.w	e856 <_dtoa_r+0xcbe>
    e69a:	6933      	ldr	r3, [r6, #16]
    e69c:	3302      	adds	r3, #2
    e69e:	009a      	lsls	r2, r3, #2
    e6a0:	f106 010c 	add.w	r1, r6, #12
    e6a4:	300c      	adds	r0, #12
    e6a6:	f7f1 ffbd 	bl	624 <memcpy>
    e6aa:	4639      	mov	r1, r7
    e6ac:	2201      	movs	r2, #1
    e6ae:	4620      	mov	r0, r4
    e6b0:	f7fe ffdc 	bl	d66c <__lshift>
    e6b4:	4680      	mov	r8, r0
    e6b6:	e5fe      	b.n	e2b6 <_dtoa_r+0x71e>
    e6b8:	9b06      	ldr	r3, [sp, #24]
    e6ba:	eba3 0309 	sub.w	r3, r3, r9
    e6be:	9309      	str	r3, [sp, #36]	; 0x24
    e6c0:	e4da      	b.n	e078 <_dtoa_r+0x4e0>
    e6c2:	2b39      	cmp	r3, #57	; 0x39
    e6c4:	f000 808c 	beq.w	e7e0 <_dtoa_r+0xc48>
    e6c8:	46b9      	mov	r9, r7
    e6ca:	3301      	adds	r3, #1
    e6cc:	e7c1      	b.n	e652 <_dtoa_r+0xaba>
    e6ce:	9a04      	ldr	r2, [sp, #16]
    e6d0:	3201      	adds	r2, #1
    e6d2:	4637      	mov	r7, r6
    e6d4:	9204      	str	r2, [sp, #16]
    e6d6:	4646      	mov	r6, r8
    e6d8:	e55f      	b.n	e19a <_dtoa_r+0x602>
    e6da:	4629      	mov	r1, r5
    e6dc:	4620      	mov	r0, r4
    e6de:	f7fe ff65 	bl	d5ac <__pow5mult>
    e6e2:	4605      	mov	r5, r0
    e6e4:	e4fa      	b.n	e0dc <_dtoa_r+0x544>
    e6e6:	bf00      	nop
    e6e8:	20000a34 	.word	0x20000a34
    e6ec:	200002a8 	.word	0x200002a8
    e6f0:	20000280 	.word	0x20000280
    e6f4:	7ff00000 	.word	0x7ff00000
    e6f8:	4b5e      	ldr	r3, [pc, #376]	; (e874 <_dtoa_r+0xcdc>)
    e6fa:	eefd 5bc6 	vcvt.s32.f64	s11, d6
    e6fe:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
    e702:	ed1c 3b02 	vldr	d3, [ip, #-8]
    e706:	eeb8 7be5 	vcvt.f64.s32	d7, s11
    e70a:	ee36 7b47 	vsub.f64	d7, d6, d7
    e70e:	ec41 0b16 	vmov	d6, r0, r1
    e712:	ee15 1a90 	vmov	r1, s11
    e716:	ee23 3b06 	vmul.f64	d3, d3, d6
    e71a:	9800      	ldr	r0, [sp, #0]
    e71c:	3130      	adds	r1, #48	; 0x30
    e71e:	2a01      	cmp	r2, #1
    e720:	f800 1b01 	strb.w	r1, [r0], #1
    e724:	f000 8083 	beq.w	e82e <_dtoa_r+0xc96>
    e728:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
    e72c:	9b00      	ldr	r3, [sp, #0]
    e72e:	1899      	adds	r1, r3, r2
    e730:	ee27 7b04 	vmul.f64	d7, d7, d4
    e734:	eefd 6bc7 	vcvt.s32.f64	s13, d7
    e738:	ee16 3a90 	vmov	r3, s13
    e73c:	3330      	adds	r3, #48	; 0x30
    e73e:	f800 3b01 	strb.w	r3, [r0], #1
    e742:	4281      	cmp	r1, r0
    e744:	eeb8 5be6 	vcvt.f64.s32	d5, s13
    e748:	ee37 7b45 	vsub.f64	d7, d7, d5
    e74c:	d1f0      	bne.n	e730 <_dtoa_r+0xb98>
    e74e:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    e752:	ee33 5b06 	vadd.f64	d5, d3, d6
    e756:	eeb4 5bc7 	vcmpe.f64	d5, d7
    e75a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e75e:	f53f abe3 	bmi.w	df28 <_dtoa_r+0x390>
    e762:	ee36 6b43 	vsub.f64	d6, d6, d3
    e766:	eeb4 6bc7 	vcmpe.f64	d6, d7
    e76a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e76e:	f77f ac0d 	ble.w	df8c <_dtoa_r+0x3f4>
    e772:	4689      	mov	r9, r1
    e774:	3901      	subs	r1, #1
    e776:	f819 3c01 	ldrb.w	r3, [r9, #-1]
    e77a:	2b30      	cmp	r3, #48	; 0x30
    e77c:	d0f9      	beq.n	e772 <_dtoa_r+0xbda>
    e77e:	1c73      	adds	r3, r6, #1
    e780:	9304      	str	r3, [sp, #16]
    e782:	e539      	b.n	e1f8 <_dtoa_r+0x660>
    e784:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    e786:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
    e78a:	e6da      	b.n	e542 <_dtoa_r+0x9aa>
    e78c:	2002      	movs	r0, #2
    e78e:	eeb0 6b48 	vmov.f64	d6, d8
    e792:	f7ff bb48 	b.w	de26 <_dtoa_r+0x28e>
    e796:	f1b9 0f00 	cmp.w	r9, #0
    e79a:	f43f aeda 	beq.w	e552 <_dtoa_r+0x9ba>
    e79e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    e7a0:	2a00      	cmp	r2, #0
    e7a2:	f77f abf3 	ble.w	df8c <_dtoa_r+0x3f4>
    e7a6:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
    e7aa:	ee26 6b04 	vmul.f64	d6, d6, d4
    e7ae:	3001      	adds	r0, #1
    e7b0:	ee07 0a90 	vmov	s15, r0
    e7b4:	9b04      	ldr	r3, [sp, #16]
    e7b6:	eeb8 5be7 	vcvt.f64.s32	d5, s15
    e7ba:	eeb1 7b0c 	vmov.f64	d7, #28	; 0x40e00000  7.0
    e7be:	eea6 7b05 	vfma.f64	d7, d6, d5
    e7c2:	ee17 ca90 	vmov	ip, s15
    e7c6:	ec51 0b17 	vmov	r0, r1, d7
    e7ca:	1e5e      	subs	r6, r3, #1
    e7cc:	f1ac 7150 	sub.w	r1, ip, #54525952	; 0x3400000
    e7d0:	f7ff bb47 	b.w	de62 <_dtoa_r+0x2ca>
    e7d4:	9b04      	ldr	r3, [sp, #16]
    e7d6:	3301      	adds	r3, #1
    e7d8:	9304      	str	r3, [sp, #16]
    e7da:	2331      	movs	r3, #49	; 0x31
    e7dc:	f7ff bbb1 	b.w	df42 <_dtoa_r+0x3aa>
    e7e0:	9b04      	ldr	r3, [sp, #16]
    e7e2:	46bb      	mov	fp, r7
    e7e4:	3301      	adds	r3, #1
    e7e6:	9304      	str	r3, [sp, #16]
    e7e8:	2339      	movs	r3, #57	; 0x39
    e7ea:	4637      	mov	r7, r6
    e7ec:	f80b 3b01 	strb.w	r3, [fp], #1
    e7f0:	4646      	mov	r6, r8
    e7f2:	e4e1      	b.n	e1b8 <_dtoa_r+0x620>
    e7f4:	f04f 0a00 	mov.w	sl, #0
    e7f8:	4656      	mov	r6, sl
    e7fa:	e653      	b.n	e4a4 <_dtoa_r+0x90c>
    e7fc:	9208      	str	r2, [sp, #32]
    e7fe:	e47b      	b.n	e0f8 <_dtoa_r+0x560>
    e800:	1c73      	adds	r3, r6, #1
    e802:	9304      	str	r3, [sp, #16]
    e804:	4689      	mov	r9, r1
    e806:	e4f7      	b.n	e1f8 <_dtoa_r+0x660>
    e808:	f47f af22 	bne.w	e650 <_dtoa_r+0xab8>
    e80c:	07da      	lsls	r2, r3, #31
    e80e:	f57f af1f 	bpl.w	e650 <_dtoa_r+0xab8>
    e812:	e718      	b.n	e646 <_dtoa_r+0xaae>
    e814:	2b39      	cmp	r3, #57	; 0x39
    e816:	d0e3      	beq.n	e7e0 <_dtoa_r+0xc48>
    e818:	f1b9 0f00 	cmp.w	r9, #0
    e81c:	f73f af16 	bgt.w	e64c <_dtoa_r+0xab4>
    e820:	e716      	b.n	e650 <_dtoa_r+0xab8>
    e822:	9b01      	ldr	r3, [sp, #4]
    e824:	2b02      	cmp	r3, #2
    e826:	f73f ae28 	bgt.w	e47a <_dtoa_r+0x8e2>
    e82a:	9704      	str	r7, [sp, #16]
    e82c:	e5ba      	b.n	e3a4 <_dtoa_r+0x80c>
    e82e:	4601      	mov	r1, r0
    e830:	e78d      	b.n	e74e <_dtoa_r+0xbb6>
    e832:	9b01      	ldr	r3, [sp, #4]
    e834:	2b02      	cmp	r3, #2
    e836:	f73f ae20 	bgt.w	e47a <_dtoa_r+0x8e2>
    e83a:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
    e83e:	9704      	str	r7, [sp, #16]
    e840:	e52b      	b.n	e29a <_dtoa_r+0x702>
    e842:	2002      	movs	r0, #2
    e844:	f7ff baef 	b.w	de26 <_dtoa_r+0x28e>
    e848:	4b0b      	ldr	r3, [pc, #44]	; (e878 <_dtoa_r+0xce0>)
    e84a:	480c      	ldr	r0, [pc, #48]	; (e87c <_dtoa_r+0xce4>)
    e84c:	2200      	movs	r2, #0
    e84e:	f240 11af 	movw	r1, #431	; 0x1af
    e852:	f7fe f99f 	bl	cb94 <__assert_func>
    e856:	4b08      	ldr	r3, [pc, #32]	; (e878 <_dtoa_r+0xce0>)
    e858:	4808      	ldr	r0, [pc, #32]	; (e87c <_dtoa_r+0xce4>)
    e85a:	463a      	mov	r2, r7
    e85c:	f240 21ef 	movw	r1, #751	; 0x2ef
    e860:	f7fe f998 	bl	cb94 <__assert_func>
    e864:	4b06      	ldr	r3, [pc, #24]	; (e880 <_dtoa_r+0xce8>)
    e866:	9300      	str	r3, [sp, #0]
    e868:	f7ff b9d2 	b.w	dc10 <_dtoa_r+0x78>
    e86c:	9b02      	ldr	r3, [sp, #8]
    e86e:	9308      	str	r3, [sp, #32]
    e870:	e4f7      	b.n	e262 <_dtoa_r+0x6ca>
    e872:	bf00      	nop
    e874:	200002a8 	.word	0x200002a8
    e878:	200008b4 	.word	0x200008b4
    e87c:	20000a38 	.word	0x20000a38
    e880:	20000a28 	.word	0x20000a28

0000e884 <_close_r>:
    e884:	b538      	push	{r3, r4, r5, lr}
    e886:	4d07      	ldr	r5, [pc, #28]	; (e8a4 <_close_r+0x20>)
    e888:	2200      	movs	r2, #0
    e88a:	4604      	mov	r4, r0
    e88c:	4608      	mov	r0, r1
    e88e:	602a      	str	r2, [r5, #0]
    e890:	f7f2 f87c 	bl	98c <_close>
    e894:	1c43      	adds	r3, r0, #1
    e896:	d000      	beq.n	e89a <_close_r+0x16>
    e898:	bd38      	pop	{r3, r4, r5, pc}
    e89a:	682b      	ldr	r3, [r5, #0]
    e89c:	2b00      	cmp	r3, #0
    e89e:	d0fb      	beq.n	e898 <_close_r+0x14>
    e8a0:	6023      	str	r3, [r4, #0]
    e8a2:	bd38      	pop	{r3, r4, r5, pc}
    e8a4:	20003004 	.word	0x20003004

0000e8a8 <__sflush_r>:
    e8a8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
    e8ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    e8b0:	460c      	mov	r4, r1
    e8b2:	0711      	lsls	r1, r2, #28
    e8b4:	4680      	mov	r8, r0
    e8b6:	d447      	bmi.n	e948 <__sflush_r+0xa0>
    e8b8:	6863      	ldr	r3, [r4, #4]
    e8ba:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
    e8be:	2b00      	cmp	r3, #0
    e8c0:	81a2      	strh	r2, [r4, #12]
    e8c2:	dd5e      	ble.n	e982 <__sflush_r+0xda>
    e8c4:	6aa5      	ldr	r5, [r4, #40]	; 0x28
    e8c6:	2d00      	cmp	r5, #0
    e8c8:	d058      	beq.n	e97c <__sflush_r+0xd4>
    e8ca:	2300      	movs	r3, #0
    e8cc:	f8d8 6000 	ldr.w	r6, [r8]
    e8d0:	f8c8 3000 	str.w	r3, [r8]
    e8d4:	b293      	uxth	r3, r2
    e8d6:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
    e8da:	d156      	bne.n	e98a <__sflush_r+0xe2>
    e8dc:	2301      	movs	r3, #1
    e8de:	69e1      	ldr	r1, [r4, #28]
    e8e0:	4640      	mov	r0, r8
    e8e2:	47a8      	blx	r5
    e8e4:	1c43      	adds	r3, r0, #1
    e8e6:	d067      	beq.n	e9b8 <__sflush_r+0x110>
    e8e8:	89a3      	ldrh	r3, [r4, #12]
    e8ea:	6aa5      	ldr	r5, [r4, #40]	; 0x28
    e8ec:	075f      	lsls	r7, r3, #29
    e8ee:	d505      	bpl.n	e8fc <__sflush_r+0x54>
    e8f0:	6863      	ldr	r3, [r4, #4]
    e8f2:	1ac0      	subs	r0, r0, r3
    e8f4:	6b23      	ldr	r3, [r4, #48]	; 0x30
    e8f6:	b10b      	cbz	r3, e8fc <__sflush_r+0x54>
    e8f8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    e8fa:	1ac0      	subs	r0, r0, r3
    e8fc:	69e1      	ldr	r1, [r4, #28]
    e8fe:	4602      	mov	r2, r0
    e900:	2300      	movs	r3, #0
    e902:	4640      	mov	r0, r8
    e904:	47a8      	blx	r5
    e906:	1c41      	adds	r1, r0, #1
    e908:	d141      	bne.n	e98e <__sflush_r+0xe6>
    e90a:	f8d8 3000 	ldr.w	r3, [r8]
    e90e:	2b00      	cmp	r3, #0
    e910:	d03d      	beq.n	e98e <__sflush_r+0xe6>
    e912:	2b1d      	cmp	r3, #29
    e914:	d001      	beq.n	e91a <__sflush_r+0x72>
    e916:	2b16      	cmp	r3, #22
    e918:	d156      	bne.n	e9c8 <__sflush_r+0x120>
    e91a:	89a3      	ldrh	r3, [r4, #12]
    e91c:	6922      	ldr	r2, [r4, #16]
    e91e:	6022      	str	r2, [r4, #0]
    e920:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    e924:	2100      	movs	r1, #0
    e926:	6061      	str	r1, [r4, #4]
    e928:	81a3      	strh	r3, [r4, #12]
    e92a:	6b21      	ldr	r1, [r4, #48]	; 0x30
    e92c:	f8c8 6000 	str.w	r6, [r8]
    e930:	b321      	cbz	r1, e97c <__sflush_r+0xd4>
    e932:	f104 0340 	add.w	r3, r4, #64	; 0x40
    e936:	4299      	cmp	r1, r3
    e938:	d002      	beq.n	e940 <__sflush_r+0x98>
    e93a:	4640      	mov	r0, r8
    e93c:	f000 fc88 	bl	f250 <_free_r>
    e940:	2000      	movs	r0, #0
    e942:	6320      	str	r0, [r4, #48]	; 0x30
    e944:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e948:	6926      	ldr	r6, [r4, #16]
    e94a:	b1be      	cbz	r6, e97c <__sflush_r+0xd4>
    e94c:	b293      	uxth	r3, r2
    e94e:	6825      	ldr	r5, [r4, #0]
    e950:	6026      	str	r6, [r4, #0]
    e952:	079a      	lsls	r2, r3, #30
    e954:	bf0c      	ite	eq
    e956:	6963      	ldreq	r3, [r4, #20]
    e958:	2300      	movne	r3, #0
    e95a:	1bad      	subs	r5, r5, r6
    e95c:	60a3      	str	r3, [r4, #8]
    e95e:	e00b      	b.n	e978 <__sflush_r+0xd0>
    e960:	462b      	mov	r3, r5
    e962:	4632      	mov	r2, r6
    e964:	69e1      	ldr	r1, [r4, #28]
    e966:	6a67      	ldr	r7, [r4, #36]	; 0x24
    e968:	4640      	mov	r0, r8
    e96a:	47b8      	blx	r7
    e96c:	f1b0 0c00 	subs.w	ip, r0, #0
    e970:	eba5 050c 	sub.w	r5, r5, ip
    e974:	4466      	add	r6, ip
    e976:	dd17      	ble.n	e9a8 <__sflush_r+0x100>
    e978:	2d00      	cmp	r5, #0
    e97a:	dcf1      	bgt.n	e960 <__sflush_r+0xb8>
    e97c:	2000      	movs	r0, #0
    e97e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e982:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    e984:	2b00      	cmp	r3, #0
    e986:	dc9d      	bgt.n	e8c4 <__sflush_r+0x1c>
    e988:	e7f8      	b.n	e97c <__sflush_r+0xd4>
    e98a:	6d20      	ldr	r0, [r4, #80]	; 0x50
    e98c:	e7ae      	b.n	e8ec <__sflush_r+0x44>
    e98e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    e992:	6922      	ldr	r2, [r4, #16]
    e994:	6022      	str	r2, [r4, #0]
    e996:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    e99a:	81a3      	strh	r3, [r4, #12]
    e99c:	2200      	movs	r2, #0
    e99e:	04db      	lsls	r3, r3, #19
    e9a0:	6062      	str	r2, [r4, #4]
    e9a2:	d5c2      	bpl.n	e92a <__sflush_r+0x82>
    e9a4:	6520      	str	r0, [r4, #80]	; 0x50
    e9a6:	e7c0      	b.n	e92a <__sflush_r+0x82>
    e9a8:	89a3      	ldrh	r3, [r4, #12]
    e9aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    e9ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    e9b2:	81a3      	strh	r3, [r4, #12]
    e9b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e9b8:	f8d8 3000 	ldr.w	r3, [r8]
    e9bc:	2b00      	cmp	r3, #0
    e9be:	d093      	beq.n	e8e8 <__sflush_r+0x40>
    e9c0:	2b1d      	cmp	r3, #29
    e9c2:	d006      	beq.n	e9d2 <__sflush_r+0x12a>
    e9c4:	2b16      	cmp	r3, #22
    e9c6:	d004      	beq.n	e9d2 <__sflush_r+0x12a>
    e9c8:	89a3      	ldrh	r3, [r4, #12]
    e9ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    e9ce:	81a3      	strh	r3, [r4, #12]
    e9d0:	e7d5      	b.n	e97e <__sflush_r+0xd6>
    e9d2:	f8c8 6000 	str.w	r6, [r8]
    e9d6:	e7d1      	b.n	e97c <__sflush_r+0xd4>

0000e9d8 <_fflush_r>:
    e9d8:	b538      	push	{r3, r4, r5, lr}
    e9da:	460c      	mov	r4, r1
    e9dc:	4605      	mov	r5, r0
    e9de:	b108      	cbz	r0, e9e4 <_fflush_r+0xc>
    e9e0:	6b43      	ldr	r3, [r0, #52]	; 0x34
    e9e2:	b303      	cbz	r3, ea26 <_fflush_r+0x4e>
    e9e4:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
    e9e8:	b188      	cbz	r0, ea0e <_fflush_r+0x36>
    e9ea:	6e63      	ldr	r3, [r4, #100]	; 0x64
    e9ec:	07db      	lsls	r3, r3, #31
    e9ee:	d401      	bmi.n	e9f4 <_fflush_r+0x1c>
    e9f0:	0581      	lsls	r1, r0, #22
    e9f2:	d50f      	bpl.n	ea14 <_fflush_r+0x3c>
    e9f4:	4628      	mov	r0, r5
    e9f6:	4621      	mov	r1, r4
    e9f8:	f7ff ff56 	bl	e8a8 <__sflush_r>
    e9fc:	6e63      	ldr	r3, [r4, #100]	; 0x64
    e9fe:	07da      	lsls	r2, r3, #31
    ea00:	4605      	mov	r5, r0
    ea02:	d402      	bmi.n	ea0a <_fflush_r+0x32>
    ea04:	89a3      	ldrh	r3, [r4, #12]
    ea06:	059b      	lsls	r3, r3, #22
    ea08:	d508      	bpl.n	ea1c <_fflush_r+0x44>
    ea0a:	4628      	mov	r0, r5
    ea0c:	bd38      	pop	{r3, r4, r5, pc}
    ea0e:	4605      	mov	r5, r0
    ea10:	4628      	mov	r0, r5
    ea12:	bd38      	pop	{r3, r4, r5, pc}
    ea14:	6da0      	ldr	r0, [r4, #88]	; 0x58
    ea16:	f7fe f983 	bl	cd20 <__retarget_lock_acquire_recursive>
    ea1a:	e7eb      	b.n	e9f4 <_fflush_r+0x1c>
    ea1c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    ea1e:	f7fe f981 	bl	cd24 <__retarget_lock_release_recursive>
    ea22:	4628      	mov	r0, r5
    ea24:	bd38      	pop	{r3, r4, r5, pc}
    ea26:	f000 f897 	bl	eb58 <__sinit>
    ea2a:	e7db      	b.n	e9e4 <_fflush_r+0xc>

0000ea2c <stdio_exit_handler>:
    ea2c:	4a02      	ldr	r2, [pc, #8]	; (ea38 <stdio_exit_handler+0xc>)
    ea2e:	4903      	ldr	r1, [pc, #12]	; (ea3c <stdio_exit_handler+0x10>)
    ea30:	4803      	ldr	r0, [pc, #12]	; (ea40 <stdio_exit_handler+0x14>)
    ea32:	f000 bdb5 	b.w	f5a0 <_fwalk_sglue>
    ea36:	bf00      	nop
    ea38:	200026e8 	.word	0x200026e8
    ea3c:	000108fd 	.word	0x000108fd
    ea40:	20002020 	.word	0x20002020

0000ea44 <cleanup_stdio>:
    ea44:	4b0c      	ldr	r3, [pc, #48]	; (ea78 <cleanup_stdio+0x34>)
    ea46:	6841      	ldr	r1, [r0, #4]
    ea48:	4299      	cmp	r1, r3
    ea4a:	b510      	push	{r4, lr}
    ea4c:	4604      	mov	r4, r0
    ea4e:	d001      	beq.n	ea54 <cleanup_stdio+0x10>
    ea50:	f001 ff54 	bl	108fc <_fclose_r>
    ea54:	68a1      	ldr	r1, [r4, #8]
    ea56:	4b09      	ldr	r3, [pc, #36]	; (ea7c <cleanup_stdio+0x38>)
    ea58:	4299      	cmp	r1, r3
    ea5a:	d002      	beq.n	ea62 <cleanup_stdio+0x1e>
    ea5c:	4620      	mov	r0, r4
    ea5e:	f001 ff4d 	bl	108fc <_fclose_r>
    ea62:	68e1      	ldr	r1, [r4, #12]
    ea64:	4b06      	ldr	r3, [pc, #24]	; (ea80 <cleanup_stdio+0x3c>)
    ea66:	4299      	cmp	r1, r3
    ea68:	d004      	beq.n	ea74 <cleanup_stdio+0x30>
    ea6a:	4620      	mov	r0, r4
    ea6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ea70:	f001 bf44 	b.w	108fc <_fclose_r>
    ea74:	bd10      	pop	{r4, pc}
    ea76:	bf00      	nop
    ea78:	20002eb8 	.word	0x20002eb8
    ea7c:	20002f20 	.word	0x20002f20
    ea80:	20002f88 	.word	0x20002f88

0000ea84 <global_stdio_init.part.0>:
    ea84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    ea88:	4c2a      	ldr	r4, [pc, #168]	; (eb34 <global_stdio_init.part.0+0xb0>)
    ea8a:	4b2b      	ldr	r3, [pc, #172]	; (eb38 <global_stdio_init.part.0+0xb4>)
    ea8c:	482b      	ldr	r0, [pc, #172]	; (eb3c <global_stdio_init.part.0+0xb8>)
    ea8e:	f8df 90c0 	ldr.w	r9, [pc, #192]	; eb50 <global_stdio_init.part.0+0xcc>
    ea92:	f8df 80c0 	ldr.w	r8, [pc, #192]	; eb54 <global_stdio_init.part.0+0xd0>
    ea96:	4f2a      	ldr	r7, [pc, #168]	; (eb40 <global_stdio_init.part.0+0xbc>)
    ea98:	6018      	str	r0, [r3, #0]
    ea9a:	2500      	movs	r5, #0
    ea9c:	2304      	movs	r3, #4
    ea9e:	2208      	movs	r2, #8
    eaa0:	4629      	mov	r1, r5
    eaa2:	f104 005c 	add.w	r0, r4, #92	; 0x5c
    eaa6:	4e27      	ldr	r6, [pc, #156]	; (eb44 <global_stdio_init.part.0+0xc0>)
    eaa8:	6665      	str	r5, [r4, #100]	; 0x64
    eaaa:	e9c4 5302 	strd	r5, r3, [r4, #8]
    eaae:	e9c4 5500 	strd	r5, r5, [r4]
    eab2:	e9c4 5504 	strd	r5, r5, [r4, #16]
    eab6:	61a5      	str	r5, [r4, #24]
    eab8:	f7fe f88c 	bl	cbd4 <memset>
    eabc:	4b22      	ldr	r3, [pc, #136]	; (eb48 <global_stdio_init.part.0+0xc4>)
    eabe:	6763      	str	r3, [r4, #116]	; 0x74
    eac0:	2208      	movs	r2, #8
    eac2:	4629      	mov	r1, r5
    eac4:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
    eac8:	e9c4 4907 	strd	r4, r9, [r4, #28]
    eacc:	e9c4 8709 	strd	r8, r7, [r4, #36]	; 0x24
    ead0:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
    ead4:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
    ead8:	f8c4 50cc 	str.w	r5, [r4, #204]	; 0xcc
    eadc:	6725      	str	r5, [r4, #112]	; 0x70
    eade:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
    eae2:	62e6      	str	r6, [r4, #44]	; 0x2c
    eae4:	f7fe f876 	bl	cbd4 <memset>
    eae8:	4b18      	ldr	r3, [pc, #96]	; (eb4c <global_stdio_init.part.0+0xc8>)
    eaea:	f8c4 30dc 	str.w	r3, [r4, #220]	; 0xdc
    eaee:	4629      	mov	r1, r5
    eaf0:	f104 0368 	add.w	r3, r4, #104	; 0x68
    eaf4:	2208      	movs	r2, #8
    eaf6:	f504 7096 	add.w	r0, r4, #300	; 0x12c
    eafa:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
    eafe:	e9c4 9822 	strd	r9, r8, [r4, #136]	; 0x88
    eb02:	e9c4 7624 	strd	r7, r6, [r4, #144]	; 0x90
    eb06:	e9c4 5534 	strd	r5, r5, [r4, #208]	; 0xd0
    eb0a:	e9c4 5538 	strd	r5, r5, [r4, #224]	; 0xe0
    eb0e:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
    eb12:	f8c4 50d8 	str.w	r5, [r4, #216]	; 0xd8
    eb16:	f8c4 50e8 	str.w	r5, [r4, #232]	; 0xe8
    eb1a:	f7fe f85b 	bl	cbd4 <memset>
    eb1e:	f104 03d0 	add.w	r3, r4, #208	; 0xd0
    eb22:	e9c4 983c 	strd	r9, r8, [r4, #240]	; 0xf0
    eb26:	e9c4 763e 	strd	r7, r6, [r4, #248]	; 0xf8
    eb2a:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
    eb2e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    eb32:	bf00      	nop
    eb34:	20002eb8 	.word	0x20002eb8
    eb38:	20002ff0 	.word	0x20002ff0
    eb3c:	0000ea2d 	.word	0x0000ea2d
    eb40:	0000f539 	.word	0x0000f539
    eb44:	0000f559 	.word	0x0000f559
    eb48:	00010009 	.word	0x00010009
    eb4c:	00020012 	.word	0x00020012
    eb50:	0000f4d5 	.word	0x0000f4d5
    eb54:	0000f4f9 	.word	0x0000f4f9

0000eb58 <__sinit>:
    eb58:	b510      	push	{r4, lr}
    eb5a:	4604      	mov	r4, r0
    eb5c:	480a      	ldr	r0, [pc, #40]	; (eb88 <__sinit+0x30>)
    eb5e:	f7fe f8df 	bl	cd20 <__retarget_lock_acquire_recursive>
    eb62:	6b63      	ldr	r3, [r4, #52]	; 0x34
    eb64:	b923      	cbnz	r3, eb70 <__sinit+0x18>
    eb66:	4b09      	ldr	r3, [pc, #36]	; (eb8c <__sinit+0x34>)
    eb68:	4a09      	ldr	r2, [pc, #36]	; (eb90 <__sinit+0x38>)
    eb6a:	681b      	ldr	r3, [r3, #0]
    eb6c:	6362      	str	r2, [r4, #52]	; 0x34
    eb6e:	b123      	cbz	r3, eb7a <__sinit+0x22>
    eb70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    eb74:	4804      	ldr	r0, [pc, #16]	; (eb88 <__sinit+0x30>)
    eb76:	f7fe b8d5 	b.w	cd24 <__retarget_lock_release_recursive>
    eb7a:	f7ff ff83 	bl	ea84 <global_stdio_init.part.0>
    eb7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    eb82:	4801      	ldr	r0, [pc, #4]	; (eb88 <__sinit+0x30>)
    eb84:	f7fe b8ce 	b.w	cd24 <__retarget_lock_release_recursive>
    eb88:	20002e80 	.word	0x20002e80
    eb8c:	20002ff0 	.word	0x20002ff0
    eb90:	0000ea45 	.word	0x0000ea45

0000eb94 <__sfp_lock_acquire>:
    eb94:	4801      	ldr	r0, [pc, #4]	; (eb9c <__sfp_lock_acquire+0x8>)
    eb96:	f7fe b8c3 	b.w	cd20 <__retarget_lock_acquire_recursive>
    eb9a:	bf00      	nop
    eb9c:	20002e80 	.word	0x20002e80

0000eba0 <__sfp_lock_release>:
    eba0:	4801      	ldr	r0, [pc, #4]	; (eba8 <__sfp_lock_release+0x8>)
    eba2:	f7fe b8bf 	b.w	cd24 <__retarget_lock_release_recursive>
    eba6:	bf00      	nop
    eba8:	20002e80 	.word	0x20002e80
    ebac:	00000000 	.word	0x00000000

0000ebb0 <memchr>:
    ebb0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    ebb4:	2a10      	cmp	r2, #16
    ebb6:	db2b      	blt.n	ec10 <memchr+0x60>
    ebb8:	f010 0f07 	tst.w	r0, #7
    ebbc:	d008      	beq.n	ebd0 <memchr+0x20>
    ebbe:	f810 3b01 	ldrb.w	r3, [r0], #1
    ebc2:	3a01      	subs	r2, #1
    ebc4:	428b      	cmp	r3, r1
    ebc6:	d02d      	beq.n	ec24 <memchr+0x74>
    ebc8:	f010 0f07 	tst.w	r0, #7
    ebcc:	b342      	cbz	r2, ec20 <memchr+0x70>
    ebce:	d1f6      	bne.n	ebbe <memchr+0xe>
    ebd0:	b4f0      	push	{r4, r5, r6, r7}
    ebd2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
    ebd6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
    ebda:	f022 0407 	bic.w	r4, r2, #7
    ebde:	f07f 0700 	mvns.w	r7, #0
    ebe2:	2300      	movs	r3, #0
    ebe4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
    ebe8:	3c08      	subs	r4, #8
    ebea:	ea85 0501 	eor.w	r5, r5, r1
    ebee:	ea86 0601 	eor.w	r6, r6, r1
    ebf2:	fa85 f547 	uadd8	r5, r5, r7
    ebf6:	faa3 f587 	sel	r5, r3, r7
    ebfa:	fa86 f647 	uadd8	r6, r6, r7
    ebfe:	faa5 f687 	sel	r6, r5, r7
    ec02:	b98e      	cbnz	r6, ec28 <memchr+0x78>
    ec04:	d1ee      	bne.n	ebe4 <memchr+0x34>
    ec06:	bcf0      	pop	{r4, r5, r6, r7}
    ec08:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    ec0c:	f002 0207 	and.w	r2, r2, #7
    ec10:	b132      	cbz	r2, ec20 <memchr+0x70>
    ec12:	f810 3b01 	ldrb.w	r3, [r0], #1
    ec16:	3a01      	subs	r2, #1
    ec18:	ea83 0301 	eor.w	r3, r3, r1
    ec1c:	b113      	cbz	r3, ec24 <memchr+0x74>
    ec1e:	d1f8      	bne.n	ec12 <memchr+0x62>
    ec20:	2000      	movs	r0, #0
    ec22:	4770      	bx	lr
    ec24:	3801      	subs	r0, #1
    ec26:	4770      	bx	lr
    ec28:	2d00      	cmp	r5, #0
    ec2a:	bf06      	itte	eq
    ec2c:	4635      	moveq	r5, r6
    ec2e:	3803      	subeq	r0, #3
    ec30:	3807      	subne	r0, #7
    ec32:	f015 0f01 	tst.w	r5, #1
    ec36:	d107      	bne.n	ec48 <memchr+0x98>
    ec38:	3001      	adds	r0, #1
    ec3a:	f415 7f80 	tst.w	r5, #256	; 0x100
    ec3e:	bf02      	ittt	eq
    ec40:	3001      	addeq	r0, #1
    ec42:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
    ec46:	3001      	addeq	r0, #1
    ec48:	bcf0      	pop	{r4, r5, r6, r7}
    ec4a:	3801      	subs	r0, #1
    ec4c:	4770      	bx	lr
    ec4e:	bf00      	nop
	...

0000ec80 <strlen>:
    ec80:	f890 f000 	pld	[r0]
    ec84:	e96d 4502 	strd	r4, r5, [sp, #-8]!
    ec88:	f020 0107 	bic.w	r1, r0, #7
    ec8c:	f06f 0c00 	mvn.w	ip, #0
    ec90:	f010 0407 	ands.w	r4, r0, #7
    ec94:	f891 f020 	pld	[r1, #32]
    ec98:	f040 8049 	bne.w	ed2e <strlen+0xae>
    ec9c:	f04f 0400 	mov.w	r4, #0
    eca0:	f06f 0007 	mvn.w	r0, #7
    eca4:	e9d1 2300 	ldrd	r2, r3, [r1]
    eca8:	f891 f040 	pld	[r1, #64]	; 0x40
    ecac:	f100 0008 	add.w	r0, r0, #8
    ecb0:	fa82 f24c 	uadd8	r2, r2, ip
    ecb4:	faa4 f28c 	sel	r2, r4, ip
    ecb8:	fa83 f34c 	uadd8	r3, r3, ip
    ecbc:	faa2 f38c 	sel	r3, r2, ip
    ecc0:	bb4b      	cbnz	r3, ed16 <strlen+0x96>
    ecc2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
    ecc6:	fa82 f24c 	uadd8	r2, r2, ip
    ecca:	f100 0008 	add.w	r0, r0, #8
    ecce:	faa4 f28c 	sel	r2, r4, ip
    ecd2:	fa83 f34c 	uadd8	r3, r3, ip
    ecd6:	faa2 f38c 	sel	r3, r2, ip
    ecda:	b9e3      	cbnz	r3, ed16 <strlen+0x96>
    ecdc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
    ece0:	fa82 f24c 	uadd8	r2, r2, ip
    ece4:	f100 0008 	add.w	r0, r0, #8
    ece8:	faa4 f28c 	sel	r2, r4, ip
    ecec:	fa83 f34c 	uadd8	r3, r3, ip
    ecf0:	faa2 f38c 	sel	r3, r2, ip
    ecf4:	b97b      	cbnz	r3, ed16 <strlen+0x96>
    ecf6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
    ecfa:	f101 0120 	add.w	r1, r1, #32
    ecfe:	fa82 f24c 	uadd8	r2, r2, ip
    ed02:	f100 0008 	add.w	r0, r0, #8
    ed06:	faa4 f28c 	sel	r2, r4, ip
    ed0a:	fa83 f34c 	uadd8	r3, r3, ip
    ed0e:	faa2 f38c 	sel	r3, r2, ip
    ed12:	2b00      	cmp	r3, #0
    ed14:	d0c6      	beq.n	eca4 <strlen+0x24>
    ed16:	2a00      	cmp	r2, #0
    ed18:	bf04      	itt	eq
    ed1a:	3004      	addeq	r0, #4
    ed1c:	461a      	moveq	r2, r3
    ed1e:	ba12      	rev	r2, r2
    ed20:	fab2 f282 	clz	r2, r2
    ed24:	e8fd 4502 	ldrd	r4, r5, [sp], #8
    ed28:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
    ed2c:	4770      	bx	lr
    ed2e:	e9d1 2300 	ldrd	r2, r3, [r1]
    ed32:	f004 0503 	and.w	r5, r4, #3
    ed36:	f1c4 0000 	rsb	r0, r4, #0
    ed3a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
    ed3e:	f014 0f04 	tst.w	r4, #4
    ed42:	f891 f040 	pld	[r1, #64]	; 0x40
    ed46:	fa0c f505 	lsl.w	r5, ip, r5
    ed4a:	ea62 0205 	orn	r2, r2, r5
    ed4e:	bf1c      	itt	ne
    ed50:	ea63 0305 	ornne	r3, r3, r5
    ed54:	4662      	movne	r2, ip
    ed56:	f04f 0400 	mov.w	r4, #0
    ed5a:	e7a9      	b.n	ecb0 <strlen+0x30>
    ed5c:	0000      	movs	r0, r0
	...

0000ed60 <frexp>:
    ed60:	b430      	push	{r4, r5}
    ed62:	b082      	sub	sp, #8
    ed64:	ed8d 0b00 	vstr	d0, [sp]
    ed68:	9a01      	ldr	r2, [sp, #4]
    ed6a:	4c19      	ldr	r4, [pc, #100]	; (edd0 <frexp+0x70>)
    ed6c:	f022 4300 	bic.w	r3, r2, #2147483648	; 0x80000000
    ed70:	2100      	movs	r1, #0
    ed72:	42a3      	cmp	r3, r4
    ed74:	6001      	str	r1, [r0, #0]
    ed76:	dc21      	bgt.n	edbc <frexp+0x5c>
    ed78:	9c00      	ldr	r4, [sp, #0]
    ed7a:	431c      	orrs	r4, r3
    ed7c:	d01e      	beq.n	edbc <frexp+0x5c>
    ed7e:	4c15      	ldr	r4, [pc, #84]	; (edd4 <frexp+0x74>)
    ed80:	4014      	ands	r4, r2
    ed82:	b954      	cbnz	r4, ed9a <frexp+0x3a>
    ed84:	ed9f 7b10 	vldr	d7, [pc, #64]	; edc8 <frexp+0x68>
    ed88:	ee20 7b07 	vmul.f64	d7, d0, d7
    ed8c:	ed8d 7b00 	vstr	d7, [sp]
    ed90:	9a01      	ldr	r2, [sp, #4]
    ed92:	f06f 0135 	mvn.w	r1, #53	; 0x35
    ed96:	f022 4300 	bic.w	r3, r2, #2147483648	; 0x80000000
    ed9a:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
    ed9e:	e9dd 4500 	ldrd	r4, r5, [sp]
    eda2:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
    eda6:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
    edaa:	151b      	asrs	r3, r3, #20
    edac:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
    edb0:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
    edb4:	e9cd 4500 	strd	r4, r5, [sp]
    edb8:	440b      	add	r3, r1
    edba:	6003      	str	r3, [r0, #0]
    edbc:	ed9d 0b00 	vldr	d0, [sp]
    edc0:	b002      	add	sp, #8
    edc2:	bc30      	pop	{r4, r5}
    edc4:	4770      	bx	lr
    edc6:	bf00      	nop
    edc8:	00000000 	.word	0x00000000
    edcc:	43500000 	.word	0x43500000
    edd0:	7fefffff 	.word	0x7fefffff
    edd4:	7ff00000 	.word	0x7ff00000

0000edd8 <_realloc_r>:
    edd8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eddc:	4617      	mov	r7, r2
    edde:	2900      	cmp	r1, #0
    ede0:	f000 8098 	beq.w	ef14 <_realloc_r+0x13c>
    ede4:	460c      	mov	r4, r1
    ede6:	f107 050b 	add.w	r5, r7, #11
    edea:	4680      	mov	r8, r0
    edec:	f7fe fa24 	bl	d238 <__malloc_lock>
    edf0:	2d16      	cmp	r5, #22
    edf2:	f854 1c04 	ldr.w	r1, [r4, #-4]
    edf6:	d85b      	bhi.n	eeb0 <_realloc_r+0xd8>
    edf8:	2510      	movs	r5, #16
    edfa:	462a      	mov	r2, r5
    edfc:	42af      	cmp	r7, r5
    edfe:	d85c      	bhi.n	eeba <_realloc_r+0xe2>
    ee00:	f021 0603 	bic.w	r6, r1, #3
    ee04:	4296      	cmp	r6, r2
    ee06:	f1a4 0908 	sub.w	r9, r4, #8
    ee0a:	da62      	bge.n	eed2 <_realloc_r+0xfa>
    ee0c:	4bbc      	ldr	r3, [pc, #752]	; (f100 <_realloc_r+0x328>)
    ee0e:	f8d3 c008 	ldr.w	ip, [r3, #8]
    ee12:	eb09 0006 	add.w	r0, r9, r6
    ee16:	4584      	cmp	ip, r0
    ee18:	f000 8097 	beq.w	ef4a <_realloc_r+0x172>
    ee1c:	f8d0 c004 	ldr.w	ip, [r0, #4]
    ee20:	f02c 0301 	bic.w	r3, ip, #1
    ee24:	4403      	add	r3, r0
    ee26:	685b      	ldr	r3, [r3, #4]
    ee28:	07db      	lsls	r3, r3, #31
    ee2a:	d468      	bmi.n	eefe <_realloc_r+0x126>
    ee2c:	f02c 0c03 	bic.w	ip, ip, #3
    ee30:	eb06 030c 	add.w	r3, r6, ip
    ee34:	4293      	cmp	r3, r2
    ee36:	da47      	bge.n	eec8 <_realloc_r+0xf0>
    ee38:	07cb      	lsls	r3, r1, #31
    ee3a:	d410      	bmi.n	ee5e <_realloc_r+0x86>
    ee3c:	f854 3c08 	ldr.w	r3, [r4, #-8]
    ee40:	eba9 0a03 	sub.w	sl, r9, r3
    ee44:	f8da 3004 	ldr.w	r3, [sl, #4]
    ee48:	f023 0103 	bic.w	r1, r3, #3
    ee4c:	448c      	add	ip, r1
    ee4e:	44b4      	add	ip, r6
    ee50:	4594      	cmp	ip, r2
    ee52:	f280 8111 	bge.w	f078 <_realloc_r+0x2a0>
    ee56:	1873      	adds	r3, r6, r1
    ee58:	4293      	cmp	r3, r2
    ee5a:	f280 80e8 	bge.w	f02e <_realloc_r+0x256>
    ee5e:	4639      	mov	r1, r7
    ee60:	4640      	mov	r0, r8
    ee62:	f7fd fb3b 	bl	c4dc <_malloc_r>
    ee66:	4607      	mov	r7, r0
    ee68:	b1e0      	cbz	r0, eea4 <_realloc_r+0xcc>
    ee6a:	f854 3c04 	ldr.w	r3, [r4, #-4]
    ee6e:	f023 0301 	bic.w	r3, r3, #1
    ee72:	444b      	add	r3, r9
    ee74:	f1a0 0208 	sub.w	r2, r0, #8
    ee78:	4293      	cmp	r3, r2
    ee7a:	f000 80d2 	beq.w	f022 <_realloc_r+0x24a>
    ee7e:	1f32      	subs	r2, r6, #4
    ee80:	2a24      	cmp	r2, #36	; 0x24
    ee82:	f200 80f5 	bhi.w	f070 <_realloc_r+0x298>
    ee86:	2a13      	cmp	r2, #19
    ee88:	f200 80ac 	bhi.w	efe4 <_realloc_r+0x20c>
    ee8c:	4603      	mov	r3, r0
    ee8e:	4622      	mov	r2, r4
    ee90:	6811      	ldr	r1, [r2, #0]
    ee92:	6019      	str	r1, [r3, #0]
    ee94:	6851      	ldr	r1, [r2, #4]
    ee96:	6059      	str	r1, [r3, #4]
    ee98:	6892      	ldr	r2, [r2, #8]
    ee9a:	609a      	str	r2, [r3, #8]
    ee9c:	4621      	mov	r1, r4
    ee9e:	4640      	mov	r0, r8
    eea0:	f000 f9d6 	bl	f250 <_free_r>
    eea4:	4640      	mov	r0, r8
    eea6:	f7fe f9cd 	bl	d244 <__malloc_unlock>
    eeaa:	4638      	mov	r0, r7
    eeac:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eeb0:	f025 0507 	bic.w	r5, r5, #7
    eeb4:	2d00      	cmp	r5, #0
    eeb6:	462a      	mov	r2, r5
    eeb8:	daa0      	bge.n	edfc <_realloc_r+0x24>
    eeba:	230c      	movs	r3, #12
    eebc:	f8c8 3000 	str.w	r3, [r8]
    eec0:	2700      	movs	r7, #0
    eec2:	4638      	mov	r0, r7
    eec4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eec8:	461e      	mov	r6, r3
    eeca:	e9d0 2302 	ldrd	r2, r3, [r0, #8]
    eece:	60d3      	str	r3, [r2, #12]
    eed0:	609a      	str	r2, [r3, #8]
    eed2:	1b73      	subs	r3, r6, r5
    eed4:	2b0f      	cmp	r3, #15
    eed6:	d822      	bhi.n	ef1e <_realloc_r+0x146>
    eed8:	f8d9 3004 	ldr.w	r3, [r9, #4]
    eedc:	f003 0301 	and.w	r3, r3, #1
    eee0:	4333      	orrs	r3, r6
    eee2:	444e      	add	r6, r9
    eee4:	f8c9 3004 	str.w	r3, [r9, #4]
    eee8:	6873      	ldr	r3, [r6, #4]
    eeea:	f043 0301 	orr.w	r3, r3, #1
    eeee:	6073      	str	r3, [r6, #4]
    eef0:	4640      	mov	r0, r8
    eef2:	4627      	mov	r7, r4
    eef4:	f7fe f9a6 	bl	d244 <__malloc_unlock>
    eef8:	4638      	mov	r0, r7
    eefa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eefe:	07c9      	lsls	r1, r1, #31
    ef00:	d4ad      	bmi.n	ee5e <_realloc_r+0x86>
    ef02:	f854 3c08 	ldr.w	r3, [r4, #-8]
    ef06:	eba9 0a03 	sub.w	sl, r9, r3
    ef0a:	f8da 1004 	ldr.w	r1, [sl, #4]
    ef0e:	f021 0103 	bic.w	r1, r1, #3
    ef12:	e7a0      	b.n	ee56 <_realloc_r+0x7e>
    ef14:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ef18:	4611      	mov	r1, r2
    ef1a:	f7fd badf 	b.w	c4dc <_malloc_r>
    ef1e:	f8d9 2004 	ldr.w	r2, [r9, #4]
    ef22:	eb09 0105 	add.w	r1, r9, r5
    ef26:	f002 0201 	and.w	r2, r2, #1
    ef2a:	444e      	add	r6, r9
    ef2c:	f043 0301 	orr.w	r3, r3, #1
    ef30:	432a      	orrs	r2, r5
    ef32:	f8c9 2004 	str.w	r2, [r9, #4]
    ef36:	604b      	str	r3, [r1, #4]
    ef38:	6873      	ldr	r3, [r6, #4]
    ef3a:	f043 0301 	orr.w	r3, r3, #1
    ef3e:	3108      	adds	r1, #8
    ef40:	6073      	str	r3, [r6, #4]
    ef42:	4640      	mov	r0, r8
    ef44:	f000 f984 	bl	f250 <_free_r>
    ef48:	e7d2      	b.n	eef0 <_realloc_r+0x118>
    ef4a:	f8dc 0004 	ldr.w	r0, [ip, #4]
    ef4e:	f020 0b03 	bic.w	fp, r0, #3
    ef52:	eb06 0c0b 	add.w	ip, r6, fp
    ef56:	f105 0010 	add.w	r0, r5, #16
    ef5a:	4584      	cmp	ip, r0
    ef5c:	da4d      	bge.n	effa <_realloc_r+0x222>
    ef5e:	07c9      	lsls	r1, r1, #31
    ef60:	f53f af7d 	bmi.w	ee5e <_realloc_r+0x86>
    ef64:	f854 1c08 	ldr.w	r1, [r4, #-8]
    ef68:	eba9 0a01 	sub.w	sl, r9, r1
    ef6c:	f8da 1004 	ldr.w	r1, [sl, #4]
    ef70:	f021 0103 	bic.w	r1, r1, #3
    ef74:	448b      	add	fp, r1
    ef76:	44b3      	add	fp, r6
    ef78:	4558      	cmp	r0, fp
    ef7a:	f73f af6c 	bgt.w	ee56 <_realloc_r+0x7e>
    ef7e:	4657      	mov	r7, sl
    ef80:	f8da 100c 	ldr.w	r1, [sl, #12]
    ef84:	f857 0f08 	ldr.w	r0, [r7, #8]!
    ef88:	1f32      	subs	r2, r6, #4
    ef8a:	2a24      	cmp	r2, #36	; 0x24
    ef8c:	60c1      	str	r1, [r0, #12]
    ef8e:	6088      	str	r0, [r1, #8]
    ef90:	f200 80db 	bhi.w	f14a <_realloc_r+0x372>
    ef94:	2a13      	cmp	r2, #19
    ef96:	f240 80d6 	bls.w	f146 <_realloc_r+0x36e>
    ef9a:	6821      	ldr	r1, [r4, #0]
    ef9c:	f8ca 1008 	str.w	r1, [sl, #8]
    efa0:	6861      	ldr	r1, [r4, #4]
    efa2:	f8ca 100c 	str.w	r1, [sl, #12]
    efa6:	2a1b      	cmp	r2, #27
    efa8:	f200 80df 	bhi.w	f16a <_realloc_r+0x392>
    efac:	3408      	adds	r4, #8
    efae:	f10a 0210 	add.w	r2, sl, #16
    efb2:	6821      	ldr	r1, [r4, #0]
    efb4:	6011      	str	r1, [r2, #0]
    efb6:	6861      	ldr	r1, [r4, #4]
    efb8:	6051      	str	r1, [r2, #4]
    efba:	68a1      	ldr	r1, [r4, #8]
    efbc:	6091      	str	r1, [r2, #8]
    efbe:	eb0a 0105 	add.w	r1, sl, r5
    efc2:	ebab 0205 	sub.w	r2, fp, r5
    efc6:	f042 0201 	orr.w	r2, r2, #1
    efca:	6099      	str	r1, [r3, #8]
    efcc:	604a      	str	r2, [r1, #4]
    efce:	f8da 3004 	ldr.w	r3, [sl, #4]
    efd2:	f003 0301 	and.w	r3, r3, #1
    efd6:	432b      	orrs	r3, r5
    efd8:	4640      	mov	r0, r8
    efda:	f8ca 3004 	str.w	r3, [sl, #4]
    efde:	f7fe f931 	bl	d244 <__malloc_unlock>
    efe2:	e76e      	b.n	eec2 <_realloc_r+0xea>
    efe4:	6823      	ldr	r3, [r4, #0]
    efe6:	6003      	str	r3, [r0, #0]
    efe8:	6863      	ldr	r3, [r4, #4]
    efea:	6043      	str	r3, [r0, #4]
    efec:	2a1b      	cmp	r2, #27
    efee:	d868      	bhi.n	f0c2 <_realloc_r+0x2ea>
    eff0:	f104 0208 	add.w	r2, r4, #8
    eff4:	f100 0308 	add.w	r3, r0, #8
    eff8:	e74a      	b.n	ee90 <_realloc_r+0xb8>
    effa:	eb09 0205 	add.w	r2, r9, r5
    effe:	609a      	str	r2, [r3, #8]
    f000:	ebac 0305 	sub.w	r3, ip, r5
    f004:	f043 0301 	orr.w	r3, r3, #1
    f008:	6053      	str	r3, [r2, #4]
    f00a:	f854 3c04 	ldr.w	r3, [r4, #-4]
    f00e:	f003 0301 	and.w	r3, r3, #1
    f012:	432b      	orrs	r3, r5
    f014:	4640      	mov	r0, r8
    f016:	f844 3c04 	str.w	r3, [r4, #-4]
    f01a:	f7fe f913 	bl	d244 <__malloc_unlock>
    f01e:	4627      	mov	r7, r4
    f020:	e74f      	b.n	eec2 <_realloc_r+0xea>
    f022:	f850 3c04 	ldr.w	r3, [r0, #-4]
    f026:	f023 0303 	bic.w	r3, r3, #3
    f02a:	441e      	add	r6, r3
    f02c:	e751      	b.n	eed2 <_realloc_r+0xfa>
    f02e:	4657      	mov	r7, sl
    f030:	f8da 100c 	ldr.w	r1, [sl, #12]
    f034:	f857 0f08 	ldr.w	r0, [r7, #8]!
    f038:	1f32      	subs	r2, r6, #4
    f03a:	2a24      	cmp	r2, #36	; 0x24
    f03c:	60c1      	str	r1, [r0, #12]
    f03e:	6088      	str	r0, [r1, #8]
    f040:	d84c      	bhi.n	f0dc <_realloc_r+0x304>
    f042:	2a13      	cmp	r2, #19
    f044:	d948      	bls.n	f0d8 <_realloc_r+0x300>
    f046:	6821      	ldr	r1, [r4, #0]
    f048:	f8ca 1008 	str.w	r1, [sl, #8]
    f04c:	6861      	ldr	r1, [r4, #4]
    f04e:	f8ca 100c 	str.w	r1, [sl, #12]
    f052:	2a1b      	cmp	r2, #27
    f054:	d856      	bhi.n	f104 <_realloc_r+0x32c>
    f056:	3408      	adds	r4, #8
    f058:	f10a 0210 	add.w	r2, sl, #16
    f05c:	461e      	mov	r6, r3
    f05e:	6823      	ldr	r3, [r4, #0]
    f060:	6013      	str	r3, [r2, #0]
    f062:	6863      	ldr	r3, [r4, #4]
    f064:	6053      	str	r3, [r2, #4]
    f066:	68a3      	ldr	r3, [r4, #8]
    f068:	6093      	str	r3, [r2, #8]
    f06a:	46d1      	mov	r9, sl
    f06c:	463c      	mov	r4, r7
    f06e:	e730      	b.n	eed2 <_realloc_r+0xfa>
    f070:	4621      	mov	r1, r4
    f072:	f7fd fd13 	bl	ca9c <memmove>
    f076:	e711      	b.n	ee9c <_realloc_r+0xc4>
    f078:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
    f07c:	4657      	mov	r7, sl
    f07e:	60cb      	str	r3, [r1, #12]
    f080:	6099      	str	r1, [r3, #8]
    f082:	f857 1f08 	ldr.w	r1, [r7, #8]!
    f086:	f8da 300c 	ldr.w	r3, [sl, #12]
    f08a:	60cb      	str	r3, [r1, #12]
    f08c:	1f32      	subs	r2, r6, #4
    f08e:	2a24      	cmp	r2, #36	; 0x24
    f090:	6099      	str	r1, [r3, #8]
    f092:	d82d      	bhi.n	f0f0 <_realloc_r+0x318>
    f094:	2a13      	cmp	r2, #19
    f096:	d929      	bls.n	f0ec <_realloc_r+0x314>
    f098:	6823      	ldr	r3, [r4, #0]
    f09a:	f8ca 3008 	str.w	r3, [sl, #8]
    f09e:	6863      	ldr	r3, [r4, #4]
    f0a0:	f8ca 300c 	str.w	r3, [sl, #12]
    f0a4:	2a1b      	cmp	r2, #27
    f0a6:	d842      	bhi.n	f12e <_realloc_r+0x356>
    f0a8:	3408      	adds	r4, #8
    f0aa:	f10a 0310 	add.w	r3, sl, #16
    f0ae:	6822      	ldr	r2, [r4, #0]
    f0b0:	601a      	str	r2, [r3, #0]
    f0b2:	6862      	ldr	r2, [r4, #4]
    f0b4:	605a      	str	r2, [r3, #4]
    f0b6:	68a2      	ldr	r2, [r4, #8]
    f0b8:	609a      	str	r2, [r3, #8]
    f0ba:	4666      	mov	r6, ip
    f0bc:	46d1      	mov	r9, sl
    f0be:	463c      	mov	r4, r7
    f0c0:	e707      	b.n	eed2 <_realloc_r+0xfa>
    f0c2:	68a3      	ldr	r3, [r4, #8]
    f0c4:	6083      	str	r3, [r0, #8]
    f0c6:	68e3      	ldr	r3, [r4, #12]
    f0c8:	60c3      	str	r3, [r0, #12]
    f0ca:	2a24      	cmp	r2, #36	; 0x24
    f0cc:	d026      	beq.n	f11c <_realloc_r+0x344>
    f0ce:	f104 0210 	add.w	r2, r4, #16
    f0d2:	f100 0310 	add.w	r3, r0, #16
    f0d6:	e6db      	b.n	ee90 <_realloc_r+0xb8>
    f0d8:	463a      	mov	r2, r7
    f0da:	e7bf      	b.n	f05c <_realloc_r+0x284>
    f0dc:	4621      	mov	r1, r4
    f0de:	4638      	mov	r0, r7
    f0e0:	461e      	mov	r6, r3
    f0e2:	46d1      	mov	r9, sl
    f0e4:	f7fd fcda 	bl	ca9c <memmove>
    f0e8:	463c      	mov	r4, r7
    f0ea:	e6f2      	b.n	eed2 <_realloc_r+0xfa>
    f0ec:	463b      	mov	r3, r7
    f0ee:	e7de      	b.n	f0ae <_realloc_r+0x2d6>
    f0f0:	4621      	mov	r1, r4
    f0f2:	4638      	mov	r0, r7
    f0f4:	4666      	mov	r6, ip
    f0f6:	46d1      	mov	r9, sl
    f0f8:	f7fd fcd0 	bl	ca9c <memmove>
    f0fc:	463c      	mov	r4, r7
    f0fe:	e6e8      	b.n	eed2 <_realloc_r+0xfa>
    f100:	200022d8 	.word	0x200022d8
    f104:	68a1      	ldr	r1, [r4, #8]
    f106:	f8ca 1010 	str.w	r1, [sl, #16]
    f10a:	68e1      	ldr	r1, [r4, #12]
    f10c:	f8ca 1014 	str.w	r1, [sl, #20]
    f110:	2a24      	cmp	r2, #36	; 0x24
    f112:	d020      	beq.n	f156 <_realloc_r+0x37e>
    f114:	3410      	adds	r4, #16
    f116:	f10a 0218 	add.w	r2, sl, #24
    f11a:	e79f      	b.n	f05c <_realloc_r+0x284>
    f11c:	6923      	ldr	r3, [r4, #16]
    f11e:	6103      	str	r3, [r0, #16]
    f120:	6961      	ldr	r1, [r4, #20]
    f122:	6141      	str	r1, [r0, #20]
    f124:	f104 0218 	add.w	r2, r4, #24
    f128:	f100 0318 	add.w	r3, r0, #24
    f12c:	e6b0      	b.n	ee90 <_realloc_r+0xb8>
    f12e:	68a3      	ldr	r3, [r4, #8]
    f130:	f8ca 3010 	str.w	r3, [sl, #16]
    f134:	68e3      	ldr	r3, [r4, #12]
    f136:	f8ca 3014 	str.w	r3, [sl, #20]
    f13a:	2a24      	cmp	r2, #36	; 0x24
    f13c:	d021      	beq.n	f182 <_realloc_r+0x3aa>
    f13e:	3410      	adds	r4, #16
    f140:	f10a 0318 	add.w	r3, sl, #24
    f144:	e7b3      	b.n	f0ae <_realloc_r+0x2d6>
    f146:	463a      	mov	r2, r7
    f148:	e733      	b.n	efb2 <_realloc_r+0x1da>
    f14a:	4621      	mov	r1, r4
    f14c:	4638      	mov	r0, r7
    f14e:	f7fd fca5 	bl	ca9c <memmove>
    f152:	4b16      	ldr	r3, [pc, #88]	; (f1ac <_realloc_r+0x3d4>)
    f154:	e733      	b.n	efbe <_realloc_r+0x1e6>
    f156:	6922      	ldr	r2, [r4, #16]
    f158:	f8ca 2018 	str.w	r2, [sl, #24]
    f15c:	6962      	ldr	r2, [r4, #20]
    f15e:	f8ca 201c 	str.w	r2, [sl, #28]
    f162:	3418      	adds	r4, #24
    f164:	f10a 0220 	add.w	r2, sl, #32
    f168:	e778      	b.n	f05c <_realloc_r+0x284>
    f16a:	68a1      	ldr	r1, [r4, #8]
    f16c:	f8ca 1010 	str.w	r1, [sl, #16]
    f170:	68e1      	ldr	r1, [r4, #12]
    f172:	f8ca 1014 	str.w	r1, [sl, #20]
    f176:	2a24      	cmp	r2, #36	; 0x24
    f178:	d00d      	beq.n	f196 <_realloc_r+0x3be>
    f17a:	3410      	adds	r4, #16
    f17c:	f10a 0218 	add.w	r2, sl, #24
    f180:	e717      	b.n	efb2 <_realloc_r+0x1da>
    f182:	6923      	ldr	r3, [r4, #16]
    f184:	f8ca 3018 	str.w	r3, [sl, #24]
    f188:	6963      	ldr	r3, [r4, #20]
    f18a:	f8ca 301c 	str.w	r3, [sl, #28]
    f18e:	3418      	adds	r4, #24
    f190:	f10a 0320 	add.w	r3, sl, #32
    f194:	e78b      	b.n	f0ae <_realloc_r+0x2d6>
    f196:	6922      	ldr	r2, [r4, #16]
    f198:	f8ca 2018 	str.w	r2, [sl, #24]
    f19c:	6962      	ldr	r2, [r4, #20]
    f19e:	f8ca 201c 	str.w	r2, [sl, #28]
    f1a2:	3418      	adds	r4, #24
    f1a4:	f10a 0220 	add.w	r2, sl, #32
    f1a8:	e703      	b.n	efb2 <_realloc_r+0x1da>
    f1aa:	bf00      	nop
    f1ac:	200022d8 	.word	0x200022d8

0000f1b0 <_malloc_trim_r>:
    f1b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f1b2:	4f24      	ldr	r7, [pc, #144]	; (f244 <_malloc_trim_r+0x94>)
    f1b4:	460c      	mov	r4, r1
    f1b6:	4606      	mov	r6, r0
    f1b8:	f7fe f83e 	bl	d238 <__malloc_lock>
    f1bc:	68bb      	ldr	r3, [r7, #8]
    f1be:	685d      	ldr	r5, [r3, #4]
    f1c0:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
    f1c4:	310f      	adds	r1, #15
    f1c6:	f025 0503 	bic.w	r5, r5, #3
    f1ca:	194b      	adds	r3, r1, r5
    f1cc:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
    f1d0:	f023 030f 	bic.w	r3, r3, #15
    f1d4:	f5a3 5480 	sub.w	r4, r3, #4096	; 0x1000
    f1d8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
    f1dc:	db07      	blt.n	f1ee <_malloc_trim_r+0x3e>
    f1de:	2100      	movs	r1, #0
    f1e0:	4630      	mov	r0, r6
    f1e2:	f000 f9cb 	bl	f57c <_sbrk_r>
    f1e6:	68bb      	ldr	r3, [r7, #8]
    f1e8:	442b      	add	r3, r5
    f1ea:	4298      	cmp	r0, r3
    f1ec:	d004      	beq.n	f1f8 <_malloc_trim_r+0x48>
    f1ee:	4630      	mov	r0, r6
    f1f0:	f7fe f828 	bl	d244 <__malloc_unlock>
    f1f4:	2000      	movs	r0, #0
    f1f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    f1f8:	4261      	negs	r1, r4
    f1fa:	4630      	mov	r0, r6
    f1fc:	f000 f9be 	bl	f57c <_sbrk_r>
    f200:	3001      	adds	r0, #1
    f202:	d00d      	beq.n	f220 <_malloc_trim_r+0x70>
    f204:	4a10      	ldr	r2, [pc, #64]	; (f248 <_malloc_trim_r+0x98>)
    f206:	68bb      	ldr	r3, [r7, #8]
    f208:	1b2d      	subs	r5, r5, r4
    f20a:	f045 0501 	orr.w	r5, r5, #1
    f20e:	605d      	str	r5, [r3, #4]
    f210:	6813      	ldr	r3, [r2, #0]
    f212:	4630      	mov	r0, r6
    f214:	1b1b      	subs	r3, r3, r4
    f216:	6013      	str	r3, [r2, #0]
    f218:	f7fe f814 	bl	d244 <__malloc_unlock>
    f21c:	2001      	movs	r0, #1
    f21e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    f220:	2100      	movs	r1, #0
    f222:	4630      	mov	r0, r6
    f224:	f000 f9aa 	bl	f57c <_sbrk_r>
    f228:	68ba      	ldr	r2, [r7, #8]
    f22a:	1a83      	subs	r3, r0, r2
    f22c:	2b0f      	cmp	r3, #15
    f22e:	ddde      	ble.n	f1ee <_malloc_trim_r+0x3e>
    f230:	f043 0301 	orr.w	r3, r3, #1
    f234:	6053      	str	r3, [r2, #4]
    f236:	4b05      	ldr	r3, [pc, #20]	; (f24c <_malloc_trim_r+0x9c>)
    f238:	4903      	ldr	r1, [pc, #12]	; (f248 <_malloc_trim_r+0x98>)
    f23a:	681b      	ldr	r3, [r3, #0]
    f23c:	1ac0      	subs	r0, r0, r3
    f23e:	6008      	str	r0, [r1, #0]
    f240:	e7d5      	b.n	f1ee <_malloc_trim_r+0x3e>
    f242:	bf00      	nop
    f244:	200022d8 	.word	0x200022d8
    f248:	20002e84 	.word	0x20002e84
    f24c:	200026e0 	.word	0x200026e0

0000f250 <_free_r>:
    f250:	2900      	cmp	r1, #0
    f252:	d061      	beq.n	f318 <_free_r+0xc8>
    f254:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f256:	460c      	mov	r4, r1
    f258:	4606      	mov	r6, r0
    f25a:	f7fd ffed 	bl	d238 <__malloc_lock>
    f25e:	f854 2c04 	ldr.w	r2, [r4, #-4]
    f262:	4f7b      	ldr	r7, [pc, #492]	; (f450 <_free_r+0x200>)
    f264:	f1a4 0508 	sub.w	r5, r4, #8
    f268:	f022 0101 	bic.w	r1, r2, #1
    f26c:	eb05 0c01 	add.w	ip, r5, r1
    f270:	68b8      	ldr	r0, [r7, #8]
    f272:	f8dc 3004 	ldr.w	r3, [ip, #4]
    f276:	4560      	cmp	r0, ip
    f278:	f023 0303 	bic.w	r3, r3, #3
    f27c:	f000 808b 	beq.w	f396 <_free_r+0x146>
    f280:	07d2      	lsls	r2, r2, #31
    f282:	f8cc 3004 	str.w	r3, [ip, #4]
    f286:	d432      	bmi.n	f2ee <_free_r+0x9e>
    f288:	f854 2c08 	ldr.w	r2, [r4, #-8]
    f28c:	1aad      	subs	r5, r5, r2
    f28e:	4411      	add	r1, r2
    f290:	68aa      	ldr	r2, [r5, #8]
    f292:	f107 0008 	add.w	r0, r7, #8
    f296:	4282      	cmp	r2, r0
    f298:	d06a      	beq.n	f370 <_free_r+0x120>
    f29a:	eb0c 0403 	add.w	r4, ip, r3
    f29e:	f8d4 e004 	ldr.w	lr, [r4, #4]
    f2a2:	68ec      	ldr	r4, [r5, #12]
    f2a4:	60d4      	str	r4, [r2, #12]
    f2a6:	f01e 0f01 	tst.w	lr, #1
    f2aa:	60a2      	str	r2, [r4, #8]
    f2ac:	f000 8097 	beq.w	f3de <_free_r+0x18e>
    f2b0:	f041 0301 	orr.w	r3, r1, #1
    f2b4:	606b      	str	r3, [r5, #4]
    f2b6:	f8cc 1000 	str.w	r1, [ip]
    f2ba:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
    f2be:	d235      	bcs.n	f32c <_free_r+0xdc>
    f2c0:	6878      	ldr	r0, [r7, #4]
    f2c2:	08cb      	lsrs	r3, r1, #3
    f2c4:	2201      	movs	r2, #1
    f2c6:	0949      	lsrs	r1, r1, #5
    f2c8:	3301      	adds	r3, #1
    f2ca:	408a      	lsls	r2, r1
    f2cc:	4302      	orrs	r2, r0
    f2ce:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
    f2d2:	607a      	str	r2, [r7, #4]
    f2d4:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
    f2d8:	3a08      	subs	r2, #8
    f2da:	e9c5 1202 	strd	r1, r2, [r5, #8]
    f2de:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
    f2e2:	60cd      	str	r5, [r1, #12]
    f2e4:	4630      	mov	r0, r6
    f2e6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    f2ea:	f7fd bfab 	b.w	d244 <__malloc_unlock>
    f2ee:	eb0c 0203 	add.w	r2, ip, r3
    f2f2:	6852      	ldr	r2, [r2, #4]
    f2f4:	07d0      	lsls	r0, r2, #31
    f2f6:	d410      	bmi.n	f31a <_free_r+0xca>
    f2f8:	4419      	add	r1, r3
    f2fa:	f107 0008 	add.w	r0, r7, #8
    f2fe:	f8dc 3008 	ldr.w	r3, [ip, #8]
    f302:	4283      	cmp	r3, r0
    f304:	d073      	beq.n	f3ee <_free_r+0x19e>
    f306:	f8dc 200c 	ldr.w	r2, [ip, #12]
    f30a:	60da      	str	r2, [r3, #12]
    f30c:	6093      	str	r3, [r2, #8]
    f30e:	f041 0301 	orr.w	r3, r1, #1
    f312:	606b      	str	r3, [r5, #4]
    f314:	5069      	str	r1, [r5, r1]
    f316:	e7d0      	b.n	f2ba <_free_r+0x6a>
    f318:	4770      	bx	lr
    f31a:	f041 0301 	orr.w	r3, r1, #1
    f31e:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
    f322:	f844 3c04 	str.w	r3, [r4, #-4]
    f326:	f8cc 1000 	str.w	r1, [ip]
    f32a:	d3c9      	bcc.n	f2c0 <_free_r+0x70>
    f32c:	f5b1 6f20 	cmp.w	r1, #2560	; 0xa00
    f330:	ea4f 2351 	mov.w	r3, r1, lsr #9
    f334:	d248      	bcs.n	f3c8 <_free_r+0x178>
    f336:	098b      	lsrs	r3, r1, #6
    f338:	f103 0039 	add.w	r0, r3, #57	; 0x39
    f33c:	f103 0238 	add.w	r2, r3, #56	; 0x38
    f340:	00c3      	lsls	r3, r0, #3
    f342:	18f8      	adds	r0, r7, r3
    f344:	58fb      	ldr	r3, [r7, r3]
    f346:	3808      	subs	r0, #8
    f348:	4298      	cmp	r0, r3
    f34a:	d059      	beq.n	f400 <_free_r+0x1b0>
    f34c:	685a      	ldr	r2, [r3, #4]
    f34e:	f022 0203 	bic.w	r2, r2, #3
    f352:	428a      	cmp	r2, r1
    f354:	d902      	bls.n	f35c <_free_r+0x10c>
    f356:	689b      	ldr	r3, [r3, #8]
    f358:	4298      	cmp	r0, r3
    f35a:	d1f7      	bne.n	f34c <_free_r+0xfc>
    f35c:	68d8      	ldr	r0, [r3, #12]
    f35e:	e9c5 3002 	strd	r3, r0, [r5, #8]
    f362:	6085      	str	r5, [r0, #8]
    f364:	60dd      	str	r5, [r3, #12]
    f366:	4630      	mov	r0, r6
    f368:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    f36c:	f7fd bf6a 	b.w	d244 <__malloc_unlock>
    f370:	eb0c 0203 	add.w	r2, ip, r3
    f374:	6852      	ldr	r2, [r2, #4]
    f376:	07d2      	lsls	r2, r2, #31
    f378:	d463      	bmi.n	f442 <_free_r+0x1f2>
    f37a:	440b      	add	r3, r1
    f37c:	e9dc 1202 	ldrd	r1, r2, [ip, #8]
    f380:	60ca      	str	r2, [r1, #12]
    f382:	6091      	str	r1, [r2, #8]
    f384:	f043 0201 	orr.w	r2, r3, #1
    f388:	606a      	str	r2, [r5, #4]
    f38a:	4630      	mov	r0, r6
    f38c:	50eb      	str	r3, [r5, r3]
    f38e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    f392:	f7fd bf57 	b.w	d244 <__malloc_unlock>
    f396:	440b      	add	r3, r1
    f398:	07d1      	lsls	r1, r2, #31
    f39a:	d407      	bmi.n	f3ac <_free_r+0x15c>
    f39c:	f854 2c08 	ldr.w	r2, [r4, #-8]
    f3a0:	1aad      	subs	r5, r5, r2
    f3a2:	4413      	add	r3, r2
    f3a4:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
    f3a8:	60ca      	str	r2, [r1, #12]
    f3aa:	6091      	str	r1, [r2, #8]
    f3ac:	f043 0201 	orr.w	r2, r3, #1
    f3b0:	606a      	str	r2, [r5, #4]
    f3b2:	4a28      	ldr	r2, [pc, #160]	; (f454 <_free_r+0x204>)
    f3b4:	60bd      	str	r5, [r7, #8]
    f3b6:	6812      	ldr	r2, [r2, #0]
    f3b8:	429a      	cmp	r2, r3
    f3ba:	d893      	bhi.n	f2e4 <_free_r+0x94>
    f3bc:	4b26      	ldr	r3, [pc, #152]	; (f458 <_free_r+0x208>)
    f3be:	4630      	mov	r0, r6
    f3c0:	6819      	ldr	r1, [r3, #0]
    f3c2:	f7ff fef5 	bl	f1b0 <_malloc_trim_r>
    f3c6:	e78d      	b.n	f2e4 <_free_r+0x94>
    f3c8:	2b14      	cmp	r3, #20
    f3ca:	d90a      	bls.n	f3e2 <_free_r+0x192>
    f3cc:	2b54      	cmp	r3, #84	; 0x54
    f3ce:	d81f      	bhi.n	f410 <_free_r+0x1c0>
    f3d0:	0b0b      	lsrs	r3, r1, #12
    f3d2:	f103 006f 	add.w	r0, r3, #111	; 0x6f
    f3d6:	f103 026e 	add.w	r2, r3, #110	; 0x6e
    f3da:	00c3      	lsls	r3, r0, #3
    f3dc:	e7b1      	b.n	f342 <_free_r+0xf2>
    f3de:	4419      	add	r1, r3
    f3e0:	e78d      	b.n	f2fe <_free_r+0xae>
    f3e2:	f103 005c 	add.w	r0, r3, #92	; 0x5c
    f3e6:	f103 025b 	add.w	r2, r3, #91	; 0x5b
    f3ea:	00c3      	lsls	r3, r0, #3
    f3ec:	e7a9      	b.n	f342 <_free_r+0xf2>
    f3ee:	f041 0301 	orr.w	r3, r1, #1
    f3f2:	e9c7 5504 	strd	r5, r5, [r7, #16]
    f3f6:	e9c5 0002 	strd	r0, r0, [r5, #8]
    f3fa:	606b      	str	r3, [r5, #4]
    f3fc:	5069      	str	r1, [r5, r1]
    f3fe:	e771      	b.n	f2e4 <_free_r+0x94>
    f400:	6879      	ldr	r1, [r7, #4]
    f402:	1092      	asrs	r2, r2, #2
    f404:	2401      	movs	r4, #1
    f406:	fa04 f202 	lsl.w	r2, r4, r2
    f40a:	430a      	orrs	r2, r1
    f40c:	607a      	str	r2, [r7, #4]
    f40e:	e7a6      	b.n	f35e <_free_r+0x10e>
    f410:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    f414:	d806      	bhi.n	f424 <_free_r+0x1d4>
    f416:	0bcb      	lsrs	r3, r1, #15
    f418:	f103 0078 	add.w	r0, r3, #120	; 0x78
    f41c:	f103 0277 	add.w	r2, r3, #119	; 0x77
    f420:	00c3      	lsls	r3, r0, #3
    f422:	e78e      	b.n	f342 <_free_r+0xf2>
    f424:	f240 5254 	movw	r2, #1364	; 0x554
    f428:	4293      	cmp	r3, r2
    f42a:	d806      	bhi.n	f43a <_free_r+0x1ea>
    f42c:	0c8b      	lsrs	r3, r1, #18
    f42e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
    f432:	f103 027c 	add.w	r2, r3, #124	; 0x7c
    f436:	00c3      	lsls	r3, r0, #3
    f438:	e783      	b.n	f342 <_free_r+0xf2>
    f43a:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
    f43e:	227e      	movs	r2, #126	; 0x7e
    f440:	e77f      	b.n	f342 <_free_r+0xf2>
    f442:	f041 0301 	orr.w	r3, r1, #1
    f446:	606b      	str	r3, [r5, #4]
    f448:	f8cc 1000 	str.w	r1, [ip]
    f44c:	e74a      	b.n	f2e4 <_free_r+0x94>
    f44e:	bf00      	nop
    f450:	200022d8 	.word	0x200022d8
    f454:	200026e4 	.word	0x200026e4
    f458:	20002eb4 	.word	0x20002eb4

0000f45c <_fstat_r>:
    f45c:	b570      	push	{r4, r5, r6, lr}
    f45e:	460c      	mov	r4, r1
    f460:	4d08      	ldr	r5, [pc, #32]	; (f484 <_fstat_r+0x28>)
    f462:	4603      	mov	r3, r0
    f464:	2600      	movs	r6, #0
    f466:	4620      	mov	r0, r4
    f468:	4611      	mov	r1, r2
    f46a:	461c      	mov	r4, r3
    f46c:	602e      	str	r6, [r5, #0]
    f46e:	f7f1 fa91 	bl	994 <_fstat>
    f472:	1c43      	adds	r3, r0, #1
    f474:	d000      	beq.n	f478 <_fstat_r+0x1c>
    f476:	bd70      	pop	{r4, r5, r6, pc}
    f478:	682b      	ldr	r3, [r5, #0]
    f47a:	2b00      	cmp	r3, #0
    f47c:	d0fb      	beq.n	f476 <_fstat_r+0x1a>
    f47e:	6023      	str	r3, [r4, #0]
    f480:	bd70      	pop	{r4, r5, r6, pc}
    f482:	bf00      	nop
    f484:	20003004 	.word	0x20003004

0000f488 <_isatty_r>:
    f488:	b538      	push	{r3, r4, r5, lr}
    f48a:	4d07      	ldr	r5, [pc, #28]	; (f4a8 <_isatty_r+0x20>)
    f48c:	2200      	movs	r2, #0
    f48e:	4604      	mov	r4, r0
    f490:	4608      	mov	r0, r1
    f492:	602a      	str	r2, [r5, #0]
    f494:	f7f1 fa84 	bl	9a0 <_isatty>
    f498:	1c43      	adds	r3, r0, #1
    f49a:	d000      	beq.n	f49e <_isatty_r+0x16>
    f49c:	bd38      	pop	{r3, r4, r5, pc}
    f49e:	682b      	ldr	r3, [r5, #0]
    f4a0:	2b00      	cmp	r3, #0
    f4a2:	d0fb      	beq.n	f49c <_isatty_r+0x14>
    f4a4:	6023      	str	r3, [r4, #0]
    f4a6:	bd38      	pop	{r3, r4, r5, pc}
    f4a8:	20003004 	.word	0x20003004

0000f4ac <fiprintf>:
    f4ac:	b40e      	push	{r1, r2, r3}
    f4ae:	b510      	push	{r4, lr}
    f4b0:	b083      	sub	sp, #12
    f4b2:	ab05      	add	r3, sp, #20
    f4b4:	4c06      	ldr	r4, [pc, #24]	; (f4d0 <fiprintf+0x24>)
    f4b6:	f853 2b04 	ldr.w	r2, [r3], #4
    f4ba:	9301      	str	r3, [sp, #4]
    f4bc:	4601      	mov	r1, r0
    f4be:	6820      	ldr	r0, [r4, #0]
    f4c0:	f000 f964 	bl	f78c <_vfiprintf_r>
    f4c4:	b003      	add	sp, #12
    f4c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    f4ca:	b003      	add	sp, #12
    f4cc:	4770      	bx	lr
    f4ce:	bf00      	nop
    f4d0:	200026f4 	.word	0x200026f4

0000f4d4 <__sread>:
    f4d4:	b510      	push	{r4, lr}
    f4d6:	460c      	mov	r4, r1
    f4d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    f4dc:	f001 fb1e 	bl	10b1c <_read_r>
    f4e0:	2800      	cmp	r0, #0
    f4e2:	db03      	blt.n	f4ec <__sread+0x18>
    f4e4:	6d23      	ldr	r3, [r4, #80]	; 0x50
    f4e6:	4403      	add	r3, r0
    f4e8:	6523      	str	r3, [r4, #80]	; 0x50
    f4ea:	bd10      	pop	{r4, pc}
    f4ec:	89a3      	ldrh	r3, [r4, #12]
    f4ee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
    f4f2:	81a3      	strh	r3, [r4, #12]
    f4f4:	bd10      	pop	{r4, pc}
    f4f6:	bf00      	nop

0000f4f8 <__swrite>:
    f4f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    f4fc:	460c      	mov	r4, r1
    f4fe:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
    f502:	461f      	mov	r7, r3
    f504:	05cb      	lsls	r3, r1, #23
    f506:	4605      	mov	r5, r0
    f508:	4616      	mov	r6, r2
    f50a:	d40b      	bmi.n	f524 <__swrite+0x2c>
    f50c:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
    f510:	81a1      	strh	r1, [r4, #12]
    f512:	463b      	mov	r3, r7
    f514:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    f518:	4632      	mov	r2, r6
    f51a:	4628      	mov	r0, r5
    f51c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    f520:	f000 b862 	b.w	f5e8 <_write_r>
    f524:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    f528:	2302      	movs	r3, #2
    f52a:	2200      	movs	r2, #0
    f52c:	f001 fae0 	bl	10af0 <_lseek_r>
    f530:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
    f534:	e7ea      	b.n	f50c <__swrite+0x14>
    f536:	bf00      	nop

0000f538 <__sseek>:
    f538:	b510      	push	{r4, lr}
    f53a:	460c      	mov	r4, r1
    f53c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    f540:	f001 fad6 	bl	10af0 <_lseek_r>
    f544:	89a3      	ldrh	r3, [r4, #12]
    f546:	1c42      	adds	r2, r0, #1
    f548:	bf0e      	itee	eq
    f54a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
    f54e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
    f552:	6520      	strne	r0, [r4, #80]	; 0x50
    f554:	81a3      	strh	r3, [r4, #12]
    f556:	bd10      	pop	{r4, pc}

0000f558 <__sclose>:
    f558:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    f55c:	f7ff b992 	b.w	e884 <_close_r>

0000f560 <__ascii_wctomb>:
    f560:	b149      	cbz	r1, f576 <__ascii_wctomb+0x16>
    f562:	2aff      	cmp	r2, #255	; 0xff
    f564:	d802      	bhi.n	f56c <__ascii_wctomb+0xc>
    f566:	700a      	strb	r2, [r1, #0]
    f568:	2001      	movs	r0, #1
    f56a:	4770      	bx	lr
    f56c:	238a      	movs	r3, #138	; 0x8a
    f56e:	6003      	str	r3, [r0, #0]
    f570:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    f574:	4770      	bx	lr
    f576:	4608      	mov	r0, r1
    f578:	4770      	bx	lr
    f57a:	bf00      	nop

0000f57c <_sbrk_r>:
    f57c:	b538      	push	{r3, r4, r5, lr}
    f57e:	4d07      	ldr	r5, [pc, #28]	; (f59c <_sbrk_r+0x20>)
    f580:	2200      	movs	r2, #0
    f582:	4604      	mov	r4, r0
    f584:	4608      	mov	r0, r1
    f586:	602a      	str	r2, [r5, #0]
    f588:	f7f1 f9e4 	bl	954 <_sbrk>
    f58c:	1c43      	adds	r3, r0, #1
    f58e:	d000      	beq.n	f592 <_sbrk_r+0x16>
    f590:	bd38      	pop	{r3, r4, r5, pc}
    f592:	682b      	ldr	r3, [r5, #0]
    f594:	2b00      	cmp	r3, #0
    f596:	d0fb      	beq.n	f590 <_sbrk_r+0x14>
    f598:	6023      	str	r3, [r4, #0]
    f59a:	bd38      	pop	{r3, r4, r5, pc}
    f59c:	20003004 	.word	0x20003004

0000f5a0 <_fwalk_sglue>:
    f5a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    f5a4:	4680      	mov	r8, r0
    f5a6:	460f      	mov	r7, r1
    f5a8:	4616      	mov	r6, r2
    f5aa:	f04f 0900 	mov.w	r9, #0
    f5ae:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
    f5b2:	3d01      	subs	r5, #1
    f5b4:	d411      	bmi.n	f5da <_fwalk_sglue+0x3a>
    f5b6:	89a3      	ldrh	r3, [r4, #12]
    f5b8:	2b01      	cmp	r3, #1
    f5ba:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
    f5be:	d908      	bls.n	f5d2 <_fwalk_sglue+0x32>
    f5c0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
    f5c4:	3301      	adds	r3, #1
    f5c6:	4621      	mov	r1, r4
    f5c8:	d003      	beq.n	f5d2 <_fwalk_sglue+0x32>
    f5ca:	4640      	mov	r0, r8
    f5cc:	47b8      	blx	r7
    f5ce:	ea49 0900 	orr.w	r9, r9, r0
    f5d2:	1c6b      	adds	r3, r5, #1
    f5d4:	f104 0468 	add.w	r4, r4, #104	; 0x68
    f5d8:	d1ed      	bne.n	f5b6 <_fwalk_sglue+0x16>
    f5da:	6836      	ldr	r6, [r6, #0]
    f5dc:	2e00      	cmp	r6, #0
    f5de:	d1e6      	bne.n	f5ae <_fwalk_sglue+0xe>
    f5e0:	4648      	mov	r0, r9
    f5e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    f5e6:	bf00      	nop

0000f5e8 <_write_r>:
    f5e8:	b538      	push	{r3, r4, r5, lr}
    f5ea:	460c      	mov	r4, r1
    f5ec:	4d08      	ldr	r5, [pc, #32]	; (f610 <_write_r+0x28>)
    f5ee:	4684      	mov	ip, r0
    f5f0:	4611      	mov	r1, r2
    f5f2:	4620      	mov	r0, r4
    f5f4:	461a      	mov	r2, r3
    f5f6:	2300      	movs	r3, #0
    f5f8:	602b      	str	r3, [r5, #0]
    f5fa:	4664      	mov	r4, ip
    f5fc:	f7f0 fef6 	bl	3ec <_write>
    f600:	1c43      	adds	r3, r0, #1
    f602:	d000      	beq.n	f606 <_write_r+0x1e>
    f604:	bd38      	pop	{r3, r4, r5, pc}
    f606:	682b      	ldr	r3, [r5, #0]
    f608:	2b00      	cmp	r3, #0
    f60a:	d0fb      	beq.n	f604 <_write_r+0x1c>
    f60c:	6023      	str	r3, [r4, #0]
    f60e:	bd38      	pop	{r3, r4, r5, pc}
    f610:	20003004 	.word	0x20003004

0000f614 <__ssprint_r>:
    f614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f618:	6893      	ldr	r3, [r2, #8]
    f61a:	6817      	ldr	r7, [r2, #0]
    f61c:	b083      	sub	sp, #12
    f61e:	4692      	mov	sl, r2
    f620:	2b00      	cmp	r3, #0
    f622:	d070      	beq.n	f706 <__ssprint_r+0xf2>
    f624:	4681      	mov	r9, r0
    f626:	688a      	ldr	r2, [r1, #8]
    f628:	6808      	ldr	r0, [r1, #0]
    f62a:	460c      	mov	r4, r1
    f62c:	3708      	adds	r7, #8
    f62e:	e043      	b.n	f6b8 <__ssprint_r+0xa4>
    f630:	89a3      	ldrh	r3, [r4, #12]
    f632:	f413 6f90 	tst.w	r3, #1152	; 0x480
    f636:	d02e      	beq.n	f696 <__ssprint_r+0x82>
    f638:	e9d4 1604 	ldrd	r1, r6, [r4, #16]
    f63c:	eba0 0801 	sub.w	r8, r0, r1
    f640:	eb06 0646 	add.w	r6, r6, r6, lsl #1
    f644:	eb06 76d6 	add.w	r6, r6, r6, lsr #31
    f648:	f108 0001 	add.w	r0, r8, #1
    f64c:	1076      	asrs	r6, r6, #1
    f64e:	4428      	add	r0, r5
    f650:	42b0      	cmp	r0, r6
    f652:	4632      	mov	r2, r6
    f654:	bf84      	itt	hi
    f656:	4606      	movhi	r6, r0
    f658:	4632      	movhi	r2, r6
    f65a:	055b      	lsls	r3, r3, #21
    f65c:	d537      	bpl.n	f6ce <__ssprint_r+0xba>
    f65e:	4611      	mov	r1, r2
    f660:	4648      	mov	r0, r9
    f662:	f7fc ff3b 	bl	c4dc <_malloc_r>
    f666:	9001      	str	r0, [sp, #4]
    f668:	2800      	cmp	r0, #0
    f66a:	d03a      	beq.n	f6e2 <__ssprint_r+0xce>
    f66c:	4642      	mov	r2, r8
    f66e:	6921      	ldr	r1, [r4, #16]
    f670:	f7f0 ffd8 	bl	624 <memcpy>
    f674:	89a2      	ldrh	r2, [r4, #12]
    f676:	9b01      	ldr	r3, [sp, #4]
    f678:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
    f67c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    f680:	81a2      	strh	r2, [r4, #12]
    f682:	eba6 0208 	sub.w	r2, r6, r8
    f686:	eb03 0008 	add.w	r0, r3, r8
    f68a:	6166      	str	r6, [r4, #20]
    f68c:	60a2      	str	r2, [r4, #8]
    f68e:	6123      	str	r3, [r4, #16]
    f690:	6020      	str	r0, [r4, #0]
    f692:	462e      	mov	r6, r5
    f694:	46a8      	mov	r8, r5
    f696:	4642      	mov	r2, r8
    f698:	4659      	mov	r1, fp
    f69a:	f7fd f9ff 	bl	ca9c <memmove>
    f69e:	f8da 3008 	ldr.w	r3, [sl, #8]
    f6a2:	68a2      	ldr	r2, [r4, #8]
    f6a4:	6820      	ldr	r0, [r4, #0]
    f6a6:	1b92      	subs	r2, r2, r6
    f6a8:	4440      	add	r0, r8
    f6aa:	1b5b      	subs	r3, r3, r5
    f6ac:	60a2      	str	r2, [r4, #8]
    f6ae:	6020      	str	r0, [r4, #0]
    f6b0:	f8ca 3008 	str.w	r3, [sl, #8]
    f6b4:	b33b      	cbz	r3, f706 <__ssprint_r+0xf2>
    f6b6:	3708      	adds	r7, #8
    f6b8:	e957 b502 	ldrd	fp, r5, [r7, #-8]
    f6bc:	2d00      	cmp	r5, #0
    f6be:	d0fa      	beq.n	f6b6 <__ssprint_r+0xa2>
    f6c0:	42aa      	cmp	r2, r5
    f6c2:	4616      	mov	r6, r2
    f6c4:	4690      	mov	r8, r2
    f6c6:	d9b3      	bls.n	f630 <__ssprint_r+0x1c>
    f6c8:	462e      	mov	r6, r5
    f6ca:	46a8      	mov	r8, r5
    f6cc:	e7e3      	b.n	f696 <__ssprint_r+0x82>
    f6ce:	4648      	mov	r0, r9
    f6d0:	f7ff fb82 	bl	edd8 <_realloc_r>
    f6d4:	4603      	mov	r3, r0
    f6d6:	2800      	cmp	r0, #0
    f6d8:	d1d3      	bne.n	f682 <__ssprint_r+0x6e>
    f6da:	6921      	ldr	r1, [r4, #16]
    f6dc:	4648      	mov	r0, r9
    f6de:	f7ff fdb7 	bl	f250 <_free_r>
    f6e2:	89a3      	ldrh	r3, [r4, #12]
    f6e4:	220c      	movs	r2, #12
    f6e6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    f6ea:	f8c9 2000 	str.w	r2, [r9]
    f6ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    f6f2:	81a3      	strh	r3, [r4, #12]
    f6f4:	2200      	movs	r2, #0
    f6f6:	2300      	movs	r3, #0
    f6f8:	f8ca 2008 	str.w	r2, [sl, #8]
    f6fc:	f8ca 3004 	str.w	r3, [sl, #4]
    f700:	b003      	add	sp, #12
    f702:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f706:	2000      	movs	r0, #0
    f708:	2300      	movs	r3, #0
    f70a:	f8ca 3004 	str.w	r3, [sl, #4]
    f70e:	b003      	add	sp, #12
    f710:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000f714 <__sprint_r.part.0>:
    f714:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f718:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    f71a:	049c      	lsls	r4, r3, #18
    f71c:	4690      	mov	r8, r2
    f71e:	d52d      	bpl.n	f77c <__sprint_r.part.0+0x68>
    f720:	6893      	ldr	r3, [r2, #8]
    f722:	6812      	ldr	r2, [r2, #0]
    f724:	b343      	cbz	r3, f778 <__sprint_r.part.0+0x64>
    f726:	468b      	mov	fp, r1
    f728:	4606      	mov	r6, r0
    f72a:	f102 0908 	add.w	r9, r2, #8
    f72e:	e959 5a02 	ldrd	r5, sl, [r9, #-8]
    f732:	ea5f 079a 	movs.w	r7, sl, lsr #2
    f736:	d015      	beq.n	f764 <__sprint_r.part.0+0x50>
    f738:	3d04      	subs	r5, #4
    f73a:	2400      	movs	r4, #0
    f73c:	e001      	b.n	f742 <__sprint_r.part.0+0x2e>
    f73e:	42a7      	cmp	r7, r4
    f740:	d00e      	beq.n	f760 <__sprint_r.part.0+0x4c>
    f742:	f855 1f04 	ldr.w	r1, [r5, #4]!
    f746:	465a      	mov	r2, fp
    f748:	4630      	mov	r0, r6
    f74a:	f001 fa53 	bl	10bf4 <_fputwc_r>
    f74e:	1c43      	adds	r3, r0, #1
    f750:	f104 0401 	add.w	r4, r4, #1
    f754:	d1f3      	bne.n	f73e <__sprint_r.part.0+0x2a>
    f756:	2300      	movs	r3, #0
    f758:	e9c8 3301 	strd	r3, r3, [r8, #4]
    f75c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f760:	f8d8 3008 	ldr.w	r3, [r8, #8]
    f764:	f02a 0a03 	bic.w	sl, sl, #3
    f768:	eba3 030a 	sub.w	r3, r3, sl
    f76c:	f8c8 3008 	str.w	r3, [r8, #8]
    f770:	f109 0908 	add.w	r9, r9, #8
    f774:	2b00      	cmp	r3, #0
    f776:	d1da      	bne.n	f72e <__sprint_r.part.0+0x1a>
    f778:	2000      	movs	r0, #0
    f77a:	e7ec      	b.n	f756 <__sprint_r.part.0+0x42>
    f77c:	f7fa ff16 	bl	a5ac <__sfvwrite_r>
    f780:	2300      	movs	r3, #0
    f782:	e9c8 3301 	strd	r3, r3, [r8, #4]
    f786:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f78a:	bf00      	nop

0000f78c <_vfiprintf_r>:
    f78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f790:	ed2d 8b02 	vpush	{d8}
    f794:	b0c5      	sub	sp, #276	; 0x114
    f796:	f10d 0a50 	add.w	sl, sp, #80	; 0x50
    f79a:	4683      	mov	fp, r0
    f79c:	ee08 1a10 	vmov	s16, r1
    f7a0:	4616      	mov	r6, r2
    f7a2:	2100      	movs	r1, #0
    f7a4:	2208      	movs	r2, #8
    f7a6:	4650      	mov	r0, sl
    f7a8:	461c      	mov	r4, r3
    f7aa:	9307      	str	r3, [sp, #28]
    f7ac:	f7fd fa12 	bl	cbd4 <memset>
    f7b0:	f1bb 0f00 	cmp.w	fp, #0
    f7b4:	d004      	beq.n	f7c0 <_vfiprintf_r+0x34>
    f7b6:	f8db 3034 	ldr.w	r3, [fp, #52]	; 0x34
    f7ba:	2b00      	cmp	r3, #0
    f7bc:	f000 86a0 	beq.w	10500 <_vfiprintf_r+0xd74>
    f7c0:	ee18 2a10 	vmov	r2, s16
    f7c4:	6e53      	ldr	r3, [r2, #100]	; 0x64
    f7c6:	07db      	lsls	r3, r3, #31
    f7c8:	f140 8513 	bpl.w	101f2 <_vfiprintf_r+0xa66>
    f7cc:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
    f7d0:	b28a      	uxth	r2, r1
    f7d2:	0495      	lsls	r5, r2, #18
    f7d4:	d40b      	bmi.n	f7ee <_vfiprintf_r+0x62>
    f7d6:	ee18 3a10 	vmov	r3, s16
    f7da:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
    f7de:	8199      	strh	r1, [r3, #12]
    f7e0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    f7e2:	b28a      	uxth	r2, r1
    f7e4:	ee18 1a10 	vmov	r1, s16
    f7e8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
    f7ec:	664b      	str	r3, [r1, #100]	; 0x64
    f7ee:	0710      	lsls	r0, r2, #28
    f7f0:	f140 8105 	bpl.w	f9fe <_vfiprintf_r+0x272>
    f7f4:	ee18 3a10 	vmov	r3, s16
    f7f8:	691b      	ldr	r3, [r3, #16]
    f7fa:	2b00      	cmp	r3, #0
    f7fc:	f000 80ff 	beq.w	f9fe <_vfiprintf_r+0x272>
    f800:	f002 031a 	and.w	r3, r2, #26
    f804:	2b0a      	cmp	r3, #10
    f806:	f000 810a 	beq.w	fa1e <_vfiprintf_r+0x292>
    f80a:	2300      	movs	r3, #0
    f80c:	e9cd 3319 	strd	r3, r3, [sp, #100]	; 0x64
    f810:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
    f814:	aa1b      	add	r2, sp, #108	; 0x6c
    f816:	930c      	str	r3, [sp, #48]	; 0x30
    f818:	9218      	str	r2, [sp, #96]	; 0x60
    f81a:	4691      	mov	r9, r2
    f81c:	930b      	str	r3, [sp, #44]	; 0x2c
    f81e:	9305      	str	r3, [sp, #20]
    f820:	46b0      	mov	r8, r6
    f822:	4644      	mov	r4, r8
    f824:	4ba8      	ldr	r3, [pc, #672]	; (fac8 <_vfiprintf_r+0x33c>)
    f826:	f8d3 50e4 	ldr.w	r5, [r3, #228]	; 0xe4
    f82a:	f7fd fa7d 	bl	cd28 <__locale_mb_cur_max>
    f82e:	4622      	mov	r2, r4
    f830:	4603      	mov	r3, r0
    f832:	a912      	add	r1, sp, #72	; 0x48
    f834:	f8cd a000 	str.w	sl, [sp]
    f838:	4658      	mov	r0, fp
    f83a:	47a8      	blx	r5
    f83c:	2800      	cmp	r0, #0
    f83e:	f000 8145 	beq.w	facc <_vfiprintf_r+0x340>
    f842:	f2c0 8139 	blt.w	fab8 <_vfiprintf_r+0x32c>
    f846:	9a12      	ldr	r2, [sp, #72]	; 0x48
    f848:	2a25      	cmp	r2, #37	; 0x25
    f84a:	4603      	mov	r3, r0
    f84c:	d001      	beq.n	f852 <_vfiprintf_r+0xc6>
    f84e:	441c      	add	r4, r3
    f850:	e7e8      	b.n	f824 <_vfiprintf_r+0x98>
    f852:	ebb4 0608 	subs.w	r6, r4, r8
    f856:	4605      	mov	r5, r0
    f858:	f040 813c 	bne.w	fad4 <_vfiprintf_r+0x348>
    f85c:	2300      	movs	r3, #0
    f85e:	7861      	ldrb	r1, [r4, #1]
    f860:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
    f864:	f104 0801 	add.w	r8, r4, #1
    f868:	9306      	str	r3, [sp, #24]
    f86a:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    f86e:	461e      	mov	r6, r3
    f870:	242b      	movs	r4, #43	; 0x2b
    f872:	f108 0801 	add.w	r8, r8, #1
    f876:	f1a1 0320 	sub.w	r3, r1, #32
    f87a:	2b5a      	cmp	r3, #90	; 0x5a
    f87c:	f200 8178 	bhi.w	fb70 <_vfiprintf_r+0x3e4>
    f880:	e8df f013 	tbh	[pc, r3, lsl #1]
    f884:	017602b5 	.word	0x017602b5
    f888:	02b00176 	.word	0x02b00176
    f88c:	01760176 	.word	0x01760176
    f890:	006a0176 	.word	0x006a0176
    f894:	01760176 	.word	0x01760176
    f898:	028d027d 	.word	0x028d027d
    f89c:	02880176 	.word	0x02880176
    f8a0:	01760297 	.word	0x01760297
    f8a4:	005b0292 	.word	0x005b0292
    f8a8:	005b005b 	.word	0x005b005b
    f8ac:	005b005b 	.word	0x005b005b
    f8b0:	005b005b 	.word	0x005b005b
    f8b4:	005b005b 	.word	0x005b005b
    f8b8:	01760176 	.word	0x01760176
    f8bc:	01760176 	.word	0x01760176
    f8c0:	01760176 	.word	0x01760176
    f8c4:	01760176 	.word	0x01760176
    f8c8:	025c0176 	.word	0x025c0176
    f8cc:	01760084 	.word	0x01760084
    f8d0:	01760176 	.word	0x01760176
    f8d4:	01760176 	.word	0x01760176
    f8d8:	01760176 	.word	0x01760176
    f8dc:	01760176 	.word	0x01760176
    f8e0:	00e80176 	.word	0x00e80176
    f8e4:	01760176 	.word	0x01760176
    f8e8:	02330176 	.word	0x02330176
    f8ec:	02da0176 	.word	0x02da0176
    f8f0:	01760176 	.word	0x01760176
    f8f4:	0176058b 	.word	0x0176058b
    f8f8:	01760176 	.word	0x01760176
    f8fc:	01760176 	.word	0x01760176
    f900:	01760176 	.word	0x01760176
    f904:	01760176 	.word	0x01760176
    f908:	025c0176 	.word	0x025c0176
    f90c:	01760086 	.word	0x01760086
    f910:	01760176 	.word	0x01760176
    f914:	008602cd 	.word	0x008602cd
    f918:	0176007f 	.word	0x0176007f
    f91c:	017602c0 	.word	0x017602c0
    f920:	00ea02fd 	.word	0x00ea02fd
    f924:	007f02ed 	.word	0x007f02ed
    f928:	02330176 	.word	0x02330176
    f92c:	0569007c 	.word	0x0569007c
    f930:	01760176 	.word	0x01760176
    f934:	0176056b 	.word	0x0176056b
    f938:	007c      	.short	0x007c
    f93a:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    f93e:	2200      	movs	r2, #0
    f940:	f818 1b01 	ldrb.w	r1, [r8], #1
    f944:	eb02 0282 	add.w	r2, r2, r2, lsl #2
    f948:	eb03 0242 	add.w	r2, r3, r2, lsl #1
    f94c:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    f950:	2b09      	cmp	r3, #9
    f952:	d9f5      	bls.n	f940 <_vfiprintf_r+0x1b4>
    f954:	9206      	str	r2, [sp, #24]
    f956:	e78e      	b.n	f876 <_vfiprintf_r+0xea>
    f958:	4658      	mov	r0, fp
    f95a:	f7fd f9eb 	bl	cd34 <_localeconv_r>
    f95e:	6843      	ldr	r3, [r0, #4]
    f960:	930d      	str	r3, [sp, #52]	; 0x34
    f962:	4618      	mov	r0, r3
    f964:	f7ff f98c 	bl	ec80 <strlen>
    f968:	900e      	str	r0, [sp, #56]	; 0x38
    f96a:	4605      	mov	r5, r0
    f96c:	4658      	mov	r0, fp
    f96e:	f7fd f9e1 	bl	cd34 <_localeconv_r>
    f972:	6883      	ldr	r3, [r0, #8]
    f974:	930b      	str	r3, [sp, #44]	; 0x2c
    f976:	2d00      	cmp	r5, #0
    f978:	f040 84d6 	bne.w	10328 <_vfiprintf_r+0xb9c>
    f97c:	f898 1000 	ldrb.w	r1, [r8]
    f980:	e777      	b.n	f872 <_vfiprintf_r+0xe6>
    f982:	f898 1000 	ldrb.w	r1, [r8]
    f986:	f046 0620 	orr.w	r6, r6, #32
    f98a:	e772      	b.n	f872 <_vfiprintf_r+0xe6>
    f98c:	f046 0610 	orr.w	r6, r6, #16
    f990:	06b4      	lsls	r4, r6, #26
    f992:	f140 818e 	bpl.w	fcb2 <_vfiprintf_r+0x526>
    f996:	9b07      	ldr	r3, [sp, #28]
    f998:	3307      	adds	r3, #7
    f99a:	f023 0307 	bic.w	r3, r3, #7
    f99e:	461a      	mov	r2, r3
    f9a0:	6859      	ldr	r1, [r3, #4]
    f9a2:	f852 3b08 	ldr.w	r3, [r2], #8
    f9a6:	9207      	str	r2, [sp, #28]
    f9a8:	460a      	mov	r2, r1
    f9aa:	2900      	cmp	r1, #0
    f9ac:	f2c0 8470 	blt.w	10290 <_vfiprintf_r+0xb04>
    f9b0:	1c79      	adds	r1, r7, #1
    f9b2:	f000 85a2 	beq.w	104fa <_vfiprintf_r+0xd6e>
    f9b6:	f026 0180 	bic.w	r1, r6, #128	; 0x80
    f9ba:	9103      	str	r1, [sp, #12]
    f9bc:	ea53 0102 	orrs.w	r1, r3, r2
    f9c0:	f000 843f 	beq.w	10242 <_vfiprintf_r+0xab6>
    f9c4:	2b0a      	cmp	r3, #10
    f9c6:	f172 0100 	sbcs.w	r1, r2, #0
    f9ca:	f080 8541 	bcs.w	10450 <_vfiprintf_r+0xcc4>
    f9ce:	3330      	adds	r3, #48	; 0x30
    f9d0:	f88d 310f 	strb.w	r3, [sp, #271]	; 0x10f
    f9d4:	9e03      	ldr	r6, [sp, #12]
    f9d6:	2301      	movs	r3, #1
    f9d8:	9304      	str	r3, [sp, #16]
    f9da:	f20d 140f 	addw	r4, sp, #271	; 0x10f
    f9de:	9b04      	ldr	r3, [sp, #16]
    f9e0:	42bb      	cmp	r3, r7
    f9e2:	bfb8      	it	lt
    f9e4:	463b      	movlt	r3, r7
    f9e6:	9303      	str	r3, [sp, #12]
    f9e8:	2300      	movs	r3, #0
    f9ea:	9308      	str	r3, [sp, #32]
    f9ec:	f89d 3043 	ldrb.w	r3, [sp, #67]	; 0x43
    f9f0:	2b00      	cmp	r3, #0
    f9f2:	f000 80cb 	beq.w	fb8c <_vfiprintf_r+0x400>
    f9f6:	9b03      	ldr	r3, [sp, #12]
    f9f8:	3301      	adds	r3, #1
    f9fa:	9303      	str	r3, [sp, #12]
    f9fc:	e0c6      	b.n	fb8c <_vfiprintf_r+0x400>
    f9fe:	ee18 1a10 	vmov	r1, s16
    fa02:	4658      	mov	r0, fp
    fa04:	ee18 5a10 	vmov	r5, s16
    fa08:	f7fd fb08 	bl	d01c <__swsetup_r>
    fa0c:	2800      	cmp	r0, #0
    fa0e:	f040 8652 	bne.w	106b6 <_vfiprintf_r+0xf2a>
    fa12:	89aa      	ldrh	r2, [r5, #12]
    fa14:	f002 031a 	and.w	r3, r2, #26
    fa18:	2b0a      	cmp	r3, #10
    fa1a:	f47f aef6 	bne.w	f80a <_vfiprintf_r+0x7e>
    fa1e:	ee18 1a10 	vmov	r1, s16
    fa22:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
    fa26:	2b00      	cmp	r3, #0
    fa28:	f6ff aeef 	blt.w	f80a <_vfiprintf_r+0x7e>
    fa2c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    fa2e:	07db      	lsls	r3, r3, #31
    fa30:	d402      	bmi.n	fa38 <_vfiprintf_r+0x2ac>
    fa32:	0597      	lsls	r7, r2, #22
    fa34:	f140 8612 	bpl.w	1065c <_vfiprintf_r+0xed0>
    fa38:	ee18 1a10 	vmov	r1, s16
    fa3c:	4623      	mov	r3, r4
    fa3e:	4632      	mov	r2, r6
    fa40:	4658      	mov	r0, fp
    fa42:	f000 fe69 	bl	10718 <__sbprintf>
    fa46:	9005      	str	r0, [sp, #20]
    fa48:	9805      	ldr	r0, [sp, #20]
    fa4a:	b045      	add	sp, #276	; 0x114
    fa4c:	ecbd 8b02 	vpop	{d8}
    fa50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fa54:	f046 0610 	orr.w	r6, r6, #16
    fa58:	f016 0220 	ands.w	r2, r6, #32
    fa5c:	f000 8136 	beq.w	fccc <_vfiprintf_r+0x540>
    fa60:	9b07      	ldr	r3, [sp, #28]
    fa62:	3307      	adds	r3, #7
    fa64:	f023 0307 	bic.w	r3, r3, #7
    fa68:	4619      	mov	r1, r3
    fa6a:	685a      	ldr	r2, [r3, #4]
    fa6c:	f851 3b08 	ldr.w	r3, [r1], #8
    fa70:	9107      	str	r1, [sp, #28]
    fa72:	f426 6180 	bic.w	r1, r6, #1024	; 0x400
    fa76:	9103      	str	r1, [sp, #12]
    fa78:	2100      	movs	r1, #0
    fa7a:	2000      	movs	r0, #0
    fa7c:	f88d 0043 	strb.w	r0, [sp, #67]	; 0x43
    fa80:	1c78      	adds	r0, r7, #1
    fa82:	f000 8210 	beq.w	fea6 <_vfiprintf_r+0x71a>
    fa86:	9803      	ldr	r0, [sp, #12]
    fa88:	f020 0680 	bic.w	r6, r0, #128	; 0x80
    fa8c:	ea53 0002 	orrs.w	r0, r3, r2
    fa90:	f040 8208 	bne.w	fea4 <_vfiprintf_r+0x718>
    fa94:	2f00      	cmp	r7, #0
    fa96:	f040 8538 	bne.w	1050a <_vfiprintf_r+0xd7e>
    fa9a:	2900      	cmp	r1, #0
    fa9c:	f040 83d5 	bne.w	1024a <_vfiprintf_r+0xabe>
    faa0:	9b03      	ldr	r3, [sp, #12]
    faa2:	f013 0301 	ands.w	r3, r3, #1
    faa6:	9304      	str	r3, [sp, #16]
    faa8:	f000 8411 	beq.w	102ce <_vfiprintf_r+0xb42>
    faac:	2330      	movs	r3, #48	; 0x30
    faae:	f88d 310f 	strb.w	r3, [sp, #271]	; 0x10f
    fab2:	f20d 140f 	addw	r4, sp, #271	; 0x10f
    fab6:	e792      	b.n	f9de <_vfiprintf_r+0x252>
    fab8:	2208      	movs	r2, #8
    faba:	2100      	movs	r1, #0
    fabc:	4650      	mov	r0, sl
    fabe:	f7fd f889 	bl	cbd4 <memset>
    fac2:	2301      	movs	r3, #1
    fac4:	441c      	add	r4, r3
    fac6:	e6ad      	b.n	f824 <_vfiprintf_r+0x98>
    fac8:	2000216c 	.word	0x2000216c
    facc:	ebb4 0608 	subs.w	r6, r4, r8
    fad0:	4605      	mov	r5, r0
    fad2:	d01b      	beq.n	fb0c <_vfiprintf_r+0x380>
    fad4:	9b19      	ldr	r3, [sp, #100]	; 0x64
    fad6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    fad8:	3301      	adds	r3, #1
    fada:	4432      	add	r2, r6
    fadc:	2b07      	cmp	r3, #7
    fade:	e9c9 8600 	strd	r8, r6, [r9]
    fae2:	921a      	str	r2, [sp, #104]	; 0x68
    fae4:	9319      	str	r3, [sp, #100]	; 0x64
    fae6:	dd1c      	ble.n	fb22 <_vfiprintf_r+0x396>
    fae8:	2a00      	cmp	r2, #0
    faea:	f000 83a6 	beq.w	1023a <_vfiprintf_r+0xaae>
    faee:	ee18 1a10 	vmov	r1, s16
    faf2:	aa18      	add	r2, sp, #96	; 0x60
    faf4:	4658      	mov	r0, fp
    faf6:	f7ff fe0d 	bl	f714 <__sprint_r.part.0>
    fafa:	bb20      	cbnz	r0, fb46 <_vfiprintf_r+0x3ba>
    fafc:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    fb00:	9b05      	ldr	r3, [sp, #20]
    fb02:	4433      	add	r3, r6
    fb04:	9305      	str	r3, [sp, #20]
    fb06:	2d00      	cmp	r5, #0
    fb08:	f47f aea8 	bne.w	f85c <_vfiprintf_r+0xd0>
    fb0c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    fb0e:	2b00      	cmp	r3, #0
    fb10:	f040 85c1 	bne.w	10696 <_vfiprintf_r+0xf0a>
    fb14:	ee18 3a10 	vmov	r3, s16
    fb18:	2200      	movs	r2, #0
    fb1a:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
    fb1e:	9219      	str	r2, [sp, #100]	; 0x64
    fb20:	e015      	b.n	fb4e <_vfiprintf_r+0x3c2>
    fb22:	f109 0908 	add.w	r9, r9, #8
    fb26:	e7eb      	b.n	fb00 <_vfiprintf_r+0x374>
    fb28:	ee18 1a10 	vmov	r1, s16
    fb2c:	aa18      	add	r2, sp, #96	; 0x60
    fb2e:	4658      	mov	r0, fp
    fb30:	f7ff fdf0 	bl	f714 <__sprint_r.part.0>
    fb34:	2800      	cmp	r0, #0
    fb36:	f000 80a6 	beq.w	fc86 <_vfiprintf_r+0x4fa>
    fb3a:	9b08      	ldr	r3, [sp, #32]
    fb3c:	b11b      	cbz	r3, fb46 <_vfiprintf_r+0x3ba>
    fb3e:	9908      	ldr	r1, [sp, #32]
    fb40:	4658      	mov	r0, fp
    fb42:	f7ff fb85 	bl	f250 <_free_r>
    fb46:	ee18 3a10 	vmov	r3, s16
    fb4a:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
    fb4e:	ee18 2a10 	vmov	r2, s16
    fb52:	6e52      	ldr	r2, [r2, #100]	; 0x64
    fb54:	f012 0f01 	tst.w	r2, #1
    fb58:	b29a      	uxth	r2, r3
    fb5a:	f000 80a0 	beq.w	fc9e <_vfiprintf_r+0x512>
    fb5e:	0650      	lsls	r0, r2, #25
    fb60:	f100 85b2 	bmi.w	106c8 <_vfiprintf_r+0xf3c>
    fb64:	9805      	ldr	r0, [sp, #20]
    fb66:	b045      	add	sp, #276	; 0x114
    fb68:	ecbd 8b02 	vpop	{d8}
    fb6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fb70:	2900      	cmp	r1, #0
    fb72:	d0cb      	beq.n	fb0c <_vfiprintf_r+0x380>
    fb74:	2300      	movs	r3, #0
    fb76:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
    fb7a:	2301      	movs	r3, #1
    fb7c:	e9cd 3303 	strd	r3, r3, [sp, #12]
    fb80:	f88d 10ac 	strb.w	r1, [sp, #172]	; 0xac
    fb84:	ac2b      	add	r4, sp, #172	; 0xac
    fb86:	2300      	movs	r3, #0
    fb88:	9308      	str	r3, [sp, #32]
    fb8a:	461f      	mov	r7, r3
    fb8c:	f016 0302 	ands.w	r3, r6, #2
    fb90:	9309      	str	r3, [sp, #36]	; 0x24
    fb92:	d002      	beq.n	fb9a <_vfiprintf_r+0x40e>
    fb94:	9b03      	ldr	r3, [sp, #12]
    fb96:	3302      	adds	r3, #2
    fb98:	9303      	str	r3, [sp, #12]
    fb9a:	f016 0384 	ands.w	r3, r6, #132	; 0x84
    fb9e:	930a      	str	r3, [sp, #40]	; 0x28
    fba0:	d105      	bne.n	fbae <_vfiprintf_r+0x422>
    fba2:	9b06      	ldr	r3, [sp, #24]
    fba4:	9a03      	ldr	r2, [sp, #12]
    fba6:	1a9d      	subs	r5, r3, r2
    fba8:	2d00      	cmp	r5, #0
    fbaa:	f300 827b 	bgt.w	100a4 <_vfiprintf_r+0x918>
    fbae:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
    fbb2:	1c41      	adds	r1, r0, #1
    fbb4:	f89d 2043 	ldrb.w	r2, [sp, #67]	; 0x43
    fbb8:	b182      	cbz	r2, fbdc <_vfiprintf_r+0x450>
    fbba:	2201      	movs	r2, #1
    fbbc:	3301      	adds	r3, #1
    fbbe:	f8c9 2004 	str.w	r2, [r9, #4]
    fbc2:	2907      	cmp	r1, #7
    fbc4:	f10d 0243 	add.w	r2, sp, #67	; 0x43
    fbc8:	e9cd 1319 	strd	r1, r3, [sp, #100]	; 0x64
    fbcc:	f8c9 2000 	str.w	r2, [r9]
    fbd0:	f300 824a 	bgt.w	10068 <_vfiprintf_r+0x8dc>
    fbd4:	4608      	mov	r0, r1
    fbd6:	f109 0908 	add.w	r9, r9, #8
    fbda:	3101      	adds	r1, #1
    fbdc:	9a09      	ldr	r2, [sp, #36]	; 0x24
    fbde:	b1e2      	cbz	r2, fc1a <_vfiprintf_r+0x48e>
    fbe0:	aa11      	add	r2, sp, #68	; 0x44
    fbe2:	3302      	adds	r3, #2
    fbe4:	f8c9 2000 	str.w	r2, [r9]
    fbe8:	2907      	cmp	r1, #7
    fbea:	f04f 0202 	mov.w	r2, #2
    fbee:	e9cd 1319 	strd	r1, r3, [sp, #100]	; 0x64
    fbf2:	f8c9 2004 	str.w	r2, [r9, #4]
    fbf6:	f340 8250 	ble.w	1009a <_vfiprintf_r+0x90e>
    fbfa:	2b00      	cmp	r3, #0
    fbfc:	f000 8343 	beq.w	10286 <_vfiprintf_r+0xafa>
    fc00:	ee18 1a10 	vmov	r1, s16
    fc04:	aa18      	add	r2, sp, #96	; 0x60
    fc06:	4658      	mov	r0, fp
    fc08:	f7ff fd84 	bl	f714 <__sprint_r.part.0>
    fc0c:	2800      	cmp	r0, #0
    fc0e:	d194      	bne.n	fb3a <_vfiprintf_r+0x3ae>
    fc10:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
    fc14:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    fc18:	1c41      	adds	r1, r0, #1
    fc1a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    fc1c:	2a80      	cmp	r2, #128	; 0x80
    fc1e:	f000 8184 	beq.w	ff2a <_vfiprintf_r+0x79e>
    fc22:	9a04      	ldr	r2, [sp, #16]
    fc24:	1abd      	subs	r5, r7, r2
    fc26:	2d00      	cmp	r5, #0
    fc28:	f300 81d7 	bgt.w	ffda <_vfiprintf_r+0x84e>
    fc2c:	9a04      	ldr	r2, [sp, #16]
    fc2e:	f8c9 4000 	str.w	r4, [r9]
    fc32:	4413      	add	r3, r2
    fc34:	2907      	cmp	r1, #7
    fc36:	e9cd 1319 	strd	r1, r3, [sp, #100]	; 0x64
    fc3a:	f8c9 2004 	str.w	r2, [r9, #4]
    fc3e:	f340 816e 	ble.w	ff1e <_vfiprintf_r+0x792>
    fc42:	2b00      	cmp	r3, #0
    fc44:	f000 8275 	beq.w	10132 <_vfiprintf_r+0x9a6>
    fc48:	ee18 1a10 	vmov	r1, s16
    fc4c:	aa18      	add	r2, sp, #96	; 0x60
    fc4e:	4658      	mov	r0, fp
    fc50:	f7ff fd60 	bl	f714 <__sprint_r.part.0>
    fc54:	2800      	cmp	r0, #0
    fc56:	f47f af70 	bne.w	fb3a <_vfiprintf_r+0x3ae>
    fc5a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    fc5c:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    fc60:	0775      	lsls	r5, r6, #29
    fc62:	d505      	bpl.n	fc70 <_vfiprintf_r+0x4e4>
    fc64:	9a06      	ldr	r2, [sp, #24]
    fc66:	9903      	ldr	r1, [sp, #12]
    fc68:	1a54      	subs	r4, r2, r1
    fc6a:	2c00      	cmp	r4, #0
    fc6c:	f300 826b 	bgt.w	10146 <_vfiprintf_r+0x9ba>
    fc70:	e9dd 2105 	ldrd	r2, r1, [sp, #20]
    fc74:	9803      	ldr	r0, [sp, #12]
    fc76:	4281      	cmp	r1, r0
    fc78:	bfac      	ite	ge
    fc7a:	1852      	addge	r2, r2, r1
    fc7c:	1812      	addlt	r2, r2, r0
    fc7e:	9205      	str	r2, [sp, #20]
    fc80:	2b00      	cmp	r3, #0
    fc82:	f47f af51 	bne.w	fb28 <_vfiprintf_r+0x39c>
    fc86:	9908      	ldr	r1, [sp, #32]
    fc88:	2300      	movs	r3, #0
    fc8a:	9319      	str	r3, [sp, #100]	; 0x64
    fc8c:	2900      	cmp	r1, #0
    fc8e:	f000 8149 	beq.w	ff24 <_vfiprintf_r+0x798>
    fc92:	4658      	mov	r0, fp
    fc94:	f7ff fadc 	bl	f250 <_free_r>
    fc98:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    fc9c:	e5c1      	b.n	f822 <_vfiprintf_r+0x96>
    fc9e:	059c      	lsls	r4, r3, #22
    fca0:	f53f af5d 	bmi.w	fb5e <_vfiprintf_r+0x3d2>
    fca4:	ee18 4a10 	vmov	r4, s16
    fca8:	6da0      	ldr	r0, [r4, #88]	; 0x58
    fcaa:	f7fd f83b 	bl	cd24 <__retarget_lock_release_recursive>
    fcae:	89a2      	ldrh	r2, [r4, #12]
    fcb0:	e755      	b.n	fb5e <_vfiprintf_r+0x3d2>
    fcb2:	06f0      	lsls	r0, r6, #27
    fcb4:	9a07      	ldr	r2, [sp, #28]
    fcb6:	f100 831f 	bmi.w	102f8 <_vfiprintf_r+0xb6c>
    fcba:	0671      	lsls	r1, r6, #25
    fcbc:	f140 8319 	bpl.w	102f2 <_vfiprintf_r+0xb66>
    fcc0:	f932 3b04 	ldrsh.w	r3, [r2], #4
    fcc4:	9207      	str	r2, [sp, #28]
    fcc6:	17da      	asrs	r2, r3, #31
    fcc8:	4611      	mov	r1, r2
    fcca:	e66e      	b.n	f9aa <_vfiprintf_r+0x21e>
    fccc:	f016 0310 	ands.w	r3, r6, #16
    fcd0:	9907      	ldr	r1, [sp, #28]
    fcd2:	f040 8309 	bne.w	102e8 <_vfiprintf_r+0xb5c>
    fcd6:	f016 0040 	ands.w	r0, r6, #64	; 0x40
    fcda:	f000 8301 	beq.w	102e0 <_vfiprintf_r+0xb54>
    fcde:	461a      	mov	r2, r3
    fce0:	f851 3b04 	ldr.w	r3, [r1], #4
    fce4:	9107      	str	r1, [sp, #28]
    fce6:	b29b      	uxth	r3, r3
    fce8:	e6c3      	b.n	fa72 <_vfiprintf_r+0x2e6>
    fcea:	9b07      	ldr	r3, [sp, #28]
    fcec:	461a      	mov	r2, r3
    fcee:	2300      	movs	r3, #0
    fcf0:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
    fcf4:	4613      	mov	r3, r2
    fcf6:	f853 4b04 	ldr.w	r4, [r3], #4
    fcfa:	9303      	str	r3, [sp, #12]
    fcfc:	2c00      	cmp	r4, #0
    fcfe:	f000 8412 	beq.w	10526 <_vfiprintf_r+0xd9a>
    fd02:	2953      	cmp	r1, #83	; 0x53
    fd04:	f000 8365 	beq.w	103d2 <_vfiprintf_r+0xc46>
    fd08:	f016 0510 	ands.w	r5, r6, #16
    fd0c:	f040 8361 	bne.w	103d2 <_vfiprintf_r+0xc46>
    fd10:	1c7b      	adds	r3, r7, #1
    fd12:	f000 84b3 	beq.w	1067c <_vfiprintf_r+0xef0>
    fd16:	463a      	mov	r2, r7
    fd18:	4629      	mov	r1, r5
    fd1a:	4620      	mov	r0, r4
    fd1c:	f7fe ff48 	bl	ebb0 <memchr>
    fd20:	9008      	str	r0, [sp, #32]
    fd22:	2800      	cmp	r0, #0
    fd24:	f000 849f 	beq.w	10666 <_vfiprintf_r+0xeda>
    fd28:	1b03      	subs	r3, r0, r4
    fd2a:	9a03      	ldr	r2, [sp, #12]
    fd2c:	9304      	str	r3, [sp, #16]
    fd2e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    fd32:	462f      	mov	r7, r5
    fd34:	9207      	str	r2, [sp, #28]
    fd36:	9303      	str	r3, [sp, #12]
    fd38:	9508      	str	r5, [sp, #32]
    fd3a:	e657      	b.n	f9ec <_vfiprintf_r+0x260>
    fd3c:	2943      	cmp	r1, #67	; 0x43
    fd3e:	d002      	beq.n	fd46 <_vfiprintf_r+0x5ba>
    fd40:	06f5      	lsls	r5, r6, #27
    fd42:	f140 832d 	bpl.w	103a0 <_vfiprintf_r+0xc14>
    fd46:	9d07      	ldr	r5, [sp, #28]
    fd48:	2208      	movs	r2, #8
    fd4a:	2100      	movs	r1, #0
    fd4c:	a816      	add	r0, sp, #88	; 0x58
    fd4e:	ac2b      	add	r4, sp, #172	; 0xac
    fd50:	f7fc ff40 	bl	cbd4 <memset>
    fd54:	ab16      	add	r3, sp, #88	; 0x58
    fd56:	f855 2b04 	ldr.w	r2, [r5], #4
    fd5a:	4621      	mov	r1, r4
    fd5c:	4658      	mov	r0, fp
    fd5e:	f7fc ff91 	bl	cc84 <_wcrtomb_r>
    fd62:	4603      	mov	r3, r0
    fd64:	3301      	adds	r3, #1
    fd66:	9004      	str	r0, [sp, #16]
    fd68:	f000 84b3 	beq.w	106d2 <_vfiprintf_r+0xf46>
    fd6c:	9b04      	ldr	r3, [sp, #16]
    fd6e:	9507      	str	r5, [sp, #28]
    fd70:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    fd74:	9303      	str	r3, [sp, #12]
    fd76:	2300      	movs	r3, #0
    fd78:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
    fd7c:	e703      	b.n	fb86 <_vfiprintf_r+0x3fa>
    fd7e:	9b07      	ldr	r3, [sp, #28]
    fd80:	f853 2b04 	ldr.w	r2, [r3], #4
    fd84:	9206      	str	r2, [sp, #24]
    fd86:	2a00      	cmp	r2, #0
    fd88:	f280 829c 	bge.w	102c4 <_vfiprintf_r+0xb38>
    fd8c:	9a06      	ldr	r2, [sp, #24]
    fd8e:	4252      	negs	r2, r2
    fd90:	e9cd 2306 	strd	r2, r3, [sp, #24]
    fd94:	f898 1000 	ldrb.w	r1, [r8]
    fd98:	f046 0604 	orr.w	r6, r6, #4
    fd9c:	e569      	b.n	f872 <_vfiprintf_r+0xe6>
    fd9e:	f898 1000 	ldrb.w	r1, [r8]
    fda2:	f88d 4043 	strb.w	r4, [sp, #67]	; 0x43
    fda6:	e564      	b.n	f872 <_vfiprintf_r+0xe6>
    fda8:	f898 1000 	ldrb.w	r1, [r8]
    fdac:	f046 0680 	orr.w	r6, r6, #128	; 0x80
    fdb0:	e55f      	b.n	f872 <_vfiprintf_r+0xe6>
    fdb2:	4642      	mov	r2, r8
    fdb4:	f812 1b01 	ldrb.w	r1, [r2], #1
    fdb8:	292a      	cmp	r1, #42	; 0x2a
    fdba:	f000 8496 	beq.w	106ea <_vfiprintf_r+0xf5e>
    fdbe:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    fdc2:	2b09      	cmp	r3, #9
    fdc4:	4690      	mov	r8, r2
    fdc6:	f04f 0700 	mov.w	r7, #0
    fdca:	f63f ad54 	bhi.w	f876 <_vfiprintf_r+0xea>
    fdce:	f818 1b01 	ldrb.w	r1, [r8], #1
    fdd2:	eb07 0787 	add.w	r7, r7, r7, lsl #2
    fdd6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
    fdda:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    fdde:	2b09      	cmp	r3, #9
    fde0:	d9f5      	bls.n	fdce <_vfiprintf_r+0x642>
    fde2:	e548      	b.n	f876 <_vfiprintf_r+0xea>
    fde4:	f898 1000 	ldrb.w	r1, [r8]
    fde8:	f046 0601 	orr.w	r6, r6, #1
    fdec:	e541      	b.n	f872 <_vfiprintf_r+0xe6>
    fdee:	f89d 3043 	ldrb.w	r3, [sp, #67]	; 0x43
    fdf2:	2b00      	cmp	r3, #0
    fdf4:	f47f adc2 	bne.w	f97c <_vfiprintf_r+0x1f0>
    fdf8:	2320      	movs	r3, #32
    fdfa:	f898 1000 	ldrb.w	r1, [r8]
    fdfe:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
    fe02:	e536      	b.n	f872 <_vfiprintf_r+0xe6>
    fe04:	f898 1000 	ldrb.w	r1, [r8]
    fe08:	296c      	cmp	r1, #108	; 0x6c
    fe0a:	bf03      	ittte	eq
    fe0c:	f898 1001 	ldrbeq.w	r1, [r8, #1]
    fe10:	f046 0620 	orreq.w	r6, r6, #32
    fe14:	f108 0801 	addeq.w	r8, r8, #1
    fe18:	f046 0610 	orrne.w	r6, r6, #16
    fe1c:	e529      	b.n	f872 <_vfiprintf_r+0xe6>
    fe1e:	f898 1000 	ldrb.w	r1, [r8]
    fe22:	2968      	cmp	r1, #104	; 0x68
    fe24:	bf03      	ittte	eq
    fe26:	f898 1001 	ldrbeq.w	r1, [r8, #1]
    fe2a:	f446 7600 	orreq.w	r6, r6, #512	; 0x200
    fe2e:	f108 0801 	addeq.w	r8, r8, #1
    fe32:	f046 0640 	orrne.w	r6, r6, #64	; 0x40
    fe36:	e51c      	b.n	f872 <_vfiprintf_r+0xe6>
    fe38:	f046 0310 	orr.w	r3, r6, #16
    fe3c:	9303      	str	r3, [sp, #12]
    fe3e:	9b03      	ldr	r3, [sp, #12]
    fe40:	f013 0220 	ands.w	r2, r3, #32
    fe44:	f000 8206 	beq.w	10254 <_vfiprintf_r+0xac8>
    fe48:	9b07      	ldr	r3, [sp, #28]
    fe4a:	3307      	adds	r3, #7
    fe4c:	f023 0307 	bic.w	r3, r3, #7
    fe50:	4619      	mov	r1, r3
    fe52:	685a      	ldr	r2, [r3, #4]
    fe54:	f851 3b08 	ldr.w	r3, [r1], #8
    fe58:	9107      	str	r1, [sp, #28]
    fe5a:	2101      	movs	r1, #1
    fe5c:	e60d      	b.n	fa7a <_vfiprintf_r+0x2ee>
    fe5e:	9a07      	ldr	r2, [sp, #28]
    fe60:	f046 0302 	orr.w	r3, r6, #2
    fe64:	9303      	str	r3, [sp, #12]
    fe66:	f852 3b04 	ldr.w	r3, [r2], #4
    fe6a:	9207      	str	r2, [sp, #28]
    fe6c:	f647 0230 	movw	r2, #30768	; 0x7830
    fe70:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
    fe74:	4ab8      	ldr	r2, [pc, #736]	; (10158 <_vfiprintf_r+0x9cc>)
    fe76:	920c      	str	r2, [sp, #48]	; 0x30
    fe78:	2102      	movs	r1, #2
    fe7a:	2200      	movs	r2, #0
    fe7c:	e5fd      	b.n	fa7a <_vfiprintf_r+0x2ee>
    fe7e:	06b7      	lsls	r7, r6, #26
    fe80:	f100 8248 	bmi.w	10314 <_vfiprintf_r+0xb88>
    fe84:	06f5      	lsls	r5, r6, #27
    fe86:	f100 8346 	bmi.w	10516 <_vfiprintf_r+0xd8a>
    fe8a:	0674      	lsls	r4, r6, #25
    fe8c:	f100 83d5 	bmi.w	1063a <_vfiprintf_r+0xeae>
    fe90:	05b0      	lsls	r0, r6, #22
    fe92:	f140 8340 	bpl.w	10516 <_vfiprintf_r+0xd8a>
    fe96:	9b07      	ldr	r3, [sp, #28]
    fe98:	9905      	ldr	r1, [sp, #20]
    fe9a:	f853 2b04 	ldr.w	r2, [r3], #4
    fe9e:	9307      	str	r3, [sp, #28]
    fea0:	7011      	strb	r1, [r2, #0]
    fea2:	e4be      	b.n	f822 <_vfiprintf_r+0x96>
    fea4:	9603      	str	r6, [sp, #12]
    fea6:	2901      	cmp	r1, #1
    fea8:	f43f ad8c 	beq.w	f9c4 <_vfiprintf_r+0x238>
    feac:	2902      	cmp	r1, #2
    feae:	ac44      	add	r4, sp, #272	; 0x110
    feb0:	d111      	bne.n	fed6 <_vfiprintf_r+0x74a>
    feb2:	980c      	ldr	r0, [sp, #48]	; 0x30
    feb4:	f003 010f 	and.w	r1, r3, #15
    feb8:	091b      	lsrs	r3, r3, #4
    feba:	5c41      	ldrb	r1, [r0, r1]
    febc:	f804 1d01 	strb.w	r1, [r4, #-1]!
    fec0:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
    fec4:	0912      	lsrs	r2, r2, #4
    fec6:	ea53 0102 	orrs.w	r1, r3, r2
    feca:	d1f3      	bne.n	feb4 <_vfiprintf_r+0x728>
    fecc:	9e03      	ldr	r6, [sp, #12]
    fece:	ab44      	add	r3, sp, #272	; 0x110
    fed0:	1b1b      	subs	r3, r3, r4
    fed2:	9304      	str	r3, [sp, #16]
    fed4:	e583      	b.n	f9de <_vfiprintf_r+0x252>
    fed6:	f003 0107 	and.w	r1, r3, #7
    feda:	08db      	lsrs	r3, r3, #3
    fedc:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
    fee0:	08d2      	lsrs	r2, r2, #3
    fee2:	3130      	adds	r1, #48	; 0x30
    fee4:	ea53 0502 	orrs.w	r5, r3, r2
    fee8:	4620      	mov	r0, r4
    feea:	f804 1d01 	strb.w	r1, [r4, #-1]!
    feee:	d1f2      	bne.n	fed6 <_vfiprintf_r+0x74a>
    fef0:	9e03      	ldr	r6, [sp, #12]
    fef2:	07f3      	lsls	r3, r6, #31
    fef4:	d5eb      	bpl.n	fece <_vfiprintf_r+0x742>
    fef6:	2930      	cmp	r1, #48	; 0x30
    fef8:	d0e8      	beq.n	fecc <_vfiprintf_r+0x740>
    fefa:	2330      	movs	r3, #48	; 0x30
    fefc:	3802      	subs	r0, #2
    fefe:	f804 3c01 	strb.w	r3, [r4, #-1]
    ff02:	ab44      	add	r3, sp, #272	; 0x110
    ff04:	1a1b      	subs	r3, r3, r0
    ff06:	9e03      	ldr	r6, [sp, #12]
    ff08:	9304      	str	r3, [sp, #16]
    ff0a:	4604      	mov	r4, r0
    ff0c:	e567      	b.n	f9de <_vfiprintf_r+0x252>
    ff0e:	9b04      	ldr	r3, [sp, #16]
    ff10:	941b      	str	r4, [sp, #108]	; 0x6c
    ff12:	2201      	movs	r2, #1
    ff14:	931c      	str	r3, [sp, #112]	; 0x70
    ff16:	931a      	str	r3, [sp, #104]	; 0x68
    ff18:	9219      	str	r2, [sp, #100]	; 0x64
    ff1a:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    ff1e:	f109 0908 	add.w	r9, r9, #8
    ff22:	e69d      	b.n	fc60 <_vfiprintf_r+0x4d4>
    ff24:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    ff28:	e47b      	b.n	f822 <_vfiprintf_r+0x96>
    ff2a:	9a06      	ldr	r2, [sp, #24]
    ff2c:	9d03      	ldr	r5, [sp, #12]
    ff2e:	1b55      	subs	r5, r2, r5
    ff30:	2d00      	cmp	r5, #0
    ff32:	f77f ae76 	ble.w	fc22 <_vfiprintf_r+0x496>
    ff36:	2d10      	cmp	r5, #16
    ff38:	f340 83bb 	ble.w	106b2 <_vfiprintf_r+0xf26>
    ff3c:	9409      	str	r4, [sp, #36]	; 0x24
    ff3e:	ee18 4a10 	vmov	r4, s16
    ff42:	e007      	b.n	ff54 <_vfiprintf_r+0x7c8>
    ff44:	f100 0c02 	add.w	ip, r0, #2
    ff48:	f109 0908 	add.w	r9, r9, #8
    ff4c:	4610      	mov	r0, r2
    ff4e:	3d10      	subs	r5, #16
    ff50:	2d10      	cmp	r5, #16
    ff52:	dd1e      	ble.n	ff92 <_vfiprintf_r+0x806>
    ff54:	4981      	ldr	r1, [pc, #516]	; (1015c <_vfiprintf_r+0x9d0>)
    ff56:	f8c9 1000 	str.w	r1, [r9]
    ff5a:	1c42      	adds	r2, r0, #1
    ff5c:	3310      	adds	r3, #16
    ff5e:	2110      	movs	r1, #16
    ff60:	2a07      	cmp	r2, #7
    ff62:	e9cd 2319 	strd	r2, r3, [sp, #100]	; 0x64
    ff66:	f8c9 1004 	str.w	r1, [r9, #4]
    ff6a:	ddeb      	ble.n	ff44 <_vfiprintf_r+0x7b8>
    ff6c:	aa18      	add	r2, sp, #96	; 0x60
    ff6e:	2b00      	cmp	r3, #0
    ff70:	d074      	beq.n	1005c <_vfiprintf_r+0x8d0>
    ff72:	4621      	mov	r1, r4
    ff74:	4658      	mov	r0, fp
    ff76:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    ff7a:	f7ff fbcb 	bl	f714 <__sprint_r.part.0>
    ff7e:	2800      	cmp	r0, #0
    ff80:	f47f addb 	bne.w	fb3a <_vfiprintf_r+0x3ae>
    ff84:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
    ff88:	3d10      	subs	r5, #16
    ff8a:	2d10      	cmp	r5, #16
    ff8c:	f100 0c01 	add.w	ip, r0, #1
    ff90:	dce0      	bgt.n	ff54 <_vfiprintf_r+0x7c8>
    ff92:	9c09      	ldr	r4, [sp, #36]	; 0x24
    ff94:	4a71      	ldr	r2, [pc, #452]	; (1015c <_vfiprintf_r+0x9d0>)
    ff96:	f8c9 5004 	str.w	r5, [r9, #4]
    ff9a:	442b      	add	r3, r5
    ff9c:	f1bc 0f07 	cmp.w	ip, #7
    ffa0:	e9cd c319 	strd	ip, r3, [sp, #100]	; 0x64
    ffa4:	f8c9 2000 	str.w	r2, [r9]
    ffa8:	f340 8194 	ble.w	102d4 <_vfiprintf_r+0xb48>
    ffac:	2b00      	cmp	r3, #0
    ffae:	f000 831f 	beq.w	105f0 <_vfiprintf_r+0xe64>
    ffb2:	ee18 1a10 	vmov	r1, s16
    ffb6:	aa18      	add	r2, sp, #96	; 0x60
    ffb8:	4658      	mov	r0, fp
    ffba:	f7ff fbab 	bl	f714 <__sprint_r.part.0>
    ffbe:	2800      	cmp	r0, #0
    ffc0:	f47f adbb 	bne.w	fb3a <_vfiprintf_r+0x3ae>
    ffc4:	9a04      	ldr	r2, [sp, #16]
    ffc6:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
    ffca:	1abd      	subs	r5, r7, r2
    ffcc:	2d00      	cmp	r5, #0
    ffce:	f100 0101 	add.w	r1, r0, #1
    ffd2:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    ffd6:	f77f ae29 	ble.w	fc2c <_vfiprintf_r+0x4a0>
    ffda:	2d10      	cmp	r5, #16
    ffdc:	dd29      	ble.n	10032 <_vfiprintf_r+0x8a6>
    ffde:	9409      	str	r4, [sp, #36]	; 0x24
    ffe0:	2710      	movs	r7, #16
    ffe2:	ee18 4a10 	vmov	r4, s16
    ffe6:	e007      	b.n	fff8 <_vfiprintf_r+0x86c>
    ffe8:	f100 0c02 	add.w	ip, r0, #2
    ffec:	f109 0908 	add.w	r9, r9, #8
    fff0:	4610      	mov	r0, r2
    fff2:	3d10      	subs	r5, #16
    fff4:	2d10      	cmp	r5, #16
    fff6:	dd1a      	ble.n	1002e <_vfiprintf_r+0x8a2>
    fff8:	1c42      	adds	r2, r0, #1
    fffa:	4958      	ldr	r1, [pc, #352]	; (1015c <_vfiprintf_r+0x9d0>)
    fffc:	3310      	adds	r3, #16
    fffe:	2a07      	cmp	r2, #7
   10000:	e9c9 1700 	strd	r1, r7, [r9]
   10004:	e9cd 2319 	strd	r2, r3, [sp, #100]	; 0x64
   10008:	ddee      	ble.n	ffe8 <_vfiprintf_r+0x85c>
   1000a:	aa18      	add	r2, sp, #96	; 0x60
   1000c:	b303      	cbz	r3, 10050 <_vfiprintf_r+0x8c4>
   1000e:	4621      	mov	r1, r4
   10010:	4658      	mov	r0, fp
   10012:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10016:	f7ff fb7d 	bl	f714 <__sprint_r.part.0>
   1001a:	2800      	cmp	r0, #0
   1001c:	f47f ad8d 	bne.w	fb3a <_vfiprintf_r+0x3ae>
   10020:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
   10024:	3d10      	subs	r5, #16
   10026:	2d10      	cmp	r5, #16
   10028:	f100 0c01 	add.w	ip, r0, #1
   1002c:	dce4      	bgt.n	fff8 <_vfiprintf_r+0x86c>
   1002e:	9c09      	ldr	r4, [sp, #36]	; 0x24
   10030:	4661      	mov	r1, ip
   10032:	4a4a      	ldr	r2, [pc, #296]	; (1015c <_vfiprintf_r+0x9d0>)
   10034:	f8c9 5004 	str.w	r5, [r9, #4]
   10038:	442b      	add	r3, r5
   1003a:	2907      	cmp	r1, #7
   1003c:	e9cd 1319 	strd	r1, r3, [sp, #100]	; 0x64
   10040:	f8c9 2000 	str.w	r2, [r9]
   10044:	f300 80e7 	bgt.w	10216 <_vfiprintf_r+0xa8a>
   10048:	f109 0908 	add.w	r9, r9, #8
   1004c:	3101      	adds	r1, #1
   1004e:	e5ed      	b.n	fc2c <_vfiprintf_r+0x4a0>
   10050:	f04f 0c01 	mov.w	ip, #1
   10054:	4618      	mov	r0, r3
   10056:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   1005a:	e7ca      	b.n	fff2 <_vfiprintf_r+0x866>
   1005c:	f04f 0c01 	mov.w	ip, #1
   10060:	4618      	mov	r0, r3
   10062:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10066:	e772      	b.n	ff4e <_vfiprintf_r+0x7c2>
   10068:	2b00      	cmp	r3, #0
   1006a:	f000 8104 	beq.w	10276 <_vfiprintf_r+0xaea>
   1006e:	ee18 1a10 	vmov	r1, s16
   10072:	aa18      	add	r2, sp, #96	; 0x60
   10074:	4658      	mov	r0, fp
   10076:	f7ff fb4d 	bl	f714 <__sprint_r.part.0>
   1007a:	2800      	cmp	r0, #0
   1007c:	f47f ad5d 	bne.w	fb3a <_vfiprintf_r+0x3ae>
   10080:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
   10084:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10088:	1c41      	adds	r1, r0, #1
   1008a:	e5a7      	b.n	fbdc <_vfiprintf_r+0x450>
   1008c:	2302      	movs	r3, #2
   1008e:	aa11      	add	r2, sp, #68	; 0x44
   10090:	931c      	str	r3, [sp, #112]	; 0x70
   10092:	921b      	str	r2, [sp, #108]	; 0x6c
   10094:	2101      	movs	r1, #1
   10096:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   1009a:	4608      	mov	r0, r1
   1009c:	f109 0908 	add.w	r9, r9, #8
   100a0:	1c41      	adds	r1, r0, #1
   100a2:	e5ba      	b.n	fc1a <_vfiprintf_r+0x48e>
   100a4:	2d10      	cmp	r5, #16
   100a6:	f340 82e5 	ble.w	10674 <_vfiprintf_r+0xee8>
   100aa:	e9dd 1319 	ldrd	r1, r3, [sp, #100]	; 0x64
   100ae:	940f      	str	r4, [sp, #60]	; 0x3c
   100b0:	4608      	mov	r0, r1
   100b2:	ee18 4a10 	vmov	r4, s16
   100b6:	e007      	b.n	100c8 <_vfiprintf_r+0x93c>
   100b8:	f100 0c02 	add.w	ip, r0, #2
   100bc:	f109 0908 	add.w	r9, r9, #8
   100c0:	4610      	mov	r0, r2
   100c2:	3d10      	subs	r5, #16
   100c4:	2d10      	cmp	r5, #16
   100c6:	dd1d      	ble.n	10104 <_vfiprintf_r+0x978>
   100c8:	4925      	ldr	r1, [pc, #148]	; (10160 <_vfiprintf_r+0x9d4>)
   100ca:	f8c9 1000 	str.w	r1, [r9]
   100ce:	1c42      	adds	r2, r0, #1
   100d0:	3310      	adds	r3, #16
   100d2:	2110      	movs	r1, #16
   100d4:	2a07      	cmp	r2, #7
   100d6:	e9cd 2319 	strd	r2, r3, [sp, #100]	; 0x64
   100da:	f8c9 1004 	str.w	r1, [r9, #4]
   100de:	ddeb      	ble.n	100b8 <_vfiprintf_r+0x92c>
   100e0:	aa18      	add	r2, sp, #96	; 0x60
   100e2:	b303      	cbz	r3, 10126 <_vfiprintf_r+0x99a>
   100e4:	4621      	mov	r1, r4
   100e6:	4658      	mov	r0, fp
   100e8:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   100ec:	f7ff fb12 	bl	f714 <__sprint_r.part.0>
   100f0:	2800      	cmp	r0, #0
   100f2:	f47f ad22 	bne.w	fb3a <_vfiprintf_r+0x3ae>
   100f6:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
   100fa:	3d10      	subs	r5, #16
   100fc:	2d10      	cmp	r5, #16
   100fe:	f100 0c01 	add.w	ip, r0, #1
   10102:	dce1      	bgt.n	100c8 <_vfiprintf_r+0x93c>
   10104:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   10106:	4660      	mov	r0, ip
   10108:	4a15      	ldr	r2, [pc, #84]	; (10160 <_vfiprintf_r+0x9d4>)
   1010a:	f8c9 5004 	str.w	r5, [r9, #4]
   1010e:	442b      	add	r3, r5
   10110:	2807      	cmp	r0, #7
   10112:	e9cd 0319 	strd	r0, r3, [sp, #100]	; 0x64
   10116:	f8c9 2000 	str.w	r2, [r9]
   1011a:	f300 80c1 	bgt.w	102a0 <_vfiprintf_r+0xb14>
   1011e:	f109 0908 	add.w	r9, r9, #8
   10122:	1c41      	adds	r1, r0, #1
   10124:	e546      	b.n	fbb4 <_vfiprintf_r+0x428>
   10126:	4618      	mov	r0, r3
   10128:	f04f 0c01 	mov.w	ip, #1
   1012c:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10130:	e7c7      	b.n	100c2 <_vfiprintf_r+0x936>
   10132:	0776      	lsls	r6, r6, #29
   10134:	9319      	str	r3, [sp, #100]	; 0x64
   10136:	d553      	bpl.n	101e0 <_vfiprintf_r+0xa54>
   10138:	9a06      	ldr	r2, [sp, #24]
   1013a:	9903      	ldr	r1, [sp, #12]
   1013c:	1a54      	subs	r4, r2, r1
   1013e:	2c00      	cmp	r4, #0
   10140:	dd4e      	ble.n	101e0 <_vfiprintf_r+0xa54>
   10142:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10146:	2c10      	cmp	r4, #16
   10148:	f340 82b0 	ble.w	106ac <_vfiprintf_r+0xf20>
   1014c:	9919      	ldr	r1, [sp, #100]	; 0x64
   1014e:	ee18 6a10 	vmov	r6, s16
   10152:	2510      	movs	r5, #16
   10154:	e00d      	b.n	10172 <_vfiprintf_r+0x9e6>
   10156:	bf00      	nop
   10158:	20000aa4 	.word	0x20000aa4
   1015c:	20002010 	.word	0x20002010
   10160:	20000ae8 	.word	0x20000ae8
   10164:	1c88      	adds	r0, r1, #2
   10166:	f109 0908 	add.w	r9, r9, #8
   1016a:	4611      	mov	r1, r2
   1016c:	3c10      	subs	r4, #16
   1016e:	2c10      	cmp	r4, #16
   10170:	dd1a      	ble.n	101a8 <_vfiprintf_r+0xa1c>
   10172:	1c4a      	adds	r2, r1, #1
   10174:	48b3      	ldr	r0, [pc, #716]	; (10444 <_vfiprintf_r+0xcb8>)
   10176:	3310      	adds	r3, #16
   10178:	2a07      	cmp	r2, #7
   1017a:	e9c9 0500 	strd	r0, r5, [r9]
   1017e:	e9cd 2319 	strd	r2, r3, [sp, #100]	; 0x64
   10182:	ddef      	ble.n	10164 <_vfiprintf_r+0x9d8>
   10184:	aa18      	add	r2, sp, #96	; 0x60
   10186:	b333      	cbz	r3, 101d6 <_vfiprintf_r+0xa4a>
   10188:	4631      	mov	r1, r6
   1018a:	4658      	mov	r0, fp
   1018c:	f7ff fac2 	bl	f714 <__sprint_r.part.0>
   10190:	2800      	cmp	r0, #0
   10192:	f47f acd2 	bne.w	fb3a <_vfiprintf_r+0x3ae>
   10196:	e9dd 1319 	ldrd	r1, r3, [sp, #100]	; 0x64
   1019a:	3c10      	subs	r4, #16
   1019c:	2c10      	cmp	r4, #16
   1019e:	f101 0001 	add.w	r0, r1, #1
   101a2:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   101a6:	dce4      	bgt.n	10172 <_vfiprintf_r+0x9e6>
   101a8:	4aa6      	ldr	r2, [pc, #664]	; (10444 <_vfiprintf_r+0xcb8>)
   101aa:	f8c9 4004 	str.w	r4, [r9, #4]
   101ae:	4423      	add	r3, r4
   101b0:	2807      	cmp	r0, #7
   101b2:	e9cd 0319 	strd	r0, r3, [sp, #100]	; 0x64
   101b6:	f8c9 2000 	str.w	r2, [r9]
   101ba:	f77f ad59 	ble.w	fc70 <_vfiprintf_r+0x4e4>
   101be:	b17b      	cbz	r3, 101e0 <_vfiprintf_r+0xa54>
   101c0:	ee18 1a10 	vmov	r1, s16
   101c4:	aa18      	add	r2, sp, #96	; 0x60
   101c6:	4658      	mov	r0, fp
   101c8:	f7ff faa4 	bl	f714 <__sprint_r.part.0>
   101cc:	2800      	cmp	r0, #0
   101ce:	f47f acb4 	bne.w	fb3a <_vfiprintf_r+0x3ae>
   101d2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   101d4:	e54c      	b.n	fc70 <_vfiprintf_r+0x4e4>
   101d6:	2001      	movs	r0, #1
   101d8:	4619      	mov	r1, r3
   101da:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   101de:	e7c5      	b.n	1016c <_vfiprintf_r+0x9e0>
   101e0:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
   101e4:	9903      	ldr	r1, [sp, #12]
   101e6:	428a      	cmp	r2, r1
   101e8:	bfac      	ite	ge
   101ea:	189b      	addge	r3, r3, r2
   101ec:	185b      	addlt	r3, r3, r1
   101ee:	9305      	str	r3, [sp, #20]
   101f0:	e549      	b.n	fc86 <_vfiprintf_r+0x4fa>
   101f2:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
   101f6:	058f      	lsls	r7, r1, #22
   101f8:	ee18 3a10 	vmov	r3, s16
   101fc:	b28a      	uxth	r2, r1
   101fe:	f53f aae8 	bmi.w	f7d2 <_vfiprintf_r+0x46>
   10202:	ee18 5a10 	vmov	r5, s16
   10206:	6d98      	ldr	r0, [r3, #88]	; 0x58
   10208:	f7fc fd8a 	bl	cd20 <__retarget_lock_acquire_recursive>
   1020c:	f9b5 100c 	ldrsh.w	r1, [r5, #12]
   10210:	b28a      	uxth	r2, r1
   10212:	f7ff bade 	b.w	f7d2 <_vfiprintf_r+0x46>
   10216:	2b00      	cmp	r3, #0
   10218:	f43f ae79 	beq.w	ff0e <_vfiprintf_r+0x782>
   1021c:	ee18 1a10 	vmov	r1, s16
   10220:	aa18      	add	r2, sp, #96	; 0x60
   10222:	4658      	mov	r0, fp
   10224:	f7ff fa76 	bl	f714 <__sprint_r.part.0>
   10228:	2800      	cmp	r0, #0
   1022a:	f47f ac86 	bne.w	fb3a <_vfiprintf_r+0x3ae>
   1022e:	9919      	ldr	r1, [sp, #100]	; 0x64
   10230:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   10232:	3101      	adds	r1, #1
   10234:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10238:	e4f8      	b.n	fc2c <_vfiprintf_r+0x4a0>
   1023a:	9219      	str	r2, [sp, #100]	; 0x64
   1023c:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10240:	e45e      	b.n	fb00 <_vfiprintf_r+0x374>
   10242:	2f00      	cmp	r7, #0
   10244:	f47f abc3 	bne.w	f9ce <_vfiprintf_r+0x242>
   10248:	9e03      	ldr	r6, [sp, #12]
   1024a:	2700      	movs	r7, #0
   1024c:	9704      	str	r7, [sp, #16]
   1024e:	ac44      	add	r4, sp, #272	; 0x110
   10250:	f7ff bbc5 	b.w	f9de <_vfiprintf_r+0x252>
   10254:	9b03      	ldr	r3, [sp, #12]
   10256:	f013 0310 	ands.w	r3, r3, #16
   1025a:	d154      	bne.n	10306 <_vfiprintf_r+0xb7a>
   1025c:	9a03      	ldr	r2, [sp, #12]
   1025e:	f012 0040 	ands.w	r0, r2, #64	; 0x40
   10262:	f000 816b 	beq.w	1053c <_vfiprintf_r+0xdb0>
   10266:	9907      	ldr	r1, [sp, #28]
   10268:	461a      	mov	r2, r3
   1026a:	f851 3b04 	ldr.w	r3, [r1], #4
   1026e:	9107      	str	r1, [sp, #28]
   10270:	b29b      	uxth	r3, r3
   10272:	2101      	movs	r1, #1
   10274:	e401      	b.n	fa7a <_vfiprintf_r+0x2ee>
   10276:	9a09      	ldr	r2, [sp, #36]	; 0x24
   10278:	2a00      	cmp	r2, #0
   1027a:	d164      	bne.n	10346 <_vfiprintf_r+0xbba>
   1027c:	4618      	mov	r0, r3
   1027e:	2101      	movs	r1, #1
   10280:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10284:	e4c9      	b.n	fc1a <_vfiprintf_r+0x48e>
   10286:	2101      	movs	r1, #1
   10288:	4618      	mov	r0, r3
   1028a:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   1028e:	e4c4      	b.n	fc1a <_vfiprintf_r+0x48e>
   10290:	425b      	negs	r3, r3
   10292:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
   10296:	9603      	str	r6, [sp, #12]
   10298:	202d      	movs	r0, #45	; 0x2d
   1029a:	2101      	movs	r1, #1
   1029c:	f7ff bbee 	b.w	fa7c <_vfiprintf_r+0x2f0>
   102a0:	2b00      	cmp	r3, #0
   102a2:	f000 8088 	beq.w	103b6 <_vfiprintf_r+0xc2a>
   102a6:	ee18 1a10 	vmov	r1, s16
   102aa:	aa18      	add	r2, sp, #96	; 0x60
   102ac:	4658      	mov	r0, fp
   102ae:	f7ff fa31 	bl	f714 <__sprint_r.part.0>
   102b2:	2800      	cmp	r0, #0
   102b4:	f47f ac41 	bne.w	fb3a <_vfiprintf_r+0x3ae>
   102b8:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
   102bc:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   102c0:	1c41      	adds	r1, r0, #1
   102c2:	e477      	b.n	fbb4 <_vfiprintf_r+0x428>
   102c4:	f898 1000 	ldrb.w	r1, [r8]
   102c8:	9307      	str	r3, [sp, #28]
   102ca:	f7ff bad2 	b.w	f872 <_vfiprintf_r+0xe6>
   102ce:	ac44      	add	r4, sp, #272	; 0x110
   102d0:	f7ff bb85 	b.w	f9de <_vfiprintf_r+0x252>
   102d4:	f109 0908 	add.w	r9, r9, #8
   102d8:	f10c 0101 	add.w	r1, ip, #1
   102dc:	4660      	mov	r0, ip
   102de:	e4a0      	b.n	fc22 <_vfiprintf_r+0x496>
   102e0:	f416 7200 	ands.w	r2, r6, #512	; 0x200
   102e4:	f040 8197 	bne.w	10616 <_vfiprintf_r+0xe8a>
   102e8:	f851 3b04 	ldr.w	r3, [r1], #4
   102ec:	9107      	str	r1, [sp, #28]
   102ee:	f7ff bbc0 	b.w	fa72 <_vfiprintf_r+0x2e6>
   102f2:	05b3      	lsls	r3, r6, #22
   102f4:	f100 8188 	bmi.w	10608 <_vfiprintf_r+0xe7c>
   102f8:	f852 3b04 	ldr.w	r3, [r2], #4
   102fc:	9207      	str	r2, [sp, #28]
   102fe:	17da      	asrs	r2, r3, #31
   10300:	4611      	mov	r1, r2
   10302:	f7ff bb52 	b.w	f9aa <_vfiprintf_r+0x21e>
   10306:	9907      	ldr	r1, [sp, #28]
   10308:	f851 3b04 	ldr.w	r3, [r1], #4
   1030c:	9107      	str	r1, [sp, #28]
   1030e:	2101      	movs	r1, #1
   10310:	f7ff bbb3 	b.w	fa7a <_vfiprintf_r+0x2ee>
   10314:	9b07      	ldr	r3, [sp, #28]
   10316:	9805      	ldr	r0, [sp, #20]
   10318:	f853 1b04 	ldr.w	r1, [r3], #4
   1031c:	9307      	str	r3, [sp, #28]
   1031e:	17c2      	asrs	r2, r0, #31
   10320:	e9c1 0200 	strd	r0, r2, [r1]
   10324:	f7ff ba7d 	b.w	f822 <_vfiprintf_r+0x96>
   10328:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1032a:	2b00      	cmp	r3, #0
   1032c:	f43f ab26 	beq.w	f97c <_vfiprintf_r+0x1f0>
   10330:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   10332:	781b      	ldrb	r3, [r3, #0]
   10334:	2b00      	cmp	r3, #0
   10336:	f43f ab21 	beq.w	f97c <_vfiprintf_r+0x1f0>
   1033a:	f898 1000 	ldrb.w	r1, [r8]
   1033e:	f446 6680 	orr.w	r6, r6, #1024	; 0x400
   10342:	f7ff ba96 	b.w	f872 <_vfiprintf_r+0xe6>
   10346:	2302      	movs	r3, #2
   10348:	aa11      	add	r2, sp, #68	; 0x44
   1034a:	931c      	str	r3, [sp, #112]	; 0x70
   1034c:	921b      	str	r2, [sp, #108]	; 0x6c
   1034e:	2001      	movs	r0, #1
   10350:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10354:	e6a2      	b.n	1009c <_vfiprintf_r+0x910>
   10356:	9603      	str	r6, [sp, #12]
   10358:	e571      	b.n	fe3e <_vfiprintf_r+0x6b2>
   1035a:	4b3b      	ldr	r3, [pc, #236]	; (10448 <_vfiprintf_r+0xcbc>)
   1035c:	930c      	str	r3, [sp, #48]	; 0x30
   1035e:	f016 0220 	ands.w	r2, r6, #32
   10362:	d059      	beq.n	10418 <_vfiprintf_r+0xc8c>
   10364:	9b07      	ldr	r3, [sp, #28]
   10366:	3307      	adds	r3, #7
   10368:	f023 0307 	bic.w	r3, r3, #7
   1036c:	4618      	mov	r0, r3
   1036e:	685a      	ldr	r2, [r3, #4]
   10370:	f850 3b08 	ldr.w	r3, [r0], #8
   10374:	9007      	str	r0, [sp, #28]
   10376:	07f4      	lsls	r4, r6, #31
   10378:	d509      	bpl.n	1038e <_vfiprintf_r+0xc02>
   1037a:	ea53 0002 	orrs.w	r0, r3, r2
   1037e:	d006      	beq.n	1038e <_vfiprintf_r+0xc02>
   10380:	f88d 1045 	strb.w	r1, [sp, #69]	; 0x45
   10384:	2130      	movs	r1, #48	; 0x30
   10386:	f046 0602 	orr.w	r6, r6, #2
   1038a:	f88d 1044 	strb.w	r1, [sp, #68]	; 0x44
   1038e:	f426 6180 	bic.w	r1, r6, #1024	; 0x400
   10392:	9103      	str	r1, [sp, #12]
   10394:	2102      	movs	r1, #2
   10396:	f7ff bb70 	b.w	fa7a <_vfiprintf_r+0x2ee>
   1039a:	4b2c      	ldr	r3, [pc, #176]	; (1044c <_vfiprintf_r+0xcc0>)
   1039c:	930c      	str	r3, [sp, #48]	; 0x30
   1039e:	e7de      	b.n	1035e <_vfiprintf_r+0xbd2>
   103a0:	9b07      	ldr	r3, [sp, #28]
   103a2:	2101      	movs	r1, #1
   103a4:	f853 2b04 	ldr.w	r2, [r3], #4
   103a8:	9103      	str	r1, [sp, #12]
   103aa:	f88d 20ac 	strb.w	r2, [sp, #172]	; 0xac
   103ae:	9307      	str	r3, [sp, #28]
   103b0:	9104      	str	r1, [sp, #16]
   103b2:	ac2b      	add	r4, sp, #172	; 0xac
   103b4:	e4df      	b.n	fd76 <_vfiprintf_r+0x5ea>
   103b6:	f89d 2043 	ldrb.w	r2, [sp, #67]	; 0x43
   103ba:	2a00      	cmp	r2, #0
   103bc:	f040 8132 	bne.w	10624 <_vfiprintf_r+0xe98>
   103c0:	9a09      	ldr	r2, [sp, #36]	; 0x24
   103c2:	2a00      	cmp	r2, #0
   103c4:	f47f ae62 	bne.w	1008c <_vfiprintf_r+0x900>
   103c8:	4618      	mov	r0, r3
   103ca:	2101      	movs	r1, #1
   103cc:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   103d0:	e427      	b.n	fc22 <_vfiprintf_r+0x496>
   103d2:	2100      	movs	r1, #0
   103d4:	2208      	movs	r2, #8
   103d6:	a816      	add	r0, sp, #88	; 0x58
   103d8:	9413      	str	r4, [sp, #76]	; 0x4c
   103da:	f7fc fbfb 	bl	cbd4 <memset>
   103de:	1c79      	adds	r1, r7, #1
   103e0:	f000 80bc 	beq.w	1055c <_vfiprintf_r+0xdd0>
   103e4:	2500      	movs	r5, #0
   103e6:	9407      	str	r4, [sp, #28]
   103e8:	462c      	mov	r4, r5
   103ea:	e00c      	b.n	10406 <_vfiprintf_r+0xc7a>
   103ec:	a92b      	add	r1, sp, #172	; 0xac
   103ee:	4658      	mov	r0, fp
   103f0:	f7fc fc48 	bl	cc84 <_wcrtomb_r>
   103f4:	1c42      	adds	r2, r0, #1
   103f6:	4420      	add	r0, r4
   103f8:	f000 816b 	beq.w	106d2 <_vfiprintf_r+0xf46>
   103fc:	42b8      	cmp	r0, r7
   103fe:	dc08      	bgt.n	10412 <_vfiprintf_r+0xc86>
   10400:	f000 8170 	beq.w	106e4 <_vfiprintf_r+0xf58>
   10404:	4604      	mov	r4, r0
   10406:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   10408:	5952      	ldr	r2, [r2, r5]
   1040a:	ab16      	add	r3, sp, #88	; 0x58
   1040c:	3504      	adds	r5, #4
   1040e:	2a00      	cmp	r2, #0
   10410:	d1ec      	bne.n	103ec <_vfiprintf_r+0xc60>
   10412:	9404      	str	r4, [sp, #16]
   10414:	9c07      	ldr	r4, [sp, #28]
   10416:	e0af      	b.n	10578 <_vfiprintf_r+0xdec>
   10418:	f016 0310 	ands.w	r3, r6, #16
   1041c:	9807      	ldr	r0, [sp, #28]
   1041e:	d10c      	bne.n	1043a <_vfiprintf_r+0xcae>
   10420:	f016 0440 	ands.w	r4, r6, #64	; 0x40
   10424:	d005      	beq.n	10432 <_vfiprintf_r+0xca6>
   10426:	461a      	mov	r2, r3
   10428:	f850 3b04 	ldr.w	r3, [r0], #4
   1042c:	9007      	str	r0, [sp, #28]
   1042e:	b29b      	uxth	r3, r3
   10430:	e7a1      	b.n	10376 <_vfiprintf_r+0xbea>
   10432:	f416 7200 	ands.w	r2, r6, #512	; 0x200
   10436:	f040 80e1 	bne.w	105fc <_vfiprintf_r+0xe70>
   1043a:	f850 3b04 	ldr.w	r3, [r0], #4
   1043e:	9007      	str	r0, [sp, #28]
   10440:	e799      	b.n	10376 <_vfiprintf_r+0xbea>
   10442:	bf00      	nop
   10444:	20000ae8 	.word	0x20000ae8
   10448:	20000aa4 	.word	0x20000aa4
   1044c:	20000ab8 	.word	0x20000ab8
   10450:	9903      	ldr	r1, [sp, #12]
   10452:	9704      	str	r7, [sp, #16]
   10454:	ac44      	add	r4, sp, #272	; 0x110
   10456:	469e      	mov	lr, r3
   10458:	ee08 ba90 	vmov	s17, fp
   1045c:	f401 6680 	and.w	r6, r1, #1024	; 0x400
   10460:	f04f 0c00 	mov.w	ip, #0
   10464:	4623      	mov	r3, r4
   10466:	e006      	b.n	10476 <_vfiprintf_r+0xcea>
   10468:	f1be 0f0a 	cmp.w	lr, #10
   1046c:	f172 0200 	sbcs.w	r2, r2, #0
   10470:	d339      	bcc.n	104e6 <_vfiprintf_r+0xd5a>
   10472:	46a6      	mov	lr, r4
   10474:	462a      	mov	r2, r5
   10476:	49a6      	ldr	r1, [pc, #664]	; (10710 <_vfiprintf_r+0xf84>)
   10478:	eb1e 0002 	adds.w	r0, lr, r2
   1047c:	f140 0000 	adc.w	r0, r0, #0
   10480:	460f      	mov	r7, r1
   10482:	fba1 1400 	umull	r1, r4, r1, r0
   10486:	f024 0103 	bic.w	r1, r4, #3
   1048a:	eb01 0194 	add.w	r1, r1, r4, lsr #2
   1048e:	1a40      	subs	r0, r0, r1
   10490:	ebbe 0100 	subs.w	r1, lr, r0
   10494:	f04f 35cc 	mov.w	r5, #3435973836	; 0xcccccccc
   10498:	f162 0400 	sbc.w	r4, r2, #0
   1049c:	fb05 f501 	mul.w	r5, r5, r1
   104a0:	fb07 5504 	mla	r5, r7, r4, r5
   104a4:	fba1 4107 	umull	r4, r1, r1, r7
   104a8:	440d      	add	r5, r1
   104aa:	2705      	movs	r7, #5
   104ac:	f004 0101 	and.w	r1, r4, #1
   104b0:	fba1 1b07 	umull	r1, fp, r1, r7
   104b4:	1809      	adds	r1, r1, r0
   104b6:	0864      	lsrs	r4, r4, #1
   104b8:	3130      	adds	r1, #48	; 0x30
   104ba:	f803 1c01 	strb.w	r1, [r3, #-1]
   104be:	ea44 74c5 	orr.w	r4, r4, r5, lsl #31
   104c2:	f10c 0c01 	add.w	ip, ip, #1
   104c6:	3b01      	subs	r3, #1
   104c8:	086d      	lsrs	r5, r5, #1
   104ca:	2e00      	cmp	r6, #0
   104cc:	d0cc      	beq.n	10468 <_vfiprintf_r+0xcdc>
   104ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
   104d0:	7809      	ldrb	r1, [r1, #0]
   104d2:	4561      	cmp	r1, ip
   104d4:	d1c8      	bne.n	10468 <_vfiprintf_r+0xcdc>
   104d6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
   104da:	d0c5      	beq.n	10468 <_vfiprintf_r+0xcdc>
   104dc:	f1be 0f0a 	cmp.w	lr, #10
   104e0:	f172 0200 	sbcs.w	r2, r2, #0
   104e4:	d26c      	bcs.n	105c0 <_vfiprintf_r+0xe34>
   104e6:	461c      	mov	r4, r3
   104e8:	ab44      	add	r3, sp, #272	; 0x110
   104ea:	1b1b      	subs	r3, r3, r4
   104ec:	9f04      	ldr	r7, [sp, #16]
   104ee:	9e03      	ldr	r6, [sp, #12]
   104f0:	9304      	str	r3, [sp, #16]
   104f2:	ee18 ba90 	vmov	fp, s17
   104f6:	f7ff ba72 	b.w	f9de <_vfiprintf_r+0x252>
   104fa:	9603      	str	r6, [sp, #12]
   104fc:	f7ff ba62 	b.w	f9c4 <_vfiprintf_r+0x238>
   10500:	4658      	mov	r0, fp
   10502:	f7fe fb29 	bl	eb58 <__sinit>
   10506:	f7ff b95b 	b.w	f7c0 <_vfiprintf_r+0x34>
   1050a:	2901      	cmp	r1, #1
   1050c:	9603      	str	r6, [sp, #12]
   1050e:	f47f accd 	bne.w	feac <_vfiprintf_r+0x720>
   10512:	f7ff ba5c 	b.w	f9ce <_vfiprintf_r+0x242>
   10516:	9b07      	ldr	r3, [sp, #28]
   10518:	9905      	ldr	r1, [sp, #20]
   1051a:	f853 2b04 	ldr.w	r2, [r3], #4
   1051e:	6011      	str	r1, [r2, #0]
   10520:	9307      	str	r3, [sp, #28]
   10522:	f7ff b97e 	b.w	f822 <_vfiprintf_r+0x96>
   10526:	2f06      	cmp	r7, #6
   10528:	463b      	mov	r3, r7
   1052a:	9a03      	ldr	r2, [sp, #12]
   1052c:	4c79      	ldr	r4, [pc, #484]	; (10714 <_vfiprintf_r+0xf88>)
   1052e:	9207      	str	r2, [sp, #28]
   10530:	bf28      	it	cs
   10532:	2306      	movcs	r3, #6
   10534:	9304      	str	r3, [sp, #16]
   10536:	9303      	str	r3, [sp, #12]
   10538:	f7ff bb25 	b.w	fb86 <_vfiprintf_r+0x3fa>
   1053c:	9b03      	ldr	r3, [sp, #12]
   1053e:	9907      	ldr	r1, [sp, #28]
   10540:	f413 7200 	ands.w	r2, r3, #512	; 0x200
   10544:	bf14      	ite	ne
   10546:	f851 3b04 	ldrne.w	r3, [r1], #4
   1054a:	f851 3b04 	ldreq.w	r3, [r1], #4
   1054e:	9107      	str	r1, [sp, #28]
   10550:	bf1c      	itt	ne
   10552:	4602      	movne	r2, r0
   10554:	b2db      	uxtbne	r3, r3
   10556:	2101      	movs	r1, #1
   10558:	f7ff ba8f 	b.w	fa7a <_vfiprintf_r+0x2ee>
   1055c:	ab16      	add	r3, sp, #88	; 0x58
   1055e:	9300      	str	r3, [sp, #0]
   10560:	2300      	movs	r3, #0
   10562:	4619      	mov	r1, r3
   10564:	aa13      	add	r2, sp, #76	; 0x4c
   10566:	4658      	mov	r0, fp
   10568:	f7fd fa76 	bl	da58 <_wcsrtombs_r>
   1056c:	4603      	mov	r3, r0
   1056e:	3301      	adds	r3, #1
   10570:	9004      	str	r0, [sp, #16]
   10572:	f000 80ae 	beq.w	106d2 <_vfiprintf_r+0xf46>
   10576:	9413      	str	r4, [sp, #76]	; 0x4c
   10578:	9b04      	ldr	r3, [sp, #16]
   1057a:	2b00      	cmp	r3, #0
   1057c:	d030      	beq.n	105e0 <_vfiprintf_r+0xe54>
   1057e:	2b63      	cmp	r3, #99	; 0x63
   10580:	dc63      	bgt.n	1064a <_vfiprintf_r+0xebe>
   10582:	2300      	movs	r3, #0
   10584:	9308      	str	r3, [sp, #32]
   10586:	ac2b      	add	r4, sp, #172	; 0xac
   10588:	2208      	movs	r2, #8
   1058a:	2100      	movs	r1, #0
   1058c:	a816      	add	r0, sp, #88	; 0x58
   1058e:	f7fc fb21 	bl	cbd4 <memset>
   10592:	9d04      	ldr	r5, [sp, #16]
   10594:	ab16      	add	r3, sp, #88	; 0x58
   10596:	9300      	str	r3, [sp, #0]
   10598:	aa13      	add	r2, sp, #76	; 0x4c
   1059a:	462b      	mov	r3, r5
   1059c:	4621      	mov	r1, r4
   1059e:	4658      	mov	r0, fp
   105a0:	f7fd fa5a 	bl	da58 <_wcsrtombs_r>
   105a4:	4285      	cmp	r5, r0
   105a6:	f040 80ab 	bne.w	10700 <_vfiprintf_r+0xf74>
   105aa:	9b03      	ldr	r3, [sp, #12]
   105ac:	9a04      	ldr	r2, [sp, #16]
   105ae:	9307      	str	r3, [sp, #28]
   105b0:	2300      	movs	r3, #0
   105b2:	54a3      	strb	r3, [r4, r2]
   105b4:	461f      	mov	r7, r3
   105b6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   105ba:	9303      	str	r3, [sp, #12]
   105bc:	f7ff ba16 	b.w	f9ec <_vfiprintf_r+0x260>
   105c0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   105c2:	990d      	ldr	r1, [sp, #52]	; 0x34
   105c4:	1a9b      	subs	r3, r3, r2
   105c6:	4618      	mov	r0, r3
   105c8:	9308      	str	r3, [sp, #32]
   105ca:	f7f9 ff1b 	bl	a404 <strncpy>
   105ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
   105d0:	9b08      	ldr	r3, [sp, #32]
   105d2:	784a      	ldrb	r2, [r1, #1]
   105d4:	b10a      	cbz	r2, 105da <_vfiprintf_r+0xe4e>
   105d6:	3101      	adds	r1, #1
   105d8:	910b      	str	r1, [sp, #44]	; 0x2c
   105da:	f04f 0c00 	mov.w	ip, #0
   105de:	e748      	b.n	10472 <_vfiprintf_r+0xce6>
   105e0:	9b03      	ldr	r3, [sp, #12]
   105e2:	9307      	str	r3, [sp, #28]
   105e4:	9b04      	ldr	r3, [sp, #16]
   105e6:	9303      	str	r3, [sp, #12]
   105e8:	461f      	mov	r7, r3
   105ea:	9308      	str	r3, [sp, #32]
   105ec:	f7ff b9fe 	b.w	f9ec <_vfiprintf_r+0x260>
   105f0:	2101      	movs	r1, #1
   105f2:	4618      	mov	r0, r3
   105f4:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   105f8:	f7ff bb13 	b.w	fc22 <_vfiprintf_r+0x496>
   105fc:	f850 3b04 	ldr.w	r3, [r0], #4
   10600:	9007      	str	r0, [sp, #28]
   10602:	4622      	mov	r2, r4
   10604:	b2db      	uxtb	r3, r3
   10606:	e6b6      	b.n	10376 <_vfiprintf_r+0xbea>
   10608:	f912 3b04 	ldrsb.w	r3, [r2], #4
   1060c:	9207      	str	r2, [sp, #28]
   1060e:	17da      	asrs	r2, r3, #31
   10610:	4611      	mov	r1, r2
   10612:	f7ff b9ca 	b.w	f9aa <_vfiprintf_r+0x21e>
   10616:	f851 3b04 	ldr.w	r3, [r1], #4
   1061a:	9107      	str	r1, [sp, #28]
   1061c:	4602      	mov	r2, r0
   1061e:	b2db      	uxtb	r3, r3
   10620:	f7ff ba27 	b.w	fa72 <_vfiprintf_r+0x2e6>
   10624:	2301      	movs	r3, #1
   10626:	931c      	str	r3, [sp, #112]	; 0x70
   10628:	2101      	movs	r1, #1
   1062a:	f10d 0343 	add.w	r3, sp, #67	; 0x43
   1062e:	931b      	str	r3, [sp, #108]	; 0x6c
   10630:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10634:	460b      	mov	r3, r1
   10636:	f7ff bacd 	b.w	fbd4 <_vfiprintf_r+0x448>
   1063a:	9b07      	ldr	r3, [sp, #28]
   1063c:	9905      	ldr	r1, [sp, #20]
   1063e:	f853 2b04 	ldr.w	r2, [r3], #4
   10642:	9307      	str	r3, [sp, #28]
   10644:	8011      	strh	r1, [r2, #0]
   10646:	f7ff b8ec 	b.w	f822 <_vfiprintf_r+0x96>
   1064a:	1c59      	adds	r1, r3, #1
   1064c:	4658      	mov	r0, fp
   1064e:	f7fb ff45 	bl	c4dc <_malloc_r>
   10652:	4604      	mov	r4, r0
   10654:	2800      	cmp	r0, #0
   10656:	d03c      	beq.n	106d2 <_vfiprintf_r+0xf46>
   10658:	9008      	str	r0, [sp, #32]
   1065a:	e795      	b.n	10588 <_vfiprintf_r+0xdfc>
   1065c:	6d88      	ldr	r0, [r1, #88]	; 0x58
   1065e:	f7fc fb61 	bl	cd24 <__retarget_lock_release_recursive>
   10662:	f7ff b9e9 	b.w	fa38 <_vfiprintf_r+0x2ac>
   10666:	9b03      	ldr	r3, [sp, #12]
   10668:	9307      	str	r3, [sp, #28]
   1066a:	e9cd 7703 	strd	r7, r7, [sp, #12]
   1066e:	9f08      	ldr	r7, [sp, #32]
   10670:	f7ff b9bc 	b.w	f9ec <_vfiprintf_r+0x260>
   10674:	9819      	ldr	r0, [sp, #100]	; 0x64
   10676:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   10678:	3001      	adds	r0, #1
   1067a:	e545      	b.n	10108 <_vfiprintf_r+0x97c>
   1067c:	9b03      	ldr	r3, [sp, #12]
   1067e:	9307      	str	r3, [sp, #28]
   10680:	4620      	mov	r0, r4
   10682:	f7fe fafd 	bl	ec80 <strlen>
   10686:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
   1068a:	462f      	mov	r7, r5
   1068c:	9004      	str	r0, [sp, #16]
   1068e:	9303      	str	r3, [sp, #12]
   10690:	9508      	str	r5, [sp, #32]
   10692:	f7ff b9ab 	b.w	f9ec <_vfiprintf_r+0x260>
   10696:	ee18 1a10 	vmov	r1, s16
   1069a:	aa18      	add	r2, sp, #96	; 0x60
   1069c:	4658      	mov	r0, fp
   1069e:	f7ff f839 	bl	f714 <__sprint_r.part.0>
   106a2:	2800      	cmp	r0, #0
   106a4:	f43f aa36 	beq.w	fb14 <_vfiprintf_r+0x388>
   106a8:	f7ff ba4d 	b.w	fb46 <_vfiprintf_r+0x3ba>
   106ac:	9819      	ldr	r0, [sp, #100]	; 0x64
   106ae:	3001      	adds	r0, #1
   106b0:	e57a      	b.n	101a8 <_vfiprintf_r+0xa1c>
   106b2:	468c      	mov	ip, r1
   106b4:	e46e      	b.n	ff94 <_vfiprintf_r+0x808>
   106b6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   106b8:	07d9      	lsls	r1, r3, #31
   106ba:	d405      	bmi.n	106c8 <_vfiprintf_r+0xf3c>
   106bc:	89ab      	ldrh	r3, [r5, #12]
   106be:	059a      	lsls	r2, r3, #22
   106c0:	d402      	bmi.n	106c8 <_vfiprintf_r+0xf3c>
   106c2:	6da8      	ldr	r0, [r5, #88]	; 0x58
   106c4:	f7fc fb2e 	bl	cd24 <__retarget_lock_release_recursive>
   106c8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   106cc:	9305      	str	r3, [sp, #20]
   106ce:	f7ff ba49 	b.w	fb64 <_vfiprintf_r+0x3d8>
   106d2:	ee18 2a10 	vmov	r2, s16
   106d6:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   106da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   106de:	8193      	strh	r3, [r2, #12]
   106e0:	f7ff ba35 	b.w	fb4e <_vfiprintf_r+0x3c2>
   106e4:	9c07      	ldr	r4, [sp, #28]
   106e6:	9704      	str	r7, [sp, #16]
   106e8:	e746      	b.n	10578 <_vfiprintf_r+0xdec>
   106ea:	9b07      	ldr	r3, [sp, #28]
   106ec:	f898 1001 	ldrb.w	r1, [r8, #1]
   106f0:	f853 7b04 	ldr.w	r7, [r3], #4
   106f4:	9307      	str	r3, [sp, #28]
   106f6:	4690      	mov	r8, r2
   106f8:	ea47 77e7 	orr.w	r7, r7, r7, asr #31
   106fc:	f7ff b8b9 	b.w	f872 <_vfiprintf_r+0xe6>
   10700:	ee18 2a10 	vmov	r2, s16
   10704:	8993      	ldrh	r3, [r2, #12]
   10706:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1070a:	8193      	strh	r3, [r2, #12]
   1070c:	f7ff ba15 	b.w	fb3a <_vfiprintf_r+0x3ae>
   10710:	cccccccd 	.word	0xcccccccd
   10714:	20000acc 	.word	0x20000acc

00010718 <__sbprintf>:
   10718:	b570      	push	{r4, r5, r6, lr}
   1071a:	460c      	mov	r4, r1
   1071c:	8989      	ldrh	r1, [r1, #12]
   1071e:	f5ad 6d8e 	sub.w	sp, sp, #1136	; 0x470
   10722:	f021 0102 	bic.w	r1, r1, #2
   10726:	f8ad 1014 	strh.w	r1, [sp, #20]
   1072a:	6e61      	ldr	r1, [r4, #100]	; 0x64
   1072c:	911b      	str	r1, [sp, #108]	; 0x6c
   1072e:	89e1      	ldrh	r1, [r4, #14]
   10730:	f8ad 1016 	strh.w	r1, [sp, #22]
   10734:	69e1      	ldr	r1, [r4, #28]
   10736:	9109      	str	r1, [sp, #36]	; 0x24
   10738:	6a61      	ldr	r1, [r4, #36]	; 0x24
   1073a:	910b      	str	r1, [sp, #44]	; 0x2c
   1073c:	a91c      	add	r1, sp, #112	; 0x70
   1073e:	9102      	str	r1, [sp, #8]
   10740:	9106      	str	r1, [sp, #24]
   10742:	f44f 6180 	mov.w	r1, #1024	; 0x400
   10746:	4606      	mov	r6, r0
   10748:	9104      	str	r1, [sp, #16]
   1074a:	9107      	str	r1, [sp, #28]
   1074c:	a818      	add	r0, sp, #96	; 0x60
   1074e:	2100      	movs	r1, #0
   10750:	e9cd 3200 	strd	r3, r2, [sp]
   10754:	9108      	str	r1, [sp, #32]
   10756:	f7fc fadf 	bl	cd18 <__retarget_lock_init_recursive>
   1075a:	e9dd 3200 	ldrd	r3, r2, [sp]
   1075e:	a902      	add	r1, sp, #8
   10760:	4630      	mov	r0, r6
   10762:	f7ff f813 	bl	f78c <_vfiprintf_r>
   10766:	1e05      	subs	r5, r0, #0
   10768:	db07      	blt.n	1077a <__sbprintf+0x62>
   1076a:	a902      	add	r1, sp, #8
   1076c:	4630      	mov	r0, r6
   1076e:	f7fe f933 	bl	e9d8 <_fflush_r>
   10772:	2800      	cmp	r0, #0
   10774:	bf18      	it	ne
   10776:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
   1077a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
   1077e:	065b      	lsls	r3, r3, #25
   10780:	d503      	bpl.n	1078a <__sbprintf+0x72>
   10782:	89a3      	ldrh	r3, [r4, #12]
   10784:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   10788:	81a3      	strh	r3, [r4, #12]
   1078a:	9818      	ldr	r0, [sp, #96]	; 0x60
   1078c:	f7fc fac6 	bl	cd1c <__retarget_lock_close_recursive>
   10790:	4628      	mov	r0, r5
   10792:	f50d 6d8e 	add.w	sp, sp, #1136	; 0x470
   10796:	bd70      	pop	{r4, r5, r6, pc}

00010798 <__swbuf_r>:
   10798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1079a:	460d      	mov	r5, r1
   1079c:	4614      	mov	r4, r2
   1079e:	4606      	mov	r6, r0
   107a0:	b110      	cbz	r0, 107a8 <__swbuf_r+0x10>
   107a2:	6b43      	ldr	r3, [r0, #52]	; 0x34
   107a4:	2b00      	cmp	r3, #0
   107a6:	d04c      	beq.n	10842 <__swbuf_r+0xaa>
   107a8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   107ac:	69a3      	ldr	r3, [r4, #24]
   107ae:	60a3      	str	r3, [r4, #8]
   107b0:	0717      	lsls	r7, r2, #28
   107b2:	b290      	uxth	r0, r2
   107b4:	d51b      	bpl.n	107ee <__swbuf_r+0x56>
   107b6:	6923      	ldr	r3, [r4, #16]
   107b8:	b1cb      	cbz	r3, 107ee <__swbuf_r+0x56>
   107ba:	b2ed      	uxtb	r5, r5
   107bc:	0481      	lsls	r1, r0, #18
   107be:	462f      	mov	r7, r5
   107c0:	d522      	bpl.n	10808 <__swbuf_r+0x70>
   107c2:	6822      	ldr	r2, [r4, #0]
   107c4:	6961      	ldr	r1, [r4, #20]
   107c6:	1ad3      	subs	r3, r2, r3
   107c8:	4299      	cmp	r1, r3
   107ca:	dd29      	ble.n	10820 <__swbuf_r+0x88>
   107cc:	3301      	adds	r3, #1
   107ce:	68a1      	ldr	r1, [r4, #8]
   107d0:	3901      	subs	r1, #1
   107d2:	60a1      	str	r1, [r4, #8]
   107d4:	1c51      	adds	r1, r2, #1
   107d6:	6021      	str	r1, [r4, #0]
   107d8:	7015      	strb	r5, [r2, #0]
   107da:	6962      	ldr	r2, [r4, #20]
   107dc:	429a      	cmp	r2, r3
   107de:	d027      	beq.n	10830 <__swbuf_r+0x98>
   107e0:	89a3      	ldrh	r3, [r4, #12]
   107e2:	07db      	lsls	r3, r3, #31
   107e4:	d501      	bpl.n	107ea <__swbuf_r+0x52>
   107e6:	2d0a      	cmp	r5, #10
   107e8:	d022      	beq.n	10830 <__swbuf_r+0x98>
   107ea:	4638      	mov	r0, r7
   107ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   107ee:	4621      	mov	r1, r4
   107f0:	4630      	mov	r0, r6
   107f2:	f7fc fc13 	bl	d01c <__swsetup_r>
   107f6:	bb08      	cbnz	r0, 1083c <__swbuf_r+0xa4>
   107f8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   107fc:	6923      	ldr	r3, [r4, #16]
   107fe:	b290      	uxth	r0, r2
   10800:	b2ed      	uxtb	r5, r5
   10802:	0481      	lsls	r1, r0, #18
   10804:	462f      	mov	r7, r5
   10806:	d4dc      	bmi.n	107c2 <__swbuf_r+0x2a>
   10808:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   1080c:	81a2      	strh	r2, [r4, #12]
   1080e:	6e62      	ldr	r2, [r4, #100]	; 0x64
   10810:	6961      	ldr	r1, [r4, #20]
   10812:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
   10816:	6662      	str	r2, [r4, #100]	; 0x64
   10818:	6822      	ldr	r2, [r4, #0]
   1081a:	1ad3      	subs	r3, r2, r3
   1081c:	4299      	cmp	r1, r3
   1081e:	dcd5      	bgt.n	107cc <__swbuf_r+0x34>
   10820:	4621      	mov	r1, r4
   10822:	4630      	mov	r0, r6
   10824:	f7fe f8d8 	bl	e9d8 <_fflush_r>
   10828:	b940      	cbnz	r0, 1083c <__swbuf_r+0xa4>
   1082a:	6822      	ldr	r2, [r4, #0]
   1082c:	2301      	movs	r3, #1
   1082e:	e7ce      	b.n	107ce <__swbuf_r+0x36>
   10830:	4621      	mov	r1, r4
   10832:	4630      	mov	r0, r6
   10834:	f7fe f8d0 	bl	e9d8 <_fflush_r>
   10838:	2800      	cmp	r0, #0
   1083a:	d0d6      	beq.n	107ea <__swbuf_r+0x52>
   1083c:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   10840:	e7d3      	b.n	107ea <__swbuf_r+0x52>
   10842:	f7fe f989 	bl	eb58 <__sinit>
   10846:	e7af      	b.n	107a8 <__swbuf_r+0x10>

00010848 <__register_exitproc>:
   10848:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1084c:	f8df a07c 	ldr.w	sl, [pc, #124]	; 108cc <__register_exitproc+0x84>
   10850:	4606      	mov	r6, r0
   10852:	f8da 0000 	ldr.w	r0, [sl]
   10856:	4698      	mov	r8, r3
   10858:	460f      	mov	r7, r1
   1085a:	4691      	mov	r9, r2
   1085c:	f7fc fa60 	bl	cd20 <__retarget_lock_acquire_recursive>
   10860:	4b18      	ldr	r3, [pc, #96]	; (108c4 <__register_exitproc+0x7c>)
   10862:	681c      	ldr	r4, [r3, #0]
   10864:	b324      	cbz	r4, 108b0 <__register_exitproc+0x68>
   10866:	6865      	ldr	r5, [r4, #4]
   10868:	2d1f      	cmp	r5, #31
   1086a:	dc24      	bgt.n	108b6 <__register_exitproc+0x6e>
   1086c:	b95e      	cbnz	r6, 10886 <__register_exitproc+0x3e>
   1086e:	1c6b      	adds	r3, r5, #1
   10870:	3502      	adds	r5, #2
   10872:	f8da 0000 	ldr.w	r0, [sl]
   10876:	6063      	str	r3, [r4, #4]
   10878:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
   1087c:	f7fc fa52 	bl	cd24 <__retarget_lock_release_recursive>
   10880:	2000      	movs	r0, #0
   10882:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10886:	eb04 0185 	add.w	r1, r4, r5, lsl #2
   1088a:	2301      	movs	r3, #1
   1088c:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
   10890:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   10894:	40ab      	lsls	r3, r5
   10896:	431a      	orrs	r2, r3
   10898:	2e02      	cmp	r6, #2
   1089a:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   1089e:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
   108a2:	d1e4      	bne.n	1086e <__register_exitproc+0x26>
   108a4:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
   108a8:	431a      	orrs	r2, r3
   108aa:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
   108ae:	e7de      	b.n	1086e <__register_exitproc+0x26>
   108b0:	4c05      	ldr	r4, [pc, #20]	; (108c8 <__register_exitproc+0x80>)
   108b2:	601c      	str	r4, [r3, #0]
   108b4:	e7d7      	b.n	10866 <__register_exitproc+0x1e>
   108b6:	f8da 0000 	ldr.w	r0, [sl]
   108ba:	f7fc fa33 	bl	cd24 <__retarget_lock_release_recursive>
   108be:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   108c2:	e7de      	b.n	10882 <__register_exitproc+0x3a>
   108c4:	20002ce4 	.word	0x20002ce4
   108c8:	20002ce8 	.word	0x20002ce8
   108cc:	20002160 	.word	0x20002160

000108d0 <__ascii_mbtowc>:
   108d0:	b082      	sub	sp, #8
   108d2:	b149      	cbz	r1, 108e8 <__ascii_mbtowc+0x18>
   108d4:	b15a      	cbz	r2, 108ee <__ascii_mbtowc+0x1e>
   108d6:	b16b      	cbz	r3, 108f4 <__ascii_mbtowc+0x24>
   108d8:	7813      	ldrb	r3, [r2, #0]
   108da:	600b      	str	r3, [r1, #0]
   108dc:	7812      	ldrb	r2, [r2, #0]
   108de:	1e10      	subs	r0, r2, #0
   108e0:	bf18      	it	ne
   108e2:	2001      	movne	r0, #1
   108e4:	b002      	add	sp, #8
   108e6:	4770      	bx	lr
   108e8:	a901      	add	r1, sp, #4
   108ea:	2a00      	cmp	r2, #0
   108ec:	d1f3      	bne.n	108d6 <__ascii_mbtowc+0x6>
   108ee:	4610      	mov	r0, r2
   108f0:	b002      	add	sp, #8
   108f2:	4770      	bx	lr
   108f4:	f06f 0001 	mvn.w	r0, #1
   108f8:	e7f4      	b.n	108e4 <__ascii_mbtowc+0x14>
   108fa:	bf00      	nop

000108fc <_fclose_r>:
   108fc:	b570      	push	{r4, r5, r6, lr}
   108fe:	2900      	cmp	r1, #0
   10900:	d04b      	beq.n	1099a <_fclose_r+0x9e>
   10902:	4606      	mov	r6, r0
   10904:	460c      	mov	r4, r1
   10906:	b110      	cbz	r0, 1090e <_fclose_r+0x12>
   10908:	6b43      	ldr	r3, [r0, #52]	; 0x34
   1090a:	2b00      	cmp	r3, #0
   1090c:	d048      	beq.n	109a0 <_fclose_r+0xa4>
   1090e:	6e63      	ldr	r3, [r4, #100]	; 0x64
   10910:	07d8      	lsls	r0, r3, #31
   10912:	d534      	bpl.n	1097e <_fclose_r+0x82>
   10914:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   10918:	2b00      	cmp	r3, #0
   1091a:	d03e      	beq.n	1099a <_fclose_r+0x9e>
   1091c:	4621      	mov	r1, r4
   1091e:	4630      	mov	r0, r6
   10920:	f7fd ffc2 	bl	e8a8 <__sflush_r>
   10924:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   10926:	4605      	mov	r5, r0
   10928:	b133      	cbz	r3, 10938 <_fclose_r+0x3c>
   1092a:	69e1      	ldr	r1, [r4, #28]
   1092c:	4630      	mov	r0, r6
   1092e:	4798      	blx	r3
   10930:	2800      	cmp	r0, #0
   10932:	bfb8      	it	lt
   10934:	f04f 35ff 	movlt.w	r5, #4294967295	; 0xffffffff
   10938:	89a3      	ldrh	r3, [r4, #12]
   1093a:	061a      	lsls	r2, r3, #24
   1093c:	d43c      	bmi.n	109b8 <_fclose_r+0xbc>
   1093e:	6b21      	ldr	r1, [r4, #48]	; 0x30
   10940:	b141      	cbz	r1, 10954 <_fclose_r+0x58>
   10942:	f104 0340 	add.w	r3, r4, #64	; 0x40
   10946:	4299      	cmp	r1, r3
   10948:	d002      	beq.n	10950 <_fclose_r+0x54>
   1094a:	4630      	mov	r0, r6
   1094c:	f7fe fc80 	bl	f250 <_free_r>
   10950:	2300      	movs	r3, #0
   10952:	6323      	str	r3, [r4, #48]	; 0x30
   10954:	6c61      	ldr	r1, [r4, #68]	; 0x44
   10956:	b121      	cbz	r1, 10962 <_fclose_r+0x66>
   10958:	4630      	mov	r0, r6
   1095a:	f7fe fc79 	bl	f250 <_free_r>
   1095e:	2300      	movs	r3, #0
   10960:	6463      	str	r3, [r4, #68]	; 0x44
   10962:	f7fe f917 	bl	eb94 <__sfp_lock_acquire>
   10966:	6e63      	ldr	r3, [r4, #100]	; 0x64
   10968:	2200      	movs	r2, #0
   1096a:	07db      	lsls	r3, r3, #31
   1096c:	81a2      	strh	r2, [r4, #12]
   1096e:	d51f      	bpl.n	109b0 <_fclose_r+0xb4>
   10970:	6da0      	ldr	r0, [r4, #88]	; 0x58
   10972:	f7fc f9d3 	bl	cd1c <__retarget_lock_close_recursive>
   10976:	f7fe f913 	bl	eba0 <__sfp_lock_release>
   1097a:	4628      	mov	r0, r5
   1097c:	bd70      	pop	{r4, r5, r6, pc}
   1097e:	89a3      	ldrh	r3, [r4, #12]
   10980:	0599      	lsls	r1, r3, #22
   10982:	d4cb      	bmi.n	1091c <_fclose_r+0x20>
   10984:	6da0      	ldr	r0, [r4, #88]	; 0x58
   10986:	f7fc f9cb 	bl	cd20 <__retarget_lock_acquire_recursive>
   1098a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1098e:	2b00      	cmp	r3, #0
   10990:	d1c4      	bne.n	1091c <_fclose_r+0x20>
   10992:	6e65      	ldr	r5, [r4, #100]	; 0x64
   10994:	f015 0501 	ands.w	r5, r5, #1
   10998:	d005      	beq.n	109a6 <_fclose_r+0xaa>
   1099a:	2500      	movs	r5, #0
   1099c:	4628      	mov	r0, r5
   1099e:	bd70      	pop	{r4, r5, r6, pc}
   109a0:	f7fe f8da 	bl	eb58 <__sinit>
   109a4:	e7b3      	b.n	1090e <_fclose_r+0x12>
   109a6:	6da0      	ldr	r0, [r4, #88]	; 0x58
   109a8:	f7fc f9bc 	bl	cd24 <__retarget_lock_release_recursive>
   109ac:	4628      	mov	r0, r5
   109ae:	bd70      	pop	{r4, r5, r6, pc}
   109b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
   109b2:	f7fc f9b7 	bl	cd24 <__retarget_lock_release_recursive>
   109b6:	e7db      	b.n	10970 <_fclose_r+0x74>
   109b8:	6921      	ldr	r1, [r4, #16]
   109ba:	4630      	mov	r0, r6
   109bc:	f7fe fc48 	bl	f250 <_free_r>
   109c0:	e7bd      	b.n	1093e <_fclose_r+0x42>
   109c2:	bf00      	nop

000109c4 <_wcsnrtombs_l>:
   109c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109c8:	b08b      	sub	sp, #44	; 0x2c
   109ca:	e9dd 8a15 	ldrd	r8, sl, [sp, #84]	; 0x54
   109ce:	9f14      	ldr	r7, [sp, #80]	; 0x50
   109d0:	9103      	str	r1, [sp, #12]
   109d2:	4681      	mov	r9, r0
   109d4:	9205      	str	r2, [sp, #20]
   109d6:	461e      	mov	r6, r3
   109d8:	f1b8 0f00 	cmp.w	r8, #0
   109dc:	d05c      	beq.n	10a98 <_wcsnrtombs_l+0xd4>
   109de:	9b03      	ldr	r3, [sp, #12]
   109e0:	2b00      	cmp	r3, #0
   109e2:	d05e      	beq.n	10aa2 <_wcsnrtombs_l+0xde>
   109e4:	9b05      	ldr	r3, [sp, #20]
   109e6:	681d      	ldr	r5, [r3, #0]
   109e8:	2f00      	cmp	r7, #0
   109ea:	d06a      	beq.n	10ac2 <_wcsnrtombs_l+0xfe>
   109ec:	1e74      	subs	r4, r6, #1
   109ee:	b34e      	cbz	r6, 10a44 <_wcsnrtombs_l+0x80>
   109f0:	9b03      	ldr	r3, [sp, #12]
   109f2:	9304      	str	r3, [sp, #16]
   109f4:	3d04      	subs	r5, #4
   109f6:	2600      	movs	r6, #0
   109f8:	9501      	str	r5, [sp, #4]
   109fa:	e00b      	b.n	10a14 <_wcsnrtombs_l+0x50>
   109fc:	9b03      	ldr	r3, [sp, #12]
   109fe:	bb2b      	cbnz	r3, 10a4c <_wcsnrtombs_l+0x88>
   10a00:	9b01      	ldr	r3, [sp, #4]
   10a02:	681a      	ldr	r2, [r3, #0]
   10a04:	2a00      	cmp	r2, #0
   10a06:	d03a      	beq.n	10a7e <_wcsnrtombs_l+0xba>
   10a08:	45bc      	cmp	ip, r7
   10a0a:	d25c      	bcs.n	10ac6 <_wcsnrtombs_l+0x102>
   10a0c:	3c01      	subs	r4, #1
   10a0e:	1c63      	adds	r3, r4, #1
   10a10:	4666      	mov	r6, ip
   10a12:	d017      	beq.n	10a44 <_wcsnrtombs_l+0x80>
   10a14:	f8d8 3000 	ldr.w	r3, [r8]
   10a18:	9302      	str	r3, [sp, #8]
   10a1a:	9b01      	ldr	r3, [sp, #4]
   10a1c:	f8da 50e0 	ldr.w	r5, [sl, #224]	; 0xe0
   10a20:	f853 2f04 	ldr.w	r2, [r3, #4]!
   10a24:	9301      	str	r3, [sp, #4]
   10a26:	a907      	add	r1, sp, #28
   10a28:	4643      	mov	r3, r8
   10a2a:	4648      	mov	r0, r9
   10a2c:	f8d8 b004 	ldr.w	fp, [r8, #4]
   10a30:	47a8      	blx	r5
   10a32:	1c42      	adds	r2, r0, #1
   10a34:	d03a      	beq.n	10aac <_wcsnrtombs_l+0xe8>
   10a36:	eb00 0c06 	add.w	ip, r0, r6
   10a3a:	45bc      	cmp	ip, r7
   10a3c:	d9de      	bls.n	109fc <_wcsnrtombs_l+0x38>
   10a3e:	9b02      	ldr	r3, [sp, #8]
   10a40:	e9c8 3b00 	strd	r3, fp, [r8]
   10a44:	4630      	mov	r0, r6
   10a46:	b00b      	add	sp, #44	; 0x2c
   10a48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a4c:	2800      	cmp	r0, #0
   10a4e:	dd0e      	ble.n	10a6e <_wcsnrtombs_l+0xaa>
   10a50:	9b04      	ldr	r3, [sp, #16]
   10a52:	9d01      	ldr	r5, [sp, #4]
   10a54:	4418      	add	r0, r3
   10a56:	1e5a      	subs	r2, r3, #1
   10a58:	a907      	add	r1, sp, #28
   10a5a:	f100 3eff 	add.w	lr, r0, #4294967295	; 0xffffffff
   10a5e:	f811 3b01 	ldrb.w	r3, [r1], #1
   10a62:	f802 3f01 	strb.w	r3, [r2, #1]!
   10a66:	4572      	cmp	r2, lr
   10a68:	d1f9      	bne.n	10a5e <_wcsnrtombs_l+0x9a>
   10a6a:	9501      	str	r5, [sp, #4]
   10a6c:	9004      	str	r0, [sp, #16]
   10a6e:	9b05      	ldr	r3, [sp, #20]
   10a70:	681a      	ldr	r2, [r3, #0]
   10a72:	3204      	adds	r2, #4
   10a74:	601a      	str	r2, [r3, #0]
   10a76:	9b01      	ldr	r3, [sp, #4]
   10a78:	681a      	ldr	r2, [r3, #0]
   10a7a:	2a00      	cmp	r2, #0
   10a7c:	d1c4      	bne.n	10a08 <_wcsnrtombs_l+0x44>
   10a7e:	9b03      	ldr	r3, [sp, #12]
   10a80:	b10b      	cbz	r3, 10a86 <_wcsnrtombs_l+0xc2>
   10a82:	9b05      	ldr	r3, [sp, #20]
   10a84:	601a      	str	r2, [r3, #0]
   10a86:	f10c 36ff 	add.w	r6, ip, #4294967295	; 0xffffffff
   10a8a:	2200      	movs	r2, #0
   10a8c:	4630      	mov	r0, r6
   10a8e:	f8c8 2000 	str.w	r2, [r8]
   10a92:	b00b      	add	sp, #44	; 0x2c
   10a94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a98:	9b03      	ldr	r3, [sp, #12]
   10a9a:	f500 7886 	add.w	r8, r0, #268	; 0x10c
   10a9e:	2b00      	cmp	r3, #0
   10aa0:	d1a0      	bne.n	109e4 <_wcsnrtombs_l+0x20>
   10aa2:	9b05      	ldr	r3, [sp, #20]
   10aa4:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   10aa8:	681d      	ldr	r5, [r3, #0]
   10aaa:	e79f      	b.n	109ec <_wcsnrtombs_l+0x28>
   10aac:	4606      	mov	r6, r0
   10aae:	218a      	movs	r1, #138	; 0x8a
   10ab0:	2200      	movs	r2, #0
   10ab2:	4630      	mov	r0, r6
   10ab4:	f8c9 1000 	str.w	r1, [r9]
   10ab8:	f8c8 2000 	str.w	r2, [r8]
   10abc:	b00b      	add	sp, #44	; 0x2c
   10abe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ac2:	463e      	mov	r6, r7
   10ac4:	e7be      	b.n	10a44 <_wcsnrtombs_l+0x80>
   10ac6:	4666      	mov	r6, ip
   10ac8:	e7bc      	b.n	10a44 <_wcsnrtombs_l+0x80>
   10aca:	bf00      	nop

00010acc <_wcsnrtombs_r>:
   10acc:	b510      	push	{r4, lr}
   10ace:	b084      	sub	sp, #16
   10ad0:	4c05      	ldr	r4, [pc, #20]	; (10ae8 <_wcsnrtombs_r+0x1c>)
   10ad2:	9806      	ldr	r0, [sp, #24]
   10ad4:	9000      	str	r0, [sp, #0]
   10ad6:	9807      	ldr	r0, [sp, #28]
   10ad8:	9001      	str	r0, [sp, #4]
   10ada:	4804      	ldr	r0, [pc, #16]	; (10aec <_wcsnrtombs_r+0x20>)
   10adc:	6800      	ldr	r0, [r0, #0]
   10ade:	9402      	str	r4, [sp, #8]
   10ae0:	f7ff ff70 	bl	109c4 <_wcsnrtombs_l>
   10ae4:	b004      	add	sp, #16
   10ae6:	bd10      	pop	{r4, pc}
   10ae8:	2000216c 	.word	0x2000216c
   10aec:	200026f4 	.word	0x200026f4

00010af0 <_lseek_r>:
   10af0:	b538      	push	{r3, r4, r5, lr}
   10af2:	460c      	mov	r4, r1
   10af4:	4d08      	ldr	r5, [pc, #32]	; (10b18 <_lseek_r+0x28>)
   10af6:	4684      	mov	ip, r0
   10af8:	4611      	mov	r1, r2
   10afa:	4620      	mov	r0, r4
   10afc:	461a      	mov	r2, r3
   10afe:	2300      	movs	r3, #0
   10b00:	602b      	str	r3, [r5, #0]
   10b02:	4664      	mov	r4, ip
   10b04:	f7ef ff4e 	bl	9a4 <_lseek>
   10b08:	1c43      	adds	r3, r0, #1
   10b0a:	d000      	beq.n	10b0e <_lseek_r+0x1e>
   10b0c:	bd38      	pop	{r3, r4, r5, pc}
   10b0e:	682b      	ldr	r3, [r5, #0]
   10b10:	2b00      	cmp	r3, #0
   10b12:	d0fb      	beq.n	10b0c <_lseek_r+0x1c>
   10b14:	6023      	str	r3, [r4, #0]
   10b16:	bd38      	pop	{r3, r4, r5, pc}
   10b18:	20003004 	.word	0x20003004

00010b1c <_read_r>:
   10b1c:	b538      	push	{r3, r4, r5, lr}
   10b1e:	460c      	mov	r4, r1
   10b20:	4d08      	ldr	r5, [pc, #32]	; (10b44 <_read_r+0x28>)
   10b22:	4684      	mov	ip, r0
   10b24:	4611      	mov	r1, r2
   10b26:	4620      	mov	r0, r4
   10b28:	461a      	mov	r2, r3
   10b2a:	2300      	movs	r3, #0
   10b2c:	602b      	str	r3, [r5, #0]
   10b2e:	4664      	mov	r4, ip
   10b30:	f7ef ff2a 	bl	988 <_read>
   10b34:	1c43      	adds	r3, r0, #1
   10b36:	d000      	beq.n	10b3a <_read_r+0x1e>
   10b38:	bd38      	pop	{r3, r4, r5, pc}
   10b3a:	682b      	ldr	r3, [r5, #0]
   10b3c:	2b00      	cmp	r3, #0
   10b3e:	d0fb      	beq.n	10b38 <_read_r+0x1c>
   10b40:	6023      	str	r3, [r4, #0]
   10b42:	bd38      	pop	{r3, r4, r5, pc}
   10b44:	20003004 	.word	0x20003004

00010b48 <__fputwc>:
   10b48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   10b4c:	b082      	sub	sp, #8
   10b4e:	4682      	mov	sl, r0
   10b50:	4688      	mov	r8, r1
   10b52:	4614      	mov	r4, r2
   10b54:	f7fc f8e8 	bl	cd28 <__locale_mb_cur_max>
   10b58:	2801      	cmp	r0, #1
   10b5a:	d103      	bne.n	10b64 <__fputwc+0x1c>
   10b5c:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
   10b60:	2bfe      	cmp	r3, #254	; 0xfe
   10b62:	d936      	bls.n	10bd2 <__fputwc+0x8a>
   10b64:	f10d 0904 	add.w	r9, sp, #4
   10b68:	4642      	mov	r2, r8
   10b6a:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   10b6e:	4649      	mov	r1, r9
   10b70:	4650      	mov	r0, sl
   10b72:	f7fc f887 	bl	cc84 <_wcrtomb_r>
   10b76:	1c42      	adds	r2, r0, #1
   10b78:	4606      	mov	r6, r0
   10b7a:	d032      	beq.n	10be2 <__fputwc+0x9a>
   10b7c:	b320      	cbz	r0, 10bc8 <__fputwc+0x80>
   10b7e:	f89d c004 	ldrb.w	ip, [sp, #4]
   10b82:	2500      	movs	r5, #0
   10b84:	e009      	b.n	10b9a <__fputwc+0x52>
   10b86:	6823      	ldr	r3, [r4, #0]
   10b88:	1c5a      	adds	r2, r3, #1
   10b8a:	6022      	str	r2, [r4, #0]
   10b8c:	f883 c000 	strb.w	ip, [r3]
   10b90:	3501      	adds	r5, #1
   10b92:	42b5      	cmp	r5, r6
   10b94:	d218      	bcs.n	10bc8 <__fputwc+0x80>
   10b96:	f819 cf01 	ldrb.w	ip, [r9, #1]!
   10b9a:	68a3      	ldr	r3, [r4, #8]
   10b9c:	3b01      	subs	r3, #1
   10b9e:	2b00      	cmp	r3, #0
   10ba0:	60a3      	str	r3, [r4, #8]
   10ba2:	daf0      	bge.n	10b86 <__fputwc+0x3e>
   10ba4:	69a7      	ldr	r7, [r4, #24]
   10ba6:	42bb      	cmp	r3, r7
   10ba8:	4661      	mov	r1, ip
   10baa:	4622      	mov	r2, r4
   10bac:	4650      	mov	r0, sl
   10bae:	db02      	blt.n	10bb6 <__fputwc+0x6e>
   10bb0:	f1bc 0f0a 	cmp.w	ip, #10
   10bb4:	d1e7      	bne.n	10b86 <__fputwc+0x3e>
   10bb6:	f7ff fdef 	bl	10798 <__swbuf_r>
   10bba:	1c43      	adds	r3, r0, #1
   10bbc:	d1e8      	bne.n	10b90 <__fputwc+0x48>
   10bbe:	4606      	mov	r6, r0
   10bc0:	4630      	mov	r0, r6
   10bc2:	b002      	add	sp, #8
   10bc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10bc8:	4646      	mov	r6, r8
   10bca:	4630      	mov	r0, r6
   10bcc:	b002      	add	sp, #8
   10bce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10bd2:	fa5f fc88 	uxtb.w	ip, r8
   10bd6:	f88d c004 	strb.w	ip, [sp, #4]
   10bda:	4606      	mov	r6, r0
   10bdc:	f10d 0904 	add.w	r9, sp, #4
   10be0:	e7cf      	b.n	10b82 <__fputwc+0x3a>
   10be2:	89a3      	ldrh	r3, [r4, #12]
   10be4:	4630      	mov	r0, r6
   10be6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   10bea:	81a3      	strh	r3, [r4, #12]
   10bec:	b002      	add	sp, #8
   10bee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10bf2:	bf00      	nop

00010bf4 <_fputwc_r>:
   10bf4:	b530      	push	{r4, r5, lr}
   10bf6:	6e53      	ldr	r3, [r2, #100]	; 0x64
   10bf8:	f013 0f01 	tst.w	r3, #1
   10bfc:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   10c00:	4614      	mov	r4, r2
   10c02:	b083      	sub	sp, #12
   10c04:	4605      	mov	r5, r0
   10c06:	b29a      	uxth	r2, r3
   10c08:	d101      	bne.n	10c0e <_fputwc_r+0x1a>
   10c0a:	0598      	lsls	r0, r3, #22
   10c0c:	d51c      	bpl.n	10c48 <_fputwc_r+0x54>
   10c0e:	0490      	lsls	r0, r2, #18
   10c10:	d406      	bmi.n	10c20 <_fputwc_r+0x2c>
   10c12:	6e62      	ldr	r2, [r4, #100]	; 0x64
   10c14:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   10c18:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   10c1c:	81a3      	strh	r3, [r4, #12]
   10c1e:	6662      	str	r2, [r4, #100]	; 0x64
   10c20:	4622      	mov	r2, r4
   10c22:	4628      	mov	r0, r5
   10c24:	f7ff ff90 	bl	10b48 <__fputwc>
   10c28:	6e63      	ldr	r3, [r4, #100]	; 0x64
   10c2a:	07da      	lsls	r2, r3, #31
   10c2c:	4605      	mov	r5, r0
   10c2e:	d402      	bmi.n	10c36 <_fputwc_r+0x42>
   10c30:	89a3      	ldrh	r3, [r4, #12]
   10c32:	059b      	lsls	r3, r3, #22
   10c34:	d502      	bpl.n	10c3c <_fputwc_r+0x48>
   10c36:	4628      	mov	r0, r5
   10c38:	b003      	add	sp, #12
   10c3a:	bd30      	pop	{r4, r5, pc}
   10c3c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   10c3e:	f7fc f871 	bl	cd24 <__retarget_lock_release_recursive>
   10c42:	4628      	mov	r0, r5
   10c44:	b003      	add	sp, #12
   10c46:	bd30      	pop	{r4, r5, pc}
   10c48:	6da0      	ldr	r0, [r4, #88]	; 0x58
   10c4a:	9101      	str	r1, [sp, #4]
   10c4c:	f7fc f868 	bl	cd20 <__retarget_lock_acquire_recursive>
   10c50:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   10c54:	9901      	ldr	r1, [sp, #4]
   10c56:	b29a      	uxth	r2, r3
   10c58:	e7d9      	b.n	10c0e <_fputwc_r+0x1a>
   10c5a:	bf00      	nop
   10c5c:	0000      	movs	r0, r0
	...

00010c60 <___reboot_Teensyduino__veneer>:
   10c60:	f85f f000 	ldr.w	pc, [pc]	; 10c64 <___reboot_Teensyduino__veneer+0x4>
   10c64:	60001d8d 	.word	0x60001d8d

00010c68 <___init_veneer>:
   10c68:	f85f f000 	ldr.w	pc, [pc]	; 10c6c <___init_veneer+0x4>
   10c6c:	60001e35 	.word	0x60001e35

Disassembly of section .fini:

00010c70 <_fini>:
   10c70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   10c72:	bf00      	nop
