
/home/happik/.cache/arduino/sketches/6FEA8C1578FFDE30A500D7DB9735B8EA/baseline.ino.elf:     file format elf32-littlearm


Disassembly of section .text.code:

60001400 <memory_copy>:
	if (dest == src) return;
	do {
		*dest++ = *src++;
	} while (dest < dest_end);
#else
	asm volatile(
60001400:	4281      	cmp	r1, r0
60001402:	d005      	beq.n	60001410 <memory_copy+0x10>
60001404:	f851 3b04 	ldr.w	r3, [r1], #4
60001408:	f840 3b04 	str.w	r3, [r0], #4
6000140c:	4282      	cmp	r2, r0
6000140e:	d8f9      	bhi.n	60001404 <memory_copy+0x4>
	"	cmp	%[end], %[dest]		\n"
	"	bhi.n	1b			\n"
	"2:					\n"
	: [dest] "+r" (dest), [src] "+r" (src) : [end] "r" (dest_end) : "r3", "memory");
#endif
}
60001410:	4770      	bx	lr
60001412:	bf00      	nop

60001414 <memory_clear.constprop.0>:
#if 0
	while (dest < dest_end) {
		*dest++ = 0;
	}
#else
	asm volatile(
60001414:	4a04      	ldr	r2, [pc, #16]	; (60001428 <memory_clear.constprop.0+0x14>)
60001416:	4905      	ldr	r1, [pc, #20]	; (6000142c <memory_clear.constprop.0+0x18>)
60001418:	f04f 0300 	mov.w	r3, #0
6000141c:	f842 3b04 	str.w	r3, [r2], #4
60001420:	4291      	cmp	r1, r2
60001422:	d8fb      	bhi.n	6000141c <memory_clear.constprop.0+0x8>
	"1:	str.w	r3, [%[dest]], #4	\n"
	"	cmp	%[end], %[dest]		\n"
	"	bhi.n	1b			\n"
	: [dest] "+r" (dest) : [end] "r" (dest_end) : "r3", "memory");
#endif
}
60001424:	4770      	bx	lr
60001426:	bf00      	nop
60001428:	200036c0 	.word	0x200036c0
6000142c:	20003ce0 	.word	0x20003ce0

60001430 <ResetHandler2>:
{
60001430:	e92d 4888 	stmdb	sp!, {r3, r7, fp, lr}
	__asm__ volatile("dsb":::"memory");
60001434:	f3bf 8f4f 	dsb	sy
	asm volatile("nop");
60001438:	bf00      	nop
	asm volatile("nop");
6000143a:	bf00      	nop
	asm volatile("nop");
6000143c:	bf00      	nop
	asm volatile("nop");
6000143e:	bf00      	nop
	startup_early_hook(); // must be in FLASHMEM, as ITCM is not yet initialized!
60001440:	f000 f918 	bl	60001674 <startup_default_early_hook>
	PMU_MISC0_SET = 1<<3; //Use bandgap-based bias currents for best performance (Page 1175)
60001444:	4b68      	ldr	r3, [pc, #416]	; (600015e8 <ResetHandler2+0x1b8>)
60001446:	2208      	movs	r2, #8
60001448:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
	asm volatile("nop");
6000144c:	bf00      	nop
	asm volatile("nop");
6000144e:	bf00      	nop
	asm volatile("nop");
60001450:	bf00      	nop
	asm volatile("nop");
60001452:	bf00      	nop
	asm volatile("nop");
60001454:	bf00      	nop
	asm volatile("nop");
60001456:	bf00      	nop
	asm volatile("nop");
60001458:	bf00      	nop
	asm volatile("nop");
6000145a:	bf00      	nop
	asm volatile("nop");
6000145c:	bf00      	nop
	asm volatile("nop");
6000145e:	bf00      	nop
	asm volatile("nop");
60001460:	bf00      	nop
	asm volatile("nop");
60001462:	bf00      	nop
	asm volatile("nop");
60001464:	bf00      	nop
	asm volatile("nop");
60001466:	bf00      	nop
	asm volatile("nop");
60001468:	bf00      	nop
	asm volatile("nop");
6000146a:	bf00      	nop
	memory_copy(&_stext, &_stextload, &_etext);
6000146c:	4a5f      	ldr	r2, [pc, #380]	; (600015ec <ResetHandler2+0x1bc>)
6000146e:	4960      	ldr	r1, [pc, #384]	; (600015f0 <ResetHandler2+0x1c0>)
60001470:	4860      	ldr	r0, [pc, #384]	; (600015f4 <ResetHandler2+0x1c4>)
60001472:	f7ff ffc5 	bl	60001400 <memory_copy>
	memory_copy(&_sdata, &_sdataload, &_edata);
60001476:	4a60      	ldr	r2, [pc, #384]	; (600015f8 <ResetHandler2+0x1c8>)
60001478:	4960      	ldr	r1, [pc, #384]	; (600015fc <ResetHandler2+0x1cc>)
6000147a:	4861      	ldr	r0, [pc, #388]	; (60001600 <ResetHandler2+0x1d0>)
6000147c:	f7ff ffc0 	bl	60001400 <memory_copy>
	memory_clear(&_sbss, &_ebss);
60001480:	4c60      	ldr	r4, [pc, #384]	; (60001604 <ResetHandler2+0x1d4>)
60001482:	f7ff ffc7 	bl	60001414 <memory_clear.constprop.0>
	SCB_CPACR = 0x00F00000;
60001486:	f44f 0070 	mov.w	r0, #15728640	; 0xf00000
6000148a:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
	for (i=0; i < NVIC_NUM_INTERRUPTS + 16; i++) _VectorsRam[i] = &unused_interrupt_vector;
6000148e:	2300      	movs	r3, #0
60001490:	4a5d      	ldr	r2, [pc, #372]	; (60001608 <ResetHandler2+0x1d8>)
	SCB_CPACR = 0x00F00000;
60001492:	f8c1 0d88 	str.w	r0, [r1, #3464]	; 0xd88
	for (i=0; i < NVIC_NUM_INTERRUPTS + 16; i++) _VectorsRam[i] = &unused_interrupt_vector;
60001496:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
6000149a:	3301      	adds	r3, #1
6000149c:	2bb0      	cmp	r3, #176	; 0xb0
6000149e:	d1fa      	bne.n	60001496 <ResetHandler2+0x66>
600014a0:	4b5a      	ldr	r3, [pc, #360]	; (6000160c <ResetHandler2+0x1dc>)
	for (i=0; i < NVIC_NUM_INTERRUPTS; i++) NVIC_SET_PRIORITY(i, 128);
600014a2:	2180      	movs	r1, #128	; 0x80
600014a4:	4a5a      	ldr	r2, [pc, #360]	; (60001610 <ResetHandler2+0x1e0>)
600014a6:	f803 1b01 	strb.w	r1, [r3], #1
600014aa:	4293      	cmp	r3, r2
600014ac:	d1fb      	bne.n	600014a6 <ResetHandler2+0x76>
	SCB_VTOR = (uint32_t)_VectorsRam;
600014ae:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
	CCM_ANALOG_PFD_528_SET = (1 << 31) | (1 << 23) | (1 << 15) | (1 << 7);
600014b2:	4e4d      	ldr	r6, [pc, #308]	; (600015e8 <ResetHandler2+0x1b8>)
600014b4:	f04f 3980 	mov.w	r9, #2155905152	; 0x80808080
	CCM_ANALOG_PFD_528 = 0x2018101B; // PFD0:352, PFD1:594, PFD2:396, PFD3:297 MHz 	
600014b8:	f8df b184 	ldr.w	fp, [pc, #388]	; 60001640 <ResetHandler2+0x210>
	CCM_ANALOG_PFD_480 = 0x13110D0C; // PFD0:720, PFD1:664, PFD2:508, PFD3:454 MHz
600014bc:	f8df a184 	ldr.w	sl, [pc, #388]	; 60001644 <ResetHandler2+0x214>
	IOMUXC_GPR_GPR26 = 0xFFFFFFFF;
600014c0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
	SCB_VTOR = (uint32_t)_VectorsRam;
600014c4:	f8c5 4d08 	str.w	r4, [r5, #3336]	; 0xd08
	SYST_CVR = 0;
600014c8:	2700      	movs	r7, #0
	CCM_ANALOG_PFD_528_SET = (1 << 31) | (1 << 23) | (1 << 15) | (1 << 7);
600014ca:	f8c6 9104 	str.w	r9, [r6, #260]	; 0x104
	CCM_ANALOG_PFD_528 = 0x2018101B; // PFD0:352, PFD1:594, PFD2:396, PFD3:297 MHz 	
600014ce:	f8c6 b100 	str.w	fp, [r6, #256]	; 0x100
	CCM_ANALOG_PFD_480_SET = (1 << 31) | (1 << 23) | (1 << 15) | (1 << 7);	
600014d2:	f8c6 90f4 	str.w	r9, [r6, #244]	; 0xf4
	CCM_ANALOG_PFD_480 = 0x13110D0C; // PFD0:720, PFD1:664, PFD2:508, PFD3:454 MHz
600014d6:	f8c6 a0f0 	str.w	sl, [r6, #240]	; 0xf0
	SCB_SHCSR |= SCB_SHCSR_MEMFAULTENA | SCB_SHCSR_BUSFAULTENA | SCB_SHCSR_USGFAULTENA;
600014da:	f8d5 3d24 	ldr.w	r3, [r5, #3364]	; 0xd24
	CCM_CSCMR1 = (CCM_CSCMR1 & ~CCM_CSCMR1_PERCLK_PODF(0x3F)) | CCM_CSCMR1_PERCLK_CLK_SEL;
600014de:	f8df 8168 	ldr.w	r8, [pc, #360]	; 60001648 <ResetHandler2+0x218>
	SCB_SHCSR |= SCB_SHCSR_MEMFAULTENA | SCB_SHCSR_BUSFAULTENA | SCB_SHCSR_USGFAULTENA;
600014e2:	f443 23e0 	orr.w	r3, r3, #458752	; 0x70000
	IOMUXC_GPR_GPR26 = 0xFFFFFFFF;
600014e6:	4a4b      	ldr	r2, [pc, #300]	; (60001614 <ResetHandler2+0x1e4>)
	SCB_SHCSR |= SCB_SHCSR_MEMFAULTENA | SCB_SHCSR_BUSFAULTENA | SCB_SHCSR_USGFAULTENA;
600014e8:	f8c5 3d24 	str.w	r3, [r5, #3364]	; 0xd24
	CCM_CSCMR1 = (CCM_CSCMR1 & ~CCM_CSCMR1_PERCLK_PODF(0x3F)) | CCM_CSCMR1_PERCLK_CLK_SEL;
600014ec:	f8d8 301c 	ldr.w	r3, [r8, #28]
600014f0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
600014f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
600014f8:	f8c8 301c 	str.w	r3, [r8, #28]
	CCM_CSCDR1 = (CCM_CSCDR1 & ~CCM_CSCDR1_UART_CLK_PODF(0x3F)) | CCM_CSCDR1_UART_CLK_SEL;
600014fc:	f8d8 3024 	ldr.w	r3, [r8, #36]	; 0x24
60001500:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
60001504:	f043 0340 	orr.w	r3, r3, #64	; 0x40
60001508:	f8c8 3024 	str.w	r3, [r8, #36]	; 0x24
	IOMUXC_GPR_GPR26 = 0xFFFFFFFF;
6000150c:	6691      	str	r1, [r2, #104]	; 0x68
	IOMUXC_GPR_GPR27 = 0xFFFFFFFF;
6000150e:	66d1      	str	r1, [r2, #108]	; 0x6c
	IOMUXC_GPR_GPR28 = 0xFFFFFFFF;
60001510:	6711      	str	r1, [r2, #112]	; 0x70
	IOMUXC_GPR_GPR29 = 0xFFFFFFFF;
60001512:	6751      	str	r1, [r2, #116]	; 0x74
	configure_cache();
60001514:	f000 f8b6 	bl	60001684 <configure_cache>
	_VectorsRam[14] = pendablesrvreq_isr;
60001518:	4b3f      	ldr	r3, [pc, #252]	; (60001618 <ResetHandler2+0x1e8>)
	systick_cycle_count = ARM_DWT_CYCCNT; // compiled 0, corrected w/1st systick
6000151a:	4940      	ldr	r1, [pc, #256]	; (6000161c <ResetHandler2+0x1ec>)
	_VectorsRam[14] = pendablesrvreq_isr;
6000151c:	63a3      	str	r3, [r4, #56]	; 0x38
	_VectorsRam[15] = systick_isr;
6000151e:	4b40      	ldr	r3, [pc, #256]	; (60001620 <ResetHandler2+0x1f0>)
60001520:	63e3      	str	r3, [r4, #60]	; 0x3c
	SYST_RVR = (SYSTICK_EXT_FREQ / 1000) - 1;
60001522:	2363      	movs	r3, #99	; 0x63
60001524:	616b      	str	r3, [r5, #20]
	SYST_CSR = SYST_CSR_TICKINT | SYST_CSR_ENABLE;
60001526:	2303      	movs	r3, #3
	SYST_CVR = 0;
60001528:	61af      	str	r7, [r5, #24]
	SYST_CSR = SYST_CSR_TICKINT | SYST_CSR_ENABLE;
6000152a:	612b      	str	r3, [r5, #16]
	SCB_SHPR3 = 0x20200000;  // Systick, pendablesrvreq_isr = priority 32;
6000152c:	4b3d      	ldr	r3, [pc, #244]	; (60001624 <ResetHandler2+0x1f4>)
6000152e:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	ARM_DEMCR |= ARM_DEMCR_TRCENA;
60001532:	f8d5 3dfc 	ldr.w	r3, [r5, #3580]	; 0xdfc
60001536:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
6000153a:	f8c5 3dfc 	str.w	r3, [r5, #3580]	; 0xdfc
	ARM_DWT_CTRL |= ARM_DWT_CTRL_CYCCNTENA; // turn on cycle counter
6000153e:	4b3a      	ldr	r3, [pc, #232]	; (60001628 <ResetHandler2+0x1f8>)
60001540:	681a      	ldr	r2, [r3, #0]
60001542:	f042 0201 	orr.w	r2, r2, #1
60001546:	601a      	str	r2, [r3, #0]
	systick_cycle_count = ARM_DWT_CYCCNT; // compiled 0, corrected w/1st systick
60001548:	685b      	ldr	r3, [r3, #4]
6000154a:	600b      	str	r3, [r1, #0]
	usb_pll_start();	
6000154c:	f000 fae4 	bl	60001b18 <usb_pll_start>
	CCM_ANALOG_PFD_528_SET = (1 << 31) | (1 << 23) | (1 << 15) | (1 << 7);
60001550:	f8c6 9104 	str.w	r9, [r6, #260]	; 0x104
	set_arm_clock(F_CPU);
60001554:	4835      	ldr	r0, [pc, #212]	; (6000162c <ResetHandler2+0x1fc>)
	CCM_ANALOG_PFD_528 = 0x2018101B; // PFD0:352, PFD1:594, PFD2:396, PFD3:297 MHz 	
60001556:	f8c6 b100 	str.w	fp, [r6, #256]	; 0x100
	CCM_ANALOG_PFD_480_SET = (1 << 31) | (1 << 23) | (1 << 15) | (1 << 7);	
6000155a:	f8c6 90f4 	str.w	r9, [r6, #244]	; 0xf4
	CCM_ANALOG_PFD_480 = 0x13110D0C; // PFD0:720, PFD1:664, PFD2:508, PFD3:454 MHz
6000155e:	f8c6 a0f0 	str.w	sl, [r6, #240]	; 0xf0
	set_arm_clock(F_CPU);
60001562:	f000 fc71 	bl	60001e48 <__set_arm_clock_veneer>
	CCM_CCGR1 |= CCM_CCGR1_PIT(CCM_CCGR_ON);
60001566:	f8d8 106c 	ldr.w	r1, [r8, #108]	; 0x6c
	PIT_MCR = 0;
6000156a:	4b31      	ldr	r3, [pc, #196]	; (60001630 <ResetHandler2+0x200>)
	if (!(SNVS_LPCR & SNVS_LPCR_SRTC_ENV)) {
6000156c:	4a31      	ldr	r2, [pc, #196]	; (60001634 <ResetHandler2+0x204>)
	CCM_CCGR1 |= CCM_CCGR1_PIT(CCM_CCGR_ON);
6000156e:	f441 5140 	orr.w	r1, r1, #12288	; 0x3000
60001572:	f8c8 106c 	str.w	r1, [r8, #108]	; 0x6c
	PIT_MCR = 0;
60001576:	601f      	str	r7, [r3, #0]
	PIT_TCTRL0 = 0;
60001578:	f8c3 7108 	str.w	r7, [r3, #264]	; 0x108
	PIT_TCTRL1 = 0;
6000157c:	f8c3 7118 	str.w	r7, [r3, #280]	; 0x118
	PIT_TCTRL2 = 0;
60001580:	f8c3 7128 	str.w	r7, [r3, #296]	; 0x128
	PIT_TCTRL3 = 0;
60001584:	f8c3 7138 	str.w	r7, [r3, #312]	; 0x138
	if (!(SNVS_LPCR & SNVS_LPCR_SRTC_ENV)) {
60001588:	6b93      	ldr	r3, [r2, #56]	; 0x38
6000158a:	07db      	lsls	r3, r3, #31
6000158c:	d408      	bmi.n	600015a0 <ResetHandler2+0x170>
		SNVS_LPSRTCMR = 1546300800u >> 17;
6000158e:	f642 6315 	movw	r3, #11797	; 0x2e15
		SNVS_LPSRTCLR = 1546300800u << 15;
60001592:	4929      	ldr	r1, [pc, #164]	; (60001638 <ResetHandler2+0x208>)
60001594:	6551      	str	r1, [r2, #84]	; 0x54
		SNVS_LPSRTCMR = 1546300800u >> 17;
60001596:	6513      	str	r3, [r2, #80]	; 0x50
		SNVS_LPCR |= SNVS_LPCR_SRTC_ENV;
60001598:	6b93      	ldr	r3, [r2, #56]	; 0x38
6000159a:	f043 0301 	orr.w	r3, r3, #1
6000159e:	6393      	str	r3, [r2, #56]	; 0x38
	SNVS_HPCR |= SNVS_HPCR_RTC_EN | SNVS_HPCR_HP_TS;
600015a0:	4a24      	ldr	r2, [pc, #144]	; (60001634 <ResetHandler2+0x204>)
600015a2:	4c26      	ldr	r4, [pc, #152]	; (6000163c <ResetHandler2+0x20c>)
600015a4:	6893      	ldr	r3, [r2, #8]
600015a6:	f043 1301 	orr.w	r3, r3, #65537	; 0x10001
600015aa:	6093      	str	r3, [r2, #8]
	configure_external_ram();
600015ac:	f000 f8f2 	bl	60001794 <configure_external_ram>
	analog_init();
600015b0:	f000 fc16 	bl	60001de0 <analog_init>
	pwm_init();
600015b4:	f000 fc50 	bl	60001e58 <__pwm_init_veneer>
	tempmon_init();
600015b8:	f000 fadc 	bl	60001b74 <tempmon_init>
	startup_middle_hook();
600015bc:	f000 f85c 	bl	60001678 <startup_default_middle_hook>
// Returns the number of milliseconds since your program started running.
// This 32 bit number will roll back to zero after about 49.7 days.  For a
// simpler way to build delays or timeouts, consider using elapsedMillis.
static inline uint32_t millis(void)
{
	return systick_millis_count;
600015c0:	6823      	ldr	r3, [r4, #0]
	while (millis() < TEENSY_INIT_USB_DELAY_BEFORE) ; // wait
600015c2:	2b13      	cmp	r3, #19
600015c4:	d9fc      	bls.n	600015c0 <ResetHandler2+0x190>
	usb_init();
600015c6:	f000 fb6d 	bl	60001ca4 <usb_init>
600015ca:	6823      	ldr	r3, [r4, #0]
	while (millis() < TEENSY_INIT_USB_DELAY_AFTER + TEENSY_INIT_USB_DELAY_BEFORE) ; // wait
600015cc:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
600015d0:	d3fb      	bcc.n	600015ca <ResetHandler2+0x19a>
	startup_debug_reset();
600015d2:	f000 f855 	bl	60001680 <startup_debug_reset>
	startup_late_hook();
600015d6:	f000 f851 	bl	6000167c <startup_default_late_hook>
	__libc_init_array();
600015da:	f000 fc49 	bl	60001e70 <____libc_init_array_veneer>
	main();
600015de:	f000 fc2f 	bl	60001e40 <__main_veneer>
	while (1) asm("WFI");
600015e2:	bf30      	wfi
600015e4:	e7fd      	b.n	600015e2 <ResetHandler2+0x1b2>
600015e6:	bf00      	nop
600015e8:	400d8000 	.word	0x400d8000
600015ec:	00010f48 	.word	0x00010f48
600015f0:	60001f94 	.word	0x60001f94
600015f4:	00000000 	.word	0x00000000
600015f8:	200036c0 	.word	0x200036c0
600015fc:	60012ee0 	.word	0x60012ee0
60001600:	20000000 	.word	0x20000000
60001604:	20003400 	.word	0x20003400
60001608:	000007e1 	.word	0x000007e1
6000160c:	e000e400 	.word	0xe000e400
60001610:	e000e4a0 	.word	0xe000e4a0
60001614:	400ac000 	.word	0x400ac000
60001618:	00001c09 	.word	0x00001c09
6000161c:	20003c88 	.word	0x20003c88
60001620:	00001c0d 	.word	0x00001c0d
60001624:	20200000 	.word	0x20200000
60001628:	e0001000 	.word	0xe0001000
6000162c:	23c34600 	.word	0x23c34600
60001630:	40084000 	.word	0x40084000
60001634:	400d4000 	.word	0x400d4000
60001638:	56c00000 	.word	0x56c00000
6000163c:	20003c8c 	.word	0x20003c8c
60001640:	2018101b 	.word	0x2018101b
60001644:	13110d0c 	.word	0x13110d0c
60001648:	400fc000 	.word	0x400fc000

6000164c <ResetHandler>:
	IOMUXC_GPR_GPR17 = (uint32_t)&_flexram_bank_config;
6000164c:	4b05      	ldr	r3, [pc, #20]	; (60001664 <ResetHandler+0x18>)
	IOMUXC_GPR_GPR14 = 0x00AA0000;
6000164e:	f44f 012a 	mov.w	r1, #11141120	; 0xaa0000
	IOMUXC_GPR_GPR17 = (uint32_t)&_flexram_bank_config;
60001652:	4a05      	ldr	r2, [pc, #20]	; (60001668 <ResetHandler+0x1c>)
	IOMUXC_GPR_GPR16 = 0x00200007;
60001654:	4805      	ldr	r0, [pc, #20]	; (6000166c <ResetHandler+0x20>)
	IOMUXC_GPR_GPR17 = (uint32_t)&_flexram_bank_config;
60001656:	645a      	str	r2, [r3, #68]	; 0x44
	IOMUXC_GPR_GPR16 = 0x00200007;
60001658:	6418      	str	r0, [r3, #64]	; 0x40
	__asm__ volatile("mov sp, %0" : : "r" ((uint32_t)&_estack) : "memory");
6000165a:	4a05      	ldr	r2, [pc, #20]	; (60001670 <ResetHandler+0x24>)
	IOMUXC_GPR_GPR14 = 0x00AA0000;
6000165c:	6399      	str	r1, [r3, #56]	; 0x38
	__asm__ volatile("mov sp, %0" : : "r" ((uint32_t)&_estack) : "memory");
6000165e:	4695      	mov	sp, r2
	ResetHandler2();
60001660:	f7ff fee6 	bl	60001430 <ResetHandler2>
60001664:	400ac000 	.word	0x400ac000
60001668:	aaaaaabf 	.word	0xaaaaaabf
6000166c:	00200007 	.word	0x00200007
60001670:	20068000 	.word	0x20068000

60001674 <startup_default_early_hook>:
FLASHMEM void startup_default_early_hook(void) {}
60001674:	4770      	bx	lr
60001676:	bf00      	nop

60001678 <startup_default_middle_hook>:
60001678:	4770      	bx	lr
6000167a:	bf00      	nop

6000167c <startup_default_late_hook>:
6000167c:	4770      	bx	lr
6000167e:	bf00      	nop

60001680 <startup_debug_reset>:
FLASHMEM void startup_debug_reset(void) { __asm__ volatile("nop"); }
60001680:	bf00      	nop
60001682:	4770      	bx	lr

60001684 <configure_cache>:
{
60001684:	b410      	push	{r4}
	SCB_MPU_CTRL = 0; // turn off MPU
60001686:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
6000168a:	2100      	movs	r1, #0
	SCB_MPU_RBAR = 0x00000000 | REGION(i++); //https://developer.arm.com/docs/146793866/10/why-does-the-cortex-m7-initiate-axim-read-accesses-to-memory-addresses-that-do-not-fall-under-a-defined-mpu-region
6000168c:	2410      	movs	r4, #16
	SCB_MPU_RASR = SCB_MPU_RASR_TEX(0) | NOACCESS | NOEXEC | SIZE_4G;
6000168e:	4831      	ldr	r0, [pc, #196]	; (60001754 <configure_cache+0xd0>)
	SCB_MPU_CTRL = 0; // turn off MPU
60001690:	f8c3 1d94 	str.w	r1, [r3, #3476]	; 0xd94
	SCB_MPU_RBAR = 0x00000000 | REGION(i++); //https://developer.arm.com/docs/146793866/10/why-does-the-cortex-m7-initiate-axim-read-accesses-to-memory-addresses-that-do-not-fall-under-a-defined-mpu-region
60001694:	f8c3 4d9c 	str.w	r4, [r3, #3484]	; 0xd9c
	SCB_MPU_RBAR = 0x00000000 | REGION(i++); // ITCM
60001698:	2411      	movs	r4, #17
	SCB_MPU_RASR = SCB_MPU_RASR_TEX(0) | NOACCESS | NOEXEC | SIZE_4G;
6000169a:	f8c3 0da0 	str.w	r0, [r3, #3488]	; 0xda0
	SCB_MPU_RASR = MEM_NOCACHE | READONLY | SIZE_512K;
6000169e:	482e      	ldr	r0, [pc, #184]	; (60001758 <configure_cache+0xd4>)
	SCB_MPU_RBAR = 0x00000000 | REGION(i++); // ITCM
600016a0:	f8c3 4d9c 	str.w	r4, [r3, #3484]	; 0xd9c
	SCB_MPU_RBAR = 0x00000000 | REGION(i++); // trap NULL pointer deref
600016a4:	2412      	movs	r4, #18
	SCB_MPU_RASR = MEM_NOCACHE | READONLY | SIZE_512K;
600016a6:	f8c3 0da0 	str.w	r0, [r3, #3488]	; 0xda0
	SCB_MPU_RASR =  DEV_NOCACHE | NOACCESS | SIZE_32B;
600016aa:	482c      	ldr	r0, [pc, #176]	; (6000175c <configure_cache+0xd8>)
	SCB_MPU_RBAR = 0x00000000 | REGION(i++); // trap NULL pointer deref
600016ac:	f8c3 4d9c 	str.w	r4, [r3, #3484]	; 0xd9c
	SCB_MPU_RBAR = ((uint32_t)&_ebss) | REGION(i++); // trap stack overflow
600016b0:	4a2b      	ldr	r2, [pc, #172]	; (60001760 <configure_cache+0xdc>)
	SCB_MPU_RASR =  DEV_NOCACHE | NOACCESS | SIZE_32B;
600016b2:	f8c3 0da0 	str.w	r0, [r3, #3488]	; 0xda0
	SCB_MPU_RBAR = 0x00200000 | REGION(i++); // Boot ROM
600016b6:	4c2b      	ldr	r4, [pc, #172]	; (60001764 <configure_cache+0xe0>)
	SCB_MPU_RBAR = ((uint32_t)&_ebss) | REGION(i++); // trap stack overflow
600016b8:	f042 0215 	orr.w	r2, r2, #21
	SCB_MPU_RASR = MEM_CACHE_WT | READONLY | SIZE_128K;
600016bc:	482a      	ldr	r0, [pc, #168]	; (60001768 <configure_cache+0xe4>)
	SCB_MPU_RBAR = 0x00200000 | REGION(i++); // Boot ROM
600016be:	f8c3 4d9c 	str.w	r4, [r3, #3484]	; 0xd9c
	SCB_MPU_RASR = MEM_CACHE_WT | READONLY | SIZE_128K;
600016c2:	f8c3 0da0 	str.w	r0, [r3, #3488]	; 0xda0
	SCB_MPU_RBAR = 0x20000000 | REGION(i++); // DTCM
600016c6:	4c29      	ldr	r4, [pc, #164]	; (6000176c <configure_cache+0xe8>)
	SCB_MPU_RASR = MEM_NOCACHE | READWRITE | NOEXEC | SIZE_512K;
600016c8:	4829      	ldr	r0, [pc, #164]	; (60001770 <configure_cache+0xec>)
	SCB_MPU_RBAR = 0x20000000 | REGION(i++); // DTCM
600016ca:	f8c3 4d9c 	str.w	r4, [r3, #3484]	; 0xd9c
	SCB_MPU_RASR = MEM_NOCACHE | READWRITE | NOEXEC | SIZE_512K;
600016ce:	f8c3 0da0 	str.w	r0, [r3, #3488]	; 0xda0
	SCB_MPU_RASR = SCB_MPU_RASR_TEX(0) | NOACCESS | NOEXEC | SIZE_32B;
600016d2:	4c28      	ldr	r4, [pc, #160]	; (60001774 <configure_cache+0xf0>)
	SCB_MPU_RBAR = ((uint32_t)&_ebss) | REGION(i++); // trap stack overflow
600016d4:	f8c3 2d9c 	str.w	r2, [r3, #3484]	; 0xd9c
	SCB_MPU_RBAR = 0x20200000 | REGION(i++); // RAM (AXI bus)
600016d8:	4827      	ldr	r0, [pc, #156]	; (60001778 <configure_cache+0xf4>)
	SCB_MPU_RASR = MEM_CACHE_WBWA | READWRITE | NOEXEC | SIZE_1M;
600016da:	4a28      	ldr	r2, [pc, #160]	; (6000177c <configure_cache+0xf8>)
	SCB_MPU_RASR = SCB_MPU_RASR_TEX(0) | NOACCESS | NOEXEC | SIZE_32B;
600016dc:	f8c3 4da0 	str.w	r4, [r3, #3488]	; 0xda0
	SCB_MPU_RBAR = 0x20200000 | REGION(i++); // RAM (AXI bus)
600016e0:	f8c3 0d9c 	str.w	r0, [r3, #3484]	; 0xd9c
	SCB_MPU_RASR = MEM_CACHE_WBWA | READWRITE | NOEXEC | SIZE_1M;
600016e4:	f8c3 2da0 	str.w	r2, [r3, #3488]	; 0xda0
	SCB_MPU_RASR = DEV_NOCACHE | READWRITE | NOEXEC | SIZE_64M;
600016e8:	f502 22a0 	add.w	r2, r2, #327680	; 0x50000
	SCB_MPU_RBAR = 0x40000000 | REGION(i++); // Peripherals
600016ec:	4c24      	ldr	r4, [pc, #144]	; (60001780 <configure_cache+0xfc>)
	SCB_MPU_RASR = DEV_NOCACHE | READWRITE | NOEXEC | SIZE_64M;
600016ee:	320c      	adds	r2, #12
	SCB_MPU_RBAR = 0x60000000 | REGION(i++); // QSPI Flash
600016f0:	4824      	ldr	r0, [pc, #144]	; (60001784 <configure_cache+0x100>)
	SCB_MPU_RBAR = 0x40000000 | REGION(i++); // Peripherals
600016f2:	f8c3 4d9c 	str.w	r4, [r3, #3484]	; 0xd9c
	SCB_MPU_RASR = DEV_NOCACHE | READWRITE | NOEXEC | SIZE_64M;
600016f6:	f8c3 2da0 	str.w	r2, [r3, #3488]	; 0xda0
	SCB_MPU_RASR = MEM_CACHE_WBWA | READONLY | SIZE_16M;
600016fa:	4a23      	ldr	r2, [pc, #140]	; (60001788 <configure_cache+0x104>)
	SCB_MPU_RBAR = 0x60000000 | REGION(i++); // QSPI Flash
600016fc:	f8c3 0d9c 	str.w	r0, [r3, #3484]	; 0xd9c
	SCB_MPU_RBAR = 0x70000000 | REGION(i++); // FlexSPI2
60001700:	4c22      	ldr	r4, [pc, #136]	; (6000178c <configure_cache+0x108>)
	SCB_MPU_RASR = MEM_CACHE_WBWA | READONLY | SIZE_16M;
60001702:	f8c3 2da0 	str.w	r2, [r3, #3488]	; 0xda0
	SCB_MPU_RASR = MEM_CACHE_WBWA | READWRITE | NOEXEC | SIZE_16M;
60001706:	f102 6240 	add.w	r2, r2, #201326592	; 0xc000000
	SCB_MPU_RBAR = 0x70000000 | REGION(i++); // FlexSPI2
6000170a:	f8c3 4d9c 	str.w	r4, [r3, #3484]	; 0xd9c
	SCB_MPU_RBAR = 0x80000000 | REGION(i++); // SEMC: SDRAM, NAND, SRAM, etc
6000170e:	4820      	ldr	r0, [pc, #128]	; (60001790 <configure_cache+0x10c>)
	SCB_MPU_RASR = MEM_CACHE_WBWA | READWRITE | NOEXEC | SIZE_16M;
60001710:	f8c3 2da0 	str.w	r2, [r3, #3488]	; 0xda0
	SCB_MPU_RASR = MEM_CACHE_WBWA | READWRITE | NOEXEC | SIZE_1G;
60001714:	320c      	adds	r2, #12
	SCB_MPU_RBAR = 0x80000000 | REGION(i++); // SEMC: SDRAM, NAND, SRAM, etc
60001716:	f8c3 0d9c 	str.w	r0, [r3, #3484]	; 0xd9c
	SCB_MPU_RASR = MEM_CACHE_WBWA | READWRITE | NOEXEC | SIZE_1G;
6000171a:	f8c3 2da0 	str.w	r2, [r3, #3488]	; 0xda0
	asm("nop"); // allow a few cycles for bus writes before enable MPU
6000171e:	bf00      	nop
	asm("nop");
60001720:	bf00      	nop
	asm("nop");
60001722:	bf00      	nop
	asm("nop");
60001724:	bf00      	nop
	asm("nop");
60001726:	bf00      	nop
	SCB_MPU_CTRL = SCB_MPU_CTRL_ENABLE;
60001728:	2201      	movs	r2, #1
6000172a:	f8c3 2d94 	str.w	r2, [r3, #3476]	; 0xd94
	asm("dsb");
6000172e:	f3bf 8f4f 	dsb	sy
	asm("isb");
60001732:	f3bf 8f6f 	isb	sy
	SCB_CACHE_ICIALLU = 0;
60001736:	f8c3 1f50 	str.w	r1, [r3, #3920]	; 0xf50
	asm("dsb");
6000173a:	f3bf 8f4f 	dsb	sy
	asm("isb");
6000173e:	f3bf 8f6f 	isb	sy
	SCB_CCR |= (SCB_CCR_IC | SCB_CCR_DC);
60001742:	f8d3 2d14 	ldr.w	r2, [r3, #3348]	; 0xd14
}
60001746:	f85d 4b04 	ldr.w	r4, [sp], #4
	SCB_CCR |= (SCB_CCR_IC | SCB_CCR_DC);
6000174a:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
6000174e:	f8c3 2d14 	str.w	r2, [r3, #3348]	; 0xd14
}
60001752:	4770      	bx	lr
60001754:	1000003f 	.word	0x1000003f
60001758:	07080025 	.word	0x07080025
6000175c:	00100009 	.word	0x00100009
60001760:	20003ce0 	.word	0x20003ce0
60001764:	00200013 	.word	0x00200013
60001768:	07020021 	.word	0x07020021
6000176c:	20000014 	.word	0x20000014
60001770:	13080025 	.word	0x13080025
60001774:	10000009 	.word	0x10000009
60001778:	20200016 	.word	0x20200016
6000177c:	130b0027 	.word	0x130b0027
60001780:	40000017 	.word	0x40000017
60001784:	60000018 	.word	0x60000018
60001788:	070b002f 	.word	0x070b002f
6000178c:	70000019 	.word	0x70000019
60001790:	8000001a 	.word	0x8000001a

60001794 <configure_external_ram>:
{
60001794:	b5f0      	push	{r4, r5, r6, r7, lr}
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_22 = 0x1B0F9; // 100K pullup, strong drive, max speed, hyst
60001796:	4bb8      	ldr	r3, [pc, #736]	; (60001a78 <configure_external_ram+0x2e4>)
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_22 = 8 | 0x10; // ALT1 = FLEXSPI2_A_SS1_B (Flash)
60001798:	2218      	movs	r2, #24
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_22 = 0x1B0F9; // 100K pullup, strong drive, max speed, hyst
6000179a:	4eb8      	ldr	r6, [pc, #736]	; (60001a7c <configure_external_ram+0x2e8>)
	IOMUXC_FLEXSPI2_IPP_IND_DQS_FA_SELECT_INPUT = 1; // GPIO_EMC_23 for Mode: ALT8, pg 986
6000179c:	2001      	movs	r0, #1
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_23 = 0x110F9; // keeper, strong drive, max speed, hyst
6000179e:	4fb8      	ldr	r7, [pc, #736]	; (60001a80 <configure_external_ram+0x2ec>)
{
600017a0:	b083      	sub	sp, #12
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_22 = 0x1B0F9; // 100K pullup, strong drive, max speed, hyst
600017a2:	f8c3 625c 	str.w	r6, [r3, #604]	; 0x25c
	IOMUXC_FLEXSPI2_IPP_IND_DQS_FA_SELECT_INPUT = 1; // GPIO_EMC_23 for Mode: ALT8, pg 986
600017a6:	49b7      	ldr	r1, [pc, #732]	; (60001a84 <configure_external_ram+0x2f0>)
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_23 = 0x110F9; // keeper, strong drive, max speed, hyst
600017a8:	f8c3 7260 	str.w	r7, [r3, #608]	; 0x260
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_26 = 0x170F9; // 47K pullup, strong drive, max speed, hyst
600017ac:	4db6      	ldr	r5, [pc, #728]	; (60001a88 <configure_external_ram+0x2f4>)
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_24 = 0x1B0F9; // 100K pullup, strong drive, max speed, hyst
600017ae:	f8c3 6264 	str.w	r6, [r3, #612]	; 0x264
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_25 = 0x100F9; // strong drive, max speed, hyst
600017b2:	f5a6 4630 	sub.w	r6, r6, #45056	; 0xb000
	CCM_CBCMR = (CCM_CBCMR & ~(CCM_CBCMR_FLEXSPI2_PODF_MASK | CCM_CBCMR_FLEXSPI2_CLK_SEL_MASK))
600017b6:	4cb5      	ldr	r4, [pc, #724]	; (60001a8c <configure_external_ram+0x2f8>)
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_25 = 0x100F9; // strong drive, max speed, hyst
600017b8:	f8c3 6268 	str.w	r6, [r3, #616]	; 0x268
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_26 = 0x170F9; // 47K pullup, strong drive, max speed, hyst
600017bc:	f8c3 526c 	str.w	r5, [r3, #620]	; 0x26c
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_27 = 0x170F9; // 47K pullup, strong drive, max speed, hyst
600017c0:	f8c3 5270 	str.w	r5, [r3, #624]	; 0x270
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_28 = 0x170F9; // 47K pullup, strong drive, max speed, hyst
600017c4:	f8c3 5274 	str.w	r5, [r3, #628]	; 0x274
	IOMUXC_SW_PAD_CTL_PAD_GPIO_EMC_29 = 0x170F9; // 47K pullup, strong drive, max speed, hyst
600017c8:	f8c3 5278 	str.w	r5, [r3, #632]	; 0x278
		| FLEXSPI_MCR0_RXCLKSRC(1) | FLEXSPI_MCR0_MDIS;
600017cc:	f248 750c 	movw	r5, #34572	; 0x870c
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_22 = 8 | 0x10; // ALT1 = FLEXSPI2_A_SS1_B (Flash)
600017d0:	66da      	str	r2, [r3, #108]	; 0x6c
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_23 = 8 | 0x10; // ALT1 = FLEXSPI2_A_DQS
600017d2:	671a      	str	r2, [r3, #112]	; 0x70
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_24 = 8 | 0x10; // ALT1 = FLEXSPI2_A_SS0_B (RAM)
600017d4:	675a      	str	r2, [r3, #116]	; 0x74
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_25 = 8 | 0x10; // ALT1 = FLEXSPI2_A_SCLK
600017d6:	679a      	str	r2, [r3, #120]	; 0x78
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_26 = 8 | 0x10; // ALT1 = FLEXSPI2_A_DATA0
600017d8:	67da      	str	r2, [r3, #124]	; 0x7c
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_27 = 8 | 0x10; // ALT1 = FLEXSPI2_A_DATA1
600017da:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_28 = 8 | 0x10; // ALT1 = FLEXSPI2_A_DATA2
600017de:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
	IOMUXC_SW_MUX_CTL_PAD_GPIO_EMC_29 = 8 | 0x10; // ALT1 = FLEXSPI2_A_DATA3
600017e2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
	IOMUXC_FLEXSPI2_IPP_IND_DQS_FA_SELECT_INPUT = 1; // GPIO_EMC_23 for Mode: ALT8, pg 986
600017e6:	f8c1 032c 	str.w	r0, [r1, #812]	; 0x32c
	CCM_CBCMR = (CCM_CBCMR & ~(CCM_CBCMR_FLEXSPI2_PODF_MASK | CCM_CBCMR_FLEXSPI2_CLK_SEL_MASK))
600017ea:	4aa9      	ldr	r2, [pc, #676]	; (60001a90 <configure_external_ram+0x2fc>)
	IOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT0_SELECT_INPUT = 1; // GPIO_EMC_26 for Mode: ALT8
600017ec:	f8c1 0330 	str.w	r0, [r1, #816]	; 0x330
	IOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT1_SELECT_INPUT = 1; // GPIO_EMC_27 for Mode: ALT8
600017f0:	f8c1 0334 	str.w	r0, [r1, #820]	; 0x334
	IOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT2_SELECT_INPUT = 1; // GPIO_EMC_28 for Mode: ALT8
600017f4:	f8c1 0338 	str.w	r0, [r1, #824]	; 0x338
	IOMUXC_FLEXSPI2_IPP_IND_IO_FA_BIT3_SELECT_INPUT = 1; // GPIO_EMC_29 for Mode: ALT8
600017f8:	f8c1 033c 	str.w	r0, [r1, #828]	; 0x33c
	IOMUXC_FLEXSPI2_IPP_IND_SCK_FA_SELECT_INPUT = 1; // GPIO_EMC_25 for Mode: ALT8
600017fc:	f8c1 0350 	str.w	r0, [r1, #848]	; 0x350
	CCM_CBCMR = (CCM_CBCMR & ~(CCM_CBCMR_FLEXSPI2_PODF_MASK | CCM_CBCMR_FLEXSPI2_CLK_SEL_MASK))
60001800:	69a1      	ldr	r1, [r4, #24]
		| CCM_CBCMR_FLEXSPI2_PODF(5) | CCM_CBCMR_FLEXSPI2_CLK_SEL(3); // 88 MHz
60001802:	4ba4      	ldr	r3, [pc, #656]	; (60001a94 <configure_external_ram+0x300>)
	CCM_CBCMR = (CCM_CBCMR & ~(CCM_CBCMR_FLEXSPI2_PODF_MASK | CCM_CBCMR_FLEXSPI2_CLK_SEL_MASK))
60001804:	400a      	ands	r2, r1
	FLEXSPI2_MCR0 |= FLEXSPI_MCR0_MDIS;
60001806:	48a4      	ldr	r0, [pc, #656]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_MCR2 = (FLEXSPI_MCR2 & ~(FLEXSPI_MCR2_RESUMEWAIT_MASK
60001808:	49a4      	ldr	r1, [pc, #656]	; (60001a9c <configure_external_ram+0x308>)
		| CCM_CBCMR_FLEXSPI2_PODF(5) | CCM_CBCMR_FLEXSPI2_CLK_SEL(3); // 88 MHz
6000180a:	4313      	orrs	r3, r2
		| FLEXSPI_MCR0_RXCLKSRC(1) | FLEXSPI_MCR0_MDIS;
6000180c:	4aa4      	ldr	r2, [pc, #656]	; (60001aa0 <configure_external_ram+0x30c>)
	CCM_CBCMR = (CCM_CBCMR & ~(CCM_CBCMR_FLEXSPI2_PODF_MASK | CCM_CBCMR_FLEXSPI2_CLK_SEL_MASK))
6000180e:	61a3      	str	r3, [r4, #24]
	CCM_CCGR7 |= CCM_CCGR7_FLEXSPI2(CCM_CCGR_ON);
60001810:	f8d4 3084 	ldr.w	r3, [r4, #132]	; 0x84
60001814:	f043 030c 	orr.w	r3, r3, #12
60001818:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
	FLEXSPI2_MCR1 = FLEXSPI_MCR1_SEQWAIT(0xFFFF) | FLEXSPI_MCR1_AHBBUSWAIT(0xFFFF);
6000181c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
	FLEXSPI2_MCR0 |= FLEXSPI_MCR0_MDIS;
60001820:	6803      	ldr	r3, [r0, #0]
60001822:	f043 0302 	orr.w	r3, r3, #2
60001826:	6003      	str	r3, [r0, #0]
	FLEXSPI2_MCR0 = (FLEXSPI2_MCR0 & ~(FLEXSPI_MCR0_AHBGRANTWAIT_MASK
60001828:	6803      	ldr	r3, [r0, #0]
		| FLEXSPI_MCR0_RXCLKSRC(1) | FLEXSPI_MCR0_MDIS;
6000182a:	402b      	ands	r3, r5
	FLEXSPI2_FLSHA1CR0 = 0x2000; // 8 MByte
6000182c:	f44f 5500 	mov.w	r5, #8192	; 0x2000
		| FLEXSPI_MCR0_RXCLKSRC(1) | FLEXSPI_MCR0_MDIS;
60001830:	431a      	orrs	r2, r3
	FLEXSPI2_MCR2 = (FLEXSPI_MCR2 & ~(FLEXSPI_MCR2_RESUMEWAIT_MASK
60001832:	4b9c      	ldr	r3, [pc, #624]	; (60001aa4 <configure_external_ram+0x310>)
	FLEXSPI2_MCR0 = (FLEXSPI2_MCR0 & ~(FLEXSPI_MCR0_AHBGRANTWAIT_MASK
60001834:	6002      	str	r2, [r0, #0]
	FLEXSPI2_MCR1 = FLEXSPI_MCR1_SEQWAIT(0xFFFF) | FLEXSPI_MCR1_AHBBUSWAIT(0xFFFF);
60001836:	6044      	str	r4, [r0, #4]
	FLEXSPI2_MCR2 = (FLEXSPI_MCR2 & ~(FLEXSPI_MCR2_RESUMEWAIT_MASK
60001838:	688a      	ldr	r2, [r1, #8]
		| FLEXSPI_AHBRXBUFCR0_PREFETCHEN | FLEXSPI_AHBRXBUFCR0_BUFSZ(64);
6000183a:	4c9b      	ldr	r4, [pc, #620]	; (60001aa8 <configure_external_ram+0x314>)
	FLEXSPI2_MCR2 = (FLEXSPI_MCR2 & ~(FLEXSPI_MCR2_RESUMEWAIT_MASK
6000183c:	4013      	ands	r3, r2
	FLEXSPI2_AHBRXBUF0CR0 = (FLEXSPI2_AHBRXBUF0CR0 & ~mask)
6000183e:	4a9b      	ldr	r2, [pc, #620]	; (60001aac <configure_external_ram+0x318>)
		| FLEXSPI_MCR2_RESUMEWAIT(0x20) /*| FLEXSPI_MCR2_SAMEDEVICEEN*/;
60001840:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
	FLEXSPI2_MCR2 = (FLEXSPI_MCR2 & ~(FLEXSPI_MCR2_RESUMEWAIT_MASK
60001844:	6083      	str	r3, [r0, #8]
	FLEXSPI2_AHBCR = FLEXSPI2_AHBCR & ~(FLEXSPI_AHBCR_READADDROPT | FLEXSPI_AHBCR_PREFETCHEN
60001846:	68c3      	ldr	r3, [r0, #12]
60001848:	f023 0378 	bic.w	r3, r3, #120	; 0x78
6000184c:	60c3      	str	r3, [r0, #12]
	FLEXSPI2_AHBRXBUF0CR0 = (FLEXSPI2_AHBRXBUF0CR0 & ~mask)
6000184e:	6a03      	ldr	r3, [r0, #32]
60001850:	4013      	ands	r3, r2
		| FLEXSPI_AHBRXBUFCR0_PREFETCHEN | FLEXSPI_AHBRXBUFCR0_BUFSZ(64);
60001852:	4323      	orrs	r3, r4
	FLEXSPI2_AHBRXBUF0CR0 = (FLEXSPI2_AHBRXBUF0CR0 & ~mask)
60001854:	6203      	str	r3, [r0, #32]
	FLEXSPI2_AHBRXBUF1CR0 = (FLEXSPI2_AHBRXBUF0CR0 & ~mask)
60001856:	6a03      	ldr	r3, [r0, #32]
60001858:	4013      	ands	r3, r2
	FLEXSPI2_AHBRXBUF2CR0 = mask;
6000185a:	4a95      	ldr	r2, [pc, #596]	; (60001ab0 <configure_external_ram+0x31c>)
		| FLEXSPI_AHBRXBUFCR0_PREFETCHEN | FLEXSPI_AHBRXBUFCR0_BUFSZ(64);
6000185c:	4323      	orrs	r3, r4
	FLEXSPI2_FLSHA1CR1 = FLEXSPI_FLSHCR1_CSINTERVAL(2)
6000185e:	4c95      	ldr	r4, [pc, #596]	; (60001ab4 <configure_external_ram+0x320>)
	FLEXSPI2_AHBRXBUF1CR0 = (FLEXSPI2_AHBRXBUF0CR0 & ~mask)
60001860:	6243      	str	r3, [r0, #36]	; 0x24
	FLEXSPI2_AHBRXBUF2CR0 = mask;
60001862:	6282      	str	r2, [r0, #40]	; 0x28
	FLEXSPI2_AHBRXBUF3CR0 = mask;
60001864:	62c2      	str	r2, [r0, #44]	; 0x2c
	FLEXSPI2_INTEN = 0;
60001866:	2200      	movs	r2, #0
	FLEXSPI2_IPRXFCR = (FLEXSPI_IPRXFCR & 0xFFFFFFC0) | FLEXSPI_IPRXFCR_CLRIPRXF;
60001868:	f8d1 30b8 	ldr.w	r3, [r1, #184]	; 0xb8
6000186c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
60001870:	f043 0301 	orr.w	r3, r3, #1
60001874:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
	FLEXSPI2_IPTXFCR = (FLEXSPI_IPTXFCR & 0xFFFFFFC0) | FLEXSPI_IPTXFCR_CLRIPTXF;
60001878:	f8d1 30bc 	ldr.w	r3, [r1, #188]	; 0xbc
	FLEXSPI2_LUTKEY = FLEXSPI_LUTKEY_VALUE;
6000187c:	498e      	ldr	r1, [pc, #568]	; (60001ab8 <configure_external_ram+0x324>)
	FLEXSPI2_IPTXFCR = (FLEXSPI_IPTXFCR & 0xFFFFFFC0) | FLEXSPI_IPTXFCR_CLRIPTXF;
6000187e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
60001882:	f043 0301 	orr.w	r3, r3, #1
60001886:	f8c0 30bc 	str.w	r3, [r0, #188]	; 0xbc
	FLEXSPI2_FLSHA1CR2 = FLEXSPI_FLSHCR2_AWRSEQID(6) | FLEXSPI_FLSHCR2_AWRSEQNUM(0)
6000188a:	f240 6305 	movw	r3, #1541	; 0x605
	FLEXSPI2_INTEN = 0;
6000188e:	6102      	str	r2, [r0, #16]
	FLEXSPI2_FLSHA1CR0 = 0x2000; // 8 MByte
60001890:	6605      	str	r5, [r0, #96]	; 0x60
	FLEXSPI2_FLSHA1CR1 = FLEXSPI_FLSHCR1_CSINTERVAL(2)
60001892:	6704      	str	r4, [r0, #112]	; 0x70
	FLEXSPI2_FLSHA1CR2 = FLEXSPI_FLSHCR2_AWRSEQID(6) | FLEXSPI_FLSHCR2_AWRSEQNUM(0)
60001894:	f8c0 3080 	str.w	r3, [r0, #128]	; 0x80
	FLEXSPI2_FLSHA2CR0 = 0x2000; // 8 MByte
60001898:	6645      	str	r5, [r0, #100]	; 0x64
	FLEXSPI2_FLSHA2CR1 = FLEXSPI_FLSHCR1_CSINTERVAL(2)
6000189a:	6744      	str	r4, [r0, #116]	; 0x74
	FLEXSPI2_LUTCR = FLEXSPI_LUTCR_UNLOCK;
6000189c:	2402      	movs	r4, #2
	FLEXSPI2_FLSHA2CR2 = FLEXSPI_FLSHCR2_AWRSEQID(6) | FLEXSPI_FLSHCR2_AWRSEQNUM(0)
6000189e:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
	FLEXSPI2_MCR0 &= ~FLEXSPI_MCR0_MDIS;
600018a2:	6803      	ldr	r3, [r0, #0]
600018a4:	f023 0302 	bic.w	r3, r3, #2
600018a8:	6003      	str	r3, [r0, #0]
	FLEXSPI2_LUTKEY = FLEXSPI_LUTKEY_VALUE;
600018aa:	6181      	str	r1, [r0, #24]
	FLEXSPI2_LUTCR = FLEXSPI_LUTCR_UNLOCK;
600018ac:	4b83      	ldr	r3, [pc, #524]	; (60001abc <configure_external_ram+0x328>)
	for (int i=0; i < 64; i++) luttable[i] = 0;
600018ae:	4984      	ldr	r1, [pc, #528]	; (60001ac0 <configure_external_ram+0x32c>)
	FLEXSPI2_LUTCR = FLEXSPI_LUTCR_UNLOCK;
600018b0:	61c4      	str	r4, [r0, #28]
	for (int i=0; i < 64; i++) luttable[i] = 0;
600018b2:	f843 2b04 	str.w	r2, [r3], #4
600018b6:	428b      	cmp	r3, r1
600018b8:	d1fb      	bne.n	600018b2 <configure_external_ram+0x11e>
	FLEXSPI2_MCR0 |= FLEXSPI_MCR0_SWRESET;
600018ba:	4a77      	ldr	r2, [pc, #476]	; (60001a98 <configure_external_ram+0x304>)
600018bc:	6813      	ldr	r3, [r2, #0]
600018be:	f043 0301 	orr.w	r3, r3, #1
600018c2:	6013      	str	r3, [r2, #0]
	while (FLEXSPI2_MCR0 & FLEXSPI_MCR0_SWRESET) ; // wait
600018c4:	6813      	ldr	r3, [r2, #0]
600018c6:	f013 0301 	ands.w	r3, r3, #1
600018ca:	d1fb      	bne.n	600018c4 <configure_external_ram+0x130>
	FLEXSPI2_LUTKEY = FLEXSPI_LUTKEY_VALUE;
600018cc:	487a      	ldr	r0, [pc, #488]	; (60001ab8 <configure_external_ram+0x324>)
	FLEXSPI2_LUTCR = FLEXSPI_LUTCR_UNLOCK;
600018ce:	2102      	movs	r1, #2
	FLEXSPI2_LUT0 = LUT0(CMD_SDR, PINS4, 0xF5);
600018d0:	f240 64f5 	movw	r4, #1781	; 0x6f5
	FLEXSPI2_LUTKEY = FLEXSPI_LUTKEY_VALUE;
600018d4:	6190      	str	r0, [r2, #24]
	FLEXSPI2_LUT8 = LUT0(CMD_SDR, PINS1, 0x99);
600018d6:	f240 4099 	movw	r0, #1177	; 0x499
	FLEXSPI2_LUTCR = FLEXSPI_LUTCR_UNLOCK;
600018da:	61d1      	str	r1, [r2, #28]
	FLEXSPI2_LUT4 = LUT0(CMD_SDR, PINS1, 0x66);
600018dc:	f240 4166 	movw	r1, #1126	; 0x466
	FLEXSPI2_LUT0 = LUT0(CMD_SDR, PINS4, 0xF5);
600018e0:	f8c2 4200 	str.w	r4, [r2, #512]	; 0x200
	FLEXSPI2_LUT13 = LUT0(READ_SDR, PINS1, 1);
600018e4:	f242 4401 	movw	r4, #9217	; 0x2401
	FLEXSPI2_LUT4 = LUT0(CMD_SDR, PINS1, 0x66);
600018e8:	f8c2 1210 	str.w	r1, [r2, #528]	; 0x210
	FLEXSPI2_LUT12 = LUT0(CMD_SDR, PINS1, 0x9F) | LUT1(DUMMY_SDR, PINS1, 24);
600018ec:	4975      	ldr	r1, [pc, #468]	; (60001ac4 <configure_external_ram+0x330>)
	FLEXSPI2_LUT8 = LUT0(CMD_SDR, PINS1, 0x99);
600018ee:	f8c2 0220 	str.w	r0, [r2, #544]	; 0x220
	FLEXSPI2_LUT12 = LUT0(CMD_SDR, PINS1, 0x9F) | LUT1(DUMMY_SDR, PINS1, 24);
600018f2:	f8c2 1230 	str.w	r1, [r2, #560]	; 0x230
	FLEXSPI2_LUT16 = LUT0(CMD_SDR, PINS1, 0x35);
600018f6:	f240 4135 	movw	r1, #1077	; 0x435
	FLEXSPI2_LUT20 = LUT0(CMD_SDR, PINS4, 0xEB) | LUT1(ADDR_SDR, PINS4, 24);
600018fa:	4873      	ldr	r0, [pc, #460]	; (60001ac8 <configure_external_ram+0x334>)
	FLEXSPI2_LUT13 = LUT0(READ_SDR, PINS1, 1);
600018fc:	f8c2 4234 	str.w	r4, [r2, #564]	; 0x234
	FLEXSPI2_LUT16 = LUT0(CMD_SDR, PINS1, 0x35);
60001900:	f8c2 1240 	str.w	r1, [r2, #576]	; 0x240
	FLEXSPI2_LUT24 = LUT0(CMD_SDR, PINS4, 0x38) | LUT1(ADDR_SDR, PINS4, 24);
60001904:	4c71      	ldr	r4, [pc, #452]	; (60001acc <configure_external_ram+0x338>)
	FLEXSPI2_LUT20 = LUT0(CMD_SDR, PINS4, 0xEB) | LUT1(ADDR_SDR, PINS4, 24);
60001906:	f8c2 0250 	str.w	r0, [r2, #592]	; 0x250
	FLEXSPI2_LUT25 = LUT0(WRITE_SDR, PINS4, 1);
6000190a:	f242 2001 	movw	r0, #8705	; 0x2201
	FLEXSPI2_LUT21 = LUT0(DUMMY_SDR, PINS4, 6) | LUT1(READ_SDR, PINS4, 1);
6000190e:	4970      	ldr	r1, [pc, #448]	; (60001ad0 <configure_external_ram+0x33c>)
60001910:	f8c2 1254 	str.w	r1, [r2, #596]	; 0x254
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001914:	2101      	movs	r1, #1
	FLEXSPI2_LUT24 = LUT0(CMD_SDR, PINS4, 0x38) | LUT1(ADDR_SDR, PINS4, 24);
60001916:	f8c2 4260 	str.w	r4, [r2, #608]	; 0x260
	FLEXSPI2_LUT25 = LUT0(WRITE_SDR, PINS4, 1);
6000191a:	f8c2 0264 	str.w	r0, [r2, #612]	; 0x264
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
6000191e:	485e      	ldr	r0, [pc, #376]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_IPCR0 = addr;
60001920:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001924:	f8c2 30a4 	str.w	r3, [r2, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001928:	f8c2 10b0 	str.w	r1, [r2, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
6000192c:	6943      	ldr	r3, [r0, #20]
6000192e:	07da      	lsls	r2, r3, #31
60001930:	d5fc      	bpl.n	6000192c <configure_external_ram+0x198>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
60001932:	2301      	movs	r3, #1
	FLEXSPI2_IPCR0 = addr;
60001934:	2400      	movs	r4, #0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001936:	f44f 3280 	mov.w	r2, #65536	; 0x10000
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
6000193a:	4957      	ldr	r1, [pc, #348]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
6000193c:	6143      	str	r3, [r0, #20]
	FLEXSPI2_IPCR0 = addr;
6000193e:	f8c0 40a0 	str.w	r4, [r0, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001942:	f8c0 20a4 	str.w	r2, [r0, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001946:	f8c0 30b0 	str.w	r3, [r0, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
6000194a:	694b      	ldr	r3, [r1, #20]
6000194c:	07db      	lsls	r3, r3, #31
6000194e:	d5fc      	bpl.n	6000194a <configure_external_ram+0x1b6>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
60001950:	2301      	movs	r3, #1
	FLEXSPI2_IPCR0 = addr;
60001952:	2400      	movs	r4, #0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001954:	f44f 3000 	mov.w	r0, #131072	; 0x20000
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001958:	4a4f      	ldr	r2, [pc, #316]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
6000195a:	614b      	str	r3, [r1, #20]
	FLEXSPI2_IPCR0 = addr;
6000195c:	f8c1 40a0 	str.w	r4, [r1, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001960:	f8c1 00a4 	str.w	r0, [r1, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001964:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001968:	6953      	ldr	r3, [r2, #20]
6000196a:	07df      	lsls	r7, r3, #31
6000196c:	d5fc      	bpl.n	60001968 <configure_external_ram+0x1d4>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
6000196e:	2301      	movs	r3, #1
	FLEXSPI2_IPCR0 = addr;
60001970:	2400      	movs	r4, #0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(3) | FLEXSPI_IPCR1_IDATSZ(4);
60001972:	4858      	ldr	r0, [pc, #352]	; (60001ad4 <configure_external_ram+0x340>)
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001974:	4948      	ldr	r1, [pc, #288]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
60001976:	6153      	str	r3, [r2, #20]
	FLEXSPI2_IPCR0 = addr;
60001978:	f8c2 40a0 	str.w	r4, [r2, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(3) | FLEXSPI_IPCR1_IDATSZ(4);
6000197c:	f8c2 00a4 	str.w	r0, [r2, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001980:	f8c2 30b0 	str.w	r3, [r2, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001984:	694b      	ldr	r3, [r1, #20]
60001986:	07de      	lsls	r6, r3, #31
60001988:	d5fc      	bpl.n	60001984 <configure_external_ram+0x1f0>
	uint32_t id = FLEXSPI2_RFDR0;
6000198a:	f8d1 3100 	ldr.w	r3, [r1, #256]	; 0x100
	if (flexspi2_psram_id(0) == 0x5D0D) {
6000198e:	f645 520d 	movw	r2, #23821	; 0x5d0d
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE | FLEXSPI_INTR_IPRXWA;
60001992:	2021      	movs	r0, #33	; 0x21
	return id & 0xFFFF;
60001994:	b29b      	uxth	r3, r3
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE | FLEXSPI_INTR_IPRXWA;
60001996:	6148      	str	r0, [r1, #20]
	if (flexspi2_psram_id(0) == 0x5D0D) {
60001998:	4293      	cmp	r3, r2
6000199a:	d165      	bne.n	60001a68 <configure_external_ram+0x2d4>
	FLEXSPI2_IPCR0 = addr;
6000199c:	2400      	movs	r4, #0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
6000199e:	f44f 2280 	mov.w	r2, #262144	; 0x40000
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
600019a2:	2301      	movs	r3, #1
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
600019a4:	483c      	ldr	r0, [pc, #240]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_IPCR0 = addr;
600019a6:	f8c1 40a0 	str.w	r4, [r1, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
600019aa:	f8c1 20a4 	str.w	r2, [r1, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
600019ae:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
600019b2:	6943      	ldr	r3, [r0, #20]
600019b4:	07dd      	lsls	r5, r3, #31
600019b6:	d5fc      	bpl.n	600019b2 <configure_external_ram+0x21e>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
600019b8:	2301      	movs	r3, #1
	FLEXSPI2_IPCR0 = addr;
600019ba:	f44f 0400 	mov.w	r4, #8388608	; 0x800000
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
600019be:	2100      	movs	r1, #0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
600019c0:	4a35      	ldr	r2, [pc, #212]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
600019c2:	6143      	str	r3, [r0, #20]
	FLEXSPI2_IPCR0 = addr;
600019c4:	f8c0 40a0 	str.w	r4, [r0, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
600019c8:	f8c0 10a4 	str.w	r1, [r0, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
600019cc:	f8c0 30b0 	str.w	r3, [r0, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
600019d0:	6953      	ldr	r3, [r2, #20]
600019d2:	07dc      	lsls	r4, r3, #31
600019d4:	d5fc      	bpl.n	600019d0 <configure_external_ram+0x23c>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
600019d6:	2301      	movs	r3, #1
	FLEXSPI2_IPCR0 = addr;
600019d8:	f44f 0400 	mov.w	r4, #8388608	; 0x800000
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
600019dc:	f44f 3080 	mov.w	r0, #65536	; 0x10000
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
600019e0:	492d      	ldr	r1, [pc, #180]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
600019e2:	6153      	str	r3, [r2, #20]
	FLEXSPI2_IPCR0 = addr;
600019e4:	f8c2 40a0 	str.w	r4, [r2, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
600019e8:	f8c2 00a4 	str.w	r0, [r2, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
600019ec:	f8c2 30b0 	str.w	r3, [r2, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
600019f0:	694b      	ldr	r3, [r1, #20]
600019f2:	07d8      	lsls	r0, r3, #31
600019f4:	d5fc      	bpl.n	600019f0 <configure_external_ram+0x25c>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
600019f6:	2301      	movs	r3, #1
	FLEXSPI2_IPCR0 = addr;
600019f8:	f44f 0400 	mov.w	r4, #8388608	; 0x800000
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
600019fc:	f44f 3000 	mov.w	r0, #131072	; 0x20000
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001a00:	4a25      	ldr	r2, [pc, #148]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
60001a02:	614b      	str	r3, [r1, #20]
	FLEXSPI2_IPCR0 = addr;
60001a04:	f8c1 40a0 	str.w	r4, [r1, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001a08:	f8c1 00a4 	str.w	r0, [r1, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001a0c:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001a10:	6953      	ldr	r3, [r2, #20]
60001a12:	07d9      	lsls	r1, r3, #31
60001a14:	d5fc      	bpl.n	60001a10 <configure_external_ram+0x27c>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
60001a16:	2301      	movs	r3, #1
	FLEXSPI2_IPCR0 = addr;
60001a18:	f44f 0400 	mov.w	r4, #8388608	; 0x800000
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(3) | FLEXSPI_IPCR1_IDATSZ(4);
60001a1c:	482d      	ldr	r0, [pc, #180]	; (60001ad4 <configure_external_ram+0x340>)
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001a1e:	491e      	ldr	r1, [pc, #120]	; (60001a98 <configure_external_ram+0x304>)
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
60001a20:	6153      	str	r3, [r2, #20]
	FLEXSPI2_IPCR0 = addr;
60001a22:	f8c2 40a0 	str.w	r4, [r2, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(3) | FLEXSPI_IPCR1_IDATSZ(4);
60001a26:	f8c2 00a4 	str.w	r0, [r2, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001a2a:	f8c2 30b0 	str.w	r3, [r2, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001a2e:	694b      	ldr	r3, [r1, #20]
60001a30:	07da      	lsls	r2, r3, #31
60001a32:	d5fc      	bpl.n	60001a2e <configure_external_ram+0x29a>
	uint32_t id = FLEXSPI2_RFDR0;
60001a34:	f8d1 3100 	ldr.w	r3, [r1, #256]	; 0x100
		if (flexspi2_psram_id(0x800000) == 0x5D0D) {
60001a38:	f645 520d 	movw	r2, #23821	; 0x5d0d
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE | FLEXSPI_INTR_IPRXWA;
60001a3c:	2021      	movs	r0, #33	; 0x21
	return id & 0xFFFF;
60001a3e:	b29b      	uxth	r3, r3
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE | FLEXSPI_INTR_IPRXWA;
60001a40:	6148      	str	r0, [r1, #20]
		if (flexspi2_psram_id(0x800000) == 0x5D0D) {
60001a42:	4293      	cmp	r3, r2
60001a44:	d050      	beq.n	60001ae8 <configure_external_ram+0x354>
60001a46:	2508      	movs	r5, #8
60001a48:	f44f 0400 	mov.w	r4, #8388608	; 0x800000
			external_psram_size * 0x100000 -
60001a4c:	4922      	ldr	r1, [pc, #136]	; (60001ad8 <configure_external_ram+0x344>)
		sm_set_pool(&extmem_smalloc_pool, &_extram_end,
60001a4e:	2000      	movs	r0, #0
			external_psram_size * 0x100000 -
60001a50:	4b22      	ldr	r3, [pc, #136]	; (60001adc <configure_external_ram+0x348>)
			external_psram_size = 16;
60001a52:	4a23      	ldr	r2, [pc, #140]	; (60001ae0 <configure_external_ram+0x34c>)
		sm_set_pool(&extmem_smalloc_pool, &_extram_end,
60001a54:	9000      	str	r0, [sp, #0]
			external_psram_size = 16;
60001a56:	7015      	strb	r5, [r2, #0]
			external_psram_size * 0x100000 -
60001a58:	1a5a      	subs	r2, r3, r1
		sm_set_pool(&extmem_smalloc_pool, &_extram_end,
60001a5a:	2301      	movs	r3, #1
60001a5c:	4821      	ldr	r0, [pc, #132]	; (60001ae4 <configure_external_ram+0x350>)
60001a5e:	4422      	add	r2, r4
60001a60:	f000 f9f6 	bl	60001e50 <__sm_set_pool_veneer>
}
60001a64:	b003      	add	sp, #12
60001a66:	bdf0      	pop	{r4, r5, r6, r7, pc}
		memset(&extmem_smalloc_pool, 0, sizeof(extmem_smalloc_pool));
60001a68:	4b1e      	ldr	r3, [pc, #120]	; (60001ae4 <configure_external_ram+0x350>)
60001a6a:	2200      	movs	r2, #0
60001a6c:	e9c3 2200 	strd	r2, r2, [r3]
60001a70:	e9c3 2202 	strd	r2, r2, [r3, #8]
}
60001a74:	b003      	add	sp, #12
60001a76:	bdf0      	pop	{r4, r5, r6, r7, pc}
60001a78:	401f8000 	.word	0x401f8000
60001a7c:	0001b0f9 	.word	0x0001b0f9
60001a80:	000110f9 	.word	0x000110f9
60001a84:	401f8400 	.word	0x401f8400
60001a88:	000170f9 	.word	0x000170f9
60001a8c:	400fc000 	.word	0x400fc000
60001a90:	1ffffcff 	.word	0x1ffffcff
60001a94:	a0000300 	.word	0xa0000300
60001a98:	402a4000 	.word	0x402a4000
60001a9c:	402a8000 	.word	0x402a8000
60001aa0:	ffff0012 	.word	0xffff0012
60001aa4:	00f737ff 	.word	0x00f737ff
60001aa8:	80000040 	.word	0x80000040
60001aac:	7cf0ff00 	.word	0x7cf0ff00
60001ab0:	830f00ff 	.word	0x830f00ff
60001ab4:	00020063 	.word	0x00020063
60001ab8:	5af05af0 	.word	0x5af05af0
60001abc:	402a4200 	.word	0x402a4200
60001ac0:	402a4300 	.word	0x402a4300
60001ac4:	3018049f 	.word	0x3018049f
60001ac8:	0a1806eb 	.word	0x0a1806eb
60001acc:	0a180638 	.word	0x0a180638
60001ad0:	26013206 	.word	0x26013206
60001ad4:	00030004 	.word	0x00030004
60001ad8:	70000000 	.word	0x70000000
60001adc:	70000000 	.word	0x70000000
60001ae0:	20003cb3 	.word	0x20003cb3
60001ae4:	20003c08 	.word	0x20003c08
	FLEXSPI2_IPCR0 = addr;
60001ae8:	f44f 0400 	mov.w	r4, #8388608	; 0x800000
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001aec:	f44f 2280 	mov.w	r2, #262144	; 0x40000
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001af0:	2301      	movs	r3, #1
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001af2:	4808      	ldr	r0, [pc, #32]	; (60001b14 <configure_external_ram+0x380>)
	FLEXSPI2_IPCR0 = addr;
60001af4:	f8c1 40a0 	str.w	r4, [r1, #160]	; 0xa0
	FLEXSPI2_IPCR1 = FLEXSPI_IPCR1_ISEQID(index);
60001af8:	f8c1 20a4 	str.w	r2, [r1, #164]	; 0xa4
	FLEXSPI2_IPCMD = FLEXSPI_IPCMD_TRG;
60001afc:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0
	while (!(FLEXSPI2_INTR & FLEXSPI_INTR_IPCMDDONE)); // wait
60001b00:	6943      	ldr	r3, [r0, #20]
60001b02:	07db      	lsls	r3, r3, #31
60001b04:	d5fc      	bpl.n	60001b00 <configure_external_ram+0x36c>
	FLEXSPI2_INTR = FLEXSPI_INTR_IPCMDDONE;
60001b06:	2301      	movs	r3, #1
60001b08:	2510      	movs	r5, #16
60001b0a:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
60001b0e:	6143      	str	r3, [r0, #20]
			external_psram_size = 16;
60001b10:	e79c      	b.n	60001a4c <configure_external_ram+0x2b8>
60001b12:	bf00      	nop
60001b14:	402a4000 	.word	0x402a4000

60001b18 <usb_pll_start>:
{
60001b18:	b4f0      	push	{r4, r5, r6, r7}
		uint32_t n = CCM_ANALOG_PLL_USB1; // pg 759
60001b1a:	4a15      	ldr	r2, [pc, #84]	; (60001b70 <usb_pll_start+0x58>)
			CCM_ANALOG_PLL_USB1_SET = CCM_ANALOG_PLL_USB1_EN_USB_CLKS;
60001b1c:	2740      	movs	r7, #64	; 0x40
			CCM_ANALOG_PLL_USB1_CLR = CCM_ANALOG_PLL_USB1_BYPASS;
60001b1e:	f44f 3180 	mov.w	r1, #65536	; 0x10000
			CCM_ANALOG_PLL_USB1_SET = CCM_ANALOG_PLL_USB1_POWER;
60001b22:	f44f 5680 	mov.w	r6, #4096	; 0x1000
			CCM_ANALOG_PLL_USB1_SET = CCM_ANALOG_PLL_USB1_ENABLE;
60001b26:	f44f 5500 	mov.w	r5, #8192	; 0x2000
			CCM_ANALOG_PLL_USB1_CLR = 0xC000;			// bypass 24 MHz
60001b2a:	f44f 4440 	mov.w	r4, #49152	; 0xc000
			CCM_ANALOG_PLL_USB1_CLR = CCM_ANALOG_PLL_USB1_POWER |	// power down
60001b2e:	f243 0042 	movw	r0, #12354	; 0x3042
		uint32_t n = CCM_ANALOG_PLL_USB1; // pg 759
60001b32:	6913      	ldr	r3, [r2, #16]
		if (n & CCM_ANALOG_PLL_USB1_DIV_SELECT) {
60001b34:	f013 0f02 	tst.w	r3, #2
60001b38:	d10e      	bne.n	60001b58 <usb_pll_start+0x40>
		if (!(n & CCM_ANALOG_PLL_USB1_ENABLE)) {
60001b3a:	f413 5f00 	tst.w	r3, #8192	; 0x2000
60001b3e:	d00f      	beq.n	60001b60 <usb_pll_start+0x48>
		if (!(n & CCM_ANALOG_PLL_USB1_POWER)) {
60001b40:	f413 5f80 	tst.w	r3, #4096	; 0x1000
60001b44:	d00e      	beq.n	60001b64 <usb_pll_start+0x4c>
		if (!(n & CCM_ANALOG_PLL_USB1_LOCK)) {
60001b46:	2b00      	cmp	r3, #0
60001b48:	daf3      	bge.n	60001b32 <usb_pll_start+0x1a>
		if (n & CCM_ANALOG_PLL_USB1_BYPASS) {
60001b4a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
60001b4e:	d10b      	bne.n	60001b68 <usb_pll_start+0x50>
		if (!(n & CCM_ANALOG_PLL_USB1_EN_USB_CLKS)) {
60001b50:	065b      	lsls	r3, r3, #25
60001b52:	d50b      	bpl.n	60001b6c <usb_pll_start+0x54>
}
60001b54:	bcf0      	pop	{r4, r5, r6, r7}
60001b56:	4770      	bx	lr
			CCM_ANALOG_PLL_USB1_CLR = 0xC000;			// bypass 24 MHz
60001b58:	6194      	str	r4, [r2, #24]
			CCM_ANALOG_PLL_USB1_SET = CCM_ANALOG_PLL_USB1_BYPASS;	// bypass
60001b5a:	6151      	str	r1, [r2, #20]
			CCM_ANALOG_PLL_USB1_CLR = CCM_ANALOG_PLL_USB1_POWER |	// power down
60001b5c:	6190      	str	r0, [r2, #24]
			continue;
60001b5e:	e7e8      	b.n	60001b32 <usb_pll_start+0x1a>
			CCM_ANALOG_PLL_USB1_SET = CCM_ANALOG_PLL_USB1_ENABLE;
60001b60:	6155      	str	r5, [r2, #20]
			continue;
60001b62:	e7e6      	b.n	60001b32 <usb_pll_start+0x1a>
			CCM_ANALOG_PLL_USB1_SET = CCM_ANALOG_PLL_USB1_POWER;
60001b64:	6156      	str	r6, [r2, #20]
			continue;
60001b66:	e7e4      	b.n	60001b32 <usb_pll_start+0x1a>
			CCM_ANALOG_PLL_USB1_CLR = CCM_ANALOG_PLL_USB1_BYPASS;
60001b68:	6191      	str	r1, [r2, #24]
			continue;
60001b6a:	e7e2      	b.n	60001b32 <usb_pll_start+0x1a>
			CCM_ANALOG_PLL_USB1_SET = CCM_ANALOG_PLL_USB1_EN_USB_CLKS;
60001b6c:	6157      	str	r7, [r2, #20]
			continue;
60001b6e:	e7e0      	b.n	60001b32 <usb_pll_start+0x1a>
60001b70:	400d8000 	.word	0x400d8000

60001b74 <tempmon_init>:
  uint32_t calibrationData;
  uint32_t roomCount;
  uint32_t tempCodeVal;
      
  //first power on the temperature sensor - no register change
  TEMPMON_TEMPSENSE0 &= ~0x1U;
60001b74:	4a3f      	ldr	r2, [pc, #252]	; (60001c74 <tempmon_init+0x100>)

  //set monitoring frequency - no register change
  TEMPMON_TEMPSENSE1 = (((uint32_t)(((uint32_t)(frequency)) << 0U)) & 0xFFFFU);
60001b76:	2003      	movs	r0, #3
  
  //read calibration data - this works
  calibrationData = HW_OCOTP_ANA1;
60001b78:	493f      	ldr	r1, [pc, #252]	; (60001c78 <tempmon_init+0x104>)
    s_hotTemp = (uint32_t)(calibrationData & 0xFFU) >> 0x00U;
    s_hotCount = (uint32_t)(calibrationData & 0xFFF00U) >> 0X08U;
    roomCount = (uint32_t)(calibrationData & 0xFFF00000U) >> 0x14U;
    s_hot_ROOM = (float) (s_hotTemp) - 25.0f;
60001b7a:	eef3 5a09 	vmov.f32	s11, #57	; 0x41c80000  25.0
  TEMPMON_TEMPSENSE0 &= ~0x1U;
60001b7e:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
  
  //Start temp monitoring
  TEMPMON_TEMPSENSE0 |= 0x2U;   //starts temp monitoring

  //PANIC shutdown:
  NVIC_SET_PRIORITY(IRQ_TEMPERATURE_PANIC, 0);
60001b82:	f04f 0c00 	mov.w	ip, #0
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - highAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001b86:	ed9f 6a3d 	vldr	s12, [pc, #244]	; 60001c7c <tempmon_init+0x108>
  TEMPMON_TEMPSENSE0 &= ~0x1U;
60001b8a:	f023 0301 	bic.w	r3, r3, #1
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - panicAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001b8e:	ed9f 5a3c 	vldr	s10, [pc, #240]	; 60001c80 <tempmon_init+0x10c>
{
60001b92:	b430      	push	{r4, r5}
  TEMPMON_TEMPSENSE0 &= ~0x1U;
60001b94:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
  TEMPMON_TEMPSENSE1 = (((uint32_t)(((uint32_t)(frequency)) << 0U)) & 0xFFFFU);
60001b98:	f8c2 0090 	str.w	r0, [r2, #144]	; 0x90
  calibrationData = HW_OCOTP_ANA1;
60001b9c:	f8d1 10e0 	ldr.w	r1, [r1, #224]	; 0xe0
    s_hotTemp = (uint32_t)(calibrationData & 0xFFU) >> 0x00U;
60001ba0:	4d38      	ldr	r5, [pc, #224]	; (60001c84 <tempmon_init+0x110>)
60001ba2:	b2cb      	uxtb	r3, r1
    s_hotCount = (uint32_t)(calibrationData & 0xFFF00U) >> 0X08U;
60001ba4:	4c38      	ldr	r4, [pc, #224]	; (60001c88 <tempmon_init+0x114>)
    s_hot_ROOM = (float) (s_hotTemp) - 25.0f;
60001ba6:	4839      	ldr	r0, [pc, #228]	; (60001c8c <tempmon_init+0x118>)
    s_hotTemp = (uint32_t)(calibrationData & 0xFFU) >> 0x00U;
60001ba8:	602b      	str	r3, [r5, #0]
    s_hot_ROOM = (float) (s_hotTemp) - 25.0f;
60001baa:	ee07 3a90 	vmov	s15, r3
    roomCount = (uint32_t)(calibrationData & 0xFFF00000U) >> 0x14U;
60001bae:	0d0b      	lsrs	r3, r1, #20
    s_hotCount = (uint32_t)(calibrationData & 0xFFF00U) >> 0X08U;
60001bb0:	f3c1 210b 	ubfx	r1, r1, #8, #12
    s_hot_ROOM = (float) (s_hotTemp) - 25.0f;
60001bb4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    roomCount = (uint32_t)(calibrationData & 0xFFF00000U) >> 0x14U;
60001bb8:	ee06 3a90 	vmov	s13, r3
    s_roomC_hotC = (float) roomCount - (float) s_hotCount;
60001bbc:	ee07 1a10 	vmov	s14, r1
60001bc0:	4b33      	ldr	r3, [pc, #204]	; (60001c90 <tempmon_init+0x11c>)
60001bc2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
    s_hotCount = (uint32_t)(calibrationData & 0xFFF00U) >> 0X08U;
60001bc6:	6021      	str	r1, [r4, #0]
    s_roomC_hotC = (float) roomCount - (float) s_hotCount;
60001bc8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
    TEMPMON_TEMPSENSE2 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 16U)) & 0xFFF0000U);
60001bcc:	4931      	ldr	r1, [pc, #196]	; (60001c94 <tempmon_init+0x120>)
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - highAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001bce:	ee37 6ac6 	vsub.f32	s12, s15, s12
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - panicAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001bd2:	ee37 5ac5 	vsub.f32	s10, s15, s10
    s_roomC_hotC = (float) roomCount - (float) s_hotCount;
60001bd6:	ee76 6ac7 	vsub.f32	s13, s13, s14
    s_hot_ROOM = (float) (s_hotTemp) - 25.0f;
60001bda:	ee77 7ae5 	vsub.f32	s15, s15, s11
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - highAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001bde:	ee26 6a26 	vmul.f32	s12, s12, s13
    s_roomC_hotC = (float) roomCount - (float) s_hotCount;
60001be2:	edc3 6a00 	vstr	s13, [r3]
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - panicAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001be6:	ee25 5a26 	vmul.f32	s10, s10, s13
    TEMPMON_TEMPSENSE0 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 20U)) & 0xFFF00000U);
60001bea:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - lowAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001bee:	ee67 4aa6 	vmul.f32	s9, s15, s13
    s_hot_ROOM = (float) (s_hotTemp) - 25.0f;
60001bf2:	edc0 7a00 	vstr	s15, [r0]
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - highAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001bf6:	eec6 5a27 	vdiv.f32	s11, s12, s15
  NVIC_SET_PRIORITY(IRQ_TEMPERATURE_PANIC, 0);
60001bfa:	4827      	ldr	r0, [pc, #156]	; (60001c98 <tempmon_init+0x124>)
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - panicAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001bfc:	ee85 6a27 	vdiv.f32	s12, s10, s15
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - lowAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001c00:	eec4 6aa7 	vdiv.f32	s13, s9, s15
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - highAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001c04:	ee75 5a87 	vadd.f32	s11, s11, s14
60001c08:	eefc 5ae5 	vcvt.u32.f32	s11, s11
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - panicAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001c0c:	ee36 6a07 	vadd.f32	s12, s12, s14
    TEMPMON_TEMPSENSE0 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 20U)) & 0xFFF00000U);
60001c10:	ee15 4a90 	vmov	r4, s11
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - panicAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001c14:	eebc 6ac6 	vcvt.u32.f32	s12, s12
    TEMPMON_TEMPSENSE0 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 20U)) & 0xFFF00000U);
60001c18:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - lowAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001c1c:	ee76 7a87 	vadd.f32	s15, s13, s14
    TEMPMON_TEMPSENSE0 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 20U)) & 0xFFF00000U);
60001c20:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
    TEMPMON_TEMPSENSE2 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 16U)) & 0xFFF0000U);
60001c24:	ee16 3a10 	vmov	r3, s12
60001c28:	f8d2 4190 	ldr.w	r4, [r2, #400]	; 0x190
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - lowAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001c2c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
    TEMPMON_TEMPSENSE2 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 16U)) & 0xFFF0000U);
60001c30:	ea01 4103 	and.w	r1, r1, r3, lsl #16
60001c34:	4321      	orrs	r1, r4
  tempCodeVal = ((float)s_hotCount + ((float)s_hotTemp - lowAlarmTemp) * s_roomC_hotC / s_hot_ROOM);
60001c36:	ee17 3a90 	vmov	r3, s15
    TEMPMON_TEMPSENSE2 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 16U)) & 0xFFF0000U);
60001c3a:	f8c2 1190 	str.w	r1, [r2, #400]	; 0x190
    TEMPMON_TEMPSENSE2 |= (((uint32_t)(((uint32_t)(tempCodeVal)) << 0U)) & 0xFFFU);
60001c3e:	f3c3 030b 	ubfx	r3, r3, #0, #12
60001c42:	f8d2 1190 	ldr.w	r1, [r2, #400]	; 0x190
60001c46:	430b      	orrs	r3, r1
static inline void attachInterruptVector(IRQ_NUMBER_t irq, void (*function)(void)) __attribute__((always_inline, unused));
static inline void attachInterruptVector(IRQ_NUMBER_t irq, void (*function)(void)) { _VectorsRam[irq + 16] = function; asm volatile("": : :"memory"); }
#else
extern void (* volatile _VectorsRam[NVIC_NUM_INTERRUPTS+16])(void);
static inline void attachInterruptVector(enum IRQ_NUMBER_t irq, void (*function)(void)) __attribute__((always_inline, unused));
static inline void attachInterruptVector(enum IRQ_NUMBER_t irq, void (*function)(void)) { _VectorsRam[irq + 16] = function; asm volatile("": : :"memory"); }
60001c48:	4914      	ldr	r1, [pc, #80]	; (60001c9c <tempmon_init+0x128>)
60001c4a:	f8c2 3190 	str.w	r3, [r2, #400]	; 0x190
  TEMPMON_TEMPSENSE0 |= 0x2U;   //starts temp monitoring
60001c4e:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
60001c52:	f043 0302 	orr.w	r3, r3, #2
60001c56:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
60001c5a:	4b11      	ldr	r3, [pc, #68]	; (60001ca0 <tempmon_init+0x12c>)
  NVIC_SET_PRIORITY(IRQ_TEMPERATURE_PANIC, 0);
60001c5c:	f880 c040 	strb.w	ip, [r0, #64]	; 0x40
60001c60:	f8c1 3140 	str.w	r3, [r1, #320]	; 0x140
  attachInterruptVector(IRQ_TEMPERATURE_PANIC, &Panic_Temp_isr);
  NVIC_ENABLE_IRQ(IRQ_TEMPERATURE_PANIC);
60001c64:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
60001c68:	2201      	movs	r2, #1
}
60001c6a:	bc30      	pop	{r4, r5}
  NVIC_ENABLE_IRQ(IRQ_TEMPERATURE_PANIC);
60001c6c:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
}
60001c70:	4770      	bx	lr
60001c72:	bf00      	nop
60001c74:	400d8100 	.word	0x400d8100
60001c78:	401f4400 	.word	0x401f4400
60001c7c:	42aa0000 	.word	0x42aa0000
60001c80:	42b40000 	.word	0x42b40000
60001c84:	20003c78 	.word	0x20003c78
60001c88:	20003c74 	.word	0x20003c74
60001c8c:	20003c7c 	.word	0x20003c7c
60001c90:	20003c80 	.word	0x20003c80
60001c94:	0fff0000 	.word	0x0fff0000
60001c98:	e000e400 	.word	0xe000e400
60001c9c:	20003400 	.word	0x20003400
60001ca0:	000009c9 	.word	0x000009c9

60001ca4 <usb_init>:
FLASHMEM void usb_init(void)
{
	// TODO: only enable when VBUS detected
	// TODO: return to low power mode when VBUS removed
	// TODO: protect PMU access with MPU
	PMU_REG_3P0 = PMU_REG_3P0_OUTPUT_TRG(0x0F) | PMU_REG_3P0_BO_OFFSET(6)
60001ca4:	4b31      	ldr	r3, [pc, #196]	; (60001d6c <usb_init+0xc8>)
60001ca6:	f640 7261 	movw	r2, #3937	; 0xf61
{
60001caa:	b510      	push	{r4, lr}
	PMU_REG_3P0 = PMU_REG_3P0_OUTPUT_TRG(0x0F) | PMU_REG_3P0_BO_OFFSET(6)
60001cac:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120

	CCM_CCGR6 |= CCM_CCGR6_USBOH3(CCM_CCGR_ON); // turn on clocks to USB peripheral
	
	printf("BURSTSIZE=%08lX\n", USB1_BURSTSIZE);
	//USB1_BURSTSIZE = USB_BURSTSIZE_TXPBURST(4) | USB_BURSTSIZE_RXPBURST(4);
	USB1_BURSTSIZE = 0x0404;
60001cb0:	f240 4404 	movw	r4, #1028	; 0x404
	usb_init_serialnumber();
60001cb4:	f000 f8d8 	bl	60001e68 <__usb_init_serialnumber_veneer>
	CCM_CCGR6 |= CCM_CCGR6_USBOH3(CCM_CCGR_ON); // turn on clocks to USB peripheral
60001cb8:	4a2d      	ldr	r2, [pc, #180]	; (60001d70 <usb_init+0xcc>)
	USB1_BURSTSIZE = 0x0404;
60001cba:	492e      	ldr	r1, [pc, #184]	; (60001d74 <usb_init+0xd0>)
	CCM_CCGR6 |= CCM_CCGR6_USBOH3(CCM_CCGR_ON); // turn on clocks to USB peripheral
60001cbc:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
	//printf("USB1_USBMODE=%08lX\n", USB1_USBMODE);

	// turn on PLL3, wait for 480 MHz lock?
	// turn on CCM clock gates?  CCGR6[CG0]
#if 1
	if ((USBPHY1_PWD & (USBPHY_PWD_RXPWDRX | USBPHY_PWD_RXPWDDIFF | USBPHY_PWD_RXPWD1PT1
60001cc0:	482d      	ldr	r0, [pc, #180]	; (60001d78 <usb_init+0xd4>)
	CCM_CCGR6 |= CCM_CCGR6_USBOH3(CCM_CCGR_ON); // turn on clocks to USB peripheral
60001cc2:	f043 0303 	orr.w	r3, r3, #3
60001cc6:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
	if ((USBPHY1_PWD & (USBPHY_PWD_RXPWDRX | USBPHY_PWD_RXPWDDIFF | USBPHY_PWD_RXPWD1PT1
60001cca:	4b2c      	ldr	r3, [pc, #176]	; (60001d7c <usb_init+0xd8>)
	USB1_BURSTSIZE = 0x0404;
60001ccc:	f8c1 4160 	str.w	r4, [r1, #352]	; 0x160
	if ((USBPHY1_PWD & (USBPHY_PWD_RXPWDRX | USBPHY_PWD_RXPWDDIFF | USBPHY_PWD_RXPWD1PT1
60001cd0:	6802      	ldr	r2, [r0, #0]
60001cd2:	421a      	tst	r2, r3
60001cd4:	d103      	bne.n	60001cde <usb_init+0x3a>
	  | USBPHY_PWD_RXPWDENV | USBPHY_PWD_TXPWDV2I | USBPHY_PWD_TXPWDIBIAS
	  | USBPHY_PWD_TXPWDFS)) || (USB1_USBMODE & USB_USBMODE_CM_MASK)) {
60001cd6:	f8d1 31a8 	ldr.w	r3, [r1, #424]	; 0x1a8
60001cda:	079a      	lsls	r2, r3, #30
60001cdc:	d01b      	beq.n	60001d16 <usb_init+0x72>
		// USB controller is turned on from previous use
		// reset needed to turn it off & start from clean slate
		USBPHY1_CTRL_SET = USBPHY_CTRL_SFTRST; // USBPHY1_CTRL page 3292
		USB1_USBCMD |= USB_USBCMD_RST; // reset controller
60001cde:	4a25      	ldr	r2, [pc, #148]	; (60001d74 <usb_init+0xd0>)
		USBPHY1_CTRL_SET = USBPHY_CTRL_SFTRST; // USBPHY1_CTRL page 3292
60001ce0:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
60001ce4:	4b24      	ldr	r3, [pc, #144]	; (60001d78 <usb_init+0xd4>)
60001ce6:	6359      	str	r1, [r3, #52]	; 0x34
		USB1_USBCMD |= USB_USBCMD_RST; // reset controller
60001ce8:	f8d2 3140 	ldr.w	r3, [r2, #320]	; 0x140
60001cec:	f043 0302 	orr.w	r3, r3, #2
60001cf0:	f8c2 3140 	str.w	r3, [r2, #320]	; 0x140
		int count=0;
		while (USB1_USBCMD & USB_USBCMD_RST) count++;
60001cf4:	f8d2 3140 	ldr.w	r3, [r2, #320]	; 0x140
60001cf8:	079b      	lsls	r3, r3, #30
60001cfa:	d4fb      	bmi.n	60001cf4 <usb_init+0x50>
		NVIC_CLEAR_PENDING(IRQ_USB1);
60001cfc:	f44f 3000 	mov.w	r0, #131072	; 0x20000
60001d00:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
		USBPHY1_CTRL_CLR = USBPHY_CTRL_SFTRST; // reset PHY
60001d04:	4b1c      	ldr	r3, [pc, #112]	; (60001d78 <usb_init+0xd4>)
60001d06:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
		NVIC_CLEAR_PENDING(IRQ_USB1);
60001d0a:	f8c1 028c 	str.w	r0, [r1, #652]	; 0x28c
		//printf("USBPHY1_PWD=%08lX\n", USBPHY1_PWD);
		//printf("USBPHY1_TX=%08lX\n", USBPHY1_TX);
		//printf("USBPHY1_RX=%08lX\n", USBPHY1_RX);
		//printf("USBPHY1_CTRL=%08lX\n", USBPHY1_CTRL);
		//printf("USB1_USBMODE=%08lX\n", USB1_USBMODE);
		delay(25);
60001d0e:	2019      	movs	r0, #25
		USBPHY1_CTRL_CLR = USBPHY_CTRL_SFTRST; // reset PHY
60001d10:	639a      	str	r2, [r3, #56]	; 0x38
		delay(25);
60001d12:	f000 f8a5 	bl	60001e60 <__delay_veneer>
	// ENDPTFLUSH	pg 3247
	// ENDPTSTAT	pg 3247
	// ENDPTCOMPLETE   3248
	// ENDPTCTRL0	pg 3249

	USBPHY1_CTRL_CLR = USBPHY_CTRL_CLKGATE;
60001d16:	4a18      	ldr	r2, [pc, #96]	; (60001d78 <usb_init+0xd4>)
60001d18:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
	USBPHY1_PWD = 0;
	//printf("USBPHY1_PWD=%08lX\n", USBPHY1_PWD);
	//printf("USBPHY1_CTRL=%08lX\n", USBPHY1_CTRL);

	USB1_USBMODE = USB_USBMODE_CM(2) | USB_USBMODE_SLOM;
60001d1c:	4c15      	ldr	r4, [pc, #84]	; (60001d74 <usb_init+0xd0>)
	USBPHY1_PWD = 0;
60001d1e:	2100      	movs	r1, #0
	USBPHY1_CTRL_CLR = USBPHY_CTRL_CLKGATE;
60001d20:	6390      	str	r0, [r2, #56]	; 0x38
	USB1_USBMODE = USB_USBMODE_CM(2) | USB_USBMODE_SLOM;
60001d22:	200a      	movs	r0, #10
	memset(endpoint_queue_head, 0, sizeof(endpoint_queue_head));
60001d24:	4b16      	ldr	r3, [pc, #88]	; (60001d80 <usb_init+0xdc>)
	USBPHY1_PWD = 0;
60001d26:	6011      	str	r1, [r2, #0]
	memset(endpoint_queue_head, 0, sizeof(endpoint_queue_head));
60001d28:	f44f 7220 	mov.w	r2, #640	; 0x280
	USB1_USBMODE = USB_USBMODE_CM(2) | USB_USBMODE_SLOM;
60001d2c:	f8c4 01a8 	str.w	r0, [r4, #424]	; 0x1a8
	memset(endpoint_queue_head, 0, sizeof(endpoint_queue_head));
60001d30:	4618      	mov	r0, r3
60001d32:	f000 f8a1 	bl	60001e78 <__memset_veneer>
	endpoint_queue_head[0].config = (64 << 16) | (1 << 15);
	endpoint_queue_head[1].config = (64 << 16);
60001d36:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
	memset(endpoint_queue_head, 0, sizeof(endpoint_queue_head));
60001d3a:	4603      	mov	r3, r0
	endpoint_queue_head[0].config = (64 << 16) | (1 << 15);
60001d3c:	f44f 0081 	mov.w	r0, #4227072	; 0x408000
	USB1_ENDPOINTLISTADDR = (uint32_t)&endpoint_queue_head;
	//  Recommended: enable all device interrupts including: USBINT, USBERRINT,
	// Port Change Detect, USB Reset Received, DCSuspend.
	USB1_USBINTR = USB_USBINTR_UE | USB_USBINTR_UEE | /* USB_USBINTR_PCE | */
60001d40:	f240 1143 	movw	r1, #323	; 0x143
	endpoint_queue_head[0].config = (64 << 16) | (1 << 15);
60001d44:	6018      	str	r0, [r3, #0]
	USB1_ENDPOINTLISTADDR = (uint32_t)&endpoint_queue_head;
60001d46:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
	endpoint_queue_head[1].config = (64 << 16);
60001d4a:	641a      	str	r2, [r3, #64]	; 0x40
60001d4c:	4b0d      	ldr	r3, [pc, #52]	; (60001d84 <usb_init+0xe0>)
60001d4e:	4a0e      	ldr	r2, [pc, #56]	; (60001d88 <usb_init+0xe4>)
	USB1_USBINTR = USB_USBINTR_UE | USB_USBINTR_UEE | /* USB_USBINTR_PCE | */
60001d50:	f8c4 1148 	str.w	r1, [r4, #328]	; 0x148
60001d54:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
		USB_USBINTR_URE | USB_USBINTR_SLE;
	//_VectorsRam[IRQ_USB1+16] = &usb_isr;
	attachInterruptVector(IRQ_USB1, &usb_isr);
	NVIC_ENABLE_IRQ(IRQ_USB1);
60001d58:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
60001d5c:	f44f 3100 	mov.w	r1, #131072	; 0x20000
	//printf("USB1_ENDPTCTRL0=%08lX\n", USB1_ENDPTCTRL0);
	//printf("USB1_ENDPTCTRL1=%08lX\n", USB1_ENDPTCTRL1);
	//printf("USB1_ENDPTCTRL2=%08lX\n", USB1_ENDPTCTRL2);
	//printf("USB1_ENDPTCTRL3=%08lX\n", USB1_ENDPTCTRL3);
	USB1_USBCMD = USB_USBCMD_RS;
60001d60:	2301      	movs	r3, #1
	NVIC_ENABLE_IRQ(IRQ_USB1);
60001d62:	f8c2 110c 	str.w	r1, [r2, #268]	; 0x10c
	USB1_USBCMD = USB_USBCMD_RS;
60001d66:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
	//transfer_log_head = 0;
	//transfer_log_count = 0;
	//USB1_PORTSC1 |= USB_PORTSC1_PFSC; // force 12 Mbit/sec
}
60001d6a:	bd10      	pop	{r4, pc}
60001d6c:	400d8000 	.word	0x400d8000
60001d70:	400fc000 	.word	0x400fc000
60001d74:	402e0000 	.word	0x402e0000
60001d78:	400d9000 	.word	0x400d9000
60001d7c:	001e1c00 	.word	0x001e1c00
60001d80:	20000000 	.word	0x20000000
60001d84:	20003400 	.word	0x20003400
60001d88:	00000bb1 	.word	0x00000bb1

60001d8c <_reboot_Teensyduino_>:


FLASHMEM __attribute__((noinline)) void _reboot_Teensyduino_(void)
{
60001d8c:	b508      	push	{r3, lr}
	if (!(HW_OCOTP_CFG5 & 0x02)) {
60001d8e:	4b0e      	ldr	r3, [pc, #56]	; (60001dc8 <_reboot_Teensyduino_+0x3c>)
60001d90:	6e1b      	ldr	r3, [r3, #96]	; 0x60
60001d92:	079b      	lsls	r3, r3, #30
60001d94:	d400      	bmi.n	60001d98 <_reboot_Teensyduino_+0xc>
		asm("bkpt #251"); // run bootloader
60001d96:	befb      	bkpt	0x00fb
	} else {
		__disable_irq(); // secure mode NXP ROM reboot
60001d98:	b672      	cpsid	i
		USB1_USBCMD = 0;
60001d9a:	4b0c      	ldr	r3, [pc, #48]	; (60001dcc <_reboot_Teensyduino_+0x40>)
60001d9c:	2000      	movs	r0, #0
		IOMUXC_GPR_GPR16 = 0x00200003;
60001d9e:	4a0c      	ldr	r2, [pc, #48]	; (60001dd0 <_reboot_Teensyduino_+0x44>)
		USB1_USBCMD = 0;
60001da0:	f8c3 0140 	str.w	r0, [r3, #320]	; 0x140
		// TODO: wipe all RAM for security
		__asm__ volatile("mov sp, %0" : : "r" (0x20201000) : );
60001da4:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
		IOMUXC_GPR_GPR16 = 0x00200003;
60001da8:	490a      	ldr	r1, [pc, #40]	; (60001dd4 <_reboot_Teensyduino_+0x48>)
		__asm__ volatile("mov sp, %0" : : "r" (0x20201000) : );
60001daa:	f5a3 235f 	sub.w	r3, r3, #913408	; 0xdf000
		IOMUXC_GPR_GPR16 = 0x00200003;
60001dae:	6411      	str	r1, [r2, #64]	; 0x40
		__asm__ volatile("mov sp, %0" : : "r" (0x20201000) : );
60001db0:	469d      	mov	sp, r3
		__asm__ volatile("dsb":::"memory");
60001db2:	f3bf 8f4f 	dsb	sy
		volatile uint32_t * const p = (uint32_t *)0x20208000;
		*p = 0xEB120000;
		((void (*)(volatile void *))(*(uint32_t *)(*(uint32_t *)0x0020001C + 8)))(p);
60001db6:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
		*p = 0xEB120000;
60001dba:	4807      	ldr	r0, [pc, #28]	; (60001dd8 <_reboot_Teensyduino_+0x4c>)
60001dbc:	4a07      	ldr	r2, [pc, #28]	; (60001ddc <_reboot_Teensyduino_+0x50>)
		((void (*)(volatile void *))(*(uint32_t *)(*(uint32_t *)0x0020001C + 8)))(p);
60001dbe:	69db      	ldr	r3, [r3, #28]
		*p = 0xEB120000;
60001dc0:	6002      	str	r2, [r0, #0]
		((void (*)(volatile void *))(*(uint32_t *)(*(uint32_t *)0x0020001C + 8)))(p);
60001dc2:	689b      	ldr	r3, [r3, #8]
60001dc4:	4798      	blx	r3
	}
	__builtin_unreachable();
60001dc6:	bf00      	nop
60001dc8:	401f4400 	.word	0x401f4400
60001dcc:	402e0000 	.word	0x402e0000
60001dd0:	400ac000 	.word	0x400ac000
60001dd4:	00200003 	.word	0x00200003
60001dd8:	20208000 	.word	0x20208000
60001ddc:	eb120000 	.word	0xeb120000

60001de0 <analog_init>:
{
	uint32_t mode, avg=0;

	printf("analogInit\n");

	CCM_CCGR1 |= CCM_CCGR1_ADC1(CCM_CCGR_ON);
60001de0:	4b10      	ldr	r3, [pc, #64]	; (60001e24 <analog_init+0x44>)
		mode |= ADC_CFG_ADIV(0) | ADC_CFG_ADICLK(0); // use IPG
	}
#endif
	//ADC1
	ADC1_CFG = mode | ADC_CFG_ADHSC;
	ADC1_GC = avg | ADC_GC_CAL;		// begin cal
60001de2:	20a0      	movs	r0, #160	; 0xa0
	ADC1_CFG = mode | ADC_CFG_ADHSC;
60001de4:	4a10      	ldr	r2, [pc, #64]	; (60001e28 <analog_init+0x48>)
	CCM_CCGR1 |= CCM_CCGR1_ADC1(CCM_CCGR_ON);
60001de6:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
60001de8:	f441 3140 	orr.w	r1, r1, #196608	; 0x30000
{
60001dec:	b410      	push	{r4}
	CCM_CCGR1 |= CCM_CCGR1_ADC1(CCM_CCGR_ON);
60001dee:	66d9      	str	r1, [r3, #108]	; 0x6c
	ADC1_CFG = mode | ADC_CFG_ADHSC;
60001df0:	f240 6437 	movw	r4, #1591	; 0x637
	CCM_CCGR1 |= CCM_CCGR1_ADC2(CCM_CCGR_ON);
60001df4:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
60001df6:	f441 7140 	orr.w	r1, r1, #768	; 0x300
60001dfa:	66d9      	str	r1, [r3, #108]	; 0x6c
	ADC1_CFG = mode | ADC_CFG_ADHSC;
60001dfc:	6454      	str	r4, [r2, #68]	; 0x44
	ADC1_GC = avg | ADC_GC_CAL;		// begin cal
60001dfe:	6490      	str	r0, [r2, #72]	; 0x48
	calibrating = 1;
	while (ADC1_GC & ADC_GC_CAL) {
60001e00:	6c93      	ldr	r3, [r2, #72]	; 0x48
60001e02:	061b      	lsls	r3, r3, #24
60001e04:	d4fc      	bmi.n	60001e00 <analog_init+0x20>
		//yield();
	}
	calibrating = 0;
	//ADC2
	ADC2_CFG = mode | ADC_CFG_ADHSC;
60001e06:	4a09      	ldr	r2, [pc, #36]	; (60001e2c <analog_init+0x4c>)
60001e08:	f240 6137 	movw	r1, #1591	; 0x637
	ADC2_GC = avg | ADC_GC_CAL;		// begin cal
60001e0c:	23a0      	movs	r3, #160	; 0xa0
	ADC2_CFG = mode | ADC_CFG_ADHSC;
60001e0e:	6451      	str	r1, [r2, #68]	; 0x44
	ADC2_GC = avg | ADC_GC_CAL;		// begin cal
60001e10:	6493      	str	r3, [r2, #72]	; 0x48
	calibrating = 1;
	while (ADC2_GC & ADC_GC_CAL) {
60001e12:	6c93      	ldr	r3, [r2, #72]	; 0x48
60001e14:	f013 0380 	ands.w	r3, r3, #128	; 0x80
60001e18:	d1fb      	bne.n	60001e12 <analog_init+0x32>
		//yield();
	}
	calibrating = 0;
60001e1a:	4a05      	ldr	r2, [pc, #20]	; (60001e30 <analog_init+0x50>)
60001e1c:	7013      	strb	r3, [r2, #0]
}
60001e1e:	f85d 4b04 	ldr.w	r4, [sp], #4
60001e22:	4770      	bx	lr
60001e24:	400fc000 	.word	0x400fc000
60001e28:	400c4000 	.word	0x400c4000
60001e2c:	400c8000 	.word	0x400c8000
60001e30:	20003cb2 	.word	0x20003cb2

60001e34 <_init>:
60001e34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
60001e36:	bf00      	nop
60001e38:	bcf8      	pop	{r3, r4, r5, r6, r7}
60001e3a:	bc08      	pop	{r3}
60001e3c:	469e      	mov	lr, r3
60001e3e:	4770      	bx	lr

60001e40 <__main_veneer>:
60001e40:	f85f f000 	ldr.w	pc, [pc]	; 60001e44 <__main_veneer+0x4>
60001e44:	0000062d 	.word	0x0000062d

60001e48 <__set_arm_clock_veneer>:
60001e48:	f85f f000 	ldr.w	pc, [pc]	; 60001e4c <__set_arm_clock_veneer+0x4>
60001e4c:	00001c2d 	.word	0x00001c2d

60001e50 <__sm_set_pool_veneer>:
60001e50:	f85f f000 	ldr.w	pc, [pc]	; 60001e54 <__sm_set_pool_veneer+0x4>
60001e54:	000020fd 	.word	0x000020fd

60001e58 <__pwm_init_veneer>:
60001e58:	f85f f000 	ldr.w	pc, [pc]	; 60001e5c <__pwm_init_veneer+0x4>
60001e5c:	00001f99 	.word	0x00001f99

60001e60 <__delay_veneer>:
60001e60:	f85f f000 	ldr.w	pc, [pc]	; 60001e64 <__delay_veneer+0x4>
60001e64:	0000046d 	.word	0x0000046d

60001e68 <__usb_init_serialnumber_veneer>:
60001e68:	f85f f000 	ldr.w	pc, [pc]	; 60001e6c <__usb_init_serialnumber_veneer+0x4>
60001e6c:	00001321 	.word	0x00001321

60001e70 <____libc_init_array_veneer>:
60001e70:	f85f f000 	ldr.w	pc, [pc]	; 60001e74 <____libc_init_array_veneer+0x4>
60001e74:	0000cce9 	.word	0x0000cce9

60001e78 <__memset_veneer>:
60001e78:	f85f f000 	ldr.w	pc, [pc]	; 60001e7c <__memset_veneer+0x4>
60001e7c:	0000cbed 	.word	0x0000cbed

60001e80 <__frame_dummy_init_array_entry>:
60001e80:	00000045 0000034d 00002375              E...M...u#..

Disassembly of section .text.itcm:

00000000 <_stext>:
	...

00000020 <register_tm_clones>:
	while (SNVS_HPCR & SNVS_HPCR_RTC_EN); // wait
	// stop the SRTC
	SNVS_LPCR &= ~SNVS_LPCR_SRTC_ENV;
	while (SNVS_LPCR & SNVS_LPCR_SRTC_ENV); // wait
	// set the SRTC
	SNVS_LPSRTCLR = t << 15;
      20:	4805      	ldr	r0, [pc, #20]	; (38 <_teensy_model_identifier+0x13>)
	SNVS_LPSRTCMR = t >> 17;
	// start the SRTC
	SNVS_LPCR |= SNVS_LPCR_SRTC_ENV;
	while (!(SNVS_LPCR & SNVS_LPCR_SRTC_ENV)); // wait
      22:	4b06      	ldr	r3, [pc, #24]	; (3c <_teensy_model_identifier+0x17>)
	SNVS_LPSRTCMR = t >> 17;
      24:	1a1b      	subs	r3, r3, r0
	SNVS_LPSRTCLR = t << 15;
      26:	0fd9      	lsrs	r1, r3, #31
	SNVS_LPSRTCMR = t >> 17;
      28:	eb01 01a3 	add.w	r1, r1, r3, asr #2
	SNVS_LPCR |= SNVS_LPCR_SRTC_ENV;
      2c:	1049      	asrs	r1, r1, #1
      2e:	d002      	beq.n	36 <_teensy_model_identifier+0x11>
      30:	4b03      	ldr	r3, [pc, #12]	; (40 <_teensy_model_identifier+0x1b>)
	while (!(SNVS_LPCR & SNVS_LPCR_SRTC_ENV)); // wait
      32:	b103      	cbz	r3, 36 <_teensy_model_identifier+0x11>
      34:	4718      	bx	r3
      36:	4770      	bx	lr
	// start the RTC and sync it to the SRTC
	SNVS_HPCR |= SNVS_HPCR_RTC_EN | SNVS_HPCR_HP_TS;
      38:	200036c0 	.word	0x200036c0
      3c:	200036c0 	.word	0x200036c0
}
      40:	00000000 	.word	0x00000000

00000044 <frame_dummy>:
      44:	b508      	push	{r3, lr}
      46:	4b05      	ldr	r3, [pc, #20]	; (5c <frame_dummy+0x18>)
		return 0;
	}

	if (!new_pool || !new_pool_size) {
		if (smalloc_verify_pool(spool)) {
			if (spool->do_zero) memset(spool->pool, 0, spool->pool_size);
      48:	b11b      	cbz	r3, 52 <frame_dummy+0xe>
      4a:	4905      	ldr	r1, [pc, #20]	; (60 <frame_dummy+0x1c>)
      4c:	4805      	ldr	r0, [pc, #20]	; (64 <frame_dummy+0x20>)
      4e:	f3af 8000 	nop.w
{
	if (mult < 1 || mult > 3) return;
	uint32_t config = (packet_size << 16) | (mult << 30);
	if (ep < 2 || ep > NUM_ENDPOINTS) return;
	usb_endpoint_config(endpoint_queue_head + ep * 2 + 1, config, cb);
	if (cb) endpointN_notify_mask |= (1 << (ep + 16));
      52:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      56:	f7ff bfe3 	b.w	20 <register_tm_clones>
      5a:	bf00      	nop
      5c:	00000000 	.word	0x00000000
}
      60:	20003c18 	.word	0x20003c18
      64:	60017400 	.word	0x60017400

00000068 <std::vector<int, std::allocator<int> >::~vector()>:
       *  The dtor only erases the elements, and note that if the
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      ~vector() _GLIBCXX_NOEXCEPT
      68:	b510      	push	{r4, lr}
      6a:	4604      	mov	r4, r0
	_M_deallocate(_M_impl._M_start,
      6c:	6800      	ldr	r0, [r0, #0]
	if (__p)
      6e:	b118      	cbz	r0, 78 <std::vector<int, std::allocator<int> >::~vector()+0x10>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
      70:	68a1      	ldr	r1, [r4, #8]
# endif
			      std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	::operator delete(__p
      72:	1a09      	subs	r1, r1, r0
      74:	f000 fb80 	bl	778 <operator delete(void*, unsigned int)>
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
      78:	4620      	mov	r0, r4
      7a:	bd10      	pop	{r4, pc}

0000007c <toeplitz_extraction(std::vector<int, std::allocator<int> > const&)>:
//tested on windows (meh, i know) using arduino IDE, needs implemintation for mac/linux
//BTW!!! filename and foldername needs to be same if using arduino IDE

vector<int> raw_bits;

vector<int> toeplitz_extraction(const vector<int>& raw_bits) {
      7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
      80:	4604      	mov	r4, r0
	: _M_start(), _M_finish(), _M_end_of_storage()
      82:	2500      	movs	r5, #0
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      84:	f44f 6080 	mov.w	r0, #1024	; 0x400
      88:	460f      	mov	r7, r1
      8a:	60a5      	str	r5, [r4, #8]
      8c:	e9c4 5500 	strd	r5, r5, [r4]
      90:	f000 fb6e 	bl	770 <operator new(unsigned int)>
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
      94:	f500 6880 	add.w	r8, r0, #1024	; 0x400
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
	      const _Tp& __value)
    {
      const _Tp __tmp = __value;
      for (; __first != __last; ++__first)
	*__first = __tmp;
      98:	4629      	mov	r1, r5
      9a:	f44f 6280 	mov.w	r2, #1024	; 0x400
      9e:	f8c4 8008 	str.w	r8, [r4, #8]
      a2:	4606      	mov	r6, r0
	this->_M_impl._M_start = this->_M_allocate(__n);
      a4:	6020      	str	r0, [r4, #0]
      a6:	f00c fda1 	bl	cbec <memset>
      aa:	4d13      	ldr	r5, [pc, #76]	; (f8 <toeplitz_extraction(std::vector<int, std::allocator<int> > const&)+0x7c>)
       */
      const_reference
      operator[](size_type __n) const _GLIBCXX_NOEXCEPT
      {
	__glibcxx_requires_subscript(__n);
	return *(this->_M_impl._M_start + __n);
      ac:	683b      	ldr	r3, [r7, #0]
      ae:	3e04      	subs	r6, #4
      // Called by the first initialize_dispatch above and by the
      // vector(n,value,a) constructor.
      void
      _M_fill_initialize(size_type __n, const value_type& __value)
      {
	this->_M_impl._M_finish =
      b0:	f8c4 8004 	str.w	r8, [r4, #4]
	return *(this->_M_impl._M_start + __n);
      b4:	2101      	movs	r1, #1
      b6:	f505 787f 	add.w	r8, r5, #1020	; 0x3fc
      ba:	1f1f      	subs	r7, r3, #4
      bc:	f203 7efc 	addw	lr, r3, #2044	; 0x7fc
  vector<int> output(OUTPUT_LEN, 0);
  for (size_t i = 0; i < OUTPUT_LEN; i++) {
    int sum = 0;
    for (size_t j = 0; j < RAW_BITS_LEN; j++) {
      c0:	463b      	mov	r3, r7
vector<int> toeplitz_extraction(const vector<int>& raw_bits) {
      c2:	46ac      	mov	ip, r5
    int sum = 0;
      c4:	2200      	movs	r2, #0
      c6:	e001      	b.n	cc <toeplitz_extraction(std::vector<int, std::allocator<int> > const&)+0x50>
      sum += raw_bits[j] * seed_bits[i + j];
      c8:	f85c 1f04 	ldr.w	r1, [ip, #4]!
      cc:	f853 0f04 	ldr.w	r0, [r3, #4]!
    for (size_t j = 0; j < RAW_BITS_LEN; j++) {
      d0:	459e      	cmp	lr, r3
      sum += raw_bits[j] * seed_bits[i + j];
      d2:	fb00 2201 	mla	r2, r0, r1, r2
    for (size_t j = 0; j < RAW_BITS_LEN; j++) {
      d6:	d1f7      	bne.n	c8 <toeplitz_extraction(std::vector<int, std::allocator<int> > const&)+0x4c>
    }
    output[i] = sum % 2;
      d8:	2a00      	cmp	r2, #0
      da:	f002 0201 	and.w	r2, r2, #1
      de:	bfb8      	it	lt
      e0:	4252      	neglt	r2, r2
  for (size_t i = 0; i < OUTPUT_LEN; i++) {
      e2:	4545      	cmp	r5, r8
    output[i] = sum % 2;
      e4:	f846 2f04 	str.w	r2, [r6, #4]!
  for (size_t i = 0; i < OUTPUT_LEN; i++) {
      e8:	d002      	beq.n	f0 <toeplitz_extraction(std::vector<int, std::allocator<int> > const&)+0x74>
      sum += raw_bits[j] * seed_bits[i + j];
      ea:	f855 1f04 	ldr.w	r1, [r5, #4]!
      ee:	e7e7      	b.n	c0 <toeplitz_extraction(std::vector<int, std::allocator<int> > const&)+0x44>
  }
  return output;
}
      f0:	4620      	mov	r0, r4
      f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      f6:	bf00      	nop
      f8:	200003b0 	.word	0x200003b0

000000fc <setup>:

void setup() {
      fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	// is always initialized early during startup.  The baud rate setting
	// is not used.  Communication occurs at USB native speed.  For
	// compatibility with Arduino code, Serial.begin waits up to 2 seconds
	// for your PC to open the virtual serial port.
        void begin(long baud_unused __attribute__((unused))) {
		uint32_t millis_begin = systick_millis_count;
     100:	4d20      	ldr	r5, [pc, #128]	; (184 <setup+0x88>)
				// Wait up to 2 seconds for Arduino Serial Monitor
				if (elapsed > 2000) break;
			} else {
				// But wait only 3/4 second if there is no sign the
				// USB host has begun the USB enumeration process.
				if (elapsed > 750) break;
     102:	f240 28ee 	movw	r8, #750	; 0x2ee
     106:	4c20      	ldr	r4, [pc, #128]	; (188 <setup+0x8c>)
     108:	4f20      	ldr	r7, [pc, #128]	; (18c <setup+0x90>)
     10a:	f8df 908c 	ldr.w	r9, [pc, #140]	; 198 <setup+0x9c>
		uint32_t millis_begin = systick_millis_count;
     10e:	682e      	ldr	r6, [r5, #0]
        uint8_t rts(void) { return (usb_cdc_line_rtsdtr & USB_SERIAL_RTS) ? 1 : 0; }
	// Testing Serial as a boolean indicates whether USB is active and a program
	// running on your PC has raised the DTR signal, which typically means it has
	// opened the port and is ready to communicate.
        operator bool() {
		yield();
     110:	f001 fcec 	bl	1aec <yield>
		return usb_configuration && (usb_cdc_line_rtsdtr & USB_SERIAL_DTR) &&
     114:	7823      	ldrb	r3, [r4, #0]
     116:	b33b      	cbz	r3, 168 <setup+0x6c>
     118:	783b      	ldrb	r3, [r7, #0]
     11a:	07da      	lsls	r2, r3, #31
     11c:	d524      	bpl.n	168 <setup+0x6c>
		((uint32_t)(systick_millis_count - usb_cdc_line_rtsdtr_millis) >= 15);
     11e:	682b      	ldr	r3, [r5, #0]
     120:	f8d9 2000 	ldr.w	r2, [r9]
     124:	1a9b      	subs	r3, r3, r2
		return usb_configuration && (usb_cdc_line_rtsdtr & USB_SERIAL_DTR) &&
     126:	2b0e      	cmp	r3, #14
     128:	d91e      	bls.n	168 <setup+0x6c>
  SERIAL_MAIN.begin(115200);
  pinMode(LED_PIN, OUTPUT);
     12a:	2101      	movs	r1, #1
     12c:	200d      	movs	r0, #13
     12e:	f000 fa45 	bl	5bc <pinMode>
  digitalWrite(LED_PIN, HIGH);
     132:	2101      	movs	r1, #1
     134:	200d      	movs	r0, #13
     136:	f000 fa17 	bl	568 <digitalWrite>
		yield();
     13a:	f001 fcd7 	bl	1aec <yield>
		return usb_configuration && (usb_cdc_line_rtsdtr & USB_SERIAL_DTR) &&
     13e:	7823      	ldrb	r3, [r4, #0]
     140:	2b00      	cmp	r3, #0
     142:	d0fa      	beq.n	13a <setup+0x3e>
     144:	783b      	ldrb	r3, [r7, #0]
     146:	07db      	lsls	r3, r3, #31
     148:	d5f7      	bpl.n	13a <setup+0x3e>
		((uint32_t)(systick_millis_count - usb_cdc_line_rtsdtr_millis) >= 15);
     14a:	682b      	ldr	r3, [r5, #0]
     14c:	f8d9 2000 	ldr.w	r2, [r9]
     150:	1a9b      	subs	r3, r3, r2
		return usb_configuration && (usb_cdc_line_rtsdtr & USB_SERIAL_DTR) &&
     152:	2b0e      	cmp	r3, #14
     154:	d9f1      	bls.n	13a <setup+0x3e>
        virtual size_t write(const uint8_t *buffer, size_t size) { return usb_serial_write(buffer, size); }
     156:	2130      	movs	r1, #48	; 0x30
     158:	480d      	ldr	r0, [pc, #52]	; (190 <setup+0x94>)
     15a:	f001 fc49 	bl	19f0 <usb_serial_write>
	// Print a string and newline
	size_t println(const String &s)			{ return print(s) + println(); }
	// Print a single character and newline
	size_t println(char c)				{ return print(c) + println(); }
	// Print a string and newline
	size_t println(const char s[])			{ return print(s) + println(); }
     15e:	480d      	ldr	r0, [pc, #52]	; (194 <setup+0x98>)
  while (!SERIAL_MAIN);
  SERIAL_MAIN.println("[" MCU_NAME "] Streaming Toeplitz extractor ready.");
}
     160:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
     164:	f000 b952 	b.w	40c <Print::println()>
			uint32_t elapsed = systick_millis_count - millis_begin;
     168:	682b      	ldr	r3, [r5, #0]
			if (usb_configuration) {
     16a:	7822      	ldrb	r2, [r4, #0]
			uint32_t elapsed = systick_millis_count - millis_begin;
     16c:	1b9b      	subs	r3, r3, r6
			if (usb_configuration) {
     16e:	b12a      	cbz	r2, 17c <setup+0x80>
				if (elapsed > 2000) break;
     170:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
     174:	d8d9      	bhi.n	12a <setup+0x2e>
			yield();
     176:	f001 fcb9 	bl	1aec <yield>
     17a:	e7c9      	b.n	110 <setup+0x14>
				if (elapsed > 750) break;
     17c:	4543      	cmp	r3, r8
     17e:	d9fa      	bls.n	176 <setup+0x7a>
     180:	e7d3      	b.n	12a <setup+0x2e>
     182:	bf00      	nop
     184:	20003c8c 	.word	0x20003c8c
     188:	20003cbb 	.word	0x20003cbb
     18c:	20003cba 	.word	0x20003cba
     190:	200023d0 	.word	0x200023d0
     194:	20002c08 	.word	0x20002c08
     198:	20003c9c 	.word	0x20003c9c

0000019c <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      void
      vector<_Tp, _Alloc>::
     19c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
     1a0:	e9d0 8900 	ldrd	r8, r9, [r0]
     1a4:	460f      	mov	r7, r1
     1a6:	4692      	mov	sl, r2

      // Called by _M_fill_insert, _M_insert_aux etc.
      size_type
      _M_check_len(size_type __n, const char* __s) const
      {
	if (max_size() - size() < __n)
     1a8:	f06f 4160 	mvn.w	r1, #3758096384	; 0xe0000000
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
     1ac:	eba9 0208 	sub.w	r2, r9, r8
	if (max_size() - size() < __n)
     1b0:	ebb1 0fa2 	cmp.w	r1, r2, asr #2
     1b4:	d054      	beq.n	260 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0xc4>
     1b6:	1093      	asrs	r3, r2, #2
     1b8:	4606      	mov	r6, r0
    _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
     1ba:	eba7 0508 	sub.w	r5, r7, r8
     1be:	2b01      	cmp	r3, #1
     1c0:	461a      	mov	r2, r3
     1c2:	bf38      	it	cc
     1c4:	2201      	movcc	r2, #1
     1c6:	189c      	adds	r4, r3, r2
     1c8:	d248      	bcs.n	25c <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0xc0>
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
     1ca:	2c00      	cmp	r4, #0
     1cc:	d13c      	bne.n	248 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0xac>
     1ce:	46a3      	mov	fp, r4
#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
     1d0:	f8da 3000 	ldr.w	r3, [sl]
    inline __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*>
    __relocate_a_1(_Tp* __first, _Tp* __last,
		   _Tp* __result, allocator<_Up>&) noexcept
    {
      ptrdiff_t __count = __last - __first;
      if (__count > 0)
     1d4:	2d00      	cmp	r5, #0
     1d6:	f84b 3005 	str.w	r3, [fp, r5]
     1da:	dc24      	bgt.n	226 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x8a>
      ptrdiff_t __count = __last - __first;
     1dc:	eba9 0907 	sub.w	r9, r9, r7
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());

	      ++__new_finish;
     1e0:	3504      	adds	r5, #4
      if (__count > 0)
     1e2:	f1b9 0f00 	cmp.w	r9, #0
     1e6:	445d      	add	r5, fp
     1e8:	dc13      	bgt.n	212 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x76>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
      return __result + __count;
     1ea:	444d      	add	r5, r9
	if (__p)
     1ec:	f1b8 0f00 	cmp.w	r8, #0
     1f0:	d104      	bne.n	1fc <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x60>
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
		    this->_M_impl._M_end_of_storage - __old_start);
      this->_M_impl._M_start = __new_start;
      this->_M_impl._M_finish = __new_finish;
      this->_M_impl._M_end_of_storage = __new_start + __len;
     1f2:	60b4      	str	r4, [r6, #8]
      this->_M_impl._M_finish = __new_finish;
     1f4:	e9c6 b500 	strd	fp, r5, [r6]
    }
     1f8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
		    this->_M_impl._M_end_of_storage - __old_start);
     1fc:	68b1      	ldr	r1, [r6, #8]
     1fe:	eba1 0108 	sub.w	r1, r1, r8
	::operator delete(__p
     202:	4640      	mov	r0, r8
     204:	f000 fab8 	bl	778 <operator delete(void*, unsigned int)>
      this->_M_impl._M_end_of_storage = __new_start + __len;
     208:	60b4      	str	r4, [r6, #8]
      this->_M_impl._M_finish = __new_finish;
     20a:	e9c6 b500 	strd	fp, r5, [r6]
    }
     20e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
     212:	4628      	mov	r0, r5
     214:	4639      	mov	r1, r7
     216:	464a      	mov	r2, r9
      return __result + __count;
     218:	444d      	add	r5, r9
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
     21a:	f000 fa0f 	bl	63c <memcpy>
     21e:	f1b8 0f00 	cmp.w	r8, #0
     222:	d0e6      	beq.n	1f2 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x56>
     224:	e7ea      	b.n	1fc <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x60>
      ptrdiff_t __count = __last - __first;
     226:	eba9 0907 	sub.w	r9, r9, r7
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
     22a:	462a      	mov	r2, r5
     22c:	4641      	mov	r1, r8
     22e:	4658      	mov	r0, fp
	      ++__new_finish;
     230:	3504      	adds	r5, #4
     232:	f00c fc3f 	bl	cab4 <memmove>
      if (__count > 0)
     236:	f1b9 0f00 	cmp.w	r9, #0
     23a:	445d      	add	r5, fp
     23c:	dce9      	bgt.n	212 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x76>
		    this->_M_impl._M_end_of_storage - __old_start);
     23e:	68b1      	ldr	r1, [r6, #8]
      return __result + __count;
     240:	444d      	add	r5, r9
     242:	eba1 0108 	sub.w	r1, r1, r8
      _M_deallocate(pointer __p, size_t __n)
     246:	e7dc      	b.n	202 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x66>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
     248:	428c      	cmp	r4, r1
     24a:	bf28      	it	cs
     24c:	460c      	movcs	r4, r1
     24e:	00a4      	lsls	r4, r4, #2
     250:	4620      	mov	r0, r4
     252:	f000 fa8d 	bl	770 <operator new(unsigned int)>
     256:	4683      	mov	fp, r0
      this->_M_impl._M_end_of_storage = __new_start + __len;
     258:	4404      	add	r4, r0
     25a:	e7b9      	b.n	1d0 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0x34>
     25c:	4c02      	ldr	r4, [pc, #8]	; (268 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0xcc>)
     25e:	e7f7      	b.n	250 <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0xb4>
	  __throw_length_error(__N(__s));
     260:	4802      	ldr	r0, [pc, #8]	; (26c <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)+0xd0>)
     262:	f001 ffbb 	bl	21dc <std::__throw_length_error(char const*)>
     266:	bf00      	nop
     268:	7ffffffc 	.word	0x7ffffffc
     26c:	200010a8 	.word	0x200010a8

00000270 <loop>:

void loop() {
     270:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     274:	b084      	sub	sp, #16
        virtual int available() { return usb_serial_available(); }
     276:	f001 fb51 	bl	191c <usb_serial_available>
  if (SERIAL_MAIN.available()) {
     27a:	b910      	cbnz	r0, 282 <loop+0x12>
      SERIAL_MAIN.print(time);
      SERIAL_MAIN.println(" µs)");
      raw_bits.clear();
    }
  }
}
     27c:	b004      	add	sp, #16
     27e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        virtual int read() { return usb_serial_getchar(); }
     282:	f001 fb8f 	bl	19a4 <usb_serial_getchar>
    if (c == '0' || c == '1') {
     286:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
     28a:	4d2b      	ldr	r5, [pc, #172]	; (338 <loop+0xc8>)
     28c:	b2db      	uxtb	r3, r3
     28e:	2b01      	cmp	r3, #1
     290:	d942      	bls.n	318 <loop+0xa8>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
     292:	6869      	ldr	r1, [r5, #4]
     294:	682b      	ldr	r3, [r5, #0]
     296:	1ac9      	subs	r1, r1, r3
    if (raw_bits.size() == RAW_BITS_LEN) {
     298:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
     29c:	d1ee      	bne.n	27c <loop+0xc>
      unsigned long start = micros();
     29e:	f000 f939 	bl	514 <micros>
      vector<int> result = toeplitz_extraction(raw_bits);
     2a2:	4925      	ldr	r1, [pc, #148]	; (338 <loop+0xc8>)
      unsigned long start = micros();
     2a4:	4604      	mov	r4, r0
      vector<int> result = toeplitz_extraction(raw_bits);
     2a6:	a801      	add	r0, sp, #4
     2a8:	f7ff fee8 	bl	7c <toeplitz_extraction(std::vector<int, std::allocator<int> > const&)>
      unsigned long time = micros() - start;
     2ac:	f000 f932 	bl	514 <micros>
     2b0:	4680      	mov	r8, r0
        virtual size_t write(const uint8_t *buffer, size_t size) { return usb_serial_write(buffer, size); }
     2b2:	2104      	movs	r1, #4
     2b4:	4821      	ldr	r0, [pc, #132]	; (33c <loop+0xcc>)
     2b6:	f001 fb9b 	bl	19f0 <usb_serial_write>
     2ba:	eba8 0804 	sub.w	r8, r8, r4
      : _M_current(__i) { }
     2be:	e9dd 4601 	ldrd	r4, r6, [sp, #4]
      for (int b : result) {
     2c2:	42a6      	cmp	r6, r4
     2c4:	d007      	beq.n	2d6 <loop+0x66>
	size_t print(int n)				{ return print((long)n); }
     2c6:	4f1e      	ldr	r7, [pc, #120]	; (340 <loop+0xd0>)
     2c8:	f854 1b04 	ldr.w	r1, [r4], #4
     2cc:	4638      	mov	r0, r7
     2ce:	f000 f891 	bl	3f4 <Print::print(long)>
     2d2:	42a6      	cmp	r6, r4
     2d4:	d1f8      	bne.n	2c8 <loop+0x58>
     2d6:	2107      	movs	r1, #7
     2d8:	481a      	ldr	r0, [pc, #104]	; (344 <loop+0xd4>)
     2da:	f001 fb89 	bl	19f0 <usb_serial_write>
	size_t println(const char s[])			{ return print(s) + println(); }
     2de:	4818      	ldr	r0, [pc, #96]	; (340 <loop+0xd0>)
     2e0:	f000 f894 	bl	40c <Print::println()>
	size_t print(unsigned long n)			{ return printNumber(n, 10, 0); }
     2e4:	2300      	movs	r3, #0
     2e6:	220a      	movs	r2, #10
     2e8:	4641      	mov	r1, r8
     2ea:	4815      	ldr	r0, [pc, #84]	; (340 <loop+0xd0>)
     2ec:	f000 f8aa 	bl	444 <Print::printNumber(unsigned long, unsigned char, unsigned char)>
     2f0:	2105      	movs	r1, #5
     2f2:	4815      	ldr	r0, [pc, #84]	; (348 <loop+0xd8>)
     2f4:	f001 fb7c 	bl	19f0 <usb_serial_write>
	size_t println(const char s[])			{ return print(s) + println(); }
     2f8:	4811      	ldr	r0, [pc, #68]	; (340 <loop+0xd0>)
     2fa:	f000 f887 	bl	40c <Print::println()>
      // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
      // _M_assign_aux.
      void
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
      {
	if (size_type __n = this->_M_impl._M_finish - __pos)
     2fe:	e9d5 3200 	ldrd	r3, r2, [r5]
     302:	4293      	cmp	r3, r2
     304:	d000      	beq.n	308 <loop+0x98>
	  {
	    std::_Destroy(__pos, this->_M_impl._M_finish,
			  _M_get_Tp_allocator());
	    this->_M_impl._M_finish = __pos;
     306:	606b      	str	r3, [r5, #4]
	_M_deallocate(_M_impl._M_start,
     308:	9801      	ldr	r0, [sp, #4]
	if (__p)
     30a:	2800      	cmp	r0, #0
     30c:	d0b6      	beq.n	27c <loop+0xc>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
     30e:	9903      	ldr	r1, [sp, #12]
	::operator delete(__p
     310:	1a09      	subs	r1, r1, r0
     312:	f000 fa31 	bl	778 <operator delete(void*, unsigned int)>
}
     316:	e7b1      	b.n	27c <loop+0xc>
      raw_bits.push_back(c - '0');
     318:	b2c0      	uxtb	r0, r0
     31a:	6869      	ldr	r1, [r5, #4]
     31c:	68ab      	ldr	r3, [r5, #8]
     31e:	3830      	subs	r0, #48	; 0x30
     320:	4299      	cmp	r1, r3
     322:	9001      	str	r0, [sp, #4]
     324:	d003      	beq.n	32e <loop+0xbe>
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
     326:	f841 0b04 	str.w	r0, [r1], #4
	    ++this->_M_impl._M_finish;
     32a:	6069      	str	r1, [r5, #4]
     32c:	e7b2      	b.n	294 <loop+0x24>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
     32e:	aa01      	add	r2, sp, #4
     330:	4628      	mov	r0, r5
     332:	f7ff ff33 	bl	19c <void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)>
     336:	e7ac      	b.n	292 <loop+0x22>
     338:	20003c30 	.word	0x20003c30
     33c:	200023ac 	.word	0x200023ac
     340:	20002c08 	.word	0x20002c08
     344:	200023b4 	.word	0x200023b4
     348:	200023bc 	.word	0x200023bc

0000034c <_GLOBAL__sub_I_raw_bits>:
	: _M_start(), _M_finish(), _M_end_of_storage()
     34c:	4804      	ldr	r0, [pc, #16]	; (360 <_GLOBAL__sub_I_raw_bits+0x14>)
     34e:	2300      	movs	r3, #0
vector<int> raw_bits;
     350:	4a04      	ldr	r2, [pc, #16]	; (364 <_GLOBAL__sub_I_raw_bits+0x18>)
     352:	4905      	ldr	r1, [pc, #20]	; (368 <_GLOBAL__sub_I_raw_bits+0x1c>)
     354:	6083      	str	r3, [r0, #8]
     356:	e9c0 3300 	strd	r3, r3, [r0]
     35a:	f001 bf11 	b.w	2180 <__aeabi_atexit>
     35e:	bf00      	nop
     360:	20003c30 	.word	0x20003c30
     364:	20002c28 	.word	0x20002c28
     368:	00000069 	.word	0x00000069

0000036c <usb_serial_class::write(unsigned char)>:
        virtual size_t write(uint8_t c) { return usb_serial_putchar(c); }
     36c:	4608      	mov	r0, r1
     36e:	f001 bb29 	b.w	19c4 <usb_serial_putchar>
     372:	bf00      	nop

00000374 <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]>:
	// almost always a constant.  base = 0 (BYTE) should
	// inline as a call directly to write()
	if (base == 0) {
		return write((uint8_t)n);
	} else if (base == 1) {
		base = 10;
     374:	2a01      	cmp	r2, #1
size_t Print::printNumber(unsigned long n, uint8_t base, uint8_t sign)
     376:	b570      	push	{r4, r5, r6, lr}
		base = 10;
     378:	bf08      	it	eq
     37a:	220a      	moveq	r2, #10
size_t Print::printNumber(unsigned long n, uint8_t base, uint8_t sign)
     37c:	b08a      	sub	sp, #40	; 0x28
	}


	if (n == 0) {
     37e:	b391      	cbz	r1, 3e6 <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]+0x72>
		buf[sizeof(buf) - 1] = '0';
		i = sizeof(buf) - 1;
	} else {
		i = sizeof(buf) - 1;
     380:	f04f 0e21 	mov.w	lr, #33	; 0x21
     384:	e001      	b.n	38a <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]+0x16>
		while (1) {
			digit = n % base;
			buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
			n /= base;
			if (n == 0) break;
			i--;
     386:	fa5f fe86 	uxtb.w	lr, r6
     38a:	f10e 36ff 	add.w	r6, lr, #4294967295	; 0xffffffff
			digit = n % base;
     38e:	fbb1 f5f2 	udiv	r5, r1, r2
     392:	fb02 1415 	mls	r4, r2, r5, r1
     396:	fa5f fc84 	uxtb.w	ip, r4
			buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
     39a:	2c09      	cmp	r4, #9
     39c:	f10c 0437 	add.w	r4, ip, #55	; 0x37
     3a0:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
     3a4:	bf98      	it	ls
     3a6:	fa5f f48c 	uxtbls.w	r4, ip
     3aa:	f10e 0c28 	add.w	ip, lr, #40	; 0x28
     3ae:	bf88      	it	hi
     3b0:	b2e4      	uxtbhi	r4, r4
			if (n == 0) break;
     3b2:	4291      	cmp	r1, r2
			buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
     3b4:	44ec      	add	ip, sp
			n /= base;
     3b6:	4629      	mov	r1, r5
			buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
     3b8:	f80c 4c24 	strb.w	r4, [ip, #-36]
			if (n == 0) break;
     3bc:	d2e3      	bcs.n	386 <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]+0x12>
		}
	}
	if (sign) {
     3be:	b14b      	cbz	r3, 3d4 <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]+0x60>
		i--;
     3c0:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
		buf[i] = '-';
     3c4:	222d      	movs	r2, #45	; 0x2d
		i--;
     3c6:	fa5f fe8e 	uxtb.w	lr, lr
		buf[i] = '-';
     3ca:	f10e 0328 	add.w	r3, lr, #40	; 0x28
     3ce:	446b      	add	r3, sp
     3d0:	f803 2c24 	strb.w	r2, [r3, #-36]
	}
	return write(buf + i, sizeof(buf) - i);
     3d4:	6803      	ldr	r3, [r0, #0]
     3d6:	a901      	add	r1, sp, #4
     3d8:	f1ce 0222 	rsb	r2, lr, #34	; 0x22
     3dc:	685b      	ldr	r3, [r3, #4]
     3de:	4471      	add	r1, lr
     3e0:	4798      	blx	r3
}
     3e2:	b00a      	add	sp, #40	; 0x28
     3e4:	bd70      	pop	{r4, r5, r6, pc}
		buf[sizeof(buf) - 1] = '0';
     3e6:	2230      	movs	r2, #48	; 0x30
		i = sizeof(buf) - 1;
     3e8:	f04f 0e21 	mov.w	lr, #33	; 0x21
		buf[sizeof(buf) - 1] = '0';
     3ec:	f88d 2025 	strb.w	r2, [sp, #37]	; 0x25
		i = sizeof(buf) - 1;
     3f0:	e7e5      	b.n	3be <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]+0x4a>
     3f2:	bf00      	nop

000003f4 <Print::print(long)>:
	if (n < 0) {
     3f4:	2900      	cmp	r1, #0
     3f6:	db03      	blt.n	400 <Print::print(long)+0xc>
	uint8_t sign=0;
     3f8:	2300      	movs	r3, #0
	if (base == 0) {
     3fa:	220a      	movs	r2, #10
     3fc:	f7ff bfba 	b.w	374 <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]>
		n = -n;
     400:	4249      	negs	r1, r1
		sign = '-';
     402:	232d      	movs	r3, #45	; 0x2d
	if (base == 0) {
     404:	220a      	movs	r2, #10
     406:	f7ff bfb5 	b.w	374 <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]>
     40a:	bf00      	nop

0000040c <Print::println()>:
{
     40c:	b500      	push	{lr}
	return write(buf, 2);
     40e:	6803      	ldr	r3, [r0, #0]
{
     410:	b083      	sub	sp, #12
	uint8_t buf[2]={'\r', '\n'};
     412:	f640 2c0d 	movw	ip, #2573	; 0xa0d
	return write(buf, 2);
     416:	2202      	movs	r2, #2
     418:	a901      	add	r1, sp, #4
     41a:	685b      	ldr	r3, [r3, #4]
	uint8_t buf[2]={'\r', '\n'};
     41c:	f8ad c004 	strh.w	ip, [sp, #4]
	return write(buf, 2);
     420:	4798      	blx	r3
}
     422:	b003      	add	sp, #12
     424:	f85d fb04 	ldr.w	pc, [sp], #4

00000428 <_write>:
	return ((class Print *)file)->write((uint8_t *)ptr, len);
     428:	4b05      	ldr	r3, [pc, #20]	; (440 <_write+0x18>)
     42a:	2802      	cmp	r0, #2
     42c:	bf88      	it	hi
     42e:	4603      	movhi	r3, r0
{
     430:	b410      	push	{r4}
	return ((class Print *)file)->write((uint8_t *)ptr, len);
     432:	681c      	ldr	r4, [r3, #0]
     434:	4618      	mov	r0, r3
     436:	6863      	ldr	r3, [r4, #4]
}
     438:	f85d 4b04 	ldr.w	r4, [sp], #4
	return ((class Print *)file)->write((uint8_t *)ptr, len);
     43c:	4718      	bx	r3
     43e:	bf00      	nop
     440:	20002c08 	.word	0x20002c08

00000444 <Print::printNumber(unsigned long, unsigned char, unsigned char)>:
	if (base == 0) {
     444:	b95a      	cbnz	r2, 45e <Print::printNumber(unsigned long, unsigned char, unsigned char)+0x1a>
		return write((uint8_t)n);
     446:	6803      	ldr	r3, [r0, #0]
     448:	b2c9      	uxtb	r1, r1
     44a:	4a07      	ldr	r2, [pc, #28]	; (468 <Print::printNumber(unsigned long, unsigned char, unsigned char)+0x24>)
     44c:	681b      	ldr	r3, [r3, #0]
     44e:	4293      	cmp	r3, r2
{
     450:	b500      	push	{lr}
     452:	d106      	bne.n	462 <Print::printNumber(unsigned long, unsigned char, unsigned char)+0x1e>
     454:	4608      	mov	r0, r1
}
     456:	f85d eb04 	ldr.w	lr, [sp], #4
     45a:	f001 bab3 	b.w	19c4 <usb_serial_putchar>
     45e:	f7ff bf89 	b.w	374 <Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]>
     462:	f85d eb04 	ldr.w	lr, [sp], #4
		return write((uint8_t)n);
     466:	4718      	bx	r3
     468:	0000036d 	.word	0x0000036d

0000046c <delay>:
// or delayNanoseconds().
void delay(uint32_t msec)
{
	uint32_t start;

	if (msec == 0) return;
     46c:	b900      	cbnz	r0, 470 <delay+0x4>
     46e:	4770      	bx	lr
{
     470:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
     474:	2101      	movs	r1, #1
     476:	4681      	mov	r9, r0
     478:	4c21      	ldr	r4, [pc, #132]	; (500 <delay+0x94>)
     47a:	4d22      	ldr	r5, [pc, #136]	; (504 <delay+0x98>)
     47c:	4e22      	ldr	r6, [pc, #136]	; (508 <delay+0x9c>)
   __ASM volatile ("ldrex %0, [%1]" : "=r" (result) : "r" (addr) );
     47e:	e854 3f00 	ldrex	r3, [r4]
uint32_t micros(void)
{
	uint32_t smc, scc;
	do {
		__LDREXW(&systick_safe_read);
		smc = systick_millis_count;
     482:	682a      	ldr	r2, [r5, #0]
		scc = systick_cycle_count;
     484:	6830      	ldr	r0, [r6, #0]
   __ASM volatile ("strex %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
     486:	e844 1300 	strex	r3, r1, [r4]
	} while ( __STREXW(1, &systick_safe_read));
     48a:	2b00      	cmp	r3, #0
     48c:	d1f7      	bne.n	47e <delay+0x12>
	uint32_t cyccnt = ARM_DWT_CYCCNT;
     48e:	491f      	ldr	r1, [pc, #124]	; (50c <delay+0xa0>)
     490:	684b      	ldr	r3, [r1, #4]
	asm volatile("" : : : "memory");
	uint32_t ccdelta = cyccnt - scc;
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
	if (frac > 1000) frac = 1000;
	uint32_t usec = 1000*smc + frac;
     492:	f44f 7b7a 	mov.w	fp, #1000	; 0x3e8
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
     496:	f8df a078 	ldr.w	sl, [pc, #120]	; 510 <delay+0xa4>
	uint32_t ccdelta = cyccnt - scc;
     49a:	1a1b      	subs	r3, r3, r0
     49c:	2701      	movs	r7, #1
	uint32_t usec = 1000*smc + frac;
     49e:	fb0b f802 	mul.w	r8, fp, r2
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
     4a2:	f8da 2000 	ldr.w	r2, [sl]
     4a6:	fba3 3202 	umull	r3, r2, r3, r2
	uint32_t usec = 1000*smc + frac;
     4aa:	455a      	cmp	r2, fp
     4ac:	bf94      	ite	ls
     4ae:	4490      	addls	r8, r2
     4b0:	44d8      	addhi	r8, fp
   __ASM volatile ("ldrex %0, [%1]" : "=r" (result) : "r" (addr) );
     4b2:	e854 3f00 	ldrex	r3, [r4]
		smc = systick_millis_count;
     4b6:	682a      	ldr	r2, [r5, #0]
		scc = systick_cycle_count;
     4b8:	6830      	ldr	r0, [r6, #0]
   __ASM volatile ("strex %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
     4ba:	e844 7300 	strex	r3, r7, [r4]
	} while ( __STREXW(1, &systick_safe_read));
     4be:	2b00      	cmp	r3, #0
     4c0:	d1f7      	bne.n	4b2 <delay+0x46>
	uint32_t cyccnt = ARM_DWT_CYCCNT;
     4c2:	684b      	ldr	r3, [r1, #4]
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
     4c4:	f8da c000 	ldr.w	ip, [sl]
	uint32_t ccdelta = cyccnt - scc;
     4c8:	1a1b      	subs	r3, r3, r0
	uint32_t usec = 1000*smc + frac;
     4ca:	fb0b f202 	mul.w	r2, fp, r2
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
     4ce:	fba3 3c0c 	umull	r3, ip, r3, ip
	uint32_t usec = 1000*smc + frac;
     4d2:	f5bc 7f7a 	cmp.w	ip, #1000	; 0x3e8
     4d6:	bf94      	ite	ls
     4d8:	4462      	addls	r2, ip
     4da:	f502 727a 	addhi.w	r2, r2, #1000	; 0x3e8
		while ((micros() - start) >= 1000) {
     4de:	eba2 0208 	sub.w	r2, r2, r8
     4e2:	f5b2 7f7a 	cmp.w	r2, #1000	; 0x3e8
     4e6:	d306      	bcc.n	4f6 <delay+0x8a>
			if (--msec == 0) return;
     4e8:	f1b9 0901 	subs.w	r9, r9, #1
			start += 1000;
     4ec:	f508 787a 	add.w	r8, r8, #1000	; 0x3e8
			if (--msec == 0) return;
     4f0:	d1df      	bne.n	4b2 <delay+0x46>
}
     4f2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
		yield();
     4f6:	f001 faf9 	bl	1aec <yield>
		while ((micros() - start) >= 1000) {
     4fa:	4904      	ldr	r1, [pc, #16]	; (50c <delay+0xa0>)
     4fc:	e7d9      	b.n	4b2 <delay+0x46>
     4fe:	bf00      	nop
     500:	20003c90 	.word	0x20003c90
     504:	20003c8c 	.word	0x20003c8c
     508:	20003c88 	.word	0x20003c88
     50c:	e0001000 	.word	0xe0001000
     510:	20003c84 	.word	0x20003c84

00000514 <micros>:
{
     514:	b430      	push	{r4, r5}
     516:	4b0f      	ldr	r3, [pc, #60]	; (554 <micros+0x40>)
     518:	f04f 0c01 	mov.w	ip, #1
     51c:	4d0e      	ldr	r5, [pc, #56]	; (558 <micros+0x44>)
     51e:	4c0f      	ldr	r4, [pc, #60]	; (55c <micros+0x48>)
   __ASM volatile ("ldrex %0, [%1]" : "=r" (result) : "r" (addr) );
     520:	e853 2f00 	ldrex	r2, [r3]
		smc = systick_millis_count;
     524:	6828      	ldr	r0, [r5, #0]
		scc = systick_cycle_count;
     526:	6821      	ldr	r1, [r4, #0]
   __ASM volatile ("strex %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
     528:	e843 c200 	strex	r2, ip, [r3]
	} while ( __STREXW(1, &systick_safe_read));
     52c:	2a00      	cmp	r2, #0
     52e:	d1f7      	bne.n	520 <micros+0xc>
	uint32_t cyccnt = ARM_DWT_CYCCNT;
     530:	4b0b      	ldr	r3, [pc, #44]	; (560 <micros+0x4c>)
     532:	685b      	ldr	r3, [r3, #4]
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
     534:	4a0b      	ldr	r2, [pc, #44]	; (564 <micros+0x50>)
	uint32_t ccdelta = cyccnt - scc;
     536:	1a5b      	subs	r3, r3, r1
	uint32_t usec = 1000*smc + frac;
     538:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
     53c:	6812      	ldr	r2, [r2, #0]
	uint32_t usec = 1000*smc + frac;
     53e:	fb01 f000 	mul.w	r0, r1, r0
	uint32_t frac = ((uint64_t)ccdelta * scale_cpu_cycles_to_microseconds) >> 32;
     542:	fba3 3202 	umull	r3, r2, r3, r2
	return usec;
}
     546:	bc30      	pop	{r4, r5}
     548:	428a      	cmp	r2, r1
     54a:	bf94      	ite	ls
     54c:	1880      	addls	r0, r0, r2
     54e:	1840      	addhi	r0, r0, r1
     550:	4770      	bx	lr
     552:	bf00      	nop
     554:	20003c90 	.word	0x20003c90
     558:	20003c8c 	.word	0x20003c8c
     55c:	20003c88 	.word	0x20003c88
     560:	e0001000 	.word	0xe0001000
     564:	20003c84 	.word	0x20003c84

00000568 <digitalWrite>:
void digitalWrite(uint8_t pin, uint8_t val)
{
	const struct digital_pin_bitband_and_config_table_struct *p;
	uint32_t pinmode, mask;

	if (pin >= CORE_NUM_DIGITAL) return;
     568:	2836      	cmp	r0, #54	; 0x36
     56a:	d816      	bhi.n	59a <digitalWrite+0x32>
	p = digital_pin_to_info_PGM + pin;
     56c:	0102      	lsls	r2, r0, #4
     56e:	4b10      	ldr	r3, [pc, #64]	; (5b0 <digitalWrite+0x48>)
     570:	eb03 1000 	add.w	r0, r3, r0, lsl #4
	pinmode = *(p->reg + 1);
     574:	589b      	ldr	r3, [r3, r2]
{
     576:	b410      	push	{r4}
	mask = p->mask;
     578:	68c2      	ldr	r2, [r0, #12]
	pinmode = *(p->reg + 1);
     57a:	685c      	ldr	r4, [r3, #4]
	if (pinmode & mask) {
     57c:	4214      	tst	r4, r2
     57e:	d005      	beq.n	58c <digitalWrite+0x24>
		// pin is configured for output mode
		if (val) {
     580:	b961      	cbnz	r1, 59c <digitalWrite+0x34>
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(3) | IOMUXC_PAD_HYS;
		} else {
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(0) | IOMUXC_PAD_HYS;
		}
	}
}
     582:	f85d 4b04 	ldr.w	r4, [sp], #4
			*(p->reg + 0x22) = mask; // clear register
     586:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
}
     58a:	4770      	bx	lr
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(3) | IOMUXC_PAD_HYS;
     58c:	6883      	ldr	r3, [r0, #8]
		if (val) {
     58e:	b151      	cbz	r1, 5a6 <digitalWrite+0x3e>
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(3) | IOMUXC_PAD_HYS;
     590:	4a08      	ldr	r2, [pc, #32]	; (5b4 <digitalWrite+0x4c>)
}
     592:	f85d 4b04 	ldr.w	r4, [sp], #4
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(3) | IOMUXC_PAD_HYS;
     596:	601a      	str	r2, [r3, #0]
}
     598:	4770      	bx	lr
     59a:	4770      	bx	lr
     59c:	f85d 4b04 	ldr.w	r4, [sp], #4
			*(p->reg + 0x21) = mask; // set register
     5a0:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
}
     5a4:	4770      	bx	lr
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(0) | IOMUXC_PAD_HYS;
     5a6:	4a04      	ldr	r2, [pc, #16]	; (5b8 <digitalWrite+0x50>)
}
     5a8:	f85d 4b04 	ldr.w	r4, [sp], #4
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(0) | IOMUXC_PAD_HYS;
     5ac:	601a      	str	r2, [r3, #0]
}
     5ae:	4770      	bx	lr
     5b0:	2000203c 	.word	0x2000203c
     5b4:	0001f038 	.word	0x0001f038
     5b8:	00013038 	.word	0x00013038

000005bc <pinMode>:

void pinMode(uint8_t pin, uint8_t mode)
{
	const struct digital_pin_bitband_and_config_table_struct *p;

	if (pin >= CORE_NUM_DIGITAL) return;
     5bc:	2836      	cmp	r0, #54	; 0x36
     5be:	d829      	bhi.n	614 <pinMode+0x58>
	p = digital_pin_to_info_PGM + pin;
     5c0:	4b16      	ldr	r3, [pc, #88]	; (61c <pinMode+0x60>)
     5c2:	0102      	lsls	r2, r0, #4
	if (mode == OUTPUT || mode == OUTPUT_OPENDRAIN) {
     5c4:	2901      	cmp	r1, #1
	p = digital_pin_to_info_PGM + pin;
     5c6:	eb03 1000 	add.w	r0, r3, r0, lsl #4
			*(p->pad) = IOMUXC_PAD_DSE(7);
		} else { // OUTPUT_OPENDRAIN
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_ODE;
		}
	} else {
		*(p->reg + 1) &= ~(p->mask); // TODO: atomic
     5ca:	589a      	ldr	r2, [r3, r2]
{
     5cc:	b410      	push	{r4}
		*(p->reg + 1) &= ~(p->mask); // TODO: atomic
     5ce:	6853      	ldr	r3, [r2, #4]
     5d0:	68c4      	ldr	r4, [r0, #12]
	if (mode == OUTPUT || mode == OUTPUT_OPENDRAIN) {
     5d2:	d00e      	beq.n	5f2 <pinMode+0x36>
     5d4:	2904      	cmp	r1, #4
     5d6:	d00c      	beq.n	5f2 <pinMode+0x36>
		*(p->reg + 1) &= ~(p->mask); // TODO: atomic
     5d8:	ea23 0304 	bic.w	r3, r3, r4
     5dc:	6053      	str	r3, [r2, #4]
		if (mode == INPUT) {
			*(p->pad) = IOMUXC_PAD_DSE(7);
     5de:	6883      	ldr	r3, [r0, #8]
		if (mode == INPUT) {
     5e0:	b1a9      	cbz	r1, 60e <pinMode+0x52>
		} else if (mode == INPUT_PULLUP) {
     5e2:	2902      	cmp	r1, #2
     5e4:	d017      	beq.n	616 <pinMode+0x5a>
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(3) | IOMUXC_PAD_HYS;
		} else if (mode == INPUT_PULLDOWN) {
     5e6:	2903      	cmp	r1, #3
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(0) | IOMUXC_PAD_HYS;
     5e8:	bf0c      	ite	eq
     5ea:	4a0d      	ldreq	r2, [pc, #52]	; (620 <pinMode+0x64>)
		} else { // INPUT_DISABLE
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_HYS;
     5ec:	4a0d      	ldrne	r2, [pc, #52]	; (624 <pinMode+0x68>)
     5ee:	601a      	str	r2, [r3, #0]
     5f0:	e007      	b.n	602 <pinMode+0x46>
		*(p->reg + 1) |= p->mask; // TODO: atomic
     5f2:	4323      	orrs	r3, r4
		if (mode == OUTPUT) {
     5f4:	2901      	cmp	r1, #1
		*(p->reg + 1) |= p->mask; // TODO: atomic
     5f6:	6053      	str	r3, [r2, #4]
			*(p->pad) = IOMUXC_PAD_DSE(7);
     5f8:	6883      	ldr	r3, [r0, #8]
		if (mode == OUTPUT) {
     5fa:	d008      	beq.n	60e <pinMode+0x52>
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_ODE;
     5fc:	f640 0238 	movw	r2, #2104	; 0x838
     600:	601a      	str	r2, [r3, #0]
		}
	}
	*(p->mux) = 5 | 0x10;
     602:	6843      	ldr	r3, [r0, #4]
     604:	2215      	movs	r2, #21
}
     606:	f85d 4b04 	ldr.w	r4, [sp], #4
	*(p->mux) = 5 | 0x10;
     60a:	601a      	str	r2, [r3, #0]
}
     60c:	4770      	bx	lr
			*(p->pad) = IOMUXC_PAD_DSE(7);
     60e:	2238      	movs	r2, #56	; 0x38
     610:	601a      	str	r2, [r3, #0]
     612:	e7f6      	b.n	602 <pinMode+0x46>
     614:	4770      	bx	lr
			*(p->pad) = IOMUXC_PAD_DSE(7) | IOMUXC_PAD_PKE | IOMUXC_PAD_PUE | IOMUXC_PAD_PUS(3) | IOMUXC_PAD_HYS;
     616:	4a04      	ldr	r2, [pc, #16]	; (628 <pinMode+0x6c>)
     618:	601a      	str	r2, [r3, #0]
     61a:	e7f2      	b.n	602 <pinMode+0x46>
     61c:	2000203c 	.word	0x2000203c
     620:	00013038 	.word	0x00013038
     624:	00010038 	.word	0x00010038
     628:	0001f038 	.word	0x0001f038

0000062c <main>:
 */

#include <Arduino.h>

extern "C" int main(void)
{
     62c:	b508      	push	{r3, lr}
	}


#else
	// Arduino's main() function just calls setup() and loop()....
	setup();
     62e:	f7ff fd65 	bl	fc <setup>
	while (1) {
		loop();
     632:	f7ff fe1d 	bl	270 <loop>
		yield();
     636:	f001 fa59 	bl	1aec <yield>
	while (1) {
     63a:	e7fa      	b.n	632 <main+0x6>

0000063c <memcpy>:
	@ r1: src
	@ r2: len
#ifdef __ARM_FEATURE_UNALIGNED
	/* In case of UNALIGNED access supported, ip is not used in
	   function body.  */
	mov	ip, r0
     63c:	4684      	mov	ip, r0
#else
	push	{r0}
#endif
	orr	r3, r1, r0
     63e:	ea41 0300 	orr.w	r3, r1, r0
	ands	r3, r3, #3
     642:	f013 0303 	ands.w	r3, r3, #3
	bne	.Lmisaligned_copy
     646:	d16d      	bne.n	724 <memcpy+0xe8>

.Lbig_block:
	subs	r2, __OPT_BIG_BLOCK_SIZE
     648:	3a40      	subs	r2, #64	; 0x40
	blo	.Lmid_block
     64a:	d341      	bcc.n	6d0 <memcpy+0x94>
.Lbig_block_loop:
	BEGIN_UNROLL_BIG_BLOCK
#ifdef __ARM_ARCH_7EM__
	ldr	r3, [r1], #4
	str	r3, [r0], #4
	END_UNROLL
     64c:	f851 3b04 	ldr.w	r3, [r1], #4
     650:	f840 3b04 	str.w	r3, [r0], #4
     654:	f851 3b04 	ldr.w	r3, [r1], #4
     658:	f840 3b04 	str.w	r3, [r0], #4
     65c:	f851 3b04 	ldr.w	r3, [r1], #4
     660:	f840 3b04 	str.w	r3, [r0], #4
     664:	f851 3b04 	ldr.w	r3, [r1], #4
     668:	f840 3b04 	str.w	r3, [r0], #4
     66c:	f851 3b04 	ldr.w	r3, [r1], #4
     670:	f840 3b04 	str.w	r3, [r0], #4
     674:	f851 3b04 	ldr.w	r3, [r1], #4
     678:	f840 3b04 	str.w	r3, [r0], #4
     67c:	f851 3b04 	ldr.w	r3, [r1], #4
     680:	f840 3b04 	str.w	r3, [r0], #4
     684:	f851 3b04 	ldr.w	r3, [r1], #4
     688:	f840 3b04 	str.w	r3, [r0], #4
     68c:	f851 3b04 	ldr.w	r3, [r1], #4
     690:	f840 3b04 	str.w	r3, [r0], #4
     694:	f851 3b04 	ldr.w	r3, [r1], #4
     698:	f840 3b04 	str.w	r3, [r0], #4
     69c:	f851 3b04 	ldr.w	r3, [r1], #4
     6a0:	f840 3b04 	str.w	r3, [r0], #4
     6a4:	f851 3b04 	ldr.w	r3, [r1], #4
     6a8:	f840 3b04 	str.w	r3, [r0], #4
     6ac:	f851 3b04 	ldr.w	r3, [r1], #4
     6b0:	f840 3b04 	str.w	r3, [r0], #4
     6b4:	f851 3b04 	ldr.w	r3, [r1], #4
     6b8:	f840 3b04 	str.w	r3, [r0], #4
     6bc:	f851 3b04 	ldr.w	r3, [r1], #4
     6c0:	f840 3b04 	str.w	r3, [r0], #4
     6c4:	f851 3b04 	ldr.w	r3, [r1], #4
     6c8:	f840 3b04 	str.w	r3, [r0], #4
	str	r3, [r0, \offset]
	END_UNROLL
	adds	r0, __OPT_BIG_BLOCK_SIZE
	adds	r1, __OPT_BIG_BLOCK_SIZE
#endif
	subs	r2, __OPT_BIG_BLOCK_SIZE
     6cc:	3a40      	subs	r2, #64	; 0x40
	bhs .Lbig_block_loop
     6ce:	d2bd      	bcs.n	64c <memcpy+0x10>

.Lmid_block:
	adds	r2, __OPT_BIG_BLOCK_SIZE - __OPT_MID_BLOCK_SIZE
     6d0:	3230      	adds	r2, #48	; 0x30
	blo	.Lcopy_word_by_word
     6d2:	d311      	bcc.n	6f8 <memcpy+0xbc>
.Lmid_block_loop:
	BEGIN_UNROLL_MID_BLOCK
#ifdef __ARM_ARCH_7EM__
	ldr	r3, [r1], #4
	str	r3, [r0], #4
	END_UNROLL
     6d4:	f851 3b04 	ldr.w	r3, [r1], #4
     6d8:	f840 3b04 	str.w	r3, [r0], #4
     6dc:	f851 3b04 	ldr.w	r3, [r1], #4
     6e0:	f840 3b04 	str.w	r3, [r0], #4
     6e4:	f851 3b04 	ldr.w	r3, [r1], #4
     6e8:	f840 3b04 	str.w	r3, [r0], #4
     6ec:	f851 3b04 	ldr.w	r3, [r1], #4
     6f0:	f840 3b04 	str.w	r3, [r0], #4
	str	r3, [r0, \offset]
	END_UNROLL
	adds    r0, __OPT_MID_BLOCK_SIZE
	adds    r1, __OPT_MID_BLOCK_SIZE
#endif
	subs	r2, __OPT_MID_BLOCK_SIZE
     6f4:	3a10      	subs	r2, #16
	bhs	.Lmid_block_loop
     6f6:	d2ed      	bcs.n	6d4 <memcpy+0x98>

.Lcopy_word_by_word:
	adds	r2, __OPT_MID_BLOCK_SIZE - 4
     6f8:	320c      	adds	r2, #12
	blo	.Lcopy_less_than_4
     6fa:	d305      	bcc.n	708 <memcpy+0xcc>

	/* Kernel loop for small block copy */
	.align 2
.Lcopy_word_by_word_loop:
	ldr	r3, [r1], #4
     6fc:	f851 3b04 	ldr.w	r3, [r1], #4
	str	r3, [r0], #4
     700:	f840 3b04 	str.w	r3, [r0], #4
	subs	r2, #4
     704:	3a04      	subs	r2, #4
	bhs	.Lcopy_word_by_word_loop
     706:	d2f9      	bcs.n	6fc <memcpy+0xc0>

.Lcopy_less_than_4:
	adds	r2, #4
     708:	3204      	adds	r2, #4
	beq	.Ldone
     70a:	d008      	beq.n	71e <memcpy+0xe2>

	lsls	r2, r2, #31
     70c:	07d2      	lsls	r2, r2, #31
	itt ne
     70e:	bf1c      	itt	ne
	ldrbne  r3, [r1], #1
     710:	f811 3b01 	ldrbne.w	r3, [r1], #1
	strbne  r3, [r0], #1
     714:	f800 3b01 	strbne.w	r3, [r0], #1

	bcc	.Ldone
     718:	d301      	bcc.n	71e <memcpy+0xe2>
#ifdef __ARM_FEATURE_UNALIGNED
	ldrh	r3, [r1]
     71a:	880b      	ldrh	r3, [r1, #0]
	strh	r3, [r0]
     71c:	8003      	strh	r3, [r0, #0]
	strb	r3, [r0, #1]
#endif /* __ARM_FEATURE_UNALIGNED */

.Ldone:
#ifdef __ARM_FEATURE_UNALIGNED
	mov	r0, ip
     71e:	4660      	mov	r0, ip
#else
	pop	{r0}
#endif
	bx	lr
     720:	4770      	bx	lr
     722:	bf00      	nop
#define Ldst_aligned Lbig_block

	/* Copy word by word using LDR when alignment can be done in hardware,
	i.e., SCTLR.A is set, supporting unaligned access in LDR and STR.  */

	cmp	r2, #8
     724:	2a08      	cmp	r2, #8
	blo	.Lbyte_copy
     726:	d313      	bcc.n	750 <memcpy+0x114>

	/* if src is aligned, just go to the big block loop.  */
	lsls	r3, r1, #30
     728:	078b      	lsls	r3, r1, #30
	beq	.Ldst_aligned
     72a:	d08d      	beq.n	648 <memcpy+0xc>
	handling of aligned src and misaligned dst need more overhead than
	otherwise.  By doing this the worst case is when initial src is aligned,
	additional up to 4 byte additional copy will executed, which is
	acceptable.  */

	ands	r3, r0, #3
     72c:	f010 0303 	ands.w	r3, r0, #3
	beq	.Ldst_aligned
     730:	d08a      	beq.n	648 <memcpy+0xc>

	rsb	r3, #4
     732:	f1c3 0304 	rsb	r3, r3, #4
	subs	r2, r3
     736:	1ad2      	subs	r2, r2, r3

	lsls    r3, r3, #31
     738:	07db      	lsls	r3, r3, #31
	itt ne
     73a:	bf1c      	itt	ne
	ldrbne  r3, [r1], #1
     73c:	f811 3b01 	ldrbne.w	r3, [r1], #1
	strbne  r3, [r0], #1
     740:	f800 3b01 	strbne.w	r3, [r0], #1

	bcc .Ldst_aligned
     744:	d380      	bcc.n	648 <memcpy+0xc>

#ifdef __ARM_FEATURE_UNALIGNED
	ldrh    r3, [r1], #2
     746:	f831 3b02 	ldrh.w	r3, [r1], #2
	strh    r3, [r0], #2
     74a:	f820 3b02 	strh.w	r3, [r0], #2
	b	.Ldst_aligned
     74e:	e77b      	b.n	648 <memcpy+0xc>
	pop	{r4, r5}

#endif /* __ARM_FEATURE_UNALIGNED */

.Lbyte_copy:
	subs	r2, #4
     750:	3a04      	subs	r2, #4
	blo	.Lcopy_less_than_4
     752:	d3d9      	bcc.n	708 <memcpy+0xcc>

.Lbyte_copy_loop:
	subs    r2, #1
     754:	3a01      	subs	r2, #1
	ldrb    r3, [r1], #1
     756:	f811 3b01 	ldrb.w	r3, [r1], #1
	strb    r3, [r0], #1
     75a:	f800 3b01 	strb.w	r3, [r0], #1
	bhs	.Lbyte_copy_loop
     75e:	d2f9      	bcs.n	754 <memcpy+0x118>

	ldrb	r3, [r1]
     760:	780b      	ldrb	r3, [r1, #0]
	strb	r3, [r0]
     762:	7003      	strb	r3, [r0, #0]
	ldrb	r3, [r1, #1]
     764:	784b      	ldrb	r3, [r1, #1]
	strb	r3, [r0, #1]
     766:	7043      	strb	r3, [r0, #1]
	ldrb	r3, [r1, #2]
     768:	788b      	ldrb	r3, [r1, #2]
	strb	r3, [r0, #2]
     76a:	7083      	strb	r3, [r0, #2]

#ifdef __ARM_FEATURE_UNALIGNED
	mov	r0, ip
     76c:	4660      	mov	r0, ip
#else
	pop	{r0}
#endif
	bx	lr
     76e:	4770      	bx	lr

00000770 <operator new(unsigned int)>:

#include <stdlib.h>

void * operator new(size_t size)
{
	return malloc(size);
     770:	f00b beb0 	b.w	c4d4 <malloc>

00000774 <operator delete(void*)>:
	return malloc(size);
}

void operator delete(void * ptr)
{
	free(ptr);
     774:	f00b beb6 	b.w	c4e4 <free>

00000778 <operator delete(void*, unsigned int)>:
	free(ptr);
}

void operator delete(void * ptr, size_t size __attribute__((unused)))
{
	free(ptr);
     778:	f00b beb4 	b.w	c4e4 <free>

0000077c <ultoa>:


char * ultoa(unsigned long val, char *buf, int radix)
{
	unsigned digit;
	int i=0, j;
     77c:	f101 3cff 	add.w	ip, r1, #4294967295	; 0xffffffff
{
     780:	b570      	push	{r4, r5, r6, lr}
	char t;

	while (1) {
		digit = val % radix;
     782:	4666      	mov	r6, ip
	int i=0, j;
     784:	2400      	movs	r4, #0
     786:	e000      	b.n	78a <ultoa+0xe>
		buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
		val /= radix;
		if (val == 0) break;
		i++;
     788:	3401      	adds	r4, #1
		digit = val % radix;
     78a:	fbb0 f5f2 	udiv	r5, r0, r2
     78e:	fb02 0315 	mls	r3, r2, r5, r0
		buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
     792:	2b09      	cmp	r3, #9
     794:	f103 0e37 	add.w	lr, r3, #55	; 0x37
     798:	f103 0330 	add.w	r3, r3, #48	; 0x30
     79c:	fa5f fe8e 	uxtb.w	lr, lr
     7a0:	bf98      	it	ls
     7a2:	fa5f fe83 	uxtbls.w	lr, r3
		if (val == 0) break;
     7a6:	4290      	cmp	r0, r2
		val /= radix;
     7a8:	4628      	mov	r0, r5
		buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
     7aa:	f806 ef01 	strb.w	lr, [r6, #1]!
		if (val == 0) break;
     7ae:	d2eb      	bcs.n	788 <ultoa+0xc>
	}
	buf[i + 1] = 0;
     7b0:	1c63      	adds	r3, r4, #1
     7b2:	2200      	movs	r2, #0
     7b4:	18c8      	adds	r0, r1, r3
     7b6:	54ca      	strb	r2, [r1, r3]
	for (j=0; j < i; j++, i--) {
     7b8:	b17c      	cbz	r4, 7da <ultoa+0x5e>
		t = buf[j];
     7ba:	4662      	mov	r2, ip
     7bc:	f81c 5f01 	ldrb.w	r5, [ip, #1]!
		buf[j] = buf[i];
     7c0:	f810 6d01 	ldrb.w	r6, [r0, #-1]!
	for (j=0; j < i; j++, i--) {
     7c4:	eba1 030c 	sub.w	r3, r1, ip
     7c8:	3202      	adds	r2, #2
		buf[j] = buf[i];
     7ca:	f88c 6000 	strb.w	r6, [ip]
	for (j=0; j < i; j++, i--) {
     7ce:	3b01      	subs	r3, #1
     7d0:	1a52      	subs	r2, r2, r1
		buf[i] = t;
     7d2:	7005      	strb	r5, [r0, #0]
	for (j=0; j < i; j++, i--) {
     7d4:	4423      	add	r3, r4
     7d6:	429a      	cmp	r2, r3
     7d8:	dbef      	blt.n	7ba <ultoa+0x3e>
	}
	return buf;
}
     7da:	4608      	mov	r0, r1
     7dc:	bd70      	pop	{r4, r5, r6, pc}
     7de:	bf00      	nop

000007e0 <unused_interrupt_vector>:
	__disable_irq();
     7e0:	b672      	cpsid	i
	asm volatile("mrs %0, ipsr\n" : "=r" (ipsr) :: "memory");
     7e2:	f3ef 8305 	mrs	r3, IPSR
	info->ipsr = ipsr;
     7e6:	4c52      	ldr	r4, [pc, #328]	; (930 <unused_interrupt_vector+0x150>)
     7e8:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
	asm volatile("tst lr, #4\nite eq\nmrseq %0, msp\nmrsne %0, psp\n" : "=r" (stack) :: "memory");
     7ec:	f01e 0f04 	tst.w	lr, #4
     7f0:	bf0c      	ite	eq
     7f2:	f3ef 8208 	mrseq	r2, MSP
     7f6:	f3ef 8209 	mrsne	r2, PSP
	info->cfsr = SCB_CFSR;
     7fa:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
	p = (uint32_t *)info;
     7fe:	4e4d      	ldr	r6, [pc, #308]	; (934 <unused_interrupt_vector+0x154>)
	while (p < end) {
     800:	4d4d      	ldr	r5, [pc, #308]	; (938 <unused_interrupt_vector+0x158>)
	info->cfsr = SCB_CFSR;
     802:	f8d3 0d28 	ldr.w	r0, [r3, #3368]	; 0xd28
	info->hfsr = SCB_HFSR;
     806:	f8d3 1d2c 	ldr.w	r1, [r3, #3372]	; 0xd2c
     80a:	e9c4 0122 	strd	r0, r1, [r4, #136]	; 0x88
	info->mmfar = SCB_MMFAR;
     80e:	f8d3 1d34 	ldr.w	r1, [r3, #3380]	; 0xd34
	info->bfar = SCB_BFAR;
     812:	f8d3 3d38 	ldr.w	r3, [r3, #3384]	; 0xd38
     816:	e9c4 1324 	strd	r1, r3, [r4, #144]	; 0x90
	info->ret = stack[6];
     81a:	6993      	ldr	r3, [r2, #24]
     81c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
	info->xpsr = stack[7];
     820:	69d3      	ldr	r3, [r2, #28]
     822:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
	info->temp = tempmonGetTemp();
     826:	f000 f8d1 	bl	9cc <tempmonGetTemp>
     82a:	ed84 0a28 	vstr	s0, [r4, #160]	; 0xa0
	info->time = rtc_get();
     82e:	f001 fc2d 	bl	208c <rtc_get>
	info->len = sizeof(*info) / 4;
     832:	210b      	movs	r1, #11
	crc = 0xFFFFFFFF;
     834:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
	info->time = rtc_get();
     838:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
	info->len = sizeof(*info) / 4;
     83c:	460b      	mov	r3, r1
     83e:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
		for (i=0; i < 32; i++) crc = (crc >> 1) ^ (crc & 1)*0xEDB88320;
     842:	493e      	ldr	r1, [pc, #248]	; (93c <unused_interrupt_vector+0x15c>)
		crc ^= *p++;
     844:	1d30      	adds	r0, r6, #4
     846:	405a      	eors	r2, r3
     848:	2420      	movs	r4, #32
		for (i=0; i < 32; i++) crc = (crc >> 1) ^ (crc & 1)*0xEDB88320;
     84a:	f002 0301 	and.w	r3, r2, #1
     84e:	3c01      	subs	r4, #1
     850:	fb01 f303 	mul.w	r3, r1, r3
     854:	ea83 0252 	eor.w	r2, r3, r2, lsr #1
     858:	d1f7      	bne.n	84a <unused_interrupt_vector+0x6a>
	while (p < end) {
     85a:	42a8      	cmp	r0, r5
     85c:	d002      	beq.n	864 <unused_interrupt_vector+0x84>
		crc ^= *p++;
     85e:	6873      	ldr	r3, [r6, #4]
     860:	4606      	mov	r6, r0
     862:	e7ef      	b.n	844 <unused_interrupt_vector+0x64>
	info->crc = crc;
     864:	4b32      	ldr	r3, [pc, #200]	; (930 <unused_interrupt_vector+0x150>)
     866:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
static inline void arm_dcache_flush_delete(void *addr, uint32_t size)
{
	uint32_t location = (uint32_t)addr & 0xFFFFFFE0;
	uint32_t end_addr = (uint32_t)addr + size;
	asm volatile("": : :"memory");
	asm("dsb");
     86a:	f3bf 8f4f 	dsb	sy
	do {
		SCB_CACHE_DCCIMVAC = location;
     86e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
     872:	4930      	ldr	r1, [pc, #192]	; (934 <unused_interrupt_vector+0x154>)
     874:	4a32      	ldr	r2, [pc, #200]	; (940 <unused_interrupt_vector+0x160>)
     876:	f8c3 1f70 	str.w	r1, [r3, #3952]	; 0xf70
     87a:	f8c3 2f70 	str.w	r2, [r3, #3952]	; 0xf70
		location += 32;
	} while (location < end_addr);
	asm("dsb");
     87e:	f3bf 8f4f 	dsb	sy
	asm("isb");
     882:	f3bf 8f6f 	isb	sy
	CCM_CCGR1 |= CCM_CCGR1_PIT(CCM_CCGR_ON);
     886:	4a2f      	ldr	r2, [pc, #188]	; (944 <unused_interrupt_vector+0x164>)
	PIT_MCR = PIT_MCR_MDIS;
     888:	2502      	movs	r5, #2
     88a:	482f      	ldr	r0, [pc, #188]	; (948 <unused_interrupt_vector+0x168>)
	CCM_CCGR1 |= CCM_CCGR1_PIT(CCM_CCGR_ON);
     88c:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
  	if (F_CPU_ACTUAL > 198000000) set_arm_clock(198000000);
     88e:	492f      	ldr	r1, [pc, #188]	; (94c <unused_interrupt_vector+0x16c>)
	CCM_CCGR1 |= CCM_CCGR1_PIT(CCM_CCGR_ON);
     890:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
     894:	66d3      	str	r3, [r2, #108]	; 0x6c
	PIT_MCR = PIT_MCR_MDIS;
     896:	6005      	str	r5, [r0, #0]
	CCM_CSCMR1 = (CCM_CSCMR1 & ~CCM_CSCMR1_PERCLK_PODF(0x3F)) | CCM_CSCMR1_PERCLK_CLK_SEL;
     898:	69d3      	ldr	r3, [r2, #28]
  	if (F_CPU_ACTUAL > 198000000) set_arm_clock(198000000);
     89a:	482d      	ldr	r0, [pc, #180]	; (950 <unused_interrupt_vector+0x170>)
	CCM_CSCMR1 = (CCM_CSCMR1 & ~CCM_CSCMR1_PERCLK_PODF(0x3F)) | CCM_CSCMR1_PERCLK_CLK_SEL;
     89c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
     8a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
     8a4:	61d3      	str	r3, [r2, #28]
  	if (F_CPU_ACTUAL > 198000000) set_arm_clock(198000000);
     8a6:	680b      	ldr	r3, [r1, #0]
     8a8:	4283      	cmp	r3, r0
     8aa:	d83d      	bhi.n	928 <unused_interrupt_vector+0x148>
	PIT_MCR = 0;
     8ac:	4d26      	ldr	r5, [pc, #152]	; (948 <unused_interrupt_vector+0x168>)
     8ae:	2100      	movs	r1, #0
	NVIC_ICER0 = 0xFFFFFFFF;
     8b0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
     8b4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
	PIT_MCR = 0;
     8b8:	6029      	str	r1, [r5, #0]
	PIT_TCTRL0 = PIT_TCTRL_TEN;
     8ba:	2601      	movs	r6, #1
	PIT_TCTRL0 = 0;
     8bc:	f8c5 1108 	str.w	r1, [r5, #264]	; 0x108
	PIT_LDVAL0 = 2400000; // 2400000 = 100ms
     8c0:	4924      	ldr	r1, [pc, #144]	; (954 <unused_interrupt_vector+0x174>)
     8c2:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
	PIT_TCTRL0 = PIT_TCTRL_TEN;
     8c6:	f8c5 6108 	str.w	r6, [r5, #264]	; 0x108
	NVIC_ICER0 = 0xFFFFFFFF;
     8ca:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
	NVIC_ICER1 = 0xFFFFFFFF;
     8ce:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
	NVIC_ICER2 = 0xFFFFFFFF;
     8d2:	f8c3 2188 	str.w	r2, [r3, #392]	; 0x188
	NVIC_ICER3 = 0xFFFFFFFF;
     8d6:	f8c3 218c 	str.w	r2, [r3, #396]	; 0x18c
	NVIC_ICER4 = 0xFFFFFFFF;
     8da:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190
	count = 0;
     8de:	e001      	b.n	8e4 <unused_interrupt_vector+0x104>
		usb_isr();
     8e0:	f000 f966 	bl	bb0 <usb_isr>
		if (PIT_TFLG0) {
     8e4:	f8d5 310c 	ldr.w	r3, [r5, #268]	; 0x10c
     8e8:	2b00      	cmp	r3, #0
     8ea:	d0f9      	beq.n	8e0 <unused_interrupt_vector+0x100>
			if (++count >= 80) break;  // reboot after 8 seconds
     8ec:	3401      	adds	r4, #1
			PIT_TFLG0 = 1;
     8ee:	f8c5 610c 	str.w	r6, [r5, #268]	; 0x10c
			if (++count >= 80) break;  // reboot after 8 seconds
     8f2:	2c4f      	cmp	r4, #79	; 0x4f
     8f4:	d9f4      	bls.n	8e0 <unused_interrupt_vector+0x100>
	USBPHY1_CTRL_SET = USBPHY_CTRL_SFTRST;
     8f6:	4b18      	ldr	r3, [pc, #96]	; (958 <unused_interrupt_vector+0x178>)
	USB1_USBCMD = USB_USBCMD_RST;
     8f8:	2002      	movs	r0, #2
     8fa:	4918      	ldr	r1, [pc, #96]	; (95c <unused_interrupt_vector+0x17c>)
	USBPHY1_CTRL_SET = USBPHY_CTRL_SFTRST;
     8fc:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
	USB1_USBCMD = USB_USBCMD_RST;
     900:	f8c1 0140 	str.w	r0, [r1, #320]	; 0x140
	USBPHY1_CTRL_SET = USBPHY_CTRL_SFTRST;
     904:	635a      	str	r2, [r3, #52]	; 0x34
	while (PIT_TFLG0 == 0) /* wait 0.1 second for PC to know USB unplugged */
     906:	f8d5 310c 	ldr.w	r3, [r5, #268]	; 0x10c
     90a:	b93b      	cbnz	r3, 91c <unused_interrupt_vector+0x13c>
	SRC_GPR5 = 0x0BAD00F1;
     90c:	4814      	ldr	r0, [pc, #80]	; (960 <unused_interrupt_vector+0x180>)
     90e:	4915      	ldr	r1, [pc, #84]	; (964 <unused_interrupt_vector+0x184>)
	while (PIT_TFLG0 == 0) /* wait 0.1 second for PC to know USB unplugged */
     910:	4a0d      	ldr	r2, [pc, #52]	; (948 <unused_interrupt_vector+0x168>)
	SRC_GPR5 = 0x0BAD00F1;
     912:	6301      	str	r1, [r0, #48]	; 0x30
	while (PIT_TFLG0 == 0) /* wait 0.1 second for PC to know USB unplugged */
     914:	f8d2 310c 	ldr.w	r3, [r2, #268]	; 0x10c
     918:	2b00      	cmp	r3, #0
     91a:	d0fa      	beq.n	912 <unused_interrupt_vector+0x132>
	SCB_AIRCR = 0x05FA0004;
     91c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
     920:	4a11      	ldr	r2, [pc, #68]	; (968 <unused_interrupt_vector+0x188>)
     922:	f8c3 2d0c 	str.w	r2, [r3, #3340]	; 0xd0c
	while (1) ;
     926:	e7fe      	b.n	926 <unused_interrupt_vector+0x146>
  	if (F_CPU_ACTUAL > 198000000) set_arm_clock(198000000);
     928:	f001 f980 	bl	1c2c <set_arm_clock>
     92c:	e7be      	b.n	8ac <unused_interrupt_vector+0xcc>
     92e:	bf00      	nop
     930:	2027ff00 	.word	0x2027ff00
     934:	2027ff80 	.word	0x2027ff80
     938:	2027ffa8 	.word	0x2027ffa8
     93c:	edb88320 	.word	0xedb88320
     940:	2027ffa0 	.word	0x2027ffa0
     944:	400fc000 	.word	0x400fc000
     948:	40084000 	.word	0x40084000
     94c:	20002c04 	.word	0x20002c04
     950:	0bcd3d80 	.word	0x0bcd3d80
     954:	00249f00 	.word	0x00249f00
     958:	400d9000 	.word	0x400d9000
     95c:	402e0000 	.word	0x402e0000
     960:	400f8000 	.word	0x400f8000
     964:	0bad00f1 	.word	0x0bad00f1
     968:	05fa0004 	.word	0x05fa0004

0000096c <_sbrk>:
char *__brkval = (char *)&_heap_start;

__attribute__((weak))
void * _sbrk(int incr)
{
        char *prev = __brkval;
     96c:	490a      	ldr	r1, [pc, #40]	; (998 <_sbrk+0x2c>)
     96e:	680a      	ldr	r2, [r1, #0]
        if (incr != 0) {
     970:	b138      	cbz	r0, 982 <_sbrk+0x16>
{
     972:	b508      	push	{r3, lr}
                if (prev + incr > (char *)&_heap_end) {
     974:	1813      	adds	r3, r2, r0
     976:	4809      	ldr	r0, [pc, #36]	; (99c <_sbrk+0x30>)
     978:	4283      	cmp	r3, r0
     97a:	d804      	bhi.n	986 <_sbrk+0x1a>
                        return (void *)-1;
                }
                __brkval = prev + incr;
        }
        return prev;
}
     97c:	4610      	mov	r0, r2
                __brkval = prev + incr;
     97e:	600b      	str	r3, [r1, #0]
}
     980:	bd08      	pop	{r3, pc}
     982:	4610      	mov	r0, r2
     984:	4770      	bx	lr
                        errno = ENOMEM;
     986:	f009 fffd 	bl	a984 <__errno>
     98a:	230c      	movs	r3, #12
                        return (void *)-1;
     98c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
                        errno = ENOMEM;
     990:	6003      	str	r3, [r0, #0]
}
     992:	4610      	mov	r0, r2
     994:	bd08      	pop	{r3, pc}
     996:	bf00      	nop
     998:	20002c24 	.word	0x20002c24
     99c:	20280000 	.word	0x20280000

000009a0 <_read>:

__attribute__((weak))
int _read(int file __attribute__((unused)), char *ptr __attribute__((unused)), int len __attribute__((unused)))
{
	return 0;
}
     9a0:	2000      	movs	r0, #0
     9a2:	4770      	bx	lr

000009a4 <_close>:

__attribute__((weak))
int _close(int fd __attribute__((unused)))
{
	return -1;
}
     9a4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     9a8:	4770      	bx	lr
     9aa:	bf00      	nop

000009ac <_fstat>:
#include <sys/stat.h>

__attribute__((weak))
int _fstat(int fd __attribute__((unused)), struct stat *st)
{
	st->st_mode = S_IFCHR;
     9ac:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
     9b0:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
     9b2:	604b      	str	r3, [r1, #4]
}
     9b4:	4770      	bx	lr
     9b6:	bf00      	nop

000009b8 <_isatty>:

__attribute__((weak))
int _isatty(int fd __attribute__((unused)))
{
	return 1;
}
     9b8:	2001      	movs	r0, #1
     9ba:	4770      	bx	lr

000009bc <_lseek>:

__attribute__((weak))
int _lseek(int fd __attribute__((unused)), long long offset __attribute__((unused)), int whence __attribute__((unused)))
{
	return -1;
}
     9bc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     9c0:	4770      	bx	lr
     9c2:	bf00      	nop

000009c4 <abort>:
}

__attribute__((weak))
void abort(void)
{
	while (1) asm ("WFI");
     9c4:	bf30      	wfi
     9c6:	e7fd      	b.n	9c4 <abort>

000009c8 <Panic_Temp_isr>:
  unused_interrupt_vector();
     9c8:	f7ff bf0a 	b.w	7e0 <unused_interrupt_vector>

000009cc <tempmonGetTemp>:
float tempmonGetTemp(void)
{
    uint32_t nmeas;
    float tmeas;

    while (!(TEMPMON_TEMPSENSE0 & 0x4U))
     9cc:	4a12      	ldr	r2, [pc, #72]	; (a18 <tempmonGetTemp+0x4c>)
     9ce:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
     9d2:	075b      	lsls	r3, r3, #29
     9d4:	d5fb      	bpl.n	9ce <tempmonGetTemp+0x2>
    {
    }

    /* ready to read temperature code value */
    nmeas = (TEMPMON_TEMPSENSE0 & 0xFFF00U) >> 8U;
     9d6:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
    /* Calculate temperature */
    tmeas = s_hotTemp - (((float)nmeas - (float)s_hotCount) * s_hot_ROOM / s_roomC_hotC);
     9da:	4810      	ldr	r0, [pc, #64]	; (a1c <tempmonGetTemp+0x50>)
    nmeas = (TEMPMON_TEMPSENSE0 & 0xFFF00U) >> 8U;
     9dc:	f3c3 230b 	ubfx	r3, r3, #8, #12
    tmeas = s_hotTemp - (((float)nmeas - (float)s_hotCount) * s_hot_ROOM / s_roomC_hotC);
     9e0:	490f      	ldr	r1, [pc, #60]	; (a20 <tempmonGetTemp+0x54>)
     9e2:	ed90 7a00 	vldr	s14, [r0]
    nmeas = (TEMPMON_TEMPSENSE0 & 0xFFF00U) >> 8U;
     9e6:	ee07 3a90 	vmov	s15, r3
    tmeas = s_hotTemp - (((float)nmeas - (float)s_hotCount) * s_hot_ROOM / s_roomC_hotC);
     9ea:	ed91 6a00 	vldr	s12, [r1]
     9ee:	eeb8 7a47 	vcvt.f32.u32	s14, s14
     9f2:	4a0c      	ldr	r2, [pc, #48]	; (a24 <tempmonGetTemp+0x58>)
     9f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
     9f8:	4b0b      	ldr	r3, [pc, #44]	; (a28 <tempmonGetTemp+0x5c>)
     9fa:	edd2 6a00 	vldr	s13, [r2]
     9fe:	ee77 7ac7 	vsub.f32	s15, s15, s14
     a02:	ed93 7a00 	vldr	s14, [r3]
     a06:	eeb8 7a47 	vcvt.f32.u32	s14, s14
     a0a:	ee67 7a86 	vmul.f32	s15, s15, s12
     a0e:	ee87 0aa6 	vdiv.f32	s0, s15, s13

    return tmeas;
}
     a12:	ee37 0a40 	vsub.f32	s0, s14, s0
     a16:	4770      	bx	lr
     a18:	400d8100 	.word	0x400d8100
     a1c:	20003c74 	.word	0x20003c74
     a20:	20003c7c 	.word	0x20003c7c
     a24:	20003c80 	.word	0x20003c80
     a28:	20003c78 	.word	0x20003c78

00000a2c <schedule_transfer>:
{
	// when we stop at 6, why is the last transfer missing from the USB output?
	//if (transfer_log_count >= 6) return;

	//uint32_t ret = (*(const uint8_t *)transfer->pointer0) << 8;
	if (endpoint->callback_function) {
     a2c:	6b83      	ldr	r3, [r0, #56]	; 0x38
{
     a2e:	b4f0      	push	{r4, r5, r6, r7}
	if (endpoint->callback_function) {
     a30:	b11b      	cbz	r3, a3a <schedule_transfer+0xe>
		transfer->status |= (1<<15);
     a32:	6853      	ldr	r3, [r2, #4]
     a34:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
     a38:	6053      	str	r3, [r2, #4]
	}
	__disable_irq();
     a3a:	b672      	cpsid	i
	//digitalWriteFast(1, HIGH);
	// Executing A Transfer Descriptor, page 2468 (RT1060 manual, Rev 1, 12/2018)
	transfer_t *last = endpoint->last_transfer;
     a3c:	6b44      	ldr	r4, [r0, #52]	; 0x34
	if (last) {
     a3e:	b33c      	cbz	r4, a90 <schedule_transfer+0x64>
		last->next = (uint32_t)transfer;
		if (USB1_ENDPTPRIME & epmask) goto end;
     a40:	4b1a      	ldr	r3, [pc, #104]	; (aac <schedule_transfer+0x80>)
		last->next = (uint32_t)transfer;
     a42:	6022      	str	r2, [r4, #0]
		if (USB1_ENDPTPRIME & epmask) goto end;
     a44:	f8d3 41b0 	ldr.w	r4, [r3, #432]	; 0x1b0
     a48:	420c      	tst	r4, r1
     a4a:	d11d      	bne.n	a88 <schedule_transfer+0x5c>
		//digitalWriteFast(2, HIGH);
		//ret |= 0x01;
		uint32_t status, cyccnt=ARM_DWT_CYCCNT;
     a4c:	4e18      	ldr	r6, [pc, #96]	; (ab0 <schedule_transfer+0x84>)
     a4e:	6877      	ldr	r7, [r6, #4]
     a50:	e004      	b.n	a5c <schedule_transfer+0x30>
		do {
			USB1_USBCMD |= USB_USBCMD_ATDTW;
			status = USB1_ENDPTSTATUS;
		} while (!(USB1_USBCMD & USB_USBCMD_ATDTW) && (ARM_DWT_CYCCNT - cyccnt < 2400));
     a52:	6874      	ldr	r4, [r6, #4]
     a54:	1be4      	subs	r4, r4, r7
     a56:	f5b4 6f16 	cmp.w	r4, #2400	; 0x960
     a5a:	d20b      	bcs.n	a74 <schedule_transfer+0x48>
			USB1_USBCMD |= USB_USBCMD_ATDTW;
     a5c:	f8d3 4140 	ldr.w	r4, [r3, #320]	; 0x140
     a60:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
     a64:	f8c3 4140 	str.w	r4, [r3, #320]	; 0x140
			status = USB1_ENDPTSTATUS;
     a68:	f8d3 51b8 	ldr.w	r5, [r3, #440]	; 0x1b8
		} while (!(USB1_USBCMD & USB_USBCMD_ATDTW) && (ARM_DWT_CYCCNT - cyccnt < 2400));
     a6c:	f8d3 4140 	ldr.w	r4, [r3, #320]	; 0x140
     a70:	0464      	lsls	r4, r4, #17
     a72:	d5ee      	bpl.n	a52 <schedule_transfer+0x26>
		//USB1_USBCMD &= ~USB_USBCMD_ATDTW;
		if (status & epmask) goto end;
     a74:	400d      	ands	r5, r1
     a76:	d107      	bne.n	a88 <schedule_transfer+0x5c>
		//ret |= 0x02;
		endpoint->next = (uint32_t)transfer;
		endpoint->status = 0;
		USB1_ENDPTPRIME |= epmask;
     a78:	4c0c      	ldr	r4, [pc, #48]	; (aac <schedule_transfer+0x80>)
		endpoint->status = 0;
     a7a:	e9c0 2502 	strd	r2, r5, [r0, #8]
		USB1_ENDPTPRIME |= epmask;
     a7e:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     a82:	430b      	orrs	r3, r1
     a84:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
	endpoint->next = (uint32_t)transfer;
	endpoint->status = 0;
	USB1_ENDPTPRIME |= epmask;
	endpoint->first_transfer = transfer;
end:
	endpoint->last_transfer = transfer;
     a88:	6342      	str	r2, [r0, #52]	; 0x34
	__enable_irq();
     a8a:	b662      	cpsie	i
	//digitalWriteFast(2, LOW);
	//digitalWriteFast(1, LOW);
	//if (transfer_log_head > LOG_SIZE) transfer_log_head = 0;
	//transfer_log[transfer_log_head++] = ret;
	//transfer_log_count++;
}
     a8c:	bcf0      	pop	{r4, r5, r6, r7}
     a8e:	4770      	bx	lr
	USB1_ENDPTPRIME |= epmask;
     a90:	4d06      	ldr	r5, [pc, #24]	; (aac <schedule_transfer+0x80>)
	endpoint->status = 0;
     a92:	e9c0 2402 	strd	r2, r4, [r0, #8]
	USB1_ENDPTPRIME |= epmask;
     a96:	f8d5 31b0 	ldr.w	r3, [r5, #432]	; 0x1b0
     a9a:	430b      	orrs	r3, r1
     a9c:	f8c5 31b0 	str.w	r3, [r5, #432]	; 0x1b0
	endpoint->first_transfer = transfer;
     aa0:	6302      	str	r2, [r0, #48]	; 0x30
	endpoint->last_transfer = transfer;
     aa2:	6342      	str	r2, [r0, #52]	; 0x34
	__enable_irq();
     aa4:	b662      	cpsie	i
}
     aa6:	bcf0      	pop	{r4, r5, r6, r7}
     aa8:	4770      	bx	lr
     aaa:	bf00      	nop
     aac:	402e0000 	.word	0x402e0000
     ab0:	e0001000 	.word	0xe0001000

00000ab4 <run_callbacks>:
	void (*callback_function)(transfer_t *completed_transfer);
	uint32_t unused1;
};*/

static void run_callbacks(endpoint_t *ep)
{
     ab4:	b570      	push	{r4, r5, r6, lr}
	//printf("run_callbacks\n");
	transfer_t *first = ep->first_transfer;
     ab6:	6b05      	ldr	r5, [r0, #48]	; 0x30
	if (first == NULL) return;
     ab8:	b19d      	cbz	r5, ae2 <run_callbacks+0x2e>
     aba:	4606      	mov	r6, r0
     abc:	462a      	mov	r2, r5

	// count how many transfers are completed, then remove them from the endpoint's list
	uint32_t count = 0;
     abe:	2400      	movs	r4, #0
     ac0:	e003      	b.n	aca <run_callbacks+0x16>
			//printf(" still active\n");
			ep->first_transfer = t;
			break;
		}
		count++;
		t = (transfer_t *)t->next;
     ac2:	6812      	ldr	r2, [r2, #0]
		count++;
     ac4:	3401      	adds	r4, #1
		if ((uint32_t)t == 1) {
     ac6:	2a01      	cmp	r2, #1
     ac8:	d00c      	beq.n	ae4 <run_callbacks+0x30>
		if (t->status & (1<<7)) {
     aca:	6853      	ldr	r3, [r2, #4]
     acc:	f013 0380 	ands.w	r3, r3, #128	; 0x80
     ad0:	d0f7      	beq.n	ac2 <run_callbacks+0xe>
			ep->first_transfer = t;
     ad2:	6332      	str	r2, [r6, #48]	; 0x30
			ep->last_transfer = NULL;
			break;
		}
	}
	// do all the callbacks
	while (count) {
     ad4:	b12c      	cbz	r4, ae2 <run_callbacks+0x2e>
		transfer_t *next = (transfer_t *)first->next;
     ad6:	4628      	mov	r0, r5
		ep->callback_function(first);
     ad8:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		transfer_t *next = (transfer_t *)first->next;
     ada:	682d      	ldr	r5, [r5, #0]
		ep->callback_function(first);
     adc:	4798      	blx	r3
	while (count) {
     ade:	3c01      	subs	r4, #1
     ae0:	d1f9      	bne.n	ad6 <run_callbacks+0x22>
		first = next;
		count--;
	}
}
     ae2:	bd70      	pop	{r4, r5, r6, pc}
			ep->last_transfer = NULL;
     ae4:	e9c6 330c 	strd	r3, r3, [r6, #48]	; 0x30
			break;
     ae8:	e7f4      	b.n	ad4 <run_callbacks+0x20>
     aea:	bf00      	nop

00000aec <endpoint0_transmit.constprop.0>:
static void endpoint0_transmit(const void *data, uint32_t len, int notify)
     aec:	b430      	push	{r4, r5}
	if (len > 0) {
     aee:	b9d9      	cbnz	r1, b28 <endpoint0_transmit.constprop.0+0x3c>
     af0:	4c1f      	ldr	r4, [pc, #124]	; (b70 <endpoint0_transmit.constprop.0+0x84>)
	endpoint0_transfer_ack.next = 1;
     af2:	4b20      	ldr	r3, [pc, #128]	; (b74 <endpoint0_transmit.constprop.0+0x88>)
	endpoint0_transfer_ack.pointer0 = 0;
     af4:	2100      	movs	r1, #0
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
     af6:	4a20      	ldr	r2, [pc, #128]	; (b78 <endpoint0_transmit.constprop.0+0x8c>)
	endpoint0_transfer_ack.next = 1;
     af8:	2501      	movs	r5, #1
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
     afa:	f04f 1001 	mov.w	r0, #65537	; 0x10001
	endpoint0_transfer_ack.pointer0 = 0;
     afe:	6099      	str	r1, [r3, #8]
	endpoint0_transfer_ack.next = 1;
     b00:	601d      	str	r5, [r3, #0]
	endpoint_queue_head[0].status = 0;
     b02:	e9c4 3102 	strd	r3, r1, [r4, #8]
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
     b06:	2480      	movs	r4, #128	; 0x80
     b08:	605c      	str	r4, [r3, #4]
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
     b0a:	f8c2 01bc 	str.w	r0, [r2, #444]	; 0x1bc
	USB1_ENDPTPRIME |= (1<<0);
     b0e:	f8d2 31b0 	ldr.w	r3, [r2, #432]	; 0x1b0
	endpoint0_notify_mask = (notify ? (1 << 0) : 0);
     b12:	481a      	ldr	r0, [pc, #104]	; (b7c <endpoint0_transmit.constprop.0+0x90>)
	USB1_ENDPTPRIME |= (1<<0);
     b14:	432b      	orrs	r3, r5
     b16:	f8c2 31b0 	str.w	r3, [r2, #432]	; 0x1b0
	endpoint0_notify_mask = (notify ? (1 << 0) : 0);
     b1a:	6001      	str	r1, [r0, #0]
	while (USB1_ENDPTPRIME) ;
     b1c:	f8d2 31b0 	ldr.w	r3, [r2, #432]	; 0x1b0
     b20:	2b00      	cmp	r3, #0
     b22:	d1fb      	bne.n	b1c <endpoint0_transmit.constprop.0+0x30>
}
     b24:	bc30      	pop	{r4, r5}
     b26:	4770      	bx	lr
		endpoint0_transfer_data.status = (len << 16) | (1<<7);
     b28:	0409      	lsls	r1, r1, #16
		endpoint0_transfer_data.next = 1;
     b2a:	4b15      	ldr	r3, [pc, #84]	; (b80 <endpoint0_transmit.constprop.0+0x94>)
		endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_data;
     b2c:	4c10      	ldr	r4, [pc, #64]	; (b70 <endpoint0_transmit.constprop.0+0x84>)
		endpoint0_transfer_data.next = 1;
     b2e:	2501      	movs	r5, #1
		endpoint0_transfer_data.status = (len << 16) | (1<<7);
     b30:	f041 0180 	orr.w	r1, r1, #128	; 0x80
		endpoint0_transfer_data.pointer0 = addr; // format: table 55-60, pg 3159
     b34:	6098      	str	r0, [r3, #8]
		USB1_ENDPTPRIME |= (1<<16);
     b36:	4a10      	ldr	r2, [pc, #64]	; (b78 <endpoint0_transmit.constprop.0+0x8c>)
		endpoint0_transfer_data.status = (len << 16) | (1<<7);
     b38:	6059      	str	r1, [r3, #4]
		endpoint0_transfer_data.pointer1 = addr + 4096;
     b3a:	f500 5180 	add.w	r1, r0, #4096	; 0x1000
		endpoint0_transfer_data.next = 1;
     b3e:	601d      	str	r5, [r3, #0]
		endpoint0_transfer_data.pointer1 = addr + 4096;
     b40:	60d9      	str	r1, [r3, #12]
		endpoint0_transfer_data.pointer2 = addr + 8192;
     b42:	f500 5100 	add.w	r1, r0, #8192	; 0x2000
		endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_data;
     b46:	64a3      	str	r3, [r4, #72]	; 0x48
		endpoint0_transfer_data.pointer2 = addr + 8192;
     b48:	6119      	str	r1, [r3, #16]
		endpoint0_transfer_data.pointer3 = addr + 12288;
     b4a:	f500 5140 	add.w	r1, r0, #12288	; 0x3000
		endpoint0_transfer_data.pointer4 = addr + 16384;
     b4e:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
		endpoint0_transfer_data.pointer3 = addr + 12288;
     b52:	6159      	str	r1, [r3, #20]
		endpoint_queue_head[1].status = 0;
     b54:	2100      	movs	r1, #0
		endpoint0_transfer_data.pointer4 = addr + 16384;
     b56:	6198      	str	r0, [r3, #24]
		endpoint_queue_head[1].status = 0;
     b58:	64e1      	str	r1, [r4, #76]	; 0x4c
		USB1_ENDPTPRIME |= (1<<16);
     b5a:	f8d2 31b0 	ldr.w	r3, [r2, #432]	; 0x1b0
     b5e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
     b62:	f8c2 31b0 	str.w	r3, [r2, #432]	; 0x1b0
		while (USB1_ENDPTPRIME) ;
     b66:	f8d2 31b0 	ldr.w	r3, [r2, #432]	; 0x1b0
     b6a:	2b00      	cmp	r3, #0
     b6c:	d1fb      	bne.n	b66 <endpoint0_transmit.constprop.0+0x7a>
     b6e:	e7c0      	b.n	af2 <endpoint0_transmit.constprop.0+0x6>
     b70:	20000000 	.word	0x20000000
     b74:	200036c0 	.word	0x200036c0
     b78:	402e0000 	.word	0x402e0000
     b7c:	20003bfc 	.word	0x20003bfc
     b80:	200036e0 	.word	0x200036e0

00000b84 <usb_stop_sof_interrupts>:
	sof_usage &= ~(1 << interface);
     b84:	4908      	ldr	r1, [pc, #32]	; (ba8 <usb_stop_sof_interrupts+0x24>)
     b86:	2201      	movs	r2, #1
     b88:	780b      	ldrb	r3, [r1, #0]
     b8a:	fa02 f000 	lsl.w	r0, r2, r0
     b8e:	ea23 0000 	bic.w	r0, r3, r0
     b92:	7008      	strb	r0, [r1, #0]
	if (sof_usage == 0) {
     b94:	b930      	cbnz	r0, ba4 <usb_stop_sof_interrupts+0x20>
		USB1_USBINTR &= ~USB_USBINTR_SRE;
     b96:	4a05      	ldr	r2, [pc, #20]	; (bac <usb_stop_sof_interrupts+0x28>)
     b98:	f8d2 3148 	ldr.w	r3, [r2, #328]	; 0x148
     b9c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
     ba0:	f8c2 3148 	str.w	r3, [r2, #328]	; 0x148
}
     ba4:	4770      	bx	lr
     ba6:	bf00      	nop
     ba8:	20003cb6 	.word	0x20003cb6
     bac:	402e0000 	.word	0x402e0000

00000bb0 <usb_isr>:
{
     bb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint32_t status = USB1_USBSTS;
     bb4:	4c97      	ldr	r4, [pc, #604]	; (e14 <usb_isr+0x264>)
{
     bb6:	b083      	sub	sp, #12
	uint32_t status = USB1_USBSTS;
     bb8:	f8d4 7144 	ldr.w	r7, [r4, #324]	; 0x144
	if (status & USB_USBSTS_UI) {
     bbc:	07fb      	lsls	r3, r7, #31
	USB1_USBSTS = status;
     bbe:	f8c4 7144 	str.w	r7, [r4, #324]	; 0x144
	if (status & USB_USBSTS_UI) {
     bc2:	d553      	bpl.n	c6c <usb_isr+0xbc>
		uint32_t setupstatus = USB1_ENDPTSETUPSTAT;
     bc4:	f8d4 21ac 	ldr.w	r2, [r4, #428]	; 0x1ac
		while (setupstatus) {
     bc8:	2a00      	cmp	r2, #0
     bca:	d04a      	beq.n	c62 <usb_isr+0xb2>
     bcc:	4e92      	ldr	r6, [pc, #584]	; (e18 <usb_isr+0x268>)
     bce:	f8df a260 	ldr.w	sl, [pc, #608]	; e30 <usb_isr+0x280>
		uint32_t addr = (uint32_t)data;
     bd2:	f8df 9274 	ldr.w	r9, [pc, #628]	; e48 <usb_isr+0x298>
		endpoint_queue_head[2].pointer4 = 0xB8C6CF5D;
     bd6:	f8df b274 	ldr.w	fp, [pc, #628]	; e4c <usb_isr+0x29c>
			*((volatile uint32_t *)&USB1_ENDPTCTRL0 + endpoint) |= USB_ENDPTCTRL_RXS;
     bda:	f8df 8274 	ldr.w	r8, [pc, #628]	; e50 <usb_isr+0x2a0>
			USB1_ENDPTSETUPSTAT = setupstatus;
     bde:	f8c4 21ac 	str.w	r2, [r4, #428]	; 0x1ac
				s.word2 = endpoint_queue_head[0].setup1;
     be2:	e9d6 200a 	ldrd	r2, r0, [r6, #40]	; 0x28
				USB1_USBCMD |= USB_USBCMD_SUTW;
     be6:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
     bea:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
     bee:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
			} while (!(USB1_USBCMD & USB_USBCMD_SUTW));
     bf2:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
     bf6:	049d      	lsls	r5, r3, #18
     bf8:	d5f5      	bpl.n	be6 <usb_isr+0x36>
			USB1_USBCMD &= ~USB_USBCMD_SUTW;
     bfa:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
     bfe:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
     c02:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
			USB1_ENDPTFLUSH = (1<<16) | (1<<0); // page 3174
     c06:	f04f 1301 	mov.w	r3, #65537	; 0x10001
     c0a:	f8c4 31b4 	str.w	r3, [r4, #436]	; 0x1b4
			while (USB1_ENDPTFLUSH & ((1<<16) | (1<<0))) ;
     c0e:	f8d4 51b4 	ldr.w	r5, [r4, #436]	; 0x1b4
     c12:	f015 1501 	ands.w	r5, r5, #65537	; 0x10001
     c16:	d1fa      	bne.n	c0e <usb_isr+0x5e>
			endpoint0_notify_mask = 0;
     c18:	b293      	uxth	r3, r2
	setup.bothwords = setupdata;
     c1a:	4684      	mov	ip, r0
			endpoint0_notify_mask = 0;
     c1c:	f8ca 5000 	str.w	r5, [sl]
	switch (setup.wRequestAndType) {
     c20:	f5b3 6f08 	cmp.w	r3, #2176	; 0x880
     c24:	f000 81cf 	beq.w	fc6 <usb_isr+0x416>
     c28:	f200 80db 	bhi.w	de2 <usb_isr+0x232>
     c2c:	f240 3102 	movw	r1, #770	; 0x302
     c30:	428b      	cmp	r3, r1
     c32:	f000 81e7 	beq.w	1004 <usb_isr+0x454>
     c36:	f200 809a 	bhi.w	d6e <usb_isr+0x1be>
     c3a:	2b82      	cmp	r3, #130	; 0x82
     c3c:	f000 81cb 	beq.w	fd6 <usb_isr+0x426>
     c40:	f5b3 7f81 	cmp.w	r3, #258	; 0x102
     c44:	f040 808a 	bne.w	d5c <usb_isr+0x1ac>
		if (endpoint > 7) break;
     c48:	f010 0f78 	tst.w	r0, #120	; 0x78
     c4c:	b283      	uxth	r3, r0
     c4e:	f000 8203 	beq.w	1058 <usb_isr+0x4a8>
	USB1_ENDPTCTRL0 = 0x000010001; // stall
     c52:	f04f 1301 	mov.w	r3, #65537	; 0x10001
     c56:	f8c4 31c0 	str.w	r3, [r4, #448]	; 0x1c0
			setupstatus = USB1_ENDPTSETUPSTAT; // page 3175
     c5a:	f8d4 21ac 	ldr.w	r2, [r4, #428]	; 0x1ac
		while (setupstatus) {
     c5e:	2a00      	cmp	r2, #0
     c60:	d1bd      	bne.n	bde <usb_isr+0x2e>
		uint32_t completestatus = USB1_ENDPTCOMPLETE;
     c62:	4a6c      	ldr	r2, [pc, #432]	; (e14 <usb_isr+0x264>)
     c64:	f8d2 31bc 	ldr.w	r3, [r2, #444]	; 0x1bc
		if (completestatus) {
     c68:	2b00      	cmp	r3, #0
     c6a:	d142      	bne.n	cf2 <usb_isr+0x142>
	if (status & USB_USBSTS_URI) { // page 3164
     c6c:	067e      	lsls	r6, r7, #25
     c6e:	d516      	bpl.n	c9e <usb_isr+0xee>
		USB1_ENDPTSETUPSTAT = USB1_ENDPTSETUPSTAT; // Clear all setup token semaphores
     c70:	4b68      	ldr	r3, [pc, #416]	; (e14 <usb_isr+0x264>)
     c72:	f8d3 21ac 	ldr.w	r2, [r3, #428]	; 0x1ac
     c76:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
		USB1_ENDPTCOMPLETE = USB1_ENDPTCOMPLETE; // Clear all the endpoint complete status
     c7a:	f8d3 21bc 	ldr.w	r2, [r3, #444]	; 0x1bc
     c7e:	f8c3 21bc 	str.w	r2, [r3, #444]	; 0x1bc
		while (USB1_ENDPTPRIME != 0) ; // Wait for any endpoint priming
     c82:	f8d3 41b0 	ldr.w	r4, [r3, #432]	; 0x1b0
     c86:	2c00      	cmp	r4, #0
     c88:	d1fb      	bne.n	c82 <usb_isr+0xd2>
		USB1_ENDPTFLUSH = 0xFFFFFFFF;  // Cancel all endpoint primed status
     c8a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     c8e:	f8c3 21b4 	str.w	r2, [r3, #436]	; 0x1b4
		if ((USB1_PORTSC1 & USB_PORTSC1_PR)) {
     c92:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
		usb_serial_reset();
     c96:	f000 fd2d 	bl	16f4 <usb_serial_reset>
		endpointN_notify_mask = 0;
     c9a:	4b60      	ldr	r3, [pc, #384]	; (e1c <usb_isr+0x26c>)
     c9c:	601c      	str	r4, [r3, #0]
	if (status & USB_USBSTS_TI0) {
     c9e:	01fc      	lsls	r4, r7, #7
     ca0:	d503      	bpl.n	caa <usb_isr+0xfa>
		if (usb_timer0_callback != NULL) usb_timer0_callback();
     ca2:	4b5f      	ldr	r3, [pc, #380]	; (e20 <usb_isr+0x270>)
     ca4:	681b      	ldr	r3, [r3, #0]
     ca6:	b103      	cbz	r3, caa <usb_isr+0xfa>
     ca8:	4798      	blx	r3
	if (status & USB_USBSTS_TI1) {
     caa:	01b8      	lsls	r0, r7, #6
     cac:	d503      	bpl.n	cb6 <usb_isr+0x106>
		if (usb_timer1_callback != NULL) usb_timer1_callback();
     cae:	4b5d      	ldr	r3, [pc, #372]	; (e24 <usb_isr+0x274>)
     cb0:	681b      	ldr	r3, [r3, #0]
     cb2:	b103      	cbz	r3, cb6 <usb_isr+0x106>
     cb4:	4798      	blx	r3
	if (status & USB_USBSTS_PCI) {
     cb6:	0779      	lsls	r1, r7, #29
     cb8:	d508      	bpl.n	ccc <usb_isr+0x11c>
		if (USB1_PORTSC1 & USB_PORTSC1_HSP) {
     cba:	4b56      	ldr	r3, [pc, #344]	; (e14 <usb_isr+0x264>)
     cbc:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
     cc0:	f413 7300 	ands.w	r3, r3, #512	; 0x200
     cc4:	d047      	beq.n	d56 <usb_isr+0x1a6>
			usb_high_speed = 1;
     cc6:	4b58      	ldr	r3, [pc, #352]	; (e28 <usb_isr+0x278>)
     cc8:	2201      	movs	r2, #1
     cca:	701a      	strb	r2, [r3, #0]
	if ((USB1_USBINTR & USB_USBINTR_SRE) && (status & USB_USBSTS_SRI)) {
     ccc:	4b51      	ldr	r3, [pc, #324]	; (e14 <usb_isr+0x264>)
     cce:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
     cd2:	061a      	lsls	r2, r3, #24
     cd4:	d50a      	bpl.n	cec <usb_isr+0x13c>
     cd6:	063b      	lsls	r3, r7, #24
     cd8:	d508      	bpl.n	cec <usb_isr+0x13c>
		if (usb_reboot_timer) {
     cda:	4a54      	ldr	r2, [pc, #336]	; (e2c <usb_isr+0x27c>)
     cdc:	7813      	ldrb	r3, [r2, #0]
     cde:	b12b      	cbz	r3, cec <usb_isr+0x13c>
			if (--usb_reboot_timer == 0) {
     ce0:	3b01      	subs	r3, #1
     ce2:	b2db      	uxtb	r3, r3
     ce4:	7013      	strb	r3, [r2, #0]
     ce6:	2b00      	cmp	r3, #0
     ce8:	f000 8272 	beq.w	11d0 <usb_isr+0x620>
}
     cec:	b003      	add	sp, #12
     cee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			if (completestatus & endpoint0_notify_mask) {
     cf2:	494f      	ldr	r1, [pc, #316]	; (e30 <usb_isr+0x280>)
			USB1_ENDPTCOMPLETE = completestatus;
     cf4:	f8c2 31bc 	str.w	r3, [r2, #444]	; 0x1bc
			if (completestatus & endpoint0_notify_mask) {
     cf8:	6808      	ldr	r0, [r1, #0]
     cfa:	4203      	tst	r3, r0
     cfc:	f040 81d1 	bne.w	10a2 <usb_isr+0x4f2>
			completestatus &= endpointN_notify_mask;
     d00:	4a46      	ldr	r2, [pc, #280]	; (e1c <usb_isr+0x26c>)
     d02:	6814      	ldr	r4, [r2, #0]
			if (completestatus) {
     d04:	401c      	ands	r4, r3
     d06:	d0b1      	beq.n	c6c <usb_isr+0xbc>
				while (tx) {
     d08:	ea5f 4814 	movs.w	r8, r4, lsr #16
     d0c:	d010      	beq.n	d30 <usb_isr+0x180>
     d0e:	4e42      	ldr	r6, [pc, #264]	; (e18 <usb_isr+0x268>)
					tx &= ~(1<<p);
     d10:	f04f 0901 	mov.w	r9, #1
					int p=__builtin_ctz(tx);
     d14:	fa98 f5a8 	rbit	r5, r8
     d18:	fab5 f585 	clz	r5, r5
					run_callbacks(endpoint_queue_head + p * 2 + 1);
     d1c:	eb06 10c5 	add.w	r0, r6, r5, lsl #7
					tx &= ~(1<<p);
     d20:	fa09 f505 	lsl.w	r5, r9, r5
					run_callbacks(endpoint_queue_head + p * 2 + 1);
     d24:	3040      	adds	r0, #64	; 0x40
     d26:	f7ff fec5 	bl	ab4 <run_callbacks>
				while (tx) {
     d2a:	ea38 0805 	bics.w	r8, r8, r5
     d2e:	d1f1      	bne.n	d14 <usb_isr+0x164>
				uint32_t rx = completestatus & 0xffff;
     d30:	b2a4      	uxth	r4, r4
				while(rx) {
     d32:	2c00      	cmp	r4, #0
     d34:	d09a      	beq.n	c6c <usb_isr+0xbc>
     d36:	4e38      	ldr	r6, [pc, #224]	; (e18 <usb_isr+0x268>)
					rx &= ~(1<<p);
     d38:	f04f 0801 	mov.w	r8, #1
					int p=__builtin_ctz(rx);
     d3c:	fa94 f5a4 	rbit	r5, r4
     d40:	fab5 f585 	clz	r5, r5
					run_callbacks(endpoint_queue_head + p * 2);
     d44:	eb06 10c5 	add.w	r0, r6, r5, lsl #7
					rx &= ~(1<<p);
     d48:	fa08 f505 	lsl.w	r5, r8, r5
					run_callbacks(endpoint_queue_head + p * 2);
     d4c:	f7ff feb2 	bl	ab4 <run_callbacks>
				while(rx) {
     d50:	43ac      	bics	r4, r5
     d52:	d1f3      	bne.n	d3c <usb_isr+0x18c>
     d54:	e78a      	b.n	c6c <usb_isr+0xbc>
			usb_high_speed = 0;
     d56:	4a34      	ldr	r2, [pc, #208]	; (e28 <usb_isr+0x278>)
     d58:	7013      	strb	r3, [r2, #0]
     d5a:	e7b7      	b.n	ccc <usb_isr+0x11c>
	switch (setup.wRequestAndType) {
     d5c:	2b80      	cmp	r3, #128	; 0x80
     d5e:	f47f af78 	bne.w	c52 <usb_isr+0xa2>
		reply_buffer[0] = 0;
     d62:	4834      	ldr	r0, [pc, #208]	; (e34 <usb_isr+0x284>)
		endpoint0_transmit(reply_buffer, 2, 0);
     d64:	2102      	movs	r1, #2
		reply_buffer[0] = 0;
     d66:	8005      	strh	r5, [r0, #0]
		endpoint0_transmit(reply_buffer, 2, 0);
     d68:	f7ff fec0 	bl	aec <endpoint0_transmit.constprop.0>
		return;
     d6c:	e775      	b.n	c5a <usb_isr+0xaa>
	switch (setup.wRequestAndType) {
     d6e:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
     d72:	f000 810b 	beq.w	f8c <usb_isr+0x3dc>
     d76:	f5a3 63d0 	sub.w	r3, r3, #1664	; 0x680
     d7a:	2b01      	cmp	r3, #1
     d7c:	f63f af69 	bhi.w	c52 <usb_isr+0xa2>
		for (list = usb_descriptor_list; list->addr != NULL; list++) {
     d80:	4b2d      	ldr	r3, [pc, #180]	; (e38 <usb_isr+0x288>)
     d82:	685d      	ldr	r5, [r3, #4]
     d84:	2d00      	cmp	r5, #0
     d86:	f43f af64 	beq.w	c52 <usb_isr+0xa2>
			if (setup.wValue == list->wValue && setup.wIndex == list->wIndex) {
     d8a:	fa1f fc8c 	uxth.w	ip, ip
     d8e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
     d92:	e004      	b.n	d9e <usb_isr+0x1ee>
		for (list = usb_descriptor_list; list->addr != NULL; list++) {
     d94:	691d      	ldr	r5, [r3, #16]
     d96:	330c      	adds	r3, #12
     d98:	2d00      	cmp	r5, #0
     d9a:	f43f af5a 	beq.w	c52 <usb_isr+0xa2>
			if (setup.wValue == list->wValue && setup.wIndex == list->wIndex) {
     d9e:	881a      	ldrh	r2, [r3, #0]
     da0:	4572      	cmp	r2, lr
     da2:	d1f7      	bne.n	d94 <usb_isr+0x1e4>
     da4:	885a      	ldrh	r2, [r3, #2]
     da6:	4562      	cmp	r2, ip
     da8:	d1f4      	bne.n	d94 <usb_isr+0x1e4>
				if ((setup.wValue >> 8) == 3) {
     daa:	ea4f 221e 	mov.w	r2, lr, lsr #8
     dae:	2a03      	cmp	r2, #3
     db0:	f000 81a5 	beq.w	10fe <usb_isr+0x54e>
					datalen = list->length;
     db4:	891a      	ldrh	r2, [r3, #8]
				if (datalen > setup.wLength) datalen = setup.wLength;
     db6:	0c00      	lsrs	r0, r0, #16
     db8:	4282      	cmp	r2, r0
     dba:	bf28      	it	cs
     dbc:	4602      	movcs	r2, r0
				if (setup.wValue == 0x200) {
     dbe:	f5be 7f00 	cmp.w	lr, #512	; 0x200
     dc2:	f040 81a1 	bne.w	1108 <usb_isr+0x558>
					if (usb_high_speed) src = usb_config_descriptor_480;
     dc6:	4b18      	ldr	r3, [pc, #96]	; (e28 <usb_isr+0x278>)
     dc8:	491c      	ldr	r1, [pc, #112]	; (e3c <usb_isr+0x28c>)
     dca:	7818      	ldrb	r0, [r3, #0]
     dcc:	4b1c      	ldr	r3, [pc, #112]	; (e40 <usb_isr+0x290>)
					memcpy(usb_descriptor_buffer, src, datalen);
     dce:	9201      	str	r2, [sp, #4]
     dd0:	2800      	cmp	r0, #0
     dd2:	bf18      	it	ne
     dd4:	4619      	movne	r1, r3
     dd6:	481b      	ldr	r0, [pc, #108]	; (e44 <usb_isr+0x294>)
     dd8:	f7ff fc30 	bl	63c <memcpy>
     ddc:	4d19      	ldr	r5, [pc, #100]	; (e44 <usb_isr+0x294>)
     dde:	9a01      	ldr	r2, [sp, #4]
     de0:	e1e1      	b.n	11a6 <usb_isr+0x5f6>
	switch (setup.wRequestAndType) {
     de2:	f242 2121 	movw	r1, #8737	; 0x2221
     de6:	428b      	cmp	r3, r1
     de8:	d07c      	beq.n	ee4 <usb_isr+0x334>
     dea:	d933      	bls.n	e54 <usb_isr+0x2a4>
     dec:	f242 3121 	movw	r1, #8993	; 0x2321
     df0:	428b      	cmp	r3, r1
     df2:	f000 8081 	beq.w	ef8 <usb_isr+0x348>
     df6:	f64f 01c0 	movw	r1, #63680	; 0xf8c0
     dfa:	428b      	cmp	r3, r1
     dfc:	f47f af29 	bne.w	c52 <usb_isr+0xa2>
		if ((setup.wIndex & 0xFF00) != 0) break; // 1=Genre, 4=Compat ID, 5=Properties
     e00:	f410 4f7f 	tst.w	r0, #65280	; 0xff00
     e04:	b283      	uxth	r3, r0
     e06:	f47f af24 	bne.w	c52 <usb_isr+0xa2>
		setup.wIndex |= 0xEE00; // alter wIndex and treat as normal USB descriptor
     e0a:	f443 436e 	orr.w	r3, r3, #60928	; 0xee00
     e0e:	f363 0c0f 	bfi	ip, r3, #0, #16
     e12:	e7b5      	b.n	d80 <usb_isr+0x1d0>
     e14:	402e0000 	.word	0x402e0000
     e18:	20000000 	.word	0x20000000
     e1c:	20003c00 	.word	0x20003c00
     e20:	20003ca0 	.word	0x20003ca0
     e24:	20003ca4 	.word	0x20003ca4
     e28:	20003cbc 	.word	0x20003cbc
     e2c:	20003cbd 	.word	0x20003cbd
     e30:	20003bfc 	.word	0x20003bfc
     e34:	20003c3c 	.word	0x20003c3c
     e38:	20002a38 	.word	0x20002a38
     e3c:	60001ec0 	.word	0x60001ec0
     e40:	60001f24 	.word	0x60001f24
     e44:	20200000 	.word	0x20200000
     e48:	20003bf4 	.word	0x20003bf4
     e4c:	b8c6cf5d 	.word	0xb8c6cf5d
     e50:	402e01c0 	.word	0x402e01c0
	switch (setup.wRequestAndType) {
     e54:	f5b3 6f10 	cmp.w	r3, #2304	; 0x900
     e58:	d066      	beq.n	f28 <usb_isr+0x378>
     e5a:	f242 0121 	movw	r1, #8225	; 0x2021
     e5e:	428b      	cmp	r3, r1
     e60:	f47f aef7 	bne.w	c52 <usb_isr+0xa2>
		if (setup.wLength != 7) break;
     e64:	0c03      	lsrs	r3, r0, #16
     e66:	2b07      	cmp	r3, #7
     e68:	f47f aef3 	bne.w	c52 <usb_isr+0xa2>
		endpoint0_transfer_data.next = 1;
     e6c:	4bb2      	ldr	r3, [pc, #712]	; (1138 <usb_isr+0x588>)
		endpoint0_transfer_data.pointer1 = addr + 4096;
     e6e:	49b3      	ldr	r1, [pc, #716]	; (113c <usb_isr+0x58c>)
		endpoint_queue_head[0].status = 0;
     e70:	60f5      	str	r5, [r6, #12]
		endpoint0_transfer_data.pointer1 = addr + 4096;
     e72:	60d9      	str	r1, [r3, #12]
		endpoint0_setupdata.bothwords = setupdata;
     e74:	49b2      	ldr	r1, [pc, #712]	; (1140 <usb_isr+0x590>)
		endpoint_queue_head[0].next = (uint32_t)&endpoint0_transfer_data;
     e76:	60b3      	str	r3, [r6, #8]
		endpoint0_transfer_data.pointer0 = addr; // format: table 55-60, pg 3159
     e78:	f8c3 9008 	str.w	r9, [r3, #8]
		endpoint0_setupdata.bothwords = setupdata;
     e7c:	e9c1 2000 	strd	r2, r0, [r1]
		endpoint0_transfer_data.next = 1;
     e80:	2201      	movs	r2, #1
     e82:	601a      	str	r2, [r3, #0]
		endpoint0_transfer_data.status = (len << 16) | (1<<7);
     e84:	4aaf      	ldr	r2, [pc, #700]	; (1144 <usb_isr+0x594>)
     e86:	605a      	str	r2, [r3, #4]
		endpoint0_transfer_data.pointer2 = addr + 8192;
     e88:	4aaf      	ldr	r2, [pc, #700]	; (1148 <usb_isr+0x598>)
     e8a:	611a      	str	r2, [r3, #16]
		USB1_ENDPTPRIME |= (1<<0);
     e8c:	f8d4 11b0 	ldr.w	r1, [r4, #432]	; 0x1b0
     e90:	f041 0101 	orr.w	r1, r1, #1
     e94:	f8c4 11b0 	str.w	r1, [r4, #432]	; 0x1b0
		endpoint0_transfer_data.pointer3 = addr + 12288;
     e98:	f502 5180 	add.w	r1, r2, #4096	; 0x1000
		endpoint0_transfer_data.pointer4 = addr + 16384;
     e9c:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
		endpoint0_transfer_data.pointer3 = addr + 12288;
     ea0:	6159      	str	r1, [r3, #20]
		endpoint0_transfer_data.pointer4 = addr + 16384;
     ea2:	619a      	str	r2, [r3, #24]
		while (USB1_ENDPTPRIME) ;
     ea4:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     ea8:	2b00      	cmp	r3, #0
     eaa:	d1fb      	bne.n	ea4 <usb_isr+0x2f4>
	endpoint0_transfer_ack.next = 1;
     eac:	4aa7      	ldr	r2, [pc, #668]	; (114c <usb_isr+0x59c>)
	endpoint_queue_head[1].status = 0;
     eae:	64f3      	str	r3, [r6, #76]	; 0x4c
	endpoint0_transfer_ack.pointer0 = 0;
     eb0:	6093      	str	r3, [r2, #8]
	endpoint0_transfer_ack.next = 1;
     eb2:	2301      	movs	r3, #1
	endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_ack;
     eb4:	64b2      	str	r2, [r6, #72]	; 0x48
	endpoint0_transfer_ack.next = 1;
     eb6:	6013      	str	r3, [r2, #0]
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
     eb8:	f248 0380 	movw	r3, #32896	; 0x8080
     ebc:	6053      	str	r3, [r2, #4]
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
     ebe:	f04f 1301 	mov.w	r3, #65537	; 0x10001
     ec2:	f8c4 31bc 	str.w	r3, [r4, #444]	; 0x1bc
	USB1_ENDPTPRIME |= (1<<16);
     ec6:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     eca:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
     ece:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
	endpoint0_notify_mask = (notify ? (1 << 16) : 0);
     ed2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
     ed6:	f8ca 3000 	str.w	r3, [sl]
	while (USB1_ENDPTPRIME) ;
     eda:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     ede:	2b00      	cmp	r3, #0
     ee0:	d1fb      	bne.n	eda <usb_isr+0x32a>
     ee2:	e6ba      	b.n	c5a <usb_isr+0xaa>
		if (setup.wIndex == CDC_STATUS_INTERFACE) {
     ee4:	b280      	uxth	r0, r0
     ee6:	b938      	cbnz	r0, ef8 <usb_isr+0x348>
			usb_cdc_line_rtsdtr_millis = systick_millis_count;
     ee8:	4b99      	ldr	r3, [pc, #612]	; (1150 <usb_isr+0x5a0>)
			usb_cdc_line_rtsdtr = setup.wValue;
     eea:	f3c2 4207 	ubfx	r2, r2, #16, #8
			usb_cdc_line_rtsdtr_millis = systick_millis_count;
     eee:	6819      	ldr	r1, [r3, #0]
     ef0:	4b98      	ldr	r3, [pc, #608]	; (1154 <usb_isr+0x5a4>)
     ef2:	6019      	str	r1, [r3, #0]
			usb_cdc_line_rtsdtr = setup.wValue;
     ef4:	4b98      	ldr	r3, [pc, #608]	; (1158 <usb_isr+0x5a8>)
     ef6:	701a      	strb	r2, [r3, #0]
	endpoint0_transfer_ack.next = 1;
     ef8:	4b94      	ldr	r3, [pc, #592]	; (114c <usb_isr+0x59c>)
	endpoint0_transfer_ack.pointer0 = 0;
     efa:	2200      	movs	r2, #0
     efc:	609a      	str	r2, [r3, #8]
	endpoint_queue_head[1].status = 0;
     efe:	64f2      	str	r2, [r6, #76]	; 0x4c
	endpoint0_transfer_ack.next = 1;
     f00:	2201      	movs	r2, #1
	endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_ack;
     f02:	64b3      	str	r3, [r6, #72]	; 0x48
	endpoint0_transfer_ack.next = 1;
     f04:	601a      	str	r2, [r3, #0]
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
     f06:	2280      	movs	r2, #128	; 0x80
     f08:	605a      	str	r2, [r3, #4]
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
     f0a:	f04f 1301 	mov.w	r3, #65537	; 0x10001
     f0e:	f8c4 31bc 	str.w	r3, [r4, #444]	; 0x1bc
	USB1_ENDPTPRIME |= (1<<16);
     f12:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     f16:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
     f1a:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
	while (USB1_ENDPTPRIME) ;
     f1e:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     f22:	2b00      	cmp	r3, #0
     f24:	d1fb      	bne.n	f1e <usb_isr+0x36e>
     f26:	e698      	b.n	c5a <usb_isr+0xaa>
		usb_configuration = setup.wValue;
     f28:	f3c2 4207 	ubfx	r2, r2, #16, #8
     f2c:	4b8b      	ldr	r3, [pc, #556]	; (115c <usb_isr+0x5ac>)
     f2e:	701a      	strb	r2, [r3, #0]
		USB1_ENDPTCTRL2 = ENDPOINT2_CONFIG;
     f30:	4b8b      	ldr	r3, [pc, #556]	; (1160 <usb_isr+0x5b0>)
     f32:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
		USB1_ENDPTCTRL3 = ENDPOINT3_CONFIG;
     f36:	4b8b      	ldr	r3, [pc, #556]	; (1164 <usb_isr+0x5b4>)
     f38:	f8c4 31cc 	str.w	r3, [r4, #460]	; 0x1cc
		USB1_ENDPTCTRL4 = ENDPOINT4_CONFIG;
     f3c:	4b8a      	ldr	r3, [pc, #552]	; (1168 <usb_isr+0x5b8>)
     f3e:	f8c4 31d0 	str.w	r3, [r4, #464]	; 0x1d0
		usb_serial_configure();
     f42:	f000 fbd9 	bl	16f8 <usb_serial_configure>
		memset(endpoint_queue_head + 2, 0, sizeof(endpoint_t) * 2);
     f46:	2280      	movs	r2, #128	; 0x80
     f48:	4629      	mov	r1, r5
     f4a:	4888      	ldr	r0, [pc, #544]	; (116c <usb_isr+0x5bc>)
     f4c:	f00b fe4e 	bl	cbec <memset>
		endpoint_queue_head[3].pointer4 = 0x74D59319;
     f50:	4b87      	ldr	r3, [pc, #540]	; (1170 <usb_isr+0x5c0>)
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
     f52:	2280      	movs	r2, #128	; 0x80
		endpoint_queue_head[2].pointer4 = 0xB8C6CF5D;
     f54:	f8c6 b0a0 	str.w	fp, [r6, #160]	; 0xa0
		endpoint_queue_head[3].pointer4 = 0x74D59319;
     f58:	f8c6 30e0 	str.w	r3, [r6, #224]	; 0xe0
	endpoint0_transfer_ack.next = 1;
     f5c:	4b7b      	ldr	r3, [pc, #492]	; (114c <usb_isr+0x59c>)
	endpoint_queue_head[1].status = 0;
     f5e:	64f5      	str	r5, [r6, #76]	; 0x4c
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
     f60:	605a      	str	r2, [r3, #4]
	endpoint0_transfer_ack.next = 1;
     f62:	2201      	movs	r2, #1
	endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_ack;
     f64:	64b3      	str	r3, [r6, #72]	; 0x48
	endpoint0_transfer_ack.pointer0 = 0;
     f66:	609d      	str	r5, [r3, #8]
	endpoint0_transfer_ack.next = 1;
     f68:	601a      	str	r2, [r3, #0]
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
     f6a:	f04f 1301 	mov.w	r3, #65537	; 0x10001
     f6e:	f8c4 31bc 	str.w	r3, [r4, #444]	; 0x1bc
	USB1_ENDPTPRIME |= (1<<16);
     f72:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     f76:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
     f7a:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
	endpoint0_notify_mask = (notify ? (1 << 16) : 0);
     f7e:	f8ca 5000 	str.w	r5, [sl]
	while (USB1_ENDPTPRIME) ;
     f82:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     f86:	2b00      	cmp	r3, #0
     f88:	d1fb      	bne.n	f82 <usb_isr+0x3d2>
     f8a:	e666      	b.n	c5a <usb_isr+0xaa>
	endpoint0_transfer_ack.next = 1;
     f8c:	4b6f      	ldr	r3, [pc, #444]	; (114c <usb_isr+0x59c>)
     f8e:	2101      	movs	r1, #1
	endpoint_queue_head[1].status = 0;
     f90:	64f5      	str	r5, [r6, #76]	; 0x4c
	endpoint0_transfer_ack.next = 1;
     f92:	6019      	str	r1, [r3, #0]
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
     f94:	2180      	movs	r1, #128	; 0x80
	endpoint0_transfer_ack.pointer0 = 0;
     f96:	609d      	str	r5, [r3, #8]
	endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_ack;
     f98:	64b3      	str	r3, [r6, #72]	; 0x48
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
     f9a:	6059      	str	r1, [r3, #4]
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
     f9c:	f04f 1301 	mov.w	r3, #65537	; 0x10001
     fa0:	f8c4 31bc 	str.w	r3, [r4, #444]	; 0x1bc
	USB1_ENDPTPRIME |= (1<<16);
     fa4:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     fa8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
     fac:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
	while (USB1_ENDPTPRIME) ;
     fb0:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
     fb4:	2b00      	cmp	r3, #0
     fb6:	d1fb      	bne.n	fb0 <usb_isr+0x400>
		USB1_DEVICEADDR = USB_DEVICEADDR_USBADR(setup.wValue) | USB_DEVICEADDR_USBADRA;
     fb8:	0c13      	lsrs	r3, r2, #16
     fba:	065b      	lsls	r3, r3, #25
     fbc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
     fc0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
		return;
     fc4:	e649      	b.n	c5a <usb_isr+0xaa>
		reply_buffer[0] = usb_configuration;
     fc6:	4b65      	ldr	r3, [pc, #404]	; (115c <usb_isr+0x5ac>)
		endpoint0_transmit(reply_buffer, 1, 0);
     fc8:	2101      	movs	r1, #1
		reply_buffer[0] = usb_configuration;
     fca:	486a      	ldr	r0, [pc, #424]	; (1174 <usb_isr+0x5c4>)
     fcc:	781b      	ldrb	r3, [r3, #0]
     fce:	7003      	strb	r3, [r0, #0]
		endpoint0_transmit(reply_buffer, 1, 0);
     fd0:	f7ff fd8c 	bl	aec <endpoint0_transmit.constprop.0>
		return;
     fd4:	e641      	b.n	c5a <usb_isr+0xaa>
		endpoint = setup.wIndex & 0x7F;
     fd6:	b283      	uxth	r3, r0
		if (endpoint > 7) break;
     fd8:	f010 0078 	ands.w	r0, r0, #120	; 0x78
     fdc:	f47f ae39 	bne.w	c52 <usb_isr+0xa2>
		endpoint = setup.wIndex & 0x7F;
     fe0:	f003 027f 	and.w	r2, r3, #127	; 0x7f
		ctrl = *((uint32_t *)&USB1_ENDPTCTRL0 + endpoint);
     fe4:	f858 1022 	ldr.w	r1, [r8, r2, lsl #2]
		reply_buffer[0] = 0;
     fe8:	4a62      	ldr	r2, [pc, #392]	; (1174 <usb_isr+0x5c4>)
     fea:	8010      	strh	r0, [r2, #0]
		if ((dir && (ctrl & USB_ENDPTCTRL_TXS)) || (!dir && (ctrl & USB_ENDPTCTRL_RXS))) {
     fec:	0618      	lsls	r0, r3, #24
     fee:	f100 809e 	bmi.w	112e <usb_isr+0x57e>
     ff2:	07cb      	lsls	r3, r1, #31
     ff4:	d501      	bpl.n	ffa <usb_isr+0x44a>
			reply_buffer[0] = 1;
     ff6:	2301      	movs	r3, #1
     ff8:	7013      	strb	r3, [r2, #0]
		endpoint0_transmit(reply_buffer, 2, 0);
     ffa:	2102      	movs	r1, #2
     ffc:	485d      	ldr	r0, [pc, #372]	; (1174 <usb_isr+0x5c4>)
     ffe:	f7ff fd75 	bl	aec <endpoint0_transmit.constprop.0>
		return;
    1002:	e62a      	b.n	c5a <usb_isr+0xaa>
		if (endpoint > 7) break;
    1004:	f010 0f78 	tst.w	r0, #120	; 0x78
    1008:	b283      	uxth	r3, r0
    100a:	f47f ae22 	bne.w	c52 <usb_isr+0xa2>
		endpoint = setup.wIndex & 0x7F;
    100e:	f003 027f 	and.w	r2, r3, #127	; 0x7f
		if (dir) {
    1012:	f013 0f80 	tst.w	r3, #128	; 0x80
			*((volatile uint32_t *)&USB1_ENDPTCTRL0 + endpoint) |= USB_ENDPTCTRL_TXS;
    1016:	f858 3022 	ldr.w	r3, [r8, r2, lsl #2]
    101a:	bf14      	ite	ne
    101c:	f443 3380 	orrne.w	r3, r3, #65536	; 0x10000
			*((volatile uint32_t *)&USB1_ENDPTCTRL0 + endpoint) |= USB_ENDPTCTRL_RXS;
    1020:	f043 0301 	orreq.w	r3, r3, #1
    1024:	f848 3022 	str.w	r3, [r8, r2, lsl #2]
	endpoint0_transfer_ack.pointer0 = 0;
    1028:	2200      	movs	r2, #0
	endpoint0_transfer_ack.next = 1;
    102a:	4b48      	ldr	r3, [pc, #288]	; (114c <usb_isr+0x59c>)
	endpoint_queue_head[1].status = 0;
    102c:	64f2      	str	r2, [r6, #76]	; 0x4c
	endpoint0_transfer_ack.pointer0 = 0;
    102e:	609a      	str	r2, [r3, #8]
	endpoint0_transfer_ack.next = 1;
    1030:	2201      	movs	r2, #1
	endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_ack;
    1032:	64b3      	str	r3, [r6, #72]	; 0x48
	endpoint0_transfer_ack.next = 1;
    1034:	601a      	str	r2, [r3, #0]
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
    1036:	2280      	movs	r2, #128	; 0x80
    1038:	605a      	str	r2, [r3, #4]
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
    103a:	f04f 1301 	mov.w	r3, #65537	; 0x10001
    103e:	f8c4 31bc 	str.w	r3, [r4, #444]	; 0x1bc
	USB1_ENDPTPRIME |= (1<<16);
    1042:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
    1046:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
    104a:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
	while (USB1_ENDPTPRIME) ;
    104e:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
    1052:	2b00      	cmp	r3, #0
    1054:	d1fb      	bne.n	104e <usb_isr+0x49e>
    1056:	e600      	b.n	c5a <usb_isr+0xaa>
		endpoint = setup.wIndex & 0x7F;
    1058:	f003 027f 	and.w	r2, r3, #127	; 0x7f
		if (dir) {
    105c:	f013 0f80 	tst.w	r3, #128	; 0x80
			*((volatile uint32_t *)&USB1_ENDPTCTRL0 + endpoint) &= ~USB_ENDPTCTRL_TXS;
    1060:	f858 3022 	ldr.w	r3, [r8, r2, lsl #2]
    1064:	bf14      	ite	ne
    1066:	f423 3380 	bicne.w	r3, r3, #65536	; 0x10000
			*((volatile uint32_t *)&USB1_ENDPTCTRL0 + endpoint) &= ~USB_ENDPTCTRL_RXS;
    106a:	f023 0301 	biceq.w	r3, r3, #1
    106e:	f848 3022 	str.w	r3, [r8, r2, lsl #2]
	endpoint0_transfer_ack.pointer0 = 0;
    1072:	2200      	movs	r2, #0
	endpoint0_transfer_ack.next = 1;
    1074:	4b35      	ldr	r3, [pc, #212]	; (114c <usb_isr+0x59c>)
	endpoint_queue_head[1].status = 0;
    1076:	64f2      	str	r2, [r6, #76]	; 0x4c
	endpoint0_transfer_ack.pointer0 = 0;
    1078:	609a      	str	r2, [r3, #8]
	endpoint0_transfer_ack.next = 1;
    107a:	2201      	movs	r2, #1
	endpoint_queue_head[1].next = (uint32_t)&endpoint0_transfer_ack;
    107c:	64b3      	str	r3, [r6, #72]	; 0x48
	endpoint0_transfer_ack.next = 1;
    107e:	601a      	str	r2, [r3, #0]
	endpoint0_transfer_ack.status = (1<<7) | (notify ? (1 << 15) : 0);
    1080:	2280      	movs	r2, #128	; 0x80
    1082:	605a      	str	r2, [r3, #4]
	USB1_ENDPTCOMPLETE = (1<<0) | (1<<16);
    1084:	f04f 1301 	mov.w	r3, #65537	; 0x10001
    1088:	f8c4 31bc 	str.w	r3, [r4, #444]	; 0x1bc
	USB1_ENDPTPRIME |= (1<<16);
    108c:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
    1090:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
    1094:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
	while (USB1_ENDPTPRIME) ;
    1098:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
    109c:	2b00      	cmp	r3, #0
    109e:	d1fb      	bne.n	1098 <usb_isr+0x4e8>
    10a0:	e5db      	b.n	c5a <usb_isr+0xaa>
				endpoint0_notify_mask = 0;
    10a2:	2000      	movs	r0, #0
    10a4:	6008      	str	r0, [r1, #0]
	setup.bothwords = endpoint0_setupdata.bothwords;
    10a6:	4926      	ldr	r1, [pc, #152]	; (1140 <usb_isr+0x590>)
	if (setup.wRequestAndType == 0x2021 && setup.wIndex == CDC_STATUS_INTERFACE) {
    10a8:	880c      	ldrh	r4, [r1, #0]
	setup.bothwords = endpoint0_setupdata.bothwords;
    10aa:	6848      	ldr	r0, [r1, #4]
	if (setup.wRequestAndType == 0x2021 && setup.wIndex == CDC_STATUS_INTERFACE) {
    10ac:	f242 0121 	movw	r1, #8225	; 0x2021
    10b0:	428c      	cmp	r4, r1
    10b2:	f47f ae25 	bne.w	d00 <usb_isr+0x150>
    10b6:	b280      	uxth	r0, r0
    10b8:	2800      	cmp	r0, #0
    10ba:	f47f ae21 	bne.w	d00 <usb_isr+0x150>
		memcpy(usb_cdc_line_coding, endpoint0_buffer, 7);
    10be:	492e      	ldr	r1, [pc, #184]	; (1178 <usb_isr+0x5c8>)
    10c0:	4c2e      	ldr	r4, [pc, #184]	; (117c <usb_isr+0x5cc>)
    10c2:	c903      	ldmia	r1, {r0, r1}
    10c4:	80a1      	strh	r1, [r4, #4]
		if (usb_cdc_line_coding[0] == 134) {
    10c6:	2886      	cmp	r0, #134	; 0x86
		memcpy(usb_cdc_line_coding, endpoint0_buffer, 7);
    10c8:	ea4f 4111 	mov.w	r1, r1, lsr #16
    10cc:	6020      	str	r0, [r4, #0]
    10ce:	71a1      	strb	r1, [r4, #6]
		if (usb_cdc_line_coding[0] == 134) {
    10d0:	f47f ae16 	bne.w	d00 <usb_isr+0x150>
	__disable_irq();
    10d4:	b672      	cpsid	i
	sof_usage |= (1 << interface);
    10d6:	482a      	ldr	r0, [pc, #168]	; (1180 <usb_isr+0x5d0>)
    10d8:	7801      	ldrb	r1, [r0, #0]
    10da:	f041 0108 	orr.w	r1, r1, #8
    10de:	7001      	strb	r1, [r0, #0]
	uint32_t intr = USB1_USBINTR;
    10e0:	f8d2 1148 	ldr.w	r1, [r2, #328]	; 0x148
	if (!(intr & USB_USBINTR_SRE)) {
    10e4:	060d      	lsls	r5, r1, #24
    10e6:	d405      	bmi.n	10f4 <usb_isr+0x544>
		USB1_USBSTS = USB_USBSTS_SRI; // clear prior SOF before SOF IRQ enable
    10e8:	2080      	movs	r0, #128	; 0x80
		USB1_USBINTR = intr | USB_USBINTR_SRE;
    10ea:	4301      	orrs	r1, r0
		USB1_USBSTS = USB_USBSTS_SRI; // clear prior SOF before SOF IRQ enable
    10ec:	f8c2 0144 	str.w	r0, [r2, #324]	; 0x144
		USB1_USBINTR = intr | USB_USBINTR_SRE;
    10f0:	f8c2 1148 	str.w	r1, [r2, #328]	; 0x148
	__enable_irq();
    10f4:	b662      	cpsie	i
			usb_reboot_timer = 80; // TODO: 10 if only 12 Mbit/sec
    10f6:	4a23      	ldr	r2, [pc, #140]	; (1184 <usb_isr+0x5d4>)
    10f8:	2150      	movs	r1, #80	; 0x50
    10fa:	7011      	strb	r1, [r2, #0]
    10fc:	e600      	b.n	d00 <usb_isr+0x150>
				if (datalen > setup.wLength) datalen = setup.wLength;
    10fe:	0c00      	lsrs	r0, r0, #16
					datalen = *(list->addr);
    1100:	782a      	ldrb	r2, [r5, #0]
    1102:	4282      	cmp	r2, r0
    1104:	bf28      	it	cs
    1106:	4602      	movcs	r2, r0
				} else if (setup.wValue == 0x700) {
    1108:	f5be 6fe0 	cmp.w	lr, #1792	; 0x700
    110c:	d144      	bne.n	1198 <usb_isr+0x5e8>
					if (usb_high_speed) src = usb_config_descriptor_12;
    110e:	4b1e      	ldr	r3, [pc, #120]	; (1188 <usb_isr+0x5d8>)
					memcpy(usb_descriptor_buffer, src, datalen);
    1110:	4d1e      	ldr	r5, [pc, #120]	; (118c <usb_isr+0x5dc>)
					if (usb_high_speed) src = usb_config_descriptor_12;
    1112:	7818      	ldrb	r0, [r3, #0]
    1114:	491e      	ldr	r1, [pc, #120]	; (1190 <usb_isr+0x5e0>)
    1116:	4b1f      	ldr	r3, [pc, #124]	; (1194 <usb_isr+0x5e4>)
					memcpy(usb_descriptor_buffer, src, datalen);
    1118:	9201      	str	r2, [sp, #4]
    111a:	2800      	cmp	r0, #0
    111c:	bf18      	it	ne
    111e:	4619      	movne	r1, r3
    1120:	4628      	mov	r0, r5
    1122:	f7ff fa8b 	bl	63c <memcpy>
					usb_descriptor_buffer[1] = 7;
    1126:	2307      	movs	r3, #7
    1128:	706b      	strb	r3, [r5, #1]
    112a:	9a01      	ldr	r2, [sp, #4]
    112c:	e03b      	b.n	11a6 <usb_isr+0x5f6>
		if ((dir && (ctrl & USB_ENDPTCTRL_TXS)) || (!dir && (ctrl & USB_ENDPTCTRL_RXS))) {
    112e:	03c9      	lsls	r1, r1, #15
    1130:	f53f af61 	bmi.w	ff6 <usb_isr+0x446>
    1134:	e761      	b.n	ffa <usb_isr+0x44a>
    1136:	bf00      	nop
    1138:	200036e0 	.word	0x200036e0
    113c:	20004bf4 	.word	0x20004bf4
    1140:	20003880 	.word	0x20003880
    1144:	00070080 	.word	0x00070080
    1148:	20005bf4 	.word	0x20005bf4
    114c:	200036c0 	.word	0x200036c0
    1150:	20003c8c 	.word	0x20003c8c
    1154:	20003c9c 	.word	0x20003c9c
    1158:	20003cba 	.word	0x20003cba
    115c:	20003cbb 	.word	0x20003cbb
    1160:	00cc0002 	.word	0x00cc0002
    1164:	000200c8 	.word	0x000200c8
    1168:	00c80002 	.word	0x00c80002
    116c:	20000080 	.word	0x20000080
    1170:	74d59319 	.word	0x74d59319
    1174:	20003c3c 	.word	0x20003c3c
    1178:	20003bf4 	.word	0x20003bf4
    117c:	20003c94 	.word	0x20003c94
    1180:	20003cb6 	.word	0x20003cb6
    1184:	20003cbd 	.word	0x20003cbd
    1188:	20003cbc 	.word	0x20003cbc
    118c:	20200000 	.word	0x20200000
    1190:	60001f24 	.word	0x60001f24
    1194:	60001ec0 	.word	0x60001ec0
					memcpy(usb_descriptor_buffer, list->addr, datalen);
    1198:	4629      	mov	r1, r5
    119a:	4d10      	ldr	r5, [pc, #64]	; (11dc <usb_isr+0x62c>)
    119c:	9201      	str	r2, [sp, #4]
    119e:	4628      	mov	r0, r5
    11a0:	f7ff fa4c 	bl	63c <memcpy>
    11a4:	9a01      	ldr	r2, [sp, #4]
	uint32_t location = (uint32_t)addr & 0xFFFFFFE0;
    11a6:	f025 031f 	bic.w	r3, r5, #31
	uint32_t end_addr = (uint32_t)addr + size;
    11aa:	4415      	add	r5, r2
	asm("dsb");
    11ac:	f3bf 8f4f 	dsb	sy
		SCB_CACHE_DCCIMVAC = location;
    11b0:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
    11b4:	f8c1 3f70 	str.w	r3, [r1, #3952]	; 0xf70
		location += 32;
    11b8:	3320      	adds	r3, #32
	} while (location < end_addr);
    11ba:	429d      	cmp	r5, r3
    11bc:	d8fa      	bhi.n	11b4 <usb_isr+0x604>
	asm("dsb");
    11be:	f3bf 8f4f 	dsb	sy
	asm("isb");
    11c2:	f3bf 8f6f 	isb	sy
				endpoint0_transmit(usb_descriptor_buffer, datalen, 0);
    11c6:	4805      	ldr	r0, [pc, #20]	; (11dc <usb_isr+0x62c>)
    11c8:	4611      	mov	r1, r2
    11ca:	f7ff fc8f 	bl	aec <endpoint0_transmit.constprop.0>
				return;
    11ce:	e544      	b.n	c5a <usb_isr+0xaa>
				usb_stop_sof_interrupts(NUM_INTERFACE);
    11d0:	2003      	movs	r0, #3
    11d2:	f7ff fcd7 	bl	b84 <usb_stop_sof_interrupts>
				_reboot_Teensyduino_();
    11d6:	f00f fd43 	bl	10c60 <___reboot_Teensyduino__veneer>
    11da:	bf00      	nop
    11dc:	20200000 	.word	0x20200000

000011e0 <usb_config_rx>:
{
    11e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    11e4:	461f      	mov	r7, r3
	if (ep < 2 || ep > NUM_ENDPOINTS) return;
    11e6:	1e83      	subs	r3, r0, #2
    11e8:	2b02      	cmp	r3, #2
    11ea:	d901      	bls.n	11f0 <usb_config_rx+0x10>
}
    11ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	usb_endpoint_config(endpoint_queue_head + ep * 2, config, cb);
    11f0:	f8df 904c 	ldr.w	r9, [pc, #76]	; 1240 <usb_config_rx+0x60>
    11f4:	4615      	mov	r5, r2
    11f6:	460c      	mov	r4, r1
	memset(qh, 0, sizeof(endpoint_t));
    11f8:	223c      	movs	r2, #60	; 0x3c
	usb_endpoint_config(endpoint_queue_head + ep * 2, config, cb);
    11fa:	eb09 18c0 	add.w	r8, r9, r0, lsl #7
	memset(qh, 0, sizeof(endpoint_t));
    11fe:	4606      	mov	r6, r0
	usb_endpoint_config(endpoint_queue_head + ep * 2, config, cb);
    1200:	ea4f 1ac0 	mov.w	sl, r0, lsl #7
	memset(qh, 0, sizeof(endpoint_t));
    1204:	2100      	movs	r1, #0
    1206:	f108 0004 	add.w	r0, r8, #4
	uint32_t config = (packet_size << 16) | (do_zlp ? 0 : (1 << 29));
    120a:	0424      	lsls	r4, r4, #16
	memset(qh, 0, sizeof(endpoint_t));
    120c:	f00b fcee 	bl	cbec <memset>
	uint32_t config = (packet_size << 16) | (do_zlp ? 0 : (1 << 29));
    1210:	fab5 f285 	clz	r2, r5
	qh->next = 1; // Terminate bit = 1
    1214:	2301      	movs	r3, #1
	uint32_t config = (packet_size << 16) | (do_zlp ? 0 : (1 << 29));
    1216:	0952      	lsrs	r2, r2, #5
    1218:	ea44 7442 	orr.w	r4, r4, r2, lsl #29
	qh->config = config;
    121c:	f849 400a 	str.w	r4, [r9, sl]
	qh->callback_function = callback;
    1220:	f8c8 7038 	str.w	r7, [r8, #56]	; 0x38
	qh->next = 1; // Terminate bit = 1
    1224:	f8c8 3008 	str.w	r3, [r8, #8]
	if (cb) endpointN_notify_mask |= (1 << ep);
    1228:	2f00      	cmp	r7, #0
    122a:	d0df      	beq.n	11ec <usb_config_rx+0xc>
    122c:	4a03      	ldr	r2, [pc, #12]	; (123c <usb_config_rx+0x5c>)
    122e:	40b3      	lsls	r3, r6
    1230:	6811      	ldr	r1, [r2, #0]
    1232:	430b      	orrs	r3, r1
    1234:	6013      	str	r3, [r2, #0]
}
    1236:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    123a:	bf00      	nop
    123c:	20003c00 	.word	0x20003c00
    1240:	20000000 	.word	0x20000000

00001244 <usb_config_tx>:
{
    1244:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    1248:	460d      	mov	r5, r1
	if (ep < 2 || ep > NUM_ENDPOINTS) return;
    124a:	1e81      	subs	r1, r0, #2
    124c:	2902      	cmp	r1, #2
    124e:	d901      	bls.n	1254 <usb_config_tx+0x10>
}
    1250:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	usb_endpoint_config(endpoint_queue_head + ep * 2 + 1, config, cb);
    1254:	01c7      	lsls	r7, r0, #7
    1256:	f8df 904c 	ldr.w	r9, [pc, #76]	; 12a4 <usb_config_tx+0x60>
    125a:	4692      	mov	sl, r2
    125c:	4604      	mov	r4, r0
    125e:	3740      	adds	r7, #64	; 0x40
	memset(qh, 0, sizeof(endpoint_t));
    1260:	223c      	movs	r2, #60	; 0x3c
    1262:	2100      	movs	r1, #0
    1264:	461e      	mov	r6, r3
	usb_endpoint_config(endpoint_queue_head + ep * 2 + 1, config, cb);
    1266:	eb09 0807 	add.w	r8, r9, r7
	uint32_t config = (packet_size << 16) | (do_zlp ? 0 : (1 << 29));
    126a:	042d      	lsls	r5, r5, #16
	memset(qh, 0, sizeof(endpoint_t));
    126c:	f108 0004 	add.w	r0, r8, #4
    1270:	f00b fcbc 	bl	cbec <memset>
	uint32_t config = (packet_size << 16) | (do_zlp ? 0 : (1 << 29));
    1274:	faba f28a 	clz	r2, sl
    1278:	0952      	lsrs	r2, r2, #5
    127a:	ea45 7242 	orr.w	r2, r5, r2, lsl #29
	qh->config = config;
    127e:	f849 2007 	str.w	r2, [r9, r7]
	qh->next = 1; // Terminate bit = 1
    1282:	2201      	movs	r2, #1
	qh->callback_function = callback;
    1284:	f8c8 6038 	str.w	r6, [r8, #56]	; 0x38
	qh->next = 1; // Terminate bit = 1
    1288:	f8c8 2008 	str.w	r2, [r8, #8]
	if (cb) endpointN_notify_mask |= (1 << (ep + 16));
    128c:	2e00      	cmp	r6, #0
    128e:	d0df      	beq.n	1250 <usb_config_tx+0xc>
    1290:	4b03      	ldr	r3, [pc, #12]	; (12a0 <usb_config_tx+0x5c>)
    1292:	3410      	adds	r4, #16
    1294:	6819      	ldr	r1, [r3, #0]
    1296:	40a2      	lsls	r2, r4
    1298:	430a      	orrs	r2, r1
    129a:	601a      	str	r2, [r3, #0]
}
    129c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    12a0:	20003c00 	.word	0x20003c00
    12a4:	20000000 	.word	0x20000000

000012a8 <usb_prepare_transfer>:
	transfer->status = (len << 16) | (1<<7);
    12a8:	0412      	lsls	r2, r2, #16
	transfer->pointer0 = addr;
    12aa:	6081      	str	r1, [r0, #8]
	transfer->callback_param = param;
    12ac:	61c3      	str	r3, [r0, #28]
	transfer->pointer3 = addr + 12288;
    12ae:	f501 5340 	add.w	r3, r1, #12288	; 0x3000
	transfer->status = (len << 16) | (1<<7);
    12b2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
{
    12b6:	b410      	push	{r4}
	transfer->next = 1;
    12b8:	2401      	movs	r4, #1
	transfer->status = (len << 16) | (1<<7);
    12ba:	6042      	str	r2, [r0, #4]
	transfer->pointer2 = addr + 8192;
    12bc:	f501 5200 	add.w	r2, r1, #8192	; 0x2000
	transfer->next = 1;
    12c0:	6004      	str	r4, [r0, #0]
	transfer->pointer1 = addr + 4096;
    12c2:	f501 5480 	add.w	r4, r1, #4096	; 0x1000
	transfer->pointer4 = addr + 16384;
    12c6:	f501 4180 	add.w	r1, r1, #16384	; 0x4000
	transfer->pointer1 = addr + 4096;
    12ca:	60c4      	str	r4, [r0, #12]
	transfer->pointer4 = addr + 16384;
    12cc:	6181      	str	r1, [r0, #24]
}
    12ce:	f85d 4b04 	ldr.w	r4, [sp], #4
	transfer->pointer3 = addr + 12288;
    12d2:	e9c0 2304 	strd	r2, r3, [r0, #16]
}
    12d6:	4770      	bx	lr

000012d8 <usb_transmit>:

void usb_transmit(int endpoint_number, transfer_t *transfer)
{
	if (endpoint_number < 2 || endpoint_number > NUM_ENDPOINTS) return;
    12d8:	1e83      	subs	r3, r0, #2
{
    12da:	460a      	mov	r2, r1
	if (endpoint_number < 2 || endpoint_number > NUM_ENDPOINTS) return;
    12dc:	2b02      	cmp	r3, #2
    12de:	d900      	bls.n	12e2 <usb_transmit+0xa>
	endpoint_t *endpoint = endpoint_queue_head + endpoint_number * 2 + 1;
	uint32_t mask = 1 << (endpoint_number + 16);
	schedule_transfer(endpoint, mask, transfer);
}
    12e0:	4770      	bx	lr
	endpoint_t *endpoint = endpoint_queue_head + endpoint_number * 2 + 1;
    12e2:	4b06      	ldr	r3, [pc, #24]	; (12fc <usb_transmit+0x24>)
	uint32_t mask = 1 << (endpoint_number + 16);
    12e4:	f100 0110 	add.w	r1, r0, #16
    12e8:	f04f 0c01 	mov.w	ip, #1
	endpoint_t *endpoint = endpoint_queue_head + endpoint_number * 2 + 1;
    12ec:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
	schedule_transfer(endpoint, mask, transfer);
    12f0:	fa0c f101 	lsl.w	r1, ip, r1
    12f4:	3040      	adds	r0, #64	; 0x40
    12f6:	f7ff bb99 	b.w	a2c <schedule_transfer>
    12fa:	bf00      	nop
    12fc:	20000000 	.word	0x20000000

00001300 <usb_receive>:

void usb_receive(int endpoint_number, transfer_t *transfer)
{
	if (endpoint_number < 2 || endpoint_number > NUM_ENDPOINTS) return;
    1300:	1e83      	subs	r3, r0, #2
{
    1302:	460a      	mov	r2, r1
	if (endpoint_number < 2 || endpoint_number > NUM_ENDPOINTS) return;
    1304:	2b02      	cmp	r3, #2
    1306:	d900      	bls.n	130a <usb_receive+0xa>
	endpoint_t *endpoint = endpoint_queue_head + endpoint_number * 2;
	uint32_t mask = 1 << endpoint_number;
	schedule_transfer(endpoint, mask, transfer);
}
    1308:	4770      	bx	lr
	uint32_t mask = 1 << endpoint_number;
    130a:	2101      	movs	r1, #1
	endpoint_t *endpoint = endpoint_queue_head + endpoint_number * 2;
    130c:	4b02      	ldr	r3, [pc, #8]	; (1318 <usb_receive+0x18>)
	schedule_transfer(endpoint, mask, transfer);
    130e:	4081      	lsls	r1, r0
    1310:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
    1314:	f7ff bb8a 	b.w	a2c <schedule_transfer>
    1318:	20000000 	.word	0x20000000

0000131c <usb_transfer_status>:
		//if (!(cmd & USB_USBCMD_ATDTW)) continue;
		//if (status & 0x80) break; // for still active, only 1 reading needed
		//if (++count > 1) break; // for completed, check 10 times
	}
#else
	return transfer->status;
    131c:	6840      	ldr	r0, [r0, #4]
#endif
}
    131e:	4770      	bx	lr

00001320 <usb_init_serialnumber>:
void usb_init_serialnumber(void)
{
	char buf[11];
	uint32_t i, num;

	num = HW_OCOTP_MAC0 & 0xFFFFFF;
    1320:	4a12      	ldr	r2, [pc, #72]	; (136c <usb_init_serialnumber+0x4c>)
	// add extra zero to work around OS-X CDC-ACM driver bug
	if (num < 10000000) num = num * 10;
    1322:	4b13      	ldr	r3, [pc, #76]	; (1370 <usb_init_serialnumber+0x50>)
	num = HW_OCOTP_MAC0 & 0xFFFFFF;
    1324:	f8d2 0220 	ldr.w	r0, [r2, #544]	; 0x220
    1328:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
	if (num < 10000000) num = num * 10;
    132c:	4298      	cmp	r0, r3
{
    132e:	b510      	push	{r4, lr}
    1330:	b084      	sub	sp, #16
	if (num < 10000000) num = num * 10;
    1332:	d202      	bcs.n	133a <usb_init_serialnumber+0x1a>
    1334:	eb00 0080 	add.w	r0, r0, r0, lsl #2
    1338:	0040      	lsls	r0, r0, #1
	ultoa(num, buf, 10);
    133a:	4c0e      	ldr	r4, [pc, #56]	; (1374 <usb_init_serialnumber+0x54>)
    133c:	a901      	add	r1, sp, #4
    133e:	220a      	movs	r2, #10
    1340:	f7ff fa1c 	bl	77c <ultoa>
	for (i=0; i<10; i++) {
    1344:	a901      	add	r1, sp, #4
    1346:	2300      	movs	r3, #0
    1348:	4620      	mov	r0, r4
		char c = buf[i];
    134a:	f811 2b01 	ldrb.w	r2, [r1], #1
	for (i=0; i<10; i++) {
    134e:	3301      	adds	r3, #1
		if (!c) break;
    1350:	b13a      	cbz	r2, 1362 <usb_init_serialnumber+0x42>
	for (i=0; i<10; i++) {
    1352:	2b0a      	cmp	r3, #10
		usb_string_serial_number_default.wString[i] = c;
    1354:	f820 2f02 	strh.w	r2, [r0, #2]!
	for (i=0; i<10; i++) {
    1358:	d1f7      	bne.n	134a <usb_init_serialnumber+0x2a>
    135a:	2316      	movs	r3, #22
	}
	usb_string_serial_number_default.bLength = i * 2 + 2;
    135c:	7023      	strb	r3, [r4, #0]
}
    135e:	b004      	add	sp, #16
    1360:	bd10      	pop	{r4, pc}
	usb_string_serial_number_default.bLength = i * 2 + 2;
    1362:	005b      	lsls	r3, r3, #1
    1364:	b2db      	uxtb	r3, r3
    1366:	7023      	strb	r3, [r4, #0]
}
    1368:	b004      	add	sp, #16
    136a:	bd10      	pop	{r4, pc}
    136c:	401f4400 	.word	0x401f4400
    1370:	00989680 	.word	0x00989680
    1374:	20003208 	.word	0x20003208

00001378 <usb_serial_class::clear()>:
        virtual void clear(void) { usb_serial_flush_input(); }
    1378:	f000 badc 	b.w	1934 <usb_serial_flush_input>

0000137c <usb_serial_class::peek()>:
        virtual int peek() { return usb_serial_peekchar(); }
    137c:	f000 baac 	b.w	18d8 <usb_serial_peekchar>

00001380 <usb_serial_class::read()>:
        virtual int read() { return usb_serial_getchar(); }
    1380:	f000 bb10 	b.w	19a4 <usb_serial_getchar>

00001384 <usb_serial_class::available()>:
        virtual int available() { return usb_serial_available(); }
    1384:	f000 baca 	b.w	191c <usb_serial_available>

00001388 <usb_serial_class::flush()>:
        virtual void flush() { usb_serial_flush_output(); }  // TODO: actually wait for data to leave USB...
    1388:	f000 bb66 	b.w	1a58 <usb_serial_flush_output>

0000138c <usb_serial_class::availableForWrite()>:
	virtual int availableForWrite() { return usb_serial_write_buffer_free(); }
    138c:	f000 bb3c 	b.w	1a08 <usb_serial_write_buffer_free>

00001390 <usb_serial_class::write(unsigned char const*, unsigned int)>:
        virtual size_t write(const uint8_t *buffer, size_t size) { return usb_serial_write(buffer, size); }
    1390:	4608      	mov	r0, r1
    1392:	4611      	mov	r1, r2
    1394:	f000 bb2c 	b.w	19f0 <usb_serial_write>

00001398 <rx_queue_transfer>:
/*************************************************************************/
/**                               Receive                               **/
/*************************************************************************/

static void rx_queue_transfer(int i)
{
    1398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	NVIC_DISABLE_IRQ(IRQ_USB1);
	printf("rx queue i=%d\n", i);
	void *buffer = rx_buffer + i * CDC_RX_SIZE_480;
    139a:	4c14      	ldr	r4, [pc, #80]	; (13ec <rx_queue_transfer+0x54>)
	NVIC_DISABLE_IRQ(IRQ_USB1);
    139c:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
	usb_prepare_transfer(rx_transfer + i, buffer, rx_packet_size, i);
    13a0:	4e13      	ldr	r6, [pc, #76]	; (13f0 <rx_queue_transfer+0x58>)
	NVIC_DISABLE_IRQ(IRQ_USB1);
    13a2:	f44f 3200 	mov.w	r2, #131072	; 0x20000
	void *buffer = rx_buffer + i * CDC_RX_SIZE_480;
    13a6:	eb04 2440 	add.w	r4, r4, r0, lsl #9
	usb_prepare_transfer(rx_transfer + i, buffer, rx_packet_size, i);
    13aa:	4f12      	ldr	r7, [pc, #72]	; (13f4 <rx_queue_transfer+0x5c>)
    13ac:	eb06 1640 	add.w	r6, r6, r0, lsl #5
{
    13b0:	4603      	mov	r3, r0
	NVIC_DISABLE_IRQ(IRQ_USB1);
    13b2:	f8c5 218c 	str.w	r2, [r5, #396]	; 0x18c
	usb_prepare_transfer(rx_transfer + i, buffer, rx_packet_size, i);
    13b6:	4621      	mov	r1, r4
    13b8:	883a      	ldrh	r2, [r7, #0]
    13ba:	4630      	mov	r0, r6
    13bc:	f7ff ff74 	bl	12a8 <usb_prepare_transfer>
	arm_dcache_delete(buffer, rx_packet_size);
    13c0:	883b      	ldrh	r3, [r7, #0]
	uint32_t end_addr = (uint32_t)addr + size;
    13c2:	4423      	add	r3, r4
	asm("dsb");
    13c4:	f3bf 8f4f 	dsb	sy
		SCB_CACHE_DCIMVAC = location;
    13c8:	f8c5 4f5c 	str.w	r4, [r5, #3932]	; 0xf5c
		location += 32;
    13cc:	3420      	adds	r4, #32
	} while (location < end_addr);
    13ce:	42a3      	cmp	r3, r4
    13d0:	d8fa      	bhi.n	13c8 <rx_queue_transfer+0x30>
	asm("dsb");
    13d2:	f3bf 8f4f 	dsb	sy
	asm("isb");
    13d6:	f3bf 8f6f 	isb	sy
	usb_receive(CDC_RX_ENDPOINT, rx_transfer + i);
    13da:	2003      	movs	r0, #3
    13dc:	4631      	mov	r1, r6
    13de:	f7ff ff8f 	bl	1300 <usb_receive>
	NVIC_ENABLE_IRQ(IRQ_USB1);
    13e2:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    13e6:	f8c5 310c 	str.w	r3, [r5, #268]	; 0x10c
}
    13ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    13ec:	20200080 	.word	0x20200080
    13f0:	20003700 	.word	0x20003700
    13f4:	20003ca8 	.word	0x20003ca8

000013f8 <rx_event>:

// called by USB interrupt when any packet is received
static void rx_event(transfer_t *t)
{
	int len = rx_packet_size - ((t->status >> 16) & 0x7FFF);
    13f8:	4b24      	ldr	r3, [pc, #144]	; (148c <rx_event+0x94>)
{
    13fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int len = rx_packet_size - ((t->status >> 16) & 0x7FFF);
    13fe:	881c      	ldrh	r4, [r3, #0]
    1400:	6843      	ldr	r3, [r0, #4]
	int i = t->callback_param;
    1402:	69c5      	ldr	r5, [r0, #28]
	int len = rx_packet_size - ((t->status >> 16) & 0x7FFF);
    1404:	f3c3 430e 	ubfx	r3, r3, #16, #15
    1408:	1ae4      	subs	r4, r4, r3
	printf("rx event, len=%d, i=%d\n", len, i);
	if (len > 0) {
    140a:	2c00      	cmp	r4, #0
    140c:	dd24      	ble.n	1458 <rx_event+0x60>
		// received a packet with data
		uint32_t head = rx_head;
    140e:	4920      	ldr	r1, [pc, #128]	; (1490 <rx_event+0x98>)
		if (head != rx_tail) {
    1410:	4820      	ldr	r0, [pc, #128]	; (1494 <rx_event+0x9c>)
		uint32_t head = rx_head;
    1412:	780a      	ldrb	r2, [r1, #0]
		if (head != rx_tail) {
    1414:	7800      	ldrb	r0, [r0, #0]
		uint32_t head = rx_head;
    1416:	b2d3      	uxtb	r3, r2
			// a previous packet is still buffered
			uint32_t ii = rx_list[head];
			uint32_t count = rx_count[ii];
    1418:	4e1f      	ldr	r6, [pc, #124]	; (1498 <rx_event+0xa0>)
		if (head != rx_tail) {
    141a:	4282      	cmp	r2, r0
			uint32_t ii = rx_list[head];
    141c:	481f      	ldr	r0, [pc, #124]	; (149c <rx_event+0xa4>)
		if (head != rx_tail) {
    141e:	d007      	beq.n	1430 <rx_event+0x38>
			uint32_t ii = rx_list[head];
    1420:	f810 8003 	ldrb.w	r8, [r0, r3]
			uint32_t count = rx_count[ii];
    1424:	f836 7018 	ldrh.w	r7, [r6, r8, lsl #1]
			if (len <= CDC_RX_SIZE_480 - count) {
    1428:	f5c7 7200 	rsb	r2, r7, #512	; 0x200
    142c:	4294      	cmp	r4, r2
    142e:	d918      	bls.n	1462 <rx_event+0x6a>
			}
		}
		// add this packet to rx_list
		rx_count[i] = len;
		rx_index[i] = 0;
		if (++head > RX_NUM) head = 0;
    1430:	3301      	adds	r3, #1
		rx_index[i] = 0;
    1432:	2200      	movs	r2, #0
		rx_count[i] = len;
    1434:	f826 4015 	strh.w	r4, [r6, r5, lsl #1]
		if (++head > RX_NUM) head = 0;
    1438:	2b08      	cmp	r3, #8
		rx_index[i] = 0;
    143a:	4e19      	ldr	r6, [pc, #100]	; (14a0 <rx_event+0xa8>)
		if (++head > RX_NUM) head = 0;
    143c:	bf88      	it	hi
    143e:	4613      	movhi	r3, r2
		rx_index[i] = 0;
    1440:	f826 2015 	strh.w	r2, [r6, r5, lsl #1]
		rx_list[head] = i;
		rx_head = head;
    1444:	bf98      	it	ls
    1446:	b2da      	uxtbls	r2, r3
		rx_list[head] = i;
    1448:	54c5      	strb	r5, [r0, r3]
		rx_available += len;
    144a:	4b16      	ldr	r3, [pc, #88]	; (14a4 <rx_event+0xac>)
		rx_head = head;
    144c:	700a      	strb	r2, [r1, #0]
		rx_available += len;
    144e:	681a      	ldr	r2, [r3, #0]
    1450:	4414      	add	r4, r2
    1452:	601c      	str	r4, [r3, #0]
		// TODO: trigger serialEvent
	} else {
		// received a zero length packet
		rx_queue_transfer(i);
	}
}
    1454:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		rx_queue_transfer(i);
    1458:	4628      	mov	r0, r5
}
    145a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		rx_queue_transfer(i);
    145e:	f7ff bf9b 	b.w	1398 <rx_queue_transfer>
				memcpy(rx_buffer + ii * CDC_RX_SIZE_480 + count,
    1462:	eb07 2048 	add.w	r0, r7, r8, lsl #9
    1466:	4910      	ldr	r1, [pc, #64]	; (14a8 <rx_event+0xb0>)
    1468:	4622      	mov	r2, r4
				rx_count[ii] = count + len;
    146a:	4427      	add	r7, r4
				memcpy(rx_buffer + ii * CDC_RX_SIZE_480 + count,
    146c:	4408      	add	r0, r1
    146e:	eb01 2145 	add.w	r1, r1, r5, lsl #9
    1472:	f7ff f8e3 	bl	63c <memcpy>
				rx_available += len;
    1476:	4a0b      	ldr	r2, [pc, #44]	; (14a4 <rx_event+0xac>)
				rx_queue_transfer(i);
    1478:	4628      	mov	r0, r5
				rx_count[ii] = count + len;
    147a:	f826 7018 	strh.w	r7, [r6, r8, lsl #1]
				rx_available += len;
    147e:	6813      	ldr	r3, [r2, #0]
    1480:	4423      	add	r3, r4
}
    1482:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
				rx_available += len;
    1486:	6013      	str	r3, [r2, #0]
				rx_queue_transfer(i);
    1488:	f7ff bf86 	b.w	1398 <rx_queue_transfer>
    148c:	20003ca8 	.word	0x20003ca8
    1490:	20003cb4 	.word	0x20003cb4
    1494:	20003cb5 	.word	0x20003cb5
    1498:	20003c48 	.word	0x20003c48
    149c:	20003c68 	.word	0x20003c68
    14a0:	20003c58 	.word	0x20003c58
    14a4:	20003c44 	.word	0x20003c44
    14a8:	20200080 	.word	0x20200080

000014ac <usb_serial_flush_callback>:
	tx_noautoflush = 0;
}

static void usb_serial_flush_callback(void)
{
	if (tx_noautoflush) return;
    14ac:	4b1d      	ldr	r3, [pc, #116]	; (1524 <usb_serial_flush_callback+0x78>)
    14ae:	781a      	ldrb	r2, [r3, #0]
    14b0:	2a00      	cmp	r2, #0
    14b2:	d136      	bne.n	1522 <usb_serial_flush_callback+0x76>
	if (!usb_configuration) return;
    14b4:	f002 03ff 	and.w	r3, r2, #255	; 0xff
    14b8:	4a1b      	ldr	r2, [pc, #108]	; (1528 <usb_serial_flush_callback+0x7c>)
    14ba:	7812      	ldrb	r2, [r2, #0]
    14bc:	b38a      	cbz	r2, 1522 <usb_serial_flush_callback+0x76>
{
    14be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if (tx_available == 0) return;
    14c2:	4d1a      	ldr	r5, [pc, #104]	; (152c <usb_serial_flush_callback+0x80>)
    14c4:	882a      	ldrh	r2, [r5, #0]
    14c6:	b352      	cbz	r2, 151e <usb_serial_flush_callback+0x72>
	//printf("flush callback, %d bytes\n", TX_SIZE - tx_available);
	transfer_t *xfer = tx_transfer + tx_head;
    14c8:	4e19      	ldr	r6, [pc, #100]	; (1530 <usb_serial_flush_callback+0x84>)
	uint8_t *txbuf = txbuffer + (tx_head * TX_SIZE);
	uint32_t txnum = TX_SIZE - tx_available;
    14ca:	f5c2 6800 	rsb	r8, r2, #2048	; 0x800
	transfer_t *xfer = tx_transfer + tx_head;
    14ce:	4f19      	ldr	r7, [pc, #100]	; (1534 <usb_serial_flush_callback+0x88>)
    14d0:	7832      	ldrb	r2, [r6, #0]
	uint8_t *txbuf = txbuffer + (tx_head * TX_SIZE);
    14d2:	4c19      	ldr	r4, [pc, #100]	; (1538 <usb_serial_flush_callback+0x8c>)
	transfer_t *xfer = tx_transfer + tx_head;
    14d4:	eb07 1742 	add.w	r7, r7, r2, lsl #5
	uint8_t *txbuf = txbuffer + (tx_head * TX_SIZE);
    14d8:	eb04 24c2 	add.w	r4, r4, r2, lsl #11
	usb_prepare_transfer(xfer, txbuf, txnum, 0);
    14dc:	4642      	mov	r2, r8
    14de:	4638      	mov	r0, r7
    14e0:	4621      	mov	r1, r4
    14e2:	f7ff fee1 	bl	12a8 <usb_prepare_transfer>
	uint32_t end_addr = (uint32_t)addr + size;
    14e6:	eb04 0208 	add.w	r2, r4, r8
	asm("dsb");
    14ea:	f3bf 8f4f 	dsb	sy
		SCB_CACHE_DCCIMVAC = location;
    14ee:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
    14f2:	f8c3 4f70 	str.w	r4, [r3, #3952]	; 0xf70
		location += 32;
    14f6:	3420      	adds	r4, #32
	} while (location < end_addr);
    14f8:	42a2      	cmp	r2, r4
    14fa:	d8fa      	bhi.n	14f2 <usb_serial_flush_callback+0x46>
	asm("dsb");
    14fc:	f3bf 8f4f 	dsb	sy
	asm("isb");
    1500:	f3bf 8f6f 	isb	sy
	arm_dcache_flush_delete(txbuf, txnum);
	usb_transmit(CDC_TX_ENDPOINT, xfer);
    1504:	2004      	movs	r0, #4
    1506:	4639      	mov	r1, r7
    1508:	f7ff fee6 	bl	12d8 <usb_transmit>
	if (++tx_head >= TX_NUM) tx_head = 0;
    150c:	7833      	ldrb	r3, [r6, #0]
    150e:	3301      	adds	r3, #1
    1510:	b2db      	uxtb	r3, r3
    1512:	2b03      	cmp	r3, #3
    1514:	bf88      	it	hi
    1516:	2300      	movhi	r3, #0
    1518:	7033      	strb	r3, [r6, #0]
	tx_available = 0;
    151a:	2300      	movs	r3, #0
    151c:	802b      	strh	r3, [r5, #0]
}
    151e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1522:	4770      	bx	lr
    1524:	20003cb9 	.word	0x20003cb9
    1528:	20003cbb 	.word	0x20003cbb
    152c:	20003caa 	.word	0x20003caa
    1530:	20003cb8 	.word	0x20003cb8
    1534:	20003800 	.word	0x20003800
    1538:	20201080 	.word	0x20201080

0000153c <usb_serial_write.part.0>:
int usb_serial_write(const void *buffer, uint32_t size)
    153c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1540:	b085      	sub	sp, #20
	while (size > 0) {
    1542:	e9cd 1001 	strd	r1, r0, [sp, #4]
    1546:	2900      	cmp	r1, #0
    1548:	f000 80bf 	beq.w	16ca <usb_serial_write.part.0+0x18e>
	uint32_t sent=0;
    154c:	2300      	movs	r3, #0
    154e:	4c60      	ldr	r4, [pc, #384]	; (16d0 <usb_serial_write.part.0+0x194>)
    1550:	f8df 8198 	ldr.w	r8, [pc, #408]	; 16ec <usb_serial_write.part.0+0x1b0>
    1554:	f8df a198 	ldr.w	sl, [pc, #408]	; 16f0 <usb_serial_write.part.0+0x1b4>
				wait_begin_at = systick_millis_count;
    1558:	4f5e      	ldr	r7, [pc, #376]	; (16d4 <usb_serial_write.part.0+0x198>)
	uint32_t sent=0;
    155a:	9300      	str	r3, [sp, #0]
		tx_noautoflush = 1;
    155c:	2301      	movs	r3, #1
		transfer_t *xfer = tx_transfer + tx_head;
    155e:	4a5e      	ldr	r2, [pc, #376]	; (16d8 <usb_serial_write.part.0+0x19c>)
		tx_noautoflush = 1;
    1560:	7023      	strb	r3, [r4, #0]
		transfer_t *xfer = tx_transfer + tx_head;
    1562:	4b5e      	ldr	r3, [pc, #376]	; (16dc <usb_serial_write.part.0+0x1a0>)
    1564:	7819      	ldrb	r1, [r3, #0]
		while (!tx_available) {
    1566:	f8b8 3000 	ldrh.w	r3, [r8]
		transfer_t *xfer = tx_transfer + tx_head;
    156a:	eb02 1941 	add.w	r9, r2, r1, lsl #5
		while (!tx_available) {
    156e:	2b00      	cmp	r3, #0
    1570:	f040 80a7 	bne.w	16c2 <usb_serial_write.part.0+0x186>
		uint32_t wait_begin_at=0;
    1574:	461e      	mov	r6, r3
		int waiting=0;
    1576:	461d      	mov	r5, r3
			tx_noautoflush = 0;
    1578:	469b      	mov	fp, r3
			uint32_t status = usb_transfer_status(xfer);
    157a:	4648      	mov	r0, r9
    157c:	f7ff fece 	bl	131c <usb_transfer_status>
			if (!(status & 0x80)) {
    1580:	f010 0080 	ands.w	r0, r0, #128	; 0x80
    1584:	f000 808c 	beq.w	16a0 <usb_serial_write.part.0+0x164>
			asm("dsb" ::: "memory");
    1588:	f3bf 8f4f 	dsb	sy
			if (transmit_previous_timeout) return sent;
    158c:	f89a 3000 	ldrb.w	r3, [sl]
			tx_noautoflush = 0;
    1590:	f884 b000 	strb.w	fp, [r4]
			if (!waiting) {
    1594:	b905      	cbnz	r5, 1598 <usb_serial_write.part.0+0x5c>
				wait_begin_at = systick_millis_count;
    1596:	683e      	ldr	r6, [r7, #0]
			if (transmit_previous_timeout) return sent;
    1598:	2b00      	cmp	r3, #0
    159a:	d17d      	bne.n	1698 <usb_serial_write.part.0+0x15c>
			if (systick_millis_count - wait_begin_at > TX_TIMEOUT_MSEC) {
    159c:	683b      	ldr	r3, [r7, #0]
    159e:	1b9b      	subs	r3, r3, r6
    15a0:	2b78      	cmp	r3, #120	; 0x78
    15a2:	f200 8087 	bhi.w	16b4 <usb_serial_write.part.0+0x178>
			if (!usb_configuration) return sent;
    15a6:	4b4e      	ldr	r3, [pc, #312]	; (16e0 <usb_serial_write.part.0+0x1a4>)
    15a8:	781b      	ldrb	r3, [r3, #0]
    15aa:	2b00      	cmp	r3, #0
    15ac:	d074      	beq.n	1698 <usb_serial_write.part.0+0x15c>
			yield();
    15ae:	f000 fa9d 	bl	1aec <yield>
			tx_noautoflush = 1;
    15b2:	2201      	movs	r2, #1
		while (!tx_available) {
    15b4:	f8b8 3000 	ldrh.w	r3, [r8]
    15b8:	4615      	mov	r5, r2
			tx_noautoflush = 1;
    15ba:	7022      	strb	r2, [r4, #0]
		while (!tx_available) {
    15bc:	2b00      	cmp	r3, #0
    15be:	d0dc      	beq.n	157a <usb_serial_write.part.0+0x3e>
		uint8_t *txdata = txbuffer + (tx_head * TX_SIZE) + (TX_SIZE - tx_available);
    15c0:	4a46      	ldr	r2, [pc, #280]	; (16dc <usb_serial_write.part.0+0x1a0>)
    15c2:	f5c3 6000 	rsb	r0, r3, #2048	; 0x800
    15c6:	7811      	ldrb	r1, [r2, #0]
    15c8:	461a      	mov	r2, r3
    15ca:	eb00 20c1 	add.w	r0, r0, r1, lsl #11
    15ce:	4d45      	ldr	r5, [pc, #276]	; (16e4 <usb_serial_write.part.0+0x1a8>)
    15d0:	02c9      	lsls	r1, r1, #11
    15d2:	4428      	add	r0, r5
		if (size >= tx_available) {
    15d4:	9d01      	ldr	r5, [sp, #4]
    15d6:	4295      	cmp	r5, r2
    15d8:	d217      	bcs.n	160a <usb_serial_write.part.0+0xce>
			memcpy(txdata, data, size);
    15da:	9303      	str	r3, [sp, #12]
    15dc:	e9dd 5101 	ldrd	r5, r1, [sp, #4]
    15e0:	462a      	mov	r2, r5
    15e2:	f7ff f82b 	bl	63c <memcpy>
			tx_available -= size;
    15e6:	9b03      	ldr	r3, [sp, #12]
	USB1_GPTIMER0CTRL = USB_GPTIMERCTRL_GPTRUN | USB_GPTIMERCTRL_GPTRST;
    15e8:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
			tx_available -= size;
    15ec:	1b5b      	subs	r3, r3, r5
    15ee:	f8a8 3000 	strh.w	r3, [r8]
	USB1_GPTIMER0CTRL = USB_GPTIMERCTRL_GPTRUN | USB_GPTIMERCTRL_GPTRST;
    15f2:	4b3d      	ldr	r3, [pc, #244]	; (16e8 <usb_serial_write.part.0+0x1ac>)
    15f4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		asm("dsb" ::: "memory");
    15f8:	f3bf 8f4f 	dsb	sy
			sent += size;
    15fc:	9800      	ldr	r0, [sp, #0]
		tx_noautoflush = 0;
    15fe:	2300      	movs	r3, #0
			sent += size;
    1600:	4428      	add	r0, r5
		tx_noautoflush = 0;
    1602:	7023      	strb	r3, [r4, #0]
}
    1604:	b005      	add	sp, #20
    1606:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			uint8_t *txbuf = txbuffer + (tx_head * TX_SIZE);
    160a:	4b36      	ldr	r3, [pc, #216]	; (16e4 <usb_serial_write.part.0+0x1a8>)
    160c:	18cd      	adds	r5, r1, r3
			memcpy(txdata, data, tx_available);
    160e:	9902      	ldr	r1, [sp, #8]
    1610:	f7ff f814 	bl	63c <memcpy>
			usb_prepare_transfer(xfer, txbuf, TX_SIZE, 0);
    1614:	2300      	movs	r3, #0
    1616:	f44f 6200 	mov.w	r2, #2048	; 0x800
    161a:	4629      	mov	r1, r5
    161c:	4648      	mov	r0, r9
    161e:	f7ff fe43 	bl	12a8 <usb_prepare_transfer>
	asm("dsb");
    1622:	f3bf 8f4f 	dsb	sy
    1626:	f105 0220 	add.w	r2, r5, #32
	uint32_t end_addr = (uint32_t)addr + size;
    162a:	f505 6300 	add.w	r3, r5, #2048	; 0x800
    162e:	4293      	cmp	r3, r2
    1630:	bf34      	ite	cc
    1632:	2301      	movcc	r3, #1
    1634:	2340      	movcs	r3, #64	; 0x40
		SCB_CACHE_DCCIMVAC = location;
    1636:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
    163a:	eb05 1343 	add.w	r3, r5, r3, lsl #5
    163e:	f8c2 5f70 	str.w	r5, [r2, #3952]	; 0xf70
		location += 32;
    1642:	3520      	adds	r5, #32
	} while (location < end_addr);
    1644:	42ab      	cmp	r3, r5
    1646:	d1fa      	bne.n	163e <usb_serial_write.part.0+0x102>
	asm("dsb");
    1648:	f3bf 8f4f 	dsb	sy
	asm("isb");
    164c:	f3bf 8f6f 	isb	sy
			usb_transmit(CDC_TX_ENDPOINT, xfer);
    1650:	2004      	movs	r0, #4
    1652:	4649      	mov	r1, r9
    1654:	f7ff fe40 	bl	12d8 <usb_transmit>
			if (++tx_head >= TX_NUM) tx_head = 0;
    1658:	4a20      	ldr	r2, [pc, #128]	; (16dc <usb_serial_write.part.0+0x1a0>)
    165a:	7813      	ldrb	r3, [r2, #0]
    165c:	3301      	adds	r3, #1
    165e:	b2db      	uxtb	r3, r3
    1660:	2b03      	cmp	r3, #3
    1662:	bf84      	itt	hi
    1664:	2300      	movhi	r3, #0
    1666:	4a1d      	ldrhi	r2, [pc, #116]	; (16dc <usb_serial_write.part.0+0x1a0>)
    1668:	7013      	strb	r3, [r2, #0]
			size -= tx_available;
    166a:	f8b8 3000 	ldrh.w	r3, [r8]
    166e:	9a01      	ldr	r2, [sp, #4]
    1670:	1ad1      	subs	r1, r2, r3
			sent += tx_available;
    1672:	9a00      	ldr	r2, [sp, #0]
    1674:	441a      	add	r2, r3
			size -= tx_available;
    1676:	9101      	str	r1, [sp, #4]
			sent += tx_available;
    1678:	9200      	str	r2, [sp, #0]
			data += tx_available;
    167a:	9a02      	ldr	r2, [sp, #8]
    167c:	441a      	add	r2, r3
			tx_available = 0;
    167e:	2300      	movs	r3, #0
			data += tx_available;
    1680:	9202      	str	r2, [sp, #8]
	USB1_GPTIMER0CTRL = 0;
    1682:	4a19      	ldr	r2, [pc, #100]	; (16e8 <usb_serial_write.part.0+0x1ac>)
			tx_available = 0;
    1684:	f8a8 3000 	strh.w	r3, [r8]
	USB1_GPTIMER0CTRL = 0;
    1688:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
		asm("dsb" ::: "memory");
    168c:	f3bf 8f4f 	dsb	sy
		tx_noautoflush = 0;
    1690:	7023      	strb	r3, [r4, #0]
	while (size > 0) {
    1692:	2900      	cmp	r1, #0
    1694:	f47f af62 	bne.w	155c <usb_serial_write.part.0+0x20>
	return sent;
    1698:	9800      	ldr	r0, [sp, #0]
}
    169a:	b005      	add	sp, #20
    169c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				tx_available = TX_SIZE;
    16a0:	f44f 6200 	mov.w	r2, #2048	; 0x800
		uint8_t *txdata = txbuffer + (tx_head * TX_SIZE) + (TX_SIZE - tx_available);
    16a4:	4b0d      	ldr	r3, [pc, #52]	; (16dc <usb_serial_write.part.0+0x1a0>)
				transmit_previous_timeout = 0;
    16a6:	f88a 0000 	strb.w	r0, [sl]
		uint8_t *txdata = txbuffer + (tx_head * TX_SIZE) + (TX_SIZE - tx_available);
    16aa:	7819      	ldrb	r1, [r3, #0]
				break;
    16ac:	4613      	mov	r3, r2
				tx_available = TX_SIZE;
    16ae:	f8a8 2000 	strh.w	r2, [r8]
				break;
    16b2:	e78a      	b.n	15ca <usb_serial_write.part.0+0x8e>
				transmit_previous_timeout = 1;
    16b4:	2301      	movs	r3, #1
				return sent;
    16b6:	9800      	ldr	r0, [sp, #0]
				transmit_previous_timeout = 1;
    16b8:	f88a 3000 	strb.w	r3, [sl]
}
    16bc:	b005      	add	sp, #20
    16be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		uint8_t *txdata = txbuffer + (tx_head * TX_SIZE) + (TX_SIZE - tx_available);
    16c2:	461a      	mov	r2, r3
    16c4:	f5c3 6000 	rsb	r0, r3, #2048	; 0x800
    16c8:	e77f      	b.n	15ca <usb_serial_write.part.0+0x8e>
	while (size > 0) {
    16ca:	9801      	ldr	r0, [sp, #4]
	return sent;
    16cc:	e7e5      	b.n	169a <usb_serial_write.part.0+0x15e>
    16ce:	bf00      	nop
    16d0:	20003cb9 	.word	0x20003cb9
    16d4:	20003c8c 	.word	0x20003c8c
    16d8:	20003800 	.word	0x20003800
    16dc:	20003cb8 	.word	0x20003cb8
    16e0:	20003cbb 	.word	0x20003cbb
    16e4:	20201080 	.word	0x20201080
    16e8:	402e0000 	.word	0x402e0000
    16ec:	20003caa 	.word	0x20003caa
    16f0:	20003cb7 	.word	0x20003cb7

000016f4 <usb_serial_reset>:
}
    16f4:	4770      	bx	lr
    16f6:	bf00      	nop

000016f8 <usb_serial_configure>:
	if (usb_high_speed) {
    16f8:	4b2d      	ldr	r3, [pc, #180]	; (17b0 <usb_serial_configure+0xb8>)
	memset(tx_transfer, 0, sizeof(tx_transfer));
    16fa:	2100      	movs	r1, #0
    16fc:	2280      	movs	r2, #128	; 0x80
    16fe:	482d      	ldr	r0, [pc, #180]	; (17b4 <usb_serial_configure+0xbc>)
{
    1700:	b570      	push	{r4, r5, r6, lr}
	if (usb_high_speed) {
    1702:	781b      	ldrb	r3, [r3, #0]
	tx_head = 0;
    1704:	2400      	movs	r4, #0
		tx_packet_size = CDC_TX_SIZE_480;
    1706:	4d2c      	ldr	r5, [pc, #176]	; (17b8 <usb_serial_configure+0xc0>)
	if (usb_high_speed) {
    1708:	428b      	cmp	r3, r1
		rx_packet_size = CDC_RX_SIZE_480;
    170a:	4e2c      	ldr	r6, [pc, #176]	; (17bc <usb_serial_configure+0xc4>)
	if (usb_high_speed) {
    170c:	bf0c      	ite	eq
    170e:	2340      	moveq	r3, #64	; 0x40
    1710:	f44f 7300 	movne.w	r3, #512	; 0x200
		tx_packet_size = CDC_TX_SIZE_480;
    1714:	802b      	strh	r3, [r5, #0]
		rx_packet_size = CDC_RX_SIZE_480;
    1716:	8033      	strh	r3, [r6, #0]
	memset(tx_transfer, 0, sizeof(tx_transfer));
    1718:	f00b fa68 	bl	cbec <memset>
	tx_head = 0;
    171c:	4a28      	ldr	r2, [pc, #160]	; (17c0 <usb_serial_configure+0xc8>)
	memset(rx_transfer, 0, sizeof(rx_transfer));
    171e:	4621      	mov	r1, r4
	tx_available = 0;
    1720:	4b28      	ldr	r3, [pc, #160]	; (17c4 <usb_serial_configure+0xcc>)
	tx_head = 0;
    1722:	7014      	strb	r4, [r2, #0]
	memset(rx_transfer, 0, sizeof(rx_transfer));
    1724:	f44f 7280 	mov.w	r2, #256	; 0x100
    1728:	4827      	ldr	r0, [pc, #156]	; (17c8 <usb_serial_configure+0xd0>)
	tx_available = 0;
    172a:	801c      	strh	r4, [r3, #0]
	memset(rx_transfer, 0, sizeof(rx_transfer));
    172c:	f00b fa5e 	bl	cbec <memset>
	memset(rx_count, 0, sizeof(rx_count));
    1730:	4a26      	ldr	r2, [pc, #152]	; (17cc <usb_serial_configure+0xd4>)
	usb_config_tx(CDC_ACM_ENDPOINT, CDC_ACM_SIZE, 0, NULL); // size same 12 & 480
    1732:	2110      	movs	r1, #16
	memset(rx_index, 0, sizeof(rx_index));
    1734:	4b26      	ldr	r3, [pc, #152]	; (17d0 <usb_serial_configure+0xd8>)
	usb_config_tx(CDC_ACM_ENDPOINT, CDC_ACM_SIZE, 0, NULL); // size same 12 & 480
    1736:	2002      	movs	r0, #2
	memset(rx_count, 0, sizeof(rx_count));
    1738:	e9c2 4400 	strd	r4, r4, [r2]
    173c:	e9c2 4402 	strd	r4, r4, [r2, #8]
	rx_head = 0;
    1740:	4a24      	ldr	r2, [pc, #144]	; (17d4 <usb_serial_configure+0xdc>)
	memset(rx_index, 0, sizeof(rx_index));
    1742:	e9c3 4400 	strd	r4, r4, [r3]
	rx_head = 0;
    1746:	7014      	strb	r4, [r2, #0]
	rx_available = 0;
    1748:	4a23      	ldr	r2, [pc, #140]	; (17d8 <usb_serial_configure+0xe0>)
	memset(rx_index, 0, sizeof(rx_index));
    174a:	e9c3 4402 	strd	r4, r4, [r3, #8]
	rx_tail = 0;
    174e:	4b23      	ldr	r3, [pc, #140]	; (17dc <usb_serial_configure+0xe4>)
    1750:	701c      	strb	r4, [r3, #0]
	usb_config_tx(CDC_ACM_ENDPOINT, CDC_ACM_SIZE, 0, NULL); // size same 12 & 480
    1752:	4623      	mov	r3, r4
	rx_available = 0;
    1754:	6014      	str	r4, [r2, #0]
	usb_config_tx(CDC_ACM_ENDPOINT, CDC_ACM_SIZE, 0, NULL); // size same 12 & 480
    1756:	4622      	mov	r2, r4
    1758:	f7ff fd74 	bl	1244 <usb_config_tx>
	usb_config_rx(CDC_RX_ENDPOINT, rx_packet_size, 0, rx_event);
    175c:	4622      	mov	r2, r4
    175e:	8831      	ldrh	r1, [r6, #0]
    1760:	2003      	movs	r0, #3
    1762:	4b1f      	ldr	r3, [pc, #124]	; (17e0 <usb_serial_configure+0xe8>)
    1764:	f7ff fd3c 	bl	11e0 <usb_config_rx>
	usb_config_tx(CDC_TX_ENDPOINT, tx_packet_size, 1, NULL);
    1768:	4623      	mov	r3, r4
    176a:	2201      	movs	r2, #1
    176c:	8829      	ldrh	r1, [r5, #0]
    176e:	2004      	movs	r0, #4
    1770:	f7ff fd68 	bl	1244 <usb_config_tx>
	for (i=0; i < RX_NUM; i++) rx_queue_transfer(i);
    1774:	4620      	mov	r0, r4
    1776:	3401      	adds	r4, #1
    1778:	f7ff fe0e 	bl	1398 <rx_queue_transfer>
    177c:	2c08      	cmp	r4, #8
    177e:	d1f9      	bne.n	1774 <usb_serial_configure+0x7c>
	USB1_GPTIMER0CTRL = 0;
    1780:	4b18      	ldr	r3, [pc, #96]	; (17e4 <usb_serial_configure+0xec>)
    1782:	2100      	movs	r1, #0
	USB1_GPTIMER0LD = microseconds - 1;
    1784:	224a      	movs	r2, #74	; 0x4a
	usb_timer0_callback = callback;
    1786:	4818      	ldr	r0, [pc, #96]	; (17e8 <usb_serial_configure+0xf0>)
    1788:	4c18      	ldr	r4, [pc, #96]	; (17ec <usb_serial_configure+0xf4>)
    178a:	6004      	str	r4, [r0, #0]
	USB1_GPTIMER0CTRL = 0;
    178c:	f8c3 1084 	str.w	r1, [r3, #132]	; 0x84
	USB1_GPTIMER0LD = microseconds - 1;
    1790:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	USB1_USBINTR |= USB_USBINTR_TIE0;
    1794:	f8d3 2148 	ldr.w	r2, [r3, #328]	; 0x148
	if (serialEvent) yield_active_check_flags |= YIELD_CHECK_USB_SERIAL;
    1798:	4915      	ldr	r1, [pc, #84]	; (17f0 <usb_serial_configure+0xf8>)
	USB1_USBINTR |= USB_USBINTR_TIE0;
    179a:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
    179e:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
	if (serialEvent) yield_active_check_flags |= YIELD_CHECK_USB_SERIAL;
    17a2:	b121      	cbz	r1, 17ae <usb_serial_configure+0xb6>
    17a4:	4a13      	ldr	r2, [pc, #76]	; (17f4 <usb_serial_configure+0xfc>)
    17a6:	7813      	ldrb	r3, [r2, #0]
    17a8:	f043 0301 	orr.w	r3, r3, #1
    17ac:	7013      	strb	r3, [r2, #0]
}
    17ae:	bd70      	pop	{r4, r5, r6, pc}
    17b0:	20003cbc 	.word	0x20003cbc
    17b4:	20003800 	.word	0x20003800
    17b8:	20003cac 	.word	0x20003cac
    17bc:	20003ca8 	.word	0x20003ca8
    17c0:	20003cb8 	.word	0x20003cb8
    17c4:	20003caa 	.word	0x20003caa
    17c8:	20003700 	.word	0x20003700
    17cc:	20003c48 	.word	0x20003c48
    17d0:	20003c58 	.word	0x20003c58
    17d4:	20003cb4 	.word	0x20003cb4
    17d8:	20003c44 	.word	0x20003c44
    17dc:	20003cb5 	.word	0x20003cb5
    17e0:	000013f9 	.word	0x000013f9
    17e4:	402e0000 	.word	0x402e0000
    17e8:	20003ca0 	.word	0x20003ca0
    17ec:	000014ad 	.word	0x000014ad
    17f0:	00000000 	.word	0x00000000
    17f4:	20003cbe 	.word	0x20003cbe

000017f8 <usb_serial_read>:
{
    17f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	NVIC_DISABLE_IRQ(IRQ_USB1);
    17fc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
    1800:	f44f 3200 	mov.w	r2, #131072	; 0x20000
	uint32_t tail = rx_tail;
    1804:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 18d0 <usb_serial_read+0xd8>
{
    1808:	b083      	sub	sp, #12
	NVIC_DISABLE_IRQ(IRQ_USB1);
    180a:	f8c3 218c 	str.w	r2, [r3, #396]	; 0x18c
	while (count < size && tail != rx_head) {
    180e:	468b      	mov	fp, r1
	uint32_t tail = rx_tail;
    1810:	f89a 4000 	ldrb.w	r4, [sl]
	while (count < size && tail != rx_head) {
    1814:	2900      	cmp	r1, #0
    1816:	d04f      	beq.n	18b8 <usb_serial_read+0xc0>
    1818:	4680      	mov	r8, r0
    181a:	b2e4      	uxtb	r4, r4
	uint32_t count=0;
    181c:	2700      	movs	r7, #0
		uint32_t avail = rx_count[i] - rx_index[i];
    181e:	f8df 90b4 	ldr.w	r9, [pc, #180]	; 18d4 <usb_serial_read+0xdc>
	while (count < size && tail != rx_head) {
    1822:	4b26      	ldr	r3, [pc, #152]	; (18bc <usb_serial_read+0xc4>)
		uint32_t len = size - count;
    1824:	ebab 0207 	sub.w	r2, fp, r7
			memcpy(p, rx_buffer + i * CDC_RX_SIZE_480 + rx_index[i], avail);
    1828:	4925      	ldr	r1, [pc, #148]	; (18c0 <usb_serial_read+0xc8>)
	while (count < size && tail != rx_head) {
    182a:	781b      	ldrb	r3, [r3, #0]
    182c:	42a3      	cmp	r3, r4
		if (++tail > RX_NUM) tail = 0;
    182e:	f104 0401 	add.w	r4, r4, #1
	while (count < size && tail != rx_head) {
    1832:	d03f      	beq.n	18b4 <usb_serial_read+0xbc>
		if (++tail > RX_NUM) tail = 0;
    1834:	2c09      	cmp	r4, #9
		uint32_t i = rx_list[tail];
    1836:	4b23      	ldr	r3, [pc, #140]	; (18c4 <usb_serial_read+0xcc>)
			memcpy(p, rx_buffer + i * CDC_RX_SIZE_480 + rx_index[i], avail);
    1838:	4640      	mov	r0, r8
		if (++tail > RX_NUM) tail = 0;
    183a:	bf28      	it	cs
    183c:	2400      	movcs	r4, #0
		uint32_t i = rx_list[tail];
    183e:	5d1e      	ldrb	r6, [r3, r4]
		uint32_t avail = rx_count[i] - rx_index[i];
    1840:	f839 c016 	ldrh.w	ip, [r9, r6, lsl #1]
			memcpy(p, rx_buffer + i * CDC_RX_SIZE_480 + rx_index[i], avail);
    1844:	eb0c 2346 	add.w	r3, ip, r6, lsl #9
    1848:	4419      	add	r1, r3
		uint32_t avail = rx_count[i] - rx_index[i];
    184a:	4b1f      	ldr	r3, [pc, #124]	; (18c8 <usb_serial_read+0xd0>)
    184c:	f833 5016 	ldrh.w	r5, [r3, r6, lsl #1]
    1850:	eba5 050c 	sub.w	r5, r5, ip
		if (avail > len) {
    1854:	42aa      	cmp	r2, r5
    1856:	d21c      	bcs.n	1892 <usb_serial_read+0x9a>
			memcpy(p, rx_buffer + i * CDC_RX_SIZE_480 + rx_index[i], len);
    1858:	eb0c 2c46 	add.w	ip, ip, r6, lsl #9
    185c:	4918      	ldr	r1, [pc, #96]	; (18c0 <usb_serial_read+0xc8>)
			rx_available -= len;
    185e:	4c1b      	ldr	r4, [pc, #108]	; (18cc <usb_serial_read+0xd4>)
			memcpy(p, rx_buffer + i * CDC_RX_SIZE_480 + rx_index[i], len);
    1860:	4461      	add	r1, ip
    1862:	9201      	str	r2, [sp, #4]
    1864:	f7fe feea 	bl	63c <memcpy>
			rx_available -= len;
    1868:	6821      	ldr	r1, [r4, #0]
			rx_index[i] += len;
    186a:	f839 5016 	ldrh.w	r5, [r9, r6, lsl #1]
	return count;
    186e:	4658      	mov	r0, fp
			rx_index[i] += len;
    1870:	9a01      	ldr	r2, [sp, #4]
			rx_available -= len;
    1872:	eba1 010b 	sub.w	r1, r1, fp
			rx_index[i] += len;
    1876:	442a      	add	r2, r5
			rx_available -= len;
    1878:	4439      	add	r1, r7
			rx_index[i] += len;
    187a:	f829 2016 	strh.w	r2, [r9, r6, lsl #1]
			rx_available -= len;
    187e:	6021      	str	r1, [r4, #0]
	NVIC_ENABLE_IRQ(IRQ_USB1);
    1880:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
    1884:	f44f 3200 	mov.w	r2, #131072	; 0x20000
    1888:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
}
    188c:	b003      	add	sp, #12
    188e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			memcpy(p, rx_buffer + i * CDC_RX_SIZE_480 + rx_index[i], avail);
    1892:	462a      	mov	r2, r5
			count += avail;
    1894:	442f      	add	r7, r5
			memcpy(p, rx_buffer + i * CDC_RX_SIZE_480 + rx_index[i], avail);
    1896:	f7fe fed1 	bl	63c <memcpy>
			rx_available -= avail;
    189a:	490c      	ldr	r1, [pc, #48]	; (18cc <usb_serial_read+0xd4>)
			rx_tail = tail;
    189c:	b2e3      	uxtb	r3, r4
			rx_queue_transfer(i);
    189e:	4630      	mov	r0, r6
			rx_available -= avail;
    18a0:	680a      	ldr	r2, [r1, #0]
			p += avail;
    18a2:	44a8      	add	r8, r5
			rx_available -= avail;
    18a4:	1b52      	subs	r2, r2, r5
    18a6:	600a      	str	r2, [r1, #0]
			rx_tail = tail;
    18a8:	f88a 3000 	strb.w	r3, [sl]
			rx_queue_transfer(i);
    18ac:	f7ff fd74 	bl	1398 <rx_queue_transfer>
	while (count < size && tail != rx_head) {
    18b0:	45bb      	cmp	fp, r7
    18b2:	d8b6      	bhi.n	1822 <usb_serial_read+0x2a>
	return count;
    18b4:	4638      	mov	r0, r7
    18b6:	e7e3      	b.n	1880 <usb_serial_read+0x88>
	while (count < size && tail != rx_head) {
    18b8:	4608      	mov	r0, r1
    18ba:	e7e1      	b.n	1880 <usb_serial_read+0x88>
    18bc:	20003cb4 	.word	0x20003cb4
    18c0:	20200080 	.word	0x20200080
    18c4:	20003c68 	.word	0x20003c68
    18c8:	20003c48 	.word	0x20003c48
    18cc:	20003c44 	.word	0x20003c44
    18d0:	20003cb5 	.word	0x20003cb5
    18d4:	20003c58 	.word	0x20003c58

000018d8 <usb_serial_peekchar>:
	if (tail == rx_head) return -1;
    18d8:	4b0b      	ldr	r3, [pc, #44]	; (1908 <usb_serial_peekchar+0x30>)
	uint32_t tail = rx_tail;
    18da:	4a0c      	ldr	r2, [pc, #48]	; (190c <usb_serial_peekchar+0x34>)
    18dc:	7812      	ldrb	r2, [r2, #0]
	if (tail == rx_head) return -1;
    18de:	7819      	ldrb	r1, [r3, #0]
	uint32_t tail = rx_tail;
    18e0:	b2d3      	uxtb	r3, r2
	if (tail == rx_head) return -1;
    18e2:	428a      	cmp	r2, r1
    18e4:	d00d      	beq.n	1902 <usb_serial_peekchar+0x2a>
	if (++tail > RX_NUM) tail = 0;
    18e6:	3301      	adds	r3, #1
	uint32_t i = rx_list[tail];
    18e8:	4809      	ldr	r0, [pc, #36]	; (1910 <usb_serial_peekchar+0x38>)
	return rx_buffer[i * CDC_RX_SIZE_480 + rx_index[i]];
    18ea:	4a0a      	ldr	r2, [pc, #40]	; (1914 <usb_serial_peekchar+0x3c>)
	if (++tail > RX_NUM) tail = 0;
    18ec:	2b09      	cmp	r3, #9
	return rx_buffer[i * CDC_RX_SIZE_480 + rx_index[i]];
    18ee:	490a      	ldr	r1, [pc, #40]	; (1918 <usb_serial_peekchar+0x40>)
	if (++tail > RX_NUM) tail = 0;
    18f0:	bf28      	it	cs
    18f2:	2300      	movcs	r3, #0
	uint32_t i = rx_list[tail];
    18f4:	5cc3      	ldrb	r3, [r0, r3]
	return rx_buffer[i * CDC_RX_SIZE_480 + rx_index[i]];
    18f6:	f831 1013 	ldrh.w	r1, [r1, r3, lsl #1]
    18fa:	eb02 2343 	add.w	r3, r2, r3, lsl #9
    18fe:	5c58      	ldrb	r0, [r3, r1]
    1900:	4770      	bx	lr
	if (tail == rx_head) return -1;
    1902:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
}
    1906:	4770      	bx	lr
    1908:	20003cb4 	.word	0x20003cb4
    190c:	20003cb5 	.word	0x20003cb5
    1910:	20003c68 	.word	0x20003c68
    1914:	20200080 	.word	0x20200080
    1918:	20003c58 	.word	0x20003c58

0000191c <usb_serial_available>:
	uint32_t n = rx_available;
    191c:	4b04      	ldr	r3, [pc, #16]	; (1930 <usb_serial_available+0x14>)
{
    191e:	b510      	push	{r4, lr}
	uint32_t n = rx_available;
    1920:	681c      	ldr	r4, [r3, #0]
	if (n == 0) yield();
    1922:	b10c      	cbz	r4, 1928 <usb_serial_available+0xc>
}
    1924:	4620      	mov	r0, r4
    1926:	bd10      	pop	{r4, pc}
	if (n == 0) yield();
    1928:	f000 f8e0 	bl	1aec <yield>
}
    192c:	4620      	mov	r0, r4
    192e:	bd10      	pop	{r4, pc}
    1930:	20003c44 	.word	0x20003c44

00001934 <usb_serial_flush_input>:
{
    1934:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint32_t tail = rx_tail;
    1938:	4e14      	ldr	r6, [pc, #80]	; (198c <usb_serial_flush_input+0x58>)
	while (tail != rx_head) {
    193a:	4d15      	ldr	r5, [pc, #84]	; (1990 <usb_serial_flush_input+0x5c>)
	uint32_t tail = rx_tail;
    193c:	7833      	ldrb	r3, [r6, #0]
	while (tail != rx_head) {
    193e:	782a      	ldrb	r2, [r5, #0]
    1940:	4293      	cmp	r3, r2
    1942:	d021      	beq.n	1988 <usb_serial_flush_input+0x54>
    1944:	b2dc      	uxtb	r4, r3
    1946:	f8df 9050 	ldr.w	r9, [pc, #80]	; 1998 <usb_serial_flush_input+0x64>
    194a:	f8df b050 	ldr.w	fp, [pc, #80]	; 199c <usb_serial_flush_input+0x68>
    194e:	f8df 8050 	ldr.w	r8, [pc, #80]	; 19a0 <usb_serial_flush_input+0x6c>
    1952:	4f10      	ldr	r7, [pc, #64]	; (1994 <usb_serial_flush_input+0x60>)
		if (++tail > RX_NUM) tail = 0;
    1954:	3401      	adds	r4, #1
    1956:	2c08      	cmp	r4, #8
		rx_tail = tail;
    1958:	fa5f fa84 	uxtb.w	sl, r4
		if (++tail > RX_NUM) tail = 0;
    195c:	d901      	bls.n	1962 <usb_serial_flush_input+0x2e>
    195e:	2400      	movs	r4, #0
    1960:	46a2      	mov	sl, r4
		uint32_t i = rx_list[tail];
    1962:	f819 0004 	ldrb.w	r0, [r9, r4]
		rx_available -= rx_count[i] - rx_index[i];
    1966:	f8db 3000 	ldr.w	r3, [fp]
    196a:	f838 2010 	ldrh.w	r2, [r8, r0, lsl #1]
    196e:	f837 1010 	ldrh.w	r1, [r7, r0, lsl #1]
    1972:	1a52      	subs	r2, r2, r1
    1974:	1a9b      	subs	r3, r3, r2
    1976:	f8cb 3000 	str.w	r3, [fp]
		rx_queue_transfer(i);
    197a:	f7ff fd0d 	bl	1398 <rx_queue_transfer>
		rx_tail = tail;
    197e:	f886 a000 	strb.w	sl, [r6]
	while (tail != rx_head) {
    1982:	782b      	ldrb	r3, [r5, #0]
    1984:	42a3      	cmp	r3, r4
    1986:	d1e5      	bne.n	1954 <usb_serial_flush_input+0x20>
}
    1988:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    198c:	20003cb5 	.word	0x20003cb5
    1990:	20003cb4 	.word	0x20003cb4
    1994:	20003c58 	.word	0x20003c58
    1998:	20003c68 	.word	0x20003c68
    199c:	20003c44 	.word	0x20003c44
    19a0:	20003c48 	.word	0x20003c48

000019a4 <usb_serial_getchar>:
{
    19a4:	b500      	push	{lr}
    19a6:	b083      	sub	sp, #12
	if (usb_serial_read(&c, 1)) return c;
    19a8:	2101      	movs	r1, #1
    19aa:	f10d 0007 	add.w	r0, sp, #7
    19ae:	f7ff ff23 	bl	17f8 <usb_serial_read>
    19b2:	b120      	cbz	r0, 19be <usb_serial_getchar+0x1a>
    19b4:	f89d 0007 	ldrb.w	r0, [sp, #7]
}
    19b8:	b003      	add	sp, #12
    19ba:	f85d fb04 	ldr.w	pc, [sp], #4
	return -1;
    19be:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    19c2:	e7f9      	b.n	19b8 <usb_serial_getchar+0x14>

000019c4 <usb_serial_putchar>:
	if (!usb_configuration) return 0;
    19c4:	4b09      	ldr	r3, [pc, #36]	; (19ec <usb_serial_putchar+0x28>)
{
    19c6:	b500      	push	{lr}
    19c8:	b083      	sub	sp, #12
	if (!usb_configuration) return 0;
    19ca:	781b      	ldrb	r3, [r3, #0]
{
    19cc:	f88d 0007 	strb.w	r0, [sp, #7]
	if (!usb_configuration) return 0;
    19d0:	b13b      	cbz	r3, 19e2 <usb_serial_putchar+0x1e>
    19d2:	2101      	movs	r1, #1
    19d4:	f10d 0007 	add.w	r0, sp, #7
    19d8:	f7ff fdb0 	bl	153c <usb_serial_write.part.0>
}
    19dc:	b003      	add	sp, #12
    19de:	f85d fb04 	ldr.w	pc, [sp], #4
    19e2:	f003 00ff 	and.w	r0, r3, #255	; 0xff
    19e6:	b003      	add	sp, #12
    19e8:	f85d fb04 	ldr.w	pc, [sp], #4
    19ec:	20003cbb 	.word	0x20003cbb

000019f0 <usb_serial_write>:
	if (!usb_configuration) return 0;
    19f0:	4b04      	ldr	r3, [pc, #16]	; (1a04 <usb_serial_write+0x14>)
    19f2:	781b      	ldrb	r3, [r3, #0]
    19f4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
    19f8:	b10b      	cbz	r3, 19fe <usb_serial_write+0xe>
    19fa:	f7ff bd9f 	b.w	153c <usb_serial_write.part.0>
}
    19fe:	4610      	mov	r0, r2
    1a00:	4770      	bx	lr
    1a02:	bf00      	nop
    1a04:	20003cbb 	.word	0x20003cbb

00001a08 <usb_serial_write_buffer_free>:
{
    1a08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	for (uint32_t i=0; i < TX_NUM; i++) {
    1a0c:	2400      	movs	r4, #0
	tx_noautoflush = 1;
    1a0e:	f8df 8044 	ldr.w	r8, [pc, #68]	; 1a54 <usb_serial_write_buffer_free+0x4c>
    1a12:	2301      	movs	r3, #1
    1a14:	4d0d      	ldr	r5, [pc, #52]	; (1a4c <usb_serial_write_buffer_free+0x44>)
	uint32_t sum = 0;
    1a16:	4627      	mov	r7, r4
    1a18:	4e0d      	ldr	r6, [pc, #52]	; (1a50 <usb_serial_write_buffer_free+0x48>)
	tx_noautoflush = 1;
    1a1a:	f888 3000 	strb.w	r3, [r8]
		if (i == tx_head) continue;
    1a1e:	7833      	ldrb	r3, [r6, #0]
		if (!(usb_transfer_status(tx_transfer + i) & 0x80)) sum += TX_SIZE;
    1a20:	4628      	mov	r0, r5
	for (uint32_t i=0; i < TX_NUM; i++) {
    1a22:	3520      	adds	r5, #32
		if (i == tx_head) continue;
    1a24:	42a3      	cmp	r3, r4
	for (uint32_t i=0; i < TX_NUM; i++) {
    1a26:	f104 0401 	add.w	r4, r4, #1
		if (i == tx_head) continue;
    1a2a:	d005      	beq.n	1a38 <usb_serial_write_buffer_free+0x30>
		if (!(usb_transfer_status(tx_transfer + i) & 0x80)) sum += TX_SIZE;
    1a2c:	f7ff fc76 	bl	131c <usb_transfer_status>
    1a30:	0603      	lsls	r3, r0, #24
    1a32:	bf58      	it	pl
    1a34:	f507 6700 	addpl.w	r7, r7, #2048	; 0x800
	for (uint32_t i=0; i < TX_NUM; i++) {
    1a38:	2c04      	cmp	r4, #4
    1a3a:	d1f0      	bne.n	1a1e <usb_serial_write_buffer_free+0x16>
	asm("dsb" ::: "memory");
    1a3c:	f3bf 8f4f 	dsb	sy
	tx_noautoflush = 0;
    1a40:	2300      	movs	r3, #0
}
    1a42:	4638      	mov	r0, r7
	tx_noautoflush = 0;
    1a44:	f888 3000 	strb.w	r3, [r8]
}
    1a48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1a4c:	20003800 	.word	0x20003800
    1a50:	20003cb8 	.word	0x20003cb8
    1a54:	20003cb9 	.word	0x20003cb9

00001a58 <usb_serial_flush_output>:
{
    1a58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	if (!usb_configuration) return;
    1a5c:	4b1d      	ldr	r3, [pc, #116]	; (1ad4 <usb_serial_flush_output+0x7c>)
    1a5e:	781b      	ldrb	r3, [r3, #0]
    1a60:	b113      	cbz	r3, 1a68 <usb_serial_flush_output+0x10>
	if (tx_available == 0) return;
    1a62:	4d1d      	ldr	r5, [pc, #116]	; (1ad8 <usb_serial_flush_output+0x80>)
    1a64:	882a      	ldrh	r2, [r5, #0]
    1a66:	b90a      	cbnz	r2, 1a6c <usb_serial_flush_output+0x14>
}
    1a68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	transfer_t *xfer = tx_transfer + tx_head;
    1a6c:	4e1b      	ldr	r6, [pc, #108]	; (1adc <usb_serial_flush_output+0x84>)
	uint32_t txnum = TX_SIZE - tx_available;
    1a6e:	f5c2 6900 	rsb	r9, r2, #2048	; 0x800
	transfer_t *xfer = tx_transfer + tx_head;
    1a72:	491b      	ldr	r1, [pc, #108]	; (1ae0 <usb_serial_flush_output+0x88>)
    1a74:	7833      	ldrb	r3, [r6, #0]
	usb_prepare_transfer(xfer, txbuf, txnum, 0);
    1a76:	464a      	mov	r2, r9
	uint8_t *txbuf = txbuffer + (tx_head * TX_SIZE);
    1a78:	4c1a      	ldr	r4, [pc, #104]	; (1ae4 <usb_serial_flush_output+0x8c>)
	transfer_t *xfer = tx_transfer + tx_head;
    1a7a:	eb01 1843 	add.w	r8, r1, r3, lsl #5
	tx_noautoflush = 1;
    1a7e:	4f1a      	ldr	r7, [pc, #104]	; (1ae8 <usb_serial_flush_output+0x90>)
	uint8_t *txbuf = txbuffer + (tx_head * TX_SIZE);
    1a80:	eb04 24c3 	add.w	r4, r4, r3, lsl #11
	tx_noautoflush = 1;
    1a84:	2301      	movs	r3, #1
	usb_prepare_transfer(xfer, txbuf, txnum, 0);
    1a86:	4640      	mov	r0, r8
	tx_noautoflush = 1;
    1a88:	703b      	strb	r3, [r7, #0]
	usb_prepare_transfer(xfer, txbuf, txnum, 0);
    1a8a:	4621      	mov	r1, r4
    1a8c:	2300      	movs	r3, #0
    1a8e:	f7ff fc0b 	bl	12a8 <usb_prepare_transfer>
	uint32_t end_addr = (uint32_t)addr + size;
    1a92:	eb04 0209 	add.w	r2, r4, r9
	asm("dsb");
    1a96:	f3bf 8f4f 	dsb	sy
		SCB_CACHE_DCCIMVAC = location;
    1a9a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
    1a9e:	f8c3 4f70 	str.w	r4, [r3, #3952]	; 0xf70
		location += 32;
    1aa2:	3420      	adds	r4, #32
	} while (location < end_addr);
    1aa4:	42a2      	cmp	r2, r4
    1aa6:	d8fa      	bhi.n	1a9e <usb_serial_flush_output+0x46>
	asm("dsb");
    1aa8:	f3bf 8f4f 	dsb	sy
	asm("isb");
    1aac:	f3bf 8f6f 	isb	sy
	usb_transmit(CDC_TX_ENDPOINT, xfer);
    1ab0:	2004      	movs	r0, #4
    1ab2:	4641      	mov	r1, r8
    1ab4:	f7ff fc10 	bl	12d8 <usb_transmit>
	if (++tx_head >= TX_NUM) tx_head = 0;
    1ab8:	7833      	ldrb	r3, [r6, #0]
    1aba:	3301      	adds	r3, #1
    1abc:	b2db      	uxtb	r3, r3
    1abe:	2b03      	cmp	r3, #3
    1ac0:	bf88      	it	hi
    1ac2:	2300      	movhi	r3, #0
    1ac4:	7033      	strb	r3, [r6, #0]
	tx_available = 0;
    1ac6:	2300      	movs	r3, #0
    1ac8:	802b      	strh	r3, [r5, #0]
	asm("dsb" ::: "memory");
    1aca:	f3bf 8f4f 	dsb	sy
	tx_noautoflush = 0;
    1ace:	703b      	strb	r3, [r7, #0]
}
    1ad0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    1ad4:	20003cbb 	.word	0x20003cbb
    1ad8:	20003caa 	.word	0x20003caa
    1adc:	20003cb8 	.word	0x20003cb8
    1ae0:	20003800 	.word	0x20003800
    1ae4:	20201080 	.word	0x20201080
    1ae8:	20003cb9 	.word	0x20003cb9

00001aec <yield>:
uint8_t yield_active_check_flags = 0;


void yield(void) __attribute__ ((weak));
void yield(void)
{
    1aec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	const uint8_t check_flags = yield_active_check_flags;
    1af0:	4b2d      	ldr	r3, [pc, #180]	; (1ba8 <yield+0xbc>)
    1af2:	781e      	ldrb	r6, [r3, #0]
	if (!check_flags) return;	// nothing to do
    1af4:	b166      	cbz	r6, 1b10 <yield+0x24>

	// TODO: do nothing if called from interrupt

	static uint8_t running=0;
	if (running) return; // TODO: does this need to be atomic?
    1af6:	4f2d      	ldr	r7, [pc, #180]	; (1bac <yield+0xc0>)
    1af8:	783b      	ldrb	r3, [r7, #0]
    1afa:	b94b      	cbnz	r3, 1b10 <yield+0x24>
	running = 1;
    1afc:	2301      	movs	r3, #1

	// USB Serial - Add hack to minimize impact...
	if (check_flags & YIELD_CHECK_USB_SERIAL) {
    1afe:	07f1      	lsls	r1, r6, #31
	running = 1;
    1b00:	703b      	strb	r3, [r7, #0]
	if (check_flags & YIELD_CHECK_USB_SERIAL) {
    1b02:	d443      	bmi.n	1b8c <yield+0xa0>
		if (SerialUSB2.available()) serialEventUSB2();
	}
#endif

	// Current workaround until integrate with EventResponder.
	if (check_flags & YIELD_CHECK_HARDWARE_SERIAL) {
    1b04:	07b2      	lsls	r2, r6, #30
    1b06:	d426      	bmi.n	1b56 <yield+0x6a>
		HardwareSerialIMXRT::processSerialEventsList();
	}

	running = 0;
    1b08:	2300      	movs	r3, #0
    1b0a:	703b      	strb	r3, [r7, #0]
	if (check_flags & YIELD_CHECK_EVENT_RESPONDER) {
    1b0c:	0773      	lsls	r3, r6, #29
    1b0e:	d401      	bmi.n	1b14 <yield+0x28>
		EventResponder::runFromYield();
	}
};
    1b10:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	// Wait for event(s) to occur.  These are most likely to be useful when
	// used with a scheduler or RTOS.
	bool waitForEvent(EventResponderRef event, int timeout);
	EventResponder * waitForEvent(EventResponder *list, int listsize, int timeout);
	static void runFromYield() {
		if (!firstYield) return;  
    1b14:	4b26      	ldr	r3, [pc, #152]	; (1bb0 <yield+0xc4>)
    1b16:	681a      	ldr	r2, [r3, #0]
    1b18:	2a00      	cmp	r2, #0
    1b1a:	d0f9      	beq.n	1b10 <yield+0x24>
		// First, check if yield was called from an interrupt
		// never call normal handler functions from any interrupt context
		uint32_t ipsr;
		__asm__ volatile("mrs %0, ipsr\n" : "=r" (ipsr)::);
    1b1c:	f3ef 8205 	mrs	r2, IPSR
		if (ipsr != 0) return;
    1b20:	2a00      	cmp	r2, #0
    1b22:	d1f5      	bne.n	1b10 <yield+0x24>
	static EventResponder *lastInterrupt;
	static bool runningFromYield;
private:
	static bool disableInterrupts() {
		uint32_t primask;
		__asm__ volatile("mrs %0, primask\n" : "=r" (primask)::);
    1b24:	f3ef 8510 	mrs	r5, PRIMASK
		__disable_irq();
    1b28:	b672      	cpsid	i
		EventResponder *first = firstYield;
    1b2a:	6818      	ldr	r0, [r3, #0]
		if (first == nullptr) {
    1b2c:	2800      	cmp	r0, #0
    1b2e:	d034      	beq.n	1b9a <yield+0xae>
		if (runningFromYield) {
    1b30:	4c20      	ldr	r4, [pc, #128]	; (1bb4 <yield+0xc8>)
    1b32:	7821      	ldrb	r1, [r4, #0]
    1b34:	2900      	cmp	r1, #0
    1b36:	d130      	bne.n	1b9a <yield+0xae>
		runningFromYield = true;
    1b38:	2201      	movs	r2, #1
    1b3a:	7022      	strb	r2, [r4, #0]
		firstYield = first->_next;
    1b3c:	6942      	ldr	r2, [r0, #20]
    1b3e:	601a      	str	r2, [r3, #0]
		if (firstYield) {
    1b40:	2a00      	cmp	r2, #0
    1b42:	d02e      	beq.n	1ba2 <yield+0xb6>
			firstYield->_prev = nullptr;
    1b44:	6191      	str	r1, [r2, #24]
		return (primask == 0) ? true : false;
	}
	static void enableInterrupts(bool doit) {
		if (doit) __enable_irq();
    1b46:	b905      	cbnz	r5, 1b4a <yield+0x5e>
    1b48:	b662      	cpsie	i
		first->_triggered = false;
    1b4a:	2500      	movs	r5, #0
		(*(first->_function))(*first);
    1b4c:	6883      	ldr	r3, [r0, #8]
		first->_triggered = false;
    1b4e:	7745      	strb	r5, [r0, #29]
		(*(first->_function))(*first);
    1b50:	4798      	blx	r3
		runningFromYield = false;
    1b52:	7025      	strb	r5, [r4, #0]
    1b54:	e7dc      	b.n	1b10 <yield+0x24>
	*/

	operator bool()			{ return true; }

	static inline void processSerialEventsList() {
		for (uint8_t i = 0; i < s_count_serials_with_serial_events; i++) {
    1b56:	f8df 8064 	ldr.w	r8, [pc, #100]	; 1bbc <yield+0xd0>
    1b5a:	f898 3000 	ldrb.w	r3, [r8]
    1b5e:	2b00      	cmp	r3, #0
    1b60:	d0d2      	beq.n	1b08 <yield+0x1c>
    1b62:	2500      	movs	r5, #0
    1b64:	f8df 9058 	ldr.w	r9, [pc, #88]	; 1bc0 <yield+0xd4>
    1b68:	462b      	mov	r3, r5
			s_serials_with_serial_events[i]->doYieldCode();
    1b6a:	f859 4023 	ldr.w	r4, [r9, r3, lsl #2]
		for (uint8_t i = 0; i < s_count_serials_with_serial_events; i++) {
    1b6e:	3501      	adds	r5, #1
	static HardwareSerialIMXRT 	*s_serials_with_serial_events[7];
	#endif
	static uint8_t 			s_count_serials_with_serial_events;
	void addToSerialEventsList(); 
	inline void doYieldCode()  {
		if (available()) (*hardware->_serialEvent)();
    1b70:	6823      	ldr	r3, [r4, #0]
    1b72:	4620      	mov	r0, r4
    1b74:	691b      	ldr	r3, [r3, #16]
    1b76:	4798      	blx	r3
    1b78:	b110      	cbz	r0, 1b80 <yield+0x94>
    1b7a:	6963      	ldr	r3, [r4, #20]
    1b7c:	689b      	ldr	r3, [r3, #8]
    1b7e:	4798      	blx	r3
		for (uint8_t i = 0; i < s_count_serials_with_serial_events; i++) {
    1b80:	f898 2000 	ldrb.w	r2, [r8]
    1b84:	b2eb      	uxtb	r3, r5
    1b86:	429a      	cmp	r2, r3
    1b88:	d8ef      	bhi.n	1b6a <yield+0x7e>
    1b8a:	e7bd      	b.n	1b08 <yield+0x1c>
        virtual int available() { return usb_serial_available(); }
    1b8c:	f7ff fec6 	bl	191c <usb_serial_available>
		if (Serial.available()) serialEvent();
    1b90:	2800      	cmp	r0, #0
    1b92:	d0b7      	beq.n	1b04 <yield+0x18>
    1b94:	f3af 8000 	nop.w
    1b98:	e7b4      	b.n	1b04 <yield+0x18>
		if (doit) __enable_irq();
    1b9a:	2d00      	cmp	r5, #0
    1b9c:	d1b8      	bne.n	1b10 <yield+0x24>
    1b9e:	b662      	cpsie	i
    1ba0:	e7b6      	b.n	1b10 <yield+0x24>
			lastYield = nullptr;
    1ba2:	4b05      	ldr	r3, [pc, #20]	; (1bb8 <yield+0xcc>)
    1ba4:	601a      	str	r2, [r3, #0]
    1ba6:	e7ce      	b.n	1b46 <yield+0x5a>
    1ba8:	20003cbe 	.word	0x20003cbe
    1bac:	20003cb0 	.word	0x20003cb0
    1bb0:	200038a4 	.word	0x200038a4
    1bb4:	20003cae 	.word	0x20003cae
    1bb8:	200038b0 	.word	0x200038b0
    1bbc:	20003caf 	.word	0x20003caf
    1bc0:	200038b4 	.word	0x200038b4

00001bc4 <EventResponder::runFromInterrupt()>:
{
	EventResponder::runFromInterrupt();
}

void EventResponder::runFromInterrupt()
{
    1bc4:	b570      	push	{r4, r5, r6, lr}
		__asm__ volatile("mrs %0, primask\n" : "=r" (primask)::);
    1bc6:	f3ef 8210 	mrs	r2, PRIMASK
		__disable_irq();
    1bca:	b672      	cpsid	i
	while (1) {
		bool irq = disableInterrupts();
		EventResponder *first = firstInterrupt;
    1bcc:	4c0c      	ldr	r4, [pc, #48]	; (1c00 <EventResponder::runFromInterrupt()+0x3c>)
    1bce:	6820      	ldr	r0, [r4, #0]
		if (first) {
    1bd0:	b180      	cbz	r0, 1bf4 <EventResponder::runFromInterrupt()+0x30>
			firstInterrupt = first->_next;
			if (firstInterrupt) {
				firstInterrupt->_prev = nullptr;
			} else {
				lastInterrupt = nullptr;
    1bd2:	4e0c      	ldr	r6, [pc, #48]	; (1c04 <EventResponder::runFromInterrupt()+0x40>)
				firstInterrupt->_prev = nullptr;
    1bd4:	2500      	movs	r5, #0
			firstInterrupt = first->_next;
    1bd6:	6943      	ldr	r3, [r0, #20]
    1bd8:	6023      	str	r3, [r4, #0]
			if (firstInterrupt) {
    1bda:	b173      	cbz	r3, 1bfa <EventResponder::runFromInterrupt()+0x36>
				firstInterrupt->_prev = nullptr;
    1bdc:	619d      	str	r5, [r3, #24]
		if (doit) __enable_irq();
    1bde:	b902      	cbnz	r2, 1be2 <EventResponder::runFromInterrupt()+0x1e>
    1be0:	b662      	cpsie	i
			}
			enableInterrupts(irq);
			first->_triggered = false;
			(*(first->_function))(*first);
    1be2:	6883      	ldr	r3, [r0, #8]
			first->_triggered = false;
    1be4:	7745      	strb	r5, [r0, #29]
			(*(first->_function))(*first);
    1be6:	4798      	blx	r3
		__asm__ volatile("mrs %0, primask\n" : "=r" (primask)::);
    1be8:	f3ef 8210 	mrs	r2, PRIMASK
		__disable_irq();
    1bec:	b672      	cpsid	i
		EventResponder *first = firstInterrupt;
    1bee:	6820      	ldr	r0, [r4, #0]
		if (first) {
    1bf0:	2800      	cmp	r0, #0
    1bf2:	d1f0      	bne.n	1bd6 <EventResponder::runFromInterrupt()+0x12>
		if (doit) __enable_irq();
    1bf4:	b902      	cbnz	r2, 1bf8 <EventResponder::runFromInterrupt()+0x34>
    1bf6:	b662      	cpsie	i
		} else {
			enableInterrupts(irq);
			break;
		}
	}
}
    1bf8:	bd70      	pop	{r4, r5, r6, pc}
				lastInterrupt = nullptr;
    1bfa:	6033      	str	r3, [r6, #0]
    1bfc:	e7ef      	b.n	1bde <EventResponder::runFromInterrupt()+0x1a>
    1bfe:	bf00      	nop
    1c00:	200038ac 	.word	0x200038ac
    1c04:	200038a8 	.word	0x200038a8

00001c08 <pendablesrvreq_isr>:
	EventResponder::runFromInterrupt();
    1c08:	f7ff bfdc 	b.w	1bc4 <EventResponder::runFromInterrupt()>

00001c0c <systick_isr>:
extern "C" volatile uint32_t systick_millis_count;
extern "C" volatile uint32_t systick_cycle_count;
extern "C" uint32_t systick_safe_read; // micros() synchronization
extern "C" void systick_isr(void)
{
	systick_cycle_count = ARM_DWT_CYCCNT;
    1c0c:	4904      	ldr	r1, [pc, #16]	; (1c20 <systick_isr+0x14>)
	systick_millis_count++;
    1c0e:	4a05      	ldr	r2, [pc, #20]	; (1c24 <systick_isr+0x18>)
	systick_cycle_count = ARM_DWT_CYCCNT;
    1c10:	6849      	ldr	r1, [r1, #4]
    1c12:	4b05      	ldr	r3, [pc, #20]	; (1c28 <systick_isr+0x1c>)
    1c14:	6019      	str	r1, [r3, #0]
	systick_millis_count++;
    1c16:	6813      	ldr	r3, [r2, #0]
    1c18:	3301      	adds	r3, #1
    1c1a:	6013      	str	r3, [r2, #0]
}
    1c1c:	4770      	bx	lr
    1c1e:	bf00      	nop
    1c20:	e0001000 	.word	0xe0001000
    1c24:	20003c8c 	.word	0x20003c8c
    1c28:	20003c88 	.word	0x20003c88

00001c2c <set_arm_clock>:
	uint32_t cbcmr = CCM_CBCMR; // pg 1023
	uint32_t dcdc = DCDC_REG3;

	// compute required voltage
	uint32_t voltage = 1150; // default = 1.15V
	if (frequency > 528000000) {
    1c2c:	49a2      	ldr	r1, [pc, #648]	; (1eb8 <set_arm_clock+0x28c>)
	uint32_t cbcdr = CCM_CBCDR; // pg 1021
    1c2e:	4ba3      	ldr	r3, [pc, #652]	; (1ebc <set_arm_clock+0x290>)
	if (frequency > 528000000) {
    1c30:	4288      	cmp	r0, r1
{
    1c32:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint32_t dcdc = DCDC_REG3;
    1c36:	4ca2      	ldr	r4, [pc, #648]	; (1ec0 <set_arm_clock+0x294>)
	uint32_t cbcdr = CCM_CBCDR; // pg 1021
    1c38:	695e      	ldr	r6, [r3, #20]
	uint32_t cbcmr = CCM_CBCMR; // pg 1023
    1c3a:	699a      	ldr	r2, [r3, #24]
	uint32_t dcdc = DCDC_REG3;
    1c3c:	f8d4 800c 	ldr.w	r8, [r4, #12]
	if (frequency > 528000000) {
    1c40:	d91b      	bls.n	1c7a <set_arm_clock+0x4e>
		voltage = 1250; // 1.25V
#if defined(OVERCLOCK_STEPSIZE) && defined(OVERCLOCK_MAX_VOLT)
		if (frequency > 600000000) {
    1c42:	4ba0      	ldr	r3, [pc, #640]	; (1ec4 <set_arm_clock+0x298>)
    1c44:	4298      	cmp	r0, r3
    1c46:	f240 8102 	bls.w	1e4e <set_arm_clock+0x222>
			voltage += ((frequency - 600000000) / OVERCLOCK_STEPSIZE) * 25;
    1c4a:	1ac3      	subs	r3, r0, r3
    1c4c:	499e      	ldr	r1, [pc, #632]	; (1ec8 <set_arm_clock+0x29c>)
    1c4e:	0a1b      	lsrs	r3, r3, #8
    1c50:	fba1 1303 	umull	r1, r3, r1, r3
		voltage = 950; // 0.95
	}

	// if voltage needs to increase, do it before switch clock speed
	CCM_CCGR6 |= CCM_CCGR6_DCDC(CCM_CCGR_ON);
	if ((dcdc & DCDC_REG3_TRG_MASK) < DCDC_REG3_TRG((voltage - 800) / 25)) {
    1c54:	f240 6127 	movw	r1, #1575	; 0x627
			voltage += ((frequency - 600000000) / OVERCLOCK_STEPSIZE) * 25;
    1c58:	09db      	lsrs	r3, r3, #7
    1c5a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
    1c5e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
    1c62:	f203 43e2 	addw	r3, r3, #1250	; 0x4e2
	if ((dcdc & DCDC_REG3_TRG_MASK) < DCDC_REG3_TRG((voltage - 800) / 25)) {
    1c66:	428b      	cmp	r3, r1
    1c68:	bf28      	it	cs
    1c6a:	460b      	movcs	r3, r1
    1c6c:	f5a3 7748 	sub.w	r7, r3, #800	; 0x320
    1c70:	4b96      	ldr	r3, [pc, #600]	; (1ecc <set_arm_clock+0x2a0>)
    1c72:	fba3 3707 	umull	r3, r7, r3, r7
    1c76:	08ff      	lsrs	r7, r7, #3
    1c78:	e004      	b.n	1c84 <set_arm_clock+0x58>
	} else if (frequency <= 24000000) {
    1c7a:	4f95      	ldr	r7, [pc, #596]	; (1ed0 <set_arm_clock+0x2a4>)
    1c7c:	42b8      	cmp	r0, r7
    1c7e:	bf8c      	ite	hi
    1c80:	270e      	movhi	r7, #14
    1c82:	2706      	movls	r7, #6
	CCM_CCGR6 |= CCM_CCGR6_DCDC(CCM_CCGR_ON);
    1c84:	498d      	ldr	r1, [pc, #564]	; (1ebc <set_arm_clock+0x290>)
	if ((dcdc & DCDC_REG3_TRG_MASK) < DCDC_REG3_TRG((voltage - 800) / 25)) {
    1c86:	f008 091f 	and.w	r9, r8, #31
	CCM_CCGR6 |= CCM_CCGR6_DCDC(CCM_CCGR_ON);
    1c8a:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
	if ((dcdc & DCDC_REG3_TRG_MASK) < DCDC_REG3_TRG((voltage - 800) / 25)) {
    1c8e:	45b9      	cmp	r9, r7
	CCM_CCGR6 |= CCM_CCGR6_DCDC(CCM_CCGR_ON);
    1c90:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
    1c94:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
	if ((dcdc & DCDC_REG3_TRG_MASK) < DCDC_REG3_TRG((voltage - 800) / 25)) {
    1c98:	d20c      	bcs.n	1cb4 <set_arm_clock+0x88>
		printf("Increasing voltage to %u mV\n", voltage);
		dcdc &= ~DCDC_REG3_TRG_MASK;
    1c9a:	f028 081f 	bic.w	r8, r8, #31
		dcdc |= DCDC_REG3_TRG((voltage - 800) / 25);
		DCDC_REG3 = dcdc;
    1c9e:	f5a1 21f8 	sub.w	r1, r1, #507904	; 0x7c000
		dcdc |= DCDC_REG3_TRG((voltage - 800) / 25);
    1ca2:	ea48 0807 	orr.w	r8, r8, r7
		DCDC_REG3 = dcdc;
    1ca6:	f8c1 800c 	str.w	r8, [r1, #12]
		while (!(DCDC_REG0 & DCDC_REG0_STS_DC_OK)) ; // wait voltage settling
    1caa:	680b      	ldr	r3, [r1, #0]
    1cac:	2b00      	cmp	r3, #0
    1cae:	dafc      	bge.n	1caa <set_arm_clock+0x7e>
	scale_cpu_cycles_to_microseconds = 0xFFFFFFFFu / (uint32_t)(frequency / 1000000u);

	printf("New Frequency: ARM=%u, IPG=%u\n", frequency, frequency / div_ipg);

	// if voltage needs to decrease, do it after switch clock speed
	if ((dcdc & DCDC_REG3_TRG_MASK) > DCDC_REG3_TRG((voltage - 800) / 25)) {
    1cb0:	f008 091f 	and.w	r9, r8, #31
	if (!(cbcdr & CCM_CBCDR_PERIPH_CLK_SEL)) {
    1cb4:	f016 7300 	ands.w	r3, r6, #33554432	; 0x2000000
    1cb8:	d124      	bne.n	1d04 <set_arm_clock+0xd8>
		if ((CCM_ANALOG_PLL_USB1 & need1s) == need1s) {
    1cba:	4986      	ldr	r1, [pc, #536]	; (1ed4 <set_arm_clock+0x2a8>)
    1cbc:	690c      	ldr	r4, [r1, #16]
    1cbe:	4986      	ldr	r1, [pc, #536]	; (1ed8 <set_arm_clock+0x2ac>)
    1cc0:	43a1      	bics	r1, r4
    1cc2:	f000 80ea 	beq.w	1e9a <set_arm_clock+0x26e>
		if ((cbcmr & CCM_CBCMR_PERIPH_CLK2_SEL_MASK) != CCM_CBCMR_PERIPH_CLK2_SEL(sel)) {
    1cc6:	f482 5180 	eor.w	r1, r2, #4096	; 0x1000
    1cca:	4634      	mov	r4, r6
    1ccc:	f44f 5580 	mov.w	r5, #4096	; 0x1000
		if ((cbcdr & CCM_CBCDR_PERIPH_CLK2_PODF_MASK) != CCM_CBCDR_PERIPH_CLK2_PODF(div)) {
    1cd0:	f014 5f60 	tst.w	r4, #939524096	; 0x38000000
    1cd4:	d004      	beq.n	1ce0 <set_arm_clock+0xb4>
			cbcdr &= ~CCM_CBCDR_PERIPH_CLK2_PODF_MASK;
    1cd6:	f026 5660 	bic.w	r6, r6, #939524096	; 0x38000000
			cbcdr |= CCM_CBCDR_PERIPH_CLK2_PODF(div);
    1cda:	431e      	orrs	r6, r3
			CCM_CBCDR = cbcdr;
    1cdc:	4b77      	ldr	r3, [pc, #476]	; (1ebc <set_arm_clock+0x290>)
    1cde:	615e      	str	r6, [r3, #20]
		if ((cbcmr & CCM_CBCMR_PERIPH_CLK2_SEL_MASK) != CCM_CBCMR_PERIPH_CLK2_SEL(sel)) {
    1ce0:	f411 5f40 	tst.w	r1, #12288	; 0x3000
    1ce4:	d007      	beq.n	1cf6 <set_arm_clock+0xca>
			cbcmr &= ~CCM_CBCMR_PERIPH_CLK2_SEL_MASK;
    1ce6:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
			CCM_CBCMR = cbcmr;
    1cea:	4974      	ldr	r1, [pc, #464]	; (1ebc <set_arm_clock+0x290>)
			cbcmr |= CCM_CBCMR_PERIPH_CLK2_SEL(sel);
    1cec:	432a      	orrs	r2, r5
			CCM_CBCMR = cbcmr;
    1cee:	618a      	str	r2, [r1, #24]
			while (CCM_CDHIPR & CCM_CDHIPR_PERIPH2_CLK_SEL_BUSY) ; // wait
    1cf0:	6c8b      	ldr	r3, [r1, #72]	; 0x48
    1cf2:	071a      	lsls	r2, r3, #28
    1cf4:	d4fc      	bmi.n	1cf0 <set_arm_clock+0xc4>
		cbcdr |= CCM_CBCDR_PERIPH_CLK_SEL;
    1cf6:	f046 7600 	orr.w	r6, r6, #33554432	; 0x2000000
		CCM_CBCDR = cbcdr;
    1cfa:	4a70      	ldr	r2, [pc, #448]	; (1ebc <set_arm_clock+0x290>)
    1cfc:	6156      	str	r6, [r2, #20]
		while (CCM_CDHIPR & CCM_CDHIPR_PERIPH_CLK_SEL_BUSY) ; // wait
    1cfe:	6c93      	ldr	r3, [r2, #72]	; 0x48
    1d00:	069b      	lsls	r3, r3, #26
    1d02:	d4fc      	bmi.n	1cfe <set_arm_clock+0xd2>
	while (frequency * div_arm * div_ahb < 648000000) {
    1d04:	4c75      	ldr	r4, [pc, #468]	; (1edc <set_arm_clock+0x2b0>)
    1d06:	42a0      	cmp	r0, r4
    1d08:	f200 80ce 	bhi.w	1ea8 <set_arm_clock+0x27c>
	uint32_t div_ahb = 1;
    1d0c:	f04f 0c01 	mov.w	ip, #1
    1d10:	4601      	mov	r1, r0
	uint32_t div_arm = 1;
    1d12:	4663      	mov	r3, ip
	while (frequency * div_arm * div_ahb < 648000000) {
    1d14:	fb03 1201 	mla	r2, r3, r1, r1
			div_arm = div_arm + 1;
    1d18:	f103 0e01 	add.w	lr, r3, #1
				div_ahb = div_ahb + 1;
    1d1c:	f10c 0501 	add.w	r5, ip, #1
	while (frequency * div_arm * div_ahb < 648000000) {
    1d20:	42a2      	cmp	r2, r4
    1d22:	d818      	bhi.n	1d56 <set_arm_clock+0x12a>
		if (div_arm < 8) {
    1d24:	f1be 0f08 	cmp.w	lr, #8
				div_arm = 1;
    1d28:	f04f 0301 	mov.w	r3, #1
		if (div_arm < 8) {
    1d2c:	f040 808d 	bne.w	1e4a <set_arm_clock+0x21e>
			if (div_ahb < 5) {
    1d30:	f1bc 0f04 	cmp.w	ip, #4
    1d34:	f200 8091 	bhi.w	1e5a <set_arm_clock+0x22e>
	while (frequency * div_arm * div_ahb < 648000000) {
    1d38:	180a      	adds	r2, r1, r0
    1d3a:	42a2      	cmp	r2, r4
    1d3c:	f200 80a4 	bhi.w	1e88 <set_arm_clock+0x25c>
    1d40:	fb05 f100 	mul.w	r1, r5, r0
				div_ahb = div_ahb + 1;
    1d44:	46ac      	mov	ip, r5
			div_arm = div_arm + 1;
    1d46:	f103 0e01 	add.w	lr, r3, #1
	while (frequency * div_arm * div_ahb < 648000000) {
    1d4a:	fb03 1201 	mla	r2, r3, r1, r1
				div_ahb = div_ahb + 1;
    1d4e:	f10c 0501 	add.w	r5, ip, #1
	while (frequency * div_arm * div_ahb < 648000000) {
    1d52:	42a2      	cmp	r2, r4
    1d54:	d9e6      	bls.n	1d24 <set_arm_clock+0xf8>
	if ((cbcdr & CCM_CBCDR_AHB_PODF_MASK) != CCM_CBCDR_AHB_PODF(div_ahb - 1)) {
    1d56:	f10c 31ff 	add.w	r1, ip, #4294967295	; 0xffffffff
    1d5a:	028c      	lsls	r4, r1, #10
    1d5c:	ea86 2181 	eor.w	r1, r6, r1, lsl #10
	uint32_t mult = (frequency * div_arm * div_ahb + 6000000) / 12000000;
    1d60:	485f      	ldr	r0, [pc, #380]	; (1ee0 <set_arm_clock+0x2b4>)
    1d62:	4410      	add	r0, r2
	if (mult > 108) mult = 108;
    1d64:	4a5f      	ldr	r2, [pc, #380]	; (1ee4 <set_arm_clock+0x2b8>)
    1d66:	4290      	cmp	r0, r2
    1d68:	d97f      	bls.n	1e6a <set_arm_clock+0x23e>
    1d6a:	f8df a1a4 	ldr.w	sl, [pc, #420]	; 1f10 <set_arm_clock+0x2e4>
    1d6e:	226c      	movs	r2, #108	; 0x6c
    1d70:	485d      	ldr	r0, [pc, #372]	; (1ee8 <set_arm_clock+0x2bc>)
	if ((CCM_ANALOG_PLL_ARM & arm_pll_mask) != (CCM_ANALOG_PLL_ARM_LOCK
    1d72:	4d58      	ldr	r5, [pc, #352]	; (1ed4 <set_arm_clock+0x2a8>)
	frequency = mult * 12000000 / div_arm / div_ahb;
    1d74:	fbb0 f0fe 	udiv	r0, r0, lr
	if ((CCM_ANALOG_PLL_ARM & arm_pll_mask) != (CCM_ANALOG_PLL_ARM_LOCK
    1d78:	f8d5 e000 	ldr.w	lr, [r5]
	frequency = mult * 12000000 / div_arm / div_ahb;
    1d7c:	fbb0 f0fc 	udiv	r0, r0, ip
	if ((CCM_ANALOG_PLL_ARM & arm_pll_mask) != (CCM_ANALOG_PLL_ARM_LOCK
    1d80:	f8df c190 	ldr.w	ip, [pc, #400]	; 1f14 <set_arm_clock+0x2e8>
    1d84:	ea0e 0c0c 	and.w	ip, lr, ip
    1d88:	45d4      	cmp	ip, sl
    1d8a:	d009      	beq.n	1da0 <set_arm_clock+0x174>
			| CCM_ANALOG_PLL_ARM_DIV_SELECT(mult);
    1d8c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
		CCM_ANALOG_PLL_ARM = CCM_ANALOG_PLL_ARM_POWERDOWN;
    1d90:	f44f 5c80 	mov.w	ip, #4096	; 0x1000
    1d94:	f8c5 c000 	str.w	ip, [r5]
		CCM_ANALOG_PLL_ARM = CCM_ANALOG_PLL_ARM_ENABLE
    1d98:	602a      	str	r2, [r5, #0]
		while (!(CCM_ANALOG_PLL_ARM & CCM_ANALOG_PLL_ARM_LOCK)) ; // wait for lock
    1d9a:	682a      	ldr	r2, [r5, #0]
    1d9c:	2a00      	cmp	r2, #0
    1d9e:	dafc      	bge.n	1d9a <set_arm_clock+0x16e>
	if ((CCM_CACRR & CCM_CACRR_ARM_PODF_MASK) != (div_arm - 1)) {
    1da0:	4a46      	ldr	r2, [pc, #280]	; (1ebc <set_arm_clock+0x290>)
    1da2:	6915      	ldr	r5, [r2, #16]
    1da4:	f005 0507 	and.w	r5, r5, #7
    1da8:	429d      	cmp	r5, r3
    1daa:	d003      	beq.n	1db4 <set_arm_clock+0x188>
		CCM_CACRR = CCM_CACRR_ARM_PODF(div_arm - 1);
    1dac:	6113      	str	r3, [r2, #16]
		while (CCM_CDHIPR & CCM_CDHIPR_ARM_PODF_BUSY) ; // wait
    1dae:	6c93      	ldr	r3, [r2, #72]	; 0x48
    1db0:	03dd      	lsls	r5, r3, #15
    1db2:	d4fc      	bmi.n	1dae <set_arm_clock+0x182>
	if ((cbcdr & CCM_CBCDR_AHB_PODF_MASK) != CCM_CBCDR_AHB_PODF(div_ahb - 1)) {
    1db4:	f411 5fe0 	tst.w	r1, #7168	; 0x1c00
    1db8:	d009      	beq.n	1dce <set_arm_clock+0x1a2>
		cbcdr &= ~CCM_CBCDR_AHB_PODF_MASK;
    1dba:	f426 56e0 	bic.w	r6, r6, #7168	; 0x1c00
		cbcdr |= CCM_CBCDR_AHB_PODF(div_ahb - 1);
    1dbe:	f404 54e0 	and.w	r4, r4, #7168	; 0x1c00
		CCM_CBCDR = cbcdr;
    1dc2:	4a3e      	ldr	r2, [pc, #248]	; (1ebc <set_arm_clock+0x290>)
		cbcdr |= CCM_CBCDR_AHB_PODF(div_ahb - 1);
    1dc4:	4326      	orrs	r6, r4
		CCM_CBCDR = cbcdr;
    1dc6:	6156      	str	r6, [r2, #20]
		while (CCM_CDHIPR & CCM_CDHIPR_AHB_PODF_BUSY); // wait
    1dc8:	6c93      	ldr	r3, [r2, #72]	; 0x48
    1dca:	0799      	lsls	r1, r3, #30
    1dcc:	d4fc      	bmi.n	1dc8 <set_arm_clock+0x19c>
	uint32_t div_ipg = (frequency + 149999999) / 150000000;
    1dce:	4947      	ldr	r1, [pc, #284]	; (1eec <set_arm_clock+0x2c0>)
	if (div_ipg > 4) div_ipg = 4;
    1dd0:	4a47      	ldr	r2, [pc, #284]	; (1ef0 <set_arm_clock+0x2c4>)
	uint32_t div_ipg = (frequency + 149999999) / 150000000;
    1dd2:	4401      	add	r1, r0
	if (div_ipg > 4) div_ipg = 4;
    1dd4:	4291      	cmp	r1, r2
    1dd6:	d83c      	bhi.n	1e52 <set_arm_clock+0x226>
	uint32_t div_ipg = (frequency + 149999999) / 150000000;
    1dd8:	4b46      	ldr	r3, [pc, #280]	; (1ef4 <set_arm_clock+0x2c8>)
    1dda:	09c9      	lsrs	r1, r1, #7
    1ddc:	fba3 3101 	umull	r3, r1, r3, r1
    1de0:	0b09      	lsrs	r1, r1, #12
	if ((cbcdr & CCM_CBCDR_IPG_PODF_MASK) != (CCM_CBCDR_IPG_PODF(div_ipg - 1))) {
    1de2:	1e4b      	subs	r3, r1, #1
    1de4:	021b      	lsls	r3, r3, #8
    1de6:	ea86 0203 	eor.w	r2, r6, r3
    1dea:	f412 7f40 	tst.w	r2, #768	; 0x300
    1dee:	d006      	beq.n	1dfe <set_arm_clock+0x1d2>
		cbcdr &= ~CCM_CBCDR_IPG_PODF_MASK;
    1df0:	f426 7640 	bic.w	r6, r6, #768	; 0x300
		cbcdr |= CCM_CBCDR_IPG_PODF(div_ipg - 1);
    1df4:	f403 7340 	and.w	r3, r3, #768	; 0x300
		CCM_CBCDR = cbcdr;
    1df8:	4a30      	ldr	r2, [pc, #192]	; (1ebc <set_arm_clock+0x290>)
		cbcdr |= CCM_CBCDR_IPG_PODF(div_ipg - 1);
    1dfa:	4333      	orrs	r3, r6
		CCM_CBCDR = cbcdr;
    1dfc:	6153      	str	r3, [r2, #20]
	CCM_CBCDR &= ~CCM_CBCDR_PERIPH_CLK_SEL;
    1dfe:	4a2f      	ldr	r2, [pc, #188]	; (1ebc <set_arm_clock+0x290>)
    1e00:	6953      	ldr	r3, [r2, #20]
    1e02:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
    1e06:	6153      	str	r3, [r2, #20]
	while (CCM_CDHIPR & CCM_CDHIPR_PERIPH_CLK_SEL_BUSY) ; // wait
    1e08:	6c93      	ldr	r3, [r2, #72]	; 0x48
    1e0a:	069b      	lsls	r3, r3, #26
    1e0c:	d4fc      	bmi.n	1e08 <set_arm_clock+0x1dc>
	scale_cpu_cycles_to_microseconds = 0xFFFFFFFFu / (uint32_t)(frequency / 1000000u);
    1e0e:	4b3a      	ldr	r3, [pc, #232]	; (1ef8 <set_arm_clock+0x2cc>)
	if ((dcdc & DCDC_REG3_TRG_MASK) > DCDC_REG3_TRG((voltage - 800) / 25)) {
    1e10:	454f      	cmp	r7, r9
	scale_cpu_cycles_to_microseconds = 0xFFFFFFFFu / (uint32_t)(frequency / 1000000u);
    1e12:	fba3 2300 	umull	r2, r3, r3, r0
    1e16:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    1e1a:	ea4f 4393 	mov.w	r3, r3, lsr #18
	F_BUS_ACTUAL = frequency / div_ipg;
    1e1e:	fbb0 f1f1 	udiv	r1, r0, r1
	scale_cpu_cycles_to_microseconds = 0xFFFFFFFFu / (uint32_t)(frequency / 1000000u);
    1e22:	fbb2 f3f3 	udiv	r3, r2, r3
	F_CPU_ACTUAL = frequency;
    1e26:	4a35      	ldr	r2, [pc, #212]	; (1efc <set_arm_clock+0x2d0>)
    1e28:	6010      	str	r0, [r2, #0]
	F_BUS_ACTUAL = frequency / div_ipg;
    1e2a:	4a35      	ldr	r2, [pc, #212]	; (1f00 <set_arm_clock+0x2d4>)
    1e2c:	6011      	str	r1, [r2, #0]
	scale_cpu_cycles_to_microseconds = 0xFFFFFFFFu / (uint32_t)(frequency / 1000000u);
    1e2e:	4a35      	ldr	r2, [pc, #212]	; (1f04 <set_arm_clock+0x2d8>)
    1e30:	6013      	str	r3, [r2, #0]
	if ((dcdc & DCDC_REG3_TRG_MASK) > DCDC_REG3_TRG((voltage - 800) / 25)) {
    1e32:	d208      	bcs.n	1e46 <set_arm_clock+0x21a>
		printf("Decreasing voltage to %u mV\n", voltage);
		dcdc &= ~DCDC_REG3_TRG_MASK;
    1e34:	f028 081f 	bic.w	r8, r8, #31
		dcdc |= DCDC_REG3_TRG((voltage - 800) / 25);
		DCDC_REG3 = dcdc;
    1e38:	4a21      	ldr	r2, [pc, #132]	; (1ec0 <set_arm_clock+0x294>)
		dcdc |= DCDC_REG3_TRG((voltage - 800) / 25);
    1e3a:	ea48 0707 	orr.w	r7, r8, r7
		DCDC_REG3 = dcdc;
    1e3e:	60d7      	str	r7, [r2, #12]
		while (!(DCDC_REG0 & DCDC_REG0_STS_DC_OK)) ; // wait voltage settling
    1e40:	6813      	ldr	r3, [r2, #0]
    1e42:	2b00      	cmp	r3, #0
    1e44:	dafc      	bge.n	1e40 <set_arm_clock+0x214>
	}

	return frequency;
}
    1e46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    1e4a:	4673      	mov	r3, lr
    1e4c:	e762      	b.n	1d14 <set_arm_clock+0xe8>
    1e4e:	2712      	movs	r7, #18
    1e50:	e718      	b.n	1c84 <set_arm_clock+0x58>
    1e52:	f44f 7340 	mov.w	r3, #768	; 0x300
	if (div_ipg > 4) div_ipg = 4;
    1e56:	2104      	movs	r1, #4
    1e58:	e7c5      	b.n	1de6 <set_arm_clock+0x1ba>
	if ((cbcdr & CCM_CBCDR_AHB_PODF_MASK) != CCM_CBCDR_AHB_PODF(div_ahb - 1)) {
    1e5a:	f10c 31ff 	add.w	r1, ip, #4294967295	; 0xffffffff
	uint32_t mult = (frequency * div_arm * div_ahb + 6000000) / 12000000;
    1e5e:	4820      	ldr	r0, [pc, #128]	; (1ee0 <set_arm_clock+0x2b4>)
    1e60:	2307      	movs	r3, #7
	if ((cbcdr & CCM_CBCDR_AHB_PODF_MASK) != CCM_CBCDR_AHB_PODF(div_ahb - 1)) {
    1e62:	028c      	lsls	r4, r1, #10
	uint32_t mult = (frequency * div_arm * div_ahb + 6000000) / 12000000;
    1e64:	4410      	add	r0, r2
	if ((cbcdr & CCM_CBCDR_AHB_PODF_MASK) != CCM_CBCDR_AHB_PODF(div_ahb - 1)) {
    1e66:	ea86 2181 	eor.w	r1, r6, r1, lsl #10
	uint32_t mult = (frequency * div_arm * div_ahb + 6000000) / 12000000;
    1e6a:	4a27      	ldr	r2, [pc, #156]	; (1f08 <set_arm_clock+0x2dc>)
	  | CCM_ANALOG_PLL_ARM_ENABLE | CCM_ANALOG_PLL_ARM_DIV_SELECT(mult))) {
    1e6c:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 1f18 <set_arm_clock+0x2ec>
	uint32_t mult = (frequency * div_arm * div_ahb + 6000000) / 12000000;
    1e70:	fba2 2000 	umull	r2, r0, r2, r0
    1e74:	0d02      	lsrs	r2, r0, #20
	frequency = mult * 12000000 / div_arm / div_ahb;
    1e76:	4825      	ldr	r0, [pc, #148]	; (1f0c <set_arm_clock+0x2e0>)
    1e78:	2a36      	cmp	r2, #54	; 0x36
    1e7a:	bf38      	it	cc
    1e7c:	2236      	movcc	r2, #54	; 0x36
    1e7e:	fb02 f000 	mul.w	r0, r2, r0
	  | CCM_ANALOG_PLL_ARM_ENABLE | CCM_ANALOG_PLL_ARM_DIV_SELECT(mult))) {
    1e82:	ea42 0a0a 	orr.w	sl, r2, sl
    1e86:	e774      	b.n	1d72 <set_arm_clock+0x146>
	if ((cbcdr & CCM_CBCDR_AHB_PODF_MASK) != CCM_CBCDR_AHB_PODF(div_ahb - 1)) {
    1e88:	ea4f 248c 	mov.w	r4, ip, lsl #10
    1e8c:	2300      	movs	r3, #0
    1e8e:	ea86 218c 	eor.w	r1, r6, ip, lsl #10
				div_arm = 1;
    1e92:	f04f 0e01 	mov.w	lr, #1
				div_ahb = div_ahb + 1;
    1e96:	46ac      	mov	ip, r5
    1e98:	e762      	b.n	1d60 <set_arm_clock+0x134>
		if ((cbcdr & CCM_CBCDR_PERIPH_CLK2_PODF_MASK) != CCM_CBCDR_PERIPH_CLK2_PODF(div)) {
    1e9a:	461d      	mov	r5, r3
    1e9c:	f086 54c0 	eor.w	r4, r6, #402653184	; 0x18000000
    1ea0:	4611      	mov	r1, r2
    1ea2:	f04f 53c0 	mov.w	r3, #402653184	; 0x18000000
    1ea6:	e713      	b.n	1cd0 <set_arm_clock+0xa4>
	while (frequency * div_arm * div_ahb < 648000000) {
    1ea8:	2400      	movs	r4, #0
	uint32_t div_ahb = 1;
    1eaa:	f04f 0c01 	mov.w	ip, #1
	while (frequency * div_arm * div_ahb < 648000000) {
    1eae:	4602      	mov	r2, r0
    1eb0:	4631      	mov	r1, r6
    1eb2:	4623      	mov	r3, r4
	uint32_t div_arm = 1;
    1eb4:	46e6      	mov	lr, ip
    1eb6:	e753      	b.n	1d60 <set_arm_clock+0x134>
    1eb8:	1f78a400 	.word	0x1f78a400
    1ebc:	400fc000 	.word	0x400fc000
    1ec0:	40080000 	.word	0x40080000
    1ec4:	23c34600 	.word	0x23c34600
    1ec8:	004cb223 	.word	0x004cb223
    1ecc:	51eb851f 	.word	0x51eb851f
    1ed0:	016e3600 	.word	0x016e3600
    1ed4:	400d8000 	.word	0x400d8000
    1ed8:	80003040 	.word	0x80003040
    1edc:	269fb1ff 	.word	0x269fb1ff
    1ee0:	005b8d80 	.word	0x005b8d80
    1ee4:	4df67eff 	.word	0x4df67eff
    1ee8:	4d3f6400 	.word	0x4d3f6400
    1eec:	08f0d17f 	.word	0x08f0d17f
    1ef0:	2cb4177f 	.word	0x2cb4177f
    1ef4:	00e5109f 	.word	0x00e5109f
    1ef8:	431bde83 	.word	0x431bde83
    1efc:	20002c04 	.word	0x20002c04
    1f00:	20002c00 	.word	0x20002c00
    1f04:	20003c84 	.word	0x20003c84
    1f08:	165e9f81 	.word	0x165e9f81
    1f0c:	00b71b00 	.word	0x00b71b00
    1f10:	8000206c 	.word	0x8000206c
    1f14:	8001307f 	.word	0x8001307f
    1f18:	80002000 	.word	0x80002000

00001f1c <flexpwm_init>:
{
	int i;

	p->FCTRL0 = FLEXPWM_FCTRL0_FLVL(15); // logic high = fault
	p->FSTS0 = 0x000F; // clear fault status
	p->FFILT0 = 0;
    1f1c:	2300      	movs	r3, #0
	p->FSTS0 = 0x000F; // clear fault status
    1f1e:	220f      	movs	r2, #15
		p->SM[i].CTRL = FLEXPWM_SMCTRL_FULL;
		p->SM[i].OCTRL = 0;
		p->SM[i].DTCNT0 = 0;
		p->SM[i].INIT = 0;
		p->SM[i].VAL0 = 0;
		p->SM[i].VAL1 = 33464;
    1f20:	f248 2cb8 	movw	ip, #33464	; 0x82b8
	for (i=0; i < 4; i++) {
    1f24:	4619      	mov	r1, r3
{
    1f26:	b510      	push	{r4, lr}
	p->FCTRL0 = FLEXPWM_FCTRL0_FLVL(15); // logic high = fault
    1f28:	f44f 4470 	mov.w	r4, #61440	; 0xf000
		p->SM[i].CTRL = FLEXPWM_SMCTRL_FULL;
    1f2c:	f44f 6e80 	mov.w	lr, #1024	; 0x400
	p->FCTRL0 = FLEXPWM_FCTRL0_FLVL(15); // logic high = fault
    1f30:	f8a0 418c 	strh.w	r4, [r0, #396]	; 0x18c
		p->SM[i].CTRL2 = FLEXPWM_SMCTRL2_INDEP | FLEXPWM_SMCTRL2_WAITEN
    1f34:	f44f 4460 	mov.w	r4, #57344	; 0xe000
	p->FSTS0 = 0x000F; // clear fault status
    1f38:	f8a0 218e 	strh.w	r2, [r0, #398]	; 0x18e
		p->SM[i].OCTRL = 0;
    1f3c:	460a      	mov	r2, r1
	p->FFILT0 = 0;
    1f3e:	f8a0 3190 	strh.w	r3, [r0, #400]	; 0x190
	p->MCTRL |= FLEXPWM_MCTRL_CLDOK(15);
    1f42:	f8b0 3188 	ldrh.w	r3, [r0, #392]	; 0x188
    1f46:	b29b      	uxth	r3, r3
    1f48:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
    1f4c:	f8a0 3188 	strh.w	r3, [r0, #392]	; 0x188
		p->SM[i].CTRL2 = FLEXPWM_SMCTRL2_INDEP | FLEXPWM_SMCTRL2_WAITEN
    1f50:	eb01 0341 	add.w	r3, r1, r1, lsl #1
	for (i=0; i < 4; i++) {
    1f54:	3101      	adds	r1, #1
    1f56:	eb00 1343 	add.w	r3, r0, r3, lsl #5
    1f5a:	2904      	cmp	r1, #4
		p->SM[i].CTRL2 = FLEXPWM_SMCTRL2_INDEP | FLEXPWM_SMCTRL2_WAITEN
    1f5c:	809c      	strh	r4, [r3, #4]
		p->SM[i].CTRL = FLEXPWM_SMCTRL_FULL;
    1f5e:	f8a3 e006 	strh.w	lr, [r3, #6]
		p->SM[i].OCTRL = 0;
    1f62:	845a      	strh	r2, [r3, #34]	; 0x22
		p->SM[i].DTCNT0 = 0;
    1f64:	861a      	strh	r2, [r3, #48]	; 0x30
		p->SM[i].INIT = 0;
    1f66:	805a      	strh	r2, [r3, #2]
		p->SM[i].VAL0 = 0;
    1f68:	815a      	strh	r2, [r3, #10]
		p->SM[i].VAL1 = 33464;
    1f6a:	f8a3 c00e 	strh.w	ip, [r3, #14]
		p->SM[i].VAL2 = 0;
    1f6e:	825a      	strh	r2, [r3, #18]
		p->SM[i].VAL3 = 0;
    1f70:	82da      	strh	r2, [r3, #22]
		p->SM[i].VAL4 = 0;
    1f72:	835a      	strh	r2, [r3, #26]
		p->SM[i].VAL5 = 0;
    1f74:	83da      	strh	r2, [r3, #30]
	for (i=0; i < 4; i++) {
    1f76:	d1eb      	bne.n	1f50 <flexpwm_init+0x34>
	}
	p->MCTRL |= FLEXPWM_MCTRL_LDOK(15);
    1f78:	f8b0 3188 	ldrh.w	r3, [r0, #392]	; 0x188
    1f7c:	b29b      	uxth	r3, r3
    1f7e:	f043 030f 	orr.w	r3, r3, #15
    1f82:	f8a0 3188 	strh.w	r3, [r0, #392]	; 0x188
	p->MCTRL |= FLEXPWM_MCTRL_RUN(15);
    1f86:	f8b0 3188 	ldrh.w	r3, [r0, #392]	; 0x188
    1f8a:	b29b      	uxth	r3, r3
    1f8c:	f443 6370 	orr.w	r3, r3, #3840	; 0xf00
    1f90:	f8a0 3188 	strh.w	r3, [r0, #392]	; 0x188
}
    1f94:	bd10      	pop	{r4, pc}
    1f96:	bf00      	nop

00001f98 <pwm_init>:
}

void pwm_init(void)
{
	//printf("pwm init\n");
	CCM_CCGR4 |= CCM_CCGR4_PWM1(CCM_CCGR_ON) | CCM_CCGR4_PWM2(CCM_CCGR_ON) |
    1f98:	4b37      	ldr	r3, [pc, #220]	; (2078 <pwm_init+0xe0>)
		CCM_CCGR4_PWM3(CCM_CCGR_ON) | CCM_CCGR4_PWM4(CCM_CCGR_ON);
	CCM_CCGR6 |= CCM_CCGR6_QTIMER1(CCM_CCGR_ON) | CCM_CCGR6_QTIMER2(CCM_CCGR_ON) |
    1f9a:	4a38      	ldr	r2, [pc, #224]	; (207c <pwm_init+0xe4>)
	CCM_CCGR4 |= CCM_CCGR4_PWM1(CCM_CCGR_ON) | CCM_CCGR4_PWM2(CCM_CCGR_ON) |
    1f9c:	6f99      	ldr	r1, [r3, #120]	; 0x78
		CCM_CCGR6_QTIMER3(CCM_CCGR_ON) | CCM_CCGR6_QTIMER4(CCM_CCGR_ON);
	flexpwm_init(&IMXRT_FLEXPWM1);
    1f9e:	4838      	ldr	r0, [pc, #224]	; (2080 <pwm_init+0xe8>)
	CCM_CCGR4 |= CCM_CCGR4_PWM1(CCM_CCGR_ON) | CCM_CCGR4_PWM2(CCM_CCGR_ON) |
    1fa0:	f441 017f 	orr.w	r1, r1, #16711680	; 0xff0000
{
    1fa4:	b570      	push	{r4, r5, r6, lr}
	CCM_CCGR4 |= CCM_CCGR4_PWM1(CCM_CCGR_ON) | CCM_CCGR4_PWM2(CCM_CCGR_ON) |
    1fa6:	6799      	str	r1, [r3, #120]	; 0x78
		p->CH[i].CSCTRL = TMR_CSCTRL_CL1(1) | TMR_CSCTRL_ALT_LOAD;
    1fa8:	f241 0601 	movw	r6, #4097	; 0x1001
	CCM_CCGR6 |= CCM_CCGR6_QTIMER1(CCM_CCGR_ON) | CCM_CCGR6_QTIMER2(CCM_CCGR_ON) |
    1fac:	f8d3 1080 	ldr.w	r1, [r3, #128]	; 0x80
		p->CH[i].LOAD = 24000;   // low time  (65537 - x) - 
    1fb0:	f645 55c0 	movw	r5, #24000	; 0x5dc0
		p->CH[i].CTRL = TMR_CTRL_CM(1) | TMR_CTRL_PCS(8) |
    1fb4:	f243 0426 	movw	r4, #12326	; 0x3026
	CCM_CCGR6 |= CCM_CCGR6_QTIMER1(CCM_CCGR_ON) | CCM_CCGR6_QTIMER2(CCM_CCGR_ON) |
    1fb8:	430a      	orrs	r2, r1
    1fba:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	flexpwm_init(&IMXRT_FLEXPWM1);
    1fbe:	f7ff ffad 	bl	1f1c <flexpwm_init>
	flexpwm_init(&IMXRT_FLEXPWM2);
    1fc2:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
    1fc6:	f7ff ffa9 	bl	1f1c <flexpwm_init>
	flexpwm_init(&IMXRT_FLEXPWM3);
    1fca:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
    1fce:	f7ff ffa5 	bl	1f1c <flexpwm_init>
	flexpwm_init(&IMXRT_FLEXPWM4);
    1fd2:	f500 4080 	add.w	r0, r0, #16384	; 0x4000
    1fd6:	f7ff ffa1 	bl	1f1c <flexpwm_init>
	for (i=0; i < 4; i++) {
    1fda:	2200      	movs	r2, #0
		p->CH[i].CTRL = 0; // stop timer
    1fdc:	f5a0 1003 	sub.w	r0, r0, #2146304	; 0x20c000
		p->CH[i].SCTRL = TMR_SCTRL_OEN | TMR_SCTRL_OPS | TMR_SCTRL_VAL | TMR_SCTRL_FORCE;
    1fe0:	f04f 0e0f 	mov.w	lr, #15
		p->CH[i].CTRL = 0; // stop timer
    1fe4:	4611      	mov	r1, r2
    1fe6:	eb00 1342 	add.w	r3, r0, r2, lsl #5
    1fea:	ea4f 1c42 	mov.w	ip, r2, lsl #5
	for (i=0; i < 4; i++) {
    1fee:	3201      	adds	r2, #1
		p->CH[i].CTRL = 0; // stop timer
    1ff0:	8199      	strh	r1, [r3, #12]
	for (i=0; i < 4; i++) {
    1ff2:	2a04      	cmp	r2, #4
		p->CH[i].CNTR = 0;
    1ff4:	8159      	strh	r1, [r3, #10]
		p->CH[i].SCTRL = TMR_SCTRL_OEN | TMR_SCTRL_OPS | TMR_SCTRL_VAL | TMR_SCTRL_FORCE;
    1ff6:	f8a3 e00e 	strh.w	lr, [r3, #14]
		p->CH[i].CSCTRL = TMR_CSCTRL_CL1(1) | TMR_CSCTRL_ALT_LOAD;
    1ffa:	829e      	strh	r6, [r3, #20]
		p->CH[i].LOAD = 24000;   // low time  (65537 - x) - 
    1ffc:	80dd      	strh	r5, [r3, #6]
		p->CH[i].COMP1 = 0;  // high time (0 = always low, max = LOAD-1)
    1ffe:	f820 100c 	strh.w	r1, [r0, ip]
		p->CH[i].CMPLD1 = 0;
    2002:	8219      	strh	r1, [r3, #16]
		p->CH[i].CTRL = TMR_CTRL_CM(1) | TMR_CTRL_PCS(8) |
    2004:	819c      	strh	r4, [r3, #12]
	for (i=0; i < 4; i++) {
    2006:	d1ee      	bne.n	1fe6 <pwm_init+0x4e>
    2008:	2200      	movs	r2, #0
		p->CH[i].CTRL = 0; // stop timer
    200a:	481e      	ldr	r0, [pc, #120]	; (2084 <pwm_init+0xec>)
		p->CH[i].SCTRL = TMR_SCTRL_OEN | TMR_SCTRL_OPS | TMR_SCTRL_VAL | TMR_SCTRL_FORCE;
    200c:	f04f 0e0f 	mov.w	lr, #15
		p->CH[i].CSCTRL = TMR_CSCTRL_CL1(1) | TMR_CSCTRL_ALT_LOAD;
    2010:	f241 0601 	movw	r6, #4097	; 0x1001
		p->CH[i].CTRL = 0; // stop timer
    2014:	4611      	mov	r1, r2
		p->CH[i].LOAD = 24000;   // low time  (65537 - x) - 
    2016:	f645 55c0 	movw	r5, #24000	; 0x5dc0
		p->CH[i].CTRL = TMR_CTRL_CM(1) | TMR_CTRL_PCS(8) |
    201a:	f243 0426 	movw	r4, #12326	; 0x3026
		p->CH[i].CTRL = 0; // stop timer
    201e:	eb00 1342 	add.w	r3, r0, r2, lsl #5
    2022:	ea4f 1c42 	mov.w	ip, r2, lsl #5
	for (i=0; i < 4; i++) {
    2026:	3201      	adds	r2, #1
		p->CH[i].CTRL = 0; // stop timer
    2028:	8199      	strh	r1, [r3, #12]
	for (i=0; i < 4; i++) {
    202a:	2a04      	cmp	r2, #4
		p->CH[i].CNTR = 0;
    202c:	8159      	strh	r1, [r3, #10]
		p->CH[i].SCTRL = TMR_SCTRL_OEN | TMR_SCTRL_OPS | TMR_SCTRL_VAL | TMR_SCTRL_FORCE;
    202e:	f8a3 e00e 	strh.w	lr, [r3, #14]
		p->CH[i].CSCTRL = TMR_CSCTRL_CL1(1) | TMR_CSCTRL_ALT_LOAD;
    2032:	829e      	strh	r6, [r3, #20]
		p->CH[i].LOAD = 24000;   // low time  (65537 - x) - 
    2034:	80dd      	strh	r5, [r3, #6]
		p->CH[i].COMP1 = 0;  // high time (0 = always low, max = LOAD-1)
    2036:	f820 100c 	strh.w	r1, [r0, ip]
		p->CH[i].CMPLD1 = 0;
    203a:	8219      	strh	r1, [r3, #16]
		p->CH[i].CTRL = TMR_CTRL_CM(1) | TMR_CTRL_PCS(8) |
    203c:	819c      	strh	r4, [r3, #12]
	for (i=0; i < 4; i++) {
    203e:	d1ee      	bne.n	201e <pwm_init+0x86>
    2040:	2200      	movs	r2, #0
		p->CH[i].CTRL = 0; // stop timer
    2042:	4811      	ldr	r0, [pc, #68]	; (2088 <pwm_init+0xf0>)
		p->CH[i].SCTRL = TMR_SCTRL_OEN | TMR_SCTRL_OPS | TMR_SCTRL_VAL | TMR_SCTRL_FORCE;
    2044:	260f      	movs	r6, #15
		p->CH[i].CSCTRL = TMR_CSCTRL_CL1(1) | TMR_CSCTRL_ALT_LOAD;
    2046:	f241 0501 	movw	r5, #4097	; 0x1001
		p->CH[i].CTRL = 0; // stop timer
    204a:	4611      	mov	r1, r2
		p->CH[i].LOAD = 24000;   // low time  (65537 - x) - 
    204c:	f645 54c0 	movw	r4, #24000	; 0x5dc0
		p->CH[i].CTRL = TMR_CTRL_CM(1) | TMR_CTRL_PCS(8) |
    2050:	f243 0e26 	movw	lr, #12326	; 0x3026
		p->CH[i].CTRL = 0; // stop timer
    2054:	eb00 1342 	add.w	r3, r0, r2, lsl #5
    2058:	ea4f 1c42 	mov.w	ip, r2, lsl #5
	for (i=0; i < 4; i++) {
    205c:	3201      	adds	r2, #1
		p->CH[i].CTRL = 0; // stop timer
    205e:	8199      	strh	r1, [r3, #12]
	for (i=0; i < 4; i++) {
    2060:	2a04      	cmp	r2, #4
		p->CH[i].CNTR = 0;
    2062:	8159      	strh	r1, [r3, #10]
		p->CH[i].SCTRL = TMR_SCTRL_OEN | TMR_SCTRL_OPS | TMR_SCTRL_VAL | TMR_SCTRL_FORCE;
    2064:	81de      	strh	r6, [r3, #14]
		p->CH[i].CSCTRL = TMR_CSCTRL_CL1(1) | TMR_CSCTRL_ALT_LOAD;
    2066:	829d      	strh	r5, [r3, #20]
		p->CH[i].LOAD = 24000;   // low time  (65537 - x) - 
    2068:	80dc      	strh	r4, [r3, #6]
		p->CH[i].COMP1 = 0;  // high time (0 = always low, max = LOAD-1)
    206a:	f820 100c 	strh.w	r1, [r0, ip]
		p->CH[i].CMPLD1 = 0;
    206e:	8219      	strh	r1, [r3, #16]
		p->CH[i].CTRL = TMR_CTRL_CM(1) | TMR_CTRL_PCS(8) |
    2070:	f8a3 e00c 	strh.w	lr, [r3, #12]
	for (i=0; i < 4; i++) {
    2074:	d1ee      	bne.n	2054 <pwm_init+0xbc>
	quadtimer_init(&IMXRT_TMR1);
	quadtimer_init(&IMXRT_TMR2);
	quadtimer_init(&IMXRT_TMR3);
}
    2076:	bd70      	pop	{r4, r5, r6, pc}
    2078:	400fc000 	.word	0x400fc000
    207c:	fc030000 	.word	0xfc030000
    2080:	403dc000 	.word	0x403dc000
    2084:	401e0000 	.word	0x401e0000
    2088:	401e4000 	.word	0x401e4000

0000208c <rtc_get>:
	uint32_t hi1 = SNVS_HPRTCMR;
    208c:	4a07      	ldr	r2, [pc, #28]	; (20ac <rtc_get+0x20>)
    208e:	6a50      	ldr	r0, [r2, #36]	; 0x24
	uint32_t lo1 = SNVS_HPRTCLR;
    2090:	6a93      	ldr	r3, [r2, #40]	; 0x28
		uint32_t hi2 = SNVS_HPRTCMR;
    2092:	4619      	mov	r1, r3
    2094:	4684      	mov	ip, r0
    2096:	6a50      	ldr	r0, [r2, #36]	; 0x24
		uint32_t lo2 = SNVS_HPRTCLR;
    2098:	6a93      	ldr	r3, [r2, #40]	; 0x28
		if (lo1 == lo2 && hi1 == hi2) {
    209a:	4299      	cmp	r1, r3
    209c:	d1f9      	bne.n	2092 <rtc_get+0x6>
    209e:	4584      	cmp	ip, r0
    20a0:	d1f7      	bne.n	2092 <rtc_get+0x6>
			return (hi2 << 17) | (lo2 >> 15);
    20a2:	0bdb      	lsrs	r3, r3, #15
}
    20a4:	ea43 4040 	orr.w	r0, r3, r0, lsl #17
    20a8:	4770      	bx	lr
    20aa:	bf00      	nop
    20ac:	400d4000 	.word	0x400d4000

000020b0 <sm_align_pool>:
{
    20b0:	b508      	push	{r3, lr}
	x = spool->pool_size % HEADER_SZ;
    20b2:	e9d0 3200 	ldrd	r3, r2, [r0]
	if (!spool->pool || !spool->pool_size) return 0;
    20b6:	b15b      	cbz	r3, 20d0 <sm_align_pool+0x20>
    20b8:	b1ba      	cbz	r2, 20ea <sm_align_pool+0x3a>
	if (spool->pool_size % HEADER_SZ) return 0;
    20ba:	4b0f      	ldr	r3, [pc, #60]	; (20f8 <sm_align_pool+0x48>)
    20bc:	fba3 1302 	umull	r1, r3, r3, r2
    20c0:	08db      	lsrs	r3, r3, #3
    20c2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    20c6:	ebb2 0383 	subs.w	r3, r2, r3, lsl #2
    20ca:	d10a      	bne.n	20e2 <sm_align_pool+0x32>
	if (smalloc_verify_pool(spool)) return 1;
    20cc:	2001      	movs	r0, #1
}
    20ce:	bd08      	pop	{r3, pc}
	x = spool->pool_size % HEADER_SZ;
    20d0:	4b09      	ldr	r3, [pc, #36]	; (20f8 <sm_align_pool+0x48>)
    20d2:	fba3 1302 	umull	r1, r3, r3, r2
    20d6:	08db      	lsrs	r3, r3, #3
    20d8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
	if (x) spool->pool_size -= x;
    20dc:	ebb2 0383 	subs.w	r3, r2, r3, lsl #2
    20e0:	d001      	beq.n	20e6 <sm_align_pool+0x36>
    20e2:	1ad2      	subs	r2, r2, r3
    20e4:	6042      	str	r2, [r0, #4]
	if (spool->pool_size <= MIN_POOL_SZ) {
    20e6:	2af0      	cmp	r2, #240	; 0xf0
    20e8:	d8f0      	bhi.n	20cc <sm_align_pool+0x1c>
		errno = ENOSPC;
    20ea:	f008 fc4b 	bl	a984 <__errno>
    20ee:	221c      	movs	r2, #28
    20f0:	4603      	mov	r3, r0
    20f2:	2000      	movs	r0, #0
    20f4:	601a      	str	r2, [r3, #0]
}
    20f6:	bd08      	pop	{r3, pc}
    20f8:	aaaaaaab 	.word	0xaaaaaaab

000020fc <sm_set_pool>:
{
    20fc:	b570      	push	{r4, r5, r6, lr}
	if (!spool) {
    20fe:	4604      	mov	r4, r0
    2100:	b338      	cbz	r0, 2152 <sm_set_pool+0x56>
	if (!new_pool || !new_pool_size) {
    2102:	b119      	cbz	r1, 210c <sm_set_pool+0x10>
    2104:	fab2 f682 	clz	r6, r2
    2108:	0976      	lsrs	r6, r6, #5
    210a:	b9a2      	cbnz	r2, 2136 <sm_set_pool+0x3a>
	if (!spool->pool || !spool->pool_size) return 0;
    210c:	6820      	ldr	r0, [r4, #0]
    210e:	b300      	cbz	r0, 2152 <sm_set_pool+0x56>
    2110:	6862      	ldr	r2, [r4, #4]
    2112:	b1f2      	cbz	r2, 2152 <sm_set_pool+0x56>
	if (spool->pool_size % HEADER_SZ) return 0;
    2114:	4b18      	ldr	r3, [pc, #96]	; (2178 <sm_set_pool+0x7c>)
    2116:	4919      	ldr	r1, [pc, #100]	; (217c <sm_set_pool+0x80>)
    2118:	fb02 f303 	mul.w	r3, r2, r3
    211c:	ebb1 0fb3 	cmp.w	r1, r3, ror #2
    2120:	d317      	bcc.n	2152 <sm_set_pool+0x56>
			if (spool->do_zero) memset(spool->pool, 0, spool->pool_size);
    2122:	68a3      	ldr	r3, [r4, #8]
    2124:	b9e3      	cbnz	r3, 2160 <sm_set_pool+0x64>
			memset(spool, 0, sizeof(struct smalloc_pool));
    2126:	2200      	movs	r2, #0
			return 1;
    2128:	2301      	movs	r3, #1
			memset(spool, 0, sizeof(struct smalloc_pool));
    212a:	6022      	str	r2, [r4, #0]
    212c:	6062      	str	r2, [r4, #4]
    212e:	60a2      	str	r2, [r4, #8]
    2130:	60e2      	str	r2, [r4, #12]
		spool->do_zero = do_zero;
		memset(spool->pool, 0, spool->pool_size);
	}

	return 1;
}
    2132:	4618      	mov	r0, r3
    2134:	bd70      	pop	{r4, r5, r6, pc}
	spool->pool = new_pool;
    2136:	461d      	mov	r5, r3
	spool->oomfn = oom_handler;
    2138:	9b04      	ldr	r3, [sp, #16]
	spool->pool_size = new_pool_size;
    213a:	e9c0 1200 	strd	r1, r2, [r0]
	spool->oomfn = oom_handler;
    213e:	60c3      	str	r3, [r0, #12]
	if (!sm_align_pool(spool)) return 0;
    2140:	f7ff ffb6 	bl	20b0 <sm_align_pool>
    2144:	4603      	mov	r3, r0
    2146:	2800      	cmp	r0, #0
    2148:	d0f3      	beq.n	2132 <sm_set_pool+0x36>
	if (do_zero) {
    214a:	b96d      	cbnz	r5, 2168 <sm_set_pool+0x6c>
	return 1;
    214c:	2301      	movs	r3, #1
}
    214e:	4618      	mov	r0, r3
    2150:	bd70      	pop	{r4, r5, r6, pc}
		errno = EINVAL;
    2152:	f008 fc17 	bl	a984 <__errno>
    2156:	2216      	movs	r2, #22
		return 0;
    2158:	2300      	movs	r3, #0
		errno = EINVAL;
    215a:	6002      	str	r2, [r0, #0]
}
    215c:	4618      	mov	r0, r3
    215e:	bd70      	pop	{r4, r5, r6, pc}
			if (spool->do_zero) memset(spool->pool, 0, spool->pool_size);
    2160:	2100      	movs	r1, #0
    2162:	f00a fd43 	bl	cbec <memset>
    2166:	e7de      	b.n	2126 <sm_set_pool+0x2a>
		memset(spool->pool, 0, spool->pool_size);
    2168:	6862      	ldr	r2, [r4, #4]
    216a:	4631      	mov	r1, r6
    216c:	6820      	ldr	r0, [r4, #0]
		spool->do_zero = do_zero;
    216e:	60a5      	str	r5, [r4, #8]
		memset(spool->pool, 0, spool->pool_size);
    2170:	f00a fd3c 	bl	cbec <memset>
	return 1;
    2174:	2301      	movs	r3, #1
    2176:	e7dc      	b.n	2132 <sm_set_pool+0x36>
    2178:	aaaaaaab 	.word	0xaaaaaaab
    217c:	15555555 	.word	0x15555555

00002180 <__aeabi_atexit>:
    2180:	4603      	mov	r3, r0
    2182:	4608      	mov	r0, r1
    2184:	4619      	mov	r1, r3
    2186:	f00a bd83 	b.w	cc90 <__cxa_atexit>
    218a:	bf00      	nop

0000218c <std::__throw_bad_alloc()>:
    218c:	b508      	push	{r3, lr}
    218e:	2004      	movs	r0, #4
    2190:	f000 f8c8 	bl	2324 <__cxa_allocate_exception>
    2194:	4b02      	ldr	r3, [pc, #8]	; (21a0 <std::__throw_bad_alloc()+0x14>)
    2196:	4a03      	ldr	r2, [pc, #12]	; (21a4 <std::__throw_bad_alloc()+0x18>)
    2198:	4903      	ldr	r1, [pc, #12]	; (21a8 <std::__throw_bad_alloc()+0x1c>)
    219a:	6003      	str	r3, [r0, #0]
    219c:	f000 fd76 	bl	2c8c <__cxa_throw>
    21a0:	200012e8 	.word	0x200012e8
    21a4:	00002215 	.word	0x00002215
    21a8:	20001110 	.word	0x20001110

000021ac <std::__throw_logic_error(char const*)>:
    21ac:	b510      	push	{r4, lr}
    21ae:	b082      	sub	sp, #8
    21b0:	9001      	str	r0, [sp, #4]
    21b2:	2008      	movs	r0, #8
    21b4:	f000 f8b6 	bl	2324 <__cxa_allocate_exception>
    21b8:	9901      	ldr	r1, [sp, #4]
    21ba:	4604      	mov	r4, r0
    21bc:	f000 ff6e 	bl	309c <std::logic_error::logic_error(char const*)>
    21c0:	4a04      	ldr	r2, [pc, #16]	; (21d4 <std::__throw_logic_error(char const*)+0x28>)
    21c2:	4905      	ldr	r1, [pc, #20]	; (21d8 <std::__throw_logic_error(char const*)+0x2c>)
    21c4:	4620      	mov	r0, r4
    21c6:	f000 fd61 	bl	2c8c <__cxa_throw>
    21ca:	4620      	mov	r0, r4
    21cc:	f000 f8c2 	bl	2354 <__cxa_free_exception>
    21d0:	f000 f8e4 	bl	239c <__cxa_end_cleanup>
    21d4:	00002f8d 	.word	0x00002f8d
    21d8:	200010ec 	.word	0x200010ec

000021dc <std::__throw_length_error(char const*)>:
    21dc:	b510      	push	{r4, lr}
    21de:	b082      	sub	sp, #8
    21e0:	9001      	str	r0, [sp, #4]
    21e2:	2008      	movs	r0, #8
    21e4:	f000 f89e 	bl	2324 <__cxa_allocate_exception>
    21e8:	9901      	ldr	r1, [sp, #4]
    21ea:	4604      	mov	r4, r0
    21ec:	f000 ff96 	bl	311c <std::length_error::length_error(char const*)>
    21f0:	4a04      	ldr	r2, [pc, #16]	; (2204 <std::__throw_length_error(char const*)+0x28>)
    21f2:	4905      	ldr	r1, [pc, #20]	; (2208 <std::__throw_length_error(char const*)+0x2c>)
    21f4:	4620      	mov	r0, r4
    21f6:	f000 fd49 	bl	2c8c <__cxa_throw>
    21fa:	4620      	mov	r0, r4
    21fc:	f000 f8aa 	bl	2354 <__cxa_free_exception>
    2200:	f000 f8cc 	bl	239c <__cxa_end_cleanup>
    2204:	00002fcd 	.word	0x00002fcd
    2208:	200010f8 	.word	0x200010f8

0000220c <std::bad_alloc::what() const>:
    220c:	4800      	ldr	r0, [pc, #0]	; (2210 <std::bad_alloc::what() const+0x4>)
    220e:	4770      	bx	lr
    2210:	20001054 	.word	0x20001054

00002214 <std::bad_alloc::~bad_alloc()>:
    2214:	b510      	push	{r4, lr}
    2216:	4b03      	ldr	r3, [pc, #12]	; (2224 <std::bad_alloc::~bad_alloc()+0x10>)
    2218:	6003      	str	r3, [r0, #0]
    221a:	4604      	mov	r4, r0
    221c:	f000 f986 	bl	252c <std::exception::~exception()>
    2220:	4620      	mov	r0, r4
    2222:	bd10      	pop	{r4, pc}
    2224:	200012e8 	.word	0x200012e8

00002228 <std::bad_alloc::~bad_alloc()>:
    2228:	b510      	push	{r4, lr}
    222a:	4b05      	ldr	r3, [pc, #20]	; (2240 <std::bad_alloc::~bad_alloc()+0x18>)
    222c:	6003      	str	r3, [r0, #0]
    222e:	4604      	mov	r4, r0
    2230:	f000 f97c 	bl	252c <std::exception::~exception()>
    2234:	4620      	mov	r0, r4
    2236:	2104      	movs	r1, #4
    2238:	f7fe fa9e 	bl	778 <operator delete(void*, unsigned int)>
    223c:	4620      	mov	r0, r4
    223e:	bd10      	pop	{r4, pc}
    2240:	200012e8 	.word	0x200012e8

00002244 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]>:
    2244:	4920      	ldr	r1, [pc, #128]	; (22c8 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x84>)
    2246:	684b      	ldr	r3, [r1, #4]
    2248:	b530      	push	{r4, r5, lr}
    224a:	f850 5c08 	ldr.w	r5, [r0, #-8]
    224e:	f1a0 0408 	sub.w	r4, r0, #8
    2252:	b35b      	cbz	r3, 22ac <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x68>
    2254:	eb04 0e05 	add.w	lr, r4, r5
    2258:	4573      	cmp	r3, lr
    225a:	d827      	bhi.n	22ac <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x68>
    225c:	d021      	beq.n	22a2 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x5e>
    225e:	685a      	ldr	r2, [r3, #4]
    2260:	f101 0c04 	add.w	ip, r1, #4
    2264:	b932      	cbnz	r2, 2274 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x30>
    2266:	e00f      	b.n	2288 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x44>
    2268:	6851      	ldr	r1, [r2, #4]
    226a:	f103 0c04 	add.w	ip, r3, #4
    226e:	b321      	cbz	r1, 22ba <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x76>
    2270:	4613      	mov	r3, r2
    2272:	460a      	mov	r2, r1
    2274:	4596      	cmp	lr, r2
    2276:	d3f7      	bcc.n	2268 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x24>
    2278:	bf04      	itt	eq
    227a:	e9de 2100 	ldrdeq	r2, r1, [lr]
    227e:	6059      	streq	r1, [r3, #4]
    2280:	f8dc 3000 	ldr.w	r3, [ip]
    2284:	bf08      	it	eq
    2286:	18ad      	addeq	r5, r5, r2
    2288:	681a      	ldr	r2, [r3, #0]
    228a:	1899      	adds	r1, r3, r2
    228c:	428c      	cmp	r4, r1
    228e:	d011      	beq.n	22b4 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x70>
    2290:	685b      	ldr	r3, [r3, #4]
    2292:	f840 3c04 	str.w	r3, [r0, #-4]
    2296:	f8dc 3000 	ldr.w	r3, [ip]
    229a:	f840 5c08 	str.w	r5, [r0, #-8]
    229e:	605c      	str	r4, [r3, #4]
    22a0:	bd30      	pop	{r4, r5, pc}
    22a2:	681a      	ldr	r2, [r3, #0]
    22a4:	685b      	ldr	r3, [r3, #4]
    22a6:	442a      	add	r2, r5
    22a8:	f840 2c08 	str.w	r2, [r0, #-8]
    22ac:	f840 3c04 	str.w	r3, [r0, #-4]
    22b0:	604c      	str	r4, [r1, #4]
    22b2:	bd30      	pop	{r4, r5, pc}
    22b4:	442a      	add	r2, r5
    22b6:	601a      	str	r2, [r3, #0]
    22b8:	bd30      	pop	{r4, r5, pc}
    22ba:	685b      	ldr	r3, [r3, #4]
    22bc:	681a      	ldr	r2, [r3, #0]
    22be:	1899      	adds	r1, r3, r2
    22c0:	428c      	cmp	r4, r1
    22c2:	d1e5      	bne.n	2290 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x4c>
    22c4:	e7f6      	b.n	22b4 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]+0x70>
    22c6:	bf00      	nop
    22c8:	20003894 	.word	0x20003894

000022cc <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]>:
    22cc:	4914      	ldr	r1, [pc, #80]	; (2320 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x54>)
    22ce:	f100 0308 	add.w	r3, r0, #8
    22d2:	6848      	ldr	r0, [r1, #4]
    22d4:	2b08      	cmp	r3, #8
    22d6:	bf38      	it	cc
    22d8:	2308      	movcc	r3, #8
    22da:	b1f8      	cbz	r0, 231c <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x50>
    22dc:	3307      	adds	r3, #7
    22de:	f023 0307 	bic.w	r3, r3, #7
    22e2:	3104      	adds	r1, #4
    22e4:	e002      	b.n	22ec <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x20>
    22e6:	1d01      	adds	r1, r0, #4
    22e8:	6840      	ldr	r0, [r0, #4]
    22ea:	b180      	cbz	r0, 230e <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x42>
    22ec:	6802      	ldr	r2, [r0, #0]
    22ee:	4293      	cmp	r3, r2
    22f0:	d8f9      	bhi.n	22e6 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x1a>
    22f2:	b430      	push	{r4, r5}
    22f4:	1ad4      	subs	r4, r2, r3
    22f6:	2c07      	cmp	r4, #7
    22f8:	d90a      	bls.n	2310 <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]+0x44>
    22fa:	18c5      	adds	r5, r0, r3
    22fc:	6842      	ldr	r2, [r0, #4]
    22fe:	606a      	str	r2, [r5, #4]
    2300:	50c4      	str	r4, [r0, r3]
    2302:	6808      	ldr	r0, [r1, #0]
    2304:	6003      	str	r3, [r0, #0]
    2306:	600d      	str	r5, [r1, #0]
    2308:	3008      	adds	r0, #8
    230a:	bc30      	pop	{r4, r5}
    230c:	4770      	bx	lr
    230e:	4770      	bx	lr
    2310:	6845      	ldr	r5, [r0, #4]
    2312:	6002      	str	r2, [r0, #0]
    2314:	600d      	str	r5, [r1, #0]
    2316:	3008      	adds	r0, #8
    2318:	bc30      	pop	{r4, r5}
    231a:	4770      	bx	lr
    231c:	4770      	bx	lr
    231e:	bf00      	nop
    2320:	20003894 	.word	0x20003894

00002324 <__cxa_allocate_exception>:
    2324:	b510      	push	{r4, lr}
    2326:	f100 0480 	add.w	r4, r0, #128	; 0x80
    232a:	4620      	mov	r0, r4
    232c:	f00a f8d2 	bl	c4d4 <malloc>
    2330:	4603      	mov	r3, r0
    2332:	b130      	cbz	r0, 2342 <__cxa_allocate_exception+0x1e>
    2334:	2280      	movs	r2, #128	; 0x80
    2336:	2100      	movs	r1, #0
    2338:	4618      	mov	r0, r3
    233a:	f00a fc57 	bl	cbec <memset>
    233e:	3080      	adds	r0, #128	; 0x80
    2340:	bd10      	pop	{r4, pc}
    2342:	4620      	mov	r0, r4
    2344:	f7ff ffc2 	bl	22cc <(anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]>
    2348:	4603      	mov	r3, r0
    234a:	2800      	cmp	r0, #0
    234c:	d1f2      	bne.n	2334 <__cxa_allocate_exception+0x10>
    234e:	f000 fc23 	bl	2b98 <std::terminate()>
    2352:	bf00      	nop

00002354 <__cxa_free_exception>:
    2354:	4a06      	ldr	r2, [pc, #24]	; (2370 <__cxa_free_exception+0x1c>)
    2356:	6893      	ldr	r3, [r2, #8]
    2358:	3880      	subs	r0, #128	; 0x80
    235a:	4298      	cmp	r0, r3
    235c:	d905      	bls.n	236a <__cxa_free_exception+0x16>
    235e:	68d2      	ldr	r2, [r2, #12]
    2360:	4413      	add	r3, r2
    2362:	4298      	cmp	r0, r3
    2364:	d201      	bcs.n	236a <__cxa_free_exception+0x16>
    2366:	f7ff bf6d 	b.w	2244 <(anonymous namespace)::pool::free(void*) [clone .constprop.0]>
    236a:	f00a b8bb 	b.w	c4e4 <free>
    236e:	bf00      	nop
    2370:	20003894 	.word	0x20003894

00002374 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
    2374:	b538      	push	{r3, r4, r5, lr}
    2376:	4c08      	ldr	r4, [pc, #32]	; (2398 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x24>)
    2378:	f44f 651e 	mov.w	r5, #2528	; 0x9e0
    237c:	4628      	mov	r0, r5
    237e:	60e5      	str	r5, [r4, #12]
    2380:	f00a f8a8 	bl	c4d4 <malloc>
    2384:	60a0      	str	r0, [r4, #8]
    2386:	b120      	cbz	r0, 2392 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x1e>
    2388:	2300      	movs	r3, #0
    238a:	e9c0 5300 	strd	r5, r3, [r0]
    238e:	6060      	str	r0, [r4, #4]
    2390:	bd38      	pop	{r3, r4, r5, pc}
    2392:	60e0      	str	r0, [r4, #12]
    2394:	6060      	str	r0, [r4, #4]
    2396:	bd38      	pop	{r3, r4, r5, pc}
    2398:	20003894 	.word	0x20003894

0000239c <__cxa_end_cleanup>:
    239c:	b41e      	push	{r1, r2, r3, r4}
    239e:	f000 f88d 	bl	24bc <__gnu_end_cleanup>
    23a2:	bc1e      	pop	{r1, r2, r3, r4}
    23a4:	f007 fe0e 	bl	9fc4 <_Unwind_Resume>

000023a8 <__cxa_type_match>:
    23a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    23aa:	7802      	ldrb	r2, [r0, #0]
    23ac:	2a47      	cmp	r2, #71	; 0x47
    23ae:	b083      	sub	sp, #12
    23b0:	460c      	mov	r4, r1
    23b2:	461d      	mov	r5, r3
    23b4:	d019      	beq.n	23ea <__cxa_type_match+0x42>
    23b6:	4e26      	ldr	r6, [pc, #152]	; (2450 <__cxa_type_match+0xa8>)
    23b8:	2000      	movs	r0, #0
    23ba:	6833      	ldr	r3, [r6, #0]
    23bc:	9001      	str	r0, [sp, #4]
    23be:	689b      	ldr	r3, [r3, #8]
    23c0:	4630      	mov	r0, r6
    23c2:	4798      	blx	r3
    23c4:	b178      	cbz	r0, 23e6 <__cxa_type_match+0x3e>
    23c6:	9b01      	ldr	r3, [sp, #4]
    23c8:	681b      	ldr	r3, [r3, #0]
    23ca:	9301      	str	r3, [sp, #4]
    23cc:	2702      	movs	r7, #2
    23ce:	6823      	ldr	r3, [r4, #0]
    23d0:	4631      	mov	r1, r6
    23d2:	4620      	mov	r0, r4
    23d4:	691e      	ldr	r6, [r3, #16]
    23d6:	aa01      	add	r2, sp, #4
    23d8:	2301      	movs	r3, #1
    23da:	47b0      	blx	r6
    23dc:	bb10      	cbnz	r0, 2424 <__cxa_type_match+0x7c>
    23de:	4607      	mov	r7, r0
    23e0:	4638      	mov	r0, r7
    23e2:	b003      	add	sp, #12
    23e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    23e6:	2701      	movs	r7, #1
    23e8:	e7f1      	b.n	23ce <__cxa_type_match+0x26>
    23ea:	7843      	ldrb	r3, [r0, #1]
    23ec:	2b4e      	cmp	r3, #78	; 0x4e
    23ee:	d1e2      	bne.n	23b6 <__cxa_type_match+0xe>
    23f0:	7883      	ldrb	r3, [r0, #2]
    23f2:	2b55      	cmp	r3, #85	; 0x55
    23f4:	d1df      	bne.n	23b6 <__cxa_type_match+0xe>
    23f6:	78c3      	ldrb	r3, [r0, #3]
    23f8:	2b43      	cmp	r3, #67	; 0x43
    23fa:	d1dc      	bne.n	23b6 <__cxa_type_match+0xe>
    23fc:	7903      	ldrb	r3, [r0, #4]
    23fe:	2b46      	cmp	r3, #70	; 0x46
    2400:	d01a      	beq.n	2438 <__cxa_type_match+0x90>
    2402:	7903      	ldrb	r3, [r0, #4]
    2404:	2b43      	cmp	r3, #67	; 0x43
    2406:	d1d6      	bne.n	23b6 <__cxa_type_match+0xe>
    2408:	7943      	ldrb	r3, [r0, #5]
    240a:	2b2b      	cmp	r3, #43	; 0x2b
    240c:	d1d3      	bne.n	23b6 <__cxa_type_match+0xe>
    240e:	7983      	ldrb	r3, [r0, #6]
    2410:	2b2b      	cmp	r3, #43	; 0x2b
    2412:	d1d0      	bne.n	23b6 <__cxa_type_match+0xe>
    2414:	79c3      	ldrb	r3, [r0, #7]
    2416:	2b01      	cmp	r3, #1
    2418:	d8cd      	bhi.n	23b6 <__cxa_type_match+0xe>
    241a:	d008      	beq.n	242e <__cxa_type_match+0x86>
    241c:	f850 6c20 	ldr.w	r6, [r0, #-32]
    2420:	3058      	adds	r0, #88	; 0x58
    2422:	e7ca      	b.n	23ba <__cxa_type_match+0x12>
    2424:	9b01      	ldr	r3, [sp, #4]
    2426:	602b      	str	r3, [r5, #0]
    2428:	4638      	mov	r0, r7
    242a:	b003      	add	sp, #12
    242c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    242e:	f850 0c20 	ldr.w	r0, [r0, #-32]
    2432:	f850 6c78 	ldr.w	r6, [r0, #-120]
    2436:	e7c0      	b.n	23ba <__cxa_type_match+0x12>
    2438:	7943      	ldrb	r3, [r0, #5]
    243a:	2b4f      	cmp	r3, #79	; 0x4f
    243c:	d1e1      	bne.n	2402 <__cxa_type_match+0x5a>
    243e:	7983      	ldrb	r3, [r0, #6]
    2440:	2b52      	cmp	r3, #82	; 0x52
    2442:	d1de      	bne.n	2402 <__cxa_type_match+0x5a>
    2444:	79c3      	ldrb	r3, [r0, #7]
    2446:	2b00      	cmp	r3, #0
    2448:	d1db      	bne.n	2402 <__cxa_type_match+0x5a>
    244a:	4e02      	ldr	r6, [pc, #8]	; (2454 <__cxa_type_match+0xac>)
    244c:	4618      	mov	r0, r3
    244e:	e7b4      	b.n	23ba <__cxa_type_match+0x12>
    2450:	200010d8 	.word	0x200010d8
    2454:	200010c4 	.word	0x200010c4

00002458 <__cxa_begin_cleanup>:
    2458:	b510      	push	{r4, lr}
    245a:	4604      	mov	r4, r0
    245c:	f000 f87a 	bl	2554 <__cxa_get_globals>
    2460:	4622      	mov	r2, r4
    2462:	f812 3920 	ldrb.w	r3, [r2], #-32
    2466:	2b47      	cmp	r3, #71	; 0x47
    2468:	d004      	beq.n	2474 <__cxa_begin_cleanup+0x1c>
    246a:	6883      	ldr	r3, [r0, #8]
    246c:	bb23      	cbnz	r3, 24b8 <__cxa_begin_cleanup+0x60>
    246e:	6082      	str	r2, [r0, #8]
    2470:	2001      	movs	r0, #1
    2472:	bd10      	pop	{r4, pc}
    2474:	7863      	ldrb	r3, [r4, #1]
    2476:	2b4e      	cmp	r3, #78	; 0x4e
    2478:	d1f7      	bne.n	246a <__cxa_begin_cleanup+0x12>
    247a:	78a3      	ldrb	r3, [r4, #2]
    247c:	2b55      	cmp	r3, #85	; 0x55
    247e:	d1f4      	bne.n	246a <__cxa_begin_cleanup+0x12>
    2480:	78e3      	ldrb	r3, [r4, #3]
    2482:	2b43      	cmp	r3, #67	; 0x43
    2484:	d1f1      	bne.n	246a <__cxa_begin_cleanup+0x12>
    2486:	7923      	ldrb	r3, [r4, #4]
    2488:	2b43      	cmp	r3, #67	; 0x43
    248a:	d1ee      	bne.n	246a <__cxa_begin_cleanup+0x12>
    248c:	7963      	ldrb	r3, [r4, #5]
    248e:	2b2b      	cmp	r3, #43	; 0x2b
    2490:	d1eb      	bne.n	246a <__cxa_begin_cleanup+0x12>
    2492:	79a3      	ldrb	r3, [r4, #6]
    2494:	2b2b      	cmp	r3, #43	; 0x2b
    2496:	d1e8      	bne.n	246a <__cxa_begin_cleanup+0x12>
    2498:	79e3      	ldrb	r3, [r4, #7]
    249a:	2b01      	cmp	r3, #1
    249c:	d8e5      	bhi.n	246a <__cxa_begin_cleanup+0x12>
    249e:	f854 3c04 	ldr.w	r3, [r4, #-4]
    24a2:	3301      	adds	r3, #1
    24a4:	2b01      	cmp	r3, #1
    24a6:	f844 3c04 	str.w	r3, [r4, #-4]
    24aa:	d1e1      	bne.n	2470 <__cxa_begin_cleanup+0x18>
    24ac:	6883      	ldr	r3, [r0, #8]
    24ae:	f844 3c08 	str.w	r3, [r4, #-8]
    24b2:	6082      	str	r2, [r0, #8]
    24b4:	2001      	movs	r0, #1
    24b6:	bd10      	pop	{r4, pc}
    24b8:	f000 fb6e 	bl	2b98 <std::terminate()>

000024bc <__gnu_end_cleanup>:
    24bc:	b508      	push	{r3, lr}
    24be:	f000 f849 	bl	2554 <__cxa_get_globals>
    24c2:	6883      	ldr	r3, [r0, #8]
    24c4:	b383      	cbz	r3, 2528 <__gnu_end_cleanup+0x6c>
    24c6:	f893 2020 	ldrb.w	r2, [r3, #32]
    24ca:	2a47      	cmp	r2, #71	; 0x47
    24cc:	d004      	beq.n	24d8 <__gnu_end_cleanup+0x1c>
    24ce:	2200      	movs	r2, #0
    24d0:	6082      	str	r2, [r0, #8]
    24d2:	f103 0020 	add.w	r0, r3, #32
    24d6:	bd08      	pop	{r3, pc}
    24d8:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
    24dc:	2a4e      	cmp	r2, #78	; 0x4e
    24de:	d1f6      	bne.n	24ce <__gnu_end_cleanup+0x12>
    24e0:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
    24e4:	2a55      	cmp	r2, #85	; 0x55
    24e6:	d1f2      	bne.n	24ce <__gnu_end_cleanup+0x12>
    24e8:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
    24ec:	2a43      	cmp	r2, #67	; 0x43
    24ee:	d1ee      	bne.n	24ce <__gnu_end_cleanup+0x12>
    24f0:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
    24f4:	2a43      	cmp	r2, #67	; 0x43
    24f6:	d1ea      	bne.n	24ce <__gnu_end_cleanup+0x12>
    24f8:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
    24fc:	2a2b      	cmp	r2, #43	; 0x2b
    24fe:	d1e6      	bne.n	24ce <__gnu_end_cleanup+0x12>
    2500:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
    2504:	2a2b      	cmp	r2, #43	; 0x2b
    2506:	d1e2      	bne.n	24ce <__gnu_end_cleanup+0x12>
    2508:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
    250c:	2a01      	cmp	r2, #1
    250e:	d8de      	bhi.n	24ce <__gnu_end_cleanup+0x12>
    2510:	69da      	ldr	r2, [r3, #28]
    2512:	3a01      	subs	r2, #1
    2514:	61da      	str	r2, [r3, #28]
    2516:	2a00      	cmp	r2, #0
    2518:	d1db      	bne.n	24d2 <__gnu_end_cleanup+0x16>
    251a:	6999      	ldr	r1, [r3, #24]
    251c:	6081      	str	r1, [r0, #8]
    251e:	2200      	movs	r2, #0
    2520:	619a      	str	r2, [r3, #24]
    2522:	f103 0020 	add.w	r0, r3, #32
    2526:	bd08      	pop	{r3, pc}
    2528:	f000 fb36 	bl	2b98 <std::terminate()>

0000252c <std::exception::~exception()>:
    252c:	4770      	bx	lr
    252e:	bf00      	nop

00002530 <std::bad_exception::~bad_exception()>:
    2530:	4770      	bx	lr
    2532:	bf00      	nop

00002534 <transaction clone for std::bad_exception::what() const>:
    2534:	4800      	ldr	r0, [pc, #0]	; (2538 <transaction clone for std::bad_exception::what() const+0x4>)
    2536:	4770      	bx	lr
    2538:	20001040 	.word	0x20001040

0000253c <std::bad_exception::~bad_exception()>:
    253c:	b510      	push	{r4, lr}
    253e:	2104      	movs	r1, #4
    2540:	4604      	mov	r4, r0
    2542:	f7fe f919 	bl	778 <operator delete(void*, unsigned int)>
    2546:	4620      	mov	r0, r4
    2548:	bd10      	pop	{r4, pc}
    254a:	bf00      	nop

0000254c <__cxa_get_globals_fast>:
    254c:	4800      	ldr	r0, [pc, #0]	; (2550 <__cxa_get_globals_fast+0x4>)
    254e:	4770      	bx	lr
    2550:	20003888 	.word	0x20003888

00002554 <__cxa_get_globals>:
    2554:	4800      	ldr	r0, [pc, #0]	; (2558 <__cxa_get_globals+0x4>)
    2556:	4770      	bx	lr
    2558:	20003888 	.word	0x20003888

0000255c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>:
    255c:	2850      	cmp	r0, #80	; 0x50
    255e:	b570      	push	{r4, r5, r6, lr}
    2560:	d01d      	beq.n	259e <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x42>
    2562:	4684      	mov	ip, r0
    2564:	f000 000f 	and.w	r0, r0, #15
    2568:	280c      	cmp	r0, #12
    256a:	d855      	bhi.n	2618 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xbc>
    256c:	e8df f000 	tbb	[pc, r0]
    2570:	07264407 	.word	0x07264407
    2574:	5454541e 	.word	0x5454541e
    2578:	07222a54 	.word	0x07222a54
    257c:	1e          	.byte	0x1e
    257d:	00          	.byte	0x00
    257e:	4610      	mov	r0, r2
    2580:	f850 6b04 	ldr.w	r6, [r0], #4
    2584:	b14e      	cbz	r6, 259a <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x3e>
    2586:	f00c 0470 	and.w	r4, ip, #112	; 0x70
    258a:	2c10      	cmp	r4, #16
    258c:	bf08      	it	eq
    258e:	4611      	moveq	r1, r2
    2590:	440e      	add	r6, r1
    2592:	f01c 0f80 	tst.w	ip, #128	; 0x80
    2596:	bf18      	it	ne
    2598:	6836      	ldrne	r6, [r6, #0]
    259a:	601e      	str	r6, [r3, #0]
    259c:	bd70      	pop	{r4, r5, r6, pc}
    259e:	1cd0      	adds	r0, r2, #3
    25a0:	f020 0003 	bic.w	r0, r0, #3
    25a4:	f850 6b04 	ldr.w	r6, [r0], #4
    25a8:	601e      	str	r6, [r3, #0]
    25aa:	bd70      	pop	{r4, r5, r6, pc}
    25ac:	4610      	mov	r0, r2
    25ae:	f850 6b08 	ldr.w	r6, [r0], #8
    25b2:	e7e7      	b.n	2584 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    25b4:	4610      	mov	r0, r2
    25b6:	f930 6b02 	ldrsh.w	r6, [r0], #2
    25ba:	e7e3      	b.n	2584 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    25bc:	4610      	mov	r0, r2
    25be:	f830 6b02 	ldrh.w	r6, [r0], #2
    25c2:	e7df      	b.n	2584 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    25c4:	2600      	movs	r6, #0
    25c6:	4610      	mov	r0, r2
    25c8:	4634      	mov	r4, r6
    25ca:	f810 5b01 	ldrb.w	r5, [r0], #1
    25ce:	f005 0e7f 	and.w	lr, r5, #127	; 0x7f
    25d2:	fa0e fe04 	lsl.w	lr, lr, r4
    25d6:	f015 0f80 	tst.w	r5, #128	; 0x80
    25da:	ea46 060e 	orr.w	r6, r6, lr
    25de:	f104 0407 	add.w	r4, r4, #7
    25e2:	d1f2      	bne.n	25ca <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x6e>
    25e4:	2c1f      	cmp	r4, #31
    25e6:	d8cd      	bhi.n	2584 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    25e8:	066d      	lsls	r5, r5, #25
    25ea:	d5cb      	bpl.n	2584 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    25ec:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    25f0:	fa05 f404 	lsl.w	r4, r5, r4
    25f4:	4326      	orrs	r6, r4
    25f6:	e7c6      	b.n	2586 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x2a>
    25f8:	2600      	movs	r6, #0
    25fa:	4610      	mov	r0, r2
    25fc:	4634      	mov	r4, r6
    25fe:	f810 5b01 	ldrb.w	r5, [r0], #1
    2602:	f005 0e7f 	and.w	lr, r5, #127	; 0x7f
    2606:	fa0e fe04 	lsl.w	lr, lr, r4
    260a:	062d      	lsls	r5, r5, #24
    260c:	ea46 060e 	orr.w	r6, r6, lr
    2610:	f104 0407 	add.w	r4, r4, #7
    2614:	d4f3      	bmi.n	25fe <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0xa2>
    2616:	e7b5      	b.n	2584 <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)+0x28>
    2618:	f7fe f9d4 	bl	9c4 <abort>

0000261c <base_of_encoded_value(unsigned char, _Unwind_Context*)>:
    261c:	28ff      	cmp	r0, #255	; 0xff
    261e:	b508      	push	{r3, lr}
    2620:	4603      	mov	r3, r0
    2622:	d019      	beq.n	2658 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x3c>
    2624:	f003 0270 	and.w	r2, r3, #112	; 0x70
    2628:	2a30      	cmp	r2, #48	; 0x30
    262a:	4608      	mov	r0, r1
    262c:	d016      	beq.n	265c <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x40>
    262e:	d805      	bhi.n	263c <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x20>
    2630:	2a20      	cmp	r2, #32
    2632:	d109      	bne.n	2648 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x2c>
    2634:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    2638:	f007 bea7 	b.w	a38a <_Unwind_GetTextRelBase>
    263c:	2a40      	cmp	r2, #64	; 0x40
    263e:	d109      	bne.n	2654 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x38>
    2640:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    2644:	f007 be8e 	b.w	a364 <_Unwind_GetRegionStart>
    2648:	d802      	bhi.n	2650 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x34>
    264a:	f013 0f60 	tst.w	r3, #96	; 0x60
    264e:	d003      	beq.n	2658 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x3c>
    2650:	f7fe f9b8 	bl	9c4 <abort>
    2654:	2a50      	cmp	r2, #80	; 0x50
    2656:	d1fb      	bne.n	2650 <base_of_encoded_value(unsigned char, _Unwind_Context*)+0x34>
    2658:	2000      	movs	r0, #0
    265a:	bd08      	pop	{r3, pc}
    265c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    2660:	f007 be90 	b.w	a384 <_Unwind_GetDataRelBase>

00002664 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>:
    2664:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2666:	460c      	mov	r4, r1
    2668:	4615      	mov	r5, r2
    266a:	4606      	mov	r6, r0
    266c:	b108      	cbz	r0, 2672 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0xe>
    266e:	f007 fe79 	bl	a364 <_Unwind_GetRegionStart>
    2672:	6028      	str	r0, [r5, #0]
    2674:	f814 7b01 	ldrb.w	r7, [r4], #1
    2678:	2fff      	cmp	r7, #255	; 0xff
    267a:	d128      	bne.n	26ce <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x6a>
    267c:	6068      	str	r0, [r5, #4]
    267e:	4620      	mov	r0, r4
    2680:	f810 3b01 	ldrb.w	r3, [r0], #1
    2684:	2bff      	cmp	r3, #255	; 0xff
    2686:	d032      	beq.n	26ee <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x8a>
    2688:	2310      	movs	r3, #16
    268a:	2400      	movs	r4, #0
    268c:	752b      	strb	r3, [r5, #20]
    268e:	4622      	mov	r2, r4
    2690:	f810 1b01 	ldrb.w	r1, [r0], #1
    2694:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    2698:	4093      	lsls	r3, r2
    269a:	0609      	lsls	r1, r1, #24
    269c:	ea44 0403 	orr.w	r4, r4, r3
    26a0:	f102 0207 	add.w	r2, r2, #7
    26a4:	d4f4      	bmi.n	2690 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x2c>
    26a6:	4404      	add	r4, r0
    26a8:	60ec      	str	r4, [r5, #12]
    26aa:	f810 3b01 	ldrb.w	r3, [r0], #1
    26ae:	756b      	strb	r3, [r5, #21]
    26b0:	2400      	movs	r4, #0
    26b2:	4622      	mov	r2, r4
    26b4:	f810 1b01 	ldrb.w	r1, [r0], #1
    26b8:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    26bc:	4093      	lsls	r3, r2
    26be:	431c      	orrs	r4, r3
    26c0:	060b      	lsls	r3, r1, #24
    26c2:	f102 0207 	add.w	r2, r2, #7
    26c6:	d4f5      	bmi.n	26b4 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x50>
    26c8:	4404      	add	r4, r0
    26ca:	612c      	str	r4, [r5, #16]
    26cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    26ce:	4631      	mov	r1, r6
    26d0:	4638      	mov	r0, r7
    26d2:	f7ff ffa3 	bl	261c <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    26d6:	4622      	mov	r2, r4
    26d8:	4601      	mov	r1, r0
    26da:	1d2b      	adds	r3, r5, #4
    26dc:	4638      	mov	r0, r7
    26de:	f7ff ff3d 	bl	255c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    26e2:	4604      	mov	r4, r0
    26e4:	4620      	mov	r0, r4
    26e6:	f810 3b01 	ldrb.w	r3, [r0], #1
    26ea:	2bff      	cmp	r3, #255	; 0xff
    26ec:	d1cc      	bne.n	2688 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x24>
    26ee:	752b      	strb	r3, [r5, #20]
    26f0:	2400      	movs	r4, #0
    26f2:	e7d9      	b.n	26a8 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)+0x44>

000026f4 <__gxx_personality_v0>:
    26f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    26f8:	f000 0403 	and.w	r4, r0, #3
    26fc:	b093      	sub	sp, #76	; 0x4c
    26fe:	2300      	movs	r3, #0
    2700:	2c01      	cmp	r4, #1
    2702:	9308      	str	r3, [sp, #32]
    2704:	460f      	mov	r7, r1
    2706:	4690      	mov	r8, r2
    2708:	d013      	beq.n	2732 <__gxx_personality_v0+0x3e>
    270a:	2c02      	cmp	r4, #2
    270c:	d108      	bne.n	2720 <__gxx_personality_v0+0x2c>
    270e:	4641      	mov	r1, r8
    2710:	4638      	mov	r0, r7
    2712:	f007 fe11 	bl	a338 <__gnu_unwind_frame>
    2716:	b940      	cbnz	r0, 272a <__gxx_personality_v0+0x36>
    2718:	2008      	movs	r0, #8
    271a:	b013      	add	sp, #76	; 0x4c
    271c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2720:	2c00      	cmp	r4, #0
    2722:	f000 8093 	beq.w	284c <__gxx_personality_v0+0x158>
    2726:	f7fe f94d 	bl	9c4 <abort>
    272a:	2009      	movs	r0, #9
    272c:	b013      	add	sp, #76	; 0x4c
    272e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2732:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
    2736:	f010 0408 	ands.w	r4, r0, #8
    273a:	f8cd a000 	str.w	sl, [sp]
    273e:	f000 809a 	beq.w	2876 <__gxx_personality_v0+0x182>
    2742:	f044 0202 	orr.w	r2, r4, #2
    2746:	9202      	str	r2, [sp, #8]
    2748:	910c      	str	r1, [sp, #48]	; 0x30
    274a:	220c      	movs	r2, #12
    274c:	4619      	mov	r1, r3
    274e:	4640      	mov	r0, r8
    2750:	f007 f88c 	bl	986c <_Unwind_VRS_Set>
    2754:	4640      	mov	r0, r8
    2756:	f007 fe0b 	bl	a370 <_Unwind_GetLanguageSpecificData>
    275a:	4683      	mov	fp, r0
    275c:	2800      	cmp	r0, #0
    275e:	d0d6      	beq.n	270e <__gxx_personality_v0+0x1a>
    2760:	4652      	mov	r2, sl
    2762:	4601      	mov	r1, r0
    2764:	4640      	mov	r0, r8
    2766:	f7ff ff7d 	bl	2664 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
    276a:	4641      	mov	r1, r8
    276c:	4605      	mov	r5, r0
    276e:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
    2772:	f7ff ff53 	bl	261c <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    2776:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
    277a:	2300      	movs	r3, #0
    277c:	900e      	str	r0, [sp, #56]	; 0x38
    277e:	4619      	mov	r1, r3
    2780:	f8cd 9000 	str.w	r9, [sp]
    2784:	220f      	movs	r2, #15
    2786:	4640      	mov	r0, r8
    2788:	f007 f84a 	bl	9820 <_Unwind_VRS_Get>
    278c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    278e:	f023 0301 	bic.w	r3, r3, #1
    2792:	1e5e      	subs	r6, r3, #1
    2794:	9b10      	ldr	r3, [sp, #64]	; 0x40
    2796:	429d      	cmp	r5, r3
    2798:	f080 80bd 	bcs.w	2916 <__gxx_personality_v0+0x222>
    279c:	f89d 4045 	ldrb.w	r4, [sp, #69]	; 0x45
    27a0:	2100      	movs	r1, #0
    27a2:	4620      	mov	r0, r4
    27a4:	f7ff ff3a 	bl	261c <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    27a8:	462a      	mov	r2, r5
    27aa:	4601      	mov	r1, r0
    27ac:	ab09      	add	r3, sp, #36	; 0x24
    27ae:	4620      	mov	r0, r4
    27b0:	f7ff fed4 	bl	255c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    27b4:	f89d 5045 	ldrb.w	r5, [sp, #69]	; 0x45
    27b8:	4604      	mov	r4, r0
    27ba:	2100      	movs	r1, #0
    27bc:	4628      	mov	r0, r5
    27be:	f7ff ff2d 	bl	261c <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    27c2:	4622      	mov	r2, r4
    27c4:	4601      	mov	r1, r0
    27c6:	ab0a      	add	r3, sp, #40	; 0x28
    27c8:	4628      	mov	r0, r5
    27ca:	f7ff fec7 	bl	255c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    27ce:	f89d 5045 	ldrb.w	r5, [sp, #69]	; 0x45
    27d2:	4604      	mov	r4, r0
    27d4:	2100      	movs	r1, #0
    27d6:	4628      	mov	r0, r5
    27d8:	f7ff ff20 	bl	261c <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    27dc:	4622      	mov	r2, r4
    27de:	4601      	mov	r1, r0
    27e0:	464b      	mov	r3, r9
    27e2:	4628      	mov	r0, r5
    27e4:	f7ff feba 	bl	255c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    27e8:	2400      	movs	r4, #0
    27ea:	4605      	mov	r5, r0
    27ec:	4622      	mov	r2, r4
    27ee:	f815 1b01 	ldrb.w	r1, [r5], #1
    27f2:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    27f6:	4093      	lsls	r3, r2
    27f8:	431c      	orrs	r4, r3
    27fa:	060b      	lsls	r3, r1, #24
    27fc:	f102 0207 	add.w	r2, r2, #7
    2800:	d4f5      	bmi.n	27ee <__gxx_personality_v0+0xfa>
    2802:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2804:	9a09      	ldr	r2, [sp, #36]	; 0x24
    2806:	4413      	add	r3, r2
    2808:	42b3      	cmp	r3, r6
    280a:	d917      	bls.n	283c <__gxx_personality_v0+0x148>
    280c:	9b02      	ldr	r3, [sp, #8]
    280e:	07d8      	lsls	r0, r3, #31
    2810:	d52d      	bpl.n	286e <__gxx_personality_v0+0x17a>
    2812:	2400      	movs	r4, #0
    2814:	9403      	str	r4, [sp, #12]
    2816:	2300      	movs	r3, #0
    2818:	4619      	mov	r1, r3
    281a:	f8cd 9000 	str.w	r9, [sp]
    281e:	4640      	mov	r0, r8
    2820:	220d      	movs	r2, #13
    2822:	9d08      	ldr	r5, [sp, #32]
    2824:	f006 fffc 	bl	9820 <_Unwind_VRS_Get>
    2828:	9b03      	ldr	r3, [sp, #12]
    282a:	633b      	str	r3, [r7, #48]	; 0x30
    282c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    282e:	f8c7 b02c 	str.w	fp, [r7, #44]	; 0x2c
    2832:	e9c7 5409 	strd	r5, r4, [r7, #36]	; 0x24
    2836:	2006      	movs	r0, #6
    2838:	623b      	str	r3, [r7, #32]
    283a:	e76e      	b.n	271a <__gxx_personality_v0+0x26>
    283c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    283e:	4413      	add	r3, r2
    2840:	42b3      	cmp	r3, r6
    2842:	d872      	bhi.n	292a <__gxx_personality_v0+0x236>
    2844:	9b10      	ldr	r3, [sp, #64]	; 0x40
    2846:	42ab      	cmp	r3, r5
    2848:	d8a8      	bhi.n	279c <__gxx_personality_v0+0xa8>
    284a:	e7df      	b.n	280c <__gxx_personality_v0+0x118>
    284c:	0702      	lsls	r2, r0, #28
    284e:	f53f af5e 	bmi.w	270e <__gxx_personality_v0+0x1a>
    2852:	2301      	movs	r3, #1
    2854:	9302      	str	r3, [sp, #8]
    2856:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
    285a:	2300      	movs	r3, #0
    285c:	f8cd a000 	str.w	sl, [sp]
    2860:	220c      	movs	r2, #12
    2862:	4619      	mov	r1, r3
    2864:	4640      	mov	r0, r8
    2866:	970c      	str	r7, [sp, #48]	; 0x30
    2868:	f007 f800 	bl	986c <_Unwind_VRS_Set>
    286c:	e772      	b.n	2754 <__gxx_personality_v0+0x60>
    286e:	0719      	lsls	r1, r3, #28
    2870:	d558      	bpl.n	2924 <__gxx_personality_v0+0x230>
    2872:	f000 f991 	bl	2b98 <std::terminate()>
    2876:	6a0d      	ldr	r5, [r1, #32]
    2878:	4623      	mov	r3, r4
    287a:	220d      	movs	r2, #13
    287c:	4621      	mov	r1, r4
    287e:	4640      	mov	r0, r8
    2880:	f006 ffce 	bl	9820 <_Unwind_VRS_Get>
    2884:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2886:	429d      	cmp	r5, r3
    2888:	d002      	beq.n	2890 <__gxx_personality_v0+0x19c>
    288a:	2302      	movs	r3, #2
    288c:	9302      	str	r3, [sp, #8]
    288e:	e7e4      	b.n	285a <__gxx_personality_v0+0x166>
    2890:	4623      	mov	r3, r4
    2892:	4621      	mov	r1, r4
    2894:	220c      	movs	r2, #12
    2896:	f8cd a000 	str.w	sl, [sp]
    289a:	4640      	mov	r0, r8
    289c:	970c      	str	r7, [sp, #48]	; 0x30
    289e:	f006 ffe5 	bl	986c <_Unwind_VRS_Set>
    28a2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    28a4:	9203      	str	r2, [sp, #12]
    28a6:	e9d7 430a 	ldrd	r4, r3, [r7, #40]	; 0x28
    28aa:	2a00      	cmp	r2, #0
    28ac:	d03a      	beq.n	2924 <__gxx_personality_v0+0x230>
    28ae:	469b      	mov	fp, r3
    28b0:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
    28b4:	2c00      	cmp	r4, #0
    28b6:	db54      	blt.n	2962 <__gxx_personality_v0+0x26e>
    28b8:	2503      	movs	r5, #3
    28ba:	2300      	movs	r3, #0
    28bc:	461a      	mov	r2, r3
    28be:	4619      	mov	r1, r3
    28c0:	f8cd 9000 	str.w	r9, [sp]
    28c4:	4640      	mov	r0, r8
    28c6:	970b      	str	r7, [sp, #44]	; 0x2c
    28c8:	f006 ffd0 	bl	986c <_Unwind_VRS_Set>
    28cc:	2300      	movs	r3, #0
    28ce:	4619      	mov	r1, r3
    28d0:	2201      	movs	r2, #1
    28d2:	f8cd 9000 	str.w	r9, [sp]
    28d6:	4640      	mov	r0, r8
    28d8:	940b      	str	r4, [sp, #44]	; 0x2c
    28da:	f006 ffc7 	bl	986c <_Unwind_VRS_Set>
    28de:	2300      	movs	r3, #0
    28e0:	4619      	mov	r1, r3
    28e2:	220f      	movs	r2, #15
    28e4:	f8cd 9000 	str.w	r9, [sp]
    28e8:	4640      	mov	r0, r8
    28ea:	f006 ff99 	bl	9820 <_Unwind_VRS_Get>
    28ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    28f0:	9903      	ldr	r1, [sp, #12]
    28f2:	f8cd 9000 	str.w	r9, [sp]
    28f6:	f002 0201 	and.w	r2, r2, #1
    28fa:	430a      	orrs	r2, r1
    28fc:	2300      	movs	r3, #0
    28fe:	920b      	str	r2, [sp, #44]	; 0x2c
    2900:	4640      	mov	r0, r8
    2902:	220f      	movs	r2, #15
    2904:	4619      	mov	r1, r3
    2906:	f006 ffb1 	bl	986c <_Unwind_VRS_Set>
    290a:	2d02      	cmp	r5, #2
    290c:	d024      	beq.n	2958 <__gxx_personality_v0+0x264>
    290e:	2007      	movs	r0, #7
    2910:	b013      	add	sp, #76	; 0x4c
    2912:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2916:	9b02      	ldr	r3, [sp, #8]
    2918:	07de      	lsls	r6, r3, #31
    291a:	f53f af7a 	bmi.w	2812 <__gxx_personality_v0+0x11e>
    291e:	9b02      	ldr	r3, [sp, #8]
    2920:	071b      	lsls	r3, r3, #28
    2922:	d4a6      	bmi.n	2872 <__gxx_personality_v0+0x17e>
    2924:	4638      	mov	r0, r7
    2926:	f006 fca7 	bl	9278 <__cxa_call_terminate>
    292a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    292c:	2b00      	cmp	r3, #0
    292e:	f43f aeee 	beq.w	270e <__gxx_personality_v0+0x1a>
    2932:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    2934:	4413      	add	r3, r2
    2936:	9303      	str	r3, [sp, #12]
    2938:	2c00      	cmp	r4, #0
    293a:	d136      	bne.n	29aa <__gxx_personality_v0+0x2b6>
    293c:	2b00      	cmp	r3, #0
    293e:	f43f aee6 	beq.w	270e <__gxx_personality_v0+0x1a>
    2942:	9b02      	ldr	r3, [sp, #8]
    2944:	07dd      	lsls	r5, r3, #31
    2946:	f53f aee2 	bmi.w	270e <__gxx_personality_v0+0x1a>
    294a:	9b02      	ldr	r3, [sp, #8]
    294c:	071a      	lsls	r2, r3, #28
    294e:	f140 8116 	bpl.w	2b7e <__gxx_personality_v0+0x48a>
    2952:	2400      	movs	r4, #0
    2954:	2502      	movs	r5, #2
    2956:	e7b0      	b.n	28ba <__gxx_personality_v0+0x1c6>
    2958:	4638      	mov	r0, r7
    295a:	f7ff fd7d 	bl	2458 <__cxa_begin_cleanup>
    295e:	2007      	movs	r0, #7
    2960:	e6db      	b.n	271a <__gxx_personality_v0+0x26>
    2962:	f06f 4340 	mvn.w	r3, #3221225472	; 0xc0000000
    2966:	1b1b      	subs	r3, r3, r4
    2968:	461e      	mov	r6, r3
    296a:	4652      	mov	r2, sl
    296c:	4659      	mov	r1, fp
    296e:	4640      	mov	r0, r8
    2970:	f7ff fe78 	bl	2664 <parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)>
    2974:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
    2978:	4641      	mov	r1, r8
    297a:	f7ff fe4f 	bl	261c <base_of_encoded_value(unsigned char, _Unwind_Context*)>
    297e:	900e      	str	r0, [sp, #56]	; 0x38
    2980:	4605      	mov	r5, r0
    2982:	980f      	ldr	r0, [sp, #60]	; 0x3c
    2984:	f850 3026 	ldr.w	r3, [r0, r6, lsl #2]
    2988:	eb00 0086 	add.w	r0, r0, r6, lsl #2
    298c:	b133      	cbz	r3, 299c <__gxx_personality_v0+0x2a8>
    298e:	4602      	mov	r2, r0
    2990:	2300      	movs	r3, #0
    2992:	f852 1f04 	ldr.w	r1, [r2, #4]!
    2996:	3301      	adds	r3, #1
    2998:	2900      	cmp	r1, #0
    299a:	d1fa      	bne.n	2992 <__gxx_personality_v0+0x29e>
    299c:	e9c7 350a 	strd	r3, r5, [r7, #40]	; 0x28
    29a0:	2304      	movs	r3, #4
    29a2:	6378      	str	r0, [r7, #52]	; 0x34
    29a4:	633b      	str	r3, [r7, #48]	; 0x30
    29a6:	2503      	movs	r5, #3
    29a8:	e787      	b.n	28ba <__gxx_personality_v0+0x1c6>
    29aa:	9e10      	ldr	r6, [sp, #64]	; 0x40
    29ac:	9b03      	ldr	r3, [sp, #12]
    29ae:	3c01      	subs	r4, #1
    29b0:	4426      	add	r6, r4
    29b2:	2b00      	cmp	r3, #0
    29b4:	f43f aeab 	beq.w	270e <__gxx_personality_v0+0x1a>
    29b8:	9b02      	ldr	r3, [sp, #8]
    29ba:	2e00      	cmp	r6, #0
    29bc:	f000 80d7 	beq.w	2b6e <__gxx_personality_v0+0x47a>
    29c0:	f013 0308 	ands.w	r3, r3, #8
    29c4:	9304      	str	r3, [sp, #16]
    29c6:	f000 80c9 	beq.w	2b5c <__gxx_personality_v0+0x468>
    29ca:	2347      	movs	r3, #71	; 0x47
    29cc:	703b      	strb	r3, [r7, #0]
    29ce:	234e      	movs	r3, #78	; 0x4e
    29d0:	707b      	strb	r3, [r7, #1]
    29d2:	2355      	movs	r3, #85	; 0x55
    29d4:	70bb      	strb	r3, [r7, #2]
    29d6:	2343      	movs	r3, #67	; 0x43
    29d8:	70fb      	strb	r3, [r7, #3]
    29da:	2346      	movs	r3, #70	; 0x46
    29dc:	713b      	strb	r3, [r7, #4]
    29de:	234f      	movs	r3, #79	; 0x4f
    29e0:	717b      	strb	r3, [r7, #5]
    29e2:	2352      	movs	r3, #82	; 0x52
    29e4:	71bb      	strb	r3, [r7, #6]
    29e6:	2300      	movs	r3, #0
    29e8:	71fb      	strb	r3, [r7, #7]
    29ea:	2300      	movs	r3, #0
    29ec:	f8cd b018 	str.w	fp, [sp, #24]
    29f0:	f8cd 8014 	str.w	r8, [sp, #20]
    29f4:	469b      	mov	fp, r3
    29f6:	f8cd a01c 	str.w	sl, [sp, #28]
    29fa:	2400      	movs	r4, #0
    29fc:	4622      	mov	r2, r4
    29fe:	f816 1b01 	ldrb.w	r1, [r6], #1
    2a02:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    2a06:	4093      	lsls	r3, r2
    2a08:	0608      	lsls	r0, r1, #24
    2a0a:	ea44 0403 	orr.w	r4, r4, r3
    2a0e:	f102 0207 	add.w	r2, r2, #7
    2a12:	d4f4      	bmi.n	29fe <__gxx_personality_v0+0x30a>
    2a14:	2a1f      	cmp	r2, #31
    2a16:	d805      	bhi.n	2a24 <__gxx_personality_v0+0x330>
    2a18:	0649      	lsls	r1, r1, #25
    2a1a:	d503      	bpl.n	2a24 <__gxx_personality_v0+0x330>
    2a1c:	2301      	movs	r3, #1
    2a1e:	4093      	lsls	r3, r2
    2a20:	425b      	negs	r3, r3
    2a22:	431c      	orrs	r4, r3
    2a24:	2500      	movs	r5, #0
    2a26:	4630      	mov	r0, r6
    2a28:	462a      	mov	r2, r5
    2a2a:	f810 1b01 	ldrb.w	r1, [r0], #1
    2a2e:	f001 037f 	and.w	r3, r1, #127	; 0x7f
    2a32:	4093      	lsls	r3, r2
    2a34:	431d      	orrs	r5, r3
    2a36:	060b      	lsls	r3, r1, #24
    2a38:	f102 0207 	add.w	r2, r2, #7
    2a3c:	d4f5      	bmi.n	2a2a <__gxx_personality_v0+0x336>
    2a3e:	2a1f      	cmp	r2, #31
    2a40:	d805      	bhi.n	2a4e <__gxx_personality_v0+0x35a>
    2a42:	064b      	lsls	r3, r1, #25
    2a44:	d503      	bpl.n	2a4e <__gxx_personality_v0+0x35a>
    2a46:	2301      	movs	r3, #1
    2a48:	4093      	lsls	r3, r2
    2a4a:	425b      	negs	r3, r3
    2a4c:	431d      	orrs	r5, r3
    2a4e:	2c00      	cmp	r4, #0
    2a50:	d034      	beq.n	2abc <__gxx_personality_v0+0x3c8>
    2a52:	dc36      	bgt.n	2ac2 <__gxx_personality_v0+0x3ce>
    2a54:	b117      	cbz	r7, 2a5c <__gxx_personality_v0+0x368>
    2a56:	9b04      	ldr	r3, [sp, #16]
    2a58:	2b00      	cmp	r3, #0
    2a5a:	d04f      	beq.n	2afc <__gxx_personality_v0+0x408>
    2a5c:	f06f 4a40 	mvn.w	sl, #3221225472	; 0xc0000000
    2a60:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    2a62:	ebaa 0a04 	sub.w	sl, sl, r4
    2a66:	f853 302a 	ldr.w	r3, [r3, sl, lsl #2]
    2a6a:	b1b3      	cbz	r3, 2a9a <__gxx_personality_v0+0x3a6>
    2a6c:	2d00      	cmp	r5, #0
    2a6e:	d06a      	beq.n	2b46 <__gxx_personality_v0+0x452>
    2a70:	442e      	add	r6, r5
    2a72:	e7c2      	b.n	29fa <__gxx_personality_v0+0x306>
    2a74:	00a3      	lsls	r3, r4, #2
    2a76:	425b      	negs	r3, r3
    2a78:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    2a7a:	990e      	ldr	r1, [sp, #56]	; 0x38
    2a7c:	441a      	add	r2, r3
    2a7e:	464b      	mov	r3, r9
    2a80:	f7ff fd6c 	bl	255c <read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)>
    2a84:	990b      	ldr	r1, [sp, #44]	; 0x2c
    2a86:	b141      	cbz	r1, 2a9a <__gxx_personality_v0+0x3a6>
    2a88:	2f00      	cmp	r7, #0
    2a8a:	d0ef      	beq.n	2a6c <__gxx_personality_v0+0x378>
    2a8c:	ab08      	add	r3, sp, #32
    2a8e:	2200      	movs	r2, #0
    2a90:	4638      	mov	r0, r7
    2a92:	f7ff fc89 	bl	23a8 <__cxa_type_match>
    2a96:	2800      	cmp	r0, #0
    2a98:	d0e8      	beq.n	2a6c <__gxx_personality_v0+0x378>
    2a9a:	9b02      	ldr	r3, [sp, #8]
    2a9c:	f8dd a01c 	ldr.w	sl, [sp, #28]
    2aa0:	07db      	lsls	r3, r3, #31
    2aa2:	e9dd 8b05 	ldrd	r8, fp, [sp, #20]
    2aa6:	f53f aeb6 	bmi.w	2816 <__gxx_personality_v0+0x122>
    2aaa:	9b04      	ldr	r3, [sp, #16]
    2aac:	2b00      	cmp	r3, #0
    2aae:	f43f af01 	beq.w	28b4 <__gxx_personality_v0+0x1c0>
    2ab2:	2c00      	cmp	r4, #0
    2ab4:	f6bf af00 	bge.w	28b8 <__gxx_personality_v0+0x1c4>
    2ab8:	f000 f87c 	bl	2bb4 <std::unexpected()>
    2abc:	f04f 0b01 	mov.w	fp, #1
    2ac0:	e7d4      	b.n	2a6c <__gxx_personality_v0+0x378>
    2ac2:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
    2ac6:	28ff      	cmp	r0, #255	; 0xff
    2ac8:	d031      	beq.n	2b2e <__gxx_personality_v0+0x43a>
    2aca:	f000 0307 	and.w	r3, r0, #7
    2ace:	2b04      	cmp	r3, #4
    2ad0:	f63f ae29 	bhi.w	2726 <__gxx_personality_v0+0x32>
    2ad4:	a201      	add	r2, pc, #4	; (adr r2, 2adc <__gxx_personality_v0+0x3e8>)
    2ad6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    2ada:	bf00      	nop
    2adc:	00002a75 	.word	0x00002a75
    2ae0:	00002727 	.word	0x00002727
    2ae4:	00002af7 	.word	0x00002af7
    2ae8:	00002a75 	.word	0x00002a75
    2aec:	00002af1 	.word	0x00002af1
    2af0:	00e3      	lsls	r3, r4, #3
    2af2:	425b      	negs	r3, r3
    2af4:	e7c0      	b.n	2a78 <__gxx_personality_v0+0x384>
    2af6:	0063      	lsls	r3, r4, #1
    2af8:	425b      	negs	r3, r3
    2afa:	e7bd      	b.n	2a78 <__gxx_personality_v0+0x384>
    2afc:	f06f 4a40 	mvn.w	sl, #3221225472	; 0xc0000000
    2b00:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    2b02:	9a08      	ldr	r2, [sp, #32]
    2b04:	920b      	str	r2, [sp, #44]	; 0x2c
    2b06:	ebaa 0a04 	sub.w	sl, sl, r4
    2b0a:	eb03 088a 	add.w	r8, r3, sl, lsl #2
    2b0e:	f853 102a 	ldr.w	r1, [r3, sl, lsl #2]
    2b12:	b919      	cbnz	r1, 2b1c <__gxx_personality_v0+0x428>
    2b14:	e00d      	b.n	2b32 <__gxx_personality_v0+0x43e>
    2b16:	f858 1f04 	ldr.w	r1, [r8, #4]!
    2b1a:	b151      	cbz	r1, 2b32 <__gxx_personality_v0+0x43e>
    2b1c:	4441      	add	r1, r8
    2b1e:	464b      	mov	r3, r9
    2b20:	2200      	movs	r2, #0
    2b22:	4638      	mov	r0, r7
    2b24:	f7ff fc40 	bl	23a8 <__cxa_type_match>
    2b28:	2800      	cmp	r0, #0
    2b2a:	d0f4      	beq.n	2b16 <__gxx_personality_v0+0x422>
    2b2c:	e79e      	b.n	2a6c <__gxx_personality_v0+0x378>
    2b2e:	2300      	movs	r3, #0
    2b30:	e7a2      	b.n	2a78 <__gxx_personality_v0+0x384>
    2b32:	9b02      	ldr	r3, [sp, #8]
    2b34:	07d8      	lsls	r0, r3, #31
    2b36:	4656      	mov	r6, sl
    2b38:	e9dd 8b05 	ldrd	r8, fp, [sp, #20]
    2b3c:	f8dd a01c 	ldr.w	sl, [sp, #28]
    2b40:	f53f ae69 	bmi.w	2816 <__gxx_personality_v0+0x122>
    2b44:	e711      	b.n	296a <__gxx_personality_v0+0x276>
    2b46:	465b      	mov	r3, fp
    2b48:	f8dd 8014 	ldr.w	r8, [sp, #20]
    2b4c:	2b00      	cmp	r3, #0
    2b4e:	f43f adde 	beq.w	270e <__gxx_personality_v0+0x1a>
    2b52:	9b02      	ldr	r3, [sp, #8]
    2b54:	07d9      	lsls	r1, r3, #31
    2b56:	f53f adda 	bmi.w	270e <__gxx_personality_v0+0x1a>
    2b5a:	e6fa      	b.n	2952 <__gxx_personality_v0+0x25e>
    2b5c:	79fb      	ldrb	r3, [r7, #7]
    2b5e:	2b01      	cmp	r3, #1
    2b60:	bf0c      	ite	eq
    2b62:	f857 3c20 	ldreq.w	r3, [r7, #-32]
    2b66:	f107 0358 	addne.w	r3, r7, #88	; 0x58
    2b6a:	9308      	str	r3, [sp, #32]
    2b6c:	e73d      	b.n	29ea <__gxx_personality_v0+0x2f6>
    2b6e:	07da      	lsls	r2, r3, #31
    2b70:	f53f adcd 	bmi.w	270e <__gxx_personality_v0+0x1a>
    2b74:	9b02      	ldr	r3, [sp, #8]
    2b76:	f013 0408 	ands.w	r4, r3, #8
    2b7a:	f47f aeea 	bne.w	2952 <__gxx_personality_v0+0x25e>
    2b7e:	2502      	movs	r5, #2
    2b80:	e69b      	b.n	28ba <__gxx_personality_v0+0x1c6>
    2b82:	f006 fbfb 	bl	937c <__cxa_begin_catch>
    2b86:	e674      	b.n	2872 <__gxx_personality_v0+0x17e>

00002b88 <__cxxabiv1::__terminate(void (*)())>:
    2b88:	b508      	push	{r3, lr}
    2b8a:	4780      	blx	r0
    2b8c:	f7fd ff1a 	bl	9c4 <abort>
    2b90:	f006 fbf4 	bl	937c <__cxa_begin_catch>
    2b94:	f7fd ff16 	bl	9c4 <abort>

00002b98 <std::terminate()>:
    2b98:	b508      	push	{r3, lr}
    2b9a:	4b03      	ldr	r3, [pc, #12]	; (2ba8 <std::terminate()+0x10>)
    2b9c:	6818      	ldr	r0, [r3, #0]
    2b9e:	f3bf 8f5b 	dmb	ish
    2ba2:	f7ff fff1 	bl	2b88 <__cxxabiv1::__terminate(void (*)())>
    2ba6:	bf00      	nop
    2ba8:	20002c18 	.word	0x20002c18

00002bac <__cxxabiv1::__unexpected(void (*)())>:
    2bac:	b508      	push	{r3, lr}
    2bae:	4780      	blx	r0
    2bb0:	f7ff fff2 	bl	2b98 <std::terminate()>

00002bb4 <std::unexpected()>:
    2bb4:	b508      	push	{r3, lr}
    2bb6:	4b03      	ldr	r3, [pc, #12]	; (2bc4 <std::unexpected()+0x10>)
    2bb8:	6818      	ldr	r0, [r3, #0]
    2bba:	f3bf 8f5b 	dmb	ish
    2bbe:	f7ff fff5 	bl	2bac <__cxxabiv1::__unexpected(void (*)())>
    2bc2:	bf00      	nop
    2bc4:	20002c1c 	.word	0x20002c1c

00002bc8 <std::get_terminate()>:
    2bc8:	4b02      	ldr	r3, [pc, #8]	; (2bd4 <std::get_terminate()+0xc>)
    2bca:	6818      	ldr	r0, [r3, #0]
    2bcc:	f3bf 8f5b 	dmb	ish
    2bd0:	4770      	bx	lr
    2bd2:	bf00      	nop
    2bd4:	20002c18 	.word	0x20002c18

00002bd8 <std::get_unexpected()>:
    2bd8:	4b02      	ldr	r3, [pc, #8]	; (2be4 <std::get_unexpected()+0xc>)
    2bda:	6818      	ldr	r0, [r3, #0]
    2bdc:	f3bf 8f5b 	dmb	ish
    2be0:	4770      	bx	lr
    2be2:	bf00      	nop
    2be4:	20002c1c 	.word	0x20002c1c

00002be8 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)>:
    2be8:	b500      	push	{lr}
    2bea:	2801      	cmp	r0, #1
    2bec:	b083      	sub	sp, #12
    2bee:	d81d      	bhi.n	2c2c <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0x44>
    2bf0:	f3bf 8f5b 	dmb	ish
    2bf4:	f1a1 0328 	sub.w	r3, r1, #40	; 0x28
    2bf8:	e853 2f00 	ldrex	r2, [r3]
    2bfc:	3a01      	subs	r2, #1
    2bfe:	e843 2000 	strex	r0, r2, [r3]
    2c02:	2800      	cmp	r0, #0
    2c04:	d1f8      	bne.n	2bf8 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0x10>
    2c06:	f3bf 8f5b 	dmb	ish
    2c0a:	b962      	cbnz	r2, 2c26 <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0x3e>
    2c0c:	f851 3c1c 	ldr.w	r3, [r1, #-28]
    2c10:	f101 0058 	add.w	r0, r1, #88	; 0x58
    2c14:	b113      	cbz	r3, 2c1c <__gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)+0x34>
    2c16:	9001      	str	r0, [sp, #4]
    2c18:	4798      	blx	r3
    2c1a:	9801      	ldr	r0, [sp, #4]
    2c1c:	b003      	add	sp, #12
    2c1e:	f85d eb04 	ldr.w	lr, [sp], #4
    2c22:	f7ff bb97 	b.w	2354 <__cxa_free_exception>
    2c26:	b003      	add	sp, #12
    2c28:	f85d fb04 	ldr.w	pc, [sp], #4
    2c2c:	f851 0c14 	ldr.w	r0, [r1, #-20]
    2c30:	f7ff ffaa 	bl	2b88 <__cxxabiv1::__terminate(void (*)())>

00002c34 <__cxa_init_primary_exception>:
    2c34:	b538      	push	{r3, r4, r5, lr}
    2c36:	2500      	movs	r5, #0
    2c38:	e940 121e 	strd	r1, r2, [r0, #-120]	; 0x78
    2c3c:	f840 5c80 	str.w	r5, [r0, #-128]
    2c40:	4604      	mov	r4, r0
    2c42:	f7ff ffc9 	bl	2bd8 <std::get_unexpected()>
    2c46:	f844 0c70 	str.w	r0, [r4, #-112]
    2c4a:	f7ff ffbd 	bl	2bc8 <std::get_terminate()>
    2c4e:	2243      	movs	r2, #67	; 0x43
    2c50:	232b      	movs	r3, #43	; 0x2b
    2c52:	2147      	movs	r1, #71	; 0x47
    2c54:	f804 2c55 	strb.w	r2, [r4, #-85]
    2c58:	f804 2c54 	strb.w	r2, [r4, #-84]
    2c5c:	f804 3c53 	strb.w	r3, [r4, #-83]
    2c60:	f804 3c52 	strb.w	r3, [r4, #-82]
    2c64:	224e      	movs	r2, #78	; 0x4e
    2c66:	2355      	movs	r3, #85	; 0x55
    2c68:	f804 1c58 	strb.w	r1, [r4, #-88]
    2c6c:	f804 5c51 	strb.w	r5, [r4, #-81]
    2c70:	4905      	ldr	r1, [pc, #20]	; (2c88 <__cxa_init_primary_exception+0x54>)
    2c72:	f804 2c57 	strb.w	r2, [r4, #-87]
    2c76:	f804 3c56 	strb.w	r3, [r4, #-86]
    2c7a:	f844 0c6c 	str.w	r0, [r4, #-108]
    2c7e:	f844 1c50 	str.w	r1, [r4, #-80]
    2c82:	f1a4 0080 	sub.w	r0, r4, #128	; 0x80
    2c86:	bd38      	pop	{r3, r4, r5, pc}
    2c88:	00002be9 	.word	0x00002be9

00002c8c <__cxa_throw>:
    2c8c:	b510      	push	{r4, lr}
    2c8e:	b082      	sub	sp, #8
    2c90:	e9cd 2100 	strd	r2, r1, [sp]
    2c94:	4604      	mov	r4, r0
    2c96:	f7ff fc5d 	bl	2554 <__cxa_get_globals>
    2c9a:	4603      	mov	r3, r0
    2c9c:	6840      	ldr	r0, [r0, #4]
    2c9e:	9a00      	ldr	r2, [sp, #0]
    2ca0:	9901      	ldr	r1, [sp, #4]
    2ca2:	3001      	adds	r0, #1
    2ca4:	6058      	str	r0, [r3, #4]
    2ca6:	4620      	mov	r0, r4
    2ca8:	f7ff ffc4 	bl	2c34 <__cxa_init_primary_exception>
    2cac:	4604      	mov	r4, r0
    2cae:	2301      	movs	r3, #1
    2cb0:	f844 3b28 	str.w	r3, [r4], #40
    2cb4:	4620      	mov	r0, r4
    2cb6:	f007 f973 	bl	9fa0 <_Unwind_RaiseException>
    2cba:	4620      	mov	r0, r4
    2cbc:	f006 fb5e 	bl	937c <__cxa_begin_catch>
    2cc0:	f7ff ff6a 	bl	2b98 <std::terminate()>

00002cc4 <__cxa_rethrow>:
    2cc4:	b510      	push	{r4, lr}
    2cc6:	f7ff fc45 	bl	2554 <__cxa_get_globals>
    2cca:	e9d0 4200 	ldrd	r4, r2, [r0]
    2cce:	3201      	adds	r2, #1
    2cd0:	6042      	str	r2, [r0, #4]
    2cd2:	b164      	cbz	r4, 2cee <__cxa_rethrow+0x2a>
    2cd4:	f894 2020 	ldrb.w	r2, [r4, #32]
    2cd8:	2a47      	cmp	r2, #71	; 0x47
    2cda:	d00a      	beq.n	2cf2 <__cxa_rethrow+0x2e>
    2cdc:	2200      	movs	r2, #0
    2cde:	6002      	str	r2, [r0, #0]
    2ce0:	3420      	adds	r4, #32
    2ce2:	4620      	mov	r0, r4
    2ce4:	f007 f980 	bl	9fe8 <_Unwind_Resume_or_Rethrow>
    2ce8:	4620      	mov	r0, r4
    2cea:	f006 fb47 	bl	937c <__cxa_begin_catch>
    2cee:	f7ff ff53 	bl	2b98 <std::terminate()>
    2cf2:	f894 2021 	ldrb.w	r2, [r4, #33]	; 0x21
    2cf6:	2a4e      	cmp	r2, #78	; 0x4e
    2cf8:	d1f0      	bne.n	2cdc <__cxa_rethrow+0x18>
    2cfa:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
    2cfe:	2a55      	cmp	r2, #85	; 0x55
    2d00:	d1ec      	bne.n	2cdc <__cxa_rethrow+0x18>
    2d02:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
    2d06:	2a43      	cmp	r2, #67	; 0x43
    2d08:	d1e8      	bne.n	2cdc <__cxa_rethrow+0x18>
    2d0a:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
    2d0e:	2a43      	cmp	r2, #67	; 0x43
    2d10:	d1e4      	bne.n	2cdc <__cxa_rethrow+0x18>
    2d12:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
    2d16:	2a2b      	cmp	r2, #43	; 0x2b
    2d18:	d1e0      	bne.n	2cdc <__cxa_rethrow+0x18>
    2d1a:	f894 2026 	ldrb.w	r2, [r4, #38]	; 0x26
    2d1e:	2a2b      	cmp	r2, #43	; 0x2b
    2d20:	d1dc      	bne.n	2cdc <__cxa_rethrow+0x18>
    2d22:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
    2d26:	2a01      	cmp	r2, #1
    2d28:	d8d8      	bhi.n	2cdc <__cxa_rethrow+0x18>
    2d2a:	6962      	ldr	r2, [r4, #20]
    2d2c:	4252      	negs	r2, r2
    2d2e:	6162      	str	r2, [r4, #20]
    2d30:	e7d6      	b.n	2ce0 <__cxa_rethrow+0x1c>
    2d32:	bf00      	nop

00002d34 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
    2d34:	b510      	push	{r4, lr}
    2d36:	4b03      	ldr	r3, [pc, #12]	; (2d44 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x10>)
    2d38:	6003      	str	r3, [r0, #0]
    2d3a:	4604      	mov	r4, r0
    2d3c:	f000 fa56 	bl	31ec <__cxxabiv1::__class_type_info::~__class_type_info()>
    2d40:	4620      	mov	r0, r4
    2d42:	bd10      	pop	{r4, pc}
    2d44:	20001280 	.word	0x20001280

00002d48 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()>:
    2d48:	b510      	push	{r4, lr}
    2d4a:	4b05      	ldr	r3, [pc, #20]	; (2d60 <__cxxabiv1::__si_class_type_info::~__si_class_type_info()+0x18>)
    2d4c:	6003      	str	r3, [r0, #0]
    2d4e:	4604      	mov	r4, r0
    2d50:	f000 fa4c 	bl	31ec <__cxxabiv1::__class_type_info::~__class_type_info()>
    2d54:	4620      	mov	r0, r4
    2d56:	210c      	movs	r1, #12
    2d58:	f7fd fd0e 	bl	778 <operator delete(void*, unsigned int)>
    2d5c:	4620      	mov	r0, r4
    2d5e:	bd10      	pop	{r4, pc}
    2d60:	20001280 	.word	0x20001280

00002d64 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
    2d64:	b570      	push	{r4, r5, r6, lr}
    2d66:	b082      	sub	sp, #8
    2d68:	4604      	mov	r4, r0
    2d6a:	9e06      	ldr	r6, [sp, #24]
    2d6c:	4296      	cmp	r6, r2
    2d6e:	460d      	mov	r5, r1
    2d70:	d009      	beq.n	2d86 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0x22>
    2d72:	68a0      	ldr	r0, [r4, #8]
    2d74:	6804      	ldr	r4, [r0, #0]
    2d76:	9606      	str	r6, [sp, #24]
    2d78:	6a24      	ldr	r4, [r4, #32]
    2d7a:	4629      	mov	r1, r5
    2d7c:	46a4      	mov	ip, r4
    2d7e:	b002      	add	sp, #8
    2d80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    2d84:	4760      	bx	ip
    2d86:	4619      	mov	r1, r3
    2d88:	9201      	str	r2, [sp, #4]
    2d8a:	9300      	str	r3, [sp, #0]
    2d8c:	f000 f860 	bl	2e50 <std::type_info::operator==(std::type_info const&) const>
    2d90:	e9dd 3200 	ldrd	r3, r2, [sp]
    2d94:	2800      	cmp	r0, #0
    2d96:	d0ec      	beq.n	2d72 <__cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const+0xe>
    2d98:	2006      	movs	r0, #6
    2d9a:	b002      	add	sp, #8
    2d9c:	bd70      	pop	{r4, r5, r6, pc}
    2d9e:	bf00      	nop

00002da0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
    2da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2da4:	460c      	mov	r4, r1
    2da6:	b081      	sub	sp, #4
    2da8:	4619      	mov	r1, r3
    2daa:	e9dd 690a 	ldrd	r6, r9, [sp, #40]	; 0x28
    2dae:	e9dd 870c 	ldrd	r8, r7, [sp, #48]	; 0x30
    2db2:	469b      	mov	fp, r3
    2db4:	4605      	mov	r5, r0
    2db6:	4692      	mov	sl, r2
    2db8:	f000 f84a 	bl	2e50 <std::type_info::operator==(std::type_info const&) const>
    2dbc:	b980      	cbnz	r0, 2de0 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x40>
    2dbe:	4546      	cmp	r6, r8
    2dc0:	d022      	beq.n	2e08 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x68>
    2dc2:	68a8      	ldr	r0, [r5, #8]
    2dc4:	4621      	mov	r1, r4
    2dc6:	6804      	ldr	r4, [r0, #0]
    2dc8:	e9cd 870c 	strd	r8, r7, [sp, #48]	; 0x30
    2dcc:	e9cd 690a 	strd	r6, r9, [sp, #40]	; 0x28
    2dd0:	69e4      	ldr	r4, [r4, #28]
    2dd2:	465b      	mov	r3, fp
    2dd4:	4652      	mov	r2, sl
    2dd6:	46a4      	mov	ip, r4
    2dd8:	b001      	add	sp, #4
    2dda:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2dde:	4760      	bx	ip
    2de0:	2c00      	cmp	r4, #0
    2de2:	603e      	str	r6, [r7, #0]
    2de4:	f887 a004 	strb.w	sl, [r7, #4]
    2de8:	db09      	blt.n	2dfe <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x5e>
    2dea:	4426      	add	r6, r4
    2dec:	45b0      	cmp	r8, r6
    2dee:	bf0c      	ite	eq
    2df0:	2606      	moveq	r6, #6
    2df2:	2601      	movne	r6, #1
    2df4:	71be      	strb	r6, [r7, #6]
    2df6:	2000      	movs	r0, #0
    2df8:	b001      	add	sp, #4
    2dfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2dfe:	3402      	adds	r4, #2
    2e00:	d1f9      	bne.n	2df6 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x56>
    2e02:	2301      	movs	r3, #1
    2e04:	71bb      	strb	r3, [r7, #6]
    2e06:	e7f6      	b.n	2df6 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x56>
    2e08:	4649      	mov	r1, r9
    2e0a:	4628      	mov	r0, r5
    2e0c:	f000 f820 	bl	2e50 <std::type_info::operator==(std::type_info const&) const>
    2e10:	2800      	cmp	r0, #0
    2e12:	d0d6      	beq.n	2dc2 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x22>
    2e14:	f887 a005 	strb.w	sl, [r7, #5]
    2e18:	e7ed      	b.n	2df6 <__cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x56>
    2e1a:	bf00      	nop

00002e1c <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
    2e1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    2e20:	4606      	mov	r6, r0
    2e22:	460f      	mov	r7, r1
    2e24:	4614      	mov	r4, r2
    2e26:	461d      	mov	r5, r3
    2e28:	f000 fa1a 	bl	3260 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>
    2e2c:	b948      	cbnz	r0, 2e42 <__cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0x26>
    2e2e:	68b0      	ldr	r0, [r6, #8]
    2e30:	6801      	ldr	r1, [r0, #0]
    2e32:	4622      	mov	r2, r4
    2e34:	698c      	ldr	r4, [r1, #24]
    2e36:	462b      	mov	r3, r5
    2e38:	4639      	mov	r1, r7
    2e3a:	46a4      	mov	ip, r4
    2e3c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    2e40:	4760      	bx	ip
    2e42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2e46:	bf00      	nop

00002e48 <std::type_info::~type_info()>:
    2e48:	4770      	bx	lr
    2e4a:	bf00      	nop

00002e4c <std::type_info::__is_pointer_p() const>:
    2e4c:	2000      	movs	r0, #0
    2e4e:	4770      	bx	lr

00002e50 <std::type_info::operator==(std::type_info const&) const>:
    2e50:	4281      	cmp	r1, r0
    2e52:	d011      	beq.n	2e78 <std::type_info::operator==(std::type_info const&) const+0x28>
    2e54:	b508      	push	{r3, lr}
    2e56:	6840      	ldr	r0, [r0, #4]
    2e58:	7803      	ldrb	r3, [r0, #0]
    2e5a:	2b2a      	cmp	r3, #42	; 0x2a
    2e5c:	d00a      	beq.n	2e74 <std::type_info::operator==(std::type_info const&) const+0x24>
    2e5e:	6849      	ldr	r1, [r1, #4]
    2e60:	780b      	ldrb	r3, [r1, #0]
    2e62:	2b2a      	cmp	r3, #42	; 0x2a
    2e64:	bf08      	it	eq
    2e66:	3101      	addeq	r1, #1
    2e68:	f009 ff7e 	bl	cd68 <strcmp>
    2e6c:	fab0 f080 	clz	r0, r0
    2e70:	0940      	lsrs	r0, r0, #5
    2e72:	bd08      	pop	{r3, pc}
    2e74:	2000      	movs	r0, #0
    2e76:	bd08      	pop	{r3, pc}
    2e78:	2001      	movs	r0, #1
    2e7a:	4770      	bx	lr

00002e7c <__gnu_cxx::__verbose_terminate_handler()>:
    2e7c:	b570      	push	{r4, r5, r6, lr}
    2e7e:	4b3b      	ldr	r3, [pc, #236]	; (2f6c <__gnu_cxx::__verbose_terminate_handler()+0xf0>)
    2e80:	781a      	ldrb	r2, [r3, #0]
    2e82:	b082      	sub	sp, #8
    2e84:	2a00      	cmp	r2, #0
    2e86:	d141      	bne.n	2f0c <__gnu_cxx::__verbose_terminate_handler()+0x90>
    2e88:	2401      	movs	r4, #1
    2e8a:	701c      	strb	r4, [r3, #0]
    2e8c:	f006 fafa 	bl	9484 <__cxa_current_exception_type>
    2e90:	2800      	cmp	r0, #0
    2e92:	d031      	beq.n	2ef8 <__gnu_cxx::__verbose_terminate_handler()+0x7c>
    2e94:	6844      	ldr	r4, [r0, #4]
    2e96:	4d36      	ldr	r5, [pc, #216]	; (2f70 <__gnu_cxx::__verbose_terminate_handler()+0xf4>)
    2e98:	7823      	ldrb	r3, [r4, #0]
    2e9a:	2b2a      	cmp	r3, #42	; 0x2a
    2e9c:	bf08      	it	eq
    2e9e:	3401      	addeq	r4, #1
    2ea0:	2200      	movs	r2, #0
    2ea2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    2ea6:	4611      	mov	r1, r2
    2ea8:	ab01      	add	r3, sp, #4
    2eaa:	9001      	str	r0, [sp, #4]
    2eac:	4620      	mov	r0, r4
    2eae:	f006 f963 	bl	9178 <__cxa_demangle>
    2eb2:	682b      	ldr	r3, [r5, #0]
    2eb4:	2230      	movs	r2, #48	; 0x30
    2eb6:	68db      	ldr	r3, [r3, #12]
    2eb8:	4606      	mov	r6, r0
    2eba:	2101      	movs	r1, #1
    2ebc:	482d      	ldr	r0, [pc, #180]	; (2f74 <__gnu_cxx::__verbose_terminate_handler()+0xf8>)
    2ebe:	f007 fd51 	bl	a964 <fwrite>
    2ec2:	9b01      	ldr	r3, [sp, #4]
    2ec4:	b193      	cbz	r3, 2eec <__gnu_cxx::__verbose_terminate_handler()+0x70>
    2ec6:	682b      	ldr	r3, [r5, #0]
    2ec8:	4620      	mov	r0, r4
    2eca:	68d9      	ldr	r1, [r3, #12]
    2ecc:	f007 fb4e 	bl	a56c <fputs>
    2ed0:	682b      	ldr	r3, [r5, #0]
    2ed2:	4829      	ldr	r0, [pc, #164]	; (2f78 <__gnu_cxx::__verbose_terminate_handler()+0xfc>)
    2ed4:	68db      	ldr	r3, [r3, #12]
    2ed6:	2202      	movs	r2, #2
    2ed8:	2101      	movs	r1, #1
    2eda:	f007 fd43 	bl	a964 <fwrite>
    2ede:	9b01      	ldr	r3, [sp, #4]
    2ee0:	b913      	cbnz	r3, 2ee8 <__gnu_cxx::__verbose_terminate_handler()+0x6c>
    2ee2:	4630      	mov	r0, r6
    2ee4:	f009 fafe 	bl	c4e4 <free>
    2ee8:	f7ff feec 	bl	2cc4 <__cxa_rethrow>
    2eec:	682b      	ldr	r3, [r5, #0]
    2eee:	4630      	mov	r0, r6
    2ef0:	68d9      	ldr	r1, [r3, #12]
    2ef2:	f007 fb3b 	bl	a56c <fputs>
    2ef6:	e7eb      	b.n	2ed0 <__gnu_cxx::__verbose_terminate_handler()+0x54>
    2ef8:	4b1d      	ldr	r3, [pc, #116]	; (2f70 <__gnu_cxx::__verbose_terminate_handler()+0xf4>)
    2efa:	4820      	ldr	r0, [pc, #128]	; (2f7c <__gnu_cxx::__verbose_terminate_handler()+0x100>)
    2efc:	681b      	ldr	r3, [r3, #0]
    2efe:	222d      	movs	r2, #45	; 0x2d
    2f00:	68db      	ldr	r3, [r3, #12]
    2f02:	4621      	mov	r1, r4
    2f04:	f007 fd2e 	bl	a964 <fwrite>
    2f08:	f7fd fd5c 	bl	9c4 <abort>
    2f0c:	4b18      	ldr	r3, [pc, #96]	; (2f70 <__gnu_cxx::__verbose_terminate_handler()+0xf4>)
    2f0e:	481c      	ldr	r0, [pc, #112]	; (2f80 <__gnu_cxx::__verbose_terminate_handler()+0x104>)
    2f10:	681b      	ldr	r3, [r3, #0]
    2f12:	221d      	movs	r2, #29
    2f14:	68db      	ldr	r3, [r3, #12]
    2f16:	2101      	movs	r1, #1
    2f18:	f007 fd24 	bl	a964 <fwrite>
    2f1c:	f7fd fd52 	bl	9c4 <abort>
    2f20:	2901      	cmp	r1, #1
    2f22:	460c      	mov	r4, r1
    2f24:	d119      	bne.n	2f5a <__gnu_cxx::__verbose_terminate_handler()+0xde>
    2f26:	f006 fa29 	bl	937c <__cxa_begin_catch>
    2f2a:	6803      	ldr	r3, [r0, #0]
    2f2c:	689b      	ldr	r3, [r3, #8]
    2f2e:	4798      	blx	r3
    2f30:	682b      	ldr	r3, [r5, #0]
    2f32:	4621      	mov	r1, r4
    2f34:	68db      	ldr	r3, [r3, #12]
    2f36:	4604      	mov	r4, r0
    2f38:	220b      	movs	r2, #11
    2f3a:	4812      	ldr	r0, [pc, #72]	; (2f84 <__gnu_cxx::__verbose_terminate_handler()+0x108>)
    2f3c:	f007 fd12 	bl	a964 <fwrite>
    2f40:	682b      	ldr	r3, [r5, #0]
    2f42:	4620      	mov	r0, r4
    2f44:	68d9      	ldr	r1, [r3, #12]
    2f46:	f007 fb11 	bl	a56c <fputs>
    2f4a:	682b      	ldr	r3, [r5, #0]
    2f4c:	200a      	movs	r0, #10
    2f4e:	68d9      	ldr	r1, [r3, #12]
    2f50:	f007 fa96 	bl	a480 <fputc>
    2f54:	f006 fa50 	bl	93f8 <__cxa_end_catch>
    2f58:	e7d6      	b.n	2f08 <__gnu_cxx::__verbose_terminate_handler()+0x8c>
    2f5a:	f006 fa0f 	bl	937c <__cxa_begin_catch>
    2f5e:	f006 fa4b 	bl	93f8 <__cxa_end_catch>
    2f62:	e7d1      	b.n	2f08 <__gnu_cxx::__verbose_terminate_handler()+0x8c>
    2f64:	f006 fa48 	bl	93f8 <__cxa_end_catch>
    2f68:	f7ff fa18 	bl	239c <__cxa_end_cleanup>
    2f6c:	20003cb1 	.word	0x20003cb1
    2f70:	200031b4 	.word	0x200031b4
    2f74:	20000fcc 	.word	0x20000fcc
    2f78:	20001000 	.word	0x20001000
    2f7c:	20001004 	.word	0x20001004
    2f80:	20000fac 	.word	0x20000fac
    2f84:	20001034 	.word	0x20001034

00002f88 <std::logic_error::what() const>:
    2f88:	6840      	ldr	r0, [r0, #4]
    2f8a:	4770      	bx	lr

00002f8c <std::logic_error::~logic_error()>:
    2f8c:	b510      	push	{r4, lr}
    2f8e:	6843      	ldr	r3, [r0, #4]
    2f90:	4a0c      	ldr	r2, [pc, #48]	; (2fc4 <std::logic_error::~logic_error()+0x38>)
    2f92:	490d      	ldr	r1, [pc, #52]	; (2fc8 <std::logic_error::~logic_error()+0x3c>)
    2f94:	4604      	mov	r4, r0
    2f96:	f1a3 000c 	sub.w	r0, r3, #12
    2f9a:	4290      	cmp	r0, r2
    2f9c:	b082      	sub	sp, #8
    2f9e:	6021      	str	r1, [r4, #0]
    2fa0:	d105      	bne.n	2fae <std::logic_error::~logic_error()+0x22>
    2fa2:	4620      	mov	r0, r4
    2fa4:	f7ff fac2 	bl	252c <std::exception::~exception()>
    2fa8:	4620      	mov	r0, r4
    2faa:	b002      	add	sp, #8
    2fac:	bd10      	pop	{r4, pc}
    2fae:	f853 2c04 	ldr.w	r2, [r3, #-4]
    2fb2:	1e51      	subs	r1, r2, #1
    2fb4:	2a00      	cmp	r2, #0
    2fb6:	f843 1c04 	str.w	r1, [r3, #-4]
    2fba:	dcf2      	bgt.n	2fa2 <std::logic_error::~logic_error()+0x16>
    2fbc:	a901      	add	r1, sp, #4
    2fbe:	f000 f8f3 	bl	31a8 <std::string::_Rep::_M_destroy(std::allocator<char> const&)>
    2fc2:	e7ee      	b.n	2fa2 <std::logic_error::~logic_error()+0x16>
    2fc4:	200038d4 	.word	0x200038d4
    2fc8:	200012ac 	.word	0x200012ac

00002fcc <std::length_error::~length_error()>:
    2fcc:	b510      	push	{r4, lr}
    2fce:	6843      	ldr	r3, [r0, #4]
    2fd0:	4a0c      	ldr	r2, [pc, #48]	; (3004 <std::length_error::~length_error()+0x38>)
    2fd2:	490d      	ldr	r1, [pc, #52]	; (3008 <std::length_error::~length_error()+0x3c>)
    2fd4:	4604      	mov	r4, r0
    2fd6:	f1a3 000c 	sub.w	r0, r3, #12
    2fda:	4290      	cmp	r0, r2
    2fdc:	b082      	sub	sp, #8
    2fde:	6021      	str	r1, [r4, #0]
    2fe0:	d105      	bne.n	2fee <std::length_error::~length_error()+0x22>
    2fe2:	4620      	mov	r0, r4
    2fe4:	f7ff faa2 	bl	252c <std::exception::~exception()>
    2fe8:	4620      	mov	r0, r4
    2fea:	b002      	add	sp, #8
    2fec:	bd10      	pop	{r4, pc}
    2fee:	f853 2c04 	ldr.w	r2, [r3, #-4]
    2ff2:	1e51      	subs	r1, r2, #1
    2ff4:	2a00      	cmp	r2, #0
    2ff6:	f843 1c04 	str.w	r1, [r3, #-4]
    2ffa:	dcf2      	bgt.n	2fe2 <std::length_error::~length_error()+0x16>
    2ffc:	a901      	add	r1, sp, #4
    2ffe:	f000 f8d3 	bl	31a8 <std::string::_Rep::_M_destroy(std::allocator<char> const&)>
    3002:	e7ee      	b.n	2fe2 <std::length_error::~length_error()+0x16>
    3004:	200038d4 	.word	0x200038d4
    3008:	200012ac 	.word	0x200012ac

0000300c <std::logic_error::~logic_error()>:
    300c:	b510      	push	{r4, lr}
    300e:	6843      	ldr	r3, [r0, #4]
    3010:	4a0e      	ldr	r2, [pc, #56]	; (304c <std::logic_error::~logic_error()+0x40>)
    3012:	490f      	ldr	r1, [pc, #60]	; (3050 <std::logic_error::~logic_error()+0x44>)
    3014:	4604      	mov	r4, r0
    3016:	f1a3 000c 	sub.w	r0, r3, #12
    301a:	4290      	cmp	r0, r2
    301c:	b082      	sub	sp, #8
    301e:	6021      	str	r1, [r4, #0]
    3020:	d108      	bne.n	3034 <std::logic_error::~logic_error()+0x28>
    3022:	4620      	mov	r0, r4
    3024:	f7ff fa82 	bl	252c <std::exception::~exception()>
    3028:	4620      	mov	r0, r4
    302a:	f7fd fba3 	bl	774 <operator delete(void*)>
    302e:	4620      	mov	r0, r4
    3030:	b002      	add	sp, #8
    3032:	bd10      	pop	{r4, pc}
    3034:	f853 2c04 	ldr.w	r2, [r3, #-4]
    3038:	1e51      	subs	r1, r2, #1
    303a:	2a00      	cmp	r2, #0
    303c:	f843 1c04 	str.w	r1, [r3, #-4]
    3040:	dcef      	bgt.n	3022 <std::logic_error::~logic_error()+0x16>
    3042:	a901      	add	r1, sp, #4
    3044:	f000 f8b0 	bl	31a8 <std::string::_Rep::_M_destroy(std::allocator<char> const&)>
    3048:	e7eb      	b.n	3022 <std::logic_error::~logic_error()+0x16>
    304a:	bf00      	nop
    304c:	200038d4 	.word	0x200038d4
    3050:	200012ac 	.word	0x200012ac

00003054 <std::length_error::~length_error()>:
    3054:	b510      	push	{r4, lr}
    3056:	6843      	ldr	r3, [r0, #4]
    3058:	4a0e      	ldr	r2, [pc, #56]	; (3094 <std::length_error::~length_error()+0x40>)
    305a:	490f      	ldr	r1, [pc, #60]	; (3098 <std::length_error::~length_error()+0x44>)
    305c:	4604      	mov	r4, r0
    305e:	f1a3 000c 	sub.w	r0, r3, #12
    3062:	4290      	cmp	r0, r2
    3064:	b082      	sub	sp, #8
    3066:	6021      	str	r1, [r4, #0]
    3068:	d108      	bne.n	307c <std::length_error::~length_error()+0x28>
    306a:	4620      	mov	r0, r4
    306c:	f7ff fa5e 	bl	252c <std::exception::~exception()>
    3070:	4620      	mov	r0, r4
    3072:	f7fd fb7f 	bl	774 <operator delete(void*)>
    3076:	4620      	mov	r0, r4
    3078:	b002      	add	sp, #8
    307a:	bd10      	pop	{r4, pc}
    307c:	f853 2c04 	ldr.w	r2, [r3, #-4]
    3080:	1e51      	subs	r1, r2, #1
    3082:	2a00      	cmp	r2, #0
    3084:	f843 1c04 	str.w	r1, [r3, #-4]
    3088:	dcef      	bgt.n	306a <std::length_error::~length_error()+0x16>
    308a:	a901      	add	r1, sp, #4
    308c:	f000 f88c 	bl	31a8 <std::string::_Rep::_M_destroy(std::allocator<char> const&)>
    3090:	e7eb      	b.n	306a <std::length_error::~length_error()+0x16>
    3092:	bf00      	nop
    3094:	200038d4 	.word	0x200038d4
    3098:	200012ac 	.word	0x200012ac

0000309c <std::logic_error::logic_error(char const*)>:
    309c:	b5f0      	push	{r4, r5, r6, r7, lr}
    309e:	4b1b      	ldr	r3, [pc, #108]	; (310c <std::logic_error::logic_error(char const*)+0x70>)
    30a0:	6003      	str	r3, [r0, #0]
    30a2:	b083      	sub	sp, #12
    30a4:	4604      	mov	r4, r0
    30a6:	b349      	cbz	r1, 30fc <std::logic_error::logic_error(char const*)+0x60>
    30a8:	4608      	mov	r0, r1
    30aa:	460d      	mov	r5, r1
    30ac:	f00b fde8 	bl	ec80 <strlen>
    30b0:	4607      	mov	r7, r0
    30b2:	b1a8      	cbz	r0, 30e0 <std::logic_error::logic_error(char const*)+0x44>
    30b4:	aa01      	add	r2, sp, #4
    30b6:	2100      	movs	r1, #0
    30b8:	f000 f83a 	bl	3130 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)>
    30bc:	2f01      	cmp	r7, #1
    30be:	4606      	mov	r6, r0
    30c0:	f100 030c 	add.w	r3, r0, #12
    30c4:	d011      	beq.n	30ea <std::logic_error::logic_error(char const*)+0x4e>
    30c6:	4618      	mov	r0, r3
    30c8:	4629      	mov	r1, r5
    30ca:	463a      	mov	r2, r7
    30cc:	f7fd fab6 	bl	63c <memcpy>
    30d0:	4603      	mov	r3, r0
    30d2:	4a0f      	ldr	r2, [pc, #60]	; (3110 <std::logic_error::logic_error(char const*)+0x74>)
    30d4:	4296      	cmp	r6, r2
    30d6:	d10b      	bne.n	30f0 <std::logic_error::logic_error(char const*)+0x54>
    30d8:	4620      	mov	r0, r4
    30da:	6063      	str	r3, [r4, #4]
    30dc:	b003      	add	sp, #12
    30de:	bdf0      	pop	{r4, r5, r6, r7, pc}
    30e0:	4b0c      	ldr	r3, [pc, #48]	; (3114 <std::logic_error::logic_error(char const*)+0x78>)
    30e2:	6063      	str	r3, [r4, #4]
    30e4:	4620      	mov	r0, r4
    30e6:	b003      	add	sp, #12
    30e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    30ea:	782a      	ldrb	r2, [r5, #0]
    30ec:	7302      	strb	r2, [r0, #12]
    30ee:	e7f0      	b.n	30d2 <std::logic_error::logic_error(char const*)+0x36>
    30f0:	2200      	movs	r2, #0
    30f2:	60b2      	str	r2, [r6, #8]
    30f4:	6037      	str	r7, [r6, #0]
    30f6:	443e      	add	r6, r7
    30f8:	7332      	strb	r2, [r6, #12]
    30fa:	e7ed      	b.n	30d8 <std::logic_error::logic_error(char const*)+0x3c>
    30fc:	4806      	ldr	r0, [pc, #24]	; (3118 <std::logic_error::logic_error(char const*)+0x7c>)
    30fe:	f7ff f855 	bl	21ac <std::__throw_logic_error(char const*)>
    3102:	4620      	mov	r0, r4
    3104:	f7ff fa12 	bl	252c <std::exception::~exception()>
    3108:	f7ff f948 	bl	239c <__cxa_end_cleanup>
    310c:	200012ac 	.word	0x200012ac
    3110:	200038d4 	.word	0x200038d4
    3114:	200038e0 	.word	0x200038e0
    3118:	2000107c 	.word	0x2000107c

0000311c <std::length_error::length_error(char const*)>:
    311c:	b510      	push	{r4, lr}
    311e:	4604      	mov	r4, r0
    3120:	f7ff ffbc 	bl	309c <std::logic_error::logic_error(char const*)>
    3124:	4b01      	ldr	r3, [pc, #4]	; (312c <std::length_error::length_error(char const*)+0x10>)
    3126:	6023      	str	r3, [r4, #0]
    3128:	4620      	mov	r0, r4
    312a:	bd10      	pop	{r4, pc}
    312c:	200012c0 	.word	0x200012c0

00003130 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)>:
    3130:	4b1b      	ldr	r3, [pc, #108]	; (31a0 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x70>)
    3132:	4298      	cmp	r0, r3
    3134:	b510      	push	{r4, lr}
    3136:	d830      	bhi.n	319a <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x6a>
    3138:	4288      	cmp	r0, r1
    313a:	4604      	mov	r4, r0
    313c:	d91c      	bls.n	3178 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x48>
    313e:	004a      	lsls	r2, r1, #1
    3140:	4290      	cmp	r0, r2
    3142:	bf38      	it	cc
    3144:	4614      	movcc	r4, r2
    3146:	f104 021d 	add.w	r2, r4, #29
    314a:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
    314e:	f104 000d 	add.w	r0, r4, #13
    3152:	d918      	bls.n	3186 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x56>
    3154:	428c      	cmp	r4, r1
    3156:	d916      	bls.n	3186 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x56>
    3158:	f3c2 020b 	ubfx	r2, r2, #0, #12
    315c:	f504 5480 	add.w	r4, r4, #4096	; 0x1000
    3160:	1aa4      	subs	r4, r4, r2
    3162:	429c      	cmp	r4, r3
    3164:	bf28      	it	cs
    3166:	461c      	movcs	r4, r3
    3168:	f104 000d 	add.w	r0, r4, #13
    316c:	f7fd fb00 	bl	770 <operator new(unsigned int)>
    3170:	2200      	movs	r2, #0
    3172:	e9c0 4201 	strd	r4, r2, [r0, #4]
    3176:	bd10      	pop	{r4, pc}
    3178:	f100 031d 	add.w	r3, r0, #29
    317c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    3180:	f100 000d 	add.w	r0, r0, #13
    3184:	d901      	bls.n	318a <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x5a>
    3186:	2800      	cmp	r0, #0
    3188:	db05      	blt.n	3196 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x66>
    318a:	f7fd faf1 	bl	770 <operator new(unsigned int)>
    318e:	2200      	movs	r2, #0
    3190:	e9c0 4201 	strd	r4, r2, [r0, #4]
    3194:	bd10      	pop	{r4, pc}
    3196:	f7fe fff9 	bl	218c <std::__throw_bad_alloc()>
    319a:	4802      	ldr	r0, [pc, #8]	; (31a4 <std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)+0x74>)
    319c:	f7ff f81e 	bl	21dc <std::__throw_length_error(char const*)>
    31a0:	3ffffffc 	.word	0x3ffffffc
    31a4:	20001064 	.word	0x20001064

000031a8 <std::string::_Rep::_M_destroy(std::allocator<char> const&)>:
    31a8:	f7fd bae4 	b.w	774 <operator delete(void*)>

000031ac <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const>:
    31ac:	b570      	push	{r4, r5, r6, lr}
    31ae:	6803      	ldr	r3, [r0, #0]
    31b0:	b084      	sub	sp, #16
    31b2:	2400      	movs	r4, #0
    31b4:	699e      	ldr	r6, [r3, #24]
    31b6:	9403      	str	r4, [sp, #12]
    31b8:	2310      	movs	r3, #16
    31ba:	4615      	mov	r5, r2
    31bc:	9302      	str	r3, [sp, #8]
    31be:	e9cd 4400 	strd	r4, r4, [sp]
    31c2:	466b      	mov	r3, sp
    31c4:	6812      	ldr	r2, [r2, #0]
    31c6:	47b0      	blx	r6
    31c8:	f89d 3004 	ldrb.w	r3, [sp, #4]
    31cc:	f003 0306 	and.w	r3, r3, #6
    31d0:	2b06      	cmp	r3, #6
    31d2:	bf03      	ittte	eq
    31d4:	9b00      	ldreq	r3, [sp, #0]
    31d6:	602b      	streq	r3, [r5, #0]
    31d8:	2001      	moveq	r0, #1
    31da:	4620      	movne	r0, r4
    31dc:	b004      	add	sp, #16
    31de:	bd70      	pop	{r4, r5, r6, pc}

000031e0 <__cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const>:
    31e0:	9800      	ldr	r0, [sp, #0]
    31e2:	4290      	cmp	r0, r2
    31e4:	bf14      	ite	ne
    31e6:	2001      	movne	r0, #1
    31e8:	2006      	moveq	r0, #6
    31ea:	4770      	bx	lr

000031ec <__cxxabiv1::__class_type_info::~__class_type_info()>:
    31ec:	b510      	push	{r4, lr}
    31ee:	4b03      	ldr	r3, [pc, #12]	; (31fc <__cxxabiv1::__class_type_info::~__class_type_info()+0x10>)
    31f0:	6003      	str	r3, [r0, #0]
    31f2:	4604      	mov	r4, r0
    31f4:	f7ff fe28 	bl	2e48 <std::type_info::~type_info()>
    31f8:	4620      	mov	r0, r4
    31fa:	bd10      	pop	{r4, pc}
    31fc:	20001254 	.word	0x20001254

00003200 <__cxxabiv1::__class_type_info::~__class_type_info()>:
    3200:	b510      	push	{r4, lr}
    3202:	4b05      	ldr	r3, [pc, #20]	; (3218 <__cxxabiv1::__class_type_info::~__class_type_info()+0x18>)
    3204:	6003      	str	r3, [r0, #0]
    3206:	4604      	mov	r4, r0
    3208:	f7ff fe1e 	bl	2e48 <std::type_info::~type_info()>
    320c:	4620      	mov	r0, r4
    320e:	2108      	movs	r1, #8
    3210:	f7fd fab2 	bl	778 <operator delete(void*, unsigned int)>
    3214:	4620      	mov	r0, r4
    3216:	bd10      	pop	{r4, pc}
    3218:	20001254 	.word	0x20001254

0000321c <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const>:
    321c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3220:	9f06      	ldr	r7, [sp, #24]
    3222:	9908      	ldr	r1, [sp, #32]
    3224:	9e09      	ldr	r6, [sp, #36]	; 0x24
    3226:	428f      	cmp	r7, r1
    3228:	4604      	mov	r4, r0
    322a:	4690      	mov	r8, r2
    322c:	461d      	mov	r5, r3
    322e:	d00c      	beq.n	324a <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x2e>
    3230:	4629      	mov	r1, r5
    3232:	4620      	mov	r0, r4
    3234:	f7ff fe0c 	bl	2e50 <std::type_info::operator==(std::type_info const&) const>
    3238:	b120      	cbz	r0, 3244 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x28>
    323a:	2301      	movs	r3, #1
    323c:	6037      	str	r7, [r6, #0]
    323e:	f886 8004 	strb.w	r8, [r6, #4]
    3242:	71b3      	strb	r3, [r6, #6]
    3244:	2000      	movs	r0, #0
    3246:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    324a:	9907      	ldr	r1, [sp, #28]
    324c:	f7ff fe00 	bl	2e50 <std::type_info::operator==(std::type_info const&) const>
    3250:	2800      	cmp	r0, #0
    3252:	d0ed      	beq.n	3230 <__cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const+0x14>
    3254:	f886 8005 	strb.w	r8, [r6, #5]
    3258:	2000      	movs	r0, #0
    325a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    325e:	bf00      	nop

00003260 <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const>:
    3260:	b538      	push	{r3, r4, r5, lr}
    3262:	4615      	mov	r5, r2
    3264:	461c      	mov	r4, r3
    3266:	f7ff fdf3 	bl	2e50 <std::type_info::operator==(std::type_info const&) const>
    326a:	b900      	cbnz	r0, 326e <__cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const+0xe>
    326c:	bd38      	pop	{r3, r4, r5, pc}
    326e:	2208      	movs	r2, #8
    3270:	2306      	movs	r3, #6
    3272:	6025      	str	r5, [r4, #0]
    3274:	60e2      	str	r2, [r4, #12]
    3276:	7123      	strb	r3, [r4, #4]
    3278:	bd38      	pop	{r3, r4, r5, pc}
    327a:	bf00      	nop

0000327c <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const>:
    327c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3280:	4606      	mov	r6, r0
    3282:	4617      	mov	r7, r2
    3284:	461d      	mov	r5, r3
    3286:	460c      	mov	r4, r1
    3288:	f7ff fde2 	bl	2e50 <std::type_info::operator==(std::type_info const&) const>
    328c:	b948      	cbnz	r0, 32a2 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
    328e:	2d03      	cmp	r5, #3
    3290:	d807      	bhi.n	32a2 <__cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const+0x26>
    3292:	6823      	ldr	r3, [r4, #0]
    3294:	463a      	mov	r2, r7
    3296:	4631      	mov	r1, r6
    3298:	4620      	mov	r0, r4
    329a:	695b      	ldr	r3, [r3, #20]
    329c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    32a0:	4718      	bx	r3
    32a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    32a6:	bf00      	nop

000032a8 <d_make_comp>:
    32a8:	2931      	cmp	r1, #49	; 0x31
    32aa:	b570      	push	{r4, r5, r6, lr}
    32ac:	4686      	mov	lr, r0
    32ae:	d845      	bhi.n	333c <d_make_comp+0x94>
    32b0:	2928      	cmp	r1, #40	; 0x28
    32b2:	d82a      	bhi.n	330a <d_make_comp+0x62>
    32b4:	290a      	cmp	r1, #10
    32b6:	d920      	bls.n	32fa <d_make_comp+0x52>
    32b8:	f1a1 0c0b 	sub.w	ip, r1, #11
    32bc:	4c32      	ldr	r4, [pc, #200]	; (3388 <d_make_comp+0xe0>)
    32be:	fa5f fc8c 	uxtb.w	ip, ip
    32c2:	2001      	movs	r0, #1
    32c4:	fa00 f00c 	lsl.w	r0, r0, ip
    32c8:	4004      	ands	r4, r0
    32ca:	2c00      	cmp	r4, #0
    32cc:	d04d      	beq.n	336a <d_make_comp+0xc2>
    32ce:	b1d2      	cbz	r2, 3306 <d_make_comp+0x5e>
    32d0:	e9de 4005 	ldrd	r4, r0, [lr, #20]
    32d4:	4284      	cmp	r4, r0
    32d6:	da16      	bge.n	3306 <d_make_comp+0x5e>
    32d8:	f8de 5010 	ldr.w	r5, [lr, #16]
    32dc:	eb04 0c84 	add.w	ip, r4, r4, lsl #2
    32e0:	eb05 008c 	add.w	r0, r5, ip, lsl #2
    32e4:	3401      	adds	r4, #1
    32e6:	2600      	movs	r6, #0
    32e8:	e9c0 6601 	strd	r6, r6, [r0, #4]
    32ec:	f8ce 4014 	str.w	r4, [lr, #20]
    32f0:	f805 102c 	strb.w	r1, [r5, ip, lsl #2]
    32f4:	e9c0 2303 	strd	r2, r3, [r0, #12]
    32f8:	bd70      	pop	{r4, r5, r6, pc}
    32fa:	2904      	cmp	r1, #4
    32fc:	d930      	bls.n	3360 <d_make_comp+0xb8>
    32fe:	f1a1 0009 	sub.w	r0, r1, #9
    3302:	2801      	cmp	r0, #1
    3304:	d9e3      	bls.n	32ce <d_make_comp+0x26>
    3306:	2000      	movs	r0, #0
    3308:	bd70      	pop	{r4, r5, r6, pc}
    330a:	f1a1 0029 	sub.w	r0, r1, #41	; 0x29
    330e:	2808      	cmp	r0, #8
    3310:	d8f9      	bhi.n	3306 <d_make_comp+0x5e>
    3312:	a401      	add	r4, pc, #4	; (adr r4, 3318 <d_make_comp+0x70>)
    3314:	f854 f020 	ldr.w	pc, [r4, r0, lsl #2]
    3318:	000032d1 	.word	0x000032d1
    331c:	00003365 	.word	0x00003365
    3320:	00003361 	.word	0x00003361
    3324:	00003307 	.word	0x00003307
    3328:	00003361 	.word	0x00003361
    332c:	000032d1 	.word	0x000032d1
    3330:	000032d1 	.word	0x000032d1
    3334:	000032cf 	.word	0x000032cf
    3338:	00003365 	.word	0x00003365
    333c:	f1a1 0034 	sub.w	r0, r1, #52	; 0x34
    3340:	b2c0      	uxtb	r0, r0
    3342:	281d      	cmp	r0, #29
    3344:	d8df      	bhi.n	3306 <d_make_comp+0x5e>
    3346:	4c11      	ldr	r4, [pc, #68]	; (338c <d_make_comp+0xe4>)
    3348:	f04f 0c01 	mov.w	ip, #1
    334c:	fa0c fc00 	lsl.w	ip, ip, r0
    3350:	ea0c 0404 	and.w	r4, ip, r4
    3354:	2c00      	cmp	r4, #0
    3356:	d1ba      	bne.n	32ce <d_make_comp+0x26>
    3358:	480d      	ldr	r0, [pc, #52]	; (3390 <d_make_comp+0xe8>)
    335a:	ea0c 0000 	and.w	r0, ip, r0
    335e:	b170      	cbz	r0, 337e <d_make_comp+0xd6>
    3360:	2a00      	cmp	r2, #0
    3362:	d0d0      	beq.n	3306 <d_make_comp+0x5e>
    3364:	2b00      	cmp	r3, #0
    3366:	d1b3      	bne.n	32d0 <d_make_comp+0x28>
    3368:	e7cd      	b.n	3306 <d_make_comp+0x5e>
    336a:	f410 1f7f 	tst.w	r0, #4177920	; 0x3fc000
    336e:	d1af      	bne.n	32d0 <d_make_comp+0x28>
    3370:	4c08      	ldr	r4, [pc, #32]	; (3394 <d_make_comp+0xec>)
    3372:	4004      	ands	r4, r0
    3374:	2c00      	cmp	r4, #0
    3376:	d0c6      	beq.n	3306 <d_make_comp+0x5e>
    3378:	2a00      	cmp	r2, #0
    337a:	d1f3      	bne.n	3364 <d_make_comp+0xbc>
    337c:	e7c3      	b.n	3306 <d_make_comp+0x5e>
    337e:	f01c 5c50 	ands.w	ip, ip, #872415232	; 0x34000000
    3382:	d0c0      	beq.n	3306 <d_make_comp+0x5e>
    3384:	e7a4      	b.n	32d0 <d_make_comp+0x28>
    3386:	bf00      	nop
    3388:	2f801ffe 	.word	0x2f801ffe
    338c:	01c71107 	.word	0x01c71107
    3390:	0a002ef8 	.word	0x0a002ef8
    3394:	00400001 	.word	0x00400001

00003398 <d_number>:
    3398:	b5f0      	push	{r4, r5, r6, r7, lr}
    339a:	68c2      	ldr	r2, [r0, #12]
    339c:	7811      	ldrb	r1, [r2, #0]
    339e:	296e      	cmp	r1, #110	; 0x6e
    33a0:	4686      	mov	lr, r0
    33a2:	d025      	beq.n	33f0 <d_number+0x58>
    33a4:	3930      	subs	r1, #48	; 0x30
    33a6:	b2cb      	uxtb	r3, r1
    33a8:	2b09      	cmp	r3, #9
    33aa:	d82b      	bhi.n	3404 <d_number+0x6c>
    33ac:	2600      	movs	r6, #0
    33ae:	4d16      	ldr	r5, [pc, #88]	; (3408 <d_number+0x70>)
    33b0:	2000      	movs	r0, #0
    33b2:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
    33b6:	e002      	b.n	33be <d_number+0x26>
    33b8:	ebb0 0fd3 	cmp.w	r0, r3, lsr #3
    33bc:	dc15      	bgt.n	33ea <d_number+0x52>
    33be:	3201      	adds	r2, #1
    33c0:	f8ce 200c 	str.w	r2, [lr, #12]
    33c4:	7813      	ldrb	r3, [r2, #0]
    33c6:	3b30      	subs	r3, #48	; 0x30
    33c8:	fa5f fc83 	uxtb.w	ip, r3
    33cc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
    33d0:	eb01 0040 	add.w	r0, r1, r0, lsl #1
    33d4:	f1bc 0f09 	cmp.w	ip, #9
    33d8:	4619      	mov	r1, r3
    33da:	eba4 0303 	sub.w	r3, r4, r3
    33de:	fba5 7303 	umull	r7, r3, r5, r3
    33e2:	d9e9      	bls.n	33b8 <d_number+0x20>
    33e4:	b106      	cbz	r6, 33e8 <d_number+0x50>
    33e6:	4240      	negs	r0, r0
    33e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    33ea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    33ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
    33f0:	1c53      	adds	r3, r2, #1
    33f2:	60c3      	str	r3, [r0, #12]
    33f4:	7851      	ldrb	r1, [r2, #1]
    33f6:	3930      	subs	r1, #48	; 0x30
    33f8:	b2ca      	uxtb	r2, r1
    33fa:	2a09      	cmp	r2, #9
    33fc:	d802      	bhi.n	3404 <d_number+0x6c>
    33fe:	461a      	mov	r2, r3
    3400:	2601      	movs	r6, #1
    3402:	e7d4      	b.n	33ae <d_number+0x16>
    3404:	2000      	movs	r0, #0
    3406:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3408:	cccccccd 	.word	0xcccccccd

0000340c <d_call_offset>:
    340c:	b510      	push	{r4, lr}
    340e:	4604      	mov	r4, r0
    3410:	b929      	cbnz	r1, 341e <d_call_offset+0x12>
    3412:	68c3      	ldr	r3, [r0, #12]
    3414:	781a      	ldrb	r2, [r3, #0]
    3416:	b16a      	cbz	r2, 3434 <d_call_offset+0x28>
    3418:	1c5a      	adds	r2, r3, #1
    341a:	60c2      	str	r2, [r0, #12]
    341c:	7819      	ldrb	r1, [r3, #0]
    341e:	2968      	cmp	r1, #104	; 0x68
    3420:	d00c      	beq.n	343c <d_call_offset+0x30>
    3422:	2976      	cmp	r1, #118	; 0x76
    3424:	d106      	bne.n	3434 <d_call_offset+0x28>
    3426:	4620      	mov	r0, r4
    3428:	f7ff ffb6 	bl	3398 <d_number>
    342c:	68e3      	ldr	r3, [r4, #12]
    342e:	781a      	ldrb	r2, [r3, #0]
    3430:	2a5f      	cmp	r2, #95	; 0x5f
    3432:	d001      	beq.n	3438 <d_call_offset+0x2c>
    3434:	2000      	movs	r0, #0
    3436:	bd10      	pop	{r4, pc}
    3438:	3301      	adds	r3, #1
    343a:	60e3      	str	r3, [r4, #12]
    343c:	4620      	mov	r0, r4
    343e:	f7ff ffab 	bl	3398 <d_number>
    3442:	68e3      	ldr	r3, [r4, #12]
    3444:	781a      	ldrb	r2, [r3, #0]
    3446:	2a5f      	cmp	r2, #95	; 0x5f
    3448:	d1f4      	bne.n	3434 <d_call_offset+0x28>
    344a:	3301      	adds	r3, #1
    344c:	60e3      	str	r3, [r4, #12]
    344e:	2001      	movs	r0, #1
    3450:	bd10      	pop	{r4, pc}
    3452:	bf00      	nop

00003454 <d_ref_qualifier>:
    3454:	b410      	push	{r4}
    3456:	68c3      	ldr	r3, [r0, #12]
    3458:	460a      	mov	r2, r1
    345a:	7819      	ldrb	r1, [r3, #0]
    345c:	2952      	cmp	r1, #82	; 0x52
    345e:	d010      	beq.n	3482 <d_ref_qualifier+0x2e>
    3460:	294f      	cmp	r1, #79	; 0x4f
    3462:	d003      	beq.n	346c <d_ref_qualifier+0x18>
    3464:	4610      	mov	r0, r2
    3466:	f85d 4b04 	ldr.w	r4, [sp], #4
    346a:	4770      	bx	lr
    346c:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
    346e:	2120      	movs	r1, #32
    3470:	3403      	adds	r4, #3
    3472:	3301      	adds	r3, #1
    3474:	62c4      	str	r4, [r0, #44]	; 0x2c
    3476:	60c3      	str	r3, [r0, #12]
    3478:	f85d 4b04 	ldr.w	r4, [sp], #4
    347c:	2300      	movs	r3, #0
    347e:	f7ff bf13 	b.w	32a8 <d_make_comp>
    3482:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
    3484:	211f      	movs	r1, #31
    3486:	3402      	adds	r4, #2
    3488:	e7f3      	b.n	3472 <d_ref_qualifier+0x1e>
    348a:	bf00      	nop

0000348c <d_count_templates_scopes>:
    348c:	2900      	cmp	r1, #0
    348e:	d066      	beq.n	355e <d_count_templates_scopes+0xd2>
    3490:	b538      	push	{r3, r4, r5, lr}
    3492:	4605      	mov	r5, r0
    3494:	460c      	mov	r4, r1
    3496:	68a3      	ldr	r3, [r4, #8]
    3498:	2b01      	cmp	r3, #1
    349a:	dc39      	bgt.n	3510 <d_count_templates_scopes+0x84>
    349c:	f8d5 011c 	ldr.w	r0, [r5, #284]	; 0x11c
    34a0:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
    34a4:	f103 0301 	add.w	r3, r3, #1
    34a8:	dc32      	bgt.n	3510 <d_count_templates_scopes+0x84>
    34aa:	7822      	ldrb	r2, [r4, #0]
    34ac:	60a3      	str	r3, [r4, #8]
    34ae:	1e53      	subs	r3, r2, #1
    34b0:	2b50      	cmp	r3, #80	; 0x50
    34b2:	d82d      	bhi.n	3510 <d_count_templates_scopes+0x84>
    34b4:	e8df f003 	tbb	[pc, r3]
    34b8:	4c313131 	.word	0x4c313131
    34bc:	2d2d2c2c 	.word	0x2d2d2c2c
    34c0:	31313131 	.word	0x31313131
    34c4:	31313131 	.word	0x31313131
    34c8:	31313131 	.word	0x31313131
    34cc:	2c313131 	.word	0x2c313131
    34d0:	31313131 	.word	0x31313131
    34d4:	31313131 	.word	0x31313131
    34d8:	42423131 	.word	0x42423131
    34dc:	312c3131 	.word	0x312c3131
    34e0:	29313131 	.word	0x29313131
    34e4:	31313131 	.word	0x31313131
    34e8:	312d2c31 	.word	0x312d2c31
    34ec:	31313131 	.word	0x31313131
    34f0:	31313131 	.word	0x31313131
    34f4:	31313131 	.word	0x31313131
    34f8:	312c2c31 	.word	0x312c2c31
    34fc:	29292929 	.word	0x29292929
    3500:	3131312c 	.word	0x3131312c
    3504:	31313131 	.word	0x31313131
    3508:	31          	.byte	0x31
    3509:	00          	.byte	0x00
    350a:	68e4      	ldr	r4, [r4, #12]
    350c:	2c00      	cmp	r4, #0
    350e:	d1c2      	bne.n	3496 <d_count_templates_scopes+0xa>
    3510:	bd38      	pop	{r3, r4, r5, pc}
    3512:	6924      	ldr	r4, [r4, #16]
    3514:	2c00      	cmp	r4, #0
    3516:	d1be      	bne.n	3496 <d_count_templates_scopes+0xa>
    3518:	e7fa      	b.n	3510 <d_count_templates_scopes+0x84>
    351a:	68e1      	ldr	r1, [r4, #12]
    351c:	1c43      	adds	r3, r0, #1
    351e:	f8c5 311c 	str.w	r3, [r5, #284]	; 0x11c
    3522:	4628      	mov	r0, r5
    3524:	f7ff ffb2 	bl	348c <d_count_templates_scopes>
    3528:	6921      	ldr	r1, [r4, #16]
    352a:	4628      	mov	r0, r5
    352c:	f7ff ffae 	bl	348c <d_count_templates_scopes>
    3530:	f8d5 311c 	ldr.w	r3, [r5, #284]	; 0x11c
    3534:	3b01      	subs	r3, #1
    3536:	f8c5 311c 	str.w	r3, [r5, #284]	; 0x11c
    353a:	bd38      	pop	{r3, r4, r5, pc}
    353c:	68e1      	ldr	r1, [r4, #12]
    353e:	780b      	ldrb	r3, [r1, #0]
    3540:	2b05      	cmp	r3, #5
    3542:	d1eb      	bne.n	351c <d_count_templates_scopes+0x90>
    3544:	f8d5 3138 	ldr.w	r3, [r5, #312]	; 0x138
    3548:	3301      	adds	r3, #1
    354a:	f8c5 3138 	str.w	r3, [r5, #312]	; 0x138
    354e:	e7e5      	b.n	351c <d_count_templates_scopes+0x90>
    3550:	f8d5 3144 	ldr.w	r3, [r5, #324]	; 0x144
    3554:	68e1      	ldr	r1, [r4, #12]
    3556:	3301      	adds	r3, #1
    3558:	f8c5 3144 	str.w	r3, [r5, #324]	; 0x144
    355c:	e7de      	b.n	351c <d_count_templates_scopes+0x90>
    355e:	4770      	bx	lr

00003560 <d_pack_length>:
    3560:	4603      	mov	r3, r0
    3562:	b148      	cbz	r0, 3578 <d_pack_length+0x18>
    3564:	2300      	movs	r3, #0
    3566:	e004      	b.n	3572 <d_pack_length+0x12>
    3568:	68c2      	ldr	r2, [r0, #12]
    356a:	b12a      	cbz	r2, 3578 <d_pack_length+0x18>
    356c:	6900      	ldr	r0, [r0, #16]
    356e:	3301      	adds	r3, #1
    3570:	b110      	cbz	r0, 3578 <d_pack_length+0x18>
    3572:	7802      	ldrb	r2, [r0, #0]
    3574:	2a2f      	cmp	r2, #47	; 0x2f
    3576:	d0f7      	beq.n	3568 <d_pack_length+0x8>
    3578:	4618      	mov	r0, r3
    357a:	4770      	bx	lr

0000357c <d_discriminator>:
    357c:	68c3      	ldr	r3, [r0, #12]
    357e:	781a      	ldrb	r2, [r3, #0]
    3580:	2a5f      	cmp	r2, #95	; 0x5f
    3582:	d001      	beq.n	3588 <d_discriminator+0xc>
    3584:	2001      	movs	r0, #1
    3586:	4770      	bx	lr
    3588:	b510      	push	{r4, lr}
    358a:	1c5a      	adds	r2, r3, #1
    358c:	60c2      	str	r2, [r0, #12]
    358e:	785a      	ldrb	r2, [r3, #1]
    3590:	2a5f      	cmp	r2, #95	; 0x5f
    3592:	4604      	mov	r4, r0
    3594:	d004      	beq.n	35a0 <d_discriminator+0x24>
    3596:	f7ff feff 	bl	3398 <d_number>
    359a:	43c0      	mvns	r0, r0
    359c:	0fc0      	lsrs	r0, r0, #31
    359e:	bd10      	pop	{r4, pc}
    35a0:	3302      	adds	r3, #2
    35a2:	60c3      	str	r3, [r0, #12]
    35a4:	f7ff fef8 	bl	3398 <d_number>
    35a8:	2800      	cmp	r0, #0
    35aa:	db09      	blt.n	35c0 <d_discriminator+0x44>
    35ac:	2809      	cmp	r0, #9
    35ae:	dd05      	ble.n	35bc <d_discriminator+0x40>
    35b0:	68e3      	ldr	r3, [r4, #12]
    35b2:	781a      	ldrb	r2, [r3, #0]
    35b4:	2a5f      	cmp	r2, #95	; 0x5f
    35b6:	d103      	bne.n	35c0 <d_discriminator+0x44>
    35b8:	3301      	adds	r3, #1
    35ba:	60e3      	str	r3, [r4, #12]
    35bc:	2001      	movs	r0, #1
    35be:	bd10      	pop	{r4, pc}
    35c0:	2000      	movs	r0, #0
    35c2:	bd10      	pop	{r4, pc}

000035c4 <d_index_template_argument.part.0>:
    35c4:	b920      	cbnz	r0, 35d0 <d_index_template_argument.part.0+0xc>
    35c6:	e009      	b.n	35dc <d_index_template_argument.part.0+0x18>
    35c8:	b139      	cbz	r1, 35da <d_index_template_argument.part.0+0x16>
    35ca:	6900      	ldr	r0, [r0, #16]
    35cc:	3901      	subs	r1, #1
    35ce:	b130      	cbz	r0, 35de <d_index_template_argument.part.0+0x1a>
    35d0:	7803      	ldrb	r3, [r0, #0]
    35d2:	2b2f      	cmp	r3, #47	; 0x2f
    35d4:	d0f8      	beq.n	35c8 <d_index_template_argument.part.0+0x4>
    35d6:	2000      	movs	r0, #0
    35d8:	4770      	bx	lr
    35da:	68c0      	ldr	r0, [r0, #12]
    35dc:	4770      	bx	lr
    35de:	4770      	bx	lr

000035e0 <d_growable_string_callback_adapter>:
    35e0:	b5f0      	push	{r4, r5, r6, r7, lr}
    35e2:	4614      	mov	r4, r2
    35e4:	6852      	ldr	r2, [r2, #4]
    35e6:	68a5      	ldr	r5, [r4, #8]
    35e8:	1c4b      	adds	r3, r1, #1
    35ea:	4413      	add	r3, r2
    35ec:	42ab      	cmp	r3, r5
    35ee:	b083      	sub	sp, #12
    35f0:	460e      	mov	r6, r1
    35f2:	4607      	mov	r7, r0
    35f4:	d811      	bhi.n	361a <d_growable_string_callback_adapter+0x3a>
    35f6:	68e5      	ldr	r5, [r4, #12]
    35f8:	b96d      	cbnz	r5, 3616 <d_growable_string_callback_adapter+0x36>
    35fa:	6863      	ldr	r3, [r4, #4]
    35fc:	6820      	ldr	r0, [r4, #0]
    35fe:	4632      	mov	r2, r6
    3600:	4418      	add	r0, r3
    3602:	4639      	mov	r1, r7
    3604:	f7fd f81a 	bl	63c <memcpy>
    3608:	e9d4 3200 	ldrd	r3, r2, [r4]
    360c:	4433      	add	r3, r6
    360e:	549d      	strb	r5, [r3, r2]
    3610:	6863      	ldr	r3, [r4, #4]
    3612:	4433      	add	r3, r6
    3614:	6063      	str	r3, [r4, #4]
    3616:	b003      	add	sp, #12
    3618:	bdf0      	pop	{r4, r5, r6, r7, pc}
    361a:	68e2      	ldr	r2, [r4, #12]
    361c:	2a00      	cmp	r2, #0
    361e:	d1fa      	bne.n	3616 <d_growable_string_callback_adapter+0x36>
    3620:	b155      	cbz	r5, 3638 <d_growable_string_callback_adapter+0x58>
    3622:	006d      	lsls	r5, r5, #1
    3624:	42ab      	cmp	r3, r5
    3626:	d8fc      	bhi.n	3622 <d_growable_string_callback_adapter+0x42>
    3628:	6820      	ldr	r0, [r4, #0]
    362a:	4629      	mov	r1, r5
    362c:	f00a fa18 	bl	da60 <realloc>
    3630:	b138      	cbz	r0, 3642 <d_growable_string_callback_adapter+0x62>
    3632:	6020      	str	r0, [r4, #0]
    3634:	60a5      	str	r5, [r4, #8]
    3636:	e7de      	b.n	35f6 <d_growable_string_callback_adapter+0x16>
    3638:	2b02      	cmp	r3, #2
    363a:	f04f 0502 	mov.w	r5, #2
    363e:	d8f0      	bhi.n	3622 <d_growable_string_callback_adapter+0x42>
    3640:	e7f2      	b.n	3628 <d_growable_string_callback_adapter+0x48>
    3642:	9001      	str	r0, [sp, #4]
    3644:	6820      	ldr	r0, [r4, #0]
    3646:	f008 ff4d 	bl	c4e4 <free>
    364a:	9b01      	ldr	r3, [sp, #4]
    364c:	2201      	movs	r2, #1
    364e:	e9c4 3300 	strd	r3, r3, [r4]
    3652:	e9c4 3202 	strd	r3, r2, [r4, #8]
    3656:	e7de      	b.n	3616 <d_growable_string_callback_adapter+0x36>

00003658 <next_is_type_qual.isra.0>:
    3658:	7803      	ldrb	r3, [r0, #0]
    365a:	2b72      	cmp	r3, #114	; 0x72
    365c:	d007      	beq.n	366e <next_is_type_qual.isra.0+0x16>
    365e:	2b56      	cmp	r3, #86	; 0x56
    3660:	d005      	beq.n	366e <next_is_type_qual.isra.0+0x16>
    3662:	2b4b      	cmp	r3, #75	; 0x4b
    3664:	d003      	beq.n	366e <next_is_type_qual.isra.0+0x16>
    3666:	2b44      	cmp	r3, #68	; 0x44
    3668:	d003      	beq.n	3672 <next_is_type_qual.isra.0+0x1a>
    366a:	2000      	movs	r0, #0
    366c:	4770      	bx	lr
    366e:	2001      	movs	r0, #1
    3670:	4770      	bx	lr
    3672:	7840      	ldrb	r0, [r0, #1]
    3674:	f000 03df 	and.w	r3, r0, #223	; 0xdf
    3678:	2b4f      	cmp	r3, #79	; 0x4f
    367a:	d0f8      	beq.n	366e <next_is_type_qual.isra.0+0x16>
    367c:	3877      	subs	r0, #119	; 0x77
    367e:	2801      	cmp	r0, #1
    3680:	bf8c      	ite	hi
    3682:	2000      	movhi	r0, #0
    3684:	2001      	movls	r0, #1
    3686:	4770      	bx	lr

00003688 <d_append_char>:
    3688:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    368c:	2bff      	cmp	r3, #255	; 0xff
    368e:	b570      	push	{r4, r5, r6, lr}
    3690:	4604      	mov	r4, r0
    3692:	460d      	mov	r5, r1
    3694:	d006      	beq.n	36a4 <d_append_char+0x1c>
    3696:	1c5a      	adds	r2, r3, #1
    3698:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    369c:	54e5      	strb	r5, [r4, r3]
    369e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    36a2:	bd70      	pop	{r4, r5, r6, pc}
    36a4:	2600      	movs	r6, #0
    36a6:	4619      	mov	r1, r3
    36a8:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    36ac:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    36b0:	4798      	blx	r3
    36b2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    36b6:	2201      	movs	r2, #1
    36b8:	4413      	add	r3, r2
    36ba:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    36be:	4633      	mov	r3, r6
    36c0:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    36c4:	54e5      	strb	r5, [r4, r3]
    36c6:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    36ca:	bd70      	pop	{r4, r5, r6, pc}

000036cc <d_lookup_template_argument>:
    36cc:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
    36d0:	b19b      	cbz	r3, 36fa <d_lookup_template_argument+0x2e>
    36d2:	68ca      	ldr	r2, [r1, #12]
    36d4:	685b      	ldr	r3, [r3, #4]
    36d6:	2a00      	cmp	r2, #0
    36d8:	691b      	ldr	r3, [r3, #16]
    36da:	db09      	blt.n	36f0 <d_lookup_template_argument+0x24>
    36dc:	b923      	cbnz	r3, 36e8 <d_lookup_template_argument+0x1c>
    36de:	e007      	b.n	36f0 <d_lookup_template_argument+0x24>
    36e0:	b142      	cbz	r2, 36f4 <d_lookup_template_argument+0x28>
    36e2:	691b      	ldr	r3, [r3, #16]
    36e4:	3a01      	subs	r2, #1
    36e6:	b11b      	cbz	r3, 36f0 <d_lookup_template_argument+0x24>
    36e8:	7819      	ldrb	r1, [r3, #0]
    36ea:	292f      	cmp	r1, #47	; 0x2f
    36ec:	d0f8      	beq.n	36e0 <d_lookup_template_argument+0x14>
    36ee:	2300      	movs	r3, #0
    36f0:	4618      	mov	r0, r3
    36f2:	4770      	bx	lr
    36f4:	68db      	ldr	r3, [r3, #12]
    36f6:	4618      	mov	r0, r3
    36f8:	4770      	bx	lr
    36fa:	2201      	movs	r2, #1
    36fc:	f8c0 2118 	str.w	r2, [r0, #280]	; 0x118
    3700:	e7f6      	b.n	36f0 <d_lookup_template_argument+0x24>
    3702:	bf00      	nop

00003704 <d_find_pack>:
    3704:	2900      	cmp	r1, #0
    3706:	d040      	beq.n	378a <d_find_pack+0x86>
    3708:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    370c:	f8df 8084 	ldr.w	r8, [pc, #132]	; 3794 <d_find_pack+0x90>
    3710:	4f1f      	ldr	r7, [pc, #124]	; (3790 <d_find_pack+0x8c>)
    3712:	4605      	mov	r5, r0
    3714:	460c      	mov	r4, r1
    3716:	2601      	movs	r6, #1
    3718:	7823      	ldrb	r3, [r4, #0]
    371a:	2b08      	cmp	r3, #8
    371c:	d813      	bhi.n	3746 <d_find_pack+0x42>
    371e:	2b08      	cmp	r3, #8
    3720:	d81e      	bhi.n	3760 <d_find_pack+0x5c>
    3722:	e8df f003 	tbb	[pc, r3]
    3726:	1d0d      	.short	0x1d0d
    3728:	271d1d1d 	.word	0x271d1d1d
    372c:	230d      	.short	0x230d
    372e:	23          	.byte	0x23
    372f:	00          	.byte	0x00
    3730:	2b17      	cmp	r3, #23
    3732:	d915      	bls.n	3760 <d_find_pack+0x5c>
    3734:	3b18      	subs	r3, #24
    3736:	b2db      	uxtb	r3, r3
    3738:	fa27 f303 	lsr.w	r3, r7, r3
    373c:	07db      	lsls	r3, r3, #31
    373e:	d50f      	bpl.n	3760 <d_find_pack+0x5c>
    3740:	2000      	movs	r0, #0
    3742:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3746:	2b2c      	cmp	r3, #44	; 0x2c
    3748:	d9f2      	bls.n	3730 <d_find_pack+0x2c>
    374a:	3b32      	subs	r3, #50	; 0x32
    374c:	b2db      	uxtb	r3, r3
    374e:	2b1b      	cmp	r3, #27
    3750:	d806      	bhi.n	3760 <d_find_pack+0x5c>
    3752:	fa06 f203 	lsl.w	r2, r6, r3
    3756:	ea12 0f08 	tst.w	r2, r8
    375a:	d1f1      	bne.n	3740 <d_find_pack+0x3c>
    375c:	2b01      	cmp	r3, #1
    375e:	d005      	beq.n	376c <d_find_pack+0x68>
    3760:	68e1      	ldr	r1, [r4, #12]
    3762:	4628      	mov	r0, r5
    3764:	f7ff ffce 	bl	3704 <d_find_pack>
    3768:	2800      	cmp	r0, #0
    376a:	d1ea      	bne.n	3742 <d_find_pack+0x3e>
    376c:	6924      	ldr	r4, [r4, #16]
    376e:	2c00      	cmp	r4, #0
    3770:	d1d2      	bne.n	3718 <d_find_pack+0x14>
    3772:	e7e5      	b.n	3740 <d_find_pack+0x3c>
    3774:	4621      	mov	r1, r4
    3776:	4628      	mov	r0, r5
    3778:	f7ff ffa8 	bl	36cc <d_lookup_template_argument>
    377c:	2800      	cmp	r0, #0
    377e:	d0df      	beq.n	3740 <d_find_pack+0x3c>
    3780:	7803      	ldrb	r3, [r0, #0]
    3782:	2b2f      	cmp	r3, #47	; 0x2f
    3784:	d1dc      	bne.n	3740 <d_find_pack+0x3c>
    3786:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    378a:	2000      	movs	r0, #0
    378c:	4770      	bx	lr
    378e:	bf00      	nop
    3790:	00108001 	.word	0x00108001
    3794:	0ce30001 	.word	0x0ce30001

00003798 <d_append_string>:
    3798:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    379c:	4604      	mov	r4, r0
    379e:	4608      	mov	r0, r1
    37a0:	460d      	mov	r5, r1
    37a2:	f00b fa6d 	bl	ec80 <strlen>
    37a6:	b340      	cbz	r0, 37fa <d_append_string+0x62>
    37a8:	3d01      	subs	r5, #1
    37aa:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    37ae:	182f      	adds	r7, r5, r0
    37b0:	f04f 0800 	mov.w	r8, #0
    37b4:	e009      	b.n	37ca <d_append_string+0x32>
    37b6:	460b      	mov	r3, r1
    37b8:	42bd      	cmp	r5, r7
    37ba:	f101 0101 	add.w	r1, r1, #1
    37be:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    37c2:	54e6      	strb	r6, [r4, r3]
    37c4:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    37c8:	d017      	beq.n	37fa <d_append_string+0x62>
    37ca:	29ff      	cmp	r1, #255	; 0xff
    37cc:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    37d0:	d1f1      	bne.n	37b6 <d_append_string+0x1e>
    37d2:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    37d6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    37da:	4620      	mov	r0, r4
    37dc:	4798      	blx	r3
    37de:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    37e2:	2101      	movs	r1, #1
    37e4:	440b      	add	r3, r1
    37e6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    37ea:	2300      	movs	r3, #0
    37ec:	42bd      	cmp	r5, r7
    37ee:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    37f2:	54e6      	strb	r6, [r4, r3]
    37f4:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    37f8:	d1e7      	bne.n	37ca <d_append_string+0x32>
    37fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    37fe:	bf00      	nop

00003800 <d_template_param>:
    3800:	b538      	push	{r3, r4, r5, lr}
    3802:	68c3      	ldr	r3, [r0, #12]
    3804:	781a      	ldrb	r2, [r3, #0]
    3806:	2a54      	cmp	r2, #84	; 0x54
    3808:	d124      	bne.n	3854 <d_template_param+0x54>
    380a:	1c5a      	adds	r2, r3, #1
    380c:	60c2      	str	r2, [r0, #12]
    380e:	785a      	ldrb	r2, [r3, #1]
    3810:	2a5f      	cmp	r2, #95	; 0x5f
    3812:	4604      	mov	r4, r0
    3814:	d020      	beq.n	3858 <d_template_param+0x58>
    3816:	2a6e      	cmp	r2, #110	; 0x6e
    3818:	d01c      	beq.n	3854 <d_template_param+0x54>
    381a:	f7ff fdbd 	bl	3398 <d_number>
    381e:	1c41      	adds	r1, r0, #1
    3820:	d418      	bmi.n	3854 <d_template_param+0x54>
    3822:	68e3      	ldr	r3, [r4, #12]
    3824:	781a      	ldrb	r2, [r3, #0]
    3826:	2a5f      	cmp	r2, #95	; 0x5f
    3828:	d114      	bne.n	3854 <d_template_param+0x54>
    382a:	3301      	adds	r3, #1
    382c:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
    3830:	4282      	cmp	r2, r0
    3832:	60e3      	str	r3, [r4, #12]
    3834:	da0e      	bge.n	3854 <d_template_param+0x54>
    3836:	6923      	ldr	r3, [r4, #16]
    3838:	eb02 0c82 	add.w	ip, r2, r2, lsl #2
    383c:	eb03 008c 	add.w	r0, r3, ip, lsl #2
    3840:	3201      	adds	r2, #1
    3842:	2500      	movs	r5, #0
    3844:	e9c0 5501 	strd	r5, r5, [r0, #4]
    3848:	6162      	str	r2, [r4, #20]
    384a:	2205      	movs	r2, #5
    384c:	f803 202c 	strb.w	r2, [r3, ip, lsl #2]
    3850:	60c1      	str	r1, [r0, #12]
    3852:	bd38      	pop	{r3, r4, r5, pc}
    3854:	2000      	movs	r0, #0
    3856:	bd38      	pop	{r3, r4, r5, pc}
    3858:	3302      	adds	r3, #2
    385a:	2100      	movs	r1, #0
    385c:	e7e6      	b.n	382c <d_template_param+0x2c>
    385e:	bf00      	nop

00003860 <d_append_num>:
    3860:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3864:	b088      	sub	sp, #32
    3866:	460a      	mov	r2, r1
    3868:	4604      	mov	r4, r0
    386a:	491a      	ldr	r1, [pc, #104]	; (38d4 <d_append_num+0x74>)
    386c:	a801      	add	r0, sp, #4
    386e:	f006 fe89 	bl	a584 <sprintf>
    3872:	a801      	add	r0, sp, #4
    3874:	f00b fa04 	bl	ec80 <strlen>
    3878:	b340      	cbz	r0, 38cc <d_append_num+0x6c>
    387a:	ad01      	add	r5, sp, #4
    387c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    3880:	182f      	adds	r7, r5, r0
    3882:	f04f 0800 	mov.w	r8, #0
    3886:	e009      	b.n	389c <d_append_num+0x3c>
    3888:	460b      	mov	r3, r1
    388a:	42bd      	cmp	r5, r7
    388c:	f101 0101 	add.w	r1, r1, #1
    3890:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    3894:	54e6      	strb	r6, [r4, r3]
    3896:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    389a:	d017      	beq.n	38cc <d_append_num+0x6c>
    389c:	29ff      	cmp	r1, #255	; 0xff
    389e:	f815 6b01 	ldrb.w	r6, [r5], #1
    38a2:	d1f1      	bne.n	3888 <d_append_num+0x28>
    38a4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    38a8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    38ac:	4620      	mov	r0, r4
    38ae:	4798      	blx	r3
    38b0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    38b4:	2101      	movs	r1, #1
    38b6:	440b      	add	r3, r1
    38b8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    38bc:	2300      	movs	r3, #0
    38be:	42bd      	cmp	r5, r7
    38c0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    38c4:	54e6      	strb	r6, [r4, r3]
    38c6:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    38ca:	d1e7      	bne.n	389c <d_append_num+0x3c>
    38cc:	b008      	add	sp, #32
    38ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    38d2:	bf00      	nop
    38d4:	20001cb0 	.word	0x20001cb0

000038d8 <d_source_name>:
    38d8:	b570      	push	{r4, r5, r6, lr}
    38da:	4604      	mov	r4, r0
    38dc:	f7ff fd5c 	bl	3398 <d_number>
    38e0:	1e05      	subs	r5, r0, #0
    38e2:	dd46      	ble.n	3972 <d_source_name+0x9a>
    38e4:	68e6      	ldr	r6, [r4, #12]
    38e6:	6863      	ldr	r3, [r4, #4]
    38e8:	1b9b      	subs	r3, r3, r6
    38ea:	429d      	cmp	r5, r3
    38ec:	dc3e      	bgt.n	396c <d_source_name+0x94>
    38ee:	68a2      	ldr	r2, [r4, #8]
    38f0:	1973      	adds	r3, r6, r5
    38f2:	0752      	lsls	r2, r2, #29
    38f4:	60e3      	str	r3, [r4, #12]
    38f6:	d504      	bpl.n	3902 <d_source_name+0x2a>
    38f8:	5d72      	ldrb	r2, [r6, r5]
    38fa:	2a24      	cmp	r2, #36	; 0x24
    38fc:	bf04      	itt	eq
    38fe:	3301      	addeq	r3, #1
    3900:	60e3      	streq	r3, [r4, #12]
    3902:	2d09      	cmp	r5, #9
    3904:	dd22      	ble.n	394c <d_source_name+0x74>
    3906:	492a      	ldr	r1, [pc, #168]	; (39b0 <d_source_name+0xd8>)
    3908:	2208      	movs	r2, #8
    390a:	4630      	mov	r0, r6
    390c:	f009 f8a2 	bl	ca54 <memcmp>
    3910:	b930      	cbnz	r0, 3920 <d_source_name+0x48>
    3912:	7a33      	ldrb	r3, [r6, #8]
    3914:	2b2e      	cmp	r3, #46	; 0x2e
    3916:	d02e      	beq.n	3976 <d_source_name+0x9e>
    3918:	2b5f      	cmp	r3, #95	; 0x5f
    391a:	d02c      	beq.n	3976 <d_source_name+0x9e>
    391c:	2b24      	cmp	r3, #36	; 0x24
    391e:	d02a      	beq.n	3976 <d_source_name+0x9e>
    3920:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    3924:	4293      	cmp	r3, r2
    3926:	da21      	bge.n	396c <d_source_name+0x94>
    3928:	6920      	ldr	r0, [r4, #16]
    392a:	eb03 0283 	add.w	r2, r3, r3, lsl #2
    392e:	eb00 0082 	add.w	r0, r0, r2, lsl #2
    3932:	3301      	adds	r3, #1
    3934:	2200      	movs	r2, #0
    3936:	e9c0 2201 	strd	r2, r2, [r0, #4]
    393a:	6163      	str	r3, [r4, #20]
    393c:	2300      	movs	r3, #0
    393e:	7003      	strb	r3, [r0, #0]
    3940:	e9c0 3301 	strd	r3, r3, [r0, #4]
    3944:	e9c0 6503 	strd	r6, r5, [r0, #12]
    3948:	62a0      	str	r0, [r4, #40]	; 0x28
    394a:	bd70      	pop	{r4, r5, r6, pc}
    394c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    3950:	4293      	cmp	r3, r2
    3952:	da0b      	bge.n	396c <d_source_name+0x94>
    3954:	6920      	ldr	r0, [r4, #16]
    3956:	eb03 0283 	add.w	r2, r3, r3, lsl #2
    395a:	eb00 0082 	add.w	r0, r0, r2, lsl #2
    395e:	3301      	adds	r3, #1
    3960:	2200      	movs	r2, #0
    3962:	e9c0 2201 	strd	r2, r2, [r0, #4]
    3966:	6163      	str	r3, [r4, #20]
    3968:	2e00      	cmp	r6, #0
    396a:	d1e7      	bne.n	393c <d_source_name+0x64>
    396c:	2000      	movs	r0, #0
    396e:	62a0      	str	r0, [r4, #40]	; 0x28
    3970:	bd70      	pop	{r4, r5, r6, pc}
    3972:	2000      	movs	r0, #0
    3974:	bd70      	pop	{r4, r5, r6, pc}
    3976:	7a73      	ldrb	r3, [r6, #9]
    3978:	2b4e      	cmp	r3, #78	; 0x4e
    397a:	d1d1      	bne.n	3920 <d_source_name+0x48>
    397c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    397e:	6963      	ldr	r3, [r4, #20]
    3980:	69a1      	ldr	r1, [r4, #24]
    3982:	3216      	adds	r2, #22
    3984:	1b52      	subs	r2, r2, r5
    3986:	428b      	cmp	r3, r1
    3988:	62e2      	str	r2, [r4, #44]	; 0x2c
    398a:	daef      	bge.n	396c <d_source_name+0x94>
    398c:	6922      	ldr	r2, [r4, #16]
    398e:	eb03 0083 	add.w	r0, r3, r3, lsl #2
    3992:	0081      	lsls	r1, r0, #2
    3994:	3301      	adds	r3, #1
    3996:	6163      	str	r3, [r4, #20]
    3998:	eb02 0080 	add.w	r0, r2, r0, lsl #2
    399c:	2300      	movs	r3, #0
    399e:	e9c0 3301 	strd	r3, r3, [r0, #4]
    39a2:	5453      	strb	r3, [r2, r1]
    39a4:	4a03      	ldr	r2, [pc, #12]	; (39b4 <d_source_name+0xdc>)
    39a6:	2315      	movs	r3, #21
    39a8:	e9c0 2303 	strd	r2, r3, [r0, #12]
    39ac:	e7df      	b.n	396e <d_source_name+0x96>
    39ae:	bf00      	nop
    39b0:	20002000 	.word	0x20002000
    39b4:	2000200c 	.word	0x2000200c

000039b8 <d_substitution>:
    39b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    39bc:	68c3      	ldr	r3, [r0, #12]
    39be:	781a      	ldrb	r2, [r3, #0]
    39c0:	2a53      	cmp	r2, #83	; 0x53
    39c2:	d131      	bne.n	3a28 <d_substitution+0x70>
    39c4:	1c5a      	adds	r2, r3, #1
    39c6:	60c2      	str	r2, [r0, #12]
    39c8:	785a      	ldrb	r2, [r3, #1]
    39ca:	4604      	mov	r4, r0
    39cc:	b3a2      	cbz	r2, 3a38 <d_substitution+0x80>
    39ce:	1c9a      	adds	r2, r3, #2
    39d0:	60c2      	str	r2, [r0, #12]
    39d2:	785a      	ldrb	r2, [r3, #1]
    39d4:	2a5f      	cmp	r2, #95	; 0x5f
    39d6:	d044      	beq.n	3a62 <d_substitution+0xaa>
    39d8:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
    39dc:	b2d8      	uxtb	r0, r3
    39de:	2809      	cmp	r0, #9
    39e0:	d826      	bhi.n	3a30 <d_substitution+0x78>
    39e2:	2100      	movs	r1, #0
    39e4:	e00d      	b.n	3a02 <d_substitution+0x4a>
    39e6:	3b30      	subs	r3, #48	; 0x30
    39e8:	4299      	cmp	r1, r3
    39ea:	d81d      	bhi.n	3a28 <d_substitution+0x70>
    39ec:	68e0      	ldr	r0, [r4, #12]
    39ee:	7802      	ldrb	r2, [r0, #0]
    39f0:	4619      	mov	r1, r3
    39f2:	1c45      	adds	r5, r0, #1
    39f4:	b11a      	cbz	r2, 39fe <d_substitution+0x46>
    39f6:	60e5      	str	r5, [r4, #12]
    39f8:	7802      	ldrb	r2, [r0, #0]
    39fa:	2a5f      	cmp	r2, #95	; 0x5f
    39fc:	d03b      	beq.n	3a76 <d_substitution+0xbe>
    39fe:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
    3a02:	b2d8      	uxtb	r0, r3
    3a04:	2809      	cmp	r0, #9
    3a06:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
    3a0a:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
    3a0e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    3a12:	d9e8      	bls.n	39e6 <d_substitution+0x2e>
    3a14:	f1bc 0f19 	cmp.w	ip, #25
    3a18:	d806      	bhi.n	3a28 <d_substitution+0x70>
    3a1a:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
    3a1e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    3a22:	3b37      	subs	r3, #55	; 0x37
    3a24:	4299      	cmp	r1, r3
    3a26:	d9e1      	bls.n	39ec <d_substitution+0x34>
    3a28:	2500      	movs	r5, #0
    3a2a:	4628      	mov	r0, r5
    3a2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3a30:	f1a2 0041 	sub.w	r0, r2, #65	; 0x41
    3a34:	2819      	cmp	r0, #25
    3a36:	d9d4      	bls.n	39e2 <d_substitution+0x2a>
    3a38:	68a3      	ldr	r3, [r4, #8]
    3a3a:	f003 0308 	and.w	r3, r3, #8
    3a3e:	2b00      	cmp	r3, #0
    3a40:	bf14      	ite	ne
    3a42:	2501      	movne	r5, #1
    3a44:	2500      	moveq	r5, #0
    3a46:	d100      	bne.n	3a4a <d_substitution+0x92>
    3a48:	b9b9      	cbnz	r1, 3a7a <d_substitution+0xc2>
    3a4a:	4b3f      	ldr	r3, [pc, #252]	; (3b48 <d_substitution+0x190>)
    3a4c:	2174      	movs	r1, #116	; 0x74
    3a4e:	f103 00a8 	add.w	r0, r3, #168	; 0xa8
    3a52:	e001      	b.n	3a58 <d_substitution+0xa0>
    3a54:	f813 1f1c 	ldrb.w	r1, [r3, #28]!
    3a58:	4291      	cmp	r1, r2
    3a5a:	d015      	beq.n	3a88 <d_substitution+0xd0>
    3a5c:	4283      	cmp	r3, r0
    3a5e:	d1f9      	bne.n	3a54 <d_substitution+0x9c>
    3a60:	e7e2      	b.n	3a28 <d_substitution+0x70>
    3a62:	2300      	movs	r3, #0
    3a64:	6a22      	ldr	r2, [r4, #32]
    3a66:	429a      	cmp	r2, r3
    3a68:	d9de      	bls.n	3a28 <d_substitution+0x70>
    3a6a:	69e2      	ldr	r2, [r4, #28]
    3a6c:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
    3a70:	4628      	mov	r0, r5
    3a72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    3a76:	3301      	adds	r3, #1
    3a78:	e7f4      	b.n	3a64 <d_substitution+0xac>
    3a7a:	68e3      	ldr	r3, [r4, #12]
    3a7c:	781b      	ldrb	r3, [r3, #0]
    3a7e:	3b43      	subs	r3, #67	; 0x43
    3a80:	2b01      	cmp	r3, #1
    3a82:	bf98      	it	ls
    3a84:	460d      	movls	r5, r1
    3a86:	e7e0      	b.n	3a4a <d_substitution+0x92>
    3a88:	695e      	ldr	r6, [r3, #20]
    3a8a:	2e00      	cmp	r6, #0
    3a8c:	d054      	beq.n	3b38 <d_substitution+0x180>
    3a8e:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
    3a92:	4282      	cmp	r2, r0
    3a94:	f8d3 8018 	ldr.w	r8, [r3, #24]
    3a98:	da53      	bge.n	3b42 <d_substitution+0x18a>
    3a9a:	6927      	ldr	r7, [r4, #16]
    3a9c:	eb02 0c82 	add.w	ip, r2, r2, lsl #2
    3aa0:	eb07 018c 	add.w	r1, r7, ip, lsl #2
    3aa4:	f04f 0e00 	mov.w	lr, #0
    3aa8:	e9c1 ee01 	strd	lr, lr, [r1, #4]
    3aac:	3201      	adds	r2, #1
    3aae:	f04f 0e18 	mov.w	lr, #24
    3ab2:	6162      	str	r2, [r4, #20]
    3ab4:	f807 e02c 	strb.w	lr, [r7, ip, lsl #2]
    3ab8:	e9c1 6803 	strd	r6, r8, [r1, #12]
    3abc:	62a1      	str	r1, [r4, #40]	; 0x28
    3abe:	2d00      	cmp	r5, #0
    3ac0:	d037      	beq.n	3b32 <d_substitution+0x17a>
    3ac2:	e9d3 7103 	ldrd	r7, r1, [r3, #12]
    3ac6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    3ac8:	4282      	cmp	r2, r0
    3aca:	440b      	add	r3, r1
    3acc:	62e3      	str	r3, [r4, #44]	; 0x2c
    3ace:	da36      	bge.n	3b3e <d_substitution+0x186>
    3ad0:	6923      	ldr	r3, [r4, #16]
    3ad2:	eb02 0082 	add.w	r0, r2, r2, lsl #2
    3ad6:	eb03 0580 	add.w	r5, r3, r0, lsl #2
    3ada:	3201      	adds	r2, #1
    3adc:	2600      	movs	r6, #0
    3ade:	e9c5 6601 	strd	r6, r6, [r5, #4]
    3ae2:	6162      	str	r2, [r4, #20]
    3ae4:	2218      	movs	r2, #24
    3ae6:	f803 2020 	strb.w	r2, [r3, r0, lsl #2]
    3aea:	e9c5 7103 	strd	r7, r1, [r5, #12]
    3aee:	68e3      	ldr	r3, [r4, #12]
    3af0:	781a      	ldrb	r2, [r3, #0]
    3af2:	2a42      	cmp	r2, #66	; 0x42
    3af4:	d199      	bne.n	3a2a <d_substitution+0x72>
    3af6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    3af8:	3301      	adds	r3, #1
    3afa:	60e3      	str	r3, [r4, #12]
    3afc:	4620      	mov	r0, r4
    3afe:	f7ff feeb 	bl	38d8 <d_source_name>
    3b02:	462a      	mov	r2, r5
    3b04:	4603      	mov	r3, r0
    3b06:	214d      	movs	r1, #77	; 0x4d
    3b08:	4620      	mov	r0, r4
    3b0a:	f7ff fbcd 	bl	32a8 <d_make_comp>
    3b0e:	68e3      	ldr	r3, [r4, #12]
    3b10:	781a      	ldrb	r2, [r3, #0]
    3b12:	2a42      	cmp	r2, #66	; 0x42
    3b14:	4605      	mov	r5, r0
    3b16:	d0ef      	beq.n	3af8 <d_substitution+0x140>
    3b18:	62a6      	str	r6, [r4, #40]	; 0x28
    3b1a:	2800      	cmp	r0, #0
    3b1c:	d084      	beq.n	3a28 <d_substitution+0x70>
    3b1e:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
    3b22:	4293      	cmp	r3, r2
    3b24:	da80      	bge.n	3a28 <d_substitution+0x70>
    3b26:	69e1      	ldr	r1, [r4, #28]
    3b28:	1c5a      	adds	r2, r3, #1
    3b2a:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
    3b2e:	6222      	str	r2, [r4, #32]
    3b30:	e77b      	b.n	3a2a <d_substitution+0x72>
    3b32:	e9d3 7101 	ldrd	r7, r1, [r3, #4]
    3b36:	e7c6      	b.n	3ac6 <d_substitution+0x10e>
    3b38:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
    3b3c:	e7bf      	b.n	3abe <d_substitution+0x106>
    3b3e:	2500      	movs	r5, #0
    3b40:	e7d5      	b.n	3aee <d_substitution+0x136>
    3b42:	2100      	movs	r1, #0
    3b44:	e7ba      	b.n	3abc <d_substitution+0x104>
    3b46:	bf00      	nop
    3b48:	20002404 	.word	0x20002404

00003b4c <d_type>:
    3b4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    3b50:	68c2      	ldr	r2, [r0, #12]
    3b52:	b083      	sub	sp, #12
    3b54:	4604      	mov	r4, r0
    3b56:	4610      	mov	r0, r2
    3b58:	f7ff fd7e 	bl	3658 <next_is_type_qual.isra.0>
    3b5c:	2800      	cmp	r0, #0
    3b5e:	d166      	bne.n	3c2e <d_type+0xe2>
    3b60:	7813      	ldrb	r3, [r2, #0]
    3b62:	2b5a      	cmp	r3, #90	; 0x5a
    3b64:	d831      	bhi.n	3bca <d_type+0x7e>
    3b66:	2b2f      	cmp	r3, #47	; 0x2f
    3b68:	d95c      	bls.n	3c24 <d_type+0xd8>
    3b6a:	3b30      	subs	r3, #48	; 0x30
    3b6c:	2b2a      	cmp	r3, #42	; 0x2a
    3b6e:	d859      	bhi.n	3c24 <d_type+0xd8>
    3b70:	e8df f013 	tbh	[pc, r3, lsl #1]
    3b74:	008c008c 	.word	0x008c008c
    3b78:	008c008c 	.word	0x008c008c
    3b7c:	008c008c 	.word	0x008c008c
    3b80:	008c008c 	.word	0x008c008c
    3b84:	008c008c 	.word	0x008c008c
    3b88:	00580058 	.word	0x00580058
    3b8c:	00580058 	.word	0x00580058
    3b90:	00580058 	.word	0x00580058
    3b94:	01d60058 	.word	0x01d60058
    3b98:	00d90058 	.word	0x00d90058
    3b9c:	005800ed 	.word	0x005800ed
    3ba0:	016000e7 	.word	0x016000e7
    3ba4:	00580058 	.word	0x00580058
    3ba8:	00580058 	.word	0x00580058
    3bac:	02180058 	.word	0x02180058
    3bb0:	00cb008c 	.word	0x00cb008c
    3bb4:	005800bd 	.word	0x005800bd
    3bb8:	019500af 	.word	0x019500af
    3bbc:	01be016e 	.word	0x01be016e
    3bc0:	00580058 	.word	0x00580058
    3bc4:	00580058 	.word	0x00580058
    3bc8:	008c      	.short	0x008c
    3bca:	3b61      	subs	r3, #97	; 0x61
    3bcc:	fa5f fc83 	uxtb.w	ip, r3
    3bd0:	f1bc 0f19 	cmp.w	ip, #25
    3bd4:	d826      	bhi.n	3c24 <d_type+0xd8>
    3bd6:	4dc4      	ldr	r5, [pc, #784]	; (3ee8 <d_type+0x39c>)
    3bd8:	2101      	movs	r1, #1
    3bda:	fa01 f10c 	lsl.w	r1, r1, ip
    3bde:	400d      	ands	r5, r1
    3be0:	b1ed      	cbz	r5, 3c1e <d_type+0xd2>
    3be2:	49c2      	ldr	r1, [pc, #776]	; (3eec <d_type+0x3a0>)
    3be4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
    3be8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
    3bec:	e9d4 3505 	ldrd	r3, r5, [r4, #20]
    3bf0:	42ab      	cmp	r3, r5
    3bf2:	f280 83c5 	bge.w	4380 <d_type+0x834>
    3bf6:	6926      	ldr	r6, [r4, #16]
    3bf8:	eb03 0c83 	add.w	ip, r3, r3, lsl #2
    3bfc:	eb06 058c 	add.w	r5, r6, ip, lsl #2
    3c00:	3301      	adds	r3, #1
    3c02:	e9c5 0001 	strd	r0, r0, [r5, #4]
    3c06:	6163      	str	r3, [r4, #20]
    3c08:	2327      	movs	r3, #39	; 0x27
    3c0a:	f806 302c 	strb.w	r3, [r6, ip, lsl #2]
    3c0e:	60e9      	str	r1, [r5, #12]
    3c10:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    3c12:	6849      	ldr	r1, [r1, #4]
    3c14:	3201      	adds	r2, #1
    3c16:	440b      	add	r3, r1
    3c18:	60e2      	str	r2, [r4, #12]
    3c1a:	62e3      	str	r3, [r4, #44]	; 0x2c
    3c1c:	e003      	b.n	3c26 <d_type+0xda>
    3c1e:	f1bc 0f14 	cmp.w	ip, #20
    3c22:	d048      	beq.n	3cb6 <d_type+0x16a>
    3c24:	2500      	movs	r5, #0
    3c26:	4628      	mov	r0, r5
    3c28:	b003      	add	sp, #12
    3c2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    3c2e:	2200      	movs	r2, #0
    3c30:	a901      	add	r1, sp, #4
    3c32:	4620      	mov	r0, r4
    3c34:	f001 fab4 	bl	51a0 <d_cv_qualifiers>
    3c38:	4605      	mov	r5, r0
    3c3a:	2800      	cmp	r0, #0
    3c3c:	d0f2      	beq.n	3c24 <d_type+0xd8>
    3c3e:	68e3      	ldr	r3, [r4, #12]
    3c40:	781b      	ldrb	r3, [r3, #0]
    3c42:	2b46      	cmp	r3, #70	; 0x46
    3c44:	4620      	mov	r0, r4
    3c46:	d01e      	beq.n	3c86 <d_type+0x13a>
    3c48:	f7ff ff80 	bl	3b4c <d_type>
    3c4c:	6028      	str	r0, [r5, #0]
    3c4e:	2800      	cmp	r0, #0
    3c50:	d0e8      	beq.n	3c24 <d_type+0xd8>
    3c52:	7803      	ldrb	r3, [r0, #0]
    3c54:	3b1f      	subs	r3, #31
    3c56:	2b01      	cmp	r3, #1
    3c58:	d805      	bhi.n	3c66 <d_type+0x11a>
    3c5a:	9a01      	ldr	r2, [sp, #4]
    3c5c:	68c3      	ldr	r3, [r0, #12]
    3c5e:	60c2      	str	r2, [r0, #12]
    3c60:	682a      	ldr	r2, [r5, #0]
    3c62:	9201      	str	r2, [sp, #4]
    3c64:	602b      	str	r3, [r5, #0]
    3c66:	9d01      	ldr	r5, [sp, #4]
    3c68:	2d00      	cmp	r5, #0
    3c6a:	d0db      	beq.n	3c24 <d_type+0xd8>
    3c6c:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
    3c70:	4293      	cmp	r3, r2
    3c72:	dad7      	bge.n	3c24 <d_type+0xd8>
    3c74:	69e1      	ldr	r1, [r4, #28]
    3c76:	1c5a      	adds	r2, r3, #1
    3c78:	4628      	mov	r0, r5
    3c7a:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
    3c7e:	6222      	str	r2, [r4, #32]
    3c80:	b003      	add	sp, #12
    3c82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    3c86:	f000 fbfd 	bl	4484 <d_function_type>
    3c8a:	e7df      	b.n	3c4c <d_type+0x100>
    3c8c:	4620      	mov	r0, r4
    3c8e:	f001 fd6b 	bl	5768 <d_name>
    3c92:	4605      	mov	r5, r0
    3c94:	9001      	str	r0, [sp, #4]
    3c96:	2d00      	cmp	r5, #0
    3c98:	d0c4      	beq.n	3c24 <d_type+0xd8>
    3c9a:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
    3c9e:	4293      	cmp	r3, r2
    3ca0:	dac0      	bge.n	3c24 <d_type+0xd8>
    3ca2:	69e1      	ldr	r1, [r4, #28]
    3ca4:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
    3ca8:	9d01      	ldr	r5, [sp, #4]
    3caa:	1c5a      	adds	r2, r3, #1
    3cac:	4628      	mov	r0, r5
    3cae:	6222      	str	r2, [r4, #32]
    3cb0:	b003      	add	sp, #12
    3cb2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    3cb6:	3201      	adds	r2, #1
    3cb8:	60e2      	str	r2, [r4, #12]
    3cba:	4620      	mov	r0, r4
    3cbc:	f7ff fe0c 	bl	38d8 <d_source_name>
    3cc0:	462b      	mov	r3, r5
    3cc2:	4602      	mov	r2, r0
    3cc4:	2128      	movs	r1, #40	; 0x28
    3cc6:	4620      	mov	r0, r4
    3cc8:	f7ff faee 	bl	32a8 <d_make_comp>
    3ccc:	4605      	mov	r5, r0
    3cce:	9001      	str	r0, [sp, #4]
    3cd0:	e7e1      	b.n	3c96 <d_type+0x14a>
    3cd2:	3201      	adds	r2, #1
    3cd4:	60e2      	str	r2, [r4, #12]
    3cd6:	4620      	mov	r0, r4
    3cd8:	f7ff ff38 	bl	3b4c <d_type>
    3cdc:	2300      	movs	r3, #0
    3cde:	4602      	mov	r2, r0
    3ce0:	2123      	movs	r1, #35	; 0x23
    3ce2:	4620      	mov	r0, r4
    3ce4:	f7ff fae0 	bl	32a8 <d_make_comp>
    3ce8:	4605      	mov	r5, r0
    3cea:	9001      	str	r0, [sp, #4]
    3cec:	e7d3      	b.n	3c96 <d_type+0x14a>
    3cee:	3201      	adds	r2, #1
    3cf0:	60e2      	str	r2, [r4, #12]
    3cf2:	4620      	mov	r0, r4
    3cf4:	f7ff ff2a 	bl	3b4c <d_type>
    3cf8:	2300      	movs	r3, #0
    3cfa:	4602      	mov	r2, r0
    3cfc:	2122      	movs	r1, #34	; 0x22
    3cfe:	4620      	mov	r0, r4
    3d00:	f7ff fad2 	bl	32a8 <d_make_comp>
    3d04:	4605      	mov	r5, r0
    3d06:	9001      	str	r0, [sp, #4]
    3d08:	e7c5      	b.n	3c96 <d_type+0x14a>
    3d0a:	3201      	adds	r2, #1
    3d0c:	60e2      	str	r2, [r4, #12]
    3d0e:	4620      	mov	r0, r4
    3d10:	f7ff ff1c 	bl	3b4c <d_type>
    3d14:	2300      	movs	r3, #0
    3d16:	4602      	mov	r2, r0
    3d18:	2124      	movs	r1, #36	; 0x24
    3d1a:	4620      	mov	r0, r4
    3d1c:	f7ff fac4 	bl	32a8 <d_make_comp>
    3d20:	4605      	mov	r5, r0
    3d22:	9001      	str	r0, [sp, #4]
    3d24:	e7b7      	b.n	3c96 <d_type+0x14a>
    3d26:	3201      	adds	r2, #1
    3d28:	60e2      	str	r2, [r4, #12]
    3d2a:	4620      	mov	r0, r4
    3d2c:	f7ff ff0e 	bl	3b4c <d_type>
    3d30:	2300      	movs	r3, #0
    3d32:	4602      	mov	r2, r0
    3d34:	2125      	movs	r1, #37	; 0x25
    3d36:	4620      	mov	r0, r4
    3d38:	f7ff fab6 	bl	32a8 <d_make_comp>
    3d3c:	4605      	mov	r5, r0
    3d3e:	9001      	str	r0, [sp, #4]
    3d40:	e7a9      	b.n	3c96 <d_type+0x14a>
    3d42:	4620      	mov	r0, r4
    3d44:	f000 fb9e 	bl	4484 <d_function_type>
    3d48:	4605      	mov	r5, r0
    3d4a:	9001      	str	r0, [sp, #4]
    3d4c:	e7a3      	b.n	3c96 <d_type+0x14a>
    3d4e:	1c53      	adds	r3, r2, #1
    3d50:	60e3      	str	r3, [r4, #12]
    3d52:	7853      	ldrb	r3, [r2, #1]
    3d54:	2b00      	cmp	r3, #0
    3d56:	f43f af65 	beq.w	3c24 <d_type+0xd8>
    3d5a:	1c93      	adds	r3, r2, #2
    3d5c:	60e3      	str	r3, [r4, #12]
    3d5e:	7853      	ldrb	r3, [r2, #1]
    3d60:	3b46      	subs	r3, #70	; 0x46
    3d62:	2b30      	cmp	r3, #48	; 0x30
    3d64:	f63f af5e 	bhi.w	3c24 <d_type+0xd8>
    3d68:	a101      	add	r1, pc, #4	; (adr r1, 3d70 <d_type+0x224>)
    3d6a:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
    3d6e:	bf00      	nop
    3d70:	00004011 	.word	0x00004011
    3d74:	00003c25 	.word	0x00003c25
    3d78:	00003c25 	.word	0x00003c25
    3d7c:	00003c25 	.word	0x00003c25
    3d80:	00003c25 	.word	0x00003c25
    3d84:	00003c25 	.word	0x00003c25
    3d88:	00003c25 	.word	0x00003c25
    3d8c:	00003c25 	.word	0x00003c25
    3d90:	00003c25 	.word	0x00003c25
    3d94:	00003c25 	.word	0x00003c25
    3d98:	00003c25 	.word	0x00003c25
    3d9c:	00003c25 	.word	0x00003c25
    3da0:	00003c25 	.word	0x00003c25
    3da4:	00003c25 	.word	0x00003c25
    3da8:	00003fd5 	.word	0x00003fd5
    3dac:	00003c25 	.word	0x00003c25
    3db0:	00003c25 	.word	0x00003c25
    3db4:	00003c25 	.word	0x00003c25
    3db8:	00003c25 	.word	0x00003c25
    3dbc:	00003c25 	.word	0x00003c25
    3dc0:	00003c25 	.word	0x00003c25
    3dc4:	00003c25 	.word	0x00003c25
    3dc8:	00003c25 	.word	0x00003c25
    3dcc:	00003c25 	.word	0x00003c25
    3dd0:	00003c25 	.word	0x00003c25
    3dd4:	00003c25 	.word	0x00003c25
    3dd8:	00003c25 	.word	0x00003c25
    3ddc:	000040a9 	.word	0x000040a9
    3de0:	00003c25 	.word	0x00003c25
    3de4:	0000407d 	.word	0x0000407d
    3de8:	00004297 	.word	0x00004297
    3dec:	00004267 	.word	0x00004267
    3df0:	00004105 	.word	0x00004105
    3df4:	00003c25 	.word	0x00003c25
    3df8:	000040d5 	.word	0x000040d5
    3dfc:	00004237 	.word	0x00004237
    3e00:	00003c25 	.word	0x00003c25
    3e04:	00003c25 	.word	0x00003c25
    3e08:	00003c25 	.word	0x00003c25
    3e0c:	00003c25 	.word	0x00003c25
    3e10:	00004207 	.word	0x00004207
    3e14:	00003c25 	.word	0x00003c25
    3e18:	000041ef 	.word	0x000041ef
    3e1c:	00003c25 	.word	0x00003c25
    3e20:	00003c25 	.word	0x00003c25
    3e24:	000041bf 	.word	0x000041bf
    3e28:	00003fd5 	.word	0x00003fd5
    3e2c:	0000418f 	.word	0x0000418f
    3e30:	00004135 	.word	0x00004135
    3e34:	3201      	adds	r2, #1
    3e36:	60e2      	str	r2, [r4, #12]
    3e38:	4620      	mov	r0, r4
    3e3a:	f7ff fe87 	bl	3b4c <d_type>
    3e3e:	2300      	movs	r3, #0
    3e40:	4602      	mov	r2, r0
    3e42:	2126      	movs	r1, #38	; 0x26
    3e44:	4620      	mov	r0, r4
    3e46:	f7ff fa2f 	bl	32a8 <d_make_comp>
    3e4a:	4605      	mov	r5, r0
    3e4c:	9001      	str	r0, [sp, #4]
    3e4e:	e722      	b.n	3c96 <d_type+0x14a>
    3e50:	4620      	mov	r0, r4
    3e52:	f7ff fcd5 	bl	3800 <d_template_param>
    3e56:	68e6      	ldr	r6, [r4, #12]
    3e58:	9001      	str	r0, [sp, #4]
    3e5a:	7833      	ldrb	r3, [r6, #0]
    3e5c:	2b49      	cmp	r3, #73	; 0x49
    3e5e:	4605      	mov	r5, r0
    3e60:	f47f af19 	bne.w	3c96 <d_type+0x14a>
    3e64:	6b63      	ldr	r3, [r4, #52]	; 0x34
    3e66:	2b00      	cmp	r3, #0
    3e68:	f040 8257 	bne.w	431a <d_type+0x7ce>
    3e6c:	2800      	cmp	r0, #0
    3e6e:	f43f aed9 	beq.w	3c24 <d_type+0xd8>
    3e72:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
    3e76:	428a      	cmp	r2, r1
    3e78:	f6bf aed4 	bge.w	3c24 <d_type+0xd8>
    3e7c:	69e1      	ldr	r1, [r4, #28]
    3e7e:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
    3e82:	3201      	adds	r2, #1
    3e84:	6222      	str	r2, [r4, #32]
    3e86:	7832      	ldrb	r2, [r6, #0]
    3e88:	3a49      	subs	r2, #73	; 0x49
    3e8a:	2a01      	cmp	r2, #1
    3e8c:	d805      	bhi.n	3e9a <d_type+0x34e>
    3e8e:	3601      	adds	r6, #1
    3e90:	60e6      	str	r6, [r4, #12]
    3e92:	4620      	mov	r0, r4
    3e94:	f000 fe0c 	bl	4ab0 <d_template_args_1>
    3e98:	4603      	mov	r3, r0
    3e9a:	462a      	mov	r2, r5
    3e9c:	e01c      	b.n	3ed8 <d_type+0x38c>
    3e9e:	7853      	ldrb	r3, [r2, #1]
    3ea0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    3ea4:	2a09      	cmp	r2, #9
    3ea6:	d905      	bls.n	3eb4 <d_type+0x368>
    3ea8:	2b5f      	cmp	r3, #95	; 0x5f
    3eaa:	d003      	beq.n	3eb4 <d_type+0x368>
    3eac:	3b41      	subs	r3, #65	; 0x41
    3eae:	2b19      	cmp	r3, #25
    3eb0:	f200 8226 	bhi.w	4300 <d_type+0x7b4>
    3eb4:	2100      	movs	r1, #0
    3eb6:	4620      	mov	r0, r4
    3eb8:	f7ff fd7e 	bl	39b8 <d_substitution>
    3ebc:	68e3      	ldr	r3, [r4, #12]
    3ebe:	9001      	str	r0, [sp, #4]
    3ec0:	781a      	ldrb	r2, [r3, #0]
    3ec2:	2a49      	cmp	r2, #73	; 0x49
    3ec4:	4605      	mov	r5, r0
    3ec6:	f47f aeae 	bne.w	3c26 <d_type+0xda>
    3eca:	3301      	adds	r3, #1
    3ecc:	60e3      	str	r3, [r4, #12]
    3ece:	4620      	mov	r0, r4
    3ed0:	f000 fdee 	bl	4ab0 <d_template_args_1>
    3ed4:	462a      	mov	r2, r5
    3ed6:	4603      	mov	r3, r0
    3ed8:	2104      	movs	r1, #4
    3eda:	4620      	mov	r0, r4
    3edc:	f7ff f9e4 	bl	32a8 <d_make_comp>
    3ee0:	4605      	mov	r5, r0
    3ee2:	9001      	str	r0, [sp, #4]
    3ee4:	e6d7      	b.n	3c96 <d_type+0x14a>
    3ee6:	bf00      	nop
    3ee8:	03ec7bff 	.word	0x03ec7bff
    3eec:	20001578 	.word	0x20001578
    3ef0:	3201      	adds	r2, #1
    3ef2:	60e2      	str	r2, [r4, #12]
    3ef4:	4620      	mov	r0, r4
    3ef6:	f7ff fcef 	bl	38d8 <d_source_name>
    3efa:	68e3      	ldr	r3, [r4, #12]
    3efc:	9001      	str	r0, [sp, #4]
    3efe:	781a      	ldrb	r2, [r3, #0]
    3f00:	2a49      	cmp	r2, #73	; 0x49
    3f02:	4605      	mov	r5, r0
    3f04:	f000 81e1 	beq.w	42ca <d_type+0x77e>
    3f08:	4620      	mov	r0, r4
    3f0a:	f7ff fe1f 	bl	3b4c <d_type>
    3f0e:	462b      	mov	r3, r5
    3f10:	4602      	mov	r2, r0
    3f12:	2121      	movs	r1, #33	; 0x21
    3f14:	4620      	mov	r0, r4
    3f16:	f7ff f9c7 	bl	32a8 <d_make_comp>
    3f1a:	4605      	mov	r5, r0
    3f1c:	9001      	str	r0, [sp, #4]
    3f1e:	e6ba      	b.n	3c96 <d_type+0x14a>
    3f20:	1c55      	adds	r5, r2, #1
    3f22:	60e5      	str	r5, [r4, #12]
    3f24:	7853      	ldrb	r3, [r2, #1]
    3f26:	2b5f      	cmp	r3, #95	; 0x5f
    3f28:	f000 81cd 	beq.w	42c6 <d_type+0x77a>
    3f2c:	3b30      	subs	r3, #48	; 0x30
    3f2e:	2b09      	cmp	r3, #9
    3f30:	f200 81d8 	bhi.w	42e4 <d_type+0x798>
    3f34:	462b      	mov	r3, r5
    3f36:	469c      	mov	ip, r3
    3f38:	3301      	adds	r3, #1
    3f3a:	60e3      	str	r3, [r4, #12]
    3f3c:	7819      	ldrb	r1, [r3, #0]
    3f3e:	3930      	subs	r1, #48	; 0x30
    3f40:	2909      	cmp	r1, #9
    3f42:	d9f8      	bls.n	3f36 <d_type+0x3ea>
    3f44:	e9d4 1005 	ldrd	r1, r0, [r4, #20]
    3f48:	4281      	cmp	r1, r0
    3f4a:	ebac 0202 	sub.w	r2, ip, r2
    3f4e:	f6bf ae69 	bge.w	3c24 <d_type+0xd8>
    3f52:	6927      	ldr	r7, [r4, #16]
    3f54:	eb01 0081 	add.w	r0, r1, r1, lsl #2
    3f58:	eb07 0680 	add.w	r6, r7, r0, lsl #2
    3f5c:	ea4f 0e80 	mov.w	lr, r0, lsl #2
    3f60:	2000      	movs	r0, #0
    3f62:	3101      	adds	r1, #1
    3f64:	4282      	cmp	r2, r0
    3f66:	e9c6 0001 	strd	r0, r0, [r6, #4]
    3f6a:	6161      	str	r1, [r4, #20]
    3f6c:	f77f ae5a 	ble.w	3c24 <d_type+0xd8>
    3f70:	e9c6 0001 	strd	r0, r0, [r6, #4]
    3f74:	f807 000e 	strb.w	r0, [r7, lr]
    3f78:	e9c6 5203 	strd	r5, r2, [r6, #12]
    3f7c:	f89c 2001 	ldrb.w	r2, [ip, #1]
    3f80:	461d      	mov	r5, r3
    3f82:	2a5f      	cmp	r2, #95	; 0x5f
    3f84:	f47f ae4e 	bne.w	3c24 <d_type+0xd8>
    3f88:	3501      	adds	r5, #1
    3f8a:	60e5      	str	r5, [r4, #12]
    3f8c:	4620      	mov	r0, r4
    3f8e:	f7ff fddd 	bl	3b4c <d_type>
    3f92:	4632      	mov	r2, r6
    3f94:	4603      	mov	r3, r0
    3f96:	212a      	movs	r1, #42	; 0x2a
    3f98:	4620      	mov	r0, r4
    3f9a:	f7ff f985 	bl	32a8 <d_make_comp>
    3f9e:	4605      	mov	r5, r0
    3fa0:	9001      	str	r0, [sp, #4]
    3fa2:	e678      	b.n	3c96 <d_type+0x14a>
    3fa4:	3201      	adds	r2, #1
    3fa6:	60e2      	str	r2, [r4, #12]
    3fa8:	4620      	mov	r0, r4
    3faa:	f7ff fdcf 	bl	3b4c <d_type>
    3fae:	4605      	mov	r5, r0
    3fb0:	2800      	cmp	r0, #0
    3fb2:	f43f ae37 	beq.w	3c24 <d_type+0xd8>
    3fb6:	4620      	mov	r0, r4
    3fb8:	f7ff fdc8 	bl	3b4c <d_type>
    3fbc:	4603      	mov	r3, r0
    3fbe:	2800      	cmp	r0, #0
    3fc0:	f43f ae30 	beq.w	3c24 <d_type+0xd8>
    3fc4:	462a      	mov	r2, r5
    3fc6:	212b      	movs	r1, #43	; 0x2b
    3fc8:	4620      	mov	r0, r4
    3fca:	f7ff f96d 	bl	32a8 <d_make_comp>
    3fce:	4605      	mov	r5, r0
    3fd0:	9001      	str	r0, [sp, #4]
    3fd2:	e660      	b.n	3c96 <d_type+0x14a>
    3fd4:	2301      	movs	r3, #1
    3fd6:	6b25      	ldr	r5, [r4, #48]	; 0x30
    3fd8:	6323      	str	r3, [r4, #48]	; 0x30
    3fda:	4620      	mov	r0, r4
    3fdc:	f000 fe30 	bl	4c40 <d_expression_1>
    3fe0:	6325      	str	r5, [r4, #48]	; 0x30
    3fe2:	4602      	mov	r2, r0
    3fe4:	2300      	movs	r3, #0
    3fe6:	2144      	movs	r1, #68	; 0x44
    3fe8:	4620      	mov	r0, r4
    3fea:	f7ff f95d 	bl	32a8 <d_make_comp>
    3fee:	4605      	mov	r5, r0
    3ff0:	9001      	str	r0, [sp, #4]
    3ff2:	2800      	cmp	r0, #0
    3ff4:	f43f ae16 	beq.w	3c24 <d_type+0xd8>
    3ff8:	68e3      	ldr	r3, [r4, #12]
    3ffa:	781a      	ldrb	r2, [r3, #0]
    3ffc:	2a00      	cmp	r2, #0
    3ffe:	f43f ae11 	beq.w	3c24 <d_type+0xd8>
    4002:	1c5a      	adds	r2, r3, #1
    4004:	60e2      	str	r2, [r4, #12]
    4006:	781b      	ldrb	r3, [r3, #0]
    4008:	2b45      	cmp	r3, #69	; 0x45
    400a:	f47f ae0b 	bne.w	3c24 <d_type+0xd8>
    400e:	e644      	b.n	3c9a <d_type+0x14e>
    4010:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
    4014:	428b      	cmp	r3, r1
    4016:	f280 81b5 	bge.w	4384 <d_type+0x838>
    401a:	6921      	ldr	r1, [r4, #16]
    401c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
    4020:	eb01 0580 	add.w	r5, r1, r0, lsl #2
    4024:	3301      	adds	r3, #1
    4026:	2600      	movs	r6, #0
    4028:	e9c5 6601 	strd	r6, r6, [r5, #4]
    402c:	6163      	str	r3, [r4, #20]
    402e:	232c      	movs	r3, #44	; 0x2c
    4030:	f801 3020 	strb.w	r3, [r1, r0, lsl #2]
    4034:	7893      	ldrb	r3, [r2, #2]
    4036:	9501      	str	r5, [sp, #4]
    4038:	3b30      	subs	r3, #48	; 0x30
    403a:	b2db      	uxtb	r3, r3
    403c:	2b09      	cmp	r3, #9
    403e:	bf94      	ite	ls
    4040:	2301      	movls	r3, #1
    4042:	4633      	movhi	r3, r6
    4044:	822b      	strh	r3, [r5, #16]
    4046:	d802      	bhi.n	404e <d_type+0x502>
    4048:	4620      	mov	r0, r4
    404a:	f7ff f9a5 	bl	3398 <d_number>
    404e:	4620      	mov	r0, r4
    4050:	f7ff fd7c 	bl	3b4c <d_type>
    4054:	60e8      	str	r0, [r5, #12]
    4056:	2800      	cmp	r0, #0
    4058:	f43f ade4 	beq.w	3c24 <d_type+0xd8>
    405c:	4620      	mov	r0, r4
    405e:	f7ff f99b 	bl	3398 <d_number>
    4062:	68e2      	ldr	r2, [r4, #12]
    4064:	7813      	ldrb	r3, [r2, #0]
    4066:	b113      	cbz	r3, 406e <d_type+0x522>
    4068:	1c53      	adds	r3, r2, #1
    406a:	60e3      	str	r3, [r4, #12]
    406c:	7813      	ldrb	r3, [r2, #0]
    406e:	f1a3 0373 	sub.w	r3, r3, #115	; 0x73
    4072:	fab3 f383 	clz	r3, r3
    4076:	095b      	lsrs	r3, r3, #5
    4078:	826b      	strh	r3, [r5, #18]
    407a:	e5d4      	b.n	3c26 <d_type+0xda>
    407c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4080:	4293      	cmp	r3, r2
    4082:	f6bf adcf 	bge.w	3c24 <d_type+0xd8>
    4086:	6922      	ldr	r2, [r4, #16]
    4088:	49c0      	ldr	r1, [pc, #768]	; (438c <d_type+0x840>)
    408a:	eb03 0583 	add.w	r5, r3, r3, lsl #2
    408e:	00a8      	lsls	r0, r5, #2
    4090:	3301      	adds	r3, #1
    4092:	6163      	str	r3, [r4, #20]
    4094:	eb02 0585 	add.w	r5, r2, r5, lsl #2
    4098:	2300      	movs	r3, #0
    409a:	e9c5 3301 	strd	r3, r3, [r5, #4]
    409e:	5413      	strb	r3, [r2, r0]
    40a0:	230e      	movs	r3, #14
    40a2:	e9c5 1303 	strd	r1, r3, [r5, #12]
    40a6:	e5be      	b.n	3c26 <d_type+0xda>
    40a8:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    40ac:	4293      	cmp	r3, r2
    40ae:	f6bf adb9 	bge.w	3c24 <d_type+0xd8>
    40b2:	6922      	ldr	r2, [r4, #16]
    40b4:	49b6      	ldr	r1, [pc, #728]	; (4390 <d_type+0x844>)
    40b6:	eb03 0583 	add.w	r5, r3, r3, lsl #2
    40ba:	00a8      	lsls	r0, r5, #2
    40bc:	3301      	adds	r3, #1
    40be:	6163      	str	r3, [r4, #20]
    40c0:	eb02 0585 	add.w	r5, r2, r5, lsl #2
    40c4:	2300      	movs	r3, #0
    40c6:	e9c5 3301 	strd	r3, r3, [r5, #4]
    40ca:	5413      	strb	r3, [r2, r0]
    40cc:	2304      	movs	r3, #4
    40ce:	e9c5 1303 	strd	r1, r3, [r5, #12]
    40d2:	e5a8      	b.n	3c26 <d_type+0xda>
    40d4:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    40d8:	4293      	cmp	r3, r2
    40da:	f280 816b 	bge.w	43b4 <d_type+0x868>
    40de:	6922      	ldr	r2, [r4, #16]
    40e0:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    40e4:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    40e8:	3301      	adds	r3, #1
    40ea:	2000      	movs	r0, #0
    40ec:	e9c5 0001 	strd	r0, r0, [r5, #4]
    40f0:	6163      	str	r3, [r4, #20]
    40f2:	2327      	movs	r3, #39	; 0x27
    40f4:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    40f8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    40fa:	4aa6      	ldr	r2, [pc, #664]	; (4394 <d_type+0x848>)
    40fc:	60ea      	str	r2, [r5, #12]
    40fe:	3304      	adds	r3, #4
    4100:	62e3      	str	r3, [r4, #44]	; 0x2c
    4102:	e590      	b.n	3c26 <d_type+0xda>
    4104:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4108:	4293      	cmp	r3, r2
    410a:	f280 8153 	bge.w	43b4 <d_type+0x868>
    410e:	6922      	ldr	r2, [r4, #16]
    4110:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4114:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4118:	3301      	adds	r3, #1
    411a:	2000      	movs	r0, #0
    411c:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4120:	6163      	str	r3, [r4, #20]
    4122:	2327      	movs	r3, #39	; 0x27
    4124:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    4128:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    412a:	4a9b      	ldr	r2, [pc, #620]	; (4398 <d_type+0x84c>)
    412c:	60ea      	str	r2, [r5, #12]
    412e:	3309      	adds	r3, #9
    4130:	62e3      	str	r3, [r4, #44]	; 0x2c
    4132:	e578      	b.n	3c26 <d_type+0xda>
    4134:	7893      	ldrb	r3, [r2, #2]
    4136:	2b5f      	cmp	r3, #95	; 0x5f
    4138:	f000 8114 	beq.w	4364 <d_type+0x818>
    413c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4140:	4293      	cmp	r3, r2
    4142:	f6bf ad6f 	bge.w	3c24 <d_type+0xd8>
    4146:	6922      	ldr	r2, [r4, #16]
    4148:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    414c:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4150:	3301      	adds	r3, #1
    4152:	2000      	movs	r0, #0
    4154:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4158:	6163      	str	r3, [r4, #20]
    415a:	2343      	movs	r3, #67	; 0x43
    415c:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    4160:	4620      	mov	r0, r4
    4162:	f7ff f919 	bl	3398 <d_number>
    4166:	60e8      	str	r0, [r5, #12]
    4168:	68e3      	ldr	r3, [r4, #12]
    416a:	781a      	ldrb	r2, [r3, #0]
    416c:	2a5f      	cmp	r2, #95	; 0x5f
    416e:	f47f ad59 	bne.w	3c24 <d_type+0xd8>
    4172:	3301      	adds	r3, #1
    4174:	60e3      	str	r3, [r4, #12]
    4176:	4620      	mov	r0, r4
    4178:	f7ff fce8 	bl	3b4c <d_type>
    417c:	462a      	mov	r2, r5
    417e:	4603      	mov	r3, r0
    4180:	212d      	movs	r1, #45	; 0x2d
    4182:	4620      	mov	r0, r4
    4184:	f7ff f890 	bl	32a8 <d_make_comp>
    4188:	4605      	mov	r5, r0
    418a:	9001      	str	r0, [sp, #4]
    418c:	e583      	b.n	3c96 <d_type+0x14a>
    418e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4192:	4293      	cmp	r3, r2
    4194:	f280 810e 	bge.w	43b4 <d_type+0x868>
    4198:	6922      	ldr	r2, [r4, #16]
    419a:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    419e:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    41a2:	3301      	adds	r3, #1
    41a4:	2000      	movs	r0, #0
    41a6:	e9c5 0001 	strd	r0, r0, [r5, #4]
    41aa:	6163      	str	r3, [r4, #20]
    41ac:	2327      	movs	r3, #39	; 0x27
    41ae:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    41b2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    41b4:	4a79      	ldr	r2, [pc, #484]	; (439c <d_type+0x850>)
    41b6:	60ea      	str	r2, [r5, #12]
    41b8:	3307      	adds	r3, #7
    41ba:	62e3      	str	r3, [r4, #44]	; 0x2c
    41bc:	e533      	b.n	3c26 <d_type+0xda>
    41be:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    41c2:	4293      	cmp	r3, r2
    41c4:	f280 80f6 	bge.w	43b4 <d_type+0x868>
    41c8:	6922      	ldr	r2, [r4, #16]
    41ca:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    41ce:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    41d2:	3301      	adds	r3, #1
    41d4:	2000      	movs	r0, #0
    41d6:	e9c5 0001 	strd	r0, r0, [r5, #4]
    41da:	6163      	str	r3, [r4, #20]
    41dc:	2327      	movs	r3, #39	; 0x27
    41de:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    41e2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    41e4:	4a6e      	ldr	r2, [pc, #440]	; (43a0 <d_type+0x854>)
    41e6:	60ea      	str	r2, [r5, #12]
    41e8:	3308      	adds	r3, #8
    41ea:	62e3      	str	r3, [r4, #44]	; 0x2c
    41ec:	e51b      	b.n	3c26 <d_type+0xda>
    41ee:	4620      	mov	r0, r4
    41f0:	f7ff fcac 	bl	3b4c <d_type>
    41f4:	2300      	movs	r3, #0
    41f6:	4602      	mov	r2, r0
    41f8:	214c      	movs	r1, #76	; 0x4c
    41fa:	4620      	mov	r0, r4
    41fc:	f7ff f854 	bl	32a8 <d_make_comp>
    4200:	4605      	mov	r5, r0
    4202:	9001      	str	r0, [sp, #4]
    4204:	e547      	b.n	3c96 <d_type+0x14a>
    4206:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    420a:	4293      	cmp	r3, r2
    420c:	f280 80d2 	bge.w	43b4 <d_type+0x868>
    4210:	6922      	ldr	r2, [r4, #16]
    4212:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4216:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    421a:	3301      	adds	r3, #1
    421c:	2000      	movs	r0, #0
    421e:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4222:	6163      	str	r3, [r4, #20]
    4224:	2327      	movs	r3, #39	; 0x27
    4226:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    422a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    422c:	4a5d      	ldr	r2, [pc, #372]	; (43a4 <d_type+0x858>)
    422e:	60ea      	str	r2, [r5, #12]
    4230:	3311      	adds	r3, #17
    4232:	62e3      	str	r3, [r4, #44]	; 0x2c
    4234:	e4f7      	b.n	3c26 <d_type+0xda>
    4236:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    423a:	4293      	cmp	r3, r2
    423c:	f280 80ba 	bge.w	43b4 <d_type+0x868>
    4240:	6922      	ldr	r2, [r4, #16]
    4242:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4246:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    424a:	3301      	adds	r3, #1
    424c:	2000      	movs	r0, #0
    424e:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4252:	6163      	str	r3, [r4, #20]
    4254:	2327      	movs	r3, #39	; 0x27
    4256:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    425a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    425c:	4a52      	ldr	r2, [pc, #328]	; (43a8 <d_type+0x85c>)
    425e:	60ea      	str	r2, [r5, #12]
    4260:	3308      	adds	r3, #8
    4262:	62e3      	str	r3, [r4, #44]	; 0x2c
    4264:	e4df      	b.n	3c26 <d_type+0xda>
    4266:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    426a:	4293      	cmp	r3, r2
    426c:	f280 80a2 	bge.w	43b4 <d_type+0x868>
    4270:	6922      	ldr	r2, [r4, #16]
    4272:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4276:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    427a:	3301      	adds	r3, #1
    427c:	2000      	movs	r0, #0
    427e:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4282:	6163      	str	r3, [r4, #20]
    4284:	2327      	movs	r3, #39	; 0x27
    4286:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    428a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    428c:	4a47      	ldr	r2, [pc, #284]	; (43ac <d_type+0x860>)
    428e:	60ea      	str	r2, [r5, #12]
    4290:	330a      	adds	r3, #10
    4292:	62e3      	str	r3, [r4, #44]	; 0x2c
    4294:	e4c7      	b.n	3c26 <d_type+0xda>
    4296:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    429a:	4293      	cmp	r3, r2
    429c:	f280 808a 	bge.w	43b4 <d_type+0x868>
    42a0:	6922      	ldr	r2, [r4, #16]
    42a2:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    42a6:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    42aa:	3301      	adds	r3, #1
    42ac:	2000      	movs	r0, #0
    42ae:	e9c5 0001 	strd	r0, r0, [r5, #4]
    42b2:	6163      	str	r3, [r4, #20]
    42b4:	2327      	movs	r3, #39	; 0x27
    42b6:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    42ba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    42bc:	4a3c      	ldr	r2, [pc, #240]	; (43b0 <d_type+0x864>)
    42be:	60ea      	str	r2, [r5, #12]
    42c0:	3309      	adds	r3, #9
    42c2:	62e3      	str	r3, [r4, #44]	; 0x2c
    42c4:	e4af      	b.n	3c26 <d_type+0xda>
    42c6:	2600      	movs	r6, #0
    42c8:	e65e      	b.n	3f88 <d_type+0x43c>
    42ca:	3301      	adds	r3, #1
    42cc:	60e3      	str	r3, [r4, #12]
    42ce:	4620      	mov	r0, r4
    42d0:	f000 fbee 	bl	4ab0 <d_template_args_1>
    42d4:	462a      	mov	r2, r5
    42d6:	4603      	mov	r3, r0
    42d8:	2104      	movs	r1, #4
    42da:	4620      	mov	r0, r4
    42dc:	f7fe ffe4 	bl	32a8 <d_make_comp>
    42e0:	4605      	mov	r5, r0
    42e2:	e611      	b.n	3f08 <d_type+0x3bc>
    42e4:	2301      	movs	r3, #1
    42e6:	6b25      	ldr	r5, [r4, #48]	; 0x30
    42e8:	6323      	str	r3, [r4, #48]	; 0x30
    42ea:	4620      	mov	r0, r4
    42ec:	f000 fca8 	bl	4c40 <d_expression_1>
    42f0:	6325      	str	r5, [r4, #48]	; 0x30
    42f2:	4606      	mov	r6, r0
    42f4:	2800      	cmp	r0, #0
    42f6:	f43f ac95 	beq.w	3c24 <d_type+0xd8>
    42fa:	68e5      	ldr	r5, [r4, #12]
    42fc:	782a      	ldrb	r2, [r5, #0]
    42fe:	e640      	b.n	3f82 <d_type+0x436>
    4300:	4620      	mov	r0, r4
    4302:	f001 fa31 	bl	5768 <d_name>
    4306:	4605      	mov	r5, r0
    4308:	9001      	str	r0, [sp, #4]
    430a:	2800      	cmp	r0, #0
    430c:	f43f ac8a 	beq.w	3c24 <d_type+0xd8>
    4310:	7803      	ldrb	r3, [r0, #0]
    4312:	2b18      	cmp	r3, #24
    4314:	f47f acc1 	bne.w	3c9a <d_type+0x14e>
    4318:	e485      	b.n	3c26 <d_type+0xda>
    431a:	1c73      	adds	r3, r6, #1
    431c:	60e3      	str	r3, [r4, #12]
    431e:	4620      	mov	r0, r4
    4320:	f8d4 9014 	ldr.w	r9, [r4, #20]
    4324:	f8d4 8020 	ldr.w	r8, [r4, #32]
    4328:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    432a:	f000 fbc1 	bl	4ab0 <d_template_args_1>
    432e:	68e3      	ldr	r3, [r4, #12]
    4330:	781b      	ldrb	r3, [r3, #0]
    4332:	2b49      	cmp	r3, #73	; 0x49
    4334:	d006      	beq.n	4344 <d_type+0x7f8>
    4336:	60e6      	str	r6, [r4, #12]
    4338:	f8c4 9014 	str.w	r9, [r4, #20]
    433c:	f8c4 8020 	str.w	r8, [r4, #32]
    4340:	62e7      	str	r7, [r4, #44]	; 0x2c
    4342:	e4a8      	b.n	3c96 <d_type+0x14a>
    4344:	2d00      	cmp	r5, #0
    4346:	f43f ac6d 	beq.w	3c24 <d_type+0xd8>
    434a:	e9d4 1308 	ldrd	r1, r3, [r4, #32]
    434e:	4299      	cmp	r1, r3
    4350:	f6bf ac68 	bge.w	3c24 <d_type+0xd8>
    4354:	69e2      	ldr	r2, [r4, #28]
    4356:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
    435a:	3101      	adds	r1, #1
    435c:	4603      	mov	r3, r0
    435e:	462a      	mov	r2, r5
    4360:	6221      	str	r1, [r4, #32]
    4362:	e5b9      	b.n	3ed8 <d_type+0x38c>
    4364:	3203      	adds	r2, #3
    4366:	2301      	movs	r3, #1
    4368:	6b25      	ldr	r5, [r4, #48]	; 0x30
    436a:	60e2      	str	r2, [r4, #12]
    436c:	6323      	str	r3, [r4, #48]	; 0x30
    436e:	4620      	mov	r0, r4
    4370:	f000 fc66 	bl	4c40 <d_expression_1>
    4374:	6325      	str	r5, [r4, #48]	; 0x30
    4376:	4605      	mov	r5, r0
    4378:	2800      	cmp	r0, #0
    437a:	f47f aef5 	bne.w	4168 <d_type+0x61c>
    437e:	e451      	b.n	3c24 <d_type+0xd8>
    4380:	68c3      	ldr	r3, [r0, #12]
    4382:	deff      	udf	#255	; 0xff
    4384:	2300      	movs	r3, #0
    4386:	701b      	strb	r3, [r3, #0]
    4388:	deff      	udf	#255	; 0xff
    438a:	bf00      	nop
    438c:	2000202c 	.word	0x2000202c
    4390:	20002024 	.word	0x20002024
    4394:	200017bc 	.word	0x200017bc
    4398:	20001780 	.word	0x20001780
    439c:	200017d0 	.word	0x200017d0
    43a0:	200017e4 	.word	0x200017e4
    43a4:	2000180c 	.word	0x2000180c
    43a8:	200017f8 	.word	0x200017f8
    43ac:	200017a8 	.word	0x200017a8
    43b0:	20001794 	.word	0x20001794
    43b4:	2300      	movs	r3, #0
    43b6:	68db      	ldr	r3, [r3, #12]
    43b8:	deff      	udf	#255	; 0xff
    43ba:	bf00      	nop

000043bc <d_parmlist>:
    43bc:	b530      	push	{r4, r5, lr}
    43be:	68c2      	ldr	r2, [r0, #12]
    43c0:	b083      	sub	sp, #12
    43c2:	2300      	movs	r3, #0
    43c4:	9301      	str	r3, [sp, #4]
    43c6:	7813      	ldrb	r3, [r2, #0]
    43c8:	2b00      	cmp	r3, #0
    43ca:	d034      	beq.n	4436 <d_parmlist+0x7a>
    43cc:	4604      	mov	r4, r0
    43ce:	ad01      	add	r5, sp, #4
    43d0:	2b4f      	cmp	r3, #79	; 0x4f
    43d2:	d00c      	beq.n	43ee <d_parmlist+0x32>
    43d4:	d809      	bhi.n	43ea <d_parmlist+0x2e>
    43d6:	2b2e      	cmp	r3, #46	; 0x2e
    43d8:	d001      	beq.n	43de <d_parmlist+0x22>
    43da:	2b45      	cmp	r3, #69	; 0x45
    43dc:	d10a      	bne.n	43f4 <d_parmlist+0x38>
    43de:	9801      	ldr	r0, [sp, #4]
    43e0:	b348      	cbz	r0, 4436 <d_parmlist+0x7a>
    43e2:	6903      	ldr	r3, [r0, #16]
    43e4:	b1cb      	cbz	r3, 441a <d_parmlist+0x5e>
    43e6:	b003      	add	sp, #12
    43e8:	bd30      	pop	{r4, r5, pc}
    43ea:	2b52      	cmp	r3, #82	; 0x52
    43ec:	d102      	bne.n	43f4 <d_parmlist+0x38>
    43ee:	7853      	ldrb	r3, [r2, #1]
    43f0:	2b45      	cmp	r3, #69	; 0x45
    43f2:	d0f4      	beq.n	43de <d_parmlist+0x22>
    43f4:	4620      	mov	r0, r4
    43f6:	f7ff fba9 	bl	3b4c <d_type>
    43fa:	4602      	mov	r2, r0
    43fc:	2300      	movs	r3, #0
    43fe:	212e      	movs	r1, #46	; 0x2e
    4400:	4620      	mov	r0, r4
    4402:	b1c2      	cbz	r2, 4436 <d_parmlist+0x7a>
    4404:	f7fe ff50 	bl	32a8 <d_make_comp>
    4408:	6028      	str	r0, [r5, #0]
    440a:	b1a0      	cbz	r0, 4436 <d_parmlist+0x7a>
    440c:	68e2      	ldr	r2, [r4, #12]
    440e:	7813      	ldrb	r3, [r2, #0]
    4410:	f100 0510 	add.w	r5, r0, #16
    4414:	2b00      	cmp	r3, #0
    4416:	d1db      	bne.n	43d0 <d_parmlist+0x14>
    4418:	e7e1      	b.n	43de <d_parmlist+0x22>
    441a:	68c2      	ldr	r2, [r0, #12]
    441c:	7811      	ldrb	r1, [r2, #0]
    441e:	2927      	cmp	r1, #39	; 0x27
    4420:	d1e1      	bne.n	43e6 <d_parmlist+0x2a>
    4422:	68d2      	ldr	r2, [r2, #12]
    4424:	7c11      	ldrb	r1, [r2, #16]
    4426:	2909      	cmp	r1, #9
    4428:	d1dd      	bne.n	43e6 <d_parmlist+0x2a>
    442a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    442c:	6852      	ldr	r2, [r2, #4]
    442e:	1a89      	subs	r1, r1, r2
    4430:	62e1      	str	r1, [r4, #44]	; 0x2c
    4432:	60c3      	str	r3, [r0, #12]
    4434:	e7d7      	b.n	43e6 <d_parmlist+0x2a>
    4436:	2000      	movs	r0, #0
    4438:	b003      	add	sp, #12
    443a:	bd30      	pop	{r4, r5, pc}

0000443c <d_bare_function_type>:
    443c:	b570      	push	{r4, r5, r6, lr}
    443e:	68c3      	ldr	r3, [r0, #12]
    4440:	781a      	ldrb	r2, [r3, #0]
    4442:	2a4a      	cmp	r2, #74	; 0x4a
    4444:	4605      	mov	r5, r0
    4446:	d01a      	beq.n	447e <d_bare_function_type+0x42>
    4448:	b181      	cbz	r1, 446c <d_bare_function_type+0x30>
    444a:	4628      	mov	r0, r5
    444c:	f7ff fb7e 	bl	3b4c <d_type>
    4450:	4604      	mov	r4, r0
    4452:	b190      	cbz	r0, 447a <d_bare_function_type+0x3e>
    4454:	4628      	mov	r0, r5
    4456:	f7ff ffb1 	bl	43bc <d_parmlist>
    445a:	4603      	mov	r3, r0
    445c:	b168      	cbz	r0, 447a <d_bare_function_type+0x3e>
    445e:	4622      	mov	r2, r4
    4460:	4628      	mov	r0, r5
    4462:	2129      	movs	r1, #41	; 0x29
    4464:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    4468:	f7fe bf1e 	b.w	32a8 <d_make_comp>
    446c:	4628      	mov	r0, r5
    446e:	460c      	mov	r4, r1
    4470:	f7ff ffa4 	bl	43bc <d_parmlist>
    4474:	4603      	mov	r3, r0
    4476:	2800      	cmp	r0, #0
    4478:	d1f1      	bne.n	445e <d_bare_function_type+0x22>
    447a:	2000      	movs	r0, #0
    447c:	bd70      	pop	{r4, r5, r6, pc}
    447e:	3301      	adds	r3, #1
    4480:	60c3      	str	r3, [r0, #12]
    4482:	e7e2      	b.n	444a <d_bare_function_type+0xe>

00004484 <d_function_type>:
    4484:	b510      	push	{r4, lr}
    4486:	4604      	mov	r4, r0
    4488:	6880      	ldr	r0, [r0, #8]
    448a:	f410 2080 	ands.w	r0, r0, #262144	; 0x40000
    448e:	d10b      	bne.n	44a8 <d_function_type+0x24>
    4490:	6be2      	ldr	r2, [r4, #60]	; 0x3c
    4492:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
    4496:	d806      	bhi.n	44a6 <d_function_type+0x22>
    4498:	1c51      	adds	r1, r2, #1
    449a:	68e3      	ldr	r3, [r4, #12]
    449c:	63e1      	str	r1, [r4, #60]	; 0x3c
    449e:	7819      	ldrb	r1, [r3, #0]
    44a0:	2946      	cmp	r1, #70	; 0x46
    44a2:	d007      	beq.n	44b4 <d_function_type+0x30>
    44a4:	63e2      	str	r2, [r4, #60]	; 0x3c
    44a6:	bd10      	pop	{r4, pc}
    44a8:	68e3      	ldr	r3, [r4, #12]
    44aa:	781a      	ldrb	r2, [r3, #0]
    44ac:	2a46      	cmp	r2, #70	; 0x46
    44ae:	d001      	beq.n	44b4 <d_function_type+0x30>
    44b0:	2000      	movs	r0, #0
    44b2:	bd10      	pop	{r4, pc}
    44b4:	1c5a      	adds	r2, r3, #1
    44b6:	60e2      	str	r2, [r4, #12]
    44b8:	785a      	ldrb	r2, [r3, #1]
    44ba:	2a59      	cmp	r2, #89	; 0x59
    44bc:	bf04      	itt	eq
    44be:	3302      	addeq	r3, #2
    44c0:	60e3      	streq	r3, [r4, #12]
    44c2:	2101      	movs	r1, #1
    44c4:	4620      	mov	r0, r4
    44c6:	f7ff ffb9 	bl	443c <d_bare_function_type>
    44ca:	4601      	mov	r1, r0
    44cc:	4620      	mov	r0, r4
    44ce:	f7fe ffc1 	bl	3454 <d_ref_qualifier>
    44d2:	68e3      	ldr	r3, [r4, #12]
    44d4:	781a      	ldrb	r2, [r3, #0]
    44d6:	2a45      	cmp	r2, #69	; 0x45
    44d8:	bf04      	itt	eq
    44da:	3301      	addeq	r3, #1
    44dc:	60e3      	streq	r3, [r4, #12]
    44de:	68a3      	ldr	r3, [r4, #8]
    44e0:	bf18      	it	ne
    44e2:	2000      	movne	r0, #0
    44e4:	035b      	lsls	r3, r3, #13
    44e6:	d4de      	bmi.n	44a6 <d_function_type+0x22>
    44e8:	6be2      	ldr	r2, [r4, #60]	; 0x3c
    44ea:	3a01      	subs	r2, #1
    44ec:	e7da      	b.n	44a4 <d_function_type+0x20>
    44ee:	bf00      	nop

000044f0 <d_operator_name>:
    44f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    44f2:	68c3      	ldr	r3, [r0, #12]
    44f4:	781f      	ldrb	r7, [r3, #0]
    44f6:	4606      	mov	r6, r0
    44f8:	bb77      	cbnz	r7, 4558 <d_operator_name+0x68>
    44fa:	f04f 0e00 	mov.w	lr, #0
    44fe:	4d3d      	ldr	r5, [pc, #244]	; (45f4 <d_operator_name+0x104>)
    4500:	2148      	movs	r1, #72	; 0x48
    4502:	2200      	movs	r2, #0
    4504:	1a8b      	subs	r3, r1, r2
    4506:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
    450a:	eb02 0363 	add.w	r3, r2, r3, asr #1
    450e:	0118      	lsls	r0, r3, #4
    4510:	eb05 1c03 	add.w	ip, r5, r3, lsl #4
    4514:	582c      	ldr	r4, [r5, r0]
    4516:	7820      	ldrb	r0, [r4, #0]
    4518:	42b8      	cmp	r0, r7
    451a:	d006      	beq.n	452a <d_operator_name+0x3a>
    451c:	bf94      	ite	ls
    451e:	1c5a      	addls	r2, r3, #1
    4520:	4619      	movhi	r1, r3
    4522:	428a      	cmp	r2, r1
    4524:	d1ee      	bne.n	4504 <d_operator_name+0x14>
    4526:	2000      	movs	r0, #0
    4528:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    452a:	7860      	ldrb	r0, [r4, #1]
    452c:	4570      	cmp	r0, lr
    452e:	d1f5      	bne.n	451c <d_operator_name+0x2c>
    4530:	e9d6 3205 	ldrd	r3, r2, [r6, #20]
    4534:	4293      	cmp	r3, r2
    4536:	daf6      	bge.n	4526 <d_operator_name+0x36>
    4538:	6932      	ldr	r2, [r6, #16]
    453a:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    453e:	eb02 0081 	add.w	r0, r2, r1, lsl #2
    4542:	3301      	adds	r3, #1
    4544:	2400      	movs	r4, #0
    4546:	e9c0 4401 	strd	r4, r4, [r0, #4]
    454a:	6173      	str	r3, [r6, #20]
    454c:	2332      	movs	r3, #50	; 0x32
    454e:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    4552:	f8c0 c00c 	str.w	ip, [r0, #12]
    4556:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4558:	1c5a      	adds	r2, r3, #1
    455a:	60c2      	str	r2, [r0, #12]
    455c:	f893 e001 	ldrb.w	lr, [r3, #1]
    4560:	781f      	ldrb	r7, [r3, #0]
    4562:	f1be 0f00 	cmp.w	lr, #0
    4566:	d102      	bne.n	456e <d_operator_name+0x7e>
    4568:	2f76      	cmp	r7, #118	; 0x76
    456a:	d0c8      	beq.n	44fe <d_operator_name+0xe>
    456c:	e7c5      	b.n	44fa <d_operator_name+0xa>
    456e:	1c9a      	adds	r2, r3, #2
    4570:	60c2      	str	r2, [r0, #12]
    4572:	2f76      	cmp	r7, #118	; 0x76
    4574:	f893 e001 	ldrb.w	lr, [r3, #1]
    4578:	d11f      	bne.n	45ba <d_operator_name+0xca>
    457a:	f1ae 0430 	sub.w	r4, lr, #48	; 0x30
    457e:	b2e3      	uxtb	r3, r4
    4580:	2b09      	cmp	r3, #9
    4582:	d8bc      	bhi.n	44fe <d_operator_name+0xe>
    4584:	f7ff f9a8 	bl	38d8 <d_source_name>
    4588:	e9d6 3105 	ldrd	r3, r1, [r6, #20]
    458c:	428b      	cmp	r3, r1
    458e:	4602      	mov	r2, r0
    4590:	dac9      	bge.n	4526 <d_operator_name+0x36>
    4592:	6937      	ldr	r7, [r6, #16]
    4594:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4598:	eb07 0081 	add.w	r0, r7, r1, lsl #2
    459c:	3301      	adds	r3, #1
    459e:	2500      	movs	r5, #0
    45a0:	e9c0 5501 	strd	r5, r5, [r0, #4]
    45a4:	0089      	lsls	r1, r1, #2
    45a6:	6173      	str	r3, [r6, #20]
    45a8:	2a00      	cmp	r2, #0
    45aa:	d0bc      	beq.n	4526 <d_operator_name+0x36>
    45ac:	2333      	movs	r3, #51	; 0x33
    45ae:	e9c0 5501 	strd	r5, r5, [r0, #4]
    45b2:	547b      	strb	r3, [r7, r1]
    45b4:	e9c0 4203 	strd	r4, r2, [r0, #12]
    45b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    45ba:	2f63      	cmp	r7, #99	; 0x63
    45bc:	d19f      	bne.n	44fe <d_operator_name+0xe>
    45be:	f1be 0f76 	cmp.w	lr, #118	; 0x76
    45c2:	d19c      	bne.n	44fe <d_operator_name+0xe>
    45c4:	e9d0 340c 	ldrd	r3, r4, [r0, #48]	; 0x30
    45c8:	fab3 f383 	clz	r3, r3
    45cc:	095b      	lsrs	r3, r3, #5
    45ce:	6343      	str	r3, [r0, #52]	; 0x34
    45d0:	f7ff fabc 	bl	3b4c <d_type>
    45d4:	6b73      	ldr	r3, [r6, #52]	; 0x34
    45d6:	4602      	mov	r2, r0
    45d8:	b133      	cbz	r3, 45e8 <d_operator_name+0xf8>
    45da:	2300      	movs	r3, #0
    45dc:	2135      	movs	r1, #53	; 0x35
    45de:	4630      	mov	r0, r6
    45e0:	f7fe fe62 	bl	32a8 <d_make_comp>
    45e4:	6374      	str	r4, [r6, #52]	; 0x34
    45e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    45e8:	2134      	movs	r1, #52	; 0x34
    45ea:	4630      	mov	r0, r6
    45ec:	f7fe fe5c 	bl	32a8 <d_make_comp>
    45f0:	e7f8      	b.n	45e4 <d_operator_name+0xf4>
    45f2:	bf00      	nop
    45f4:	20001820 	.word	0x20001820

000045f8 <d_unqualified_name>:
    45f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    45fa:	68c3      	ldr	r3, [r0, #12]
    45fc:	781a      	ldrb	r2, [r3, #0]
    45fe:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
    4602:	2909      	cmp	r1, #9
    4604:	4604      	mov	r4, r0
    4606:	d965      	bls.n	46d4 <d_unqualified_name+0xdc>
    4608:	2a55      	cmp	r2, #85	; 0x55
    460a:	d06c      	beq.n	46e6 <d_unqualified_name+0xee>
    460c:	d838      	bhi.n	4680 <d_unqualified_name+0x88>
    460e:	2a44      	cmp	r2, #68	; 0x44
    4610:	d90f      	bls.n	4632 <d_unqualified_name+0x3a>
    4612:	2a4c      	cmp	r2, #76	; 0x4c
    4614:	d10a      	bne.n	462c <d_unqualified_name+0x34>
    4616:	3301      	adds	r3, #1
    4618:	60c3      	str	r3, [r0, #12]
    461a:	f7ff f95d 	bl	38d8 <d_source_name>
    461e:	4605      	mov	r5, r0
    4620:	b120      	cbz	r0, 462c <d_unqualified_name+0x34>
    4622:	4620      	mov	r0, r4
    4624:	f7fe ffaa 	bl	357c <d_discriminator>
    4628:	2800      	cmp	r0, #0
    462a:	d13b      	bne.n	46a4 <d_unqualified_name+0xac>
    462c:	2500      	movs	r5, #0
    462e:	4628      	mov	r0, r5
    4630:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4632:	2a42      	cmp	r2, #66	; 0x42
    4634:	d9fa      	bls.n	462c <d_unqualified_name+0x34>
    4636:	6a81      	ldr	r1, [r0, #40]	; 0x28
    4638:	b141      	cbz	r1, 464c <d_unqualified_name+0x54>
    463a:	7808      	ldrb	r0, [r1, #0]
    463c:	2800      	cmp	r0, #0
    463e:	f040 8091 	bne.w	4764 <d_unqualified_name+0x16c>
    4642:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    4644:	6908      	ldr	r0, [r1, #16]
    4646:	4402      	add	r2, r0
    4648:	62e2      	str	r2, [r4, #44]	; 0x2c
    464a:	781a      	ldrb	r2, [r3, #0]
    464c:	2a43      	cmp	r2, #67	; 0x43
    464e:	f000 80c8 	beq.w	47e2 <d_unqualified_name+0x1ea>
    4652:	2a44      	cmp	r2, #68	; 0x44
    4654:	f040 8084 	bne.w	4760 <d_unqualified_name+0x168>
    4658:	785a      	ldrb	r2, [r3, #1]
    465a:	3a30      	subs	r2, #48	; 0x30
    465c:	2a05      	cmp	r2, #5
    465e:	d8e5      	bhi.n	462c <d_unqualified_name+0x34>
    4660:	a001      	add	r0, pc, #4	; (adr r0, 4668 <d_unqualified_name+0x70>)
    4662:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
    4666:	bf00      	nop
    4668:	00004773 	.word	0x00004773
    466c:	000047cb 	.word	0x000047cb
    4670:	000047b9 	.word	0x000047b9
    4674:	0000462d 	.word	0x0000462d
    4678:	000047c5 	.word	0x000047c5
    467c:	000047bf 	.word	0x000047bf
    4680:	f1a2 0161 	sub.w	r1, r2, #97	; 0x61
    4684:	2919      	cmp	r1, #25
    4686:	d8d1      	bhi.n	462c <d_unqualified_name+0x34>
    4688:	2a6f      	cmp	r2, #111	; 0x6f
    468a:	6b05      	ldr	r5, [r0, #48]	; 0x30
    468c:	f000 80a0 	beq.w	47d0 <d_unqualified_name+0x1d8>
    4690:	4620      	mov	r0, r4
    4692:	f7ff ff2d 	bl	44f0 <d_operator_name>
    4696:	6325      	str	r5, [r4, #48]	; 0x30
    4698:	4605      	mov	r5, r0
    469a:	b118      	cbz	r0, 46a4 <d_unqualified_name+0xac>
    469c:	7803      	ldrb	r3, [r0, #0]
    469e:	2b32      	cmp	r3, #50	; 0x32
    46a0:	f000 80c6 	beq.w	4830 <d_unqualified_name+0x238>
    46a4:	68e3      	ldr	r3, [r4, #12]
    46a6:	781a      	ldrb	r2, [r3, #0]
    46a8:	2a42      	cmp	r2, #66	; 0x42
    46aa:	d1c0      	bne.n	462e <d_unqualified_name+0x36>
    46ac:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    46ae:	3301      	adds	r3, #1
    46b0:	60e3      	str	r3, [r4, #12]
    46b2:	4620      	mov	r0, r4
    46b4:	f7ff f910 	bl	38d8 <d_source_name>
    46b8:	462a      	mov	r2, r5
    46ba:	4603      	mov	r3, r0
    46bc:	214d      	movs	r1, #77	; 0x4d
    46be:	4620      	mov	r0, r4
    46c0:	f7fe fdf2 	bl	32a8 <d_make_comp>
    46c4:	68e3      	ldr	r3, [r4, #12]
    46c6:	781a      	ldrb	r2, [r3, #0]
    46c8:	2a42      	cmp	r2, #66	; 0x42
    46ca:	4605      	mov	r5, r0
    46cc:	d0ef      	beq.n	46ae <d_unqualified_name+0xb6>
    46ce:	62a6      	str	r6, [r4, #40]	; 0x28
    46d0:	4628      	mov	r0, r5
    46d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    46d4:	f7ff f900 	bl	38d8 <d_source_name>
    46d8:	68e3      	ldr	r3, [r4, #12]
    46da:	781a      	ldrb	r2, [r3, #0]
    46dc:	4605      	mov	r5, r0
    46de:	2a42      	cmp	r2, #66	; 0x42
    46e0:	d0e4      	beq.n	46ac <d_unqualified_name+0xb4>
    46e2:	4628      	mov	r0, r5
    46e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    46e6:	785a      	ldrb	r2, [r3, #1]
    46e8:	2a6c      	cmp	r2, #108	; 0x6c
    46ea:	f000 80c1 	beq.w	4870 <d_unqualified_name+0x278>
    46ee:	2a74      	cmp	r2, #116	; 0x74
    46f0:	d19c      	bne.n	462c <d_unqualified_name+0x34>
    46f2:	1c59      	adds	r1, r3, #1
    46f4:	60c1      	str	r1, [r0, #12]
    46f6:	785a      	ldrb	r2, [r3, #1]
    46f8:	2a74      	cmp	r2, #116	; 0x74
    46fa:	d137      	bne.n	476c <d_unqualified_name+0x174>
    46fc:	1c9a      	adds	r2, r3, #2
    46fe:	60c2      	str	r2, [r0, #12]
    4700:	789a      	ldrb	r2, [r3, #2]
    4702:	2a5f      	cmp	r2, #95	; 0x5f
    4704:	f000 8108 	beq.w	4918 <d_unqualified_name+0x320>
    4708:	2a6e      	cmp	r2, #110	; 0x6e
    470a:	d08f      	beq.n	462c <d_unqualified_name+0x34>
    470c:	f7fe fe44 	bl	3398 <d_number>
    4710:	3001      	adds	r0, #1
    4712:	68e3      	ldr	r3, [r4, #12]
    4714:	f100 80fd 	bmi.w	4912 <d_unqualified_name+0x31a>
    4718:	781a      	ldrb	r2, [r3, #0]
    471a:	2a5f      	cmp	r2, #95	; 0x5f
    471c:	d120      	bne.n	4760 <d_unqualified_name+0x168>
    471e:	3301      	adds	r3, #1
    4720:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
    4724:	428a      	cmp	r2, r1
    4726:	60e3      	str	r3, [r4, #12]
    4728:	f280 8100 	bge.w	492c <d_unqualified_name+0x334>
    472c:	6926      	ldr	r6, [r4, #16]
    472e:	eb02 0782 	add.w	r7, r2, r2, lsl #2
    4732:	eb06 0587 	add.w	r5, r6, r7, lsl #2
    4736:	3201      	adds	r2, #1
    4738:	2100      	movs	r1, #0
    473a:	e9c5 1101 	strd	r1, r1, [r5, #4]
    473e:	6162      	str	r2, [r4, #20]
    4740:	2249      	movs	r2, #73	; 0x49
    4742:	f806 2027 	strb.w	r2, [r6, r7, lsl #2]
    4746:	60e8      	str	r0, [r5, #12]
    4748:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
    474c:	4282      	cmp	r2, r0
    474e:	f280 80ea 	bge.w	4926 <d_unqualified_name+0x32e>
    4752:	69e1      	ldr	r1, [r4, #28]
    4754:	f841 5022 	str.w	r5, [r1, r2, lsl #2]
    4758:	3201      	adds	r2, #1
    475a:	6222      	str	r2, [r4, #32]
    475c:	781a      	ldrb	r2, [r3, #0]
    475e:	e7be      	b.n	46de <d_unqualified_name+0xe6>
    4760:	2500      	movs	r5, #0
    4762:	e7bc      	b.n	46de <d_unqualified_name+0xe6>
    4764:	2818      	cmp	r0, #24
    4766:	f47f af71 	bne.w	464c <d_unqualified_name+0x54>
    476a:	e76a      	b.n	4642 <d_unqualified_name+0x4a>
    476c:	460b      	mov	r3, r1
    476e:	2500      	movs	r5, #0
    4770:	e7b5      	b.n	46de <d_unqualified_name+0xe6>
    4772:	f04f 0e01 	mov.w	lr, #1
    4776:	e9d4 2005 	ldrd	r2, r0, [r4, #20]
    477a:	1c9f      	adds	r7, r3, #2
    477c:	4282      	cmp	r2, r0
    477e:	60e7      	str	r7, [r4, #12]
    4780:	f280 80c2 	bge.w	4908 <d_unqualified_name+0x310>
    4784:	f8d4 c010 	ldr.w	ip, [r4, #16]
    4788:	eb02 0082 	add.w	r0, r2, r2, lsl #2
    478c:	eb0c 0580 	add.w	r5, ip, r0, lsl #2
    4790:	3201      	adds	r2, #1
    4792:	2600      	movs	r6, #0
    4794:	e9c5 6601 	strd	r6, r6, [r5, #4]
    4798:	0080      	lsls	r0, r0, #2
    479a:	6162      	str	r2, [r4, #20]
    479c:	2900      	cmp	r1, #0
    479e:	f000 80b3 	beq.w	4908 <d_unqualified_name+0x310>
    47a2:	e9c5 6601 	strd	r6, r6, [r5, #4]
    47a6:	2208      	movs	r2, #8
    47a8:	f80c 2000 	strb.w	r2, [ip, r0]
    47ac:	f885 e00c 	strb.w	lr, [r5, #12]
    47b0:	6129      	str	r1, [r5, #16]
    47b2:	789a      	ldrb	r2, [r3, #2]
    47b4:	463b      	mov	r3, r7
    47b6:	e792      	b.n	46de <d_unqualified_name+0xe6>
    47b8:	f04f 0e03 	mov.w	lr, #3
    47bc:	e7db      	b.n	4776 <d_unqualified_name+0x17e>
    47be:	f04f 0e05 	mov.w	lr, #5
    47c2:	e7d8      	b.n	4776 <d_unqualified_name+0x17e>
    47c4:	f04f 0e04 	mov.w	lr, #4
    47c8:	e7d5      	b.n	4776 <d_unqualified_name+0x17e>
    47ca:	f04f 0e02 	mov.w	lr, #2
    47ce:	e7d2      	b.n	4776 <d_unqualified_name+0x17e>
    47d0:	785a      	ldrb	r2, [r3, #1]
    47d2:	2a6e      	cmp	r2, #110	; 0x6e
    47d4:	f47f af5c 	bne.w	4690 <d_unqualified_name+0x98>
    47d8:	3302      	adds	r3, #2
    47da:	2200      	movs	r2, #0
    47dc:	60c3      	str	r3, [r0, #12]
    47de:	6302      	str	r2, [r0, #48]	; 0x30
    47e0:	e756      	b.n	4690 <d_unqualified_name+0x98>
    47e2:	785a      	ldrb	r2, [r3, #1]
    47e4:	2a49      	cmp	r2, #73	; 0x49
    47e6:	d07f      	beq.n	48e8 <d_unqualified_name+0x2f0>
    47e8:	f1a2 0031 	sub.w	r0, r2, #49	; 0x31
    47ec:	2804      	cmp	r0, #4
    47ee:	f63f af1d 	bhi.w	462c <d_unqualified_name+0x34>
    47f2:	3a30      	subs	r2, #48	; 0x30
    47f4:	3302      	adds	r3, #2
    47f6:	b2d6      	uxtb	r6, r2
    47f8:	60e3      	str	r3, [r4, #12]
    47fa:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    47fe:	4293      	cmp	r3, r2
    4800:	f280 8086 	bge.w	4910 <d_unqualified_name+0x318>
    4804:	6927      	ldr	r7, [r4, #16]
    4806:	eb03 0283 	add.w	r2, r3, r3, lsl #2
    480a:	eb07 0582 	add.w	r5, r7, r2, lsl #2
    480e:	3301      	adds	r3, #1
    4810:	2000      	movs	r0, #0
    4812:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4816:	0092      	lsls	r2, r2, #2
    4818:	6163      	str	r3, [r4, #20]
    481a:	2900      	cmp	r1, #0
    481c:	d078      	beq.n	4910 <d_unqualified_name+0x318>
    481e:	2307      	movs	r3, #7
    4820:	e9c5 0001 	strd	r0, r0, [r5, #4]
    4824:	54bb      	strb	r3, [r7, r2]
    4826:	68e3      	ldr	r3, [r4, #12]
    4828:	732e      	strb	r6, [r5, #12]
    482a:	6129      	str	r1, [r5, #16]
    482c:	781a      	ldrb	r2, [r3, #0]
    482e:	e756      	b.n	46de <d_unqualified_name+0xe6>
    4830:	68c2      	ldr	r2, [r0, #12]
    4832:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4834:	6891      	ldr	r1, [r2, #8]
    4836:	6812      	ldr	r2, [r2, #0]
    4838:	3307      	adds	r3, #7
    483a:	440b      	add	r3, r1
    483c:	62e3      	str	r3, [r4, #44]	; 0x2c
    483e:	7813      	ldrb	r3, [r2, #0]
    4840:	2b6c      	cmp	r3, #108	; 0x6c
    4842:	f47f af2f 	bne.w	46a4 <d_unqualified_name+0xac>
    4846:	7853      	ldrb	r3, [r2, #1]
    4848:	2b69      	cmp	r3, #105	; 0x69
    484a:	f47f af2b 	bne.w	46a4 <d_unqualified_name+0xac>
    484e:	7893      	ldrb	r3, [r2, #2]
    4850:	2b00      	cmp	r3, #0
    4852:	f47f af27 	bne.w	46a4 <d_unqualified_name+0xac>
    4856:	4620      	mov	r0, r4
    4858:	f7ff f83e 	bl	38d8 <d_source_name>
    485c:	462a      	mov	r2, r5
    485e:	4603      	mov	r3, r0
    4860:	2137      	movs	r1, #55	; 0x37
    4862:	4620      	mov	r0, r4
    4864:	f7fe fd20 	bl	32a8 <d_make_comp>
    4868:	68e3      	ldr	r3, [r4, #12]
    486a:	4605      	mov	r5, r0
    486c:	781a      	ldrb	r2, [r3, #0]
    486e:	e736      	b.n	46de <d_unqualified_name+0xe6>
    4870:	1c59      	adds	r1, r3, #1
    4872:	60c1      	str	r1, [r0, #12]
    4874:	785a      	ldrb	r2, [r3, #1]
    4876:	2a6c      	cmp	r2, #108	; 0x6c
    4878:	f47f af78 	bne.w	476c <d_unqualified_name+0x174>
    487c:	3302      	adds	r3, #2
    487e:	60c3      	str	r3, [r0, #12]
    4880:	f7ff fd9c 	bl	43bc <d_parmlist>
    4884:	68e3      	ldr	r3, [r4, #12]
    4886:	4606      	mov	r6, r0
    4888:	2800      	cmp	r0, #0
    488a:	d042      	beq.n	4912 <d_unqualified_name+0x31a>
    488c:	781a      	ldrb	r2, [r3, #0]
    488e:	2a45      	cmp	r2, #69	; 0x45
    4890:	f47f af66 	bne.w	4760 <d_unqualified_name+0x168>
    4894:	1c5a      	adds	r2, r3, #1
    4896:	60e2      	str	r2, [r4, #12]
    4898:	785a      	ldrb	r2, [r3, #1]
    489a:	2a5f      	cmp	r2, #95	; 0x5f
    489c:	d049      	beq.n	4932 <d_unqualified_name+0x33a>
    489e:	2a6e      	cmp	r2, #110	; 0x6e
    48a0:	f43f aec4 	beq.w	462c <d_unqualified_name+0x34>
    48a4:	4620      	mov	r0, r4
    48a6:	f7fe fd77 	bl	3398 <d_number>
    48aa:	3001      	adds	r0, #1
    48ac:	68e3      	ldr	r3, [r4, #12]
    48ae:	d430      	bmi.n	4912 <d_unqualified_name+0x31a>
    48b0:	781a      	ldrb	r2, [r3, #0]
    48b2:	2a5f      	cmp	r2, #95	; 0x5f
    48b4:	f47f af54 	bne.w	4760 <d_unqualified_name+0x168>
    48b8:	3301      	adds	r3, #1
    48ba:	6962      	ldr	r2, [r4, #20]
    48bc:	69a1      	ldr	r1, [r4, #24]
    48be:	60e3      	str	r3, [r4, #12]
    48c0:	428a      	cmp	r2, r1
    48c2:	da33      	bge.n	492c <d_unqualified_name+0x334>
    48c4:	6921      	ldr	r1, [r4, #16]
    48c6:	eb02 0782 	add.w	r7, r2, r2, lsl #2
    48ca:	eb01 0587 	add.w	r5, r1, r7, lsl #2
    48ce:	3201      	adds	r2, #1
    48d0:	f04f 0c00 	mov.w	ip, #0
    48d4:	e9c5 cc01 	strd	ip, ip, [r5, #4]
    48d8:	6162      	str	r2, [r4, #20]
    48da:	2247      	movs	r2, #71	; 0x47
    48dc:	f801 2027 	strb.w	r2, [r1, r7, lsl #2]
    48e0:	e9c5 6003 	strd	r6, r0, [r5, #12]
    48e4:	781a      	ldrb	r2, [r3, #0]
    48e6:	e6fa      	b.n	46de <d_unqualified_name+0xe6>
    48e8:	1c59      	adds	r1, r3, #1
    48ea:	60e1      	str	r1, [r4, #12]
    48ec:	789a      	ldrb	r2, [r3, #2]
    48ee:	f1a2 0031 	sub.w	r0, r2, #49	; 0x31
    48f2:	2804      	cmp	r0, #4
    48f4:	d813      	bhi.n	491e <d_unqualified_name+0x326>
    48f6:	3303      	adds	r3, #3
    48f8:	3a30      	subs	r2, #48	; 0x30
    48fa:	60e3      	str	r3, [r4, #12]
    48fc:	4620      	mov	r0, r4
    48fe:	b2d6      	uxtb	r6, r2
    4900:	f7ff f924 	bl	3b4c <d_type>
    4904:	6aa1      	ldr	r1, [r4, #40]	; 0x28
    4906:	e778      	b.n	47fa <d_unqualified_name+0x202>
    4908:	789a      	ldrb	r2, [r3, #2]
    490a:	2500      	movs	r5, #0
    490c:	463b      	mov	r3, r7
    490e:	e6e6      	b.n	46de <d_unqualified_name+0xe6>
    4910:	68e3      	ldr	r3, [r4, #12]
    4912:	781a      	ldrb	r2, [r3, #0]
    4914:	2500      	movs	r5, #0
    4916:	e6e2      	b.n	46de <d_unqualified_name+0xe6>
    4918:	3303      	adds	r3, #3
    491a:	2000      	movs	r0, #0
    491c:	e700      	b.n	4720 <d_unqualified_name+0x128>
    491e:	785a      	ldrb	r2, [r3, #1]
    4920:	2500      	movs	r5, #0
    4922:	460b      	mov	r3, r1
    4924:	e6db      	b.n	46de <d_unqualified_name+0xe6>
    4926:	781a      	ldrb	r2, [r3, #0]
    4928:	460d      	mov	r5, r1
    492a:	e6d8      	b.n	46de <d_unqualified_name+0xe6>
    492c:	781a      	ldrb	r2, [r3, #0]
    492e:	2500      	movs	r5, #0
    4930:	e6d5      	b.n	46de <d_unqualified_name+0xe6>
    4932:	3302      	adds	r3, #2
    4934:	2000      	movs	r0, #0
    4936:	e7c0      	b.n	48ba <d_unqualified_name+0x2c2>

00004938 <d_expr_primary>:
    4938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    493a:	68c2      	ldr	r2, [r0, #12]
    493c:	7813      	ldrb	r3, [r2, #0]
    493e:	2b4c      	cmp	r3, #76	; 0x4c
    4940:	d132      	bne.n	49a8 <d_expr_primary+0x70>
    4942:	1c53      	adds	r3, r2, #1
    4944:	60c3      	str	r3, [r0, #12]
    4946:	7851      	ldrb	r1, [r2, #1]
    4948:	295f      	cmp	r1, #95	; 0x5f
    494a:	4604      	mov	r4, r0
    494c:	d051      	beq.n	49f2 <d_expr_primary+0xba>
    494e:	295a      	cmp	r1, #90	; 0x5a
    4950:	d113      	bne.n	497a <d_expr_primary+0x42>
    4952:	1c5a      	adds	r2, r3, #1
    4954:	60e2      	str	r2, [r4, #12]
    4956:	785b      	ldrb	r3, [r3, #1]
    4958:	2b47      	cmp	r3, #71	; 0x47
    495a:	d043      	beq.n	49e4 <d_expr_primary+0xac>
    495c:	2b54      	cmp	r3, #84	; 0x54
    495e:	d041      	beq.n	49e4 <d_expr_primary+0xac>
    4960:	2100      	movs	r1, #0
    4962:	4620      	mov	r0, r4
    4964:	f001 f84e 	bl	5a04 <d_encoding.part.0>
    4968:	68e3      	ldr	r3, [r4, #12]
    496a:	781a      	ldrb	r2, [r3, #0]
    496c:	4606      	mov	r6, r0
    496e:	2a45      	cmp	r2, #69	; 0x45
    4970:	d11a      	bne.n	49a8 <d_expr_primary+0x70>
    4972:	3301      	adds	r3, #1
    4974:	60e3      	str	r3, [r4, #12]
    4976:	4630      	mov	r0, r6
    4978:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    497a:	f7ff f8e7 	bl	3b4c <d_type>
    497e:	4606      	mov	r6, r0
    4980:	b190      	cbz	r0, 49a8 <d_expr_primary+0x70>
    4982:	7803      	ldrb	r3, [r0, #0]
    4984:	2b27      	cmp	r3, #39	; 0x27
    4986:	d012      	beq.n	49ae <d_expr_primary+0x76>
    4988:	68e2      	ldr	r2, [r4, #12]
    498a:	7815      	ldrb	r5, [r2, #0]
    498c:	2d6e      	cmp	r5, #110	; 0x6e
    498e:	d023      	beq.n	49d8 <d_expr_primary+0xa0>
    4990:	213d      	movs	r1, #61	; 0x3d
    4992:	2d45      	cmp	r5, #69	; 0x45
    4994:	d059      	beq.n	4a4a <d_expr_primary+0x112>
    4996:	4613      	mov	r3, r2
    4998:	e003      	b.n	49a2 <d_expr_primary+0x6a>
    499a:	60e3      	str	r3, [r4, #12]
    499c:	781d      	ldrb	r5, [r3, #0]
    499e:	2d45      	cmp	r5, #69	; 0x45
    49a0:	d02f      	beq.n	4a02 <d_expr_primary+0xca>
    49a2:	3301      	adds	r3, #1
    49a4:	2d00      	cmp	r5, #0
    49a6:	d1f8      	bne.n	499a <d_expr_primary+0x62>
    49a8:	2600      	movs	r6, #0
    49aa:	4630      	mov	r0, r6
    49ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    49ae:	68c3      	ldr	r3, [r0, #12]
    49b0:	7c1a      	ldrb	r2, [r3, #16]
    49b2:	b11a      	cbz	r2, 49bc <d_expr_primary+0x84>
    49b4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    49b6:	6859      	ldr	r1, [r3, #4]
    49b8:	1a52      	subs	r2, r2, r1
    49ba:	62e2      	str	r2, [r4, #44]	; 0x2c
    49bc:	4925      	ldr	r1, [pc, #148]	; (4a54 <d_expr_primary+0x11c>)
    49be:	6818      	ldr	r0, [r3, #0]
    49c0:	f008 f9d2 	bl	cd68 <strcmp>
    49c4:	2800      	cmp	r0, #0
    49c6:	d1df      	bne.n	4988 <d_expr_primary+0x50>
    49c8:	68e2      	ldr	r2, [r4, #12]
    49ca:	7815      	ldrb	r5, [r2, #0]
    49cc:	2d45      	cmp	r5, #69	; 0x45
    49ce:	d03e      	beq.n	4a4e <d_expr_primary+0x116>
    49d0:	2d6e      	cmp	r5, #110	; 0x6e
    49d2:	d001      	beq.n	49d8 <d_expr_primary+0xa0>
    49d4:	213d      	movs	r1, #61	; 0x3d
    49d6:	e7de      	b.n	4996 <d_expr_primary+0x5e>
    49d8:	1c53      	adds	r3, r2, #1
    49da:	60e3      	str	r3, [r4, #12]
    49dc:	7855      	ldrb	r5, [r2, #1]
    49de:	213e      	movs	r1, #62	; 0x3e
    49e0:	461a      	mov	r2, r3
    49e2:	e7d6      	b.n	4992 <d_expr_primary+0x5a>
    49e4:	4620      	mov	r0, r4
    49e6:	f000 fc85 	bl	52f4 <d_special_name>
    49ea:	68e3      	ldr	r3, [r4, #12]
    49ec:	4606      	mov	r6, r0
    49ee:	781a      	ldrb	r2, [r3, #0]
    49f0:	e7bd      	b.n	496e <d_expr_primary+0x36>
    49f2:	1c93      	adds	r3, r2, #2
    49f4:	60c3      	str	r3, [r0, #12]
    49f6:	7892      	ldrb	r2, [r2, #2]
    49f8:	2a5a      	cmp	r2, #90	; 0x5a
    49fa:	bf18      	it	ne
    49fc:	2600      	movne	r6, #0
    49fe:	d1b6      	bne.n	496e <d_expr_primary+0x36>
    4a00:	e7a7      	b.n	4952 <d_expr_primary+0x1a>
    4a02:	1a9d      	subs	r5, r3, r2
    4a04:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
    4a08:	4298      	cmp	r0, r3
    4a0a:	da1c      	bge.n	4a46 <d_expr_primary+0x10e>
    4a0c:	f8d4 e010 	ldr.w	lr, [r4, #16]
    4a10:	eb00 0780 	add.w	r7, r0, r0, lsl #2
    4a14:	eb0e 0387 	add.w	r3, lr, r7, lsl #2
    4a18:	ea4f 0c87 	mov.w	ip, r7, lsl #2
    4a1c:	2700      	movs	r7, #0
    4a1e:	3001      	adds	r0, #1
    4a20:	42bd      	cmp	r5, r7
    4a22:	e9c3 7701 	strd	r7, r7, [r3, #4]
    4a26:	6160      	str	r0, [r4, #20]
    4a28:	dd0d      	ble.n	4a46 <d_expr_primary+0x10e>
    4a2a:	e9c3 7701 	strd	r7, r7, [r3, #4]
    4a2e:	f80e 700c 	strb.w	r7, [lr, ip]
    4a32:	e9c3 2503 	strd	r2, r5, [r3, #12]
    4a36:	4632      	mov	r2, r6
    4a38:	4620      	mov	r0, r4
    4a3a:	f7fe fc35 	bl	32a8 <d_make_comp>
    4a3e:	68e3      	ldr	r3, [r4, #12]
    4a40:	4606      	mov	r6, r0
    4a42:	781a      	ldrb	r2, [r3, #0]
    4a44:	e793      	b.n	496e <d_expr_primary+0x36>
    4a46:	2300      	movs	r3, #0
    4a48:	e7f5      	b.n	4a36 <d_expr_primary+0xfe>
    4a4a:	2500      	movs	r5, #0
    4a4c:	e7da      	b.n	4a04 <d_expr_primary+0xcc>
    4a4e:	3201      	adds	r2, #1
    4a50:	60e2      	str	r2, [r4, #12]
    4a52:	e7aa      	b.n	49aa <d_expr_primary+0x72>
    4a54:	20001cb4 	.word	0x20001cb4

00004a58 <d_template_arg>:
    4a58:	b538      	push	{r3, r4, r5, lr}
    4a5a:	68c2      	ldr	r2, [r0, #12]
    4a5c:	7813      	ldrb	r3, [r2, #0]
    4a5e:	2b4c      	cmp	r3, #76	; 0x4c
    4a60:	d020      	beq.n	4aa4 <d_template_arg+0x4c>
    4a62:	4604      	mov	r4, r0
    4a64:	d808      	bhi.n	4a78 <d_template_arg+0x20>
    4a66:	3b49      	subs	r3, #73	; 0x49
    4a68:	2b01      	cmp	r3, #1
    4a6a:	d816      	bhi.n	4a9a <d_template_arg+0x42>
    4a6c:	3201      	adds	r2, #1
    4a6e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    4a72:	60c2      	str	r2, [r0, #12]
    4a74:	f000 b81c 	b.w	4ab0 <d_template_args_1>
    4a78:	2b58      	cmp	r3, #88	; 0x58
    4a7a:	d10e      	bne.n	4a9a <d_template_arg+0x42>
    4a7c:	3201      	adds	r2, #1
    4a7e:	2301      	movs	r3, #1
    4a80:	6b05      	ldr	r5, [r0, #48]	; 0x30
    4a82:	60c2      	str	r2, [r0, #12]
    4a84:	6303      	str	r3, [r0, #48]	; 0x30
    4a86:	f000 f8db 	bl	4c40 <d_expression_1>
    4a8a:	68e3      	ldr	r3, [r4, #12]
    4a8c:	6325      	str	r5, [r4, #48]	; 0x30
    4a8e:	781a      	ldrb	r2, [r3, #0]
    4a90:	2a45      	cmp	r2, #69	; 0x45
    4a92:	d10b      	bne.n	4aac <d_template_arg+0x54>
    4a94:	3301      	adds	r3, #1
    4a96:	60e3      	str	r3, [r4, #12]
    4a98:	bd38      	pop	{r3, r4, r5, pc}
    4a9a:	4620      	mov	r0, r4
    4a9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    4aa0:	f7ff b854 	b.w	3b4c <d_type>
    4aa4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    4aa8:	f7ff bf46 	b.w	4938 <d_expr_primary>
    4aac:	2000      	movs	r0, #0
    4aae:	bd38      	pop	{r3, r4, r5, pc}

00004ab0 <d_template_args_1>:
    4ab0:	b570      	push	{r4, r5, r6, lr}
    4ab2:	68c3      	ldr	r3, [r0, #12]
    4ab4:	6a86      	ldr	r6, [r0, #40]	; 0x28
    4ab6:	781a      	ldrb	r2, [r3, #0]
    4ab8:	2a45      	cmp	r2, #69	; 0x45
    4aba:	b082      	sub	sp, #8
    4abc:	4604      	mov	r4, r0
    4abe:	d01f      	beq.n	4b00 <d_template_args_1+0x50>
    4ac0:	2300      	movs	r3, #0
    4ac2:	9301      	str	r3, [sp, #4]
    4ac4:	ad01      	add	r5, sp, #4
    4ac6:	e009      	b.n	4adc <d_template_args_1+0x2c>
    4ac8:	f7fe fbee 	bl	32a8 <d_make_comp>
    4acc:	6028      	str	r0, [r5, #0]
    4ace:	f100 0510 	add.w	r5, r0, #16
    4ad2:	b160      	cbz	r0, 4aee <d_template_args_1+0x3e>
    4ad4:	68e3      	ldr	r3, [r4, #12]
    4ad6:	781a      	ldrb	r2, [r3, #0]
    4ad8:	2a45      	cmp	r2, #69	; 0x45
    4ada:	d00b      	beq.n	4af4 <d_template_args_1+0x44>
    4adc:	4620      	mov	r0, r4
    4ade:	f7ff ffbb 	bl	4a58 <d_template_arg>
    4ae2:	4602      	mov	r2, r0
    4ae4:	2300      	movs	r3, #0
    4ae6:	212f      	movs	r1, #47	; 0x2f
    4ae8:	4620      	mov	r0, r4
    4aea:	2a00      	cmp	r2, #0
    4aec:	d1ec      	bne.n	4ac8 <d_template_args_1+0x18>
    4aee:	2000      	movs	r0, #0
    4af0:	b002      	add	sp, #8
    4af2:	bd70      	pop	{r4, r5, r6, pc}
    4af4:	9801      	ldr	r0, [sp, #4]
    4af6:	62a6      	str	r6, [r4, #40]	; 0x28
    4af8:	3301      	adds	r3, #1
    4afa:	60e3      	str	r3, [r4, #12]
    4afc:	b002      	add	sp, #8
    4afe:	bd70      	pop	{r4, r5, r6, pc}
    4b00:	1c5a      	adds	r2, r3, #1
    4b02:	2300      	movs	r3, #0
    4b04:	60c2      	str	r2, [r0, #12]
    4b06:	212f      	movs	r1, #47	; 0x2f
    4b08:	461a      	mov	r2, r3
    4b0a:	b002      	add	sp, #8
    4b0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    4b10:	f7fe bbca 	b.w	32a8 <d_make_comp>

00004b14 <d_prefix>:
    4b14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4b16:	68c2      	ldr	r2, [r0, #12]
    4b18:	7814      	ldrb	r4, [r2, #0]
    4b1a:	b394      	cbz	r4, 4b82 <d_prefix+0x6e>
    4b1c:	4606      	mov	r6, r0
    4b1e:	460f      	mov	r7, r1
    4b20:	2500      	movs	r5, #0
    4b22:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
    4b26:	2b4a      	cmp	r3, #74	; 0x4a
    4b28:	d82b      	bhi.n	4b82 <d_prefix+0x6e>
    4b2a:	e8df f003 	tbb	[pc, r3]
    4b2e:	2d2d      	.short	0x2d2d
    4b30:	2d2d2d2d 	.word	0x2d2d2d2d
    4b34:	2d2d2d2d 	.word	0x2d2d2d2d
    4b38:	2a2a2a2a 	.word	0x2a2a2a2a
    4b3c:	2a2a2a2a 	.word	0x2a2a2a2a
    4b40:	2b772d2a 	.word	0x2b772d2a
    4b44:	682a2a2a 	.word	0x682a2a2a
    4b48:	5f2d2a2a 	.word	0x5f2d2a2a
    4b4c:	2a2a2a2a 	.word	0x2a2a2a2a
    4b50:	2d4b532a 	.word	0x2d4b532a
    4b54:	2a2a2a2a 	.word	0x2a2a2a2a
    4b58:	2a2a2a2a 	.word	0x2a2a2a2a
    4b5c:	2d2a2a2a 	.word	0x2d2a2a2a
    4b60:	2d2d2d2d 	.word	0x2d2d2d2d
    4b64:	2d2d2d2d 	.word	0x2d2d2d2d
    4b68:	2d2d2d2d 	.word	0x2d2d2d2d
    4b6c:	2d2d2d2d 	.word	0x2d2d2d2d
    4b70:	2d2d2d2d 	.word	0x2d2d2d2d
    4b74:	2d2d2d2d 	.word	0x2d2d2d2d
    4b78:	2d          	.byte	0x2d
    4b79:	00          	.byte	0x00
    4b7a:	68f2      	ldr	r2, [r6, #12]
    4b7c:	7814      	ldrb	r4, [r2, #0]
    4b7e:	2c00      	cmp	r4, #0
    4b80:	d1cf      	bne.n	4b22 <d_prefix+0xe>
    4b82:	2500      	movs	r5, #0
    4b84:	4628      	mov	r0, r5
    4b86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4b88:	4630      	mov	r0, r6
    4b8a:	f7ff fd35 	bl	45f8 <d_unqualified_name>
    4b8e:	4603      	mov	r3, r0
    4b90:	2d00      	cmp	r5, #0
    4b92:	d14e      	bne.n	4c32 <d_prefix+0x11e>
    4b94:	4605      	mov	r5, r0
    4b96:	2c53      	cmp	r4, #83	; 0x53
    4b98:	d0ef      	beq.n	4b7a <d_prefix+0x66>
    4b9a:	68f2      	ldr	r2, [r6, #12]
    4b9c:	7814      	ldrb	r4, [r2, #0]
    4b9e:	2c45      	cmp	r4, #69	; 0x45
    4ba0:	d0f0      	beq.n	4b84 <d_prefix+0x70>
    4ba2:	2f00      	cmp	r7, #0
    4ba4:	d0eb      	beq.n	4b7e <d_prefix+0x6a>
    4ba6:	2d00      	cmp	r5, #0
    4ba8:	d0eb      	beq.n	4b82 <d_prefix+0x6e>
    4baa:	e9d6 3108 	ldrd	r3, r1, [r6, #32]
    4bae:	428b      	cmp	r3, r1
    4bb0:	dae7      	bge.n	4b82 <d_prefix+0x6e>
    4bb2:	69f1      	ldr	r1, [r6, #28]
    4bb4:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
    4bb8:	3301      	adds	r3, #1
    4bba:	6233      	str	r3, [r6, #32]
    4bbc:	7814      	ldrb	r4, [r2, #0]
    4bbe:	2c00      	cmp	r4, #0
    4bc0:	d1af      	bne.n	4b22 <d_prefix+0xe>
    4bc2:	e7de      	b.n	4b82 <d_prefix+0x6e>
    4bc4:	4630      	mov	r0, r6
    4bc6:	f7fe fe1b 	bl	3800 <d_template_param>
    4bca:	4603      	mov	r3, r0
    4bcc:	2d00      	cmp	r5, #0
    4bce:	d130      	bne.n	4c32 <d_prefix+0x11e>
    4bd0:	461d      	mov	r5, r3
    4bd2:	e7e2      	b.n	4b9a <d_prefix+0x86>
    4bd4:	2101      	movs	r1, #1
    4bd6:	4630      	mov	r0, r6
    4bd8:	f7fe feee 	bl	39b8 <d_substitution>
    4bdc:	4603      	mov	r3, r0
    4bde:	bb45      	cbnz	r5, 4c32 <d_prefix+0x11e>
    4be0:	68f2      	ldr	r2, [r6, #12]
    4be2:	7814      	ldrb	r4, [r2, #0]
    4be4:	461d      	mov	r5, r3
    4be6:	2c00      	cmp	r4, #0
    4be8:	d19b      	bne.n	4b22 <d_prefix+0xe>
    4bea:	e7ca      	b.n	4b82 <d_prefix+0x6e>
    4bec:	2d00      	cmp	r5, #0
    4bee:	d0c8      	beq.n	4b82 <d_prefix+0x6e>
    4bf0:	1c53      	adds	r3, r2, #1
    4bf2:	60f3      	str	r3, [r6, #12]
    4bf4:	7854      	ldrb	r4, [r2, #1]
    4bf6:	461a      	mov	r2, r3
    4bf8:	2c00      	cmp	r4, #0
    4bfa:	d192      	bne.n	4b22 <d_prefix+0xe>
    4bfc:	e7c1      	b.n	4b82 <d_prefix+0x6e>
    4bfe:	2d00      	cmp	r5, #0
    4c00:	d0bf      	beq.n	4b82 <d_prefix+0x6e>
    4c02:	3201      	adds	r2, #1
    4c04:	60f2      	str	r2, [r6, #12]
    4c06:	4630      	mov	r0, r6
    4c08:	f7ff ff52 	bl	4ab0 <d_template_args_1>
    4c0c:	2104      	movs	r1, #4
    4c0e:	4603      	mov	r3, r0
    4c10:	462a      	mov	r2, r5
    4c12:	4630      	mov	r0, r6
    4c14:	f7fe fb48 	bl	32a8 <d_make_comp>
    4c18:	4605      	mov	r5, r0
    4c1a:	e7bc      	b.n	4b96 <d_prefix+0x82>
    4c1c:	7853      	ldrb	r3, [r2, #1]
    4c1e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
    4c22:	2b54      	cmp	r3, #84	; 0x54
    4c24:	4630      	mov	r0, r6
    4c26:	d006      	beq.n	4c36 <d_prefix+0x122>
    4c28:	f7ff fce6 	bl	45f8 <d_unqualified_name>
    4c2c:	4603      	mov	r3, r0
    4c2e:	2d00      	cmp	r5, #0
    4c30:	d0ce      	beq.n	4bd0 <d_prefix+0xbc>
    4c32:	2101      	movs	r1, #1
    4c34:	e7ec      	b.n	4c10 <d_prefix+0xfc>
    4c36:	f7fe ff89 	bl	3b4c <d_type>
    4c3a:	4603      	mov	r3, r0
    4c3c:	e7c6      	b.n	4bcc <d_prefix+0xb8>
    4c3e:	bf00      	nop

00004c40 <d_expression_1>:
    4c40:	68c2      	ldr	r2, [r0, #12]
    4c42:	7813      	ldrb	r3, [r2, #0]
    4c44:	2b4c      	cmp	r3, #76	; 0x4c
    4c46:	f000 8089 	beq.w	4d5c <d_expression_1+0x11c>
    4c4a:	2b54      	cmp	r3, #84	; 0x54
    4c4c:	f000 8088 	beq.w	4d60 <d_expression_1+0x120>
    4c50:	b5f0      	push	{r4, r5, r6, r7, lr}
    4c52:	2b73      	cmp	r3, #115	; 0x73
    4c54:	b083      	sub	sp, #12
    4c56:	4604      	mov	r4, r0
    4c58:	d05a      	beq.n	4d10 <d_expression_1+0xd0>
    4c5a:	2b66      	cmp	r3, #102	; 0x66
    4c5c:	d028      	beq.n	4cb0 <d_expression_1+0x70>
    4c5e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    4c62:	2909      	cmp	r1, #9
    4c64:	d80c      	bhi.n	4c80 <d_expression_1+0x40>
    4c66:	4620      	mov	r0, r4
    4c68:	f7ff fcc6 	bl	45f8 <d_unqualified_name>
    4c6c:	4605      	mov	r5, r0
    4c6e:	2800      	cmp	r0, #0
    4c70:	d070      	beq.n	4d54 <d_expression_1+0x114>
    4c72:	68e3      	ldr	r3, [r4, #12]
    4c74:	781a      	ldrb	r2, [r3, #0]
    4c76:	2a49      	cmp	r2, #73	; 0x49
    4c78:	d074      	beq.n	4d64 <d_expression_1+0x124>
    4c7a:	4628      	mov	r0, r5
    4c7c:	b003      	add	sp, #12
    4c7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4c80:	2b6f      	cmp	r3, #111	; 0x6f
    4c82:	d061      	beq.n	4d48 <d_expression_1+0x108>
    4c84:	2b69      	cmp	r3, #105	; 0x69
    4c86:	d17b      	bne.n	4d80 <d_expression_1+0x140>
    4c88:	7853      	ldrb	r3, [r2, #1]
    4c8a:	2b6c      	cmp	r3, #108	; 0x6c
    4c8c:	d147      	bne.n	4d1e <d_expression_1+0xde>
    4c8e:	3202      	adds	r2, #2
    4c90:	60e2      	str	r2, [r4, #12]
    4c92:	2500      	movs	r5, #0
    4c94:	7811      	ldrb	r1, [r2, #0]
    4c96:	2900      	cmp	r1, #0
    4c98:	d05c      	beq.n	4d54 <d_expression_1+0x114>
    4c9a:	7853      	ldrb	r3, [r2, #1]
    4c9c:	2b00      	cmp	r3, #0
    4c9e:	d059      	beq.n	4d54 <d_expression_1+0x114>
    4ca0:	2145      	movs	r1, #69	; 0x45
    4ca2:	4620      	mov	r0, r4
    4ca4:	f000 fa42 	bl	512c <d_exprlist>
    4ca8:	462a      	mov	r2, r5
    4caa:	4603      	mov	r3, r0
    4cac:	2131      	movs	r1, #49	; 0x31
    4cae:	e061      	b.n	4d74 <d_expression_1+0x134>
    4cb0:	7853      	ldrb	r3, [r2, #1]
    4cb2:	2b70      	cmp	r3, #112	; 0x70
    4cb4:	d133      	bne.n	4d1e <d_expression_1+0xde>
    4cb6:	1c93      	adds	r3, r2, #2
    4cb8:	60c3      	str	r3, [r0, #12]
    4cba:	7893      	ldrb	r3, [r2, #2]
    4cbc:	2b54      	cmp	r3, #84	; 0x54
    4cbe:	f000 8148 	beq.w	4f52 <d_expression_1+0x312>
    4cc2:	2b5f      	cmp	r3, #95	; 0x5f
    4cc4:	f000 8086 	beq.w	4dd4 <d_expression_1+0x194>
    4cc8:	2b6e      	cmp	r3, #110	; 0x6e
    4cca:	d043      	beq.n	4d54 <d_expression_1+0x114>
    4ccc:	f7fe fb64 	bl	3398 <d_number>
    4cd0:	1c41      	adds	r1, r0, #1
    4cd2:	d43f      	bmi.n	4d54 <d_expression_1+0x114>
    4cd4:	68e3      	ldr	r3, [r4, #12]
    4cd6:	781a      	ldrb	r2, [r3, #0]
    4cd8:	2a5f      	cmp	r2, #95	; 0x5f
    4cda:	d13b      	bne.n	4d54 <d_expression_1+0x114>
    4cdc:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
    4ce0:	3301      	adds	r3, #1
    4ce2:	4291      	cmp	r1, r2
    4ce4:	60e3      	str	r3, [r4, #12]
    4ce6:	d035      	beq.n	4d54 <d_expression_1+0x114>
    4ce8:	3002      	adds	r0, #2
    4cea:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
    4cee:	4293      	cmp	r3, r2
    4cf0:	da30      	bge.n	4d54 <d_expression_1+0x114>
    4cf2:	6922      	ldr	r2, [r4, #16]
    4cf4:	eb03 0183 	add.w	r1, r3, r3, lsl #2
    4cf8:	eb02 0581 	add.w	r5, r2, r1, lsl #2
    4cfc:	3301      	adds	r3, #1
    4cfe:	2600      	movs	r6, #0
    4d00:	e9c5 6601 	strd	r6, r6, [r5, #4]
    4d04:	6163      	str	r3, [r4, #20]
    4d06:	2306      	movs	r3, #6
    4d08:	f802 3021 	strb.w	r3, [r2, r1, lsl #2]
    4d0c:	60e8      	str	r0, [r5, #12]
    4d0e:	e7b4      	b.n	4c7a <d_expression_1+0x3a>
    4d10:	7853      	ldrb	r3, [r2, #1]
    4d12:	2b72      	cmp	r3, #114	; 0x72
    4d14:	f000 80f8 	beq.w	4f08 <d_expression_1+0x2c8>
    4d18:	2b70      	cmp	r3, #112	; 0x70
    4d1a:	f000 8112 	beq.w	4f42 <d_expression_1+0x302>
    4d1e:	4620      	mov	r0, r4
    4d20:	f7ff fbe6 	bl	44f0 <d_operator_name>
    4d24:	4605      	mov	r5, r0
    4d26:	b1a8      	cbz	r0, 4d54 <d_expression_1+0x114>
    4d28:	7803      	ldrb	r3, [r0, #0]
    4d2a:	2b32      	cmp	r3, #50	; 0x32
    4d2c:	d035      	beq.n	4d9a <d_expression_1+0x15a>
    4d2e:	2b34      	cmp	r3, #52	; 0x34
    4d30:	f000 819b 	beq.w	506a <d_expression_1+0x42a>
    4d34:	d80e      	bhi.n	4d54 <d_expression_1+0x114>
    4d36:	2b33      	cmp	r3, #51	; 0x33
    4d38:	d10c      	bne.n	4d54 <d_expression_1+0x114>
    4d3a:	68c3      	ldr	r3, [r0, #12]
    4d3c:	2b03      	cmp	r3, #3
    4d3e:	d809      	bhi.n	4d54 <d_expression_1+0x114>
    4d40:	e8df f003 	tbb	[pc, r3]
    4d44:	0808ce6d 	.word	0x0808ce6d
    4d48:	7853      	ldrb	r3, [r2, #1]
    4d4a:	2b6e      	cmp	r3, #110	; 0x6e
    4d4c:	d1e7      	bne.n	4d1e <d_expression_1+0xde>
    4d4e:	3202      	adds	r2, #2
    4d50:	60c2      	str	r2, [r0, #12]
    4d52:	e788      	b.n	4c66 <d_expression_1+0x26>
    4d54:	2500      	movs	r5, #0
    4d56:	4628      	mov	r0, r5
    4d58:	b003      	add	sp, #12
    4d5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4d5c:	f7ff bdec 	b.w	4938 <d_expr_primary>
    4d60:	f7fe bd4e 	b.w	3800 <d_template_param>
    4d64:	3301      	adds	r3, #1
    4d66:	60e3      	str	r3, [r4, #12]
    4d68:	4620      	mov	r0, r4
    4d6a:	f7ff fea1 	bl	4ab0 <d_template_args_1>
    4d6e:	462a      	mov	r2, r5
    4d70:	4603      	mov	r3, r0
    4d72:	2104      	movs	r1, #4
    4d74:	4620      	mov	r0, r4
    4d76:	b003      	add	sp, #12
    4d78:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    4d7c:	f7fe ba94 	b.w	32a8 <d_make_comp>
    4d80:	2b74      	cmp	r3, #116	; 0x74
    4d82:	f040 80b2 	bne.w	4eea <d_expression_1+0x2aa>
    4d86:	7853      	ldrb	r3, [r2, #1]
    4d88:	2b6c      	cmp	r3, #108	; 0x6c
    4d8a:	d1c8      	bne.n	4d1e <d_expression_1+0xde>
    4d8c:	3202      	adds	r2, #2
    4d8e:	60e2      	str	r2, [r4, #12]
    4d90:	f7fe fedc 	bl	3b4c <d_type>
    4d94:	68e2      	ldr	r2, [r4, #12]
    4d96:	4605      	mov	r5, r0
    4d98:	e77c      	b.n	4c94 <d_expression_1+0x54>
    4d9a:	68c1      	ldr	r1, [r0, #12]
    4d9c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4d9e:	688a      	ldr	r2, [r1, #8]
    4da0:	680e      	ldr	r6, [r1, #0]
    4da2:	3a02      	subs	r2, #2
    4da4:	4413      	add	r3, r2
    4da6:	62e3      	str	r3, [r4, #44]	; 0x2c
    4da8:	7833      	ldrb	r3, [r6, #0]
    4daa:	2b73      	cmp	r3, #115	; 0x73
    4dac:	d10b      	bne.n	4dc6 <d_expression_1+0x186>
    4dae:	7872      	ldrb	r2, [r6, #1]
    4db0:	2a74      	cmp	r2, #116	; 0x74
    4db2:	d108      	bne.n	4dc6 <d_expression_1+0x186>
    4db4:	78b2      	ldrb	r2, [r6, #2]
    4db6:	b932      	cbnz	r2, 4dc6 <d_expression_1+0x186>
    4db8:	4620      	mov	r0, r4
    4dba:	f7fe fec7 	bl	3b4c <d_type>
    4dbe:	462a      	mov	r2, r5
    4dc0:	4603      	mov	r3, r0
    4dc2:	2137      	movs	r1, #55	; 0x37
    4dc4:	e7d6      	b.n	4d74 <d_expression_1+0x134>
    4dc6:	68cf      	ldr	r7, [r1, #12]
    4dc8:	2f03      	cmp	r7, #3
    4dca:	d8c3      	bhi.n	4d54 <d_expression_1+0x114>
    4dcc:	e8df f007 	tbb	[pc, r7]
    4dd0:	2b540627 	.word	0x2b540627
    4dd4:	3203      	adds	r2, #3
    4dd6:	60c2      	str	r2, [r0, #12]
    4dd8:	2001      	movs	r0, #1
    4dda:	e786      	b.n	4cea <d_expression_1+0xaa>
    4ddc:	7832      	ldrb	r2, [r6, #0]
    4dde:	2a70      	cmp	r2, #112	; 0x70
    4de0:	f000 80c0 	beq.w	4f64 <d_expression_1+0x324>
    4de4:	2a6d      	cmp	r2, #109	; 0x6d
    4de6:	f000 80bd 	beq.w	4f64 <d_expression_1+0x324>
    4dea:	2700      	movs	r7, #0
    4dec:	2b73      	cmp	r3, #115	; 0x73
    4dee:	f040 80b4 	bne.w	4f5a <d_expression_1+0x31a>
    4df2:	7873      	ldrb	r3, [r6, #1]
    4df4:	2b50      	cmp	r3, #80	; 0x50
    4df6:	f040 80b0 	bne.w	4f5a <d_expression_1+0x31a>
    4dfa:	78b3      	ldrb	r3, [r6, #2]
    4dfc:	2b00      	cmp	r3, #0
    4dfe:	f040 80ac 	bne.w	4f5a <d_expression_1+0x31a>
    4e02:	4620      	mov	r0, r4
    4e04:	f7ff fe54 	bl	4ab0 <d_template_args_1>
    4e08:	4603      	mov	r3, r0
    4e0a:	b12f      	cbz	r7, 4e18 <d_expression_1+0x1d8>
    4e0c:	461a      	mov	r2, r3
    4e0e:	2139      	movs	r1, #57	; 0x39
    4e10:	4620      	mov	r0, r4
    4e12:	f7fe fa49 	bl	32a8 <d_make_comp>
    4e16:	4603      	mov	r3, r0
    4e18:	462a      	mov	r2, r5
    4e1a:	2137      	movs	r1, #55	; 0x37
    4e1c:	e7aa      	b.n	4d74 <d_expression_1+0x134>
    4e1e:	2300      	movs	r3, #0
    4e20:	462a      	mov	r2, r5
    4e22:	2136      	movs	r1, #54	; 0x36
    4e24:	e7a6      	b.n	4d74 <d_expression_1+0x134>
    4e26:	2b71      	cmp	r3, #113	; 0x71
    4e28:	f040 80c4 	bne.w	4fb4 <d_expression_1+0x374>
    4e2c:	7872      	ldrb	r2, [r6, #1]
    4e2e:	2a75      	cmp	r2, #117	; 0x75
    4e30:	f040 80c0 	bne.w	4fb4 <d_expression_1+0x374>
    4e34:	78b2      	ldrb	r2, [r6, #2]
    4e36:	2a00      	cmp	r2, #0
    4e38:	f040 80bc 	bne.w	4fb4 <d_expression_1+0x374>
    4e3c:	4620      	mov	r0, r4
    4e3e:	f7ff feff 	bl	4c40 <d_expression_1>
    4e42:	4606      	mov	r6, r0
    4e44:	4620      	mov	r0, r4
    4e46:	f7ff fefb 	bl	4c40 <d_expression_1>
    4e4a:	4607      	mov	r7, r0
    4e4c:	4620      	mov	r0, r4
    4e4e:	f7ff fef7 	bl	4c40 <d_expression_1>
    4e52:	4603      	mov	r3, r0
    4e54:	2800      	cmp	r0, #0
    4e56:	f43f af7d 	beq.w	4d54 <d_expression_1+0x114>
    4e5a:	463a      	mov	r2, r7
    4e5c:	213c      	movs	r1, #60	; 0x3c
    4e5e:	4620      	mov	r0, r4
    4e60:	f7fe fa22 	bl	32a8 <d_make_comp>
    4e64:	4632      	mov	r2, r6
    4e66:	4603      	mov	r3, r0
    4e68:	213b      	movs	r1, #59	; 0x3b
    4e6a:	4620      	mov	r0, r4
    4e6c:	f7fe fa1c 	bl	32a8 <d_make_comp>
    4e70:	462a      	mov	r2, r5
    4e72:	4603      	mov	r3, r0
    4e74:	213a      	movs	r1, #58	; 0x3a
    4e76:	e77d      	b.n	4d74 <d_expression_1+0x134>
    4e78:	68eb      	ldr	r3, [r5, #12]
    4e7a:	681b      	ldr	r3, [r3, #0]
    4e7c:	785a      	ldrb	r2, [r3, #1]
    4e7e:	2a63      	cmp	r2, #99	; 0x63
    4e80:	f000 810e 	beq.w	50a0 <d_expression_1+0x460>
    4e84:	7833      	ldrb	r3, [r6, #0]
    4e86:	2b66      	cmp	r3, #102	; 0x66
    4e88:	f000 8133 	beq.w	50f2 <d_expression_1+0x4b2>
    4e8c:	2b64      	cmp	r3, #100	; 0x64
    4e8e:	f040 8127 	bne.w	50e0 <d_expression_1+0x4a0>
    4e92:	7873      	ldrb	r3, [r6, #1]
    4e94:	2b69      	cmp	r3, #105	; 0x69
    4e96:	f040 8123 	bne.w	50e0 <d_expression_1+0x4a0>
    4e9a:	78b3      	ldrb	r3, [r6, #2]
    4e9c:	2b00      	cmp	r3, #0
    4e9e:	f040 811f 	bne.w	50e0 <d_expression_1+0x4a0>
    4ea2:	4620      	mov	r0, r4
    4ea4:	f7ff fba8 	bl	45f8 <d_unqualified_name>
    4ea8:	4607      	mov	r7, r0
    4eaa:	7833      	ldrb	r3, [r6, #0]
    4eac:	2b63      	cmp	r3, #99	; 0x63
    4eae:	f040 80b4 	bne.w	501a <d_expression_1+0x3da>
    4eb2:	7872      	ldrb	r2, [r6, #1]
    4eb4:	2a6c      	cmp	r2, #108	; 0x6c
    4eb6:	f040 80b0 	bne.w	501a <d_expression_1+0x3da>
    4eba:	78b2      	ldrb	r2, [r6, #2]
    4ebc:	2a00      	cmp	r2, #0
    4ebe:	f040 80ac 	bne.w	501a <d_expression_1+0x3da>
    4ec2:	2145      	movs	r1, #69	; 0x45
    4ec4:	4620      	mov	r0, r4
    4ec6:	f000 f931 	bl	512c <d_exprlist>
    4eca:	4602      	mov	r2, r0
    4ecc:	4613      	mov	r3, r2
    4ece:	2139      	movs	r1, #57	; 0x39
    4ed0:	463a      	mov	r2, r7
    4ed2:	4620      	mov	r0, r4
    4ed4:	f7fe f9e8 	bl	32a8 <d_make_comp>
    4ed8:	462a      	mov	r2, r5
    4eda:	4603      	mov	r3, r0
    4edc:	2138      	movs	r1, #56	; 0x38
    4ede:	e749      	b.n	4d74 <d_expression_1+0x134>
    4ee0:	4620      	mov	r0, r4
    4ee2:	f7ff fead 	bl	4c40 <d_expression_1>
    4ee6:	4603      	mov	r3, r0
    4ee8:	e796      	b.n	4e18 <d_expression_1+0x1d8>
    4eea:	2b75      	cmp	r3, #117	; 0x75
    4eec:	f47f af17 	bne.w	4d1e <d_expression_1+0xde>
    4ef0:	3201      	adds	r2, #1
    4ef2:	60c2      	str	r2, [r0, #12]
    4ef4:	f7fe fcf0 	bl	38d8 <d_source_name>
    4ef8:	9001      	str	r0, [sp, #4]
    4efa:	4620      	mov	r0, r4
    4efc:	f7ff fdd8 	bl	4ab0 <d_template_args_1>
    4f00:	9a01      	ldr	r2, [sp, #4]
    4f02:	4603      	mov	r3, r0
    4f04:	213f      	movs	r1, #63	; 0x3f
    4f06:	e735      	b.n	4d74 <d_expression_1+0x134>
    4f08:	1c93      	adds	r3, r2, #2
    4f0a:	6b81      	ldr	r1, [r0, #56]	; 0x38
    4f0c:	60c3      	str	r3, [r0, #12]
    4f0e:	7893      	ldrb	r3, [r2, #2]
    4f10:	b131      	cbz	r1, 4f20 <d_expression_1+0x2e0>
    4f12:	2b55      	cmp	r3, #85	; 0x55
    4f14:	d84a      	bhi.n	4fac <d_expression_1+0x36c>
    4f16:	2b42      	cmp	r3, #66	; 0x42
    4f18:	d832      	bhi.n	4f80 <d_expression_1+0x340>
    4f1a:	3b30      	subs	r3, #48	; 0x30
    4f1c:	2b09      	cmp	r3, #9
    4f1e:	d936      	bls.n	4f8e <d_expression_1+0x34e>
    4f20:	4620      	mov	r0, r4
    4f22:	f7fe fe13 	bl	3b4c <d_type>
    4f26:	4605      	mov	r5, r0
    4f28:	4620      	mov	r0, r4
    4f2a:	f7ff fb65 	bl	45f8 <d_unqualified_name>
    4f2e:	68e3      	ldr	r3, [r4, #12]
    4f30:	7819      	ldrb	r1, [r3, #0]
    4f32:	2949      	cmp	r1, #73	; 0x49
    4f34:	4602      	mov	r2, r0
    4f36:	f000 80a5 	beq.w	5084 <d_expression_1+0x444>
    4f3a:	4613      	mov	r3, r2
    4f3c:	2101      	movs	r1, #1
    4f3e:	462a      	mov	r2, r5
    4f40:	e718      	b.n	4d74 <d_expression_1+0x134>
    4f42:	3202      	adds	r2, #2
    4f44:	60c2      	str	r2, [r0, #12]
    4f46:	f7ff fe7b 	bl	4c40 <d_expression_1>
    4f4a:	2300      	movs	r3, #0
    4f4c:	4602      	mov	r2, r0
    4f4e:	214c      	movs	r1, #76	; 0x4c
    4f50:	e710      	b.n	4d74 <d_expression_1+0x134>
    4f52:	3203      	adds	r2, #3
    4f54:	60c2      	str	r2, [r0, #12]
    4f56:	2000      	movs	r0, #0
    4f58:	e6c7      	b.n	4cea <d_expression_1+0xaa>
    4f5a:	4620      	mov	r0, r4
    4f5c:	f7ff fe70 	bl	4c40 <d_expression_1>
    4f60:	4603      	mov	r3, r0
    4f62:	e752      	b.n	4e0a <d_expression_1+0x1ca>
    4f64:	7871      	ldrb	r1, [r6, #1]
    4f66:	4291      	cmp	r1, r2
    4f68:	f47f af3f 	bne.w	4dea <d_expression_1+0x1aa>
    4f6c:	68e2      	ldr	r2, [r4, #12]
    4f6e:	7811      	ldrb	r1, [r2, #0]
    4f70:	295f      	cmp	r1, #95	; 0x5f
    4f72:	f47f af3b 	bne.w	4dec <d_expression_1+0x1ac>
    4f76:	3201      	adds	r2, #1
    4f78:	60e2      	str	r2, [r4, #12]
    4f7a:	7833      	ldrb	r3, [r6, #0]
    4f7c:	2700      	movs	r7, #0
    4f7e:	e735      	b.n	4dec <d_expression_1+0x1ac>
    4f80:	4a68      	ldr	r2, [pc, #416]	; (5124 <d_expression_1+0x4e4>)
    4f82:	3b43      	subs	r3, #67	; 0x43
    4f84:	b2db      	uxtb	r3, r3
    4f86:	fa22 f303 	lsr.w	r3, r2, r3
    4f8a:	07db      	lsls	r3, r3, #31
    4f8c:	d5c8      	bpl.n	4f20 <d_expression_1+0x2e0>
    4f8e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    4f92:	63a3      	str	r3, [r4, #56]	; 0x38
    4f94:	2100      	movs	r1, #0
    4f96:	4620      	mov	r0, r4
    4f98:	f7ff fdbc 	bl	4b14 <d_prefix>
    4f9c:	68e3      	ldr	r3, [r4, #12]
    4f9e:	781a      	ldrb	r2, [r3, #0]
    4fa0:	2a45      	cmp	r2, #69	; 0x45
    4fa2:	4605      	mov	r5, r0
    4fa4:	d1c0      	bne.n	4f28 <d_expression_1+0x2e8>
    4fa6:	3301      	adds	r3, #1
    4fa8:	60e3      	str	r3, [r4, #12]
    4faa:	e7bd      	b.n	4f28 <d_expression_1+0x2e8>
    4fac:	3b61      	subs	r3, #97	; 0x61
    4fae:	2b19      	cmp	r3, #25
    4fb0:	d8b6      	bhi.n	4f20 <d_expression_1+0x2e0>
    4fb2:	e7ec      	b.n	4f8e <d_expression_1+0x34e>
    4fb4:	2b64      	cmp	r3, #100	; 0x64
    4fb6:	d106      	bne.n	4fc6 <d_expression_1+0x386>
    4fb8:	7873      	ldrb	r3, [r6, #1]
    4fba:	2b58      	cmp	r3, #88	; 0x58
    4fbc:	d103      	bne.n	4fc6 <d_expression_1+0x386>
    4fbe:	78b3      	ldrb	r3, [r6, #2]
    4fc0:	2b00      	cmp	r3, #0
    4fc2:	f43f af3b 	beq.w	4e3c <d_expression_1+0x1fc>
    4fc6:	7833      	ldrb	r3, [r6, #0]
    4fc8:	2b66      	cmp	r3, #102	; 0x66
    4fca:	f000 8097 	beq.w	50fc <d_expression_1+0x4bc>
    4fce:	2b6e      	cmp	r3, #110	; 0x6e
    4fd0:	f47f aec0 	bne.w	4d54 <d_expression_1+0x114>
    4fd4:	7873      	ldrb	r3, [r6, #1]
    4fd6:	2b77      	cmp	r3, #119	; 0x77
    4fd8:	d002      	beq.n	4fe0 <d_expression_1+0x3a0>
    4fda:	2b61      	cmp	r3, #97	; 0x61
    4fdc:	f47f aeba 	bne.w	4d54 <d_expression_1+0x114>
    4fe0:	215f      	movs	r1, #95	; 0x5f
    4fe2:	4620      	mov	r0, r4
    4fe4:	f000 f8a2 	bl	512c <d_exprlist>
    4fe8:	4606      	mov	r6, r0
    4fea:	4620      	mov	r0, r4
    4fec:	f7fe fdae 	bl	3b4c <d_type>
    4ff0:	68e3      	ldr	r3, [r4, #12]
    4ff2:	781a      	ldrb	r2, [r3, #0]
    4ff4:	2a45      	cmp	r2, #69	; 0x45
    4ff6:	4607      	mov	r7, r0
    4ff8:	f000 8090 	beq.w	511c <d_expression_1+0x4dc>
    4ffc:	2a70      	cmp	r2, #112	; 0x70
    4ffe:	f000 8081 	beq.w	5104 <d_expression_1+0x4c4>
    5002:	2a69      	cmp	r2, #105	; 0x69
    5004:	f47f aea6 	bne.w	4d54 <d_expression_1+0x114>
    5008:	785b      	ldrb	r3, [r3, #1]
    500a:	2b6c      	cmp	r3, #108	; 0x6c
    500c:	f47f aea2 	bne.w	4d54 <d_expression_1+0x114>
    5010:	4620      	mov	r0, r4
    5012:	f7ff fe15 	bl	4c40 <d_expression_1>
    5016:	4603      	mov	r3, r0
    5018:	e71f      	b.n	4e5a <d_expression_1+0x21a>
    501a:	2b64      	cmp	r3, #100	; 0x64
    501c:	d153      	bne.n	50c6 <d_expression_1+0x486>
    501e:	7872      	ldrb	r2, [r6, #1]
    5020:	2a74      	cmp	r2, #116	; 0x74
    5022:	d150      	bne.n	50c6 <d_expression_1+0x486>
    5024:	78b2      	ldrb	r2, [r6, #2]
    5026:	2a00      	cmp	r2, #0
    5028:	d14d      	bne.n	50c6 <d_expression_1+0x486>
    502a:	68e3      	ldr	r3, [r4, #12]
    502c:	781a      	ldrb	r2, [r3, #0]
    502e:	2a67      	cmp	r2, #103	; 0x67
    5030:	d05b      	beq.n	50ea <d_expression_1+0x4aa>
    5032:	2a73      	cmp	r2, #115	; 0x73
    5034:	d102      	bne.n	503c <d_expression_1+0x3fc>
    5036:	785b      	ldrb	r3, [r3, #1]
    5038:	2b72      	cmp	r3, #114	; 0x72
    503a:	d04c      	beq.n	50d6 <d_expression_1+0x496>
    503c:	4620      	mov	r0, r4
    503e:	f7ff fadb 	bl	45f8 <d_unqualified_name>
    5042:	68e3      	ldr	r3, [r4, #12]
    5044:	7819      	ldrb	r1, [r3, #0]
    5046:	2949      	cmp	r1, #73	; 0x49
    5048:	4602      	mov	r2, r0
    504a:	f47f af3f 	bne.w	4ecc <d_expression_1+0x28c>
    504e:	3301      	adds	r3, #1
    5050:	60e3      	str	r3, [r4, #12]
    5052:	4620      	mov	r0, r4
    5054:	9201      	str	r2, [sp, #4]
    5056:	f7ff fd2b 	bl	4ab0 <d_template_args_1>
    505a:	9a01      	ldr	r2, [sp, #4]
    505c:	4603      	mov	r3, r0
    505e:	2104      	movs	r1, #4
    5060:	4620      	mov	r0, r4
    5062:	f7fe f921 	bl	32a8 <d_make_comp>
    5066:	4602      	mov	r2, r0
    5068:	e730      	b.n	4ecc <d_expression_1+0x28c>
    506a:	68e3      	ldr	r3, [r4, #12]
    506c:	781a      	ldrb	r2, [r3, #0]
    506e:	2a5f      	cmp	r2, #95	; 0x5f
    5070:	f47f af36 	bne.w	4ee0 <d_expression_1+0x2a0>
    5074:	3301      	adds	r3, #1
    5076:	60e3      	str	r3, [r4, #12]
    5078:	2145      	movs	r1, #69	; 0x45
    507a:	4620      	mov	r0, r4
    507c:	f000 f856 	bl	512c <d_exprlist>
    5080:	4603      	mov	r3, r0
    5082:	e6c9      	b.n	4e18 <d_expression_1+0x1d8>
    5084:	3301      	adds	r3, #1
    5086:	60e3      	str	r3, [r4, #12]
    5088:	4620      	mov	r0, r4
    508a:	9201      	str	r2, [sp, #4]
    508c:	f7ff fd10 	bl	4ab0 <d_template_args_1>
    5090:	9a01      	ldr	r2, [sp, #4]
    5092:	4603      	mov	r3, r0
    5094:	2104      	movs	r1, #4
    5096:	4620      	mov	r0, r4
    5098:	f7fe f906 	bl	32a8 <d_make_comp>
    509c:	4602      	mov	r2, r0
    509e:	e74c      	b.n	4f3a <d_expression_1+0x2fa>
    50a0:	781b      	ldrb	r3, [r3, #0]
    50a2:	2b73      	cmp	r3, #115	; 0x73
    50a4:	d00a      	beq.n	50bc <d_expression_1+0x47c>
    50a6:	3b63      	subs	r3, #99	; 0x63
    50a8:	b2db      	uxtb	r3, r3
    50aa:	2b0f      	cmp	r3, #15
    50ac:	f63f aeea 	bhi.w	4e84 <d_expression_1+0x244>
    50b0:	4a1d      	ldr	r2, [pc, #116]	; (5128 <d_expression_1+0x4e8>)
    50b2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    50b6:	2b00      	cmp	r3, #0
    50b8:	f43f aee4 	beq.w	4e84 <d_expression_1+0x244>
    50bc:	4620      	mov	r0, r4
    50be:	f7fe fd45 	bl	3b4c <d_type>
    50c2:	4607      	mov	r7, r0
    50c4:	e6f1      	b.n	4eaa <d_expression_1+0x26a>
    50c6:	2b70      	cmp	r3, #112	; 0x70
    50c8:	d105      	bne.n	50d6 <d_expression_1+0x496>
    50ca:	7873      	ldrb	r3, [r6, #1]
    50cc:	2b74      	cmp	r3, #116	; 0x74
    50ce:	d102      	bne.n	50d6 <d_expression_1+0x496>
    50d0:	78b3      	ldrb	r3, [r6, #2]
    50d2:	2b00      	cmp	r3, #0
    50d4:	d0a9      	beq.n	502a <d_expression_1+0x3ea>
    50d6:	4620      	mov	r0, r4
    50d8:	f7ff fdb2 	bl	4c40 <d_expression_1>
    50dc:	4602      	mov	r2, r0
    50de:	e6f5      	b.n	4ecc <d_expression_1+0x28c>
    50e0:	4620      	mov	r0, r4
    50e2:	f7ff fdad 	bl	4c40 <d_expression_1>
    50e6:	4607      	mov	r7, r0
    50e8:	e6df      	b.n	4eaa <d_expression_1+0x26a>
    50ea:	785b      	ldrb	r3, [r3, #1]
    50ec:	2b73      	cmp	r3, #115	; 0x73
    50ee:	d1a5      	bne.n	503c <d_expression_1+0x3fc>
    50f0:	e7f1      	b.n	50d6 <d_expression_1+0x496>
    50f2:	4620      	mov	r0, r4
    50f4:	f7ff f9fc 	bl	44f0 <d_operator_name>
    50f8:	4607      	mov	r7, r0
    50fa:	e6d6      	b.n	4eaa <d_expression_1+0x26a>
    50fc:	4620      	mov	r0, r4
    50fe:	f7ff f9f7 	bl	44f0 <d_operator_name>
    5102:	e69e      	b.n	4e42 <d_expression_1+0x202>
    5104:	785a      	ldrb	r2, [r3, #1]
    5106:	2a69      	cmp	r2, #105	; 0x69
    5108:	f47f ae24 	bne.w	4d54 <d_expression_1+0x114>
    510c:	3302      	adds	r3, #2
    510e:	60e3      	str	r3, [r4, #12]
    5110:	2145      	movs	r1, #69	; 0x45
    5112:	4620      	mov	r0, r4
    5114:	f000 f80a 	bl	512c <d_exprlist>
    5118:	4603      	mov	r3, r0
    511a:	e69e      	b.n	4e5a <d_expression_1+0x21a>
    511c:	3301      	adds	r3, #1
    511e:	60e3      	str	r3, [r4, #12]
    5120:	2300      	movs	r3, #0
    5122:	e69a      	b.n	4e5a <d_expression_1+0x21a>
    5124:	00040201 	.word	0x00040201
    5128:	20000370 	.word	0x20000370

0000512c <d_exprlist>:
    512c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    5130:	68c2      	ldr	r2, [r0, #12]
    5132:	460e      	mov	r6, r1
    5134:	7811      	ldrb	r1, [r2, #0]
    5136:	b082      	sub	sp, #8
    5138:	2300      	movs	r3, #0
    513a:	42b1      	cmp	r1, r6
    513c:	4604      	mov	r4, r0
    513e:	9301      	str	r3, [sp, #4]
    5140:	d024      	beq.n	518c <d_exprlist+0x60>
    5142:	f8d0 8030 	ldr.w	r8, [r0, #48]	; 0x30
    5146:	ad01      	add	r5, sp, #4
    5148:	2701      	movs	r7, #1
    514a:	e009      	b.n	5160 <d_exprlist+0x34>
    514c:	f7fe f8ac 	bl	32a8 <d_make_comp>
    5150:	6028      	str	r0, [r5, #0]
    5152:	f100 0510 	add.w	r5, r0, #16
    5156:	b178      	cbz	r0, 5178 <d_exprlist+0x4c>
    5158:	68e3      	ldr	r3, [r4, #12]
    515a:	781a      	ldrb	r2, [r3, #0]
    515c:	42b2      	cmp	r2, r6
    515e:	d00f      	beq.n	5180 <d_exprlist+0x54>
    5160:	6327      	str	r7, [r4, #48]	; 0x30
    5162:	4620      	mov	r0, r4
    5164:	f7ff fd6c 	bl	4c40 <d_expression_1>
    5168:	4602      	mov	r2, r0
    516a:	2300      	movs	r3, #0
    516c:	212e      	movs	r1, #46	; 0x2e
    516e:	4620      	mov	r0, r4
    5170:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
    5174:	2a00      	cmp	r2, #0
    5176:	d1e9      	bne.n	514c <d_exprlist+0x20>
    5178:	2000      	movs	r0, #0
    517a:	b002      	add	sp, #8
    517c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    5180:	9801      	ldr	r0, [sp, #4]
    5182:	3301      	adds	r3, #1
    5184:	60e3      	str	r3, [r4, #12]
    5186:	b002      	add	sp, #8
    5188:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    518c:	3201      	adds	r2, #1
    518e:	60c2      	str	r2, [r0, #12]
    5190:	212e      	movs	r1, #46	; 0x2e
    5192:	461a      	mov	r2, r3
    5194:	b002      	add	sp, #8
    5196:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    519a:	f7fe b885 	b.w	32a8 <d_make_comp>
    519e:	bf00      	nop

000051a0 <d_cv_qualifiers>:
    51a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    51a4:	460f      	mov	r7, r1
    51a6:	68c1      	ldr	r1, [r0, #12]
    51a8:	f1b2 0900 	subs.w	r9, r2, #0
    51ac:	b083      	sub	sp, #12
    51ae:	780a      	ldrb	r2, [r1, #0]
    51b0:	4604      	mov	r4, r0
    51b2:	bf15      	itete	ne
    51b4:	f04f 0a1e 	movne.w	sl, #30
    51b8:	f04f 0a1b 	moveq.w	sl, #27
    51bc:	f04f 081d 	movne.w	r8, #29
    51c0:	f04f 081a 	moveq.w	r8, #26
    51c4:	bf14      	ite	ne
    51c6:	261c      	movne	r6, #28
    51c8:	2619      	moveq	r6, #25
    51ca:	463d      	mov	r5, r7
    51cc:	f04f 0b01 	mov.w	fp, #1
    51d0:	e01b      	b.n	520a <d_cv_qualifiers+0x6a>
    51d2:	2a56      	cmp	r2, #86	; 0x56
    51d4:	d033      	beq.n	523e <d_cv_qualifiers+0x9e>
    51d6:	2a4b      	cmp	r2, #75	; 0x4b
    51d8:	d037      	beq.n	524a <d_cv_qualifiers+0xaa>
    51da:	784b      	ldrb	r3, [r1, #1]
    51dc:	b353      	cbz	r3, 5234 <d_cv_qualifiers+0x94>
    51de:	1c8b      	adds	r3, r1, #2
    51e0:	60e3      	str	r3, [r4, #12]
    51e2:	784b      	ldrb	r3, [r1, #1]
    51e4:	2b78      	cmp	r3, #120	; 0x78
    51e6:	d04f      	beq.n	5288 <d_cv_qualifiers+0xe8>
    51e8:	2b6f      	cmp	r3, #111	; 0x6f
    51ea:	d134      	bne.n	5256 <d_cv_qualifiers+0xb6>
    51ec:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    51ee:	3309      	adds	r3, #9
    51f0:	62e3      	str	r3, [r4, #44]	; 0x2c
    51f2:	2150      	movs	r1, #80	; 0x50
    51f4:	2300      	movs	r3, #0
    51f6:	2200      	movs	r2, #0
    51f8:	4620      	mov	r0, r4
    51fa:	f7fe f855 	bl	32a8 <d_make_comp>
    51fe:	6028      	str	r0, [r5, #0]
    5200:	b1c0      	cbz	r0, 5234 <d_cv_qualifiers+0x94>
    5202:	68e1      	ldr	r1, [r4, #12]
    5204:	780a      	ldrb	r2, [r1, #0]
    5206:	f100 050c 	add.w	r5, r0, #12
    520a:	4608      	mov	r0, r1
    520c:	f7fe fa24 	bl	3658 <next_is_type_qual.isra.0>
    5210:	2800      	cmp	r0, #0
    5212:	d03f      	beq.n	5294 <d_cv_qualifiers+0xf4>
    5214:	1c4b      	adds	r3, r1, #1
    5216:	2a72      	cmp	r2, #114	; 0x72
    5218:	60e3      	str	r3, [r4, #12]
    521a:	d1da      	bne.n	51d2 <d_cv_qualifiers+0x32>
    521c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    521e:	3309      	adds	r3, #9
    5220:	62e3      	str	r3, [r4, #44]	; 0x2c
    5222:	4631      	mov	r1, r6
    5224:	2300      	movs	r3, #0
    5226:	2200      	movs	r2, #0
    5228:	4620      	mov	r0, r4
    522a:	f7fe f83d 	bl	32a8 <d_make_comp>
    522e:	6028      	str	r0, [r5, #0]
    5230:	2800      	cmp	r0, #0
    5232:	d1e6      	bne.n	5202 <d_cv_qualifiers+0x62>
    5234:	2500      	movs	r5, #0
    5236:	4628      	mov	r0, r5
    5238:	b003      	add	sp, #12
    523a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    523e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    5240:	3309      	adds	r3, #9
    5242:	62e3      	str	r3, [r4, #44]	; 0x2c
    5244:	4641      	mov	r1, r8
    5246:	2300      	movs	r3, #0
    5248:	e7d5      	b.n	51f6 <d_cv_qualifiers+0x56>
    524a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    524c:	3306      	adds	r3, #6
    524e:	62e3      	str	r3, [r4, #44]	; 0x2c
    5250:	4651      	mov	r1, sl
    5252:	2300      	movs	r3, #0
    5254:	e7cf      	b.n	51f6 <d_cv_qualifiers+0x56>
    5256:	2b4f      	cmp	r3, #79	; 0x4f
    5258:	d138      	bne.n	52cc <d_cv_qualifiers+0x12c>
    525a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    525c:	3309      	adds	r3, #9
    525e:	62e3      	str	r3, [r4, #44]	; 0x2c
    5260:	4620      	mov	r0, r4
    5262:	6b23      	ldr	r3, [r4, #48]	; 0x30
    5264:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
    5268:	9301      	str	r3, [sp, #4]
    526a:	f7ff fce9 	bl	4c40 <d_expression_1>
    526e:	9b01      	ldr	r3, [sp, #4]
    5270:	6323      	str	r3, [r4, #48]	; 0x30
    5272:	4603      	mov	r3, r0
    5274:	2800      	cmp	r0, #0
    5276:	d0dd      	beq.n	5234 <d_cv_qualifiers+0x94>
    5278:	68e2      	ldr	r2, [r4, #12]
    527a:	7811      	ldrb	r1, [r2, #0]
    527c:	2945      	cmp	r1, #69	; 0x45
    527e:	d1d9      	bne.n	5234 <d_cv_qualifiers+0x94>
    5280:	3201      	adds	r2, #1
    5282:	60e2      	str	r2, [r4, #12]
    5284:	2150      	movs	r1, #80	; 0x50
    5286:	e7b6      	b.n	51f6 <d_cv_qualifiers+0x56>
    5288:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    528a:	3311      	adds	r3, #17
    528c:	62e3      	str	r3, [r4, #44]	; 0x2c
    528e:	214e      	movs	r1, #78	; 0x4e
    5290:	2300      	movs	r3, #0
    5292:	e7b0      	b.n	51f6 <d_cv_qualifiers+0x56>
    5294:	f1b9 0f00 	cmp.w	r9, #0
    5298:	d1cd      	bne.n	5236 <d_cv_qualifiers+0x96>
    529a:	2a46      	cmp	r2, #70	; 0x46
    529c:	d1cb      	bne.n	5236 <d_cv_qualifiers+0x96>
    529e:	42bd      	cmp	r5, r7
    52a0:	d0c9      	beq.n	5236 <d_cv_qualifiers+0x96>
    52a2:	201d      	movs	r0, #29
    52a4:	211e      	movs	r1, #30
    52a6:	221c      	movs	r2, #28
    52a8:	e004      	b.n	52b4 <d_cv_qualifiers+0x114>
    52aa:	2b19      	cmp	r3, #25
    52ac:	d00c      	beq.n	52c8 <d_cv_qualifiers+0x128>
    52ae:	370c      	adds	r7, #12
    52b0:	42bd      	cmp	r5, r7
    52b2:	d0c0      	beq.n	5236 <d_cv_qualifiers+0x96>
    52b4:	683f      	ldr	r7, [r7, #0]
    52b6:	783b      	ldrb	r3, [r7, #0]
    52b8:	2b1a      	cmp	r3, #26
    52ba:	d003      	beq.n	52c4 <d_cv_qualifiers+0x124>
    52bc:	2b1b      	cmp	r3, #27
    52be:	d1f4      	bne.n	52aa <d_cv_qualifiers+0x10a>
    52c0:	7039      	strb	r1, [r7, #0]
    52c2:	e7f4      	b.n	52ae <d_cv_qualifiers+0x10e>
    52c4:	7038      	strb	r0, [r7, #0]
    52c6:	e7f2      	b.n	52ae <d_cv_qualifiers+0x10e>
    52c8:	703a      	strb	r2, [r7, #0]
    52ca:	e7f0      	b.n	52ae <d_cv_qualifiers+0x10e>
    52cc:	2b77      	cmp	r3, #119	; 0x77
    52ce:	d1b1      	bne.n	5234 <d_cv_qualifiers+0x94>
    52d0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    52d2:	3306      	adds	r3, #6
    52d4:	62e3      	str	r3, [r4, #44]	; 0x2c
    52d6:	4620      	mov	r0, r4
    52d8:	f7ff f870 	bl	43bc <d_parmlist>
    52dc:	4603      	mov	r3, r0
    52de:	2800      	cmp	r0, #0
    52e0:	d0a8      	beq.n	5234 <d_cv_qualifiers+0x94>
    52e2:	68e2      	ldr	r2, [r4, #12]
    52e4:	7811      	ldrb	r1, [r2, #0]
    52e6:	2945      	cmp	r1, #69	; 0x45
    52e8:	d1a4      	bne.n	5234 <d_cv_qualifiers+0x94>
    52ea:	3201      	adds	r2, #1
    52ec:	60e2      	str	r2, [r4, #12]
    52ee:	2151      	movs	r1, #81	; 0x51
    52f0:	e781      	b.n	51f6 <d_cv_qualifiers+0x56>
    52f2:	bf00      	nop

000052f4 <d_special_name>:
    52f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    52f8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
    52fa:	68c3      	ldr	r3, [r0, #12]
    52fc:	f101 0214 	add.w	r2, r1, #20
    5300:	62c2      	str	r2, [r0, #44]	; 0x2c
    5302:	781a      	ldrb	r2, [r3, #0]
    5304:	2a54      	cmp	r2, #84	; 0x54
    5306:	b082      	sub	sp, #8
    5308:	4604      	mov	r4, r0
    530a:	d075      	beq.n	53f8 <d_special_name+0x104>
    530c:	2a47      	cmp	r2, #71	; 0x47
    530e:	d128      	bne.n	5362 <d_special_name+0x6e>
    5310:	1c5a      	adds	r2, r3, #1
    5312:	60c2      	str	r2, [r0, #12]
    5314:	785a      	ldrb	r2, [r3, #1]
    5316:	b322      	cbz	r2, 5362 <d_special_name+0x6e>
    5318:	1c9a      	adds	r2, r3, #2
    531a:	60c2      	str	r2, [r0, #12]
    531c:	785a      	ldrb	r2, [r3, #1]
    531e:	2a56      	cmp	r2, #86	; 0x56
    5320:	d823      	bhi.n	536a <d_special_name+0x76>
    5322:	2a40      	cmp	r2, #64	; 0x40
    5324:	d91d      	bls.n	5362 <d_special_name+0x6e>
    5326:	3a41      	subs	r2, #65	; 0x41
    5328:	2a15      	cmp	r2, #21
    532a:	d81a      	bhi.n	5362 <d_special_name+0x6e>
    532c:	e8df f012 	tbh	[pc, r2, lsl #1]
    5330:	0019011d 	.word	0x0019011d
    5334:	00190019 	.word	0x00190019
    5338:	00190019 	.word	0x00190019
    533c:	00190019 	.word	0x00190019
    5340:	00190019 	.word	0x00190019
    5344:	00190019 	.word	0x00190019
    5348:	00190019 	.word	0x00190019
    534c:	00190019 	.word	0x00190019
    5350:	00ff0019 	.word	0x00ff0019
    5354:	00e90019 	.word	0x00e90019
    5358:	00de0019 	.word	0x00de0019
    535c:	68e3      	ldr	r3, [r4, #12]
    535e:	3302      	adds	r3, #2
    5360:	60e3      	str	r3, [r4, #12]
    5362:	2000      	movs	r0, #0
    5364:	b002      	add	sp, #8
    5366:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    536a:	2a72      	cmp	r2, #114	; 0x72
    536c:	d1f9      	bne.n	5362 <d_special_name+0x6e>
    536e:	f7fe f813 	bl	3398 <d_number>
    5372:	2801      	cmp	r0, #1
    5374:	ddf5      	ble.n	5362 <d_special_name+0x6e>
    5376:	68e3      	ldr	r3, [r4, #12]
    5378:	781a      	ldrb	r2, [r3, #0]
    537a:	2a00      	cmp	r2, #0
    537c:	d0f1      	beq.n	5362 <d_special_name+0x6e>
    537e:	1c5e      	adds	r6, r3, #1
    5380:	60e6      	str	r6, [r4, #12]
    5382:	781b      	ldrb	r3, [r3, #0]
    5384:	2b5f      	cmp	r3, #95	; 0x5f
    5386:	d1ec      	bne.n	5362 <d_special_name+0x6e>
    5388:	2200      	movs	r2, #0
    538a:	1e45      	subs	r5, r0, #1
    538c:	4617      	mov	r7, r2
    538e:	f04f 0842 	mov.w	r8, #66	; 0x42
    5392:	7833      	ldrb	r3, [r6, #0]
    5394:	2b00      	cmp	r3, #0
    5396:	d0e4      	beq.n	5362 <d_special_name+0x6e>
    5398:	2b24      	cmp	r3, #36	; 0x24
    539a:	f040 819f 	bne.w	56dc <d_special_name+0x3e8>
    539e:	7873      	ldrb	r3, [r6, #1]
    53a0:	2b53      	cmp	r3, #83	; 0x53
    53a2:	f000 81bf 	beq.w	5724 <d_special_name+0x430>
    53a6:	2b5f      	cmp	r3, #95	; 0x5f
    53a8:	f000 81ba 	beq.w	5720 <d_special_name+0x42c>
    53ac:	2b24      	cmp	r3, #36	; 0x24
    53ae:	d1d8      	bne.n	5362 <d_special_name+0x6e>
    53b0:	4619      	mov	r1, r3
    53b2:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
    53b6:	4298      	cmp	r0, r3
    53b8:	dad0      	bge.n	535c <d_special_name+0x68>
    53ba:	6926      	ldr	r6, [r4, #16]
    53bc:	eb00 0c80 	add.w	ip, r0, r0, lsl #2
    53c0:	eb06 038c 	add.w	r3, r6, ip, lsl #2
    53c4:	3001      	adds	r0, #1
    53c6:	e9c3 7701 	strd	r7, r7, [r3, #4]
    53ca:	6160      	str	r0, [r4, #20]
    53cc:	f806 802c 	strb.w	r8, [r6, ip, lsl #2]
    53d0:	68e6      	ldr	r6, [r4, #12]
    53d2:	60d9      	str	r1, [r3, #12]
    53d4:	3d02      	subs	r5, #2
    53d6:	3602      	adds	r6, #2
    53d8:	60e6      	str	r6, [r4, #12]
    53da:	2a00      	cmp	r2, #0
    53dc:	f000 819e 	beq.w	571c <d_special_name+0x428>
    53e0:	2141      	movs	r1, #65	; 0x41
    53e2:	4620      	mov	r0, r4
    53e4:	f7fd ff60 	bl	32a8 <d_make_comp>
    53e8:	4602      	mov	r2, r0
    53ea:	2800      	cmp	r0, #0
    53ec:	d0b9      	beq.n	5362 <d_special_name+0x6e>
    53ee:	2d00      	cmp	r5, #0
    53f0:	dccf      	bgt.n	5392 <d_special_name+0x9e>
    53f2:	2300      	movs	r3, #0
    53f4:	2140      	movs	r1, #64	; 0x40
    53f6:	e07e      	b.n	54f6 <d_special_name+0x202>
    53f8:	1c5a      	adds	r2, r3, #1
    53fa:	60c2      	str	r2, [r0, #12]
    53fc:	785a      	ldrb	r2, [r3, #1]
    53fe:	2a00      	cmp	r2, #0
    5400:	d0af      	beq.n	5362 <d_special_name+0x6e>
    5402:	1c9a      	adds	r2, r3, #2
    5404:	60c2      	str	r2, [r0, #12]
    5406:	785b      	ldrb	r3, [r3, #1]
    5408:	3b41      	subs	r3, #65	; 0x41
    540a:	2b35      	cmp	r3, #53	; 0x35
    540c:	d8a9      	bhi.n	5362 <d_special_name+0x6e>
    540e:	a201      	add	r2, pc, #4	; (adr r2, 5414 <d_special_name+0x120>)
    5410:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    5414:	000055db 	.word	0x000055db
    5418:	00005363 	.word	0x00005363
    541c:	000055a7 	.word	0x000055a7
    5420:	00005363 	.word	0x00005363
    5424:	00005363 	.word	0x00005363
    5428:	000055e7 	.word	0x000055e7
    542c:	00005363 	.word	0x00005363
    5430:	0000564b 	.word	0x0000564b
    5434:	000056c5 	.word	0x000056c5
    5438:	000056b9 	.word	0x000056b9
    543c:	00005363 	.word	0x00005363
    5440:	00005363 	.word	0x00005363
    5444:	00005363 	.word	0x00005363
    5448:	00005363 	.word	0x00005363
    544c:	00005363 	.word	0x00005363
    5450:	00005363 	.word	0x00005363
    5454:	00005363 	.word	0x00005363
    5458:	00005363 	.word	0x00005363
    545c:	000056d1 	.word	0x000056d1
    5460:	00005657 	.word	0x00005657
    5464:	00005363 	.word	0x00005363
    5468:	00005667 	.word	0x00005667
    546c:	00005677 	.word	0x00005677
    5470:	00005363 	.word	0x00005363
    5474:	00005363 	.word	0x00005363
    5478:	00005363 	.word	0x00005363
    547c:	00005363 	.word	0x00005363
    5480:	00005363 	.word	0x00005363
    5484:	00005363 	.word	0x00005363
    5488:	00005363 	.word	0x00005363
    548c:	00005363 	.word	0x00005363
    5490:	00005363 	.word	0x00005363
    5494:	00005363 	.word	0x00005363
    5498:	00005363 	.word	0x00005363
    549c:	00005683 	.word	0x00005683
    54a0:	00005363 	.word	0x00005363
    54a4:	00005363 	.word	0x00005363
    54a8:	00005363 	.word	0x00005363
    54ac:	00005363 	.word	0x00005363
    54b0:	000055f3 	.word	0x000055f3
    54b4:	00005363 	.word	0x00005363
    54b8:	00005363 	.word	0x00005363
    54bc:	00005363 	.word	0x00005363
    54c0:	00005363 	.word	0x00005363
    54c4:	00005363 	.word	0x00005363
    54c8:	00005363 	.word	0x00005363
    54cc:	00005363 	.word	0x00005363
    54d0:	00005363 	.word	0x00005363
    54d4:	00005363 	.word	0x00005363
    54d8:	00005363 	.word	0x00005363
    54dc:	00005363 	.word	0x00005363
    54e0:	00005363 	.word	0x00005363
    54e4:	00005363 	.word	0x00005363
    54e8:	0000561f 	.word	0x0000561f
    54ec:	f000 f93c 	bl	5768 <d_name>
    54f0:	2300      	movs	r3, #0
    54f2:	4602      	mov	r2, r0
    54f4:	2113      	movs	r1, #19
    54f6:	4620      	mov	r0, r4
    54f8:	b002      	add	sp, #8
    54fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    54fe:	f7fd bed3 	b.w	32a8 <d_make_comp>
    5502:	789a      	ldrb	r2, [r3, #2]
    5504:	2a00      	cmp	r2, #0
    5506:	f000 810f 	beq.w	5728 <d_special_name+0x434>
    550a:	1cda      	adds	r2, r3, #3
    550c:	60c2      	str	r2, [r0, #12]
    550e:	789a      	ldrb	r2, [r3, #2]
    5510:	78db      	ldrb	r3, [r3, #3]
    5512:	2a6e      	cmp	r2, #110	; 0x6e
    5514:	d03a      	beq.n	558c <d_special_name+0x298>
    5516:	2b47      	cmp	r3, #71	; 0x47
    5518:	d002      	beq.n	5520 <d_special_name+0x22c>
    551a:	2b54      	cmp	r3, #84	; 0x54
    551c:	f040 8104 	bne.w	5728 <d_special_name+0x434>
    5520:	4620      	mov	r0, r4
    5522:	f7ff fee7 	bl	52f4 <d_special_name>
    5526:	4602      	mov	r2, r0
    5528:	2300      	movs	r3, #0
    552a:	214a      	movs	r1, #74	; 0x4a
    552c:	e7e3      	b.n	54f6 <d_special_name+0x202>
    552e:	f000 f91b 	bl	5768 <d_name>
    5532:	e9d4 1305 	ldrd	r1, r3, [r4, #20]
    5536:	4299      	cmp	r1, r3
    5538:	4602      	mov	r2, r0
    553a:	f280 80ff 	bge.w	573c <d_special_name+0x448>
    553e:	9001      	str	r0, [sp, #4]
    5540:	6920      	ldr	r0, [r4, #16]
    5542:	eb01 0681 	add.w	r6, r1, r1, lsl #2
    5546:	eb00 0586 	add.w	r5, r0, r6, lsl #2
    554a:	2300      	movs	r3, #0
    554c:	e9c5 3301 	strd	r3, r3, [r5, #4]
    5550:	3101      	adds	r1, #1
    5552:	2343      	movs	r3, #67	; 0x43
    5554:	6161      	str	r1, [r4, #20]
    5556:	f800 3026 	strb.w	r3, [r0, r6, lsl #2]
    555a:	4620      	mov	r0, r4
    555c:	f7fd ff1c 	bl	3398 <d_number>
    5560:	9a01      	ldr	r2, [sp, #4]
    5562:	60e8      	str	r0, [r5, #12]
    5564:	462b      	mov	r3, r5
    5566:	2116      	movs	r1, #22
    5568:	e7c5      	b.n	54f6 <d_special_name+0x202>
    556a:	789b      	ldrb	r3, [r3, #2]
    556c:	2b47      	cmp	r3, #71	; 0x47
    556e:	d001      	beq.n	5574 <d_special_name+0x280>
    5570:	2b54      	cmp	r3, #84	; 0x54
    5572:	d106      	bne.n	5582 <d_special_name+0x28e>
    5574:	4620      	mov	r0, r4
    5576:	f7ff febd 	bl	52f4 <d_special_name>
    557a:	4602      	mov	r2, r0
    557c:	2300      	movs	r3, #0
    557e:	2117      	movs	r1, #23
    5580:	e7b9      	b.n	54f6 <d_special_name+0x202>
    5582:	2100      	movs	r1, #0
    5584:	f000 fa3e 	bl	5a04 <d_encoding.part.0>
    5588:	4602      	mov	r2, r0
    558a:	e7f7      	b.n	557c <d_special_name+0x288>
    558c:	2b47      	cmp	r3, #71	; 0x47
    558e:	f000 80e1 	beq.w	5754 <d_special_name+0x460>
    5592:	2b54      	cmp	r3, #84	; 0x54
    5594:	f000 80de 	beq.w	5754 <d_special_name+0x460>
    5598:	2100      	movs	r1, #0
    559a:	f000 fa33 	bl	5a04 <d_encoding.part.0>
    559e:	4602      	mov	r2, r0
    55a0:	2300      	movs	r3, #0
    55a2:	214b      	movs	r1, #75	; 0x4b
    55a4:	e7a7      	b.n	54f6 <d_special_name+0x202>
    55a6:	f7fe fad1 	bl	3b4c <d_type>
    55aa:	4605      	mov	r5, r0
    55ac:	4620      	mov	r0, r4
    55ae:	f7fd fef3 	bl	3398 <d_number>
    55b2:	2800      	cmp	r0, #0
    55b4:	f6ff aed5 	blt.w	5362 <d_special_name+0x6e>
    55b8:	68e3      	ldr	r3, [r4, #12]
    55ba:	781a      	ldrb	r2, [r3, #0]
    55bc:	2a5f      	cmp	r2, #95	; 0x5f
    55be:	f47f aed0 	bne.w	5362 <d_special_name+0x6e>
    55c2:	3301      	adds	r3, #1
    55c4:	60e3      	str	r3, [r4, #12]
    55c6:	4620      	mov	r0, r4
    55c8:	f7fe fac0 	bl	3b4c <d_type>
    55cc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    55ce:	3105      	adds	r1, #5
    55d0:	62e1      	str	r1, [r4, #44]	; 0x2c
    55d2:	4602      	mov	r2, r0
    55d4:	462b      	mov	r3, r5
    55d6:	210b      	movs	r1, #11
    55d8:	e78d      	b.n	54f6 <d_special_name+0x202>
    55da:	f7ff fa3d 	bl	4a58 <d_template_arg>
    55de:	2300      	movs	r3, #0
    55e0:	4602      	mov	r2, r0
    55e2:	2130      	movs	r1, #48	; 0x30
    55e4:	e787      	b.n	54f6 <d_special_name+0x202>
    55e6:	f7fe fab1 	bl	3b4c <d_type>
    55ea:	2300      	movs	r3, #0
    55ec:	4602      	mov	r2, r0
    55ee:	210e      	movs	r1, #14
    55f0:	e781      	b.n	54f6 <d_special_name+0x202>
    55f2:	2168      	movs	r1, #104	; 0x68
    55f4:	f7fd ff0a 	bl	340c <d_call_offset>
    55f8:	2800      	cmp	r0, #0
    55fa:	f43f aeb2 	beq.w	5362 <d_special_name+0x6e>
    55fe:	68e3      	ldr	r3, [r4, #12]
    5600:	781b      	ldrb	r3, [r3, #0]
    5602:	2b47      	cmp	r3, #71	; 0x47
    5604:	f000 80a1 	beq.w	574a <d_special_name+0x456>
    5608:	2b54      	cmp	r3, #84	; 0x54
    560a:	f000 809e 	beq.w	574a <d_special_name+0x456>
    560e:	2100      	movs	r1, #0
    5610:	4620      	mov	r0, r4
    5612:	f000 f9f7 	bl	5a04 <d_encoding.part.0>
    5616:	4602      	mov	r2, r0
    5618:	2300      	movs	r3, #0
    561a:	210f      	movs	r1, #15
    561c:	e76b      	b.n	54f6 <d_special_name+0x202>
    561e:	2176      	movs	r1, #118	; 0x76
    5620:	f7fd fef4 	bl	340c <d_call_offset>
    5624:	2800      	cmp	r0, #0
    5626:	f43f ae9c 	beq.w	5362 <d_special_name+0x6e>
    562a:	68e3      	ldr	r3, [r4, #12]
    562c:	781b      	ldrb	r3, [r3, #0]
    562e:	2b47      	cmp	r3, #71	; 0x47
    5630:	f000 8086 	beq.w	5740 <d_special_name+0x44c>
    5634:	2b54      	cmp	r3, #84	; 0x54
    5636:	f000 8083 	beq.w	5740 <d_special_name+0x44c>
    563a:	2100      	movs	r1, #0
    563c:	4620      	mov	r0, r4
    563e:	f000 f9e1 	bl	5a04 <d_encoding.part.0>
    5642:	4602      	mov	r2, r0
    5644:	2300      	movs	r3, #0
    5646:	2110      	movs	r1, #16
    5648:	e755      	b.n	54f6 <d_special_name+0x202>
    564a:	f000 f88d 	bl	5768 <d_name>
    564e:	2300      	movs	r3, #0
    5650:	4602      	mov	r2, r0
    5652:	2114      	movs	r1, #20
    5654:	e74f      	b.n	54f6 <d_special_name+0x202>
    5656:	310a      	adds	r1, #10
    5658:	62c1      	str	r1, [r0, #44]	; 0x2c
    565a:	f7fe fa77 	bl	3b4c <d_type>
    565e:	2300      	movs	r3, #0
    5660:	4602      	mov	r2, r0
    5662:	210a      	movs	r1, #10
    5664:	e747      	b.n	54f6 <d_special_name+0x202>
    5666:	310f      	adds	r1, #15
    5668:	62c1      	str	r1, [r0, #44]	; 0x2c
    566a:	f7fe fa6f 	bl	3b4c <d_type>
    566e:	2300      	movs	r3, #0
    5670:	4602      	mov	r2, r0
    5672:	2109      	movs	r1, #9
    5674:	e73f      	b.n	54f6 <d_special_name+0x202>
    5676:	f000 f877 	bl	5768 <d_name>
    567a:	2300      	movs	r3, #0
    567c:	4602      	mov	r2, r0
    567e:	2115      	movs	r1, #21
    5680:	e739      	b.n	54f6 <d_special_name+0x202>
    5682:	2100      	movs	r1, #0
    5684:	f7fd fec2 	bl	340c <d_call_offset>
    5688:	2800      	cmp	r0, #0
    568a:	f43f ae6a 	beq.w	5362 <d_special_name+0x6e>
    568e:	2100      	movs	r1, #0
    5690:	4620      	mov	r0, r4
    5692:	f7fd febb 	bl	340c <d_call_offset>
    5696:	2800      	cmp	r0, #0
    5698:	f43f ae63 	beq.w	5362 <d_special_name+0x6e>
    569c:	68e3      	ldr	r3, [r4, #12]
    569e:	781b      	ldrb	r3, [r3, #0]
    56a0:	2b47      	cmp	r3, #71	; 0x47
    56a2:	d05c      	beq.n	575e <d_special_name+0x46a>
    56a4:	2b54      	cmp	r3, #84	; 0x54
    56a6:	d05a      	beq.n	575e <d_special_name+0x46a>
    56a8:	2100      	movs	r1, #0
    56aa:	4620      	mov	r0, r4
    56ac:	f000 f9aa 	bl	5a04 <d_encoding.part.0>
    56b0:	4602      	mov	r2, r0
    56b2:	2300      	movs	r3, #0
    56b4:	2111      	movs	r1, #17
    56b6:	e71e      	b.n	54f6 <d_special_name+0x202>
    56b8:	f7fe fa48 	bl	3b4c <d_type>
    56bc:	2300      	movs	r3, #0
    56be:	4602      	mov	r2, r0
    56c0:	2112      	movs	r1, #18
    56c2:	e718      	b.n	54f6 <d_special_name+0x202>
    56c4:	f7fe fa42 	bl	3b4c <d_type>
    56c8:	2300      	movs	r3, #0
    56ca:	4602      	mov	r2, r0
    56cc:	210c      	movs	r1, #12
    56ce:	e712      	b.n	54f6 <d_special_name+0x202>
    56d0:	f7fe fa3c 	bl	3b4c <d_type>
    56d4:	2300      	movs	r3, #0
    56d6:	4602      	mov	r2, r0
    56d8:	210d      	movs	r1, #13
    56da:	e70c      	b.n	54f6 <d_special_name+0x202>
    56dc:	46b4      	mov	ip, r6
    56de:	2100      	movs	r1, #0
    56e0:	e004      	b.n	56ec <d_special_name+0x3f8>
    56e2:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    56e6:	b123      	cbz	r3, 56f2 <d_special_name+0x3fe>
    56e8:	2b24      	cmp	r3, #36	; 0x24
    56ea:	d002      	beq.n	56f2 <d_special_name+0x3fe>
    56ec:	3101      	adds	r1, #1
    56ee:	42a9      	cmp	r1, r5
    56f0:	dbf7      	blt.n	56e2 <d_special_name+0x3ee>
    56f2:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
    56f6:	4283      	cmp	r3, r0
    56f8:	da1c      	bge.n	5734 <d_special_name+0x440>
    56fa:	6920      	ldr	r0, [r4, #16]
    56fc:	eb03 0c83 	add.w	ip, r3, r3, lsl #2
    5700:	3301      	adds	r3, #1
    5702:	6163      	str	r3, [r4, #20]
    5704:	eb00 038c 	add.w	r3, r0, ip, lsl #2
    5708:	e9c3 7701 	strd	r7, r7, [r3, #4]
    570c:	f800 702c 	strb.w	r7, [r0, ip, lsl #2]
    5710:	e9c3 6103 	strd	r6, r1, [r3, #12]
    5714:	68e6      	ldr	r6, [r4, #12]
    5716:	1a6d      	subs	r5, r5, r1
    5718:	440e      	add	r6, r1
    571a:	e65d      	b.n	53d8 <d_special_name+0xe4>
    571c:	461a      	mov	r2, r3
    571e:	e666      	b.n	53ee <d_special_name+0xfa>
    5720:	212e      	movs	r1, #46	; 0x2e
    5722:	e646      	b.n	53b2 <d_special_name+0xbe>
    5724:	212f      	movs	r1, #47	; 0x2f
    5726:	e644      	b.n	53b2 <d_special_name+0xbe>
    5728:	2100      	movs	r1, #0
    572a:	4620      	mov	r0, r4
    572c:	f000 f96a 	bl	5a04 <d_encoding.part.0>
    5730:	4602      	mov	r2, r0
    5732:	e6f9      	b.n	5528 <d_special_name+0x234>
    5734:	68e3      	ldr	r3, [r4, #12]
    5736:	440b      	add	r3, r1
    5738:	60e3      	str	r3, [r4, #12]
    573a:	e612      	b.n	5362 <d_special_name+0x6e>
    573c:	2500      	movs	r5, #0
    573e:	e711      	b.n	5564 <d_special_name+0x270>
    5740:	4620      	mov	r0, r4
    5742:	f7ff fdd7 	bl	52f4 <d_special_name>
    5746:	4602      	mov	r2, r0
    5748:	e77c      	b.n	5644 <d_special_name+0x350>
    574a:	4620      	mov	r0, r4
    574c:	f7ff fdd2 	bl	52f4 <d_special_name>
    5750:	4602      	mov	r2, r0
    5752:	e761      	b.n	5618 <d_special_name+0x324>
    5754:	4620      	mov	r0, r4
    5756:	f7ff fdcd 	bl	52f4 <d_special_name>
    575a:	4602      	mov	r2, r0
    575c:	e720      	b.n	55a0 <d_special_name+0x2ac>
    575e:	4620      	mov	r0, r4
    5760:	f7ff fdc8 	bl	52f4 <d_special_name>
    5764:	4602      	mov	r2, r0
    5766:	e7a4      	b.n	56b2 <d_special_name+0x3be>

00005768 <d_name>:
    5768:	b5f0      	push	{r4, r5, r6, r7, lr}
    576a:	68c2      	ldr	r2, [r0, #12]
    576c:	7813      	ldrb	r3, [r2, #0]
    576e:	3b4e      	subs	r3, #78	; 0x4e
    5770:	b083      	sub	sp, #12
    5772:	4604      	mov	r4, r0
    5774:	2b0c      	cmp	r3, #12
    5776:	d808      	bhi.n	578a <d_name+0x22>
    5778:	e8df f003 	tbb	[pc, r3]
    577c:	07070731 	.word	0x07070731
    5780:	12071707 	.word	0x12071707
    5784:	07070707 	.word	0x07070707
    5788:	55          	.byte	0x55
    5789:	00          	.byte	0x00
    578a:	f7fe ff35 	bl	45f8 <d_unqualified_name>
    578e:	68e3      	ldr	r3, [r4, #12]
    5790:	781a      	ldrb	r2, [r3, #0]
    5792:	2a49      	cmp	r2, #73	; 0x49
    5794:	4605      	mov	r5, r0
    5796:	f000 80d2 	beq.w	593e <d_name+0x1d6>
    579a:	4628      	mov	r0, r5
    579c:	b003      	add	sp, #12
    579e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    57a0:	b003      	add	sp, #12
    57a2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    57a6:	f7fe bf27 	b.w	45f8 <d_unqualified_name>
    57aa:	7853      	ldrb	r3, [r2, #1]
    57ac:	2b74      	cmp	r3, #116	; 0x74
    57ae:	f000 808e 	beq.w	58ce <d_name+0x166>
    57b2:	2100      	movs	r1, #0
    57b4:	f7fe f900 	bl	39b8 <d_substitution>
    57b8:	68e3      	ldr	r3, [r4, #12]
    57ba:	781a      	ldrb	r2, [r3, #0]
    57bc:	2a49      	cmp	r2, #73	; 0x49
    57be:	4605      	mov	r5, r0
    57c0:	d1eb      	bne.n	579a <d_name+0x32>
    57c2:	3301      	adds	r3, #1
    57c4:	60e3      	str	r3, [r4, #12]
    57c6:	4620      	mov	r0, r4
    57c8:	f7ff f972 	bl	4ab0 <d_template_args_1>
    57cc:	4603      	mov	r3, r0
    57ce:	462a      	mov	r2, r5
    57d0:	2104      	movs	r1, #4
    57d2:	4620      	mov	r0, r4
    57d4:	b003      	add	sp, #12
    57d6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    57da:	f7fd bd65 	b.w	32a8 <d_make_comp>
    57de:	3201      	adds	r2, #1
    57e0:	60c2      	str	r2, [r0, #12]
    57e2:	a901      	add	r1, sp, #4
    57e4:	2201      	movs	r2, #1
    57e6:	f7ff fcdb 	bl	51a0 <d_cv_qualifiers>
    57ea:	4605      	mov	r5, r0
    57ec:	2800      	cmp	r0, #0
    57ee:	f000 80b7 	beq.w	5960 <d_name+0x1f8>
    57f2:	2100      	movs	r1, #0
    57f4:	4620      	mov	r0, r4
    57f6:	f7fd fe2d 	bl	3454 <d_ref_qualifier>
    57fa:	2101      	movs	r1, #1
    57fc:	4606      	mov	r6, r0
    57fe:	4620      	mov	r0, r4
    5800:	f7ff f988 	bl	4b14 <d_prefix>
    5804:	6028      	str	r0, [r5, #0]
    5806:	2800      	cmp	r0, #0
    5808:	f000 80aa 	beq.w	5960 <d_name+0x1f8>
    580c:	b116      	cbz	r6, 5814 <d_name+0xac>
    580e:	9b01      	ldr	r3, [sp, #4]
    5810:	60f3      	str	r3, [r6, #12]
    5812:	9601      	str	r6, [sp, #4]
    5814:	68e3      	ldr	r3, [r4, #12]
    5816:	781a      	ldrb	r2, [r3, #0]
    5818:	2a45      	cmp	r2, #69	; 0x45
    581a:	f040 80a1 	bne.w	5960 <d_name+0x1f8>
    581e:	3301      	adds	r3, #1
    5820:	9d01      	ldr	r5, [sp, #4]
    5822:	60e3      	str	r3, [r4, #12]
    5824:	e7b9      	b.n	579a <d_name+0x32>
    5826:	1c53      	adds	r3, r2, #1
    5828:	60c3      	str	r3, [r0, #12]
    582a:	7853      	ldrb	r3, [r2, #1]
    582c:	2b47      	cmp	r3, #71	; 0x47
    582e:	d002      	beq.n	5836 <d_name+0xce>
    5830:	2b54      	cmp	r3, #84	; 0x54
    5832:	f040 8099 	bne.w	5968 <d_name+0x200>
    5836:	4620      	mov	r0, r4
    5838:	f7ff fd5c 	bl	52f4 <d_special_name>
    583c:	4605      	mov	r5, r0
    583e:	2d00      	cmp	r5, #0
    5840:	f000 808e 	beq.w	5960 <d_name+0x1f8>
    5844:	68e3      	ldr	r3, [r4, #12]
    5846:	781a      	ldrb	r2, [r3, #0]
    5848:	2a45      	cmp	r2, #69	; 0x45
    584a:	f040 8089 	bne.w	5960 <d_name+0x1f8>
    584e:	1c5a      	adds	r2, r3, #1
    5850:	60e2      	str	r2, [r4, #12]
    5852:	785a      	ldrb	r2, [r3, #1]
    5854:	2a73      	cmp	r2, #115	; 0x73
    5856:	f000 80ad 	beq.w	59b4 <d_name+0x24c>
    585a:	2a64      	cmp	r2, #100	; 0x64
    585c:	f000 8089 	beq.w	5972 <d_name+0x20a>
    5860:	4620      	mov	r0, r4
    5862:	f7ff ff81 	bl	5768 <d_name>
    5866:	4603      	mov	r3, r0
    5868:	b328      	cbz	r0, 58b6 <d_name+0x14e>
    586a:	7802      	ldrb	r2, [r0, #0]
    586c:	2a47      	cmp	r2, #71	; 0x47
    586e:	d022      	beq.n	58b6 <d_name+0x14e>
    5870:	2a49      	cmp	r2, #73	; 0x49
    5872:	d020      	beq.n	58b6 <d_name+0x14e>
    5874:	461f      	mov	r7, r3
    5876:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
    587a:	4620      	mov	r0, r4
    587c:	f7fd fe7e 	bl	357c <d_discriminator>
    5880:	2800      	cmp	r0, #0
    5882:	d06d      	beq.n	5960 <d_name+0x1f8>
    5884:	1c73      	adds	r3, r6, #1
    5886:	bf08      	it	eq
    5888:	463b      	moveq	r3, r7
    588a:	d014      	beq.n	58b6 <d_name+0x14e>
    588c:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
    5890:	429a      	cmp	r2, r3
    5892:	f280 80b0 	bge.w	59f6 <d_name+0x28e>
    5896:	6921      	ldr	r1, [r4, #16]
    5898:	eb02 0082 	add.w	r0, r2, r2, lsl #2
    589c:	eb01 0380 	add.w	r3, r1, r0, lsl #2
    58a0:	3201      	adds	r2, #1
    58a2:	f04f 0c00 	mov.w	ip, #0
    58a6:	e9c3 cc01 	strd	ip, ip, [r3, #4]
    58aa:	6162      	str	r2, [r4, #20]
    58ac:	2248      	movs	r2, #72	; 0x48
    58ae:	f801 2020 	strb.w	r2, [r1, r0, lsl #2]
    58b2:	e9c3 7603 	strd	r7, r6, [r3, #12]
    58b6:	782a      	ldrb	r2, [r5, #0]
    58b8:	2a03      	cmp	r2, #3
    58ba:	d105      	bne.n	58c8 <d_name+0x160>
    58bc:	692a      	ldr	r2, [r5, #16]
    58be:	7811      	ldrb	r1, [r2, #0]
    58c0:	2929      	cmp	r1, #41	; 0x29
    58c2:	bf04      	itt	eq
    58c4:	2100      	moveq	r1, #0
    58c6:	60d1      	streq	r1, [r2, #12]
    58c8:	462a      	mov	r2, r5
    58ca:	2102      	movs	r1, #2
    58cc:	e781      	b.n	57d2 <d_name+0x6a>
    58ce:	e9d0 3105 	ldrd	r3, r1, [r0, #20]
    58d2:	3202      	adds	r2, #2
    58d4:	428b      	cmp	r3, r1
    58d6:	60c2      	str	r2, [r0, #12]
    58d8:	f280 8088 	bge.w	59ec <d_name+0x284>
    58dc:	6902      	ldr	r2, [r0, #16]
    58de:	eb03 0583 	add.w	r5, r3, r3, lsl #2
    58e2:	00a9      	lsls	r1, r5, #2
    58e4:	3301      	adds	r3, #1
    58e6:	6143      	str	r3, [r0, #20]
    58e8:	eb02 0585 	add.w	r5, r2, r5, lsl #2
    58ec:	2300      	movs	r3, #0
    58ee:	e9c5 3301 	strd	r3, r3, [r5, #4]
    58f2:	5453      	strb	r3, [r2, r1]
    58f4:	4a41      	ldr	r2, [pc, #260]	; (59fc <d_name+0x294>)
    58f6:	2303      	movs	r3, #3
    58f8:	e9c5 2303 	strd	r2, r3, [r5, #12]
    58fc:	4620      	mov	r0, r4
    58fe:	f7fe fe7b 	bl	45f8 <d_unqualified_name>
    5902:	462a      	mov	r2, r5
    5904:	4603      	mov	r3, r0
    5906:	2101      	movs	r1, #1
    5908:	4620      	mov	r0, r4
    590a:	f7fd fccd 	bl	32a8 <d_make_comp>
    590e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    5910:	68e3      	ldr	r3, [r4, #12]
    5912:	3203      	adds	r2, #3
    5914:	62e2      	str	r2, [r4, #44]	; 0x2c
    5916:	781a      	ldrb	r2, [r3, #0]
    5918:	2a49      	cmp	r2, #73	; 0x49
    591a:	4605      	mov	r5, r0
    591c:	f47f af3d 	bne.w	579a <d_name+0x32>
    5920:	b1f0      	cbz	r0, 5960 <d_name+0x1f8>
    5922:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
    5926:	428a      	cmp	r2, r1
    5928:	da1a      	bge.n	5960 <d_name+0x1f8>
    592a:	69e1      	ldr	r1, [r4, #28]
    592c:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
    5930:	3201      	adds	r2, #1
    5932:	6222      	str	r2, [r4, #32]
    5934:	781a      	ldrb	r2, [r3, #0]
    5936:	3a49      	subs	r2, #73	; 0x49
    5938:	2a01      	cmp	r2, #1
    593a:	d80f      	bhi.n	595c <d_name+0x1f4>
    593c:	e741      	b.n	57c2 <d_name+0x5a>
    593e:	b178      	cbz	r0, 5960 <d_name+0x1f8>
    5940:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
    5944:	428a      	cmp	r2, r1
    5946:	da0b      	bge.n	5960 <d_name+0x1f8>
    5948:	69e1      	ldr	r1, [r4, #28]
    594a:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
    594e:	3201      	adds	r2, #1
    5950:	6222      	str	r2, [r4, #32]
    5952:	781a      	ldrb	r2, [r3, #0]
    5954:	3a49      	subs	r2, #73	; 0x49
    5956:	2a01      	cmp	r2, #1
    5958:	f67f af33 	bls.w	57c2 <d_name+0x5a>
    595c:	2300      	movs	r3, #0
    595e:	e736      	b.n	57ce <d_name+0x66>
    5960:	2500      	movs	r5, #0
    5962:	4628      	mov	r0, r5
    5964:	b003      	add	sp, #12
    5966:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5968:	2100      	movs	r1, #0
    596a:	f000 f84b 	bl	5a04 <d_encoding.part.0>
    596e:	4605      	mov	r5, r0
    5970:	e765      	b.n	583e <d_name+0xd6>
    5972:	1c9a      	adds	r2, r3, #2
    5974:	60e2      	str	r2, [r4, #12]
    5976:	789a      	ldrb	r2, [r3, #2]
    5978:	2a5f      	cmp	r2, #95	; 0x5f
    597a:	d039      	beq.n	59f0 <d_name+0x288>
    597c:	2a6e      	cmp	r2, #110	; 0x6e
    597e:	d0ef      	beq.n	5960 <d_name+0x1f8>
    5980:	4620      	mov	r0, r4
    5982:	f7fd fd09 	bl	3398 <d_number>
    5986:	1c46      	adds	r6, r0, #1
    5988:	d4ea      	bmi.n	5960 <d_name+0x1f8>
    598a:	68e3      	ldr	r3, [r4, #12]
    598c:	781a      	ldrb	r2, [r3, #0]
    598e:	2a5f      	cmp	r2, #95	; 0x5f
    5990:	d1e6      	bne.n	5960 <d_name+0x1f8>
    5992:	3301      	adds	r3, #1
    5994:	60e3      	str	r3, [r4, #12]
    5996:	4620      	mov	r0, r4
    5998:	f7ff fee6 	bl	5768 <d_name>
    599c:	4607      	mov	r7, r0
    599e:	2800      	cmp	r0, #0
    59a0:	f43f af74 	beq.w	588c <d_name+0x124>
    59a4:	783b      	ldrb	r3, [r7, #0]
    59a6:	2b47      	cmp	r3, #71	; 0x47
    59a8:	f43f af70 	beq.w	588c <d_name+0x124>
    59ac:	2b49      	cmp	r3, #73	; 0x49
    59ae:	f43f af6d 	beq.w	588c <d_name+0x124>
    59b2:	e762      	b.n	587a <d_name+0x112>
    59b4:	3302      	adds	r3, #2
    59b6:	60e3      	str	r3, [r4, #12]
    59b8:	4620      	mov	r0, r4
    59ba:	f7fd fddf 	bl	357c <d_discriminator>
    59be:	2800      	cmp	r0, #0
    59c0:	d0ce      	beq.n	5960 <d_name+0x1f8>
    59c2:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
    59c6:	429a      	cmp	r2, r3
    59c8:	da15      	bge.n	59f6 <d_name+0x28e>
    59ca:	6921      	ldr	r1, [r4, #16]
    59cc:	eb02 0382 	add.w	r3, r2, r2, lsl #2
    59d0:	0098      	lsls	r0, r3, #2
    59d2:	3201      	adds	r2, #1
    59d4:	6162      	str	r2, [r4, #20]
    59d6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    59da:	2200      	movs	r2, #0
    59dc:	e9c3 2201 	strd	r2, r2, [r3, #4]
    59e0:	540a      	strb	r2, [r1, r0]
    59e2:	4907      	ldr	r1, [pc, #28]	; (5a00 <d_name+0x298>)
    59e4:	220e      	movs	r2, #14
    59e6:	e9c3 1203 	strd	r1, r2, [r3, #12]
    59ea:	e764      	b.n	58b6 <d_name+0x14e>
    59ec:	2500      	movs	r5, #0
    59ee:	e785      	b.n	58fc <d_name+0x194>
    59f0:	3303      	adds	r3, #3
    59f2:	2600      	movs	r6, #0
    59f4:	e7ce      	b.n	5994 <d_name+0x22c>
    59f6:	2300      	movs	r3, #0
    59f8:	e75d      	b.n	58b6 <d_name+0x14e>
    59fa:	bf00      	nop
    59fc:	20001cf0 	.word	0x20001cf0
    5a00:	20001ce0 	.word	0x20001ce0

00005a04 <d_encoding.part.0>:
    5a04:	b570      	push	{r4, r5, r6, lr}
    5a06:	4605      	mov	r5, r0
    5a08:	460e      	mov	r6, r1
    5a0a:	f7ff fead 	bl	5768 <d_name>
    5a0e:	b300      	cbz	r0, 5a52 <d_encoding.part.0+0x4e>
    5a10:	4604      	mov	r4, r0
    5a12:	b30e      	cbz	r6, 5a58 <d_encoding.part.0+0x54>
    5a14:	68ab      	ldr	r3, [r5, #8]
    5a16:	07db      	lsls	r3, r3, #31
    5a18:	d41e      	bmi.n	5a58 <d_encoding.part.0+0x54>
    5a1a:	7823      	ldrb	r3, [r4, #0]
    5a1c:	2b4e      	cmp	r3, #78	; 0x4e
    5a1e:	f1a3 011c 	sub.w	r1, r3, #28
    5a22:	f1a3 0250 	sub.w	r2, r3, #80	; 0x50
    5a26:	d03a      	beq.n	5a9e <d_encoding.part.0+0x9a>
    5a28:	d837      	bhi.n	5a9a <d_encoding.part.0+0x96>
    5a2a:	2904      	cmp	r1, #4
    5a2c:	d937      	bls.n	5a9e <d_encoding.part.0+0x9a>
    5a2e:	2b02      	cmp	r3, #2
    5a30:	d110      	bne.n	5a54 <d_encoding.part.0+0x50>
    5a32:	6923      	ldr	r3, [r4, #16]
    5a34:	b16b      	cbz	r3, 5a52 <d_encoding.part.0+0x4e>
    5a36:	781a      	ldrb	r2, [r3, #0]
    5a38:	2a4e      	cmp	r2, #78	; 0x4e
    5a3a:	f1a2 001c 	sub.w	r0, r2, #28
    5a3e:	f1a2 0150 	sub.w	r1, r2, #80	; 0x50
    5a42:	d002      	beq.n	5a4a <d_encoding.part.0+0x46>
    5a44:	d83d      	bhi.n	5ac2 <d_encoding.part.0+0xbe>
    5a46:	2804      	cmp	r0, #4
    5a48:	d804      	bhi.n	5a54 <d_encoding.part.0+0x50>
    5a4a:	68db      	ldr	r3, [r3, #12]
    5a4c:	6123      	str	r3, [r4, #16]
    5a4e:	2b00      	cmp	r3, #0
    5a50:	d1f1      	bne.n	5a36 <d_encoding.part.0+0x32>
    5a52:	2400      	movs	r4, #0
    5a54:	4620      	mov	r0, r4
    5a56:	bd70      	pop	{r4, r5, r6, pc}
    5a58:	68eb      	ldr	r3, [r5, #12]
    5a5a:	781b      	ldrb	r3, [r3, #0]
    5a5c:	2b00      	cmp	r3, #0
    5a5e:	d0f9      	beq.n	5a54 <d_encoding.part.0+0x50>
    5a60:	2b45      	cmp	r3, #69	; 0x45
    5a62:	d0f7      	beq.n	5a54 <d_encoding.part.0+0x50>
    5a64:	4621      	mov	r1, r4
    5a66:	780b      	ldrb	r3, [r1, #0]
    5a68:	2b04      	cmp	r3, #4
    5a6a:	d02d      	beq.n	5ac8 <d_encoding.part.0+0xc4>
    5a6c:	d81e      	bhi.n	5aac <d_encoding.part.0+0xa8>
    5a6e:	2b02      	cmp	r3, #2
    5a70:	d11a      	bne.n	5aa8 <d_encoding.part.0+0xa4>
    5a72:	6909      	ldr	r1, [r1, #16]
    5a74:	2900      	cmp	r1, #0
    5a76:	d1f6      	bne.n	5a66 <d_encoding.part.0+0x62>
    5a78:	4628      	mov	r0, r5
    5a7a:	f7fe fcdf 	bl	443c <d_bare_function_type>
    5a7e:	2800      	cmp	r0, #0
    5a80:	d0e7      	beq.n	5a52 <d_encoding.part.0+0x4e>
    5a82:	b916      	cbnz	r6, 5a8a <d_encoding.part.0+0x86>
    5a84:	7823      	ldrb	r3, [r4, #0]
    5a86:	2b02      	cmp	r3, #2
    5a88:	d032      	beq.n	5af0 <d_encoding.part.0+0xec>
    5a8a:	4603      	mov	r3, r0
    5a8c:	4622      	mov	r2, r4
    5a8e:	4628      	mov	r0, r5
    5a90:	2103      	movs	r1, #3
    5a92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    5a96:	f7fd bc07 	b.w	32a8 <d_make_comp>
    5a9a:	2a01      	cmp	r2, #1
    5a9c:	d8da      	bhi.n	5a54 <d_encoding.part.0+0x50>
    5a9e:	68e4      	ldr	r4, [r4, #12]
    5aa0:	e7bb      	b.n	5a1a <d_encoding.part.0+0x16>
    5aa2:	3b1c      	subs	r3, #28
    5aa4:	2b04      	cmp	r3, #4
    5aa6:	d908      	bls.n	5aba <d_encoding.part.0+0xb6>
    5aa8:	2100      	movs	r1, #0
    5aaa:	e7e5      	b.n	5a78 <d_encoding.part.0+0x74>
    5aac:	2b4e      	cmp	r3, #78	; 0x4e
    5aae:	f1a3 0250 	sub.w	r2, r3, #80	; 0x50
    5ab2:	d002      	beq.n	5aba <d_encoding.part.0+0xb6>
    5ab4:	d9f5      	bls.n	5aa2 <d_encoding.part.0+0x9e>
    5ab6:	2a01      	cmp	r2, #1
    5ab8:	d8f6      	bhi.n	5aa8 <d_encoding.part.0+0xa4>
    5aba:	68c9      	ldr	r1, [r1, #12]
    5abc:	2900      	cmp	r1, #0
    5abe:	d1d2      	bne.n	5a66 <d_encoding.part.0+0x62>
    5ac0:	e7da      	b.n	5a78 <d_encoding.part.0+0x74>
    5ac2:	2901      	cmp	r1, #1
    5ac4:	d8c6      	bhi.n	5a54 <d_encoding.part.0+0x50>
    5ac6:	e7c0      	b.n	5a4a <d_encoding.part.0+0x46>
    5ac8:	68cb      	ldr	r3, [r1, #12]
    5aca:	b15b      	cbz	r3, 5ae4 <d_encoding.part.0+0xe0>
    5acc:	7819      	ldrb	r1, [r3, #0]
    5ace:	2908      	cmp	r1, #8
    5ad0:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
    5ad4:	d808      	bhi.n	5ae8 <d_encoding.part.0+0xe4>
    5ad6:	2906      	cmp	r1, #6
    5ad8:	d8e6      	bhi.n	5aa8 <d_encoding.part.0+0xa4>
    5ada:	2a01      	cmp	r2, #1
    5adc:	d802      	bhi.n	5ae4 <d_encoding.part.0+0xe0>
    5ade:	691b      	ldr	r3, [r3, #16]
    5ae0:	2b00      	cmp	r3, #0
    5ae2:	d1f3      	bne.n	5acc <d_encoding.part.0+0xc8>
    5ae4:	2101      	movs	r1, #1
    5ae6:	e7c7      	b.n	5a78 <d_encoding.part.0+0x74>
    5ae8:	3935      	subs	r1, #53	; 0x35
    5aea:	bf18      	it	ne
    5aec:	2101      	movne	r1, #1
    5aee:	e7c3      	b.n	5a78 <d_encoding.part.0+0x74>
    5af0:	7803      	ldrb	r3, [r0, #0]
    5af2:	2b29      	cmp	r3, #41	; 0x29
    5af4:	bf08      	it	eq
    5af6:	60c6      	streq	r6, [r0, #12]
    5af8:	e7c7      	b.n	5a8a <d_encoding.part.0+0x86>
    5afa:	bf00      	nop

00005afc <d_print_comp_inner>:
    5afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5b00:	4604      	mov	r4, r0
    5b02:	b095      	sub	sp, #84	; 0x54
    5b04:	2a00      	cmp	r2, #0
    5b06:	d066      	beq.n	5bd6 <d_print_comp_inner+0xda>
    5b08:	f8d0 5118 	ldr.w	r5, [r0, #280]	; 0x118
    5b0c:	2d00      	cmp	r5, #0
    5b0e:	d165      	bne.n	5bdc <d_print_comp_inner+0xe0>
    5b10:	7817      	ldrb	r7, [r2, #0]
    5b12:	4616      	mov	r6, r2
    5b14:	2f51      	cmp	r7, #81	; 0x51
    5b16:	d85e      	bhi.n	5bd6 <d_print_comp_inner+0xda>
    5b18:	e8df f017 	tbh	[pc, r7, lsl #1]
    5b1c:	011b095c 	.word	0x011b095c
    5b20:	04ee011b 	.word	0x04ee011b
    5b24:	02de0898 	.word	0x02de0898
    5b28:	0097044a 	.word	0x0097044a
    5b2c:	08f9008b 	.word	0x08f9008b
    5b30:	03a608d2 	.word	0x03a608d2
    5b34:	019101b8 	.word	0x019101b8
    5b38:	0747016a 	.word	0x0747016a
    5b3c:	06f90720 	.word	0x06f90720
    5b40:	07bc07e3 	.word	0x07bc07e3
    5b44:	076e0795 	.word	0x076e0795
    5b48:	0423037f 	.word	0x0423037f
    5b4c:	009903f8 	.word	0x009903f8
    5b50:	00990099 	.word	0x00990099
    5b54:	00630063 	.word	0x00630063
    5b58:	00630063 	.word	0x00630063
    5b5c:	00630063 	.word	0x00630063
    5b60:	00c50063 	.word	0x00c50063
    5b64:	006300c5 	.word	0x006300c5
    5b68:	09870063 	.word	0x09870063
    5b6c:	04c80083 	.word	0x04c80083
    5b70:	00af068d 	.word	0x00af068d
    5b74:	00af066b 	.word	0x00af066b
    5b78:	00e600e6 	.word	0x00e600e6
    5b7c:	03340358 	.word	0x03340358
    5b80:	0831030a 	.word	0x0831030a
    5b84:	080a005d 	.word	0x080a005d
    5b88:	06460663 	.word	0x06460663
    5b8c:	005d05eb 	.word	0x005d05eb
    5b90:	005d0920 	.word	0x005d0920
    5b94:	012a005d 	.word	0x012a005d
    5b98:	0455012a 	.word	0x0455012a
    5b9c:	0858085e 	.word	0x0858085e
    5ba0:	047804ba 	.word	0x047804ba
    5ba4:	05c4054f 	.word	0x05c4054f
    5ba8:	0576059d 	.word	0x0576059d
    5bac:	02a4005d 	.word	0x02a4005d
    5bb0:	0256027d 	.word	0x0256027d
    5bb4:	01df020a 	.word	0x01df020a
    5bb8:	03cd0063 	.word	0x03cd0063
    5bbc:	00630063 	.word	0x00630063
    5bc0:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
    5bc4:	2900      	cmp	r1, #0
    5bc6:	f2c1 8425 	blt.w	7414 <d_print_comp_inner+0x1918>
    5bca:	f7fd fcfb 	bl	35c4 <d_index_template_argument.part.0>
    5bce:	4602      	mov	r2, r0
    5bd0:	2800      	cmp	r0, #0
    5bd2:	f041 841f 	bne.w	7414 <d_print_comp_inner+0x1918>
    5bd6:	2301      	movs	r3, #1
    5bd8:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
    5bdc:	b015      	add	sp, #84	; 0x54
    5bde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5be2:	2200      	movs	r2, #0
    5be4:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
    5be8:	9304      	str	r3, [sp, #16]
    5bea:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
    5bee:	9307      	str	r3, [sp, #28]
    5bf0:	ab04      	add	r3, sp, #16
    5bf2:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    5bf6:	2300      	movs	r3, #0
    5bf8:	9605      	str	r6, [sp, #20]
    5bfa:	9306      	str	r3, [sp, #24]
    5bfc:	2a00      	cmp	r2, #0
    5bfe:	f001 87e6 	beq.w	7bce <d_print_comp_inner+0x20d2>
    5c02:	2111      	movs	r1, #17
    5c04:	4620      	mov	r0, r4
    5c06:	f001 fff3 	bl	7bf0 <d_print_comp>
    5c0a:	9b06      	ldr	r3, [sp, #24]
    5c0c:	2b00      	cmp	r3, #0
    5c0e:	f001 82e9 	beq.w	71e4 <d_print_comp_inner+0x16e8>
    5c12:	9b04      	ldr	r3, [sp, #16]
    5c14:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    5c18:	2d00      	cmp	r5, #0
    5c1a:	d0df      	beq.n	5bdc <d_print_comp_inner+0xe0>
    5c1c:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
    5c20:	e7dc      	b.n	5bdc <d_print_comp_inner+0xe0>
    5c22:	68f2      	ldr	r2, [r6, #12]
    5c24:	2111      	movs	r1, #17
    5c26:	4620      	mov	r0, r4
    5c28:	b015      	add	sp, #84	; 0x54
    5c2a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5c2e:	f001 bfdf 	b.w	7bf0 <d_print_comp>
    5c32:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    5c36:	29ff      	cmp	r1, #255	; 0xff
    5c38:	f001 855f 	beq.w	76fa <d_print_comp_inner+0x1bfe>
    5c3c:	1c4a      	adds	r2, r1, #1
    5c3e:	237e      	movs	r3, #126	; 0x7e
    5c40:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    5c44:	5463      	strb	r3, [r4, r1]
    5c46:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    5c4a:	6932      	ldr	r2, [r6, #16]
    5c4c:	e7ea      	b.n	5c24 <d_print_comp_inner+0x128>
    5c4e:	f8d0 c114 	ldr.w	ip, [r0, #276]	; 0x114
    5c52:	f1bc 0f00 	cmp.w	ip, #0
    5c56:	d00e      	beq.n	5c76 <d_print_comp_inner+0x17a>
    5c58:	4663      	mov	r3, ip
    5c5a:	6899      	ldr	r1, [r3, #8]
    5c5c:	b941      	cbnz	r1, 5c70 <d_print_comp_inner+0x174>
    5c5e:	685a      	ldr	r2, [r3, #4]
    5c60:	7812      	ldrb	r2, [r2, #0]
    5c62:	f1a2 0019 	sub.w	r0, r2, #25
    5c66:	2802      	cmp	r0, #2
    5c68:	f201 84ef 	bhi.w	764a <d_print_comp_inner+0x1b4e>
    5c6c:	4297      	cmp	r7, r2
    5c6e:	d0d8      	beq.n	5c22 <d_print_comp_inner+0x126>
    5c70:	681b      	ldr	r3, [r3, #0]
    5c72:	2b00      	cmp	r3, #0
    5c74:	d1f1      	bne.n	5c5a <d_print_comp_inner+0x15e>
    5c76:	68f2      	ldr	r2, [r6, #12]
    5c78:	e02b      	b.n	5cd2 <d_print_comp_inner+0x1d6>
    5c7a:	e9d0 3144 	ldrd	r3, r1, [r0, #272]	; 0x110
    5c7e:	aa04      	add	r2, sp, #16
    5c80:	f8c0 2114 	str.w	r2, [r0, #276]	; 0x114
    5c84:	2200      	movs	r2, #0
    5c86:	e9cd 1604 	strd	r1, r6, [sp, #16]
    5c8a:	9206      	str	r2, [sp, #24]
    5c8c:	2111      	movs	r1, #17
    5c8e:	6932      	ldr	r2, [r6, #16]
    5c90:	9307      	str	r3, [sp, #28]
    5c92:	f001 ffad 	bl	7bf0 <d_print_comp>
    5c96:	9b06      	ldr	r3, [sp, #24]
    5c98:	2b00      	cmp	r3, #0
    5c9a:	f001 84c3 	beq.w	7624 <d_print_comp_inner+0x1b28>
    5c9e:	9b04      	ldr	r3, [sp, #16]
    5ca0:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    5ca4:	e79a      	b.n	5bdc <d_print_comp_inner+0xe0>
    5ca6:	68d2      	ldr	r2, [r2, #12]
    5ca8:	f8d0 5120 	ldr.w	r5, [r0, #288]	; 0x120
    5cac:	7813      	ldrb	r3, [r2, #0]
    5cae:	2d00      	cmp	r5, #0
    5cb0:	f041 8370 	bne.w	7394 <d_print_comp_inner+0x1898>
    5cb4:	2b05      	cmp	r3, #5
    5cb6:	f001 85d2 	beq.w	785e <d_print_comp_inner+0x1d62>
    5cba:	4610      	mov	r0, r2
    5cbc:	2b23      	cmp	r3, #35	; 0x23
    5cbe:	f001 82d8 	beq.w	7272 <d_print_comp_inner+0x1776>
    5cc2:	429f      	cmp	r7, r3
    5cc4:	f001 82d5 	beq.w	7272 <d_print_comp_inner+0x1776>
    5cc8:	2b24      	cmp	r3, #36	; 0x24
    5cca:	f001 860a 	beq.w	78e2 <d_print_comp_inner+0x1de6>
    5cce:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
    5cd2:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
    5cd6:	9307      	str	r3, [sp, #28]
    5cd8:	ab04      	add	r3, sp, #16
    5cda:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    5cde:	2300      	movs	r3, #0
    5ce0:	e9cd c604 	strd	ip, r6, [sp, #16]
    5ce4:	9306      	str	r3, [sp, #24]
    5ce6:	e78c      	b.n	5c02 <d_print_comp_inner+0x106>
    5ce8:	68d2      	ldr	r2, [r2, #12]
    5cea:	b112      	cbz	r2, 5cf2 <d_print_comp_inner+0x1f6>
    5cec:	2111      	movs	r1, #17
    5cee:	f001 ff7f 	bl	7bf0 <d_print_comp>
    5cf2:	6933      	ldr	r3, [r6, #16]
    5cf4:	2b00      	cmp	r3, #0
    5cf6:	f43f af71 	beq.w	5bdc <d_print_comp_inner+0xe0>
    5cfa:	f8d4 5100 	ldr.w	r5, [r4, #256]	; 0x100
    5cfe:	2dfd      	cmp	r5, #253	; 0xfd
    5d00:	f201 84a7 	bhi.w	7652 <d_print_comp_inner+0x1b56>
    5d04:	f8df 8384 	ldr.w	r8, [pc, #900]	; 608c <d_print_comp_inner+0x590>
    5d08:	272c      	movs	r7, #44	; 0x2c
    5d0a:	f108 0a01 	add.w	sl, r8, #1
    5d0e:	f04f 0900 	mov.w	r9, #0
    5d12:	4629      	mov	r1, r5
    5d14:	e00b      	b.n	5d2e <d_print_comp_inner+0x232>
    5d16:	460b      	mov	r3, r1
    5d18:	3101      	adds	r1, #1
    5d1a:	45d0      	cmp	r8, sl
    5d1c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    5d20:	54e7      	strb	r7, [r4, r3]
    5d22:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    5d26:	f001 8264 	beq.w	71f2 <d_print_comp_inner+0x16f6>
    5d2a:	f818 7f01 	ldrb.w	r7, [r8, #1]!
    5d2e:	29ff      	cmp	r1, #255	; 0xff
    5d30:	d1f1      	bne.n	5d16 <d_print_comp_inner+0x21a>
    5d32:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    5d36:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    5d3a:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    5d3e:	4620      	mov	r0, r4
    5d40:	4798      	blx	r3
    5d42:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    5d46:	3301      	adds	r3, #1
    5d48:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    5d4c:	2101      	movs	r1, #1
    5d4e:	2300      	movs	r3, #0
    5d50:	e7e3      	b.n	5d1a <d_print_comp_inner+0x21e>
    5d52:	68d2      	ldr	r2, [r2, #12]
    5d54:	2111      	movs	r1, #17
    5d56:	f001 ff4b 	bl	7bf0 <d_print_comp>
    5d5a:	49c7      	ldr	r1, [pc, #796]	; (6078 <d_print_comp_inner+0x57c>)
    5d5c:	4620      	mov	r0, r4
    5d5e:	f7fd fd1b 	bl	3798 <d_append_string>
    5d62:	6937      	ldr	r7, [r6, #16]
    5d64:	783b      	ldrb	r3, [r7, #0]
    5d66:	2b48      	cmp	r3, #72	; 0x48
    5d68:	f001 808b 	beq.w	6e82 <d_print_comp_inner+0x1386>
    5d6c:	463a      	mov	r2, r7
    5d6e:	e759      	b.n	5c24 <d_print_comp_inner+0x128>
    5d70:	68d2      	ldr	r2, [r2, #12]
    5d72:	7813      	ldrb	r3, [r2, #0]
    5d74:	2b27      	cmp	r3, #39	; 0x27
    5d76:	f041 835a 	bne.w	742e <d_print_comp_inner+0x1932>
    5d7a:	68d3      	ldr	r3, [r2, #12]
    5d7c:	7c1d      	ldrb	r5, [r3, #16]
    5d7e:	2d06      	cmp	r5, #6
    5d80:	f201 827d 	bhi.w	727e <d_print_comp_inner+0x1782>
    5d84:	2d00      	cmp	r5, #0
    5d86:	f041 851c 	bne.w	77c2 <d_print_comp_inner+0x1cc6>
    5d8a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    5d8e:	29ff      	cmp	r1, #255	; 0xff
    5d90:	f001 84f0 	beq.w	7774 <d_print_comp_inner+0x1c78>
    5d94:	1c4b      	adds	r3, r1, #1
    5d96:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    5d9a:	2328      	movs	r3, #40	; 0x28
    5d9c:	5463      	strb	r3, [r4, r1]
    5d9e:	4620      	mov	r0, r4
    5da0:	2111      	movs	r1, #17
    5da2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    5da6:	f001 ff23 	bl	7bf0 <d_print_comp>
    5daa:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    5dae:	29ff      	cmp	r1, #255	; 0xff
    5db0:	f001 84f7 	beq.w	77a2 <d_print_comp_inner+0x1ca6>
    5db4:	1c4b      	adds	r3, r1, #1
    5db6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    5dba:	2329      	movs	r3, #41	; 0x29
    5dbc:	5463      	strb	r3, [r4, r1]
    5dbe:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    5dc2:	7833      	ldrb	r3, [r6, #0]
    5dc4:	2b3e      	cmp	r3, #62	; 0x3e
    5dc6:	f001 84e6 	beq.w	7796 <d_print_comp_inner+0x1c9a>
    5dca:	2d08      	cmp	r5, #8
    5dcc:	f47f af3d 	bne.w	5c4a <d_print_comp_inner+0x14e>
    5dd0:	215b      	movs	r1, #91	; 0x5b
    5dd2:	4620      	mov	r0, r4
    5dd4:	f7fd fc58 	bl	3688 <d_append_char>
    5dd8:	2111      	movs	r1, #17
    5dda:	6932      	ldr	r2, [r6, #16]
    5ddc:	4620      	mov	r0, r4
    5dde:	f001 ff07 	bl	7bf0 <d_print_comp>
    5de2:	215d      	movs	r1, #93	; 0x5d
    5de4:	4620      	mov	r0, r4
    5de6:	b015      	add	sp, #84	; 0x54
    5de8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5dec:	f7fd bc4c 	b.w	3688 <d_append_char>
    5df0:	4fa2      	ldr	r7, [pc, #648]	; (607c <d_print_comp_inner+0x580>)
    5df2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    5df6:	f107 090f 	add.w	r9, r7, #15
    5dfa:	2574      	movs	r5, #116	; 0x74
    5dfc:	f04f 0800 	mov.w	r8, #0
    5e00:	e00b      	b.n	5e1a <d_print_comp_inner+0x31e>
    5e02:	460b      	mov	r3, r1
    5e04:	3101      	adds	r1, #1
    5e06:	454f      	cmp	r7, r9
    5e08:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    5e0c:	54e5      	strb	r5, [r4, r3]
    5e0e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    5e12:	f43f af06 	beq.w	5c22 <d_print_comp_inner+0x126>
    5e16:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    5e1a:	29ff      	cmp	r1, #255	; 0xff
    5e1c:	d1f1      	bne.n	5e02 <d_print_comp_inner+0x306>
    5e1e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    5e22:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    5e26:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    5e2a:	4620      	mov	r0, r4
    5e2c:	4798      	blx	r3
    5e2e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    5e32:	3301      	adds	r3, #1
    5e34:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    5e38:	2101      	movs	r1, #1
    5e3a:	2300      	movs	r3, #0
    5e3c:	e7e3      	b.n	5e06 <d_print_comp_inner+0x30a>
    5e3e:	4f90      	ldr	r7, [pc, #576]	; (6080 <d_print_comp_inner+0x584>)
    5e40:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    5e44:	f107 0911 	add.w	r9, r7, #17
    5e48:	2574      	movs	r5, #116	; 0x74
    5e4a:	f04f 0800 	mov.w	r8, #0
    5e4e:	e00b      	b.n	5e68 <d_print_comp_inner+0x36c>
    5e50:	460b      	mov	r3, r1
    5e52:	3101      	adds	r1, #1
    5e54:	45b9      	cmp	r9, r7
    5e56:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    5e5a:	54e5      	strb	r5, [r4, r3]
    5e5c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    5e60:	f43f aedf 	beq.w	5c22 <d_print_comp_inner+0x126>
    5e64:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    5e68:	29ff      	cmp	r1, #255	; 0xff
    5e6a:	d1f1      	bne.n	5e50 <d_print_comp_inner+0x354>
    5e6c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    5e70:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    5e74:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    5e78:	4620      	mov	r0, r4
    5e7a:	4798      	blx	r3
    5e7c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    5e80:	3301      	adds	r3, #1
    5e82:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    5e86:	2101      	movs	r1, #1
    5e88:	2300      	movs	r3, #0
    5e8a:	e7e3      	b.n	5e54 <d_print_comp_inner+0x358>
    5e8c:	4f7d      	ldr	r7, [pc, #500]	; (6084 <d_print_comp_inner+0x588>)
    5e8e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    5e92:	f107 090c 	add.w	r9, r7, #12
    5e96:	2574      	movs	r5, #116	; 0x74
    5e98:	f04f 0800 	mov.w	r8, #0
    5e9c:	e00b      	b.n	5eb6 <d_print_comp_inner+0x3ba>
    5e9e:	460b      	mov	r3, r1
    5ea0:	3101      	adds	r1, #1
    5ea2:	454f      	cmp	r7, r9
    5ea4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    5ea8:	54e5      	strb	r5, [r4, r3]
    5eaa:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    5eae:	f43f aeb8 	beq.w	5c22 <d_print_comp_inner+0x126>
    5eb2:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    5eb6:	29ff      	cmp	r1, #255	; 0xff
    5eb8:	d1f1      	bne.n	5e9e <d_print_comp_inner+0x3a2>
    5eba:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    5ebe:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    5ec2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    5ec6:	4620      	mov	r0, r4
    5ec8:	4798      	blx	r3
    5eca:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    5ece:	3301      	adds	r3, #1
    5ed0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    5ed4:	2101      	movs	r1, #1
    5ed6:	2300      	movs	r3, #0
    5ed8:	e7e3      	b.n	5ea2 <d_print_comp_inner+0x3a6>
    5eda:	4f6b      	ldr	r7, [pc, #428]	; (6088 <d_print_comp_inner+0x58c>)
    5edc:	68d2      	ldr	r2, [r2, #12]
    5ede:	2111      	movs	r1, #17
    5ee0:	f001 fe86 	bl	7bf0 <d_print_comp>
    5ee4:	f107 0904 	add.w	r9, r7, #4
    5ee8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    5eec:	255b      	movs	r5, #91	; 0x5b
    5eee:	f04f 0800 	mov.w	r8, #0
    5ef2:	e00b      	b.n	5f0c <d_print_comp_inner+0x410>
    5ef4:	460b      	mov	r3, r1
    5ef6:	3101      	adds	r1, #1
    5ef8:	45b9      	cmp	r9, r7
    5efa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    5efe:	54e5      	strb	r5, [r4, r3]
    5f00:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    5f04:	f000 87f3 	beq.w	6eee <d_print_comp_inner+0x13f2>
    5f08:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    5f0c:	29ff      	cmp	r1, #255	; 0xff
    5f0e:	d1f1      	bne.n	5ef4 <d_print_comp_inner+0x3f8>
    5f10:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    5f14:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    5f18:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    5f1c:	4620      	mov	r0, r4
    5f1e:	4798      	blx	r3
    5f20:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    5f24:	3301      	adds	r3, #1
    5f26:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    5f2a:	2101      	movs	r1, #1
    5f2c:	2300      	movs	r3, #0
    5f2e:	e7e3      	b.n	5ef8 <d_print_comp_inner+0x3fc>
    5f30:	f8d2 a00c 	ldr.w	sl, [r2, #12]
    5f34:	4651      	mov	r1, sl
    5f36:	f7fd fbe5 	bl	3704 <d_find_pack>
    5f3a:	f04f 0800 	mov.w	r8, #0
    5f3e:	b910      	cbnz	r0, 5f46 <d_print_comp_inner+0x44a>
    5f40:	f001 bd20 	b.w	7984 <d_print_comp_inner+0x1e88>
    5f44:	46c8      	mov	r8, r9
    5f46:	7803      	ldrb	r3, [r0, #0]
    5f48:	2b2f      	cmp	r3, #47	; 0x2f
    5f4a:	f108 0901 	add.w	r9, r8, #1
    5f4e:	f041 8187 	bne.w	7260 <d_print_comp_inner+0x1764>
    5f52:	68c3      	ldr	r3, [r0, #12]
    5f54:	2b00      	cmp	r3, #0
    5f56:	f001 8183 	beq.w	7260 <d_print_comp_inner+0x1764>
    5f5a:	6900      	ldr	r0, [r0, #16]
    5f5c:	2800      	cmp	r0, #0
    5f5e:	d1f1      	bne.n	5f44 <d_print_comp_inner+0x448>
    5f60:	e003      	b.n	5f6a <d_print_comp_inner+0x46e>
    5f62:	3501      	adds	r5, #1
    5f64:	454d      	cmp	r5, r9
    5f66:	f6bf ae39 	bge.w	5bdc <d_print_comp_inner+0xe0>
    5f6a:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
    5f6e:	4652      	mov	r2, sl
    5f70:	2111      	movs	r1, #17
    5f72:	4620      	mov	r0, r4
    5f74:	f001 fe3c 	bl	7bf0 <d_print_comp>
    5f78:	45a8      	cmp	r8, r5
    5f7a:	ddf2      	ble.n	5f62 <d_print_comp_inner+0x466>
    5f7c:	4f43      	ldr	r7, [pc, #268]	; (608c <d_print_comp_inner+0x590>)
    5f7e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    5f82:	f107 0b01 	add.w	fp, r7, #1
    5f86:	262c      	movs	r6, #44	; 0x2c
    5f88:	e00a      	b.n	5fa0 <d_print_comp_inner+0x4a4>
    5f8a:	460b      	mov	r3, r1
    5f8c:	3101      	adds	r1, #1
    5f8e:	45bb      	cmp	fp, r7
    5f90:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    5f94:	54e6      	strb	r6, [r4, r3]
    5f96:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    5f9a:	d0e2      	beq.n	5f62 <d_print_comp_inner+0x466>
    5f9c:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    5fa0:	29ff      	cmp	r1, #255	; 0xff
    5fa2:	d1f2      	bne.n	5f8a <d_print_comp_inner+0x48e>
    5fa4:	f04f 0200 	mov.w	r2, #0
    5fa8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    5fac:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
    5fb0:	4620      	mov	r0, r4
    5fb2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    5fb6:	4798      	blx	r3
    5fb8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    5fbc:	3301      	adds	r3, #1
    5fbe:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    5fc2:	2101      	movs	r1, #1
    5fc4:	2300      	movs	r3, #0
    5fc6:	e7e2      	b.n	5f8e <d_print_comp_inner+0x492>
    5fc8:	4f31      	ldr	r7, [pc, #196]	; (6090 <d_print_comp_inner+0x594>)
    5fca:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    5fce:	f107 0919 	add.w	r9, r7, #25
    5fd2:	256e      	movs	r5, #110	; 0x6e
    5fd4:	f04f 0800 	mov.w	r8, #0
    5fd8:	e00b      	b.n	5ff2 <d_print_comp_inner+0x4f6>
    5fda:	460b      	mov	r3, r1
    5fdc:	3101      	adds	r1, #1
    5fde:	45b9      	cmp	r9, r7
    5fe0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    5fe4:	54e5      	strb	r5, [r4, r3]
    5fe6:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    5fea:	f43f ae1a 	beq.w	5c22 <d_print_comp_inner+0x126>
    5fee:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    5ff2:	29ff      	cmp	r1, #255	; 0xff
    5ff4:	d1f1      	bne.n	5fda <d_print_comp_inner+0x4de>
    5ff6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    5ffa:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    5ffe:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6002:	4620      	mov	r0, r4
    6004:	4798      	blx	r3
    6006:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    600a:	3301      	adds	r3, #1
    600c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6010:	2101      	movs	r1, #1
    6012:	2300      	movs	r3, #0
    6014:	e7e3      	b.n	5fde <d_print_comp_inner+0x4e2>
    6016:	4f1f      	ldr	r7, [pc, #124]	; (6094 <d_print_comp_inner+0x598>)
    6018:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    601c:	f107 0915 	add.w	r9, r7, #21
    6020:	2574      	movs	r5, #116	; 0x74
    6022:	f04f 0800 	mov.w	r8, #0
    6026:	e00b      	b.n	6040 <d_print_comp_inner+0x544>
    6028:	460b      	mov	r3, r1
    602a:	3101      	adds	r1, #1
    602c:	45b9      	cmp	r9, r7
    602e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6032:	54e5      	strb	r5, [r4, r3]
    6034:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6038:	f43f adf3 	beq.w	5c22 <d_print_comp_inner+0x126>
    603c:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6040:	29ff      	cmp	r1, #255	; 0xff
    6042:	d1f1      	bne.n	6028 <d_print_comp_inner+0x52c>
    6044:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6048:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    604c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6050:	4620      	mov	r0, r4
    6052:	4798      	blx	r3
    6054:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6058:	3301      	adds	r3, #1
    605a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    605e:	2101      	movs	r1, #1
    6060:	2300      	movs	r3, #0
    6062:	e7e3      	b.n	602c <d_print_comp_inner+0x530>
    6064:	4f0c      	ldr	r7, [pc, #48]	; (6098 <d_print_comp_inner+0x59c>)
    6066:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    606a:	f107 090d 	add.w	r9, r7, #13
    606e:	257b      	movs	r5, #123	; 0x7b
    6070:	f04f 0800 	mov.w	r8, #0
    6074:	e01e      	b.n	60b4 <d_print_comp_inner+0x5b8>
    6076:	bf00      	nop
    6078:	20001cfc 	.word	0x20001cfc
    607c:	20001d9c 	.word	0x20001d9c
    6080:	20001d88 	.word	0x20001d88
    6084:	20001d78 	.word	0x20001d78
    6088:	20001cf4 	.word	0x20001cf4
    608c:	20001e9c 	.word	0x20001e9c
    6090:	20001e68 	.word	0x20001e68
    6094:	20001e6c 	.word	0x20001e6c
    6098:	20001f70 	.word	0x20001f70
    609c:	460b      	mov	r3, r1
    609e:	3101      	adds	r1, #1
    60a0:	454f      	cmp	r7, r9
    60a2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    60a6:	54e5      	strb	r5, [r4, r3]
    60a8:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    60ac:	f000 8739 	beq.w	6f22 <d_print_comp_inner+0x1426>
    60b0:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    60b4:	29ff      	cmp	r1, #255	; 0xff
    60b6:	d1f1      	bne.n	609c <d_print_comp_inner+0x5a0>
    60b8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    60bc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    60c0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    60c4:	4620      	mov	r0, r4
    60c6:	4798      	blx	r3
    60c8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    60cc:	3301      	adds	r3, #1
    60ce:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    60d2:	2101      	movs	r1, #1
    60d4:	2300      	movs	r3, #0
    60d6:	e7e3      	b.n	60a0 <d_print_comp_inner+0x5a4>
    60d8:	f8d0 3120 	ldr.w	r3, [r0, #288]	; 0x120
    60dc:	2b00      	cmp	r3, #0
    60de:	f001 818e 	beq.w	73fe <d_print_comp_inner+0x1902>
    60e2:	4fd3      	ldr	r7, [pc, #844]	; (6430 <d_print_comp_inner+0x934>)
    60e4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    60e8:	f107 0904 	add.w	r9, r7, #4
    60ec:	2561      	movs	r5, #97	; 0x61
    60ee:	f04f 0800 	mov.w	r8, #0
    60f2:	e00b      	b.n	610c <d_print_comp_inner+0x610>
    60f4:	460b      	mov	r3, r1
    60f6:	3101      	adds	r1, #1
    60f8:	45b9      	cmp	r9, r7
    60fa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    60fe:	54e5      	strb	r5, [r4, r3]
    6100:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6104:	f001 814a 	beq.w	739c <d_print_comp_inner+0x18a0>
    6108:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    610c:	29ff      	cmp	r1, #255	; 0xff
    610e:	d1f1      	bne.n	60f4 <d_print_comp_inner+0x5f8>
    6110:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6114:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6118:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    611c:	4620      	mov	r0, r4
    611e:	4798      	blx	r3
    6120:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6124:	3301      	adds	r3, #1
    6126:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    612a:	2101      	movs	r1, #1
    612c:	2300      	movs	r3, #0
    612e:	e7e3      	b.n	60f8 <d_print_comp_inner+0x5fc>
    6130:	68d7      	ldr	r7, [r2, #12]
    6132:	4ec0      	ldr	r6, [pc, #768]	; (6434 <d_print_comp_inner+0x938>)
    6134:	f8d7 8008 	ldr.w	r8, [r7, #8]
    6138:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    613c:	f106 0a07 	add.w	sl, r6, #7
    6140:	256f      	movs	r5, #111	; 0x6f
    6142:	f04f 0900 	mov.w	r9, #0
    6146:	e00b      	b.n	6160 <d_print_comp_inner+0x664>
    6148:	460b      	mov	r3, r1
    614a:	3101      	adds	r1, #1
    614c:	45b2      	cmp	sl, r6
    614e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6152:	54e5      	strb	r5, [r4, r3]
    6154:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6158:	f000 8726 	beq.w	6fa8 <d_print_comp_inner+0x14ac>
    615c:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    6160:	29ff      	cmp	r1, #255	; 0xff
    6162:	d1f1      	bne.n	6148 <d_print_comp_inner+0x64c>
    6164:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6168:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    616c:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    6170:	4620      	mov	r0, r4
    6172:	4798      	blx	r3
    6174:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6178:	3301      	adds	r3, #1
    617a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    617e:	2101      	movs	r1, #1
    6180:	2300      	movs	r3, #0
    6182:	e7e3      	b.n	614c <d_print_comp_inner+0x650>
    6184:	e9d2 2503 	ldrd	r2, r5, [r2, #12]
    6188:	b112      	cbz	r2, 6190 <d_print_comp_inner+0x694>
    618a:	2111      	movs	r1, #17
    618c:	f001 fd30 	bl	7bf0 <d_print_comp>
    6190:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6194:	29ff      	cmp	r1, #255	; 0xff
    6196:	f001 826d 	beq.w	7674 <d_print_comp_inner+0x1b78>
    619a:	1c4a      	adds	r2, r1, #1
    619c:	237b      	movs	r3, #123	; 0x7b
    619e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    61a2:	4620      	mov	r0, r4
    61a4:	5463      	strb	r3, [r4, r1]
    61a6:	462a      	mov	r2, r5
    61a8:	2111      	movs	r1, #17
    61aa:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    61ae:	f001 fd1f 	bl	7bf0 <d_print_comp>
    61b2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    61b6:	29ff      	cmp	r1, #255	; 0xff
    61b8:	f000 86e6 	beq.w	6f88 <d_print_comp_inner+0x148c>
    61bc:	1c4a      	adds	r2, r1, #1
    61be:	237d      	movs	r3, #125	; 0x7d
    61c0:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    61c4:	5463      	strb	r3, [r4, r1]
    61c6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    61ca:	e507      	b.n	5bdc <d_print_comp_inner+0xe0>
    61cc:	4f9a      	ldr	r7, [pc, #616]	; (6438 <d_print_comp_inner+0x93c>)
    61ce:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    61d2:	f107 091d 	add.w	r9, r7, #29
    61d6:	2574      	movs	r5, #116	; 0x74
    61d8:	f04f 0800 	mov.w	r8, #0
    61dc:	e00b      	b.n	61f6 <d_print_comp_inner+0x6fa>
    61de:	460b      	mov	r3, r1
    61e0:	3101      	adds	r1, #1
    61e2:	45b9      	cmp	r9, r7
    61e4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    61e8:	54e5      	strb	r5, [r4, r3]
    61ea:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    61ee:	f43f ad18 	beq.w	5c22 <d_print_comp_inner+0x126>
    61f2:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    61f6:	29ff      	cmp	r1, #255	; 0xff
    61f8:	d1f1      	bne.n	61de <d_print_comp_inner+0x6e2>
    61fa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    61fe:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6202:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6206:	4620      	mov	r0, r4
    6208:	4798      	blx	r3
    620a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    620e:	3301      	adds	r3, #1
    6210:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6214:	2101      	movs	r1, #1
    6216:	2300      	movs	r3, #0
    6218:	e7e3      	b.n	61e2 <d_print_comp_inner+0x6e6>
    621a:	4f88      	ldr	r7, [pc, #544]	; (643c <d_print_comp_inner+0x940>)
    621c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6220:	f107 0914 	add.w	r9, r7, #20
    6224:	2572      	movs	r5, #114	; 0x72
    6226:	f04f 0800 	mov.w	r8, #0
    622a:	e00b      	b.n	6244 <d_print_comp_inner+0x748>
    622c:	460b      	mov	r3, r1
    622e:	3101      	adds	r1, #1
    6230:	45b9      	cmp	r9, r7
    6232:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6236:	54e5      	strb	r5, [r4, r3]
    6238:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    623c:	f000 86f4 	beq.w	7028 <d_print_comp_inner+0x152c>
    6240:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6244:	29ff      	cmp	r1, #255	; 0xff
    6246:	d1f1      	bne.n	622c <d_print_comp_inner+0x730>
    6248:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    624c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6250:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6254:	4620      	mov	r0, r4
    6256:	4798      	blx	r3
    6258:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    625c:	3301      	adds	r3, #1
    625e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6262:	2101      	movs	r1, #1
    6264:	2300      	movs	r3, #0
    6266:	e7e3      	b.n	6230 <d_print_comp_inner+0x734>
    6268:	4f75      	ldr	r7, [pc, #468]	; (6440 <d_print_comp_inner+0x944>)
    626a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    626e:	f107 0917 	add.w	r9, r7, #23
    6272:	2563      	movs	r5, #99	; 0x63
    6274:	f04f 0800 	mov.w	r8, #0
    6278:	e00b      	b.n	6292 <d_print_comp_inner+0x796>
    627a:	460b      	mov	r3, r1
    627c:	3101      	adds	r1, #1
    627e:	454f      	cmp	r7, r9
    6280:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6284:	54e5      	strb	r5, [r4, r3]
    6286:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    628a:	f000 877c 	beq.w	7186 <d_print_comp_inner+0x168a>
    628e:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6292:	29ff      	cmp	r1, #255	; 0xff
    6294:	d1f1      	bne.n	627a <d_print_comp_inner+0x77e>
    6296:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    629a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    629e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    62a2:	4620      	mov	r0, r4
    62a4:	4798      	blx	r3
    62a6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    62aa:	3301      	adds	r3, #1
    62ac:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    62b0:	2101      	movs	r1, #1
    62b2:	2300      	movs	r3, #0
    62b4:	e7e3      	b.n	627e <d_print_comp_inner+0x782>
    62b6:	4f63      	ldr	r7, [pc, #396]	; (6444 <d_print_comp_inner+0x948>)
    62b8:	68d2      	ldr	r2, [r2, #12]
    62ba:	2111      	movs	r1, #17
    62bc:	f001 fc98 	bl	7bf0 <d_print_comp>
    62c0:	f107 0907 	add.w	r9, r7, #7
    62c4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    62c8:	2520      	movs	r5, #32
    62ca:	f04f 0800 	mov.w	r8, #0
    62ce:	e00b      	b.n	62e8 <d_print_comp_inner+0x7ec>
    62d0:	460b      	mov	r3, r1
    62d2:	3101      	adds	r1, #1
    62d4:	45b9      	cmp	r9, r7
    62d6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    62da:	54e5      	strb	r5, [r4, r3]
    62dc:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    62e0:	f000 8605 	beq.w	6eee <d_print_comp_inner+0x13f2>
    62e4:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    62e8:	29ff      	cmp	r1, #255	; 0xff
    62ea:	d1f1      	bne.n	62d0 <d_print_comp_inner+0x7d4>
    62ec:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    62f0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    62f4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    62f8:	4620      	mov	r0, r4
    62fa:	4798      	blx	r3
    62fc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6300:	3301      	adds	r3, #1
    6302:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6306:	2101      	movs	r1, #1
    6308:	2300      	movs	r3, #0
    630a:	e7e3      	b.n	62d4 <d_print_comp_inner+0x7d8>
    630c:	e9d2 5303 	ldrd	r5, r3, [r2, #12]
    6310:	2b00      	cmp	r3, #0
    6312:	f43f ac63 	beq.w	5bdc <d_print_comp_inner+0xe0>
    6316:	442b      	add	r3, r5
    6318:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    631c:	3d01      	subs	r5, #1
    631e:	1e5f      	subs	r7, r3, #1
    6320:	f04f 0800 	mov.w	r8, #0
    6324:	e009      	b.n	633a <d_print_comp_inner+0x83e>
    6326:	460b      	mov	r3, r1
    6328:	3101      	adds	r1, #1
    632a:	42af      	cmp	r7, r5
    632c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6330:	54e6      	strb	r6, [r4, r3]
    6332:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6336:	f43f ac51 	beq.w	5bdc <d_print_comp_inner+0xe0>
    633a:	29ff      	cmp	r1, #255	; 0xff
    633c:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    6340:	d1f1      	bne.n	6326 <d_print_comp_inner+0x82a>
    6342:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6346:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    634a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    634e:	4620      	mov	r0, r4
    6350:	4798      	blx	r3
    6352:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6356:	3301      	adds	r3, #1
    6358:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    635c:	2101      	movs	r1, #1
    635e:	2300      	movs	r3, #0
    6360:	e7e3      	b.n	632a <d_print_comp_inner+0x82e>
    6362:	4f39      	ldr	r7, [pc, #228]	; (6448 <d_print_comp_inner+0x94c>)
    6364:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6368:	f107 0910 	add.w	r9, r7, #16
    636c:	2568      	movs	r5, #104	; 0x68
    636e:	f04f 0800 	mov.w	r8, #0
    6372:	e00b      	b.n	638c <d_print_comp_inner+0x890>
    6374:	460b      	mov	r3, r1
    6376:	3101      	adds	r1, #1
    6378:	45b9      	cmp	r9, r7
    637a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    637e:	54e5      	strb	r5, [r4, r3]
    6380:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6384:	f43f ac4d 	beq.w	5c22 <d_print_comp_inner+0x126>
    6388:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    638c:	29ff      	cmp	r1, #255	; 0xff
    638e:	d1f1      	bne.n	6374 <d_print_comp_inner+0x878>
    6390:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6394:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6398:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    639c:	4620      	mov	r0, r4
    639e:	4798      	blx	r3
    63a0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    63a4:	3301      	adds	r3, #1
    63a6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    63aa:	2101      	movs	r1, #1
    63ac:	2300      	movs	r3, #0
    63ae:	e7e3      	b.n	6378 <d_print_comp_inner+0x87c>
    63b0:	68d5      	ldr	r5, [r2, #12]
    63b2:	2d00      	cmp	r5, #0
    63b4:	f040 87a1 	bne.w	72fa <d_print_comp_inner+0x17fe>
    63b8:	4924      	ldr	r1, [pc, #144]	; (644c <d_print_comp_inner+0x950>)
    63ba:	4620      	mov	r0, r4
    63bc:	b015      	add	sp, #84	; 0x54
    63be:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    63c2:	f7fd b9e9 	b.w	3798 <d_append_string>
    63c6:	2111      	movs	r1, #17
    63c8:	68d2      	ldr	r2, [r2, #12]
    63ca:	f001 fc11 	bl	7bf0 <d_print_comp>
    63ce:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    63d2:	29ff      	cmp	r1, #255	; 0xff
    63d4:	f001 816e 	beq.w	76b4 <d_print_comp_inner+0x1bb8>
    63d8:	1c4a      	adds	r2, r1, #1
    63da:	2328      	movs	r3, #40	; 0x28
    63dc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    63e0:	5463      	strb	r3, [r4, r1]
    63e2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    63e6:	6932      	ldr	r2, [r6, #16]
    63e8:	2111      	movs	r1, #17
    63ea:	4620      	mov	r0, r4
    63ec:	f001 fc00 	bl	7bf0 <d_print_comp>
    63f0:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    63f4:	29ff      	cmp	r1, #255	; 0xff
    63f6:	f001 802c 	beq.w	7452 <d_print_comp_inner+0x1956>
    63fa:	1c4a      	adds	r2, r1, #1
    63fc:	2329      	movs	r3, #41	; 0x29
    63fe:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    6402:	5463      	strb	r3, [r4, r1]
    6404:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    6408:	f7ff bbe8 	b.w	5bdc <d_print_comp_inner+0xe0>
    640c:	68d2      	ldr	r2, [r2, #12]
    640e:	4910      	ldr	r1, [pc, #64]	; (6450 <d_print_comp_inner+0x954>)
    6410:	a804      	add	r0, sp, #16
    6412:	f004 f8b7 	bl	a584 <sprintf>
    6416:	a804      	add	r0, sp, #16
    6418:	f008 fc32 	bl	ec80 <strlen>
    641c:	2800      	cmp	r0, #0
    641e:	f43f abdd 	beq.w	5bdc <d_print_comp_inner+0xe0>
    6422:	ad04      	add	r5, sp, #16
    6424:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6428:	182f      	adds	r7, r5, r0
    642a:	f04f 0800 	mov.w	r8, #0
    642e:	e01b      	b.n	6468 <d_print_comp_inner+0x96c>
    6430:	20001d14 	.word	0x20001d14
    6434:	20001ea0 	.word	0x20001ea0
    6438:	20001d1c 	.word	0x20001d1c
    643c:	20001e3c 	.word	0x20001e3c
    6440:	20001d54 	.word	0x20001d54
    6444:	20001f80 	.word	0x20001f80
    6448:	20001e54 	.word	0x20001e54
    644c:	20001f10 	.word	0x20001f10
    6450:	20001cb0 	.word	0x20001cb0
    6454:	460b      	mov	r3, r1
    6456:	3101      	adds	r1, #1
    6458:	42af      	cmp	r7, r5
    645a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    645e:	54e6      	strb	r6, [r4, r3]
    6460:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6464:	f43f abba 	beq.w	5bdc <d_print_comp_inner+0xe0>
    6468:	29ff      	cmp	r1, #255	; 0xff
    646a:	f815 6b01 	ldrb.w	r6, [r5], #1
    646e:	d1f1      	bne.n	6454 <d_print_comp_inner+0x958>
    6470:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6474:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6478:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    647c:	4620      	mov	r0, r4
    647e:	4798      	blx	r3
    6480:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6484:	3301      	adds	r3, #1
    6486:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    648a:	2101      	movs	r1, #1
    648c:	2300      	movs	r3, #0
    648e:	e7e3      	b.n	6458 <d_print_comp_inner+0x95c>
    6490:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6494:	7b15      	ldrb	r5, [r2, #12]
    6496:	29ff      	cmp	r1, #255	; 0xff
    6498:	f001 811e 	beq.w	76d8 <d_print_comp_inner+0x1bdc>
    649c:	1c4b      	adds	r3, r1, #1
    649e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    64a2:	5465      	strb	r5, [r4, r1]
    64a4:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    64a8:	f7ff bb98 	b.w	5bdc <d_print_comp_inner+0xe0>
    64ac:	68d2      	ldr	r2, [r2, #12]
    64ae:	b1ca      	cbz	r2, 64e4 <d_print_comp_inner+0x9e8>
    64b0:	f8d0 1114 	ldr.w	r1, [r0, #276]	; 0x114
    64b4:	ab04      	add	r3, sp, #16
    64b6:	f8c0 3114 	str.w	r3, [r0, #276]	; 0x114
    64ba:	2300      	movs	r3, #0
    64bc:	e9cd 1604 	strd	r1, r6, [sp, #16]
    64c0:	9306      	str	r3, [sp, #24]
    64c2:	2111      	movs	r1, #17
    64c4:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
    64c8:	9307      	str	r3, [sp, #28]
    64ca:	f001 fb91 	bl	7bf0 <d_print_comp>
    64ce:	9b06      	ldr	r3, [sp, #24]
    64d0:	9a04      	ldr	r2, [sp, #16]
    64d2:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
    64d6:	2b00      	cmp	r3, #0
    64d8:	f47f ab80 	bne.w	5bdc <d_print_comp_inner+0xe0>
    64dc:	2120      	movs	r1, #32
    64de:	4620      	mov	r0, r4
    64e0:	f7fd f8d2 	bl	3688 <d_append_char>
    64e4:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
    64e8:	4632      	mov	r2, r6
    64ea:	2111      	movs	r1, #17
    64ec:	4620      	mov	r0, r4
    64ee:	b015      	add	sp, #84	; 0x54
    64f0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    64f4:	f001 bec6 	b.w	8284 <d_print_function_type>
    64f8:	68d7      	ldr	r7, [r2, #12]
    64fa:	f8d0 9114 	ldr.w	r9, [r0, #276]	; 0x114
    64fe:	2200      	movs	r2, #0
    6500:	f8c0 2114 	str.w	r2, [r0, #276]	; 0x114
    6504:	2f00      	cmp	r7, #0
    6506:	f43f ab66 	beq.w	5bd6 <d_print_comp_inner+0xda>
    650a:	f10d 0810 	add.w	r8, sp, #16
    650e:	f8d0 c110 	ldr.w	ip, [r0, #272]	; 0x110
    6512:	4643      	mov	r3, r8
    6514:	4611      	mov	r1, r2
    6516:	4696      	mov	lr, r2
    6518:	e9c3 2700 	strd	r2, r7, [r3]
    651c:	e9c3 ec02 	strd	lr, ip, [r3, #8]
    6520:	783a      	ldrb	r2, [r7, #0]
    6522:	2a4e      	cmp	r2, #78	; 0x4e
    6524:	469a      	mov	sl, r3
    6526:	f1a2 0b1c 	sub.w	fp, r2, #28
    652a:	f1a2 0050 	sub.w	r0, r2, #80	; 0x50
    652e:	f101 0501 	add.w	r5, r1, #1
    6532:	f000 8688 	beq.w	7246 <d_print_comp_inner+0x174a>
    6536:	f200 84ed 	bhi.w	6f14 <d_print_comp_inner+0x1418>
    653a:	f1bb 0f04 	cmp.w	fp, #4
    653e:	f240 8682 	bls.w	7246 <d_print_comp_inner+0x174a>
    6542:	2a02      	cmp	r2, #2
    6544:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    6548:	d114      	bne.n	6574 <d_print_comp_inner+0xa78>
    654a:	693f      	ldr	r7, [r7, #16]
    654c:	783a      	ldrb	r2, [r7, #0]
    654e:	2a48      	cmp	r2, #72	; 0x48
    6550:	f001 8250 	beq.w	79f4 <d_print_comp_inner+0x1ef8>
    6554:	eb08 1101 	add.w	r1, r8, r1, lsl #4
    6558:	f04f 0a00 	mov.w	sl, #0
    655c:	2a4e      	cmp	r2, #78	; 0x4e
    655e:	f1a2 0350 	sub.w	r3, r2, #80	; 0x50
    6562:	f1a2 001c 	sub.w	r0, r2, #28
    6566:	f000 8787 	beq.w	7478 <d_print_comp_inner+0x197c>
    656a:	f200 8782 	bhi.w	7472 <d_print_comp_inner+0x1976>
    656e:	2804      	cmp	r0, #4
    6570:	f240 8782 	bls.w	7478 <d_print_comp_inner+0x197c>
    6574:	2a04      	cmp	r2, #4
    6576:	d104      	bne.n	6582 <d_print_comp_inner+0xa86>
    6578:	e9cd c702 	strd	ip, r7, [sp, #8]
    657c:	ab02      	add	r3, sp, #8
    657e:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    6582:	6932      	ldr	r2, [r6, #16]
    6584:	2111      	movs	r1, #17
    6586:	4620      	mov	r0, r4
    6588:	f001 fb32 	bl	7bf0 <d_print_comp>
    658c:	783b      	ldrb	r3, [r7, #0]
    658e:	2b04      	cmp	r3, #4
    6590:	d102      	bne.n	6598 <d_print_comp_inner+0xa9c>
    6592:	9b02      	ldr	r3, [sp, #8]
    6594:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    6598:	eb08 1805 	add.w	r8, r8, r5, lsl #4
    659c:	2720      	movs	r7, #32
    659e:	f858 6c08 	ldr.w	r6, [r8, #-8]
    65a2:	3d01      	subs	r5, #1
    65a4:	2e00      	cmp	r6, #0
    65a6:	f000 863b 	beq.w	7220 <d_print_comp_inner+0x1724>
    65aa:	f1a8 0810 	sub.w	r8, r8, #16
    65ae:	2d00      	cmp	r5, #0
    65b0:	d1f5      	bne.n	659e <d_print_comp_inner+0xaa2>
    65b2:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
    65b6:	f7ff bb11 	b.w	5bdc <d_print_comp_inner+0xe0>
    65ba:	4fab      	ldr	r7, [pc, #684]	; (6868 <d_print_comp_inner+0xd6c>)
    65bc:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    65c0:	f107 0909 	add.w	r9, r7, #9
    65c4:	2564      	movs	r5, #100	; 0x64
    65c6:	f04f 0800 	mov.w	r8, #0
    65ca:	e00b      	b.n	65e4 <d_print_comp_inner+0xae8>
    65cc:	460b      	mov	r3, r1
    65ce:	3101      	adds	r1, #1
    65d0:	454f      	cmp	r7, r9
    65d2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    65d6:	54e5      	strb	r5, [r4, r3]
    65d8:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    65dc:	f000 85ff 	beq.w	71de <d_print_comp_inner+0x16e2>
    65e0:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    65e4:	29ff      	cmp	r1, #255	; 0xff
    65e6:	d1f1      	bne.n	65cc <d_print_comp_inner+0xad0>
    65e8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    65ec:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    65f0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    65f4:	4620      	mov	r0, r4
    65f6:	4798      	blx	r3
    65f8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    65fc:	3301      	adds	r3, #1
    65fe:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6602:	2101      	movs	r1, #1
    6604:	2300      	movs	r3, #0
    6606:	e7e3      	b.n	65d0 <d_print_comp_inner+0xad4>
    6608:	4f98      	ldr	r7, [pc, #608]	; (686c <d_print_comp_inner+0xd70>)
    660a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    660e:	f107 0907 	add.w	r9, r7, #7
    6612:	257b      	movs	r5, #123	; 0x7b
    6614:	f04f 0800 	mov.w	r8, #0
    6618:	e00b      	b.n	6632 <d_print_comp_inner+0xb36>
    661a:	460b      	mov	r3, r1
    661c:	3101      	adds	r1, #1
    661e:	454f      	cmp	r7, r9
    6620:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6624:	54e5      	strb	r5, [r4, r3]
    6626:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    662a:	f000 8546 	beq.w	70ba <d_print_comp_inner+0x15be>
    662e:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6632:	29ff      	cmp	r1, #255	; 0xff
    6634:	d1f1      	bne.n	661a <d_print_comp_inner+0xb1e>
    6636:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    663a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    663e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6642:	4620      	mov	r0, r4
    6644:	4798      	blx	r3
    6646:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    664a:	3301      	adds	r3, #1
    664c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6650:	2101      	movs	r1, #1
    6652:	2300      	movs	r3, #0
    6654:	e7e3      	b.n	661e <d_print_comp_inner+0xb22>
    6656:	4f86      	ldr	r7, [pc, #536]	; (6870 <d_print_comp_inner+0xd74>)
    6658:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    665c:	f107 091b 	add.w	r9, r7, #27
    6660:	2567      	movs	r5, #103	; 0x67
    6662:	f04f 0800 	mov.w	r8, #0
    6666:	e00b      	b.n	6680 <d_print_comp_inner+0xb84>
    6668:	460b      	mov	r3, r1
    666a:	3101      	adds	r1, #1
    666c:	45b9      	cmp	r9, r7
    666e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6672:	54e5      	strb	r5, [r4, r3]
    6674:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6678:	f43f aad3 	beq.w	5c22 <d_print_comp_inner+0x126>
    667c:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6680:	29ff      	cmp	r1, #255	; 0xff
    6682:	d1f1      	bne.n	6668 <d_print_comp_inner+0xb6c>
    6684:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6688:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    668c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6690:	4620      	mov	r0, r4
    6692:	4798      	blx	r3
    6694:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6698:	3301      	adds	r3, #1
    669a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    669e:	2101      	movs	r1, #1
    66a0:	2300      	movs	r3, #0
    66a2:	e7e3      	b.n	666c <d_print_comp_inner+0xb70>
    66a4:	4f73      	ldr	r7, [pc, #460]	; (6874 <d_print_comp_inner+0xd78>)
    66a6:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    66aa:	f107 091c 	add.w	r9, r7, #28
    66ae:	2567      	movs	r5, #103	; 0x67
    66b0:	f04f 0800 	mov.w	r8, #0
    66b4:	e00b      	b.n	66ce <d_print_comp_inner+0xbd2>
    66b6:	460b      	mov	r3, r1
    66b8:	3101      	adds	r1, #1
    66ba:	45b9      	cmp	r9, r7
    66bc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    66c0:	54e5      	strb	r5, [r4, r3]
    66c2:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    66c6:	f43f aaac 	beq.w	5c22 <d_print_comp_inner+0x126>
    66ca:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    66ce:	29ff      	cmp	r1, #255	; 0xff
    66d0:	d1f1      	bne.n	66b6 <d_print_comp_inner+0xbba>
    66d2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    66d6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    66da:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    66de:	4620      	mov	r0, r4
    66e0:	4798      	blx	r3
    66e2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    66e6:	3301      	adds	r3, #1
    66e8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    66ec:	2101      	movs	r1, #1
    66ee:	2300      	movs	r3, #0
    66f0:	e7e3      	b.n	66ba <d_print_comp_inner+0xbbe>
    66f2:	6913      	ldr	r3, [r2, #16]
    66f4:	781b      	ldrb	r3, [r3, #0]
    66f6:	2b39      	cmp	r3, #57	; 0x39
    66f8:	f47f aa6d 	bne.w	5bd6 <d_print_comp_inner+0xda>
    66fc:	68d2      	ldr	r2, [r2, #12]
    66fe:	68d3      	ldr	r3, [r2, #12]
    6700:	681b      	ldr	r3, [r3, #0]
    6702:	7859      	ldrb	r1, [r3, #1]
    6704:	2963      	cmp	r1, #99	; 0x63
    6706:	f001 8081 	beq.w	780c <d_print_comp_inner+0x1d10>
    670a:	4632      	mov	r2, r6
    670c:	2111      	movs	r1, #17
    670e:	4620      	mov	r0, r4
    6710:	f002 fb16 	bl	8d40 <d_maybe_print_fold_expression>
    6714:	2800      	cmp	r0, #0
    6716:	f47f aa61 	bne.w	5bdc <d_print_comp_inner+0xe0>
    671a:	4632      	mov	r2, r6
    671c:	2111      	movs	r1, #17
    671e:	4620      	mov	r0, r4
    6720:	f002 fc38 	bl	8f94 <d_maybe_print_designated_init>
    6724:	2800      	cmp	r0, #0
    6726:	f47f aa59 	bne.w	5bdc <d_print_comp_inner+0xe0>
    672a:	68f3      	ldr	r3, [r6, #12]
    672c:	781a      	ldrb	r2, [r3, #0]
    672e:	2a32      	cmp	r2, #50	; 0x32
    6730:	f001 81dd 	beq.w	7aee <d_print_comp_inner+0x1ff2>
    6734:	68db      	ldr	r3, [r3, #12]
    6736:	4950      	ldr	r1, [pc, #320]	; (6878 <d_print_comp_inner+0xd7c>)
    6738:	6818      	ldr	r0, [r3, #0]
    673a:	f006 fb15 	bl	cd68 <strcmp>
    673e:	6933      	ldr	r3, [r6, #16]
    6740:	b920      	cbnz	r0, 674c <d_print_comp_inner+0xc50>
    6742:	68da      	ldr	r2, [r3, #12]
    6744:	7811      	ldrb	r1, [r2, #0]
    6746:	2903      	cmp	r1, #3
    6748:	f001 8200 	beq.w	7b4c <d_print_comp_inner+0x2050>
    674c:	68da      	ldr	r2, [r3, #12]
    674e:	2111      	movs	r1, #17
    6750:	4620      	mov	r0, r4
    6752:	f002 fa87 	bl	8c64 <d_print_subexpr>
    6756:	68f5      	ldr	r5, [r6, #12]
    6758:	4948      	ldr	r1, [pc, #288]	; (687c <d_print_comp_inner+0xd80>)
    675a:	68eb      	ldr	r3, [r5, #12]
    675c:	681f      	ldr	r7, [r3, #0]
    675e:	4638      	mov	r0, r7
    6760:	f006 fb02 	bl	cd68 <strcmp>
    6764:	2800      	cmp	r0, #0
    6766:	f001 81e1 	beq.w	7b2c <d_print_comp_inner+0x2030>
    676a:	4943      	ldr	r1, [pc, #268]	; (6878 <d_print_comp_inner+0xd7c>)
    676c:	4638      	mov	r0, r7
    676e:	f006 fafb 	bl	cd68 <strcmp>
    6772:	2800      	cmp	r0, #0
    6774:	f041 81f8 	bne.w	7b68 <d_print_comp_inner+0x206c>
    6778:	6933      	ldr	r3, [r6, #16]
    677a:	2111      	movs	r1, #17
    677c:	691a      	ldr	r2, [r3, #16]
    677e:	4620      	mov	r0, r4
    6780:	f002 fa70 	bl	8c64 <d_print_subexpr>
    6784:	68f3      	ldr	r3, [r6, #12]
    6786:	781a      	ldrb	r2, [r3, #0]
    6788:	2a32      	cmp	r2, #50	; 0x32
    678a:	f47f aa27 	bne.w	5bdc <d_print_comp_inner+0xe0>
    678e:	68db      	ldr	r3, [r3, #12]
    6790:	689a      	ldr	r2, [r3, #8]
    6792:	2a01      	cmp	r2, #1
    6794:	f47f aa22 	bne.w	5bdc <d_print_comp_inner+0xe0>
    6798:	685b      	ldr	r3, [r3, #4]
    679a:	781b      	ldrb	r3, [r3, #0]
    679c:	2b3e      	cmp	r3, #62	; 0x3e
    679e:	f47f aa1d 	bne.w	5bdc <d_print_comp_inner+0xe0>
    67a2:	2129      	movs	r1, #41	; 0x29
    67a4:	f7ff bb1e 	b.w	5de4 <d_print_comp_inner+0x2e8>
    67a8:	e9d2 7503 	ldrd	r7, r5, [r2, #12]
    67ac:	783b      	ldrb	r3, [r7, #0]
    67ae:	2b32      	cmp	r3, #50	; 0x32
    67b0:	f000 86b1 	beq.w	7516 <d_print_comp_inner+0x1a1a>
    67b4:	2b34      	cmp	r3, #52	; 0x34
    67b6:	f041 820d 	bne.w	7bd4 <d_print_comp_inner+0x20d8>
    67ba:	2128      	movs	r1, #40	; 0x28
    67bc:	f7fc ff64 	bl	3688 <d_append_char>
    67c0:	4620      	mov	r0, r4
    67c2:	2111      	movs	r1, #17
    67c4:	68fa      	ldr	r2, [r7, #12]
    67c6:	f001 fa13 	bl	7bf0 <d_print_comp>
    67ca:	2129      	movs	r1, #41	; 0x29
    67cc:	4620      	mov	r0, r4
    67ce:	f7fc ff5b 	bl	3688 <d_append_char>
    67d2:	462a      	mov	r2, r5
    67d4:	2111      	movs	r1, #17
    67d6:	4620      	mov	r0, r4
    67d8:	b015      	add	sp, #84	; 0x54
    67da:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    67de:	f002 ba41 	b.w	8c64 <d_print_subexpr>
    67e2:	68d2      	ldr	r2, [r2, #12]
    67e4:	2111      	movs	r1, #17
    67e6:	4620      	mov	r0, r4
    67e8:	b015      	add	sp, #84	; 0x54
    67ea:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    67ee:	f002 b83d 	b.w	886c <d_print_expr_op>
    67f2:	f9b2 3012 	ldrsh.w	r3, [r2, #18]
    67f6:	2b00      	cmp	r3, #0
    67f8:	f040 871b 	bne.w	7632 <d_print_comp_inner+0x1b36>
    67fc:	68f2      	ldr	r2, [r6, #12]
    67fe:	4b20      	ldr	r3, [pc, #128]	; (6880 <d_print_comp_inner+0xd84>)
    6800:	68d1      	ldr	r1, [r2, #12]
    6802:	4299      	cmp	r1, r3
    6804:	d00f      	beq.n	6826 <d_print_comp_inner+0xd2a>
    6806:	2111      	movs	r1, #17
    6808:	4620      	mov	r0, r4
    680a:	f001 f9f1 	bl	7bf0 <d_print_comp>
    680e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6812:	29ff      	cmp	r1, #255	; 0xff
    6814:	f001 80be 	beq.w	7994 <d_print_comp_inner+0x1e98>
    6818:	2320      	movs	r3, #32
    681a:	1c4a      	adds	r2, r1, #1
    681c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    6820:	5463      	strb	r3, [r4, r1]
    6822:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    6826:	f9b6 8010 	ldrsh.w	r8, [r6, #16]
    682a:	f1b8 0f00 	cmp.w	r8, #0
    682e:	f000 8540 	beq.w	72b2 <d_print_comp_inner+0x17b6>
    6832:	4914      	ldr	r1, [pc, #80]	; (6884 <d_print_comp_inner+0xd88>)
    6834:	e5c1      	b.n	63ba <d_print_comp_inner+0x8be>
    6836:	f8d0 c114 	ldr.w	ip, [r0, #276]	; 0x114
    683a:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
    683e:	9307      	str	r3, [sp, #28]
    6840:	f10d 0810 	add.w	r8, sp, #16
    6844:	2300      	movs	r3, #0
    6846:	46e1      	mov	r9, ip
    6848:	f8cd c010 	str.w	ip, [sp, #16]
    684c:	f8c0 8114 	str.w	r8, [r0, #276]	; 0x114
    6850:	9205      	str	r2, [sp, #20]
    6852:	9306      	str	r3, [sp, #24]
    6854:	f1bc 0f00 	cmp.w	ip, #0
    6858:	f001 813d 	beq.w	7ad6 <d_print_comp_inner+0x1fda>
    685c:	2701      	movs	r7, #1
    685e:	4665      	mov	r5, ip
    6860:	46be      	mov	lr, r7
    6862:	4694      	mov	ip, r2
    6864:	4646      	mov	r6, r8
    6866:	e028      	b.n	68ba <d_print_comp_inner+0xdbe>
    6868:	20001f00 	.word	0x20001f00
    686c:	20001f60 	.word	0x20001f60
    6870:	20001f40 	.word	0x20001f40
    6874:	20001f20 	.word	0x20001f20
    6878:	20001ebc 	.word	0x20001ebc
    687c:	20001ec0 	.word	0x20001ec0
    6880:	20001618 	.word	0x20001618
    6884:	20001e8c 	.word	0x20001e8c
    6888:	68ab      	ldr	r3, [r5, #8]
    688a:	b9a3      	cbnz	r3, 68b6 <d_print_comp_inner+0xdba>
    688c:	2f03      	cmp	r7, #3
    688e:	f63f a9a2 	bhi.w	5bd6 <d_print_comp_inner+0xda>
    6892:	ab14      	add	r3, sp, #80	; 0x50
    6894:	eb03 1b07 	add.w	fp, r3, r7, lsl #4
    6898:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
    689c:	f1ab 0a40 	sub.w	sl, fp, #64	; 0x40
    68a0:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
    68a4:	f84b 6c40 	str.w	r6, [fp, #-64]
    68a8:	eb08 1607 	add.w	r6, r8, r7, lsl #4
    68ac:	f8c4 6114 	str.w	r6, [r4, #276]	; 0x114
    68b0:	3701      	adds	r7, #1
    68b2:	f8c5 e008 	str.w	lr, [r5, #8]
    68b6:	682d      	ldr	r5, [r5, #0]
    68b8:	b125      	cbz	r5, 68c4 <d_print_comp_inner+0xdc8>
    68ba:	686b      	ldr	r3, [r5, #4]
    68bc:	781b      	ldrb	r3, [r3, #0]
    68be:	3b19      	subs	r3, #25
    68c0:	2b02      	cmp	r3, #2
    68c2:	d9e1      	bls.n	6888 <d_print_comp_inner+0xd8c>
    68c4:	f8dc 2010 	ldr.w	r2, [ip, #16]
    68c8:	2111      	movs	r1, #17
    68ca:	4620      	mov	r0, r4
    68cc:	4666      	mov	r6, ip
    68ce:	f001 f98f 	bl	7bf0 <d_print_comp>
    68d2:	9b06      	ldr	r3, [sp, #24]
    68d4:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
    68d8:	2b00      	cmp	r3, #0
    68da:	f47f a97f 	bne.w	5bdc <d_print_comp_inner+0xe0>
    68de:	2f01      	cmp	r7, #1
    68e0:	d00c      	beq.n	68fc <d_print_comp_inner+0xe00>
    68e2:	eb08 1807 	add.w	r8, r8, r7, lsl #4
    68e6:	f858 2c0c 	ldr.w	r2, [r8, #-12]
    68ea:	3f01      	subs	r7, #1
    68ec:	2111      	movs	r1, #17
    68ee:	4620      	mov	r0, r4
    68f0:	f001 f9ac 	bl	7c4c <d_print_mod>
    68f4:	2f01      	cmp	r7, #1
    68f6:	f1a8 0810 	sub.w	r8, r8, #16
    68fa:	d1f4      	bne.n	68e6 <d_print_comp_inner+0xdea>
    68fc:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
    6900:	4632      	mov	r2, r6
    6902:	2111      	movs	r1, #17
    6904:	4620      	mov	r0, r4
    6906:	f001 fecd 	bl	86a4 <d_print_array_type>
    690a:	f7ff b967 	b.w	5bdc <d_print_comp_inner+0xe0>
    690e:	4fc6      	ldr	r7, [pc, #792]	; (6c28 <d_print_comp_inner+0x112c>)
    6910:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6914:	f107 0919 	add.w	r9, r7, #25
    6918:	2563      	movs	r5, #99	; 0x63
    691a:	f04f 0800 	mov.w	r8, #0
    691e:	e00b      	b.n	6938 <d_print_comp_inner+0xe3c>
    6920:	460b      	mov	r3, r1
    6922:	3101      	adds	r1, #1
    6924:	45b9      	cmp	r9, r7
    6926:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    692a:	54e5      	strb	r5, [r4, r3]
    692c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6930:	f43f a977 	beq.w	5c22 <d_print_comp_inner+0x126>
    6934:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6938:	29ff      	cmp	r1, #255	; 0xff
    693a:	d1f1      	bne.n	6920 <d_print_comp_inner+0xe24>
    693c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6940:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6944:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6948:	4620      	mov	r0, r4
    694a:	4798      	blx	r3
    694c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6950:	3301      	adds	r3, #1
    6952:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6956:	2101      	movs	r1, #1
    6958:	2300      	movs	r3, #0
    695a:	e7e3      	b.n	6924 <d_print_comp_inner+0xe28>
    695c:	4fb3      	ldr	r7, [pc, #716]	; (6c2c <d_print_comp_inner+0x1130>)
    695e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6962:	f107 0910 	add.w	r9, r7, #16
    6966:	2576      	movs	r5, #118	; 0x76
    6968:	f04f 0800 	mov.w	r8, #0
    696c:	e00b      	b.n	6986 <d_print_comp_inner+0xe8a>
    696e:	460b      	mov	r3, r1
    6970:	3101      	adds	r1, #1
    6972:	45b9      	cmp	r9, r7
    6974:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6978:	54e5      	strb	r5, [r4, r3]
    697a:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    697e:	f43f a950 	beq.w	5c22 <d_print_comp_inner+0x126>
    6982:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6986:	29ff      	cmp	r1, #255	; 0xff
    6988:	d1f1      	bne.n	696e <d_print_comp_inner+0xe72>
    698a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    698e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6992:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6996:	4620      	mov	r0, r4
    6998:	4798      	blx	r3
    699a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    699e:	3301      	adds	r3, #1
    69a0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    69a4:	2101      	movs	r1, #1
    69a6:	2300      	movs	r3, #0
    69a8:	e7e3      	b.n	6972 <d_print_comp_inner+0xe76>
    69aa:	4fa1      	ldr	r7, [pc, #644]	; (6c30 <d_print_comp_inner+0x1134>)
    69ac:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    69b0:	f107 0914 	add.w	r9, r7, #20
    69b4:	256e      	movs	r5, #110	; 0x6e
    69b6:	f04f 0800 	mov.w	r8, #0
    69ba:	e00b      	b.n	69d4 <d_print_comp_inner+0xed8>
    69bc:	460b      	mov	r3, r1
    69be:	3101      	adds	r1, #1
    69c0:	45b9      	cmp	r9, r7
    69c2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    69c6:	54e5      	strb	r5, [r4, r3]
    69c8:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    69cc:	f43f a929 	beq.w	5c22 <d_print_comp_inner+0x126>
    69d0:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    69d4:	29ff      	cmp	r1, #255	; 0xff
    69d6:	d1f1      	bne.n	69bc <d_print_comp_inner+0xec0>
    69d8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    69dc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    69e0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    69e4:	4620      	mov	r0, r4
    69e6:	4798      	blx	r3
    69e8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    69ec:	3301      	adds	r3, #1
    69ee:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    69f2:	2101      	movs	r1, #1
    69f4:	2300      	movs	r3, #0
    69f6:	e7e3      	b.n	69c0 <d_print_comp_inner+0xec4>
    69f8:	4f8e      	ldr	r7, [pc, #568]	; (6c34 <d_print_comp_inner+0x1138>)
    69fa:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    69fe:	f107 0918 	add.w	r9, r7, #24
    6a02:	2554      	movs	r5, #84	; 0x54
    6a04:	f04f 0800 	mov.w	r8, #0
    6a08:	e00b      	b.n	6a22 <d_print_comp_inner+0xf26>
    6a0a:	460b      	mov	r3, r1
    6a0c:	3101      	adds	r1, #1
    6a0e:	45b9      	cmp	r9, r7
    6a10:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6a14:	54e5      	strb	r5, [r4, r3]
    6a16:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6a1a:	f43f a902 	beq.w	5c22 <d_print_comp_inner+0x126>
    6a1e:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6a22:	29ff      	cmp	r1, #255	; 0xff
    6a24:	d1f1      	bne.n	6a0a <d_print_comp_inner+0xf0e>
    6a26:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6a2a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6a2e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6a32:	4620      	mov	r0, r4
    6a34:	4798      	blx	r3
    6a36:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6a3a:	3301      	adds	r3, #1
    6a3c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6a40:	2101      	movs	r1, #1
    6a42:	2300      	movs	r3, #0
    6a44:	e7e3      	b.n	6a0e <d_print_comp_inner+0xf12>
    6a46:	4f7c      	ldr	r7, [pc, #496]	; (6c38 <d_print_comp_inner+0x113c>)
    6a48:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6a4c:	f107 0915 	add.w	r9, r7, #21
    6a50:	2554      	movs	r5, #84	; 0x54
    6a52:	f04f 0800 	mov.w	r8, #0
    6a56:	e00b      	b.n	6a70 <d_print_comp_inner+0xf74>
    6a58:	460b      	mov	r3, r1
    6a5a:	3101      	adds	r1, #1
    6a5c:	45b9      	cmp	r9, r7
    6a5e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6a62:	54e5      	strb	r5, [r4, r3]
    6a64:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6a68:	f43f a8db 	beq.w	5c22 <d_print_comp_inner+0x126>
    6a6c:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6a70:	29ff      	cmp	r1, #255	; 0xff
    6a72:	d1f1      	bne.n	6a58 <d_print_comp_inner+0xf5c>
    6a74:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6a78:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6a7c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6a80:	4620      	mov	r0, r4
    6a82:	4798      	blx	r3
    6a84:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6a88:	3301      	adds	r3, #1
    6a8a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6a8e:	2101      	movs	r1, #1
    6a90:	2300      	movs	r3, #0
    6a92:	e7e3      	b.n	6a5c <d_print_comp_inner+0xf60>
    6a94:	4f69      	ldr	r7, [pc, #420]	; (6c3c <d_print_comp_inner+0x1140>)
    6a96:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6a9a:	f107 0912 	add.w	r9, r7, #18
    6a9e:	2567      	movs	r5, #103	; 0x67
    6aa0:	f04f 0800 	mov.w	r8, #0
    6aa4:	e00b      	b.n	6abe <d_print_comp_inner+0xfc2>
    6aa6:	460b      	mov	r3, r1
    6aa8:	3101      	adds	r1, #1
    6aaa:	45b9      	cmp	r9, r7
    6aac:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6ab0:	54e5      	strb	r5, [r4, r3]
    6ab2:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6ab6:	f43f a8b4 	beq.w	5c22 <d_print_comp_inner+0x126>
    6aba:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6abe:	29ff      	cmp	r1, #255	; 0xff
    6ac0:	d1f1      	bne.n	6aa6 <d_print_comp_inner+0xfaa>
    6ac2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6ac6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6aca:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6ace:	4620      	mov	r0, r4
    6ad0:	4798      	blx	r3
    6ad2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6ad6:	3301      	adds	r3, #1
    6ad8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6adc:	2101      	movs	r1, #1
    6ade:	2300      	movs	r3, #0
    6ae0:	e7e3      	b.n	6aaa <d_print_comp_inner+0xfae>
    6ae2:	4f57      	ldr	r7, [pc, #348]	; (6c40 <d_print_comp_inner+0x1144>)
    6ae4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6ae8:	f107 090e 	add.w	r9, r7, #14
    6aec:	256a      	movs	r5, #106	; 0x6a
    6aee:	f04f 0800 	mov.w	r8, #0
    6af2:	e00b      	b.n	6b0c <d_print_comp_inner+0x1010>
    6af4:	460b      	mov	r3, r1
    6af6:	3101      	adds	r1, #1
    6af8:	45b9      	cmp	r9, r7
    6afa:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6afe:	54e5      	strb	r5, [r4, r3]
    6b00:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6b04:	f43f a88d 	beq.w	5c22 <d_print_comp_inner+0x126>
    6b08:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6b0c:	29ff      	cmp	r1, #255	; 0xff
    6b0e:	d1f1      	bne.n	6af4 <d_print_comp_inner+0xff8>
    6b10:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6b14:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6b18:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6b1c:	4620      	mov	r0, r4
    6b1e:	4798      	blx	r3
    6b20:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6b24:	3301      	adds	r3, #1
    6b26:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6b2a:	2101      	movs	r1, #1
    6b2c:	2300      	movs	r3, #0
    6b2e:	e7e3      	b.n	6af8 <d_print_comp_inner+0xffc>
    6b30:	4f44      	ldr	r7, [pc, #272]	; (6c44 <d_print_comp_inner+0x1148>)
    6b32:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6b36:	f107 0908 	add.w	r9, r7, #8
    6b3a:	256f      	movs	r5, #111	; 0x6f
    6b3c:	f04f 0800 	mov.w	r8, #0
    6b40:	e00b      	b.n	6b5a <d_print_comp_inner+0x105e>
    6b42:	460b      	mov	r3, r1
    6b44:	3101      	adds	r1, #1
    6b46:	45b9      	cmp	r9, r7
    6b48:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6b4c:	54e5      	strb	r5, [r4, r3]
    6b4e:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6b52:	f000 8295 	beq.w	7080 <d_print_comp_inner+0x1584>
    6b56:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6b5a:	29ff      	cmp	r1, #255	; 0xff
    6b5c:	d1f1      	bne.n	6b42 <d_print_comp_inner+0x1046>
    6b5e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6b62:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6b66:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6b6a:	4620      	mov	r0, r4
    6b6c:	4798      	blx	r3
    6b6e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6b72:	3301      	adds	r3, #1
    6b74:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6b78:	2101      	movs	r1, #1
    6b7a:	2300      	movs	r3, #0
    6b7c:	e7e3      	b.n	6b46 <d_print_comp_inner+0x104a>
    6b7e:	4f31      	ldr	r7, [pc, #196]	; (6c44 <d_print_comp_inner+0x1148>)
    6b80:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6b84:	f107 0908 	add.w	r9, r7, #8
    6b88:	256f      	movs	r5, #111	; 0x6f
    6b8a:	f04f 0800 	mov.w	r8, #0
    6b8e:	e00b      	b.n	6ba8 <d_print_comp_inner+0x10ac>
    6b90:	460b      	mov	r3, r1
    6b92:	3101      	adds	r1, #1
    6b94:	45b9      	cmp	r9, r7
    6b96:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6b9a:	54e5      	strb	r5, [r4, r3]
    6b9c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6ba0:	f43f a853 	beq.w	5c4a <d_print_comp_inner+0x14e>
    6ba4:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6ba8:	29ff      	cmp	r1, #255	; 0xff
    6baa:	d1f1      	bne.n	6b90 <d_print_comp_inner+0x1094>
    6bac:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6bb0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6bb4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6bb8:	4620      	mov	r0, r4
    6bba:	4798      	blx	r3
    6bbc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6bc0:	3301      	adds	r3, #1
    6bc2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6bc6:	2101      	movs	r1, #1
    6bc8:	2300      	movs	r3, #0
    6bca:	e7e3      	b.n	6b94 <d_print_comp_inner+0x1098>
    6bcc:	68d2      	ldr	r2, [r2, #12]
    6bce:	2111      	movs	r1, #17
    6bd0:	f001 f80e 	bl	7bf0 <d_print_comp>
    6bd4:	f7ff b839 	b.w	5c4a <d_print_comp_inner+0x14e>
    6bd8:	4f1b      	ldr	r7, [pc, #108]	; (6c48 <d_print_comp_inner+0x114c>)
    6bda:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6bde:	f107 090d 	add.w	r9, r7, #13
    6be2:	256a      	movs	r5, #106	; 0x6a
    6be4:	f04f 0800 	mov.w	r8, #0
    6be8:	e00b      	b.n	6c02 <d_print_comp_inner+0x1106>
    6bea:	460b      	mov	r3, r1
    6bec:	3101      	adds	r1, #1
    6bee:	45b9      	cmp	r9, r7
    6bf0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6bf4:	54e5      	strb	r5, [r4, r3]
    6bf6:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6bfa:	f43f a812 	beq.w	5c22 <d_print_comp_inner+0x126>
    6bfe:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6c02:	29ff      	cmp	r1, #255	; 0xff
    6c04:	d1f1      	bne.n	6bea <d_print_comp_inner+0x10ee>
    6c06:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6c0a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6c0e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6c12:	4620      	mov	r0, r4
    6c14:	4798      	blx	r3
    6c16:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6c1a:	3301      	adds	r3, #1
    6c1c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6c20:	2101      	movs	r1, #1
    6c22:	2300      	movs	r3, #0
    6c24:	e7e3      	b.n	6bee <d_print_comp_inner+0x10f2>
    6c26:	bf00      	nop
    6c28:	20001dc8 	.word	0x20001dc8
    6c2c:	20001db4 	.word	0x20001db4
    6c30:	20001db0 	.word	0x20001db0
    6c34:	20001e20 	.word	0x20001e20
    6c38:	20001e08 	.word	0x20001e08
    6c3c:	20001df4 	.word	0x20001df4
    6c40:	20001de4 	.word	0x20001de4
    6c44:	20001eac 	.word	0x20001eac
    6c48:	20001ef0 	.word	0x20001ef0
    6c4c:	2300      	movs	r3, #0
    6c4e:	f8d0 8114 	ldr.w	r8, [r0, #276]	; 0x114
    6c52:	f8d0 7148 	ldr.w	r7, [r0, #328]	; 0x148
    6c56:	f8c4 2148 	str.w	r2, [r4, #328]	; 0x148
    6c5a:	2111      	movs	r1, #17
    6c5c:	f8c0 3114 	str.w	r3, [r0, #276]	; 0x114
    6c60:	68d2      	ldr	r2, [r2, #12]
    6c62:	f000 ffc5 	bl	7bf0 <d_print_comp>
    6c66:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    6c6a:	2b3c      	cmp	r3, #60	; 0x3c
    6c6c:	f000 857c 	beq.w	7768 <d_print_comp_inner+0x1c6c>
    6c70:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6c74:	29ff      	cmp	r1, #255	; 0xff
    6c76:	f000 8567 	beq.w	7748 <d_print_comp_inner+0x1c4c>
    6c7a:	1c4b      	adds	r3, r1, #1
    6c7c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    6c80:	233c      	movs	r3, #60	; 0x3c
    6c82:	5463      	strb	r3, [r4, r1]
    6c84:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    6c88:	6932      	ldr	r2, [r6, #16]
    6c8a:	2111      	movs	r1, #17
    6c8c:	4620      	mov	r0, r4
    6c8e:	f000 ffaf 	bl	7bf0 <d_print_comp>
    6c92:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    6c96:	2b3e      	cmp	r3, #62	; 0x3e
    6c98:	f000 8550 	beq.w	773c <d_print_comp_inner+0x1c40>
    6c9c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6ca0:	29ff      	cmp	r1, #255	; 0xff
    6ca2:	f000 853b 	beq.w	771c <d_print_comp_inner+0x1c20>
    6ca6:	1c4b      	adds	r3, r1, #1
    6ca8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    6cac:	233e      	movs	r3, #62	; 0x3e
    6cae:	5463      	strb	r3, [r4, r1]
    6cb0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    6cb4:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
    6cb8:	f8c4 7148 	str.w	r7, [r4, #328]	; 0x148
    6cbc:	f7fe bf8e 	b.w	5bdc <d_print_comp_inner+0xe0>
    6cc0:	4fc4      	ldr	r7, [pc, #784]	; (6fd4 <d_print_comp_inner+0x14d8>)
    6cc2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6cc6:	f107 0907 	add.w	r9, r7, #7
    6cca:	2556      	movs	r5, #86	; 0x56
    6ccc:	f04f 0800 	mov.w	r8, #0
    6cd0:	e00b      	b.n	6cea <d_print_comp_inner+0x11ee>
    6cd2:	460b      	mov	r3, r1
    6cd4:	3101      	adds	r1, #1
    6cd6:	454f      	cmp	r7, r9
    6cd8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6cdc:	54e5      	strb	r5, [r4, r3]
    6cde:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6ce2:	f43e af9e 	beq.w	5c22 <d_print_comp_inner+0x126>
    6ce6:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6cea:	29ff      	cmp	r1, #255	; 0xff
    6cec:	d1f1      	bne.n	6cd2 <d_print_comp_inner+0x11d6>
    6cee:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6cf2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6cf6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6cfa:	4620      	mov	r0, r4
    6cfc:	4798      	blx	r3
    6cfe:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6d02:	3301      	adds	r3, #1
    6d04:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6d08:	2101      	movs	r1, #1
    6d0a:	2300      	movs	r3, #0
    6d0c:	e7e3      	b.n	6cd6 <d_print_comp_inner+0x11da>
    6d0e:	4fb2      	ldr	r7, [pc, #712]	; (6fd8 <d_print_comp_inner+0x14dc>)
    6d10:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6d14:	f107 090a 	add.w	r9, r7, #10
    6d18:	2576      	movs	r5, #118	; 0x76
    6d1a:	f04f 0800 	mov.w	r8, #0
    6d1e:	e00b      	b.n	6d38 <d_print_comp_inner+0x123c>
    6d20:	460b      	mov	r3, r1
    6d22:	3101      	adds	r1, #1
    6d24:	45b9      	cmp	r9, r7
    6d26:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6d2a:	54e5      	strb	r5, [r4, r3]
    6d2c:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    6d30:	f43e af77 	beq.w	5c22 <d_print_comp_inner+0x126>
    6d34:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    6d38:	29ff      	cmp	r1, #255	; 0xff
    6d3a:	d1f1      	bne.n	6d20 <d_print_comp_inner+0x1224>
    6d3c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6d40:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6d44:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6d48:	4620      	mov	r0, r4
    6d4a:	4798      	blx	r3
    6d4c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6d50:	3301      	adds	r3, #1
    6d52:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6d56:	2101      	movs	r1, #1
    6d58:	2300      	movs	r3, #0
    6d5a:	e7e3      	b.n	6d24 <d_print_comp_inner+0x1228>
    6d5c:	6913      	ldr	r3, [r2, #16]
    6d5e:	781a      	ldrb	r2, [r3, #0]
    6d60:	2a3b      	cmp	r2, #59	; 0x3b
    6d62:	f47e af38 	bne.w	5bd6 <d_print_comp_inner+0xda>
    6d66:	691b      	ldr	r3, [r3, #16]
    6d68:	781b      	ldrb	r3, [r3, #0]
    6d6a:	2b3c      	cmp	r3, #60	; 0x3c
    6d6c:	f47e af33 	bne.w	5bd6 <d_print_comp_inner+0xda>
    6d70:	4632      	mov	r2, r6
    6d72:	2111      	movs	r1, #17
    6d74:	f001 ffe4 	bl	8d40 <d_maybe_print_fold_expression>
    6d78:	2800      	cmp	r0, #0
    6d7a:	f47e af2f 	bne.w	5bdc <d_print_comp_inner+0xe0>
    6d7e:	4632      	mov	r2, r6
    6d80:	2111      	movs	r1, #17
    6d82:	4620      	mov	r0, r4
    6d84:	f002 f906 	bl	8f94 <d_maybe_print_designated_init>
    6d88:	2800      	cmp	r0, #0
    6d8a:	f47e af27 	bne.w	5bdc <d_print_comp_inner+0xe0>
    6d8e:	e9d6 8303 	ldrd	r8, r3, [r6, #12]
    6d92:	e9d3 6303 	ldrd	r6, r3, [r3, #12]
    6d96:	f8d8 200c 	ldr.w	r2, [r8, #12]
    6d9a:	4990      	ldr	r1, [pc, #576]	; (6fdc <d_print_comp_inner+0x14e0>)
    6d9c:	6810      	ldr	r0, [r2, #0]
    6d9e:	e9d3 7503 	ldrd	r7, r5, [r3, #12]
    6da2:	f005 ffe1 	bl	cd68 <strcmp>
    6da6:	2800      	cmp	r0, #0
    6da8:	f040 86e5 	bne.w	7b76 <d_print_comp_inner+0x207a>
    6dac:	4632      	mov	r2, r6
    6dae:	4620      	mov	r0, r4
    6db0:	2111      	movs	r1, #17
    6db2:	f001 ff57 	bl	8c64 <d_print_subexpr>
    6db6:	4642      	mov	r2, r8
    6db8:	4620      	mov	r0, r4
    6dba:	2111      	movs	r1, #17
    6dbc:	f001 fd56 	bl	886c <d_print_expr_op>
    6dc0:	4620      	mov	r0, r4
    6dc2:	463a      	mov	r2, r7
    6dc4:	2111      	movs	r1, #17
    6dc6:	f001 ff4d 	bl	8c64 <d_print_subexpr>
    6dca:	4985      	ldr	r1, [pc, #532]	; (6fe0 <d_print_comp_inner+0x14e4>)
    6dcc:	4620      	mov	r0, r4
    6dce:	f7fc fce3 	bl	3798 <d_append_string>
    6dd2:	e4fe      	b.n	67d2 <d_print_comp_inner+0xcd6>
    6dd4:	e9d2 5303 	ldrd	r5, r3, [r2, #12]
    6dd8:	2b00      	cmp	r3, #0
    6dda:	f43e aeff 	beq.w	5bdc <d_print_comp_inner+0xe0>
    6dde:	442b      	add	r3, r5
    6de0:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6de4:	3d01      	subs	r5, #1
    6de6:	1e5f      	subs	r7, r3, #1
    6de8:	f04f 0800 	mov.w	r8, #0
    6dec:	e009      	b.n	6e02 <d_print_comp_inner+0x1306>
    6dee:	460b      	mov	r3, r1
    6df0:	3101      	adds	r1, #1
    6df2:	42af      	cmp	r7, r5
    6df4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6df8:	54e6      	strb	r6, [r4, r3]
    6dfa:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6dfe:	f43e aeed 	beq.w	5bdc <d_print_comp_inner+0xe0>
    6e02:	29ff      	cmp	r1, #255	; 0xff
    6e04:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    6e08:	d1f1      	bne.n	6dee <d_print_comp_inner+0x12f2>
    6e0a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6e0e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6e12:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6e16:	4620      	mov	r0, r4
    6e18:	4798      	blx	r3
    6e1a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6e1e:	3301      	adds	r3, #1
    6e20:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6e24:	2101      	movs	r1, #1
    6e26:	2300      	movs	r3, #0
    6e28:	e7e3      	b.n	6df2 <d_print_comp_inner+0x12f6>
    6e2a:	68d2      	ldr	r2, [r2, #12]
    6e2c:	e9d2 5300 	ldrd	r5, r3, [r2]
    6e30:	2b00      	cmp	r3, #0
    6e32:	f43e aed3 	beq.w	5bdc <d_print_comp_inner+0xe0>
    6e36:	442b      	add	r3, r5
    6e38:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    6e3c:	3d01      	subs	r5, #1
    6e3e:	1e5f      	subs	r7, r3, #1
    6e40:	f04f 0800 	mov.w	r8, #0
    6e44:	e009      	b.n	6e5a <d_print_comp_inner+0x135e>
    6e46:	460b      	mov	r3, r1
    6e48:	3101      	adds	r1, #1
    6e4a:	42af      	cmp	r7, r5
    6e4c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6e50:	54e6      	strb	r6, [r4, r3]
    6e52:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6e56:	f43e aec1 	beq.w	5bdc <d_print_comp_inner+0xe0>
    6e5a:	29ff      	cmp	r1, #255	; 0xff
    6e5c:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    6e60:	d1f1      	bne.n	6e46 <d_print_comp_inner+0x134a>
    6e62:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6e66:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6e6a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6e6e:	4620      	mov	r0, r4
    6e70:	4798      	blx	r3
    6e72:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6e76:	3301      	adds	r3, #1
    6e78:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6e7c:	2101      	movs	r1, #1
    6e7e:	2300      	movs	r3, #0
    6e80:	e7e3      	b.n	6e4a <d_print_comp_inner+0x134e>
    6e82:	4958      	ldr	r1, [pc, #352]	; (6fe4 <d_print_comp_inner+0x14e8>)
    6e84:	4620      	mov	r0, r4
    6e86:	f7fc fc87 	bl	3798 <d_append_string>
    6e8a:	693a      	ldr	r2, [r7, #16]
    6e8c:	4956      	ldr	r1, [pc, #344]	; (6fe8 <d_print_comp_inner+0x14ec>)
    6e8e:	3201      	adds	r2, #1
    6e90:	a804      	add	r0, sp, #16
    6e92:	f003 fb77 	bl	a584 <sprintf>
    6e96:	a804      	add	r0, sp, #16
    6e98:	f007 fef2 	bl	ec80 <strlen>
    6e9c:	2800      	cmp	r0, #0
    6e9e:	f000 83fb 	beq.w	7698 <d_print_comp_inner+0x1b9c>
    6ea2:	ad04      	add	r5, sp, #16
    6ea4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6ea8:	eb05 0900 	add.w	r9, r5, r0
    6eac:	f04f 0800 	mov.w	r8, #0
    6eb0:	e009      	b.n	6ec6 <d_print_comp_inner+0x13ca>
    6eb2:	460b      	mov	r3, r1
    6eb4:	3101      	adds	r1, #1
    6eb6:	45a9      	cmp	r9, r5
    6eb8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6ebc:	54e6      	strb	r6, [r4, r3]
    6ebe:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6ec2:	f000 83e9 	beq.w	7698 <d_print_comp_inner+0x1b9c>
    6ec6:	29ff      	cmp	r1, #255	; 0xff
    6ec8:	f815 6b01 	ldrb.w	r6, [r5], #1
    6ecc:	d1f1      	bne.n	6eb2 <d_print_comp_inner+0x13b6>
    6ece:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6ed2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6ed6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6eda:	4620      	mov	r0, r4
    6edc:	4798      	blx	r3
    6ede:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6ee2:	3301      	adds	r3, #1
    6ee4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6ee8:	2101      	movs	r1, #1
    6eea:	2300      	movs	r3, #0
    6eec:	e7e3      	b.n	6eb6 <d_print_comp_inner+0x13ba>
    6eee:	2111      	movs	r1, #17
    6ef0:	6932      	ldr	r2, [r6, #16]
    6ef2:	4620      	mov	r0, r4
    6ef4:	f000 fe7c 	bl	7bf0 <d_print_comp>
    6ef8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6efc:	29ff      	cmp	r1, #255	; 0xff
    6efe:	f000 8299 	beq.w	7434 <d_print_comp_inner+0x1938>
    6f02:	1c4a      	adds	r2, r1, #1
    6f04:	235d      	movs	r3, #93	; 0x5d
    6f06:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    6f0a:	5463      	strb	r3, [r4, r1]
    6f0c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    6f10:	f7fe be64 	b.w	5bdc <d_print_comp_inner+0xe0>
    6f14:	2801      	cmp	r0, #1
    6f16:	f240 8196 	bls.w	7246 <d_print_comp_inner+0x174a>
    6f1a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    6f1e:	f7ff bb30 	b.w	6582 <d_print_comp_inner+0xa86>
    6f22:	68f2      	ldr	r2, [r6, #12]
    6f24:	4930      	ldr	r1, [pc, #192]	; (6fe8 <d_print_comp_inner+0x14ec>)
    6f26:	3201      	adds	r2, #1
    6f28:	a804      	add	r0, sp, #16
    6f2a:	f003 fb2b 	bl	a584 <sprintf>
    6f2e:	a804      	add	r0, sp, #16
    6f30:	f007 fea6 	bl	ec80 <strlen>
    6f34:	b318      	cbz	r0, 6f7e <d_print_comp_inner+0x1482>
    6f36:	ad04      	add	r5, sp, #16
    6f38:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6f3c:	182f      	adds	r7, r5, r0
    6f3e:	f04f 0800 	mov.w	r8, #0
    6f42:	e008      	b.n	6f56 <d_print_comp_inner+0x145a>
    6f44:	460b      	mov	r3, r1
    6f46:	3101      	adds	r1, #1
    6f48:	42af      	cmp	r7, r5
    6f4a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6f4e:	54e6      	strb	r6, [r4, r3]
    6f50:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6f54:	d015      	beq.n	6f82 <d_print_comp_inner+0x1486>
    6f56:	29ff      	cmp	r1, #255	; 0xff
    6f58:	f815 6b01 	ldrb.w	r6, [r5], #1
    6f5c:	d1f2      	bne.n	6f44 <d_print_comp_inner+0x1448>
    6f5e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    6f62:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    6f66:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    6f6a:	4620      	mov	r0, r4
    6f6c:	4798      	blx	r3
    6f6e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6f72:	3301      	adds	r3, #1
    6f74:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6f78:	2101      	movs	r1, #1
    6f7a:	2300      	movs	r3, #0
    6f7c:	e7e4      	b.n	6f48 <d_print_comp_inner+0x144c>
    6f7e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6f82:	29ff      	cmp	r1, #255	; 0xff
    6f84:	f47f a91a 	bne.w	61bc <d_print_comp_inner+0x6c0>
    6f88:	2500      	movs	r5, #0
    6f8a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    6f8e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    6f92:	4620      	mov	r0, r4
    6f94:	4798      	blx	r3
    6f96:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    6f9a:	2201      	movs	r2, #1
    6f9c:	4413      	add	r3, r2
    6f9e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    6fa2:	4629      	mov	r1, r5
    6fa4:	f7ff b90b 	b.w	61be <d_print_comp_inner+0x6c2>
    6fa8:	687d      	ldr	r5, [r7, #4]
    6faa:	782b      	ldrb	r3, [r5, #0]
    6fac:	3b61      	subs	r3, #97	; 0x61
    6fae:	2b19      	cmp	r3, #25
    6fb0:	f240 832d 	bls.w	760e <d_print_comp_inner+0x1b12>
    6fb4:	f108 37ff 	add.w	r7, r8, #4294967295	; 0xffffffff
    6fb8:	5deb      	ldrb	r3, [r5, r7]
    6fba:	2b20      	cmp	r3, #32
    6fbc:	bf18      	it	ne
    6fbe:	4647      	movne	r7, r8
    6fc0:	2f00      	cmp	r7, #0
    6fc2:	f43e ae0b 	beq.w	5bdc <d_print_comp_inner+0xe0>
    6fc6:	3d01      	subs	r5, #1
    6fc8:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    6fcc:	442f      	add	r7, r5
    6fce:	f04f 0800 	mov.w	r8, #0
    6fd2:	e015      	b.n	7000 <d_print_comp_inner+0x1504>
    6fd4:	20001d48 	.word	0x20001d48
    6fd8:	20001d3c 	.word	0x20001d3c
    6fdc:	20001ec4 	.word	0x20001ec4
    6fe0:	20001ec8 	.word	0x20001ec8
    6fe4:	20001d00 	.word	0x20001d00
    6fe8:	20001cb0 	.word	0x20001cb0
    6fec:	460b      	mov	r3, r1
    6fee:	3101      	adds	r1, #1
    6ff0:	42af      	cmp	r7, r5
    6ff2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    6ff6:	54e6      	strb	r6, [r4, r3]
    6ff8:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    6ffc:	f43e adee 	beq.w	5bdc <d_print_comp_inner+0xe0>
    7000:	29ff      	cmp	r1, #255	; 0xff
    7002:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    7006:	d1f1      	bne.n	6fec <d_print_comp_inner+0x14f0>
    7008:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    700c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7010:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7014:	4620      	mov	r0, r4
    7016:	4798      	blx	r3
    7018:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    701c:	3301      	adds	r3, #1
    701e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7022:	2101      	movs	r1, #1
    7024:	2300      	movs	r3, #0
    7026:	e7e3      	b.n	6ff0 <d_print_comp_inner+0x14f4>
    7028:	4fcc      	ldr	r7, [pc, #816]	; (735c <d_print_comp_inner+0x1860>)
    702a:	6932      	ldr	r2, [r6, #16]
    702c:	2111      	movs	r1, #17
    702e:	4620      	mov	r0, r4
    7030:	f000 fdde 	bl	7bf0 <d_print_comp>
    7034:	f107 0904 	add.w	r9, r7, #4
    7038:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    703c:	2520      	movs	r5, #32
    703e:	f04f 0800 	mov.w	r8, #0
    7042:	e00b      	b.n	705c <d_print_comp_inner+0x1560>
    7044:	460b      	mov	r3, r1
    7046:	3101      	adds	r1, #1
    7048:	45b9      	cmp	r9, r7
    704a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    704e:	54e5      	strb	r5, [r4, r3]
    7050:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7054:	f43e ade5 	beq.w	5c22 <d_print_comp_inner+0x126>
    7058:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    705c:	29ff      	cmp	r1, #255	; 0xff
    705e:	d1f1      	bne.n	7044 <d_print_comp_inner+0x1548>
    7060:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7064:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7068:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    706c:	4620      	mov	r0, r4
    706e:	4798      	blx	r3
    7070:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7074:	3301      	adds	r3, #1
    7076:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    707a:	2101      	movs	r1, #1
    707c:	2300      	movs	r3, #0
    707e:	e7e3      	b.n	7048 <d_print_comp_inner+0x154c>
    7080:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
    7084:	b133      	cbz	r3, 7094 <d_print_comp_inner+0x1598>
    7086:	f8d4 1110 	ldr.w	r1, [r4, #272]	; 0x110
    708a:	9104      	str	r1, [sp, #16]
    708c:	aa04      	add	r2, sp, #16
    708e:	f8c4 2110 	str.w	r2, [r4, #272]	; 0x110
    7092:	9305      	str	r3, [sp, #20]
    7094:	68f2      	ldr	r2, [r6, #12]
    7096:	7813      	ldrb	r3, [r2, #0]
    7098:	2b04      	cmp	r3, #4
    709a:	f000 8207 	beq.w	74ac <d_print_comp_inner+0x19b0>
    709e:	2111      	movs	r1, #17
    70a0:	4620      	mov	r0, r4
    70a2:	f000 fda5 	bl	7bf0 <d_print_comp>
    70a6:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
    70aa:	2b00      	cmp	r3, #0
    70ac:	f43e ad96 	beq.w	5bdc <d_print_comp_inner+0xe0>
    70b0:	9b04      	ldr	r3, [sp, #16]
    70b2:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    70b6:	f7fe bd91 	b.w	5bdc <d_print_comp_inner+0xe0>
    70ba:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
    70be:	68f2      	ldr	r2, [r6, #12]
    70c0:	4fa7      	ldr	r7, [pc, #668]	; (7360 <d_print_comp_inner+0x1864>)
    70c2:	3301      	adds	r3, #1
    70c4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
    70c8:	2111      	movs	r1, #17
    70ca:	4620      	mov	r0, r4
    70cc:	f000 fd90 	bl	7bf0 <d_print_comp>
    70d0:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
    70d4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    70d8:	3b01      	subs	r3, #1
    70da:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
    70de:	f107 0901 	add.w	r9, r7, #1
    70e2:	2529      	movs	r5, #41	; 0x29
    70e4:	f04f 0800 	mov.w	r8, #0
    70e8:	e00a      	b.n	7100 <d_print_comp_inner+0x1604>
    70ea:	460b      	mov	r3, r1
    70ec:	3101      	adds	r1, #1
    70ee:	454f      	cmp	r7, r9
    70f0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    70f4:	54e5      	strb	r5, [r4, r3]
    70f6:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    70fa:	d013      	beq.n	7124 <d_print_comp_inner+0x1628>
    70fc:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    7100:	29ff      	cmp	r1, #255	; 0xff
    7102:	d1f2      	bne.n	70ea <d_print_comp_inner+0x15ee>
    7104:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7108:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    710c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7110:	4620      	mov	r0, r4
    7112:	4798      	blx	r3
    7114:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7118:	3301      	adds	r3, #1
    711a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    711e:	2101      	movs	r1, #1
    7120:	2300      	movs	r3, #0
    7122:	e7e4      	b.n	70ee <d_print_comp_inner+0x15f2>
    7124:	6932      	ldr	r2, [r6, #16]
    7126:	498f      	ldr	r1, [pc, #572]	; (7364 <d_print_comp_inner+0x1868>)
    7128:	3201      	adds	r2, #1
    712a:	a804      	add	r0, sp, #16
    712c:	f003 fa2a 	bl	a584 <sprintf>
    7130:	a804      	add	r0, sp, #16
    7132:	f007 fda5 	bl	ec80 <strlen>
    7136:	2800      	cmp	r0, #0
    7138:	f43f af21 	beq.w	6f7e <d_print_comp_inner+0x1482>
    713c:	ad04      	add	r5, sp, #16
    713e:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7142:	182f      	adds	r7, r5, r0
    7144:	f04f 0800 	mov.w	r8, #0
    7148:	e009      	b.n	715e <d_print_comp_inner+0x1662>
    714a:	460b      	mov	r3, r1
    714c:	3101      	adds	r1, #1
    714e:	42bd      	cmp	r5, r7
    7150:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7154:	54e6      	strb	r6, [r4, r3]
    7156:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    715a:	f43f af12 	beq.w	6f82 <d_print_comp_inner+0x1486>
    715e:	29ff      	cmp	r1, #255	; 0xff
    7160:	f815 6b01 	ldrb.w	r6, [r5], #1
    7164:	d1f1      	bne.n	714a <d_print_comp_inner+0x164e>
    7166:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    716a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    716e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7172:	4620      	mov	r0, r4
    7174:	4798      	blx	r3
    7176:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    717a:	3301      	adds	r3, #1
    717c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7180:	2101      	movs	r1, #1
    7182:	2300      	movs	r3, #0
    7184:	e7e3      	b.n	714e <d_print_comp_inner+0x1652>
    7186:	4f78      	ldr	r7, [pc, #480]	; (7368 <d_print_comp_inner+0x186c>)
    7188:	68f2      	ldr	r2, [r6, #12]
    718a:	2111      	movs	r1, #17
    718c:	4620      	mov	r0, r4
    718e:	f000 fd2f 	bl	7bf0 <d_print_comp>
    7192:	f107 0903 	add.w	r9, r7, #3
    7196:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    719a:	252d      	movs	r5, #45	; 0x2d
    719c:	f04f 0800 	mov.w	r8, #0
    71a0:	e00b      	b.n	71ba <d_print_comp_inner+0x16be>
    71a2:	460b      	mov	r3, r1
    71a4:	3101      	adds	r1, #1
    71a6:	45b9      	cmp	r9, r7
    71a8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    71ac:	54e5      	strb	r5, [r4, r3]
    71ae:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    71b2:	f43e ad4a 	beq.w	5c4a <d_print_comp_inner+0x14e>
    71b6:	f817 5f01 	ldrb.w	r5, [r7, #1]!
    71ba:	29ff      	cmp	r1, #255	; 0xff
    71bc:	d1f1      	bne.n	71a2 <d_print_comp_inner+0x16a6>
    71be:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    71c2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    71c6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    71ca:	4620      	mov	r0, r4
    71cc:	4798      	blx	r3
    71ce:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    71d2:	3301      	adds	r3, #1
    71d4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    71d8:	2101      	movs	r1, #1
    71da:	2300      	movs	r3, #0
    71dc:	e7e3      	b.n	71a6 <d_print_comp_inner+0x16aa>
    71de:	68f2      	ldr	r2, [r6, #12]
    71e0:	f7ff b902 	b.w	63e8 <d_print_comp_inner+0x8ec>
    71e4:	4632      	mov	r2, r6
    71e6:	2111      	movs	r1, #17
    71e8:	4620      	mov	r0, r4
    71ea:	f000 fd2f 	bl	7c4c <d_print_mod>
    71ee:	f7fe bd10 	b.w	5c12 <d_print_comp_inner+0x116>
    71f2:	6932      	ldr	r2, [r6, #16]
    71f4:	f8d4 6128 	ldr.w	r6, [r4, #296]	; 0x128
    71f8:	460d      	mov	r5, r1
    71fa:	4620      	mov	r0, r4
    71fc:	2111      	movs	r1, #17
    71fe:	f000 fcf7 	bl	7bf0 <d_print_comp>
    7202:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7206:	42b3      	cmp	r3, r6
    7208:	f47e ace8 	bne.w	5bdc <d_print_comp_inner+0xe0>
    720c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    7210:	429d      	cmp	r5, r3
    7212:	f47e ace3 	bne.w	5bdc <d_print_comp_inner+0xe0>
    7216:	3d02      	subs	r5, #2
    7218:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
    721c:	f7fe bcde 	b.w	5bdc <d_print_comp_inner+0xe0>
    7220:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7224:	29ff      	cmp	r1, #255	; 0xff
    7226:	f000 835f 	beq.w	78e8 <d_print_comp_inner+0x1dec>
    722a:	1c4b      	adds	r3, r1, #1
    722c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    7230:	f858 2c0c 	ldr.w	r2, [r8, #-12]
    7234:	5467      	strb	r7, [r4, r1]
    7236:	4620      	mov	r0, r4
    7238:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
    723c:	2111      	movs	r1, #17
    723e:	f000 fd05 	bl	7c4c <d_print_mod>
    7242:	f7ff b9b2 	b.w	65aa <d_print_comp_inner+0xaae>
    7246:	68ff      	ldr	r7, [r7, #12]
    7248:	4652      	mov	r2, sl
    724a:	2f00      	cmp	r7, #0
    724c:	f000 84ac 	beq.w	7ba8 <d_print_comp_inner+0x20ac>
    7250:	2d04      	cmp	r5, #4
    7252:	f103 0310 	add.w	r3, r3, #16
    7256:	f000 81f1 	beq.w	763c <d_print_comp_inner+0x1b40>
    725a:	4629      	mov	r1, r5
    725c:	f7ff b95c 	b.w	6518 <d_print_comp_inner+0xa1c>
    7260:	f1b8 0f00 	cmp.w	r8, #0
    7264:	f43e acba 	beq.w	5bdc <d_print_comp_inner+0xe0>
    7268:	46c1      	mov	r9, r8
    726a:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
    726e:	f7fe be7c 	b.w	5f6a <d_print_comp_inner+0x46e>
    7272:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
    7276:	68c2      	ldr	r2, [r0, #12]
    7278:	4606      	mov	r6, r0
    727a:	f7fe bd2a 	b.w	5cd2 <d_print_comp_inner+0x1d6>
    727e:	2d07      	cmp	r5, #7
    7280:	f47e ad83 	bne.w	5d8a <d_print_comp_inner+0x28e>
    7284:	6933      	ldr	r3, [r6, #16]
    7286:	7819      	ldrb	r1, [r3, #0]
    7288:	2900      	cmp	r1, #0
    728a:	f47e ad7e 	bne.w	5d8a <d_print_comp_inner+0x28e>
    728e:	6919      	ldr	r1, [r3, #16]
    7290:	2901      	cmp	r1, #1
    7292:	f47e ad7a 	bne.w	5d8a <d_print_comp_inner+0x28e>
    7296:	2f3d      	cmp	r7, #61	; 0x3d
    7298:	f47e ad77 	bne.w	5d8a <d_print_comp_inner+0x28e>
    729c:	68db      	ldr	r3, [r3, #12]
    729e:	781b      	ldrb	r3, [r3, #0]
    72a0:	2b30      	cmp	r3, #48	; 0x30
    72a2:	f000 849d 	beq.w	7be0 <d_print_comp_inner+0x20e4>
    72a6:	2b31      	cmp	r3, #49	; 0x31
    72a8:	f47e ad6f 	bne.w	5d8a <d_print_comp_inner+0x28e>
    72ac:	492f      	ldr	r1, [pc, #188]	; (736c <d_print_comp_inner+0x1870>)
    72ae:	f7ff b884 	b.w	63ba <d_print_comp_inner+0x8be>
    72b2:	4e2f      	ldr	r6, [pc, #188]	; (7370 <d_print_comp_inner+0x1874>)
    72b4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    72b8:	1d77      	adds	r7, r6, #5
    72ba:	255f      	movs	r5, #95	; 0x5f
    72bc:	e00b      	b.n	72d6 <d_print_comp_inner+0x17da>
    72be:	460b      	mov	r3, r1
    72c0:	3101      	adds	r1, #1
    72c2:	42b7      	cmp	r7, r6
    72c4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    72c8:	54e5      	strb	r5, [r4, r3]
    72ca:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    72ce:	f43e ac85 	beq.w	5bdc <d_print_comp_inner+0xe0>
    72d2:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    72d6:	29ff      	cmp	r1, #255	; 0xff
    72d8:	d1f1      	bne.n	72be <d_print_comp_inner+0x17c2>
    72da:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    72de:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    72e2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    72e6:	4620      	mov	r0, r4
    72e8:	4798      	blx	r3
    72ea:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    72ee:	3301      	adds	r3, #1
    72f0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    72f4:	2101      	movs	r1, #1
    72f6:	2300      	movs	r3, #0
    72f8:	e7e3      	b.n	72c2 <d_print_comp_inner+0x17c6>
    72fa:	491e      	ldr	r1, [pc, #120]	; (7374 <d_print_comp_inner+0x1878>)
    72fc:	f7fc fa4c 	bl	3798 <d_append_string>
    7300:	4918      	ldr	r1, [pc, #96]	; (7364 <d_print_comp_inner+0x1868>)
    7302:	462a      	mov	r2, r5
    7304:	a804      	add	r0, sp, #16
    7306:	f003 f93d 	bl	a584 <sprintf>
    730a:	a804      	add	r0, sp, #16
    730c:	f007 fcb8 	bl	ec80 <strlen>
    7310:	b390      	cbz	r0, 7378 <d_print_comp_inner+0x187c>
    7312:	ad04      	add	r5, sp, #16
    7314:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7318:	182f      	adds	r7, r5, r0
    731a:	f04f 0800 	mov.w	r8, #0
    731e:	e008      	b.n	7332 <d_print_comp_inner+0x1836>
    7320:	460b      	mov	r3, r1
    7322:	3101      	adds	r1, #1
    7324:	42bd      	cmp	r5, r7
    7326:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    732a:	54e6      	strb	r6, [r4, r3]
    732c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7330:	d024      	beq.n	737c <d_print_comp_inner+0x1880>
    7332:	29ff      	cmp	r1, #255	; 0xff
    7334:	f815 6b01 	ldrb.w	r6, [r5], #1
    7338:	d1f2      	bne.n	7320 <d_print_comp_inner+0x1824>
    733a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    733e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7342:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7346:	4620      	mov	r0, r4
    7348:	4798      	blx	r3
    734a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    734e:	3301      	adds	r3, #1
    7350:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7354:	2101      	movs	r1, #1
    7356:	2300      	movs	r3, #0
    7358:	e7e4      	b.n	7324 <d_print_comp_inner+0x1828>
    735a:	bf00      	nop
    735c:	20001e34 	.word	0x20001e34
    7360:	20001f6c 	.word	0x20001f6c
    7364:	20001cb0 	.word	0x20001cb0
    7368:	20001d70 	.word	0x20001d70
    736c:	20001ee8 	.word	0x20001ee8
    7370:	20001e94 	.word	0x20001e94
    7374:	20001f18 	.word	0x20001f18
    7378:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    737c:	29ff      	cmp	r1, #255	; 0xff
    737e:	f000 82f3 	beq.w	7968 <d_print_comp_inner+0x1e6c>
    7382:	237d      	movs	r3, #125	; 0x7d
    7384:	1c4a      	adds	r2, r1, #1
    7386:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    738a:	5463      	strb	r3, [r4, r1]
    738c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    7390:	f7fe bc24 	b.w	5bdc <d_print_comp_inner+0xe0>
    7394:	4610      	mov	r0, r2
    7396:	2500      	movs	r5, #0
    7398:	f7fe bc90 	b.w	5cbc <d_print_comp_inner+0x1c0>
    739c:	68f2      	ldr	r2, [r6, #12]
    739e:	49c2      	ldr	r1, [pc, #776]	; (76a8 <d_print_comp_inner+0x1bac>)
    73a0:	3201      	adds	r2, #1
    73a2:	a804      	add	r0, sp, #16
    73a4:	f003 f8ee 	bl	a584 <sprintf>
    73a8:	a804      	add	r0, sp, #16
    73aa:	f007 fc69 	bl	ec80 <strlen>
    73ae:	2800      	cmp	r0, #0
    73b0:	f43e ac14 	beq.w	5bdc <d_print_comp_inner+0xe0>
    73b4:	ad04      	add	r5, sp, #16
    73b6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    73ba:	182f      	adds	r7, r5, r0
    73bc:	f04f 0800 	mov.w	r8, #0
    73c0:	e009      	b.n	73d6 <d_print_comp_inner+0x18da>
    73c2:	460b      	mov	r3, r1
    73c4:	3101      	adds	r1, #1
    73c6:	42bd      	cmp	r5, r7
    73c8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    73cc:	54e6      	strb	r6, [r4, r3]
    73ce:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    73d2:	f43e ac03 	beq.w	5bdc <d_print_comp_inner+0xe0>
    73d6:	29ff      	cmp	r1, #255	; 0xff
    73d8:	f815 6b01 	ldrb.w	r6, [r5], #1
    73dc:	d1f1      	bne.n	73c2 <d_print_comp_inner+0x18c6>
    73de:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    73e2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    73e6:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    73ea:	4620      	mov	r0, r4
    73ec:	4798      	blx	r3
    73ee:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    73f2:	3301      	adds	r3, #1
    73f4:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    73f8:	2101      	movs	r1, #1
    73fa:	2300      	movs	r3, #0
    73fc:	e7e3      	b.n	73c6 <d_print_comp_inner+0x18ca>
    73fe:	4611      	mov	r1, r2
    7400:	f7fc f964 	bl	36cc <d_lookup_template_argument>
    7404:	4602      	mov	r2, r0
    7406:	2800      	cmp	r0, #0
    7408:	f43e abe5 	beq.w	5bd6 <d_print_comp_inner+0xda>
    740c:	7803      	ldrb	r3, [r0, #0]
    740e:	2b2f      	cmp	r3, #47	; 0x2f
    7410:	f43e abd6 	beq.w	5bc0 <d_print_comp_inner+0xc4>
    7414:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
    7418:	682b      	ldr	r3, [r5, #0]
    741a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    741e:	2111      	movs	r1, #17
    7420:	4620      	mov	r0, r4
    7422:	f000 fbe5 	bl	7bf0 <d_print_comp>
    7426:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
    742a:	f7fe bbd7 	b.w	5bdc <d_print_comp_inner+0xe0>
    742e:	2500      	movs	r5, #0
    7430:	f7fe bcab 	b.w	5d8a <d_print_comp_inner+0x28e>
    7434:	2500      	movs	r5, #0
    7436:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    743a:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    743e:	4620      	mov	r0, r4
    7440:	4798      	blx	r3
    7442:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7446:	2201      	movs	r2, #1
    7448:	4413      	add	r3, r2
    744a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    744e:	4629      	mov	r1, r5
    7450:	e558      	b.n	6f04 <d_print_comp_inner+0x1408>
    7452:	2500      	movs	r5, #0
    7454:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7458:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    745c:	4620      	mov	r0, r4
    745e:	4798      	blx	r3
    7460:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7464:	2201      	movs	r2, #1
    7466:	4413      	add	r3, r2
    7468:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    746c:	4629      	mov	r1, r5
    746e:	f7fe bfc5 	b.w	63fc <d_print_comp_inner+0x900>
    7472:	2b01      	cmp	r3, #1
    7474:	f63f a885 	bhi.w	6582 <d_print_comp_inner+0xa86>
    7478:	2d04      	cmp	r5, #4
    747a:	f43e abac 	beq.w	5bd6 <d_print_comp_inner+0xda>
    747e:	468e      	mov	lr, r1
    7480:	f101 0b10 	add.w	fp, r1, #16
    7484:	c90f      	ldmia	r1, {r0, r1, r2, r3}
    7486:	e88b 000f 	stmia.w	fp, {r0, r1, r2, r3}
    748a:	e9ce 7a01 	strd	r7, sl, [lr, #4]
    748e:	68ff      	ldr	r7, [r7, #12]
    7490:	f8ce e010 	str.w	lr, [lr, #16]
    7494:	3501      	adds	r5, #1
    7496:	f8ce c00c 	str.w	ip, [lr, #12]
    749a:	4659      	mov	r1, fp
    749c:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
    74a0:	2f00      	cmp	r7, #0
    74a2:	f43e ab98 	beq.w	5bd6 <d_print_comp_inner+0xda>
    74a6:	783a      	ldrb	r2, [r7, #0]
    74a8:	f7ff b858 	b.w	655c <d_print_comp_inner+0xa60>
    74ac:	68d2      	ldr	r2, [r2, #12]
    74ae:	2111      	movs	r1, #17
    74b0:	4620      	mov	r0, r4
    74b2:	f000 fb9d 	bl	7bf0 <d_print_comp>
    74b6:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
    74ba:	b113      	cbz	r3, 74c2 <d_print_comp_inner+0x19c6>
    74bc:	9b04      	ldr	r3, [sp, #16]
    74be:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    74c2:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    74c6:	2b3c      	cmp	r3, #60	; 0x3c
    74c8:	f000 82be 	beq.w	7a48 <d_print_comp_inner+0x1f4c>
    74cc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    74d0:	29ff      	cmp	r1, #255	; 0xff
    74d2:	f000 82a9 	beq.w	7a28 <d_print_comp_inner+0x1f2c>
    74d6:	1c4a      	adds	r2, r1, #1
    74d8:	233c      	movs	r3, #60	; 0x3c
    74da:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    74de:	5463      	strb	r3, [r4, r1]
    74e0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    74e4:	68f3      	ldr	r3, [r6, #12]
    74e6:	2111      	movs	r1, #17
    74e8:	691a      	ldr	r2, [r3, #16]
    74ea:	4620      	mov	r0, r4
    74ec:	f000 fb80 	bl	7bf0 <d_print_comp>
    74f0:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    74f4:	2b3e      	cmp	r3, #62	; 0x3e
    74f6:	f000 8292 	beq.w	7a1e <d_print_comp_inner+0x1f22>
    74fa:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    74fe:	29ff      	cmp	r1, #255	; 0xff
    7500:	f000 827f 	beq.w	7a02 <d_print_comp_inner+0x1f06>
    7504:	233e      	movs	r3, #62	; 0x3e
    7506:	1c4a      	adds	r2, r1, #1
    7508:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    750c:	5463      	strb	r3, [r4, r1]
    750e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    7512:	f7fe bb63 	b.w	5bdc <d_print_comp_inner+0xe0>
    7516:	68fb      	ldr	r3, [r7, #12]
    7518:	681e      	ldr	r6, [r3, #0]
    751a:	7833      	ldrb	r3, [r6, #0]
    751c:	2b61      	cmp	r3, #97	; 0x61
    751e:	f040 8092 	bne.w	7646 <d_print_comp_inner+0x1b4a>
    7522:	7872      	ldrb	r2, [r6, #1]
    7524:	2a64      	cmp	r2, #100	; 0x64
    7526:	f040 808e 	bne.w	7646 <d_print_comp_inner+0x1b4a>
    752a:	78b2      	ldrb	r2, [r6, #2]
    752c:	2a00      	cmp	r2, #0
    752e:	f040 808a 	bne.w	7646 <d_print_comp_inner+0x1b4a>
    7532:	782a      	ldrb	r2, [r5, #0]
    7534:	2a03      	cmp	r2, #3
    7536:	f000 828c 	beq.w	7a52 <d_print_comp_inner+0x1f56>
    753a:	2a39      	cmp	r2, #57	; 0x39
    753c:	f000 8294 	beq.w	7a68 <d_print_comp_inner+0x1f6c>
    7540:	2b73      	cmp	r3, #115	; 0x73
    7542:	d111      	bne.n	7568 <d_print_comp_inner+0x1a6c>
    7544:	7872      	ldrb	r2, [r6, #1]
    7546:	2a5a      	cmp	r2, #90	; 0x5a
    7548:	d135      	bne.n	75b6 <d_print_comp_inner+0x1aba>
    754a:	78b2      	ldrb	r2, [r6, #2]
    754c:	bb9a      	cbnz	r2, 75b6 <d_print_comp_inner+0x1aba>
    754e:	4629      	mov	r1, r5
    7550:	4620      	mov	r0, r4
    7552:	f7fc f8d7 	bl	3704 <d_find_pack>
    7556:	f7fc f803 	bl	3560 <d_pack_length>
    755a:	4601      	mov	r1, r0
    755c:	4620      	mov	r0, r4
    755e:	b015      	add	sp, #84	; 0x54
    7560:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7564:	f7fc b97c 	b.w	3860 <d_append_num>
    7568:	463a      	mov	r2, r7
    756a:	2111      	movs	r1, #17
    756c:	4620      	mov	r0, r4
    756e:	f001 f97d 	bl	886c <d_print_expr_op>
    7572:	7833      	ldrb	r3, [r6, #0]
    7574:	2b67      	cmp	r3, #103	; 0x67
    7576:	d107      	bne.n	7588 <d_print_comp_inner+0x1a8c>
    7578:	7872      	ldrb	r2, [r6, #1]
    757a:	2a73      	cmp	r2, #115	; 0x73
    757c:	d104      	bne.n	7588 <d_print_comp_inner+0x1a8c>
    757e:	78b2      	ldrb	r2, [r6, #2]
    7580:	b912      	cbnz	r2, 7588 <d_print_comp_inner+0x1a8c>
    7582:	462a      	mov	r2, r5
    7584:	f7fe bb4e 	b.w	5c24 <d_print_comp_inner+0x128>
    7588:	2b73      	cmp	r3, #115	; 0x73
    758a:	f47f a922 	bne.w	67d2 <d_print_comp_inner+0xcd6>
    758e:	7873      	ldrb	r3, [r6, #1]
    7590:	2b74      	cmp	r3, #116	; 0x74
    7592:	f47f a91e 	bne.w	67d2 <d_print_comp_inner+0xcd6>
    7596:	78b3      	ldrb	r3, [r6, #2]
    7598:	2b00      	cmp	r3, #0
    759a:	f47f a91a 	bne.w	67d2 <d_print_comp_inner+0xcd6>
    759e:	2128      	movs	r1, #40	; 0x28
    75a0:	4620      	mov	r0, r4
    75a2:	f7fc f871 	bl	3688 <d_append_char>
    75a6:	2111      	movs	r1, #17
    75a8:	462a      	mov	r2, r5
    75aa:	4620      	mov	r0, r4
    75ac:	f000 fb20 	bl	7bf0 <d_print_comp>
    75b0:	2129      	movs	r1, #41	; 0x29
    75b2:	f7fe bc17 	b.w	5de4 <d_print_comp_inner+0x2e8>
    75b6:	2b73      	cmp	r3, #115	; 0x73
    75b8:	d1d6      	bne.n	7568 <d_print_comp_inner+0x1a6c>
    75ba:	7873      	ldrb	r3, [r6, #1]
    75bc:	2b50      	cmp	r3, #80	; 0x50
    75be:	d1d3      	bne.n	7568 <d_print_comp_inner+0x1a6c>
    75c0:	78b3      	ldrb	r3, [r6, #2]
    75c2:	2b00      	cmp	r3, #0
    75c4:	d1d0      	bne.n	7568 <d_print_comp_inner+0x1a6c>
    75c6:	461e      	mov	r6, r3
    75c8:	e004      	b.n	75d4 <d_print_comp_inner+0x1ad8>
    75ca:	3601      	adds	r6, #1
    75cc:	692d      	ldr	r5, [r5, #16]
    75ce:	2d00      	cmp	r5, #0
    75d0:	f000 819a 	beq.w	7908 <d_print_comp_inner+0x1e0c>
    75d4:	782b      	ldrb	r3, [r5, #0]
    75d6:	2b2f      	cmp	r3, #47	; 0x2f
    75d8:	f040 8196 	bne.w	7908 <d_print_comp_inner+0x1e0c>
    75dc:	68eb      	ldr	r3, [r5, #12]
    75de:	2b00      	cmp	r3, #0
    75e0:	f000 8192 	beq.w	7908 <d_print_comp_inner+0x1e0c>
    75e4:	781a      	ldrb	r2, [r3, #0]
    75e6:	2a4c      	cmp	r2, #76	; 0x4c
    75e8:	d1ef      	bne.n	75ca <d_print_comp_inner+0x1ace>
    75ea:	68d9      	ldr	r1, [r3, #12]
    75ec:	4620      	mov	r0, r4
    75ee:	f7fc f889 	bl	3704 <d_find_pack>
    75f2:	4603      	mov	r3, r0
    75f4:	b148      	cbz	r0, 760a <d_print_comp_inner+0x1b0e>
    75f6:	2300      	movs	r3, #0
    75f8:	e004      	b.n	7604 <d_print_comp_inner+0x1b08>
    75fa:	68c2      	ldr	r2, [r0, #12]
    75fc:	b12a      	cbz	r2, 760a <d_print_comp_inner+0x1b0e>
    75fe:	6900      	ldr	r0, [r0, #16]
    7600:	3301      	adds	r3, #1
    7602:	b110      	cbz	r0, 760a <d_print_comp_inner+0x1b0e>
    7604:	7802      	ldrb	r2, [r0, #0]
    7606:	2a2f      	cmp	r2, #47	; 0x2f
    7608:	d0f7      	beq.n	75fa <d_print_comp_inner+0x1afe>
    760a:	441e      	add	r6, r3
    760c:	e7de      	b.n	75cc <d_print_comp_inner+0x1ad0>
    760e:	29ff      	cmp	r1, #255	; 0xff
    7610:	f000 81d1 	beq.w	79b6 <d_print_comp_inner+0x1eba>
    7614:	1c4b      	adds	r3, r1, #1
    7616:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    761a:	2320      	movs	r3, #32
    761c:	5463      	strb	r3, [r4, r1]
    761e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    7622:	e4c7      	b.n	6fb4 <d_print_comp_inner+0x14b8>
    7624:	4632      	mov	r2, r6
    7626:	2111      	movs	r1, #17
    7628:	4620      	mov	r0, r4
    762a:	f000 fb0f 	bl	7c4c <d_print_mod>
    762e:	f7fe bb36 	b.w	5c9e <d_print_comp_inner+0x1a2>
    7632:	491e      	ldr	r1, [pc, #120]	; (76ac <d_print_comp_inner+0x1bb0>)
    7634:	f7fc f8b0 	bl	3798 <d_append_string>
    7638:	f7ff b8e0 	b.w	67fc <d_print_comp_inner+0xd00>
    763c:	2301      	movs	r3, #1
    763e:	e9c4 a345 	strd	sl, r3, [r4, #276]	; 0x114
    7642:	f7fe bacb 	b.w	5bdc <d_print_comp_inner+0xe0>
    7646:	782a      	ldrb	r2, [r5, #0]
    7648:	e777      	b.n	753a <d_print_comp_inner+0x1a3e>
    764a:	68f2      	ldr	r2, [r6, #12]
    764c:	460d      	mov	r5, r1
    764e:	f7fe bb40 	b.w	5cd2 <d_print_comp_inner+0x1d6>
    7652:	2700      	movs	r7, #0
    7654:	5567      	strb	r7, [r4, r5]
    7656:	4629      	mov	r1, r5
    7658:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    765c:	4620      	mov	r0, r4
    765e:	4798      	blx	r3
    7660:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7664:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
    7668:	3301      	adds	r3, #1
    766a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    766e:	463d      	mov	r5, r7
    7670:	f7fe bb48 	b.w	5d04 <d_print_comp_inner+0x208>
    7674:	2600      	movs	r6, #0
    7676:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    767a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    767e:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    7682:	4620      	mov	r0, r4
    7684:	4798      	blx	r3
    7686:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    768a:	2201      	movs	r2, #1
    768c:	4413      	add	r3, r2
    768e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7692:	4631      	mov	r1, r6
    7694:	f7fe bd82 	b.w	619c <d_print_comp_inner+0x6a0>
    7698:	4905      	ldr	r1, [pc, #20]	; (76b0 <d_print_comp_inner+0x1bb4>)
    769a:	4620      	mov	r0, r4
    769c:	f7fc f87c 	bl	3798 <d_append_string>
    76a0:	68ff      	ldr	r7, [r7, #12]
    76a2:	463a      	mov	r2, r7
    76a4:	f7fe babe 	b.w	5c24 <d_print_comp_inner+0x128>
    76a8:	20001cb0 	.word	0x20001cb0
    76ac:	20001e84 	.word	0x20001e84
    76b0:	20001d10 	.word	0x20001d10
    76b4:	2500      	movs	r5, #0
    76b6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    76ba:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    76be:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    76c2:	4620      	mov	r0, r4
    76c4:	4798      	blx	r3
    76c6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    76ca:	2201      	movs	r2, #1
    76cc:	4413      	add	r3, r2
    76ce:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    76d2:	4629      	mov	r1, r5
    76d4:	f7fe be81 	b.w	63da <d_print_comp_inner+0x8de>
    76d8:	2600      	movs	r6, #0
    76da:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    76de:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    76e2:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    76e6:	4798      	blx	r3
    76e8:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
    76ec:	2301      	movs	r3, #1
    76ee:	441a      	add	r2, r3
    76f0:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
    76f4:	4631      	mov	r1, r6
    76f6:	f7fe bed2 	b.w	649e <d_print_comp_inner+0x9a2>
    76fa:	2500      	movs	r5, #0
    76fc:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    7700:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    7704:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    7708:	4798      	blx	r3
    770a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    770e:	2201      	movs	r2, #1
    7710:	4413      	add	r3, r2
    7712:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7716:	4629      	mov	r1, r5
    7718:	f7fe ba91 	b.w	5c3e <d_print_comp_inner+0x142>
    771c:	2500      	movs	r5, #0
    771e:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7722:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7726:	4620      	mov	r0, r4
    7728:	4798      	blx	r3
    772a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    772e:	3301      	adds	r3, #1
    7730:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7734:	4629      	mov	r1, r5
    7736:	2301      	movs	r3, #1
    7738:	f7ff bab6 	b.w	6ca8 <d_print_comp_inner+0x11ac>
    773c:	2120      	movs	r1, #32
    773e:	4620      	mov	r0, r4
    7740:	f7fb ffa2 	bl	3688 <d_append_char>
    7744:	f7ff baaa 	b.w	6c9c <d_print_comp_inner+0x11a0>
    7748:	2500      	movs	r5, #0
    774a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    774e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7752:	4620      	mov	r0, r4
    7754:	4798      	blx	r3
    7756:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    775a:	3301      	adds	r3, #1
    775c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7760:	4629      	mov	r1, r5
    7762:	2301      	movs	r3, #1
    7764:	f7ff ba8a 	b.w	6c7c <d_print_comp_inner+0x1180>
    7768:	2120      	movs	r1, #32
    776a:	4620      	mov	r0, r4
    776c:	f7fb ff8c 	bl	3688 <d_append_char>
    7770:	f7ff ba7e 	b.w	6c70 <d_print_comp_inner+0x1174>
    7774:	2700      	movs	r7, #0
    7776:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    777a:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    777e:	4620      	mov	r0, r4
    7780:	4798      	blx	r3
    7782:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7786:	68f2      	ldr	r2, [r6, #12]
    7788:	3301      	adds	r3, #1
    778a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    778e:	4639      	mov	r1, r7
    7790:	2301      	movs	r3, #1
    7792:	f7fe bb00 	b.w	5d96 <d_print_comp_inner+0x29a>
    7796:	212d      	movs	r1, #45	; 0x2d
    7798:	4620      	mov	r0, r4
    779a:	f7fb ff75 	bl	3688 <d_append_char>
    779e:	f7fe bb14 	b.w	5dca <d_print_comp_inner+0x2ce>
    77a2:	2700      	movs	r7, #0
    77a4:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    77a8:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    77ac:	4620      	mov	r0, r4
    77ae:	4798      	blx	r3
    77b0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    77b4:	3301      	adds	r3, #1
    77b6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    77ba:	4639      	mov	r1, r7
    77bc:	2301      	movs	r3, #1
    77be:	f7fe bafa 	b.w	5db6 <d_print_comp_inner+0x2ba>
    77c2:	6933      	ldr	r3, [r6, #16]
    77c4:	781b      	ldrb	r3, [r3, #0]
    77c6:	2b00      	cmp	r3, #0
    77c8:	f47e aadf 	bne.w	5d8a <d_print_comp_inner+0x28e>
    77cc:	2f3e      	cmp	r7, #62	; 0x3e
    77ce:	f000 81f6 	beq.w	7bbe <d_print_comp_inner+0x20c2>
    77d2:	6932      	ldr	r2, [r6, #16]
    77d4:	2111      	movs	r1, #17
    77d6:	4620      	mov	r0, r4
    77d8:	3d02      	subs	r5, #2
    77da:	f000 fa09 	bl	7bf0 <d_print_comp>
    77de:	2d04      	cmp	r5, #4
    77e0:	f63e a9fc 	bhi.w	5bdc <d_print_comp_inner+0xe0>
    77e4:	e8df f005 	tbb	[pc, r5]
    77e8:	06090c0f 	.word	0x06090c0f
    77ec:	03          	.byte	0x03
    77ed:	00          	.byte	0x00
    77ee:	49c8      	ldr	r1, [pc, #800]	; (7b10 <d_print_comp_inner+0x2014>)
    77f0:	f7fe bde3 	b.w	63ba <d_print_comp_inner+0x8be>
    77f4:	49c7      	ldr	r1, [pc, #796]	; (7b14 <d_print_comp_inner+0x2018>)
    77f6:	f7fe bde0 	b.w	63ba <d_print_comp_inner+0x8be>
    77fa:	49c7      	ldr	r1, [pc, #796]	; (7b18 <d_print_comp_inner+0x201c>)
    77fc:	f7fe bddd 	b.w	63ba <d_print_comp_inner+0x8be>
    7800:	216c      	movs	r1, #108	; 0x6c
    7802:	f7fe baef 	b.w	5de4 <d_print_comp_inner+0x2e8>
    7806:	2175      	movs	r1, #117	; 0x75
    7808:	f7fe baec 	b.w	5de4 <d_print_comp_inner+0x2e8>
    780c:	781b      	ldrb	r3, [r3, #0]
    780e:	2b73      	cmp	r3, #115	; 0x73
    7810:	d00a      	beq.n	7828 <d_print_comp_inner+0x1d2c>
    7812:	3b63      	subs	r3, #99	; 0x63
    7814:	b2db      	uxtb	r3, r3
    7816:	2b0f      	cmp	r3, #15
    7818:	f63e af77 	bhi.w	670a <d_print_comp_inner+0xc0e>
    781c:	49bf      	ldr	r1, [pc, #764]	; (7b1c <d_print_comp_inner+0x2020>)
    781e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
    7822:	2b00      	cmp	r3, #0
    7824:	f43e af71 	beq.w	670a <d_print_comp_inner+0xc0e>
    7828:	2111      	movs	r1, #17
    782a:	4620      	mov	r0, r4
    782c:	f001 f81e 	bl	886c <d_print_expr_op>
    7830:	213c      	movs	r1, #60	; 0x3c
    7832:	4620      	mov	r0, r4
    7834:	f7fb ff28 	bl	3688 <d_append_char>
    7838:	6933      	ldr	r3, [r6, #16]
    783a:	2111      	movs	r1, #17
    783c:	68da      	ldr	r2, [r3, #12]
    783e:	4620      	mov	r0, r4
    7840:	f000 f9d6 	bl	7bf0 <d_print_comp>
    7844:	49b6      	ldr	r1, [pc, #728]	; (7b20 <d_print_comp_inner+0x2024>)
    7846:	4620      	mov	r0, r4
    7848:	f7fb ffa6 	bl	3798 <d_append_string>
    784c:	6933      	ldr	r3, [r6, #16]
    784e:	2111      	movs	r1, #17
    7850:	691a      	ldr	r2, [r3, #16]
    7852:	4620      	mov	r0, r4
    7854:	f000 f9cc 	bl	7bf0 <d_print_comp>
    7858:	2129      	movs	r1, #41	; 0x29
    785a:	f7fe bac3 	b.w	5de4 <d_print_comp_inner+0x2e8>
    785e:	f8d0 c134 	ldr.w	ip, [r0, #308]	; 0x134
    7862:	f1bc 0f00 	cmp.w	ip, #0
    7866:	f340 8107 	ble.w	7a78 <d_print_comp_inner+0x1f7c>
    786a:	f8d0 e130 	ldr.w	lr, [r0, #304]	; 0x130
    786e:	462b      	mov	r3, r5
    7870:	4670      	mov	r0, lr
    7872:	e004      	b.n	787e <d_print_comp_inner+0x1d82>
    7874:	4563      	cmp	r3, ip
    7876:	f100 0008 	add.w	r0, r0, #8
    787a:	f000 80fd 	beq.w	7a78 <d_print_comp_inner+0x1f7c>
    787e:	f85e 1033 	ldr.w	r1, [lr, r3, lsl #3]
    7882:	428a      	cmp	r2, r1
    7884:	f103 0301 	add.w	r3, r3, #1
    7888:	d1f4      	bne.n	7874 <d_print_comp_inner+0x1d78>
    788a:	f8d4 c12c 	ldr.w	ip, [r4, #300]	; 0x12c
    788e:	4663      	mov	r3, ip
    7890:	f1bc 0f00 	cmp.w	ip, #0
    7894:	d104      	bne.n	78a0 <d_print_comp_inner+0x1da4>
    7896:	e09d      	b.n	79d4 <d_print_comp_inner+0x1ed8>
    7898:	685b      	ldr	r3, [r3, #4]
    789a:	2b00      	cmp	r3, #0
    789c:	f000 809a 	beq.w	79d4 <d_print_comp_inner+0x1ed8>
    78a0:	6819      	ldr	r1, [r3, #0]
    78a2:	4291      	cmp	r1, r2
    78a4:	d003      	beq.n	78ae <d_print_comp_inner+0x1db2>
    78a6:	42b1      	cmp	r1, r6
    78a8:	d1f6      	bne.n	7898 <d_print_comp_inner+0x1d9c>
    78aa:	459c      	cmp	ip, r3
    78ac:	d0f4      	beq.n	7898 <d_print_comp_inner+0x1d9c>
    78ae:	4611      	mov	r1, r2
    78b0:	4620      	mov	r0, r4
    78b2:	9201      	str	r2, [sp, #4]
    78b4:	f7fb ff0a 	bl	36cc <d_lookup_template_argument>
    78b8:	9a01      	ldr	r2, [sp, #4]
    78ba:	2800      	cmp	r0, #0
    78bc:	f43e a98b 	beq.w	5bd6 <d_print_comp_inner+0xda>
    78c0:	7803      	ldrb	r3, [r0, #0]
    78c2:	2b2f      	cmp	r3, #47	; 0x2f
    78c4:	f47e a9fa 	bne.w	5cbc <d_print_comp_inner+0x1c0>
    78c8:	f8d4 1124 	ldr.w	r1, [r4, #292]	; 0x124
    78cc:	2900      	cmp	r1, #0
    78ce:	f6fe a9fe 	blt.w	5cce <d_print_comp_inner+0x1d2>
    78d2:	f7fb fe77 	bl	35c4 <d_index_template_argument.part.0>
    78d6:	2800      	cmp	r0, #0
    78d8:	f000 816a 	beq.w	7bb0 <d_print_comp_inner+0x20b4>
    78dc:	7803      	ldrb	r3, [r0, #0]
    78de:	f7fe b9ed 	b.w	5cbc <d_print_comp_inner+0x1c0>
    78e2:	68c2      	ldr	r2, [r0, #12]
    78e4:	f7fe b97e 	b.w	5be4 <d_print_comp_inner+0xe8>
    78e8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    78ec:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    78f0:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    78f4:	4620      	mov	r0, r4
    78f6:	4798      	blx	r3
    78f8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    78fc:	3301      	adds	r3, #1
    78fe:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7902:	4631      	mov	r1, r6
    7904:	2301      	movs	r3, #1
    7906:	e491      	b.n	722c <d_print_comp_inner+0x1730>
    7908:	4986      	ldr	r1, [pc, #536]	; (7b24 <d_print_comp_inner+0x2028>)
    790a:	4632      	mov	r2, r6
    790c:	a804      	add	r0, sp, #16
    790e:	f002 fe39 	bl	a584 <sprintf>
    7912:	a804      	add	r0, sp, #16
    7914:	f007 f9b4 	bl	ec80 <strlen>
    7918:	2800      	cmp	r0, #0
    791a:	f43e a95f 	beq.w	5bdc <d_print_comp_inner+0xe0>
    791e:	ad04      	add	r5, sp, #16
    7920:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7924:	182f      	adds	r7, r5, r0
    7926:	f04f 0800 	mov.w	r8, #0
    792a:	e009      	b.n	7940 <d_print_comp_inner+0x1e44>
    792c:	460b      	mov	r3, r1
    792e:	3101      	adds	r1, #1
    7930:	42af      	cmp	r7, r5
    7932:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7936:	54e6      	strb	r6, [r4, r3]
    7938:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    793c:	f43e a94e 	beq.w	5bdc <d_print_comp_inner+0xe0>
    7940:	29ff      	cmp	r1, #255	; 0xff
    7942:	f815 6b01 	ldrb.w	r6, [r5], #1
    7946:	d1f1      	bne.n	792c <d_print_comp_inner+0x1e30>
    7948:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    794c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7950:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7954:	4620      	mov	r0, r4
    7956:	4798      	blx	r3
    7958:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    795c:	3301      	adds	r3, #1
    795e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7962:	2101      	movs	r1, #1
    7964:	2300      	movs	r3, #0
    7966:	e7e3      	b.n	7930 <d_print_comp_inner+0x1e34>
    7968:	2500      	movs	r5, #0
    796a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    796e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7972:	4620      	mov	r0, r4
    7974:	4798      	blx	r3
    7976:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    797a:	3301      	adds	r3, #1
    797c:	4629      	mov	r1, r5
    797e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7982:	e4fe      	b.n	7382 <d_print_comp_inner+0x1886>
    7984:	2111      	movs	r1, #17
    7986:	4620      	mov	r0, r4
    7988:	4652      	mov	r2, sl
    798a:	f001 f96b 	bl	8c64 <d_print_subexpr>
    798e:	4966      	ldr	r1, [pc, #408]	; (7b28 <d_print_comp_inner+0x202c>)
    7990:	f7fe bd13 	b.w	63ba <d_print_comp_inner+0x8be>
    7994:	2500      	movs	r5, #0
    7996:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    799a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    799e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    79a2:	4620      	mov	r0, r4
    79a4:	4798      	blx	r3
    79a6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    79aa:	3301      	adds	r3, #1
    79ac:	4629      	mov	r1, r5
    79ae:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    79b2:	f7fe bf31 	b.w	6818 <d_print_comp_inner+0xd1c>
    79b6:	2600      	movs	r6, #0
    79b8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    79bc:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    79c0:	4620      	mov	r0, r4
    79c2:	4798      	blx	r3
    79c4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    79c8:	687d      	ldr	r5, [r7, #4]
    79ca:	3301      	adds	r3, #1
    79cc:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    79d0:	4631      	mov	r1, r6
    79d2:	e61f      	b.n	7614 <d_print_comp_inner+0x1b18>
    79d4:	6843      	ldr	r3, [r0, #4]
    79d6:	f8d4 8110 	ldr.w	r8, [r4, #272]	; 0x110
    79da:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
    79de:	4611      	mov	r1, r2
    79e0:	4620      	mov	r0, r4
    79e2:	9201      	str	r2, [sp, #4]
    79e4:	f7fb fe72 	bl	36cc <d_lookup_template_argument>
    79e8:	9a01      	ldr	r2, [sp, #4]
    79ea:	2800      	cmp	r0, #0
    79ec:	f000 80e3 	beq.w	7bb6 <d_print_comp_inner+0x20ba>
    79f0:	2501      	movs	r5, #1
    79f2:	e765      	b.n	78c0 <d_print_comp_inner+0x1dc4>
    79f4:	68ff      	ldr	r7, [r7, #12]
    79f6:	2f00      	cmp	r7, #0
    79f8:	f43e a8ed 	beq.w	5bd6 <d_print_comp_inner+0xda>
    79fc:	783a      	ldrb	r2, [r7, #0]
    79fe:	f7fe bda9 	b.w	6554 <d_print_comp_inner+0xa58>
    7a02:	2500      	movs	r5, #0
    7a04:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    7a08:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7a0c:	4620      	mov	r0, r4
    7a0e:	4798      	blx	r3
    7a10:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7a14:	3301      	adds	r3, #1
    7a16:	4629      	mov	r1, r5
    7a18:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7a1c:	e572      	b.n	7504 <d_print_comp_inner+0x1a08>
    7a1e:	2120      	movs	r1, #32
    7a20:	4620      	mov	r0, r4
    7a22:	f7fb fe31 	bl	3688 <d_append_char>
    7a26:	e568      	b.n	74fa <d_print_comp_inner+0x19fe>
    7a28:	2500      	movs	r5, #0
    7a2a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7a2e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7a32:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    7a36:	4620      	mov	r0, r4
    7a38:	4798      	blx	r3
    7a3a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7a3e:	3301      	adds	r3, #1
    7a40:	4629      	mov	r1, r5
    7a42:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7a46:	e546      	b.n	74d6 <d_print_comp_inner+0x19da>
    7a48:	2120      	movs	r1, #32
    7a4a:	4620      	mov	r0, r4
    7a4c:	f7fb fe1c 	bl	3688 <d_append_char>
    7a50:	e53c      	b.n	74cc <d_print_comp_inner+0x19d0>
    7a52:	68ea      	ldr	r2, [r5, #12]
    7a54:	7811      	ldrb	r1, [r2, #0]
    7a56:	2901      	cmp	r1, #1
    7a58:	f47f ad72 	bne.w	7540 <d_print_comp_inner+0x1a44>
    7a5c:	6929      	ldr	r1, [r5, #16]
    7a5e:	7809      	ldrb	r1, [r1, #0]
    7a60:	2929      	cmp	r1, #41	; 0x29
    7a62:	bf08      	it	eq
    7a64:	4615      	moveq	r5, r2
    7a66:	e56b      	b.n	7540 <d_print_comp_inner+0x1a44>
    7a68:	68ea      	ldr	r2, [r5, #12]
    7a6a:	2111      	movs	r1, #17
    7a6c:	4620      	mov	r0, r4
    7a6e:	f001 f8f9 	bl	8c64 <d_print_subexpr>
    7a72:	463a      	mov	r2, r7
    7a74:	f7fe beb6 	b.w	67e4 <d_print_comp_inner+0xce8>
    7a78:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
    7a7c:	4563      	cmp	r3, ip
    7a7e:	f77e a8aa 	ble.w	5bd6 <d_print_comp_inner+0xda>
    7a82:	f8d4 1130 	ldr.w	r1, [r4, #304]	; 0x130
    7a86:	f8d4 e110 	ldr.w	lr, [r4, #272]	; 0x110
    7a8a:	eb01 03cc 	add.w	r3, r1, ip, lsl #3
    7a8e:	f10c 0001 	add.w	r0, ip, #1
    7a92:	f8c4 0134 	str.w	r0, [r4, #308]	; 0x134
    7a96:	3304      	adds	r3, #4
    7a98:	f841 203c 	str.w	r2, [r1, ip, lsl #3]
    7a9c:	f1be 0f00 	cmp.w	lr, #0
    7aa0:	f000 8092 	beq.w	7bc8 <d_print_comp_inner+0x20cc>
    7aa4:	e9d4 0950 	ldrd	r0, r9, [r4, #320]	; 0x140
    7aa8:	4694      	mov	ip, r2
    7aaa:	e010      	b.n	7ace <d_print_comp_inner+0x1fd2>
    7aac:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
    7ab0:	f8de 2004 	ldr.w	r2, [lr, #4]
    7ab4:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
    7ab8:	3001      	adds	r0, #1
    7aba:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
    7abe:	604a      	str	r2, [r1, #4]
    7ac0:	6019      	str	r1, [r3, #0]
    7ac2:	f8de e000 	ldr.w	lr, [lr]
    7ac6:	460b      	mov	r3, r1
    7ac8:	f1be 0f00 	cmp.w	lr, #0
    7acc:	d07b      	beq.n	7bc6 <d_print_comp_inner+0x20ca>
    7ace:	4581      	cmp	r9, r0
    7ad0:	dcec      	bgt.n	7aac <d_print_comp_inner+0x1fb0>
    7ad2:	f7fe b880 	b.w	5bd6 <d_print_comp_inner+0xda>
    7ad6:	6912      	ldr	r2, [r2, #16]
    7ad8:	2111      	movs	r1, #17
    7ada:	f000 f889 	bl	7bf0 <d_print_comp>
    7ade:	9b06      	ldr	r3, [sp, #24]
    7ae0:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
    7ae4:	2b00      	cmp	r3, #0
    7ae6:	f43e af09 	beq.w	68fc <d_print_comp_inner+0xe00>
    7aea:	f7fe b877 	b.w	5bdc <d_print_comp_inner+0xe0>
    7aee:	68da      	ldr	r2, [r3, #12]
    7af0:	6891      	ldr	r1, [r2, #8]
    7af2:	2901      	cmp	r1, #1
    7af4:	f47e ae1e 	bne.w	6734 <d_print_comp_inner+0xc38>
    7af8:	6852      	ldr	r2, [r2, #4]
    7afa:	7812      	ldrb	r2, [r2, #0]
    7afc:	2a3e      	cmp	r2, #62	; 0x3e
    7afe:	f47e ae19 	bne.w	6734 <d_print_comp_inner+0xc38>
    7b02:	2128      	movs	r1, #40	; 0x28
    7b04:	4620      	mov	r0, r4
    7b06:	f7fb fdbf 	bl	3688 <d_append_char>
    7b0a:	68f3      	ldr	r3, [r6, #12]
    7b0c:	f7fe be12 	b.w	6734 <d_print_comp_inner+0xc38>
    7b10:	20001edc 	.word	0x20001edc
    7b14:	20001ed8 	.word	0x20001ed8
    7b18:	20001ed4 	.word	0x20001ed4
    7b1c:	20000370 	.word	0x20000370
    7b20:	20001eb8 	.word	0x20001eb8
    7b24:	20001cb0 	.word	0x20001cb0
    7b28:	20001f0c 	.word	0x20001f0c
    7b2c:	4620      	mov	r0, r4
    7b2e:	215b      	movs	r1, #91	; 0x5b
    7b30:	f7fb fdaa 	bl	3688 <d_append_char>
    7b34:	6933      	ldr	r3, [r6, #16]
    7b36:	4620      	mov	r0, r4
    7b38:	691a      	ldr	r2, [r3, #16]
    7b3a:	2111      	movs	r1, #17
    7b3c:	f000 f858 	bl	7bf0 <d_print_comp>
    7b40:	215d      	movs	r1, #93	; 0x5d
    7b42:	4620      	mov	r0, r4
    7b44:	f7fb fda0 	bl	3688 <d_append_char>
    7b48:	f7fe be1c 	b.w	6784 <d_print_comp_inner+0xc88>
    7b4c:	6913      	ldr	r3, [r2, #16]
    7b4e:	68d2      	ldr	r2, [r2, #12]
    7b50:	781b      	ldrb	r3, [r3, #0]
    7b52:	2b29      	cmp	r3, #41	; 0x29
    7b54:	bf1c      	itt	ne
    7b56:	2301      	movne	r3, #1
    7b58:	f8c4 3118 	strne.w	r3, [r4, #280]	; 0x118
    7b5c:	2111      	movs	r1, #17
    7b5e:	4620      	mov	r0, r4
    7b60:	f001 f880 	bl	8c64 <d_print_subexpr>
    7b64:	f7fe bdf7 	b.w	6756 <d_print_comp_inner+0xc5a>
    7b68:	462a      	mov	r2, r5
    7b6a:	2111      	movs	r1, #17
    7b6c:	4620      	mov	r0, r4
    7b6e:	f000 fe7d 	bl	886c <d_print_expr_op>
    7b72:	f7fe be01 	b.w	6778 <d_print_comp_inner+0xc7c>
    7b76:	491c      	ldr	r1, [pc, #112]	; (7be8 <d_print_comp_inner+0x20ec>)
    7b78:	4620      	mov	r0, r4
    7b7a:	f7fb fe0d 	bl	3798 <d_append_string>
    7b7e:	68f3      	ldr	r3, [r6, #12]
    7b80:	b143      	cbz	r3, 7b94 <d_print_comp_inner+0x2098>
    7b82:	2111      	movs	r1, #17
    7b84:	4620      	mov	r0, r4
    7b86:	4632      	mov	r2, r6
    7b88:	f001 f86c 	bl	8c64 <d_print_subexpr>
    7b8c:	2120      	movs	r1, #32
    7b8e:	4620      	mov	r0, r4
    7b90:	f7fb fd7a 	bl	3688 <d_append_char>
    7b94:	463a      	mov	r2, r7
    7b96:	2111      	movs	r1, #17
    7b98:	4620      	mov	r0, r4
    7b9a:	f000 f829 	bl	7bf0 <d_print_comp>
    7b9e:	2d00      	cmp	r5, #0
    7ba0:	f47e ae17 	bne.w	67d2 <d_print_comp_inner+0xcd6>
    7ba4:	f7fe b81a 	b.w	5bdc <d_print_comp_inner+0xe0>
    7ba8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    7bac:	f7fe b813 	b.w	5bd6 <d_print_comp_inner+0xda>
    7bb0:	2d00      	cmp	r5, #0
    7bb2:	f43e a810 	beq.w	5bd6 <d_print_comp_inner+0xda>
    7bb6:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
    7bba:	f7fe b80c 	b.w	5bd6 <d_print_comp_inner+0xda>
    7bbe:	212d      	movs	r1, #45	; 0x2d
    7bc0:	f7fb fd62 	bl	3688 <d_append_char>
    7bc4:	e605      	b.n	77d2 <d_print_comp_inner+0x1cd6>
    7bc6:	4662      	mov	r2, ip
    7bc8:	2100      	movs	r1, #0
    7bca:	6019      	str	r1, [r3, #0]
    7bcc:	e66f      	b.n	78ae <d_print_comp_inner+0x1db2>
    7bce:	68f2      	ldr	r2, [r6, #12]
    7bd0:	f7fe b817 	b.w	5c02 <d_print_comp_inner+0x106>
    7bd4:	463a      	mov	r2, r7
    7bd6:	2111      	movs	r1, #17
    7bd8:	f000 fe48 	bl	886c <d_print_expr_op>
    7bdc:	f7fe bdf9 	b.w	67d2 <d_print_comp_inner+0xcd6>
    7be0:	4902      	ldr	r1, [pc, #8]	; (7bec <d_print_comp_inner+0x20f0>)
    7be2:	f7fe bbea 	b.w	63ba <d_print_comp_inner+0x8be>
    7be6:	bf00      	nop
    7be8:	20001ecc 	.word	0x20001ecc
    7bec:	20001ee0 	.word	0x20001ee0

00007bf0 <d_print_comp>:
    7bf0:	b530      	push	{r4, r5, lr}
    7bf2:	4605      	mov	r5, r0
    7bf4:	b083      	sub	sp, #12
    7bf6:	b31a      	cbz	r2, 7c40 <d_print_comp+0x50>
    7bf8:	6853      	ldr	r3, [r2, #4]
    7bfa:	2b01      	cmp	r3, #1
    7bfc:	4614      	mov	r4, r2
    7bfe:	dc1f      	bgt.n	7c40 <d_print_comp+0x50>
    7c00:	f8d0 111c 	ldr.w	r1, [r0, #284]	; 0x11c
    7c04:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
    7c08:	dc1a      	bgt.n	7c40 <d_print_comp+0x50>
    7c0a:	3301      	adds	r3, #1
    7c0c:	6053      	str	r3, [r2, #4]
    7c0e:	3101      	adds	r1, #1
    7c10:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
    7c14:	f8c0 111c 	str.w	r1, [r0, #284]	; 0x11c
    7c18:	f8c0 d12c 	str.w	sp, [r0, #300]	; 0x12c
    7c1c:	2111      	movs	r1, #17
    7c1e:	e9cd 2300 	strd	r2, r3, [sp]
    7c22:	f7fd ff6b 	bl	5afc <d_print_comp_inner>
    7c26:	6862      	ldr	r2, [r4, #4]
    7c28:	f8d5 311c 	ldr.w	r3, [r5, #284]	; 0x11c
    7c2c:	9901      	ldr	r1, [sp, #4]
    7c2e:	f8c5 112c 	str.w	r1, [r5, #300]	; 0x12c
    7c32:	3a01      	subs	r2, #1
    7c34:	3b01      	subs	r3, #1
    7c36:	6062      	str	r2, [r4, #4]
    7c38:	f8c5 311c 	str.w	r3, [r5, #284]	; 0x11c
    7c3c:	b003      	add	sp, #12
    7c3e:	bd30      	pop	{r4, r5, pc}
    7c40:	2301      	movs	r3, #1
    7c42:	f8c5 3118 	str.w	r3, [r5, #280]	; 0x118
    7c46:	b003      	add	sp, #12
    7c48:	bd30      	pop	{r4, r5, pc}
    7c4a:	bf00      	nop

00007c4c <d_print_mod>:
    7c4c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    7c50:	7813      	ldrb	r3, [r2, #0]
    7c52:	3b03      	subs	r3, #3
    7c54:	4615      	mov	r5, r2
    7c56:	4604      	mov	r4, r0
    7c58:	2b4e      	cmp	r3, #78	; 0x4e
    7c5a:	d850      	bhi.n	7cfe <d_print_mod+0xb2>
    7c5c:	e8df f013 	tbh	[pc, r3, lsl #1]
    7c60:	004f011c 	.word	0x004f011c
    7c64:	004f004f 	.word	0x004f004f
    7c68:	004f004f 	.word	0x004f004f
    7c6c:	004f004f 	.word	0x004f004f
    7c70:	004f004f 	.word	0x004f004f
    7c74:	004f004f 	.word	0x004f004f
    7c78:	004f004f 	.word	0x004f004f
    7c7c:	004f004f 	.word	0x004f004f
    7c80:	004f004f 	.word	0x004f004f
    7c84:	004f004f 	.word	0x004f004f
    7c88:	004f004f 	.word	0x004f004f
    7c8c:	007c0055 	.word	0x007c0055
    7c90:	005500a3 	.word	0x005500a3
    7c94:	00a3007c 	.word	0x00a3007c
    7c98:	00fc00ef 	.word	0x00fc00ef
    7c9c:	02870109 	.word	0x02870109
    7ca0:	01300122 	.word	0x01300122
    7ca4:	017b0155 	.word	0x017b0155
    7ca8:	004f004f 	.word	0x004f004f
    7cac:	004f004f 	.word	0x004f004f
    7cb0:	004f01a1 	.word	0x004f01a1
    7cb4:	004f01d1 	.word	0x004f01d1
    7cb8:	004f004f 	.word	0x004f004f
    7cbc:	004f004f 	.word	0x004f004f
    7cc0:	004f004f 	.word	0x004f004f
    7cc4:	004f004f 	.word	0x004f004f
    7cc8:	004f004f 	.word	0x004f004f
    7ccc:	004f004f 	.word	0x004f004f
    7cd0:	004f004f 	.word	0x004f004f
    7cd4:	004f004f 	.word	0x004f004f
    7cd8:	004f004f 	.word	0x004f004f
    7cdc:	004f004f 	.word	0x004f004f
    7ce0:	004f004f 	.word	0x004f004f
    7ce4:	004f004f 	.word	0x004f004f
    7ce8:	004f004f 	.word	0x004f004f
    7cec:	004f004f 	.word	0x004f004f
    7cf0:	004f004f 	.word	0x004f004f
    7cf4:	01f8004f 	.word	0x01f8004f
    7cf8:	0234004f 	.word	0x0234004f
    7cfc:	00c8      	.short	0x00c8
    7cfe:	462a      	mov	r2, r5
    7d00:	2111      	movs	r1, #17
    7d02:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    7d06:	f7ff bf73 	b.w	7bf0 <d_print_comp>
    7d0a:	4ed6      	ldr	r6, [pc, #856]	; (8064 <d_print_mod+0x418>)
    7d0c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7d10:	f106 0708 	add.w	r7, r6, #8
    7d14:	2520      	movs	r5, #32
    7d16:	f04f 0800 	mov.w	r8, #0
    7d1a:	e00b      	b.n	7d34 <d_print_mod+0xe8>
    7d1c:	460b      	mov	r3, r1
    7d1e:	3101      	adds	r1, #1
    7d20:	42be      	cmp	r6, r7
    7d22:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7d26:	54e5      	strb	r5, [r4, r3]
    7d28:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7d2c:	f000 80c6 	beq.w	7ebc <d_print_mod+0x270>
    7d30:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7d34:	29ff      	cmp	r1, #255	; 0xff
    7d36:	d1f1      	bne.n	7d1c <d_print_mod+0xd0>
    7d38:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7d3c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7d40:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7d44:	4620      	mov	r0, r4
    7d46:	4798      	blx	r3
    7d48:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7d4c:	3301      	adds	r3, #1
    7d4e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7d52:	2101      	movs	r1, #1
    7d54:	2300      	movs	r3, #0
    7d56:	e7e3      	b.n	7d20 <d_print_mod+0xd4>
    7d58:	4ec3      	ldr	r6, [pc, #780]	; (8068 <d_print_mod+0x41c>)
    7d5a:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7d5e:	f106 0708 	add.w	r7, r6, #8
    7d62:	2520      	movs	r5, #32
    7d64:	f04f 0800 	mov.w	r8, #0
    7d68:	e00b      	b.n	7d82 <d_print_mod+0x136>
    7d6a:	460b      	mov	r3, r1
    7d6c:	3101      	adds	r1, #1
    7d6e:	42b7      	cmp	r7, r6
    7d70:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7d74:	54e5      	strb	r5, [r4, r3]
    7d76:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7d7a:	f000 809f 	beq.w	7ebc <d_print_mod+0x270>
    7d7e:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7d82:	29ff      	cmp	r1, #255	; 0xff
    7d84:	d1f1      	bne.n	7d6a <d_print_mod+0x11e>
    7d86:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7d8a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7d8e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7d92:	4620      	mov	r0, r4
    7d94:	4798      	blx	r3
    7d96:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7d9a:	3301      	adds	r3, #1
    7d9c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7da0:	2101      	movs	r1, #1
    7da2:	2300      	movs	r3, #0
    7da4:	e7e3      	b.n	7d6e <d_print_mod+0x122>
    7da6:	4eb1      	ldr	r6, [pc, #708]	; (806c <d_print_mod+0x420>)
    7da8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7dac:	1d77      	adds	r7, r6, #5
    7dae:	2520      	movs	r5, #32
    7db0:	f04f 0800 	mov.w	r8, #0
    7db4:	e00a      	b.n	7dcc <d_print_mod+0x180>
    7db6:	460b      	mov	r3, r1
    7db8:	3101      	adds	r1, #1
    7dba:	42b7      	cmp	r7, r6
    7dbc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7dc0:	54e5      	strb	r5, [r4, r3]
    7dc2:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7dc6:	d079      	beq.n	7ebc <d_print_mod+0x270>
    7dc8:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7dcc:	29ff      	cmp	r1, #255	; 0xff
    7dce:	d1f2      	bne.n	7db6 <d_print_mod+0x16a>
    7dd0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7dd4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7dd8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7ddc:	4620      	mov	r0, r4
    7dde:	4798      	blx	r3
    7de0:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7de4:	3301      	adds	r3, #1
    7de6:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7dea:	2101      	movs	r1, #1
    7dec:	2300      	movs	r3, #0
    7dee:	e7e4      	b.n	7dba <d_print_mod+0x16e>
    7df0:	4f9f      	ldr	r7, [pc, #636]	; (8070 <d_print_mod+0x424>)
    7df2:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7df6:	f107 0905 	add.w	r9, r7, #5
    7dfa:	2620      	movs	r6, #32
    7dfc:	f04f 0800 	mov.w	r8, #0
    7e00:	e00b      	b.n	7e1a <d_print_mod+0x1ce>
    7e02:	460b      	mov	r3, r1
    7e04:	3101      	adds	r1, #1
    7e06:	45b9      	cmp	r9, r7
    7e08:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7e0c:	54e6      	strb	r6, [r4, r3]
    7e0e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7e12:	f000 817f 	beq.w	8114 <d_print_mod+0x4c8>
    7e16:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    7e1a:	29ff      	cmp	r1, #255	; 0xff
    7e1c:	d1f1      	bne.n	7e02 <d_print_mod+0x1b6>
    7e1e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7e22:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7e26:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7e2a:	4620      	mov	r0, r4
    7e2c:	4798      	blx	r3
    7e2e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7e32:	3301      	adds	r3, #1
    7e34:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7e38:	2101      	movs	r1, #1
    7e3a:	2300      	movs	r3, #0
    7e3c:	e7e3      	b.n	7e06 <d_print_mod+0x1ba>
    7e3e:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    7e42:	2bff      	cmp	r3, #255	; 0xff
    7e44:	f000 81d0 	beq.w	81e8 <d_print_mod+0x59c>
    7e48:	2220      	movs	r2, #32
    7e4a:	1c59      	adds	r1, r3, #1
    7e4c:	f8c0 1100 	str.w	r1, [r0, #256]	; 0x100
    7e50:	54c2      	strb	r2, [r0, r3]
    7e52:	f880 2104 	strb.w	r2, [r0, #260]	; 0x104
    7e56:	e027      	b.n	7ea8 <d_print_mod+0x25c>
    7e58:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
    7e5c:	2bff      	cmp	r3, #255	; 0xff
    7e5e:	f000 81b4 	beq.w	81ca <d_print_mod+0x57e>
    7e62:	1c59      	adds	r1, r3, #1
    7e64:	2220      	movs	r2, #32
    7e66:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7e6a:	54e2      	strb	r2, [r4, r3]
    7e6c:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    7e70:	e028      	b.n	7ec4 <d_print_mod+0x278>
    7e72:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7e76:	29ff      	cmp	r1, #255	; 0xff
    7e78:	f000 8197 	beq.w	81aa <d_print_mod+0x55e>
    7e7c:	1c4a      	adds	r2, r1, #1
    7e7e:	2320      	movs	r3, #32
    7e80:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    7e84:	5463      	strb	r3, [r4, r1]
    7e86:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    7e8a:	692a      	ldr	r2, [r5, #16]
    7e8c:	4620      	mov	r0, r4
    7e8e:	2111      	movs	r1, #17
    7e90:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    7e94:	f7ff beac 	b.w	7bf0 <d_print_comp>
    7e98:	68ea      	ldr	r2, [r5, #12]
    7e9a:	2111      	movs	r1, #17
    7e9c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    7ea0:	f7ff bea6 	b.w	7bf0 <d_print_comp>
    7ea4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7ea8:	29ff      	cmp	r1, #255	; 0xff
    7eaa:	f000 81bc 	beq.w	8226 <d_print_mod+0x5da>
    7eae:	1c4a      	adds	r2, r1, #1
    7eb0:	2326      	movs	r3, #38	; 0x26
    7eb2:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    7eb6:	5463      	strb	r3, [r4, r1]
    7eb8:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    7ebc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    7ec0:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7ec4:	4d6b      	ldr	r5, [pc, #428]	; (8074 <d_print_mod+0x428>)
    7ec6:	2626      	movs	r6, #38	; 0x26
    7ec8:	1c6f      	adds	r7, r5, #1
    7eca:	f04f 0800 	mov.w	r8, #0
    7ece:	e00a      	b.n	7ee6 <d_print_mod+0x29a>
    7ed0:	460b      	mov	r3, r1
    7ed2:	3101      	adds	r1, #1
    7ed4:	42bd      	cmp	r5, r7
    7ed6:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7eda:	54e6      	strb	r6, [r4, r3]
    7edc:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    7ee0:	d0ec      	beq.n	7ebc <d_print_mod+0x270>
    7ee2:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    7ee6:	29ff      	cmp	r1, #255	; 0xff
    7ee8:	d1f2      	bne.n	7ed0 <d_print_mod+0x284>
    7eea:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7eee:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7ef2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7ef6:	4620      	mov	r0, r4
    7ef8:	4798      	blx	r3
    7efa:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7efe:	3301      	adds	r3, #1
    7f00:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7f04:	2101      	movs	r1, #1
    7f06:	2300      	movs	r3, #0
    7f08:	e7e4      	b.n	7ed4 <d_print_mod+0x288>
    7f0a:	4e5b      	ldr	r6, [pc, #364]	; (8078 <d_print_mod+0x42c>)
    7f0c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7f10:	f106 0708 	add.w	r7, r6, #8
    7f14:	2520      	movs	r5, #32
    7f16:	f04f 0800 	mov.w	r8, #0
    7f1a:	e00a      	b.n	7f32 <d_print_mod+0x2e6>
    7f1c:	460b      	mov	r3, r1
    7f1e:	3101      	adds	r1, #1
    7f20:	42b7      	cmp	r7, r6
    7f22:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7f26:	54e5      	strb	r5, [r4, r3]
    7f28:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7f2c:	d0c6      	beq.n	7ebc <d_print_mod+0x270>
    7f2e:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7f32:	29ff      	cmp	r1, #255	; 0xff
    7f34:	d1f2      	bne.n	7f1c <d_print_mod+0x2d0>
    7f36:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7f3a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7f3e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7f42:	4620      	mov	r0, r4
    7f44:	4798      	blx	r3
    7f46:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7f4a:	3301      	adds	r3, #1
    7f4c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7f50:	2101      	movs	r1, #1
    7f52:	2300      	movs	r3, #0
    7f54:	e7e4      	b.n	7f20 <d_print_mod+0x2d4>
    7f56:	4e49      	ldr	r6, [pc, #292]	; (807c <d_print_mod+0x430>)
    7f58:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    7f5c:	f106 070a 	add.w	r7, r6, #10
    7f60:	2520      	movs	r5, #32
    7f62:	f04f 0800 	mov.w	r8, #0
    7f66:	e00a      	b.n	7f7e <d_print_mod+0x332>
    7f68:	460b      	mov	r3, r1
    7f6a:	3101      	adds	r1, #1
    7f6c:	42b7      	cmp	r7, r6
    7f6e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7f72:	54e5      	strb	r5, [r4, r3]
    7f74:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7f78:	d0a0      	beq.n	7ebc <d_print_mod+0x270>
    7f7a:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7f7e:	29ff      	cmp	r1, #255	; 0xff
    7f80:	d1f2      	bne.n	7f68 <d_print_mod+0x31c>
    7f82:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7f86:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7f8a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7f8e:	4620      	mov	r0, r4
    7f90:	4798      	blx	r3
    7f92:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7f96:	3301      	adds	r3, #1
    7f98:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7f9c:	2101      	movs	r1, #1
    7f9e:	2300      	movs	r3, #0
    7fa0:	e7e4      	b.n	7f6c <d_print_mod+0x320>
    7fa2:	f890 3104 	ldrb.w	r3, [r0, #260]	; 0x104
    7fa6:	2b28      	cmp	r3, #40	; 0x28
    7fa8:	f040 80d5 	bne.w	8156 <d_print_mod+0x50a>
    7fac:	4e34      	ldr	r6, [pc, #208]	; (8080 <d_print_mod+0x434>)
    7fae:	68ea      	ldr	r2, [r5, #12]
    7fb0:	2111      	movs	r1, #17
    7fb2:	4620      	mov	r0, r4
    7fb4:	f7ff fe1c 	bl	7bf0 <d_print_comp>
    7fb8:	1cb7      	adds	r7, r6, #2
    7fba:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    7fbe:	253a      	movs	r5, #58	; 0x3a
    7fc0:	f04f 0800 	mov.w	r8, #0
    7fc4:	e00b      	b.n	7fde <d_print_mod+0x392>
    7fc6:	460b      	mov	r3, r1
    7fc8:	3101      	adds	r1, #1
    7fca:	42b7      	cmp	r7, r6
    7fcc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    7fd0:	54e5      	strb	r5, [r4, r3]
    7fd2:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    7fd6:	f43f af71 	beq.w	7ebc <d_print_mod+0x270>
    7fda:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    7fde:	29ff      	cmp	r1, #255	; 0xff
    7fe0:	d1f1      	bne.n	7fc6 <d_print_mod+0x37a>
    7fe2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    7fe6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    7fea:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    7fee:	4620      	mov	r0, r4
    7ff0:	4798      	blx	r3
    7ff2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    7ff6:	3301      	adds	r3, #1
    7ff8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    7ffc:	2101      	movs	r1, #1
    7ffe:	2300      	movs	r3, #0
    8000:	e7e3      	b.n	7fca <d_print_mod+0x37e>
    8002:	4f20      	ldr	r7, [pc, #128]	; (8084 <d_print_mod+0x438>)
    8004:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8008:	f107 0909 	add.w	r9, r7, #9
    800c:	2620      	movs	r6, #32
    800e:	f04f 0800 	mov.w	r8, #0
    8012:	e00b      	b.n	802c <d_print_mod+0x3e0>
    8014:	460b      	mov	r3, r1
    8016:	3101      	adds	r1, #1
    8018:	454f      	cmp	r7, r9
    801a:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    801e:	54e6      	strb	r6, [r4, r3]
    8020:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8024:	f000 8085 	beq.w	8132 <d_print_mod+0x4e6>
    8028:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    802c:	29ff      	cmp	r1, #255	; 0xff
    802e:	d1f1      	bne.n	8014 <d_print_mod+0x3c8>
    8030:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8034:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8038:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    803c:	4620      	mov	r0, r4
    803e:	4798      	blx	r3
    8040:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8044:	3301      	adds	r3, #1
    8046:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    804a:	2101      	movs	r1, #1
    804c:	2300      	movs	r3, #0
    804e:	e7e3      	b.n	8018 <d_print_mod+0x3cc>
    8050:	4e0d      	ldr	r6, [pc, #52]	; (8088 <d_print_mod+0x43c>)
    8052:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8056:	f106 0710 	add.w	r7, r6, #16
    805a:	2520      	movs	r5, #32
    805c:	f04f 0800 	mov.w	r8, #0
    8060:	e020      	b.n	80a4 <d_print_mod+0x458>
    8062:	bf00      	nop
    8064:	20001f8c 	.word	0x20001f8c
    8068:	20001f98 	.word	0x20001f98
    806c:	20001fa4 	.word	0x20001fa4
    8070:	20001fcc 	.word	0x20001fcc
    8074:	20001fd4 	.word	0x20001fd4
    8078:	20001fd8 	.word	0x20001fd8
    807c:	20001fe4 	.word	0x20001fe4
    8080:	20001ff0 	.word	0x20001ff0
    8084:	20001ff4 	.word	0x20001ff4
    8088:	20001fac 	.word	0x20001fac
    808c:	460b      	mov	r3, r1
    808e:	3101      	adds	r1, #1
    8090:	42b7      	cmp	r7, r6
    8092:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8096:	54e5      	strb	r5, [r4, r3]
    8098:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    809c:	f43f af0e 	beq.w	7ebc <d_print_mod+0x270>
    80a0:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    80a4:	29ff      	cmp	r1, #255	; 0xff
    80a6:	d1f1      	bne.n	808c <d_print_mod+0x440>
    80a8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    80ac:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    80b0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    80b4:	4620      	mov	r0, r4
    80b6:	4798      	blx	r3
    80b8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    80bc:	3301      	adds	r3, #1
    80be:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    80c2:	2101      	movs	r1, #1
    80c4:	2300      	movs	r3, #0
    80c6:	e7e3      	b.n	8090 <d_print_mod+0x444>
    80c8:	4f6d      	ldr	r7, [pc, #436]	; (8280 <d_print_mod+0x634>)
    80ca:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    80ce:	f107 0908 	add.w	r9, r7, #8
    80d2:	2620      	movs	r6, #32
    80d4:	f04f 0800 	mov.w	r8, #0
    80d8:	e00a      	b.n	80f0 <d_print_mod+0x4a4>
    80da:	460b      	mov	r3, r1
    80dc:	3101      	adds	r1, #1
    80de:	45b9      	cmp	r9, r7
    80e0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    80e4:	54e6      	strb	r6, [r4, r3]
    80e6:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    80ea:	d013      	beq.n	8114 <d_print_mod+0x4c8>
    80ec:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    80f0:	29ff      	cmp	r1, #255	; 0xff
    80f2:	d1f2      	bne.n	80da <d_print_mod+0x48e>
    80f4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    80f8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    80fc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    8100:	4620      	mov	r0, r4
    8102:	4798      	blx	r3
    8104:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8108:	3301      	adds	r3, #1
    810a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    810e:	2101      	movs	r1, #1
    8110:	2300      	movs	r3, #0
    8112:	e7e4      	b.n	80de <d_print_mod+0x492>
    8114:	692a      	ldr	r2, [r5, #16]
    8116:	2a00      	cmp	r2, #0
    8118:	f43f aed0 	beq.w	7ebc <d_print_mod+0x270>
    811c:	29ff      	cmp	r1, #255	; 0xff
    811e:	d032      	beq.n	8186 <d_print_mod+0x53a>
    8120:	1c48      	adds	r0, r1, #1
    8122:	2328      	movs	r3, #40	; 0x28
    8124:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
    8128:	5463      	strb	r3, [r4, r1]
    812a:	2111      	movs	r1, #17
    812c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8130:	e001      	b.n	8136 <d_print_mod+0x4ea>
    8132:	68ea      	ldr	r2, [r5, #12]
    8134:	2111      	movs	r1, #17
    8136:	4620      	mov	r0, r4
    8138:	f7ff fd5a 	bl	7bf0 <d_print_comp>
    813c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8140:	29ff      	cmp	r1, #255	; 0xff
    8142:	d061      	beq.n	8208 <d_print_mod+0x5bc>
    8144:	1c4a      	adds	r2, r1, #1
    8146:	2329      	movs	r3, #41	; 0x29
    8148:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    814c:	5463      	strb	r3, [r4, r1]
    814e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8152:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    8156:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    815a:	29ff      	cmp	r1, #255	; 0xff
    815c:	d072      	beq.n	8244 <d_print_mod+0x5f8>
    815e:	1c4a      	adds	r2, r1, #1
    8160:	2320      	movs	r3, #32
    8162:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8166:	5463      	strb	r3, [r4, r1]
    8168:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    816c:	e71e      	b.n	7fac <d_print_mod+0x360>
    816e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8172:	29ff      	cmp	r1, #255	; 0xff
    8174:	d076      	beq.n	8264 <d_print_mod+0x618>
    8176:	1c4a      	adds	r2, r1, #1
    8178:	232a      	movs	r3, #42	; 0x2a
    817a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    817e:	5463      	strb	r3, [r4, r1]
    8180:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8184:	e69a      	b.n	7ebc <d_print_mod+0x270>
    8186:	2600      	movs	r6, #0
    8188:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    818c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8190:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    8194:	4620      	mov	r0, r4
    8196:	4798      	blx	r3
    8198:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    819c:	692a      	ldr	r2, [r5, #16]
    819e:	3301      	adds	r3, #1
    81a0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    81a4:	2001      	movs	r0, #1
    81a6:	4631      	mov	r1, r6
    81a8:	e7bb      	b.n	8122 <d_print_mod+0x4d6>
    81aa:	2600      	movs	r6, #0
    81ac:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    81b0:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    81b4:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    81b8:	4798      	blx	r3
    81ba:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    81be:	2201      	movs	r2, #1
    81c0:	4413      	add	r3, r2
    81c2:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    81c6:	4631      	mov	r1, r6
    81c8:	e659      	b.n	7e7e <d_print_mod+0x232>
    81ca:	2500      	movs	r5, #0
    81cc:	4619      	mov	r1, r3
    81ce:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    81d2:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    81d6:	4798      	blx	r3
    81d8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    81dc:	2101      	movs	r1, #1
    81de:	440b      	add	r3, r1
    81e0:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    81e4:	462b      	mov	r3, r5
    81e6:	e63d      	b.n	7e64 <d_print_mod+0x218>
    81e8:	2100      	movs	r1, #0
    81ea:	e9d0 5242 	ldrd	r5, r2, [r0, #264]	; 0x108
    81ee:	f880 10ff 	strb.w	r1, [r0, #255]	; 0xff
    81f2:	4619      	mov	r1, r3
    81f4:	47a8      	blx	r5
    81f6:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    81fa:	2220      	movs	r2, #32
    81fc:	3301      	adds	r3, #1
    81fe:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8202:	7022      	strb	r2, [r4, #0]
    8204:	2101      	movs	r1, #1
    8206:	e652      	b.n	7eae <d_print_mod+0x262>
    8208:	2500      	movs	r5, #0
    820a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    820e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8212:	4620      	mov	r0, r4
    8214:	4798      	blx	r3
    8216:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    821a:	2201      	movs	r2, #1
    821c:	4413      	add	r3, r2
    821e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8222:	4629      	mov	r1, r5
    8224:	e78f      	b.n	8146 <d_print_mod+0x4fa>
    8226:	2500      	movs	r5, #0
    8228:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    822c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8230:	4620      	mov	r0, r4
    8232:	4798      	blx	r3
    8234:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8238:	2201      	movs	r2, #1
    823a:	4413      	add	r3, r2
    823c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8240:	4629      	mov	r1, r5
    8242:	e635      	b.n	7eb0 <d_print_mod+0x264>
    8244:	2600      	movs	r6, #0
    8246:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
    824a:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
    824e:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    8252:	4798      	blx	r3
    8254:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8258:	2201      	movs	r2, #1
    825a:	4413      	add	r3, r2
    825c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8260:	4631      	mov	r1, r6
    8262:	e77d      	b.n	8160 <d_print_mod+0x514>
    8264:	2500      	movs	r5, #0
    8266:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    826a:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    826e:	4798      	blx	r3
    8270:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8274:	2201      	movs	r2, #1
    8276:	4413      	add	r3, r2
    8278:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    827c:	4629      	mov	r1, r5
    827e:	e77b      	b.n	8178 <d_print_mod+0x52c>
    8280:	20001fc0 	.word	0x20001fc0

00008284 <d_print_function_type>:
    8284:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    8288:	4604      	mov	r4, r0
    828a:	4616      	mov	r6, r2
    828c:	461d      	mov	r5, r3
    828e:	b19b      	cbz	r3, 82b8 <d_print_function_type+0x34>
    8290:	4f71      	ldr	r7, [pc, #452]	; (8458 <d_print_function_type+0x1d4>)
    8292:	2001      	movs	r0, #1
    8294:	689a      	ldr	r2, [r3, #8]
    8296:	b97a      	cbnz	r2, 82b8 <d_print_function_type+0x34>
    8298:	685a      	ldr	r2, [r3, #4]
    829a:	7811      	ldrb	r1, [r2, #0]
    829c:	3919      	subs	r1, #25
    829e:	b2c9      	uxtb	r1, r1
    82a0:	2912      	cmp	r1, #18
    82a2:	fa00 f201 	lsl.w	r2, r0, r1
    82a6:	d804      	bhi.n	82b2 <d_print_function_type+0x2e>
    82a8:	423a      	tst	r2, r7
    82aa:	d135      	bne.n	8318 <d_print_function_type+0x94>
    82ac:	f412 6f60 	tst.w	r2, #3584	; 0xe00
    82b0:	d174      	bne.n	839c <d_print_function_type+0x118>
    82b2:	681b      	ldr	r3, [r3, #0]
    82b4:	2b00      	cmp	r3, #0
    82b6:	d1ed      	bne.n	8294 <d_print_function_type+0x10>
    82b8:	2300      	movs	r3, #0
    82ba:	f8d4 7114 	ldr.w	r7, [r4, #276]	; 0x114
    82be:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
    82c2:	462a      	mov	r2, r5
    82c4:	2111      	movs	r1, #17
    82c6:	4620      	mov	r0, r4
    82c8:	f000 f8c8 	bl	845c <d_print_mod_list>
    82cc:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    82d0:	2bff      	cmp	r3, #255	; 0xff
    82d2:	d04b      	beq.n	836c <d_print_function_type+0xe8>
    82d4:	2228      	movs	r2, #40	; 0x28
    82d6:	1c59      	adds	r1, r3, #1
    82d8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    82dc:	54e2      	strb	r2, [r4, r3]
    82de:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    82e2:	6932      	ldr	r2, [r6, #16]
    82e4:	b12a      	cbz	r2, 82f2 <d_print_function_type+0x6e>
    82e6:	2111      	movs	r1, #17
    82e8:	4620      	mov	r0, r4
    82ea:	f7ff fc81 	bl	7bf0 <d_print_comp>
    82ee:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    82f2:	29ff      	cmp	r1, #255	; 0xff
    82f4:	d076      	beq.n	83e4 <d_print_function_type+0x160>
    82f6:	1c4b      	adds	r3, r1, #1
    82f8:	2229      	movs	r2, #41	; 0x29
    82fa:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    82fe:	4620      	mov	r0, r4
    8300:	5462      	strb	r2, [r4, r1]
    8302:	2301      	movs	r3, #1
    8304:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8308:	2111      	movs	r1, #17
    830a:	462a      	mov	r2, r5
    830c:	f000 f8a6 	bl	845c <d_print_mod_list>
    8310:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
    8314:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    8318:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    831c:	2b20      	cmp	r3, #32
    831e:	d145      	bne.n	83ac <d_print_function_type+0x128>
    8320:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8324:	29ff      	cmp	r1, #255	; 0xff
    8326:	d04e      	beq.n	83c6 <d_print_function_type+0x142>
    8328:	1c4b      	adds	r3, r1, #1
    832a:	f04f 0828 	mov.w	r8, #40	; 0x28
    832e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8332:	f804 8001 	strb.w	r8, [r4, r1]
    8336:	f04f 0900 	mov.w	r9, #0
    833a:	f8d4 7114 	ldr.w	r7, [r4, #276]	; 0x114
    833e:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
    8342:	2111      	movs	r1, #17
    8344:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
    8348:	464b      	mov	r3, r9
    834a:	462a      	mov	r2, r5
    834c:	4620      	mov	r0, r4
    834e:	f000 f885 	bl	845c <d_print_mod_list>
    8352:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8356:	29ff      	cmp	r1, #255	; 0xff
    8358:	d053      	beq.n	8402 <d_print_function_type+0x17e>
    835a:	1c4b      	adds	r3, r1, #1
    835c:	2229      	movs	r2, #41	; 0x29
    835e:	2bff      	cmp	r3, #255	; 0xff
    8360:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8364:	5462      	strb	r2, [r4, r1]
    8366:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    836a:	d1b3      	bne.n	82d4 <d_print_function_type+0x50>
    836c:	4619      	mov	r1, r3
    836e:	2300      	movs	r3, #0
    8370:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
    8374:	4620      	mov	r0, r4
    8376:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    837a:	4798      	blx	r3
    837c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8380:	3301      	adds	r3, #1
    8382:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8386:	2328      	movs	r3, #40	; 0x28
    8388:	7023      	strb	r3, [r4, #0]
    838a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    838e:	6932      	ldr	r2, [r6, #16]
    8390:	2101      	movs	r1, #1
    8392:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8396:	2a00      	cmp	r2, #0
    8398:	d1a5      	bne.n	82e6 <d_print_function_type+0x62>
    839a:	e7ac      	b.n	82f6 <d_print_function_type+0x72>
    839c:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
    83a0:	f003 02fd 	and.w	r2, r3, #253	; 0xfd
    83a4:	2a28      	cmp	r2, #40	; 0x28
    83a6:	d0bb      	beq.n	8320 <d_print_function_type+0x9c>
    83a8:	2b20      	cmp	r3, #32
    83aa:	d0b9      	beq.n	8320 <d_print_function_type+0x9c>
    83ac:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    83b0:	2bff      	cmp	r3, #255	; 0xff
    83b2:	d03e      	beq.n	8432 <d_print_function_type+0x1ae>
    83b4:	1c59      	adds	r1, r3, #1
    83b6:	2220      	movs	r2, #32
    83b8:	29ff      	cmp	r1, #255	; 0xff
    83ba:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    83be:	54e2      	strb	r2, [r4, r3]
    83c0:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    83c4:	d1b0      	bne.n	8328 <d_print_function_type+0xa4>
    83c6:	2700      	movs	r7, #0
    83c8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    83cc:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
    83d0:	4620      	mov	r0, r4
    83d2:	4798      	blx	r3
    83d4:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    83d8:	3301      	adds	r3, #1
    83da:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    83de:	4639      	mov	r1, r7
    83e0:	2301      	movs	r3, #1
    83e2:	e7a2      	b.n	832a <d_print_function_type+0xa6>
    83e4:	2600      	movs	r6, #0
    83e6:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    83ea:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    83ee:	4620      	mov	r0, r4
    83f0:	4798      	blx	r3
    83f2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    83f6:	3301      	adds	r3, #1
    83f8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    83fc:	4631      	mov	r1, r6
    83fe:	2301      	movs	r3, #1
    8400:	e77a      	b.n	82f8 <d_print_function_type+0x74>
    8402:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8406:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    840a:	4620      	mov	r0, r4
    840c:	4798      	blx	r3
    840e:	f642 0329 	movw	r3, #10281	; 0x2829
    8412:	8023      	strh	r3, [r4, #0]
    8414:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
    8418:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    841c:	6932      	ldr	r2, [r6, #16]
    841e:	3301      	adds	r3, #1
    8420:	2102      	movs	r1, #2
    8422:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8426:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    842a:	2a00      	cmp	r2, #0
    842c:	f47f af5b 	bne.w	82e6 <d_print_function_type+0x62>
    8430:	e761      	b.n	82f6 <d_print_function_type+0x72>
    8432:	2200      	movs	r2, #0
    8434:	4619      	mov	r1, r3
    8436:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
    843a:	f8d4 7108 	ldr.w	r7, [r4, #264]	; 0x108
    843e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8442:	4620      	mov	r0, r4
    8444:	47b8      	blx	r7
    8446:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    844a:	2220      	movs	r2, #32
    844c:	3301      	adds	r3, #1
    844e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8452:	7022      	strb	r2, [r4, #0]
    8454:	2101      	movs	r1, #1
    8456:	e767      	b.n	8328 <d_print_function_type+0xa4>
    8458:	00043107 	.word	0x00043107

0000845c <d_print_mod_list>:
    845c:	2a00      	cmp	r2, #0
    845e:	f000 80c2 	beq.w	85e6 <d_print_mod_list+0x18a>
    8462:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    8466:	4605      	mov	r5, r0
    8468:	b088      	sub	sp, #32
    846a:	461e      	mov	r6, r3
    846c:	4614      	mov	r4, r2
    846e:	2701      	movs	r7, #1
    8470:	f8d5 2118 	ldr.w	r2, [r5, #280]	; 0x118
    8474:	b9ca      	cbnz	r2, 84aa <d_print_mod_list+0x4e>
    8476:	68a2      	ldr	r2, [r4, #8]
    8478:	bb0a      	cbnz	r2, 84be <d_print_mod_list+0x62>
    847a:	6862      	ldr	r2, [r4, #4]
    847c:	7811      	ldrb	r1, [r2, #0]
    847e:	b1be      	cbz	r6, 84b0 <d_print_mod_list+0x54>
    8480:	68e3      	ldr	r3, [r4, #12]
    8482:	f8d5 8110 	ldr.w	r8, [r5, #272]	; 0x110
    8486:	60a7      	str	r7, [r4, #8]
    8488:	2929      	cmp	r1, #41	; 0x29
    848a:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
    848e:	d024      	beq.n	84da <d_print_mod_list+0x7e>
    8490:	292a      	cmp	r1, #42	; 0x2a
    8492:	d02c      	beq.n	84ee <d_print_mod_list+0x92>
    8494:	2902      	cmp	r1, #2
    8496:	d034      	beq.n	8502 <d_print_mod_list+0xa6>
    8498:	2111      	movs	r1, #17
    849a:	4628      	mov	r0, r5
    849c:	f7ff fbd6 	bl	7c4c <d_print_mod>
    84a0:	6824      	ldr	r4, [r4, #0]
    84a2:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    84a6:	2c00      	cmp	r4, #0
    84a8:	d1e2      	bne.n	8470 <d_print_mod_list+0x14>
    84aa:	b008      	add	sp, #32
    84ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    84b0:	294e      	cmp	r1, #78	; 0x4e
    84b2:	d004      	beq.n	84be <d_print_mod_list+0x62>
    84b4:	d807      	bhi.n	84c6 <d_print_mod_list+0x6a>
    84b6:	f1a1 031c 	sub.w	r3, r1, #28
    84ba:	2b04      	cmp	r3, #4
    84bc:	d8e0      	bhi.n	8480 <d_print_mod_list+0x24>
    84be:	6824      	ldr	r4, [r4, #0]
    84c0:	2c00      	cmp	r4, #0
    84c2:	d1d5      	bne.n	8470 <d_print_mod_list+0x14>
    84c4:	e7f1      	b.n	84aa <d_print_mod_list+0x4e>
    84c6:	3950      	subs	r1, #80	; 0x50
    84c8:	2901      	cmp	r1, #1
    84ca:	d9f8      	bls.n	84be <d_print_mod_list+0x62>
    84cc:	68e3      	ldr	r3, [r4, #12]
    84ce:	f8d5 8110 	ldr.w	r8, [r5, #272]	; 0x110
    84d2:	60a7      	str	r7, [r4, #8]
    84d4:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
    84d8:	e7de      	b.n	8498 <d_print_mod_list+0x3c>
    84da:	6823      	ldr	r3, [r4, #0]
    84dc:	2111      	movs	r1, #17
    84de:	4628      	mov	r0, r5
    84e0:	f7ff fed0 	bl	8284 <d_print_function_type>
    84e4:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    84e8:	b008      	add	sp, #32
    84ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    84ee:	6823      	ldr	r3, [r4, #0]
    84f0:	2111      	movs	r1, #17
    84f2:	4628      	mov	r0, r5
    84f4:	f000 f8d6 	bl	86a4 <d_print_array_type>
    84f8:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    84fc:	b008      	add	sp, #32
    84fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    8502:	4e64      	ldr	r6, [pc, #400]	; (8694 <d_print_mod_list+0x238>)
    8504:	f8d5 7114 	ldr.w	r7, [r5, #276]	; 0x114
    8508:	68d2      	ldr	r2, [r2, #12]
    850a:	f04f 0900 	mov.w	r9, #0
    850e:	2111      	movs	r1, #17
    8510:	f8c5 9114 	str.w	r9, [r5, #276]	; 0x114
    8514:	4628      	mov	r0, r5
    8516:	f7ff fb6b 	bl	7bf0 <d_print_comp>
    851a:	f106 0a01 	add.w	sl, r6, #1
    851e:	f8c5 7114 	str.w	r7, [r5, #276]	; 0x114
    8522:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    8526:	273a      	movs	r7, #58	; 0x3a
    8528:	e00a      	b.n	8540 <d_print_mod_list+0xe4>
    852a:	460b      	mov	r3, r1
    852c:	3101      	adds	r1, #1
    852e:	4556      	cmp	r6, sl
    8530:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    8534:	54ef      	strb	r7, [r5, r3]
    8536:	f885 7104 	strb.w	r7, [r5, #260]	; 0x104
    853a:	d013      	beq.n	8564 <d_print_mod_list+0x108>
    853c:	f816 7f01 	ldrb.w	r7, [r6, #1]!
    8540:	29ff      	cmp	r1, #255	; 0xff
    8542:	d1f2      	bne.n	852a <d_print_mod_list+0xce>
    8544:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    8548:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    854c:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    8550:	4628      	mov	r0, r5
    8552:	4798      	blx	r3
    8554:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    8558:	3301      	adds	r3, #1
    855a:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    855e:	2101      	movs	r1, #1
    8560:	2300      	movs	r3, #0
    8562:	e7e4      	b.n	852e <d_print_mod_list+0xd2>
    8564:	6863      	ldr	r3, [r4, #4]
    8566:	691c      	ldr	r4, [r3, #16]
    8568:	7823      	ldrb	r3, [r4, #0]
    856a:	2b48      	cmp	r3, #72	; 0x48
    856c:	d017      	beq.n	859e <d_print_mod_list+0x142>
    856e:	2b4e      	cmp	r3, #78	; 0x4e
    8570:	f1a3 0250 	sub.w	r2, r3, #80	; 0x50
    8574:	f1a3 011c 	sub.w	r1, r3, #28
    8578:	d00e      	beq.n	8598 <d_print_mod_list+0x13c>
    857a:	d80b      	bhi.n	8594 <d_print_mod_list+0x138>
    857c:	2904      	cmp	r1, #4
    857e:	d90b      	bls.n	8598 <d_print_mod_list+0x13c>
    8580:	4622      	mov	r2, r4
    8582:	2111      	movs	r1, #17
    8584:	4628      	mov	r0, r5
    8586:	f7ff fb33 	bl	7bf0 <d_print_comp>
    858a:	f8c5 8110 	str.w	r8, [r5, #272]	; 0x110
    858e:	b008      	add	sp, #32
    8590:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    8594:	2a01      	cmp	r2, #1
    8596:	d8f3      	bhi.n	8580 <d_print_mod_list+0x124>
    8598:	68e4      	ldr	r4, [r4, #12]
    859a:	7823      	ldrb	r3, [r4, #0]
    859c:	e7e7      	b.n	856e <d_print_mod_list+0x112>
    859e:	4f3e      	ldr	r7, [pc, #248]	; (8698 <d_print_mod_list+0x23c>)
    85a0:	267b      	movs	r6, #123	; 0x7b
    85a2:	f107 0a0c 	add.w	sl, r7, #12
    85a6:	f04f 0900 	mov.w	r9, #0
    85aa:	e00a      	b.n	85c2 <d_print_mod_list+0x166>
    85ac:	460b      	mov	r3, r1
    85ae:	3101      	adds	r1, #1
    85b0:	4557      	cmp	r7, sl
    85b2:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    85b6:	54ee      	strb	r6, [r5, r3]
    85b8:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
    85bc:	d014      	beq.n	85e8 <d_print_mod_list+0x18c>
    85be:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    85c2:	29ff      	cmp	r1, #255	; 0xff
    85c4:	d1f2      	bne.n	85ac <d_print_mod_list+0x150>
    85c6:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    85ca:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    85ce:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    85d2:	4628      	mov	r0, r5
    85d4:	4798      	blx	r3
    85d6:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    85da:	3301      	adds	r3, #1
    85dc:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    85e0:	2101      	movs	r1, #1
    85e2:	2300      	movs	r3, #0
    85e4:	e7e4      	b.n	85b0 <d_print_mod_list+0x154>
    85e6:	4770      	bx	lr
    85e8:	6922      	ldr	r2, [r4, #16]
    85ea:	492c      	ldr	r1, [pc, #176]	; (869c <d_print_mod_list+0x240>)
    85ec:	3201      	adds	r2, #1
    85ee:	a801      	add	r0, sp, #4
    85f0:	f001 ffc8 	bl	a584 <sprintf>
    85f4:	a801      	add	r0, sp, #4
    85f6:	f006 fb43 	bl	ec80 <strlen>
    85fa:	b320      	cbz	r0, 8646 <d_print_mod_list+0x1ea>
    85fc:	ae01      	add	r6, sp, #4
    85fe:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    8602:	eb06 0a00 	add.w	sl, r6, r0
    8606:	f04f 0900 	mov.w	r9, #0
    860a:	e008      	b.n	861e <d_print_mod_list+0x1c2>
    860c:	460b      	mov	r3, r1
    860e:	3101      	adds	r1, #1
    8610:	4556      	cmp	r6, sl
    8612:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    8616:	54ef      	strb	r7, [r5, r3]
    8618:	f885 7104 	strb.w	r7, [r5, #260]	; 0x104
    861c:	d015      	beq.n	864a <d_print_mod_list+0x1ee>
    861e:	29ff      	cmp	r1, #255	; 0xff
    8620:	f816 7b01 	ldrb.w	r7, [r6], #1
    8624:	d1f2      	bne.n	860c <d_print_mod_list+0x1b0>
    8626:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    862a:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    862e:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    8632:	4628      	mov	r0, r5
    8634:	4798      	blx	r3
    8636:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    863a:	3301      	adds	r3, #1
    863c:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    8640:	2101      	movs	r1, #1
    8642:	2300      	movs	r3, #0
    8644:	e7e4      	b.n	8610 <d_print_mod_list+0x1b4>
    8646:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
    864a:	4f15      	ldr	r7, [pc, #84]	; (86a0 <d_print_mod_list+0x244>)
    864c:	267d      	movs	r6, #125	; 0x7d
    864e:	f107 0a02 	add.w	sl, r7, #2
    8652:	f04f 0900 	mov.w	r9, #0
    8656:	e00a      	b.n	866e <d_print_mod_list+0x212>
    8658:	460b      	mov	r3, r1
    865a:	3101      	adds	r1, #1
    865c:	4557      	cmp	r7, sl
    865e:	f8c5 1100 	str.w	r1, [r5, #256]	; 0x100
    8662:	54ee      	strb	r6, [r5, r3]
    8664:	f885 6104 	strb.w	r6, [r5, #260]	; 0x104
    8668:	d096      	beq.n	8598 <d_print_mod_list+0x13c>
    866a:	f817 6f01 	ldrb.w	r6, [r7, #1]!
    866e:	29ff      	cmp	r1, #255	; 0xff
    8670:	d1f2      	bne.n	8658 <d_print_mod_list+0x1fc>
    8672:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
    8676:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
    867a:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
    867e:	4628      	mov	r0, r5
    8680:	4798      	blx	r3
    8682:	f8d5 3128 	ldr.w	r3, [r5, #296]	; 0x128
    8686:	3301      	adds	r3, #1
    8688:	f8c5 3128 	str.w	r3, [r5, #296]	; 0x128
    868c:	2101      	movs	r1, #1
    868e:	2300      	movs	r3, #0
    8690:	e7e4      	b.n	865c <d_print_mod_list+0x200>
    8692:	bf00      	nop
    8694:	20001cfc 	.word	0x20001cfc
    8698:	20001d00 	.word	0x20001d00
    869c:	20001cb0 	.word	0x20001cb0
    86a0:	20001d10 	.word	0x20001d10

000086a4 <d_print_array_type>:
    86a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    86a8:	4604      	mov	r4, r0
    86aa:	4617      	mov	r7, r2
    86ac:	b153      	cbz	r3, 86c4 <d_print_array_type+0x20>
    86ae:	461e      	mov	r6, r3
    86b0:	689d      	ldr	r5, [r3, #8]
    86b2:	b37d      	cbz	r5, 8714 <d_print_array_type+0x70>
    86b4:	681b      	ldr	r3, [r3, #0]
    86b6:	2b00      	cmp	r3, #0
    86b8:	d1fa      	bne.n	86b0 <d_print_array_type+0xc>
    86ba:	4632      	mov	r2, r6
    86bc:	2111      	movs	r1, #17
    86be:	4620      	mov	r0, r4
    86c0:	f7ff fecc 	bl	845c <d_print_mod_list>
    86c4:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    86c8:	2bff      	cmp	r3, #255	; 0xff
    86ca:	f000 809d 	beq.w	8808 <d_print_array_type+0x164>
    86ce:	1c59      	adds	r1, r3, #1
    86d0:	2220      	movs	r2, #32
    86d2:	29ff      	cmp	r1, #255	; 0xff
    86d4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    86d8:	54e2      	strb	r2, [r4, r3]
    86da:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    86de:	d027      	beq.n	8730 <d_print_array_type+0x8c>
    86e0:	225b      	movs	r2, #91	; 0x5b
    86e2:	1c4b      	adds	r3, r1, #1
    86e4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    86e8:	5462      	strb	r2, [r4, r1]
    86ea:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    86ee:	68fa      	ldr	r2, [r7, #12]
    86f0:	b12a      	cbz	r2, 86fe <d_print_array_type+0x5a>
    86f2:	2111      	movs	r1, #17
    86f4:	4620      	mov	r0, r4
    86f6:	f7ff fa7b 	bl	7bf0 <d_print_comp>
    86fa:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    86fe:	2bff      	cmp	r3, #255	; 0xff
    8700:	d02f      	beq.n	8762 <d_print_array_type+0xbe>
    8702:	1c59      	adds	r1, r3, #1
    8704:	225d      	movs	r2, #93	; 0x5d
    8706:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    870a:	54e2      	strb	r2, [r4, r3]
    870c:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8710:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    8714:	685b      	ldr	r3, [r3, #4]
    8716:	781b      	ldrb	r3, [r3, #0]
    8718:	2b2a      	cmp	r3, #42	; 0x2a
    871a:	d132      	bne.n	8782 <d_print_array_type+0xde>
    871c:	2111      	movs	r1, #17
    871e:	462b      	mov	r3, r5
    8720:	4632      	mov	r2, r6
    8722:	4620      	mov	r0, r4
    8724:	f7ff fe9a 	bl	845c <d_print_mod_list>
    8728:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    872c:	29ff      	cmp	r1, #255	; 0xff
    872e:	d1d7      	bne.n	86e0 <d_print_array_type+0x3c>
    8730:	2200      	movs	r2, #0
    8732:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8736:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
    873a:	4620      	mov	r0, r4
    873c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8740:	4798      	blx	r3
    8742:	225b      	movs	r2, #91	; 0x5b
    8744:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8748:	7022      	strb	r2, [r4, #0]
    874a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    874e:	68fa      	ldr	r2, [r7, #12]
    8750:	1c59      	adds	r1, r3, #1
    8752:	2301      	movs	r3, #1
    8754:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
    8758:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    875c:	2a00      	cmp	r2, #0
    875e:	d1c8      	bne.n	86f2 <d_print_array_type+0x4e>
    8760:	e7cf      	b.n	8702 <d_print_array_type+0x5e>
    8762:	2500      	movs	r5, #0
    8764:	4619      	mov	r1, r3
    8766:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    876a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    876e:	4620      	mov	r0, r4
    8770:	4798      	blx	r3
    8772:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8776:	2101      	movs	r1, #1
    8778:	440b      	add	r3, r1
    877a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    877e:	462b      	mov	r3, r5
    8780:	e7c0      	b.n	8704 <d_print_array_type+0x60>
    8782:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 8868 <d_print_array_type+0x1c4>
    8786:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    878a:	f04f 0920 	mov.w	r9, #32
    878e:	f108 0a01 	add.w	sl, r8, #1
    8792:	e00c      	b.n	87ae <d_print_array_type+0x10a>
    8794:	460b      	mov	r3, r1
    8796:	45d0      	cmp	r8, sl
    8798:	f101 0101 	add.w	r1, r1, #1
    879c:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    87a0:	f804 9003 	strb.w	r9, [r4, r3]
    87a4:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
    87a8:	d01a      	beq.n	87e0 <d_print_array_type+0x13c>
    87aa:	f818 9f01 	ldrb.w	r9, [r8, #1]!
    87ae:	29ff      	cmp	r1, #255	; 0xff
    87b0:	d1f0      	bne.n	8794 <d_print_array_type+0xf0>
    87b2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    87b6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    87ba:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    87be:	4620      	mov	r0, r4
    87c0:	4798      	blx	r3
    87c2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    87c6:	3301      	adds	r3, #1
    87c8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    87cc:	2300      	movs	r3, #0
    87ce:	2101      	movs	r1, #1
    87d0:	45d0      	cmp	r8, sl
    87d2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    87d6:	f804 9003 	strb.w	r9, [r4, r3]
    87da:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
    87de:	d1e4      	bne.n	87aa <d_print_array_type+0x106>
    87e0:	2111      	movs	r1, #17
    87e2:	2300      	movs	r3, #0
    87e4:	4632      	mov	r2, r6
    87e6:	4620      	mov	r0, r4
    87e8:	f7ff fe38 	bl	845c <d_print_mod_list>
    87ec:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    87f0:	29ff      	cmp	r1, #255	; 0xff
    87f2:	d026      	beq.n	8842 <d_print_array_type+0x19e>
    87f4:	1c4b      	adds	r3, r1, #1
    87f6:	2229      	movs	r2, #41	; 0x29
    87f8:	2bff      	cmp	r3, #255	; 0xff
    87fa:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    87fe:	5462      	strb	r2, [r4, r1]
    8800:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    8804:	f47f af63 	bne.w	86ce <d_print_array_type+0x2a>
    8808:	2200      	movs	r2, #0
    880a:	4619      	mov	r1, r3
    880c:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
    8810:	f8d4 5108 	ldr.w	r5, [r4, #264]	; 0x108
    8814:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8818:	4620      	mov	r0, r4
    881a:	47a8      	blx	r5
    881c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8820:	225b      	movs	r2, #91	; 0x5b
    8822:	f645 3120 	movw	r1, #23328	; 0x5b20
    8826:	8021      	strh	r1, [r4, #0]
    8828:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
    882c:	68fa      	ldr	r2, [r7, #12]
    882e:	3301      	adds	r3, #1
    8830:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8834:	2302      	movs	r3, #2
    8836:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    883a:	2a00      	cmp	r2, #0
    883c:	f47f af59 	bne.w	86f2 <d_print_array_type+0x4e>
    8840:	e75f      	b.n	8702 <d_print_array_type+0x5e>
    8842:	2200      	movs	r2, #0
    8844:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8848:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
    884c:	4620      	mov	r0, r4
    884e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8852:	4798      	blx	r3
    8854:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8858:	2229      	movs	r2, #41	; 0x29
    885a:	3301      	adds	r3, #1
    885c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8860:	7022      	strb	r2, [r4, #0]
    8862:	2301      	movs	r3, #1
    8864:	e733      	b.n	86ce <d_print_array_type+0x2a>
    8866:	bf00      	nop
    8868:	20001f08 	.word	0x20001f08

0000886c <d_print_expr_op>:
    886c:	7811      	ldrb	r1, [r2, #0]
    886e:	2932      	cmp	r1, #50	; 0x32
    8870:	d002      	beq.n	8878 <d_print_expr_op+0xc>
    8872:	2111      	movs	r1, #17
    8874:	f7ff b9bc 	b.w	7bf0 <d_print_comp>
    8878:	68d3      	ldr	r3, [r2, #12]
    887a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    887e:	e9d3 5701 	ldrd	r5, r7, [r3, #4]
    8882:	b367      	cbz	r7, 88de <d_print_expr_op+0x72>
    8884:	442f      	add	r7, r5
    8886:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    888a:	4604      	mov	r4, r0
    888c:	3d01      	subs	r5, #1
    888e:	3f01      	subs	r7, #1
    8890:	f04f 0800 	mov.w	r8, #0
    8894:	e009      	b.n	88aa <d_print_expr_op+0x3e>
    8896:	460b      	mov	r3, r1
    8898:	42bd      	cmp	r5, r7
    889a:	f101 0101 	add.w	r1, r1, #1
    889e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    88a2:	54e6      	strb	r6, [r4, r3]
    88a4:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    88a8:	d019      	beq.n	88de <d_print_expr_op+0x72>
    88aa:	29ff      	cmp	r1, #255	; 0xff
    88ac:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    88b0:	d1f1      	bne.n	8896 <d_print_expr_op+0x2a>
    88b2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    88b6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    88ba:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    88be:	4620      	mov	r0, r4
    88c0:	4798      	blx	r3
    88c2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    88c6:	3301      	adds	r3, #1
    88c8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    88cc:	2300      	movs	r3, #0
    88ce:	2101      	movs	r1, #1
    88d0:	42bd      	cmp	r5, r7
    88d2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    88d6:	54e6      	strb	r6, [r4, r3]
    88d8:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    88dc:	d1e5      	bne.n	88aa <d_print_expr_op+0x3e>
    88de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    88e2:	bf00      	nop

000088e4 <d_demangle_callback.constprop.0>:
    88e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    88e8:	ed2d 8b02 	vpush	{d8}
    88ec:	b0e7      	sub	sp, #412	; 0x19c
    88ee:	7803      	ldrb	r3, [r0, #0]
    88f0:	af00      	add	r7, sp, #0
    88f2:	2b5f      	cmp	r3, #95	; 0x5f
    88f4:	e9c7 2100 	strd	r2, r1, [r7]
    88f8:	4605      	mov	r5, r0
    88fa:	f000 8144 	beq.w	8b86 <d_demangle_callback.constprop.0+0x2a2>
    88fe:	49a9      	ldr	r1, [pc, #676]	; (8ba4 <d_demangle_callback.constprop.0+0x2c0>)
    8900:	2208      	movs	r2, #8
    8902:	4628      	mov	r0, r5
    8904:	f001 fd44 	bl	a390 <strncmp>
    8908:	2800      	cmp	r0, #0
    890a:	f000 8107 	beq.w	8b1c <d_demangle_callback.constprop.0+0x238>
    890e:	f04f 0900 	mov.w	r9, #0
    8912:	2301      	movs	r3, #1
    8914:	f1b9 0f02 	cmp.w	r9, #2
    8918:	647b      	str	r3, [r7, #68]	; 0x44
    891a:	bf0c      	ite	eq
    891c:	2345      	moveq	r3, #69	; 0x45
    891e:	2346      	movne	r3, #70	; 0x46
    8920:	f1a9 0a02 	sub.w	sl, r9, #2
    8924:	ee08 3a10 	vmov	s16, r3
    8928:	fa5f fa8a 	uxtb.w	sl, sl
    892c:	4628      	mov	r0, r5
    892e:	f006 f9a7 	bl	ec80 <strlen>
    8932:	182b      	adds	r3, r5, r0
    8934:	0042      	lsls	r2, r0, #1
    8936:	2100      	movs	r1, #0
    8938:	e9c7 5303 	strd	r5, r3, [r7, #12]
    893c:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
    8940:	f04f 0311 	mov.w	r3, #17
    8944:	e9c7 3505 	strd	r3, r5, [r7, #20]
    8948:	e9c7 1208 	strd	r1, r2, [r7, #32]
    894c:	e9c7 100b 	strd	r1, r0, [r7, #44]	; 0x2c
    8950:	e9c7 110d 	strd	r1, r1, [r7, #52]	; 0x34
    8954:	e9c7 110f 	strd	r1, r1, [r7, #60]	; 0x3c
    8958:	64b9      	str	r1, [r7, #72]	; 0x48
    895a:	f200 811b 	bhi.w	8b94 <d_demangle_callback.constprop.0+0x2b0>
    895e:	0083      	lsls	r3, r0, #2
    8960:	46e8      	mov	r8, sp
    8962:	eb00 0080 	add.w	r0, r0, r0, lsl #2
    8966:	3307      	adds	r3, #7
    8968:	eba8 00c0 	sub.w	r0, r8, r0, lsl #3
    896c:	4685      	mov	sp, r0
    896e:	f023 0307 	bic.w	r3, r3, #7
    8972:	466e      	mov	r6, sp
    8974:	f1b9 0f01 	cmp.w	r9, #1
    8978:	ebad 0d03 	sub.w	sp, sp, r3
    897c:	61fe      	str	r6, [r7, #28]
    897e:	f8c7 d028 	str.w	sp, [r7, #40]	; 0x28
    8982:	d040      	beq.n	8a06 <d_demangle_callback.constprop.0+0x122>
    8984:	f1ba 0f01 	cmp.w	sl, #1
    8988:	d835      	bhi.n	89f6 <d_demangle_callback.constprop.0+0x112>
    898a:	7aeb      	ldrb	r3, [r5, #11]
    898c:	f105 040b 	add.w	r4, r5, #11
    8990:	2b5f      	cmp	r3, #95	; 0x5f
    8992:	61bc      	str	r4, [r7, #24]
    8994:	d103      	bne.n	899e <d_demangle_callback.constprop.0+0xba>
    8996:	7b2b      	ldrb	r3, [r5, #12]
    8998:	2b5a      	cmp	r3, #90	; 0x5a
    899a:	f000 80b0 	beq.w	8afe <d_demangle_callback.constprop.0+0x21a>
    899e:	2a00      	cmp	r2, #0
    89a0:	f340 80ab 	ble.w	8afa <d_demangle_callback.constprop.0+0x216>
    89a4:	4620      	mov	r0, r4
    89a6:	f006 f96b 	bl	ec80 <strlen>
    89aa:	2300      	movs	r3, #0
    89ac:	2201      	movs	r2, #1
    89ae:	e9c6 3301 	strd	r3, r3, [r6, #4]
    89b2:	623a      	str	r2, [r7, #32]
    89b4:	2800      	cmp	r0, #0
    89b6:	f000 80a0 	beq.w	8afa <d_demangle_callback.constprop.0+0x216>
    89ba:	e9c6 4003 	strd	r4, r0, [r6, #12]
    89be:	7033      	strb	r3, [r6, #0]
    89c0:	2300      	movs	r3, #0
    89c2:	4632      	mov	r2, r6
    89c4:	ee18 1a10 	vmov	r1, s16
    89c8:	f107 000c 	add.w	r0, r7, #12
    89cc:	f7fa fc6c 	bl	32a8 <d_make_comp>
    89d0:	4606      	mov	r6, r0
    89d2:	4620      	mov	r0, r4
    89d4:	f006 f954 	bl	ec80 <strlen>
    89d8:	1823      	adds	r3, r4, r0
    89da:	61bb      	str	r3, [r7, #24]
    89dc:	5c23      	ldrb	r3, [r4, r0]
    89de:	b913      	cbnz	r3, 89e6 <d_demangle_callback.constprop.0+0x102>
    89e0:	2e00      	cmp	r6, #0
    89e2:	f040 80e1 	bne.w	8ba8 <d_demangle_callback.constprop.0+0x2c4>
    89e6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    89e8:	3301      	adds	r3, #1
    89ea:	f040 80c3 	bne.w	8b74 <d_demangle_callback.constprop.0+0x290>
    89ee:	2300      	movs	r3, #0
    89f0:	647b      	str	r3, [r7, #68]	; 0x44
    89f2:	46c5      	mov	sp, r8
    89f4:	e79a      	b.n	892c <d_demangle_callback.constprop.0+0x48>
    89f6:	f107 000c 	add.w	r0, r7, #12
    89fa:	f7fb f8a7 	bl	3b4c <d_type>
    89fe:	69bb      	ldr	r3, [r7, #24]
    8a00:	4606      	mov	r6, r0
    8a02:	781b      	ldrb	r3, [r3, #0]
    8a04:	e7eb      	b.n	89de <d_demangle_callback.constprop.0+0xfa>
    8a06:	782b      	ldrb	r3, [r5, #0]
    8a08:	2b5f      	cmp	r3, #95	; 0x5f
    8a0a:	d1ec      	bne.n	89e6 <d_demangle_callback.constprop.0+0x102>
    8a0c:	786b      	ldrb	r3, [r5, #1]
    8a0e:	1c6a      	adds	r2, r5, #1
    8a10:	2b5a      	cmp	r3, #90	; 0x5a
    8a12:	61ba      	str	r2, [r7, #24]
    8a14:	d1e7      	bne.n	89e6 <d_demangle_callback.constprop.0+0x102>
    8a16:	78ab      	ldrb	r3, [r5, #2]
    8a18:	1caa      	adds	r2, r5, #2
    8a1a:	2b47      	cmp	r3, #71	; 0x47
    8a1c:	61ba      	str	r2, [r7, #24]
    8a1e:	f000 809b 	beq.w	8b58 <d_demangle_callback.constprop.0+0x274>
    8a22:	2b54      	cmp	r3, #84	; 0x54
    8a24:	f000 8098 	beq.w	8b58 <d_demangle_callback.constprop.0+0x274>
    8a28:	4649      	mov	r1, r9
    8a2a:	f107 000c 	add.w	r0, r7, #12
    8a2e:	f7fc ffe9 	bl	5a04 <d_encoding.part.0>
    8a32:	697b      	ldr	r3, [r7, #20]
    8a34:	07db      	lsls	r3, r3, #31
    8a36:	4606      	mov	r6, r0
    8a38:	f140 8097 	bpl.w	8b6a <d_demangle_callback.constprop.0+0x286>
    8a3c:	69ba      	ldr	r2, [r7, #24]
    8a3e:	7813      	ldrb	r3, [r2, #0]
    8a40:	2b2e      	cmp	r3, #46	; 0x2e
    8a42:	d1cc      	bne.n	89de <d_demangle_callback.constprop.0+0xfa>
    8a44:	4633      	mov	r3, r6
    8a46:	4616      	mov	r6, r2
    8a48:	461a      	mov	r2, r3
    8a4a:	7873      	ldrb	r3, [r6, #1]
    8a4c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
    8a50:	2919      	cmp	r1, #25
    8a52:	f04f 0b00 	mov.w	fp, #0
    8a56:	d945      	bls.n	8ae4 <d_demangle_callback.constprop.0+0x200>
    8a58:	2b5f      	cmp	r3, #95	; 0x5f
    8a5a:	d043      	beq.n	8ae4 <d_demangle_callback.constprop.0+0x200>
    8a5c:	3b30      	subs	r3, #48	; 0x30
    8a5e:	2b09      	cmp	r3, #9
    8a60:	f200 80fd 	bhi.w	8c5e <d_demangle_callback.constprop.0+0x37a>
    8a64:	7831      	ldrb	r1, [r6, #0]
    8a66:	4634      	mov	r4, r6
    8a68:	292e      	cmp	r1, #46	; 0x2e
    8a6a:	d112      	bne.n	8a92 <d_demangle_callback.constprop.0+0x1ae>
    8a6c:	7863      	ldrb	r3, [r4, #1]
    8a6e:	3b30      	subs	r3, #48	; 0x30
    8a70:	2b09      	cmp	r3, #9
    8a72:	d80e      	bhi.n	8a92 <d_demangle_callback.constprop.0+0x1ae>
    8a74:	78a3      	ldrb	r3, [r4, #2]
    8a76:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    8a7a:	1ca0      	adds	r0, r4, #2
    8a7c:	2909      	cmp	r1, #9
    8a7e:	4604      	mov	r4, r0
    8a80:	d805      	bhi.n	8a8e <d_demangle_callback.constprop.0+0x1aa>
    8a82:	f814 3f01 	ldrb.w	r3, [r4, #1]!
    8a86:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    8a8a:	2909      	cmp	r1, #9
    8a8c:	d9f9      	bls.n	8a82 <d_demangle_callback.constprop.0+0x19e>
    8a8e:	2b2e      	cmp	r3, #46	; 0x2e
    8a90:	d0ec      	beq.n	8a6c <d_demangle_callback.constprop.0+0x188>
    8a92:	e9d7 1308 	ldrd	r1, r3, [r7, #32]
    8a96:	4299      	cmp	r1, r3
    8a98:	61bc      	str	r4, [r7, #24]
    8a9a:	eba4 0006 	sub.w	r0, r4, r6
    8a9e:	da67      	bge.n	8b70 <d_demangle_callback.constprop.0+0x28c>
    8aa0:	f8d7 c01c 	ldr.w	ip, [r7, #28]
    8aa4:	eb01 0e81 	add.w	lr, r1, r1, lsl #2
    8aa8:	eb0c 038e 	add.w	r3, ip, lr, lsl #2
    8aac:	3101      	adds	r1, #1
    8aae:	2800      	cmp	r0, #0
    8ab0:	e9c3 bb01 	strd	fp, fp, [r3, #4]
    8ab4:	6239      	str	r1, [r7, #32]
    8ab6:	dd5b      	ble.n	8b70 <d_demangle_callback.constprop.0+0x28c>
    8ab8:	e9c3 bb01 	strd	fp, fp, [r3, #4]
    8abc:	f80c b02e 	strb.w	fp, [ip, lr, lsl #2]
    8ac0:	e9c3 6003 	strd	r6, r0, [r3, #12]
    8ac4:	214f      	movs	r1, #79	; 0x4f
    8ac6:	f107 000c 	add.w	r0, r7, #12
    8aca:	f7fa fbed 	bl	32a8 <d_make_comp>
    8ace:	7823      	ldrb	r3, [r4, #0]
    8ad0:	2b2e      	cmp	r3, #46	; 0x2e
    8ad2:	4602      	mov	r2, r0
    8ad4:	f040 80c1 	bne.w	8c5a <d_demangle_callback.constprop.0+0x376>
    8ad8:	4626      	mov	r6, r4
    8ada:	7873      	ldrb	r3, [r6, #1]
    8adc:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
    8ae0:	2919      	cmp	r1, #25
    8ae2:	d8b9      	bhi.n	8a58 <d_demangle_callback.constprop.0+0x174>
    8ae4:	1cb3      	adds	r3, r6, #2
    8ae6:	461c      	mov	r4, r3
    8ae8:	f813 1b01 	ldrb.w	r1, [r3], #1
    8aec:	f1a1 0061 	sub.w	r0, r1, #97	; 0x61
    8af0:	2819      	cmp	r0, #25
    8af2:	d9f8      	bls.n	8ae6 <d_demangle_callback.constprop.0+0x202>
    8af4:	295f      	cmp	r1, #95	; 0x5f
    8af6:	d0f6      	beq.n	8ae6 <d_demangle_callback.constprop.0+0x202>
    8af8:	e7b6      	b.n	8a68 <d_demangle_callback.constprop.0+0x184>
    8afa:	2600      	movs	r6, #0
    8afc:	e760      	b.n	89c0 <d_demangle_callback.constprop.0+0xdc>
    8afe:	7b6b      	ldrb	r3, [r5, #13]
    8b00:	f105 020d 	add.w	r2, r5, #13
    8b04:	2b47      	cmp	r3, #71	; 0x47
    8b06:	61ba      	str	r2, [r7, #24]
    8b08:	f107 000c 	add.w	r0, r7, #12
    8b0c:	d001      	beq.n	8b12 <d_demangle_callback.constprop.0+0x22e>
    8b0e:	2b54      	cmp	r3, #84	; 0x54
    8b10:	d11d      	bne.n	8b4e <d_demangle_callback.constprop.0+0x26a>
    8b12:	f7fc fbef 	bl	52f4 <d_special_name>
    8b16:	69bc      	ldr	r4, [r7, #24]
    8b18:	4606      	mov	r6, r0
    8b1a:	e751      	b.n	89c0 <d_demangle_callback.constprop.0+0xdc>
    8b1c:	7a2b      	ldrb	r3, [r5, #8]
    8b1e:	2b2e      	cmp	r3, #46	; 0x2e
    8b20:	d004      	beq.n	8b2c <d_demangle_callback.constprop.0+0x248>
    8b22:	2b5f      	cmp	r3, #95	; 0x5f
    8b24:	d002      	beq.n	8b2c <d_demangle_callback.constprop.0+0x248>
    8b26:	2b24      	cmp	r3, #36	; 0x24
    8b28:	f47f aef1 	bne.w	890e <d_demangle_callback.constprop.0+0x2a>
    8b2c:	7a6b      	ldrb	r3, [r5, #9]
    8b2e:	2b44      	cmp	r3, #68	; 0x44
    8b30:	d002      	beq.n	8b38 <d_demangle_callback.constprop.0+0x254>
    8b32:	2b49      	cmp	r3, #73	; 0x49
    8b34:	f47f aeeb 	bne.w	890e <d_demangle_callback.constprop.0+0x2a>
    8b38:	7aaa      	ldrb	r2, [r5, #10]
    8b3a:	2a5f      	cmp	r2, #95	; 0x5f
    8b3c:	f47f aee7 	bne.w	890e <d_demangle_callback.constprop.0+0x2a>
    8b40:	2b49      	cmp	r3, #73	; 0x49
    8b42:	bf0c      	ite	eq
    8b44:	f04f 0902 	moveq.w	r9, #2
    8b48:	f04f 0903 	movne.w	r9, #3
    8b4c:	e6e1      	b.n	8912 <d_demangle_callback.constprop.0+0x2e>
    8b4e:	f7fc ff59 	bl	5a04 <d_encoding.part.0>
    8b52:	69bc      	ldr	r4, [r7, #24]
    8b54:	4606      	mov	r6, r0
    8b56:	e733      	b.n	89c0 <d_demangle_callback.constprop.0+0xdc>
    8b58:	f107 000c 	add.w	r0, r7, #12
    8b5c:	f7fc fbca 	bl	52f4 <d_special_name>
    8b60:	697b      	ldr	r3, [r7, #20]
    8b62:	07db      	lsls	r3, r3, #31
    8b64:	4606      	mov	r6, r0
    8b66:	f53f af69 	bmi.w	8a3c <d_demangle_callback.constprop.0+0x158>
    8b6a:	69bb      	ldr	r3, [r7, #24]
    8b6c:	781b      	ldrb	r3, [r3, #0]
    8b6e:	e736      	b.n	89de <d_demangle_callback.constprop.0+0xfa>
    8b70:	2300      	movs	r3, #0
    8b72:	e7a7      	b.n	8ac4 <d_demangle_callback.constprop.0+0x1e0>
    8b74:	2000      	movs	r0, #0
    8b76:	f507 77ce 	add.w	r7, r7, #412	; 0x19c
    8b7a:	46c5      	mov	sp, r8
    8b7c:	46bd      	mov	sp, r7
    8b7e:	ecbd 8b02 	vpop	{d8}
    8b82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8b86:	7843      	ldrb	r3, [r0, #1]
    8b88:	2b5a      	cmp	r3, #90	; 0x5a
    8b8a:	f47f aeb8 	bne.w	88fe <d_demangle_callback.constprop.0+0x1a>
    8b8e:	f04f 0901 	mov.w	r9, #1
    8b92:	e6be      	b.n	8912 <d_demangle_callback.constprop.0+0x2e>
    8b94:	4608      	mov	r0, r1
    8b96:	f507 77ce 	add.w	r7, r7, #412	; 0x19c
    8b9a:	46bd      	mov	sp, r7
    8b9c:	ecbd 8b02 	vpop	{d8}
    8ba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8ba4:	20002000 	.word	0x20002000
    8ba8:	f107 044c 	add.w	r4, r7, #76	; 0x4c
    8bac:	687a      	ldr	r2, [r7, #4]
    8bae:	f8c4 2108 	str.w	r2, [r4, #264]	; 0x108
    8bb2:	4631      	mov	r1, r6
    8bb4:	683a      	ldr	r2, [r7, #0]
    8bb6:	f8c4 210c 	str.w	r2, [r4, #268]	; 0x10c
    8bba:	4620      	mov	r0, r4
    8bbc:	e9c4 3344 	strd	r3, r3, [r4, #272]	; 0x110
    8bc0:	e9c4 3349 	strd	r3, r3, [r4, #292]	; 0x124
    8bc4:	e9c4 3346 	strd	r3, r3, [r4, #280]	; 0x118
    8bc8:	e9c4 334d 	strd	r3, r3, [r4, #308]	; 0x134
    8bcc:	e9c4 3350 	strd	r3, r3, [r4, #320]	; 0x140
    8bd0:	607b      	str	r3, [r7, #4]
    8bd2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8bd6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8bda:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
    8bde:	f8c4 312c 	str.w	r3, [r4, #300]	; 0x12c
    8be2:	f7fa fc53 	bl	348c <d_count_templates_scopes>
    8be6:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
    8bea:	687b      	ldr	r3, [r7, #4]
    8bec:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
    8bf0:	da01      	bge.n	8bf6 <d_demangle_callback.constprop.0+0x312>
    8bf2:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
    8bf6:	f8d4 1138 	ldr.w	r1, [r4, #312]	; 0x138
    8bfa:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
    8bfe:	2901      	cmp	r1, #1
    8c00:	fb01 f303 	mul.w	r3, r1, r3
    8c04:	4632      	mov	r2, r6
    8c06:	bfb8      	it	lt
    8c08:	2101      	movlt	r1, #1
    8c0a:	466e      	mov	r6, sp
    8c0c:	eba6 01c1 	sub.w	r1, r6, r1, lsl #3
    8c10:	2b01      	cmp	r3, #1
    8c12:	468d      	mov	sp, r1
    8c14:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
    8c18:	4668      	mov	r0, sp
    8c1a:	bfb8      	it	lt
    8c1c:	2301      	movlt	r3, #1
    8c1e:	eba0 03c3 	sub.w	r3, r0, r3, lsl #3
    8c22:	469d      	mov	sp, r3
    8c24:	2500      	movs	r5, #0
    8c26:	f8c4 1130 	str.w	r1, [r4, #304]	; 0x130
    8c2a:	4620      	mov	r0, r4
    8c2c:	2111      	movs	r1, #17
    8c2e:	f8c4 d13c 	str.w	sp, [r4, #316]	; 0x13c
    8c32:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
    8c36:	f7fe ffdb 	bl	7bf0 <d_print_comp>
    8c3a:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8c3e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8c42:	5465      	strb	r5, [r4, r1]
    8c44:	4620      	mov	r0, r4
    8c46:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8c4a:	46b5      	mov	sp, r6
    8c4c:	4798      	blx	r3
    8c4e:	f8d4 0118 	ldr.w	r0, [r4, #280]	; 0x118
    8c52:	fab0 f080 	clz	r0, r0
    8c56:	0940      	lsrs	r0, r0, #5
    8c58:	e78d      	b.n	8b76 <d_demangle_callback.constprop.0+0x292>
    8c5a:	4606      	mov	r6, r0
    8c5c:	e6bf      	b.n	89de <d_demangle_callback.constprop.0+0xfa>
    8c5e:	4616      	mov	r6, r2
    8c60:	e783      	b.n	8b6a <d_demangle_callback.constprop.0+0x286>
    8c62:	bf00      	nop

00008c64 <d_print_subexpr>:
    8c64:	b570      	push	{r4, r5, r6, lr}
    8c66:	7813      	ldrb	r3, [r2, #0]
    8c68:	2b01      	cmp	r3, #1
    8c6a:	b082      	sub	sp, #8
    8c6c:	4615      	mov	r5, r2
    8c6e:	4604      	mov	r4, r0
    8c70:	d903      	bls.n	8c7a <d_print_subexpr+0x16>
    8c72:	2b31      	cmp	r3, #49	; 0x31
    8c74:	d001      	beq.n	8c7a <d_print_subexpr+0x16>
    8c76:	2b06      	cmp	r3, #6
    8c78:	d138      	bne.n	8cec <d_print_subexpr+0x88>
    8c7a:	2601      	movs	r6, #1
    8c7c:	686b      	ldr	r3, [r5, #4]
    8c7e:	2b01      	cmp	r3, #1
    8c80:	dc22      	bgt.n	8cc8 <d_print_subexpr+0x64>
    8c82:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
    8c86:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    8c8a:	dc1d      	bgt.n	8cc8 <d_print_subexpr+0x64>
    8c8c:	3301      	adds	r3, #1
    8c8e:	3201      	adds	r2, #1
    8c90:	606b      	str	r3, [r5, #4]
    8c92:	2111      	movs	r1, #17
    8c94:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
    8c98:	f8c4 211c 	str.w	r2, [r4, #284]	; 0x11c
    8c9c:	f8c4 d12c 	str.w	sp, [r4, #300]	; 0x12c
    8ca0:	462a      	mov	r2, r5
    8ca2:	4620      	mov	r0, r4
    8ca4:	9301      	str	r3, [sp, #4]
    8ca6:	9500      	str	r5, [sp, #0]
    8ca8:	f7fc ff28 	bl	5afc <d_print_comp_inner>
    8cac:	686a      	ldr	r2, [r5, #4]
    8cae:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
    8cb2:	9901      	ldr	r1, [sp, #4]
    8cb4:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
    8cb8:	3a01      	subs	r2, #1
    8cba:	3b01      	subs	r3, #1
    8cbc:	606a      	str	r2, [r5, #4]
    8cbe:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
    8cc2:	b136      	cbz	r6, 8cd2 <d_print_subexpr+0x6e>
    8cc4:	b002      	add	sp, #8
    8cc6:	bd70      	pop	{r4, r5, r6, pc}
    8cc8:	2301      	movs	r3, #1
    8cca:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
    8cce:	2e00      	cmp	r6, #0
    8cd0:	d1f8      	bne.n	8cc4 <d_print_subexpr+0x60>
    8cd2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8cd6:	29ff      	cmp	r1, #255	; 0xff
    8cd8:	d015      	beq.n	8d06 <d_print_subexpr+0xa2>
    8cda:	1c4a      	adds	r2, r1, #1
    8cdc:	2329      	movs	r3, #41	; 0x29
    8cde:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8ce2:	5463      	strb	r3, [r4, r1]
    8ce4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8ce8:	b002      	add	sp, #8
    8cea:	bd70      	pop	{r4, r5, r6, pc}
    8cec:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8cf0:	29ff      	cmp	r1, #255	; 0xff
    8cf2:	d016      	beq.n	8d22 <d_print_subexpr+0xbe>
    8cf4:	1c4a      	adds	r2, r1, #1
    8cf6:	2328      	movs	r3, #40	; 0x28
    8cf8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8cfc:	2600      	movs	r6, #0
    8cfe:	5463      	strb	r3, [r4, r1]
    8d00:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8d04:	e7ba      	b.n	8c7c <d_print_subexpr+0x18>
    8d06:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8d0a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
    8d0e:	4620      	mov	r0, r4
    8d10:	4798      	blx	r3
    8d12:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8d16:	2201      	movs	r2, #1
    8d18:	4413      	add	r3, r2
    8d1a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8d1e:	4631      	mov	r1, r6
    8d20:	e7dc      	b.n	8cdc <d_print_subexpr+0x78>
    8d22:	2600      	movs	r6, #0
    8d24:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    8d28:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
    8d2c:	4798      	blx	r3
    8d2e:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8d32:	2201      	movs	r2, #1
    8d34:	4413      	add	r3, r2
    8d36:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8d3a:	4631      	mov	r1, r6
    8d3c:	e7db      	b.n	8cf6 <d_print_subexpr+0x92>
    8d3e:	bf00      	nop

00008d40 <d_maybe_print_fold_expression>:
    8d40:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8d44:	68d3      	ldr	r3, [r2, #12]
    8d46:	68db      	ldr	r3, [r3, #12]
    8d48:	681b      	ldr	r3, [r3, #0]
    8d4a:	7819      	ldrb	r1, [r3, #0]
    8d4c:	2966      	cmp	r1, #102	; 0x66
    8d4e:	d178      	bne.n	8e42 <d_maybe_print_fold_expression+0x102>
    8d50:	6912      	ldr	r2, [r2, #16]
    8d52:	f8d0 7124 	ldr.w	r7, [r0, #292]	; 0x124
    8d56:	e9d2 8a03 	ldrd	r8, sl, [r2, #12]
    8d5a:	f89a 2000 	ldrb.w	r2, [sl]
    8d5e:	2a3c      	cmp	r2, #60	; 0x3c
    8d60:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    8d64:	bf08      	it	eq
    8d66:	e9da a903 	ldrdeq	sl, r9, [sl, #12]
    8d6a:	f8c0 2124 	str.w	r2, [r0, #292]	; 0x124
    8d6e:	785b      	ldrb	r3, [r3, #1]
    8d70:	bf18      	it	ne
    8d72:	f04f 0900 	movne.w	r9, #0
    8d76:	2b6c      	cmp	r3, #108	; 0x6c
    8d78:	4604      	mov	r4, r0
    8d7a:	f000 80a2 	beq.w	8ec2 <d_maybe_print_fold_expression+0x182>
    8d7e:	d863      	bhi.n	8e48 <d_maybe_print_fold_expression+0x108>
    8d80:	2b4c      	cmp	r3, #76	; 0x4c
    8d82:	d001      	beq.n	8d88 <d_maybe_print_fold_expression+0x48>
    8d84:	2b52      	cmp	r3, #82	; 0x52
    8d86:	d157      	bne.n	8e38 <d_maybe_print_fold_expression+0xf8>
    8d88:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8d8c:	29ff      	cmp	r1, #255	; 0xff
    8d8e:	f000 80eb 	beq.w	8f68 <d_maybe_print_fold_expression+0x228>
    8d92:	1c4b      	adds	r3, r1, #1
    8d94:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8d98:	2328      	movs	r3, #40	; 0x28
    8d9a:	5463      	strb	r3, [r4, r1]
    8d9c:	4652      	mov	r2, sl
    8d9e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8da2:	2111      	movs	r1, #17
    8da4:	4620      	mov	r0, r4
    8da6:	4e78      	ldr	r6, [pc, #480]	; (8f88 <d_maybe_print_fold_expression+0x248>)
    8da8:	f7ff ff5c 	bl	8c64 <d_print_subexpr>
    8dac:	2111      	movs	r1, #17
    8dae:	4642      	mov	r2, r8
    8db0:	4620      	mov	r0, r4
    8db2:	f7ff fd5b 	bl	886c <d_print_expr_op>
    8db6:	f106 0b02 	add.w	fp, r6, #2
    8dba:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8dbe:	252e      	movs	r5, #46	; 0x2e
    8dc0:	f04f 0a00 	mov.w	sl, #0
    8dc4:	e00b      	b.n	8dde <d_maybe_print_fold_expression+0x9e>
    8dc6:	460b      	mov	r3, r1
    8dc8:	455e      	cmp	r6, fp
    8dca:	f101 0101 	add.w	r1, r1, #1
    8dce:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8dd2:	54e5      	strb	r5, [r4, r3]
    8dd4:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    8dd8:	d019      	beq.n	8e0e <d_maybe_print_fold_expression+0xce>
    8dda:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    8dde:	29ff      	cmp	r1, #255	; 0xff
    8de0:	d1f1      	bne.n	8dc6 <d_maybe_print_fold_expression+0x86>
    8de2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8de6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8dea:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
    8dee:	4620      	mov	r0, r4
    8df0:	4798      	blx	r3
    8df2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8df6:	3301      	adds	r3, #1
    8df8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8dfc:	2300      	movs	r3, #0
    8dfe:	2101      	movs	r1, #1
    8e00:	455e      	cmp	r6, fp
    8e02:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8e06:	54e5      	strb	r5, [r4, r3]
    8e08:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    8e0c:	d1e5      	bne.n	8dda <d_maybe_print_fold_expression+0x9a>
    8e0e:	4642      	mov	r2, r8
    8e10:	2111      	movs	r1, #17
    8e12:	4620      	mov	r0, r4
    8e14:	f7ff fd2a 	bl	886c <d_print_expr_op>
    8e18:	464a      	mov	r2, r9
    8e1a:	2111      	movs	r1, #17
    8e1c:	4620      	mov	r0, r4
    8e1e:	f7ff ff21 	bl	8c64 <d_print_subexpr>
    8e22:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8e26:	29ff      	cmp	r1, #255	; 0xff
    8e28:	d07f      	beq.n	8f2a <d_maybe_print_fold_expression+0x1ea>
    8e2a:	1c4a      	adds	r2, r1, #1
    8e2c:	2329      	movs	r3, #41	; 0x29
    8e2e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    8e32:	5463      	strb	r3, [r4, r1]
    8e34:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8e38:	f8c4 7124 	str.w	r7, [r4, #292]	; 0x124
    8e3c:	2001      	movs	r0, #1
    8e3e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8e42:	2000      	movs	r0, #0
    8e44:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8e48:	2b72      	cmp	r3, #114	; 0x72
    8e4a:	d1f5      	bne.n	8e38 <d_maybe_print_fold_expression+0xf8>
    8e4c:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8e50:	29ff      	cmp	r1, #255	; 0xff
    8e52:	d07b      	beq.n	8f4c <d_maybe_print_fold_expression+0x20c>
    8e54:	1c4b      	adds	r3, r1, #1
    8e56:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8e5a:	2328      	movs	r3, #40	; 0x28
    8e5c:	5463      	strb	r3, [r4, r1]
    8e5e:	4652      	mov	r2, sl
    8e60:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    8e64:	2111      	movs	r1, #17
    8e66:	4620      	mov	r0, r4
    8e68:	4e48      	ldr	r6, [pc, #288]	; (8f8c <d_maybe_print_fold_expression+0x24c>)
    8e6a:	f7ff fefb 	bl	8c64 <d_print_subexpr>
    8e6e:	4642      	mov	r2, r8
    8e70:	2111      	movs	r1, #17
    8e72:	4620      	mov	r0, r4
    8e74:	f7ff fcfa 	bl	886c <d_print_expr_op>
    8e78:	f106 0903 	add.w	r9, r6, #3
    8e7c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    8e80:	252e      	movs	r5, #46	; 0x2e
    8e82:	f04f 0800 	mov.w	r8, #0
    8e86:	e00a      	b.n	8e9e <d_maybe_print_fold_expression+0x15e>
    8e88:	460b      	mov	r3, r1
    8e8a:	3101      	adds	r1, #1
    8e8c:	454e      	cmp	r6, r9
    8e8e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8e92:	54e5      	strb	r5, [r4, r3]
    8e94:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    8e98:	d0ce      	beq.n	8e38 <d_maybe_print_fold_expression+0xf8>
    8e9a:	f816 5f01 	ldrb.w	r5, [r6, #1]!
    8e9e:	29ff      	cmp	r1, #255	; 0xff
    8ea0:	d1f2      	bne.n	8e88 <d_maybe_print_fold_expression+0x148>
    8ea2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8ea6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8eaa:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    8eae:	4620      	mov	r0, r4
    8eb0:	4798      	blx	r3
    8eb2:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8eb6:	3301      	adds	r3, #1
    8eb8:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8ebc:	2101      	movs	r1, #1
    8ebe:	2300      	movs	r3, #0
    8ec0:	e7e4      	b.n	8e8c <d_maybe_print_fold_expression+0x14c>
    8ec2:	4d33      	ldr	r5, [pc, #204]	; (8f90 <d_maybe_print_fold_expression+0x250>)
    8ec4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8ec8:	2628      	movs	r6, #40	; 0x28
    8eca:	f105 0b03 	add.w	fp, r5, #3
    8ece:	f04f 0900 	mov.w	r9, #0
    8ed2:	e00b      	b.n	8eec <d_maybe_print_fold_expression+0x1ac>
    8ed4:	460b      	mov	r3, r1
    8ed6:	45ab      	cmp	fp, r5
    8ed8:	f101 0101 	add.w	r1, r1, #1
    8edc:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8ee0:	54e6      	strb	r6, [r4, r3]
    8ee2:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8ee6:	d019      	beq.n	8f1c <d_maybe_print_fold_expression+0x1dc>
    8ee8:	f815 6f01 	ldrb.w	r6, [r5, #1]!
    8eec:	29ff      	cmp	r1, #255	; 0xff
    8eee:	d1f1      	bne.n	8ed4 <d_maybe_print_fold_expression+0x194>
    8ef0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8ef4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8ef8:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    8efc:	4620      	mov	r0, r4
    8efe:	4798      	blx	r3
    8f00:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8f04:	3301      	adds	r3, #1
    8f06:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8f0a:	2300      	movs	r3, #0
    8f0c:	2101      	movs	r1, #1
    8f0e:	45ab      	cmp	fp, r5
    8f10:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    8f14:	54e6      	strb	r6, [r4, r3]
    8f16:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
    8f1a:	d1e5      	bne.n	8ee8 <d_maybe_print_fold_expression+0x1a8>
    8f1c:	4642      	mov	r2, r8
    8f1e:	2111      	movs	r1, #17
    8f20:	4620      	mov	r0, r4
    8f22:	f7ff fca3 	bl	886c <d_print_expr_op>
    8f26:	4652      	mov	r2, sl
    8f28:	e777      	b.n	8e1a <d_maybe_print_fold_expression+0xda>
    8f2a:	2500      	movs	r5, #0
    8f2c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    8f30:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    8f34:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8f38:	4620      	mov	r0, r4
    8f3a:	4798      	blx	r3
    8f3c:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8f40:	2201      	movs	r2, #1
    8f42:	4413      	add	r3, r2
    8f44:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8f48:	4629      	mov	r1, r5
    8f4a:	e76f      	b.n	8e2c <d_maybe_print_fold_expression+0xec>
    8f4c:	2500      	movs	r5, #0
    8f4e:	e9d0 3242 	ldrd	r3, r2, [r0, #264]	; 0x108
    8f52:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
    8f56:	4798      	blx	r3
    8f58:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8f5c:	3301      	adds	r3, #1
    8f5e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8f62:	4629      	mov	r1, r5
    8f64:	2301      	movs	r3, #1
    8f66:	e776      	b.n	8e56 <d_maybe_print_fold_expression+0x116>
    8f68:	2500      	movs	r5, #0
    8f6a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    8f6e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    8f72:	4620      	mov	r0, r4
    8f74:	4798      	blx	r3
    8f76:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    8f7a:	3301      	adds	r3, #1
    8f7c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    8f80:	4629      	mov	r1, r5
    8f82:	2301      	movs	r3, #1
    8f84:	e706      	b.n	8d94 <d_maybe_print_fold_expression+0x54>
    8f86:	bf00      	nop
    8f88:	20001f0c 	.word	0x20001f0c
    8f8c:	20001cd8 	.word	0x20001cd8
    8f90:	20001cd0 	.word	0x20001cd0

00008f94 <d_maybe_print_designated_init>:
    8f94:	7813      	ldrb	r3, [r2, #0]
    8f96:	f003 03fd 	and.w	r3, r3, #253	; 0xfd
    8f9a:	2b38      	cmp	r3, #56	; 0x38
    8f9c:	d001      	beq.n	8fa2 <d_maybe_print_designated_init+0xe>
    8f9e:	2000      	movs	r0, #0
    8fa0:	4770      	bx	lr
    8fa2:	68d3      	ldr	r3, [r2, #12]
    8fa4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    8fa8:	68db      	ldr	r3, [r3, #12]
    8faa:	681f      	ldr	r7, [r3, #0]
    8fac:	783b      	ldrb	r3, [r7, #0]
    8fae:	2b64      	cmp	r3, #100	; 0x64
    8fb0:	d002      	beq.n	8fb8 <d_maybe_print_designated_init+0x24>
    8fb2:	2000      	movs	r0, #0
    8fb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    8fb8:	787b      	ldrb	r3, [r7, #1]
    8fba:	2b69      	cmp	r3, #105	; 0x69
    8fbc:	4604      	mov	r4, r0
    8fbe:	d011      	beq.n	8fe4 <d_maybe_print_designated_init+0x50>
    8fc0:	f003 03df 	and.w	r3, r3, #223	; 0xdf
    8fc4:	2b58      	cmp	r3, #88	; 0x58
    8fc6:	d1f4      	bne.n	8fb2 <d_maybe_print_designated_init+0x1e>
    8fc8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8fcc:	6913      	ldr	r3, [r2, #16]
    8fce:	29ff      	cmp	r1, #255	; 0xff
    8fd0:	e9d3 5603 	ldrd	r5, r6, [r3, #12]
    8fd4:	f000 808e 	beq.w	90f4 <d_maybe_print_designated_init+0x160>
    8fd8:	1c4b      	adds	r3, r1, #1
    8fda:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8fde:	235b      	movs	r3, #91	; 0x5b
    8fe0:	5463      	strb	r3, [r4, r1]
    8fe2:	e00c      	b.n	8ffe <d_maybe_print_designated_init+0x6a>
    8fe4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
    8fe8:	6913      	ldr	r3, [r2, #16]
    8fea:	29ff      	cmp	r1, #255	; 0xff
    8fec:	e9d3 5603 	ldrd	r5, r6, [r3, #12]
    8ff0:	f000 80b1 	beq.w	9156 <d_maybe_print_designated_init+0x1c2>
    8ff4:	1c4b      	adds	r3, r1, #1
    8ff6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
    8ffa:	232e      	movs	r3, #46	; 0x2e
    8ffc:	5463      	strb	r3, [r4, r1]
    8ffe:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    9002:	462a      	mov	r2, r5
    9004:	2111      	movs	r1, #17
    9006:	4620      	mov	r0, r4
    9008:	f7fe fdf2 	bl	7bf0 <d_print_comp>
    900c:	787b      	ldrb	r3, [r7, #1]
    900e:	2b58      	cmp	r3, #88	; 0x58
    9010:	d03a      	beq.n	9088 <d_maybe_print_designated_init+0xf4>
    9012:	2b69      	cmp	r3, #105	; 0x69
    9014:	d00b      	beq.n	902e <d_maybe_print_designated_init+0x9a>
    9016:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    901a:	29ff      	cmp	r1, #255	; 0xff
    901c:	f000 808a 	beq.w	9134 <d_maybe_print_designated_init+0x1a0>
    9020:	1c4a      	adds	r2, r1, #1
    9022:	235d      	movs	r3, #93	; 0x5d
    9024:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    9028:	5463      	strb	r3, [r4, r1]
    902a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    902e:	7833      	ldrb	r3, [r6, #0]
    9030:	f003 03fd 	and.w	r3, r3, #253	; 0xfd
    9034:	2b38      	cmp	r3, #56	; 0x38
    9036:	d012      	beq.n	905e <d_maybe_print_designated_init+0xca>
    9038:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    903c:	29ff      	cmp	r1, #255	; 0xff
    903e:	d068      	beq.n	9112 <d_maybe_print_designated_init+0x17e>
    9040:	1c4a      	adds	r2, r1, #1
    9042:	233d      	movs	r3, #61	; 0x3d
    9044:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
    9048:	4620      	mov	r0, r4
    904a:	5463      	strb	r3, [r4, r1]
    904c:	4632      	mov	r2, r6
    904e:	2111      	movs	r1, #17
    9050:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
    9054:	f7ff fe06 	bl	8c64 <d_print_subexpr>
    9058:	2001      	movs	r0, #1
    905a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    905e:	68f3      	ldr	r3, [r6, #12]
    9060:	68db      	ldr	r3, [r3, #12]
    9062:	681b      	ldr	r3, [r3, #0]
    9064:	781a      	ldrb	r2, [r3, #0]
    9066:	2a64      	cmp	r2, #100	; 0x64
    9068:	d1e6      	bne.n	9038 <d_maybe_print_designated_init+0xa4>
    906a:	785b      	ldrb	r3, [r3, #1]
    906c:	2b69      	cmp	r3, #105	; 0x69
    906e:	d003      	beq.n	9078 <d_maybe_print_designated_init+0xe4>
    9070:	f003 03df 	and.w	r3, r3, #223	; 0xdf
    9074:	2b58      	cmp	r3, #88	; 0x58
    9076:	d1df      	bne.n	9038 <d_maybe_print_designated_init+0xa4>
    9078:	4620      	mov	r0, r4
    907a:	4632      	mov	r2, r6
    907c:	2111      	movs	r1, #17
    907e:	f7fe fdb7 	bl	7bf0 <d_print_comp>
    9082:	2001      	movs	r0, #1
    9084:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    9088:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 9174 <d_maybe_print_designated_init+0x1e0>
    908c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
    9090:	f108 0a04 	add.w	sl, r8, #4
    9094:	2520      	movs	r5, #32
    9096:	f04f 0900 	mov.w	r9, #0
    909a:	e00b      	b.n	90b4 <d_maybe_print_designated_init+0x120>
    909c:	460b      	mov	r3, r1
    909e:	45c2      	cmp	sl, r8
    90a0:	f101 0101 	add.w	r1, r1, #1
    90a4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    90a8:	54e5      	strb	r5, [r4, r3]
    90aa:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    90ae:	d019      	beq.n	90e4 <d_maybe_print_designated_init+0x150>
    90b0:	f818 5f01 	ldrb.w	r5, [r8, #1]!
    90b4:	29ff      	cmp	r1, #255	; 0xff
    90b6:	d1f1      	bne.n	909c <d_maybe_print_designated_init+0x108>
    90b8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    90bc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    90c0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
    90c4:	4620      	mov	r0, r4
    90c6:	4798      	blx	r3
    90c8:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    90cc:	3301      	adds	r3, #1
    90ce:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    90d2:	2300      	movs	r3, #0
    90d4:	2101      	movs	r1, #1
    90d6:	45c2      	cmp	sl, r8
    90d8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
    90dc:	54e5      	strb	r5, [r4, r3]
    90de:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
    90e2:	d1e5      	bne.n	90b0 <d_maybe_print_designated_init+0x11c>
    90e4:	68f2      	ldr	r2, [r6, #12]
    90e6:	2111      	movs	r1, #17
    90e8:	4620      	mov	r0, r4
    90ea:	f7fe fd81 	bl	7bf0 <d_print_comp>
    90ee:	6936      	ldr	r6, [r6, #16]
    90f0:	787b      	ldrb	r3, [r7, #1]
    90f2:	e78e      	b.n	9012 <d_maybe_print_designated_init+0x7e>
    90f4:	f04f 0800 	mov.w	r8, #0
    90f8:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    90fc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    9100:	4798      	blx	r3
    9102:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    9106:	3301      	adds	r3, #1
    9108:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    910c:	4641      	mov	r1, r8
    910e:	2301      	movs	r3, #1
    9110:	e763      	b.n	8fda <d_maybe_print_designated_init+0x46>
    9112:	2500      	movs	r5, #0
    9114:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    9118:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    911c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    9120:	4620      	mov	r0, r4
    9122:	4798      	blx	r3
    9124:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    9128:	2201      	movs	r2, #1
    912a:	4413      	add	r3, r2
    912c:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    9130:	4629      	mov	r1, r5
    9132:	e786      	b.n	9042 <d_maybe_print_designated_init+0xae>
    9134:	2500      	movs	r5, #0
    9136:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
    913a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
    913e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
    9142:	4620      	mov	r0, r4
    9144:	4798      	blx	r3
    9146:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    914a:	2201      	movs	r2, #1
    914c:	4413      	add	r3, r2
    914e:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    9152:	4629      	mov	r1, r5
    9154:	e765      	b.n	9022 <d_maybe_print_designated_init+0x8e>
    9156:	f04f 0800 	mov.w	r8, #0
    915a:	e9d4 3242 	ldrd	r3, r2, [r4, #264]	; 0x108
    915e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
    9162:	4798      	blx	r3
    9164:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
    9168:	3301      	adds	r3, #1
    916a:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
    916e:	4641      	mov	r1, r8
    9170:	2301      	movs	r3, #1
    9172:	e740      	b.n	8ff6 <d_maybe_print_designated_init+0x62>
    9174:	20001cc8 	.word	0x20001cc8

00009178 <__cxa_demangle>:
    9178:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    917c:	461e      	mov	r6, r3
    917e:	b084      	sub	sp, #16
    9180:	2800      	cmp	r0, #0
    9182:	d040      	beq.n	9206 <__cxa_demangle+0x8e>
    9184:	460c      	mov	r4, r1
    9186:	4615      	mov	r5, r2
    9188:	b109      	cbz	r1, 918e <__cxa_demangle+0x16>
    918a:	2a00      	cmp	r2, #0
    918c:	d03b      	beq.n	9206 <__cxa_demangle+0x8e>
    918e:	2300      	movs	r3, #0
    9190:	4929      	ldr	r1, [pc, #164]	; (9238 <__cxa_demangle+0xc0>)
    9192:	466a      	mov	r2, sp
    9194:	e9cd 3300 	strd	r3, r3, [sp]
    9198:	e9cd 3302 	strd	r3, r3, [sp, #8]
    919c:	f7ff fba2 	bl	88e4 <d_demangle_callback.constprop.0>
    91a0:	2800      	cmp	r0, #0
    91a2:	d039      	beq.n	9218 <__cxa_demangle+0xa0>
    91a4:	9b03      	ldr	r3, [sp, #12]
    91a6:	9f00      	ldr	r7, [sp, #0]
    91a8:	b9d3      	cbnz	r3, 91e0 <__cxa_demangle+0x68>
    91aa:	f8dd 8008 	ldr.w	r8, [sp, #8]
    91ae:	2f00      	cmp	r7, #0
    91b0:	d03c      	beq.n	922c <__cxa_demangle+0xb4>
    91b2:	b32c      	cbz	r4, 9200 <__cxa_demangle+0x88>
    91b4:	4638      	mov	r0, r7
    91b6:	f005 fd63 	bl	ec80 <strlen>
    91ba:	682b      	ldr	r3, [r5, #0]
    91bc:	4298      	cmp	r0, r3
    91be:	d219      	bcs.n	91f4 <__cxa_demangle+0x7c>
    91c0:	4639      	mov	r1, r7
    91c2:	1c42      	adds	r2, r0, #1
    91c4:	4620      	mov	r0, r4
    91c6:	f7f7 fa39 	bl	63c <memcpy>
    91ca:	4638      	mov	r0, r7
    91cc:	f003 f98a 	bl	c4e4 <free>
    91d0:	4627      	mov	r7, r4
    91d2:	b10e      	cbz	r6, 91d8 <__cxa_demangle+0x60>
    91d4:	2300      	movs	r3, #0
    91d6:	6033      	str	r3, [r6, #0]
    91d8:	4638      	mov	r0, r7
    91da:	b004      	add	sp, #16
    91dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    91e0:	f04f 0801 	mov.w	r8, #1
    91e4:	2f00      	cmp	r7, #0
    91e6:	d1e4      	bne.n	91b2 <__cxa_demangle+0x3a>
    91e8:	b18e      	cbz	r6, 920e <__cxa_demangle+0x96>
    91ea:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    91ee:	6033      	str	r3, [r6, #0]
    91f0:	2700      	movs	r7, #0
    91f2:	e7f1      	b.n	91d8 <__cxa_demangle+0x60>
    91f4:	4620      	mov	r0, r4
    91f6:	f003 f975 	bl	c4e4 <free>
    91fa:	f8c5 8000 	str.w	r8, [r5]
    91fe:	e7e8      	b.n	91d2 <__cxa_demangle+0x5a>
    9200:	2d00      	cmp	r5, #0
    9202:	d1fa      	bne.n	91fa <__cxa_demangle+0x82>
    9204:	e7e5      	b.n	91d2 <__cxa_demangle+0x5a>
    9206:	b116      	cbz	r6, 920e <__cxa_demangle+0x96>
    9208:	f06f 0302 	mvn.w	r3, #2
    920c:	6033      	str	r3, [r6, #0]
    920e:	2700      	movs	r7, #0
    9210:	4638      	mov	r0, r7
    9212:	b004      	add	sp, #16
    9214:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9218:	9800      	ldr	r0, [sp, #0]
    921a:	f003 f963 	bl	c4e4 <free>
    921e:	2e00      	cmp	r6, #0
    9220:	d0f5      	beq.n	920e <__cxa_demangle+0x96>
    9222:	f06f 0301 	mvn.w	r3, #1
    9226:	6033      	str	r3, [r6, #0]
    9228:	2700      	movs	r7, #0
    922a:	e7d5      	b.n	91d8 <__cxa_demangle+0x60>
    922c:	2e00      	cmp	r6, #0
    922e:	d0ee      	beq.n	920e <__cxa_demangle+0x96>
    9230:	f1b8 0f01 	cmp.w	r8, #1
    9234:	d0d9      	beq.n	91ea <__cxa_demangle+0x72>
    9236:	e7f4      	b.n	9222 <__cxa_demangle+0xaa>
    9238:	000035e1 	.word	0x000035e1

0000923c <__cxxabiv1::__is_gxx_exception_class(char*)>:
    923c:	7803      	ldrb	r3, [r0, #0]
    923e:	2b47      	cmp	r3, #71	; 0x47
    9240:	d001      	beq.n	9246 <__cxxabiv1::__is_gxx_exception_class(char*)+0xa>
    9242:	2000      	movs	r0, #0
    9244:	4770      	bx	lr
    9246:	7843      	ldrb	r3, [r0, #1]
    9248:	2b4e      	cmp	r3, #78	; 0x4e
    924a:	d1fa      	bne.n	9242 <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    924c:	7883      	ldrb	r3, [r0, #2]
    924e:	2b55      	cmp	r3, #85	; 0x55
    9250:	d1f7      	bne.n	9242 <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    9252:	78c3      	ldrb	r3, [r0, #3]
    9254:	2b43      	cmp	r3, #67	; 0x43
    9256:	d1f4      	bne.n	9242 <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    9258:	7903      	ldrb	r3, [r0, #4]
    925a:	2b43      	cmp	r3, #67	; 0x43
    925c:	d1f1      	bne.n	9242 <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    925e:	7943      	ldrb	r3, [r0, #5]
    9260:	2b2b      	cmp	r3, #43	; 0x2b
    9262:	d1ee      	bne.n	9242 <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    9264:	7983      	ldrb	r3, [r0, #6]
    9266:	2b2b      	cmp	r3, #43	; 0x2b
    9268:	d1eb      	bne.n	9242 <__cxxabiv1::__is_gxx_exception_class(char*)+0x6>
    926a:	79c0      	ldrb	r0, [r0, #7]
    926c:	2801      	cmp	r0, #1
    926e:	bf8c      	ite	hi
    9270:	2000      	movhi	r0, #0
    9272:	2001      	movls	r0, #1
    9274:	4770      	bx	lr
    9276:	bf00      	nop

00009278 <__cxa_call_terminate>:
    9278:	b510      	push	{r4, lr}
    927a:	b130      	cbz	r0, 928a <__cxa_call_terminate+0x12>
    927c:	4604      	mov	r4, r0
    927e:	f000 f87d 	bl	937c <__cxa_begin_catch>
    9282:	4620      	mov	r0, r4
    9284:	f7ff ffda 	bl	923c <__cxxabiv1::__is_gxx_exception_class(char*)>
    9288:	b908      	cbnz	r0, 928e <__cxa_call_terminate+0x16>
    928a:	f7f9 fc85 	bl	2b98 <std::terminate()>
    928e:	f854 0c14 	ldr.w	r0, [r4, #-20]
    9292:	f7f9 fc79 	bl	2b88 <__cxxabiv1::__terminate(void (*)())>
    9296:	bf00      	nop

00009298 <__cxa_call_unexpected>:
    9298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    929c:	b085      	sub	sp, #20
    929e:	4602      	mov	r2, r0
    92a0:	f7ff ffcc 	bl	923c <__cxxabiv1::__is_gxx_exception_class(char*)>
    92a4:	b138      	cbz	r0, 92b6 <__cxa_call_unexpected+0x1e>
    92a6:	e952 7406 	ldrd	r7, r4, [r2, #-24]
    92aa:	e9d2 850c 	ldrd	r8, r5, [r2, #48]	; 0x30
    92ae:	f8d2 a028 	ldr.w	sl, [r2, #40]	; 0x28
    92b2:	2600      	movs	r6, #0
    92b4:	e005      	b.n	92c2 <__cxa_call_unexpected+0x2a>
    92b6:	4604      	mov	r4, r0
    92b8:	4607      	mov	r7, r0
    92ba:	2601      	movs	r6, #1
    92bc:	4605      	mov	r5, r0
    92be:	4680      	mov	r8, r0
    92c0:	4682      	mov	sl, r0
    92c2:	4610      	mov	r0, r2
    92c4:	f000 f85a 	bl	937c <__cxa_begin_catch>
    92c8:	b10e      	cbz	r6, 92ce <__cxa_call_unexpected+0x36>
    92ca:	f7f9 fc73 	bl	2bb4 <std::unexpected()>
    92ce:	4638      	mov	r0, r7
    92d0:	f7f9 fc6c 	bl	2bac <__cxxabiv1::__unexpected(void (*)())>
    92d4:	f000 f852 	bl	937c <__cxa_begin_catch>
    92d8:	b10e      	cbz	r6, 92de <__cxa_call_unexpected+0x46>
    92da:	f7f9 fc5d 	bl	2b98 <std::terminate()>
    92de:	f7f9 f935 	bl	254c <__cxa_get_globals_fast>
    92e2:	6807      	ldr	r7, [r0, #0]
    92e4:	f8df b090 	ldr.w	fp, [pc, #144]	; 9378 <__cxa_call_unexpected+0xe0>
    92e8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
    92ec:	2b01      	cmp	r3, #1
    92ee:	bf0c      	ite	eq
    92f0:	683b      	ldreq	r3, [r7, #0]
    92f2:	f107 0378 	addne.w	r3, r7, #120	; 0x78
    92f6:	9302      	str	r3, [sp, #8]
    92f8:	f028 0303 	bic.w	r3, r8, #3
    92fc:	9301      	str	r3, [sp, #4]
    92fe:	3720      	adds	r7, #32
    9300:	f04f 0900 	mov.w	r9, #0
    9304:	45ca      	cmp	sl, r9
    9306:	dd20      	ble.n	934a <__cxa_call_unexpected+0xb2>
    9308:	f8d5 8000 	ldr.w	r8, [r5]
    930c:	f1b8 0f00 	cmp.w	r8, #0
    9310:	d000      	beq.n	9314 <__cxa_call_unexpected+0x7c>
    9312:	44a8      	add	r8, r5
    9314:	ab02      	add	r3, sp, #8
    9316:	2200      	movs	r2, #0
    9318:	4641      	mov	r1, r8
    931a:	4638      	mov	r0, r7
    931c:	f7f9 f844 	bl	23a8 <__cxa_type_match>
    9320:	b108      	cbz	r0, 9326 <__cxa_call_unexpected+0x8e>
    9322:	f7f9 fccf 	bl	2cc4 <__cxa_rethrow>
    9326:	f8d8 3000 	ldr.w	r3, [r8]
    932a:	9003      	str	r0, [sp, #12]
    932c:	aa03      	add	r2, sp, #12
    932e:	4640      	mov	r0, r8
    9330:	4659      	mov	r1, fp
    9332:	f8d3 8010 	ldr.w	r8, [r3, #16]
    9336:	2301      	movs	r3, #1
    9338:	47c0      	blx	r8
    933a:	9b01      	ldr	r3, [sp, #4]
    933c:	2800      	cmp	r0, #0
    933e:	bf18      	it	ne
    9340:	4606      	movne	r6, r0
    9342:	f109 0901 	add.w	r9, r9, #1
    9346:	441d      	add	r5, r3
    9348:	e7dc      	b.n	9304 <__cxa_call_unexpected+0x6c>
    934a:	b146      	cbz	r6, 935e <__cxa_call_unexpected+0xc6>
    934c:	2004      	movs	r0, #4
    934e:	f7f8 ffe9 	bl	2324 <__cxa_allocate_exception>
    9352:	4b07      	ldr	r3, [pc, #28]	; (9370 <__cxa_call_unexpected+0xd8>)
    9354:	4a07      	ldr	r2, [pc, #28]	; (9374 <__cxa_call_unexpected+0xdc>)
    9356:	4908      	ldr	r1, [pc, #32]	; (9378 <__cxa_call_unexpected+0xe0>)
    9358:	6003      	str	r3, [r0, #0]
    935a:	f7f9 fc97 	bl	2c8c <__cxa_throw>
    935e:	4620      	mov	r0, r4
    9360:	f7f9 fc12 	bl	2b88 <__cxxabiv1::__terminate(void (*)())>
    9364:	f000 f848 	bl	93f8 <__cxa_end_catch>
    9368:	f000 f846 	bl	93f8 <__cxa_end_catch>
    936c:	f7f9 f816 	bl	239c <__cxa_end_cleanup>
    9370:	200012d4 	.word	0x200012d4
    9374:	00002531 	.word	0x00002531
    9378:	20001104 	.word	0x20001104

0000937c <__cxa_begin_catch>:
    937c:	b538      	push	{r3, r4, r5, lr}
    937e:	4604      	mov	r4, r0
    9380:	f7f9 f8e8 	bl	2554 <__cxa_get_globals>
    9384:	4622      	mov	r2, r4
    9386:	6805      	ldr	r5, [r0, #0]
    9388:	f812 3920 	ldrb.w	r3, [r2], #-32
    938c:	2b47      	cmp	r3, #71	; 0x47
    938e:	d003      	beq.n	9398 <__cxa_begin_catch+0x1c>
    9390:	bb85      	cbnz	r5, 93f4 <__cxa_begin_catch+0x78>
    9392:	6002      	str	r2, [r0, #0]
    9394:	4628      	mov	r0, r5
    9396:	bd38      	pop	{r3, r4, r5, pc}
    9398:	7863      	ldrb	r3, [r4, #1]
    939a:	2b4e      	cmp	r3, #78	; 0x4e
    939c:	d1f8      	bne.n	9390 <__cxa_begin_catch+0x14>
    939e:	78a3      	ldrb	r3, [r4, #2]
    93a0:	2b55      	cmp	r3, #85	; 0x55
    93a2:	d1f5      	bne.n	9390 <__cxa_begin_catch+0x14>
    93a4:	78e3      	ldrb	r3, [r4, #3]
    93a6:	2b43      	cmp	r3, #67	; 0x43
    93a8:	d1f2      	bne.n	9390 <__cxa_begin_catch+0x14>
    93aa:	7923      	ldrb	r3, [r4, #4]
    93ac:	2b43      	cmp	r3, #67	; 0x43
    93ae:	d1ef      	bne.n	9390 <__cxa_begin_catch+0x14>
    93b0:	7963      	ldrb	r3, [r4, #5]
    93b2:	2b2b      	cmp	r3, #43	; 0x2b
    93b4:	d1ec      	bne.n	9390 <__cxa_begin_catch+0x14>
    93b6:	79a3      	ldrb	r3, [r4, #6]
    93b8:	2b2b      	cmp	r3, #43	; 0x2b
    93ba:	d1e9      	bne.n	9390 <__cxa_begin_catch+0x14>
    93bc:	79e3      	ldrb	r3, [r4, #7]
    93be:	2b01      	cmp	r3, #1
    93c0:	d8e6      	bhi.n	9390 <__cxa_begin_catch+0x14>
    93c2:	f854 3c0c 	ldr.w	r3, [r4, #-12]
    93c6:	2b00      	cmp	r3, #0
    93c8:	db11      	blt.n	93ee <__cxa_begin_catch+0x72>
    93ca:	3301      	adds	r3, #1
    93cc:	f844 3c0c 	str.w	r3, [r4, #-12]
    93d0:	6843      	ldr	r3, [r0, #4]
    93d2:	3b01      	subs	r3, #1
    93d4:	6043      	str	r3, [r0, #4]
    93d6:	4295      	cmp	r5, r2
    93d8:	bf18      	it	ne
    93da:	f844 5c10 	strne.w	r5, [r4, #-16]
    93de:	6a65      	ldr	r5, [r4, #36]	; 0x24
    93e0:	bf18      	it	ne
    93e2:	6002      	strne	r2, [r0, #0]
    93e4:	4620      	mov	r0, r4
    93e6:	f000 fa13 	bl	9810 <_Unwind_Complete>
    93ea:	4628      	mov	r0, r5
    93ec:	bd38      	pop	{r3, r4, r5, pc}
    93ee:	f1c3 0301 	rsb	r3, r3, #1
    93f2:	e7eb      	b.n	93cc <__cxa_begin_catch+0x50>
    93f4:	f7f9 fbd0 	bl	2b98 <std::terminate()>

000093f8 <__cxa_end_catch>:
    93f8:	b508      	push	{r3, lr}
    93fa:	f7f9 f8a7 	bl	254c <__cxa_get_globals_fast>
    93fe:	6803      	ldr	r3, [r0, #0]
    9400:	b37b      	cbz	r3, 9462 <__cxa_end_catch+0x6a>
    9402:	f893 2020 	ldrb.w	r2, [r3, #32]
    9406:	2a47      	cmp	r2, #71	; 0x47
    9408:	d007      	beq.n	941a <__cxa_end_catch+0x22>
    940a:	2200      	movs	r2, #0
    940c:	6002      	str	r2, [r0, #0]
    940e:	f103 0020 	add.w	r0, r3, #32
    9412:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    9416:	f000 b9fd 	b.w	9814 <_Unwind_DeleteException>
    941a:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
    941e:	2a4e      	cmp	r2, #78	; 0x4e
    9420:	d1f3      	bne.n	940a <__cxa_end_catch+0x12>
    9422:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
    9426:	2a55      	cmp	r2, #85	; 0x55
    9428:	d1ef      	bne.n	940a <__cxa_end_catch+0x12>
    942a:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
    942e:	2a43      	cmp	r2, #67	; 0x43
    9430:	d1eb      	bne.n	940a <__cxa_end_catch+0x12>
    9432:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
    9436:	2a43      	cmp	r2, #67	; 0x43
    9438:	d1e7      	bne.n	940a <__cxa_end_catch+0x12>
    943a:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
    943e:	2a2b      	cmp	r2, #43	; 0x2b
    9440:	d1e3      	bne.n	940a <__cxa_end_catch+0x12>
    9442:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
    9446:	2a2b      	cmp	r2, #43	; 0x2b
    9448:	d1df      	bne.n	940a <__cxa_end_catch+0x12>
    944a:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
    944e:	2a01      	cmp	r2, #1
    9450:	d8db      	bhi.n	940a <__cxa_end_catch+0x12>
    9452:	695a      	ldr	r2, [r3, #20]
    9454:	2a00      	cmp	r2, #0
    9456:	db05      	blt.n	9464 <__cxa_end_catch+0x6c>
    9458:	3a01      	subs	r2, #1
    945a:	d008      	beq.n	946e <__cxa_end_catch+0x76>
    945c:	1c51      	adds	r1, r2, #1
    945e:	d00e      	beq.n	947e <__cxa_end_catch+0x86>
    9460:	615a      	str	r2, [r3, #20]
    9462:	bd08      	pop	{r3, pc}
    9464:	3201      	adds	r2, #1
    9466:	d1fb      	bne.n	9460 <__cxa_end_catch+0x68>
    9468:	6919      	ldr	r1, [r3, #16]
    946a:	6001      	str	r1, [r0, #0]
    946c:	e7f8      	b.n	9460 <__cxa_end_catch+0x68>
    946e:	691a      	ldr	r2, [r3, #16]
    9470:	6002      	str	r2, [r0, #0]
    9472:	f103 0020 	add.w	r0, r3, #32
    9476:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    947a:	f000 b9cb 	b.w	9814 <_Unwind_DeleteException>
    947e:	f7f9 fb8b 	bl	2b98 <std::terminate()>
    9482:	bf00      	nop

00009484 <__cxa_current_exception_type>:
    9484:	b508      	push	{r3, lr}
    9486:	f7f9 f865 	bl	2554 <__cxa_get_globals>
    948a:	6800      	ldr	r0, [r0, #0]
    948c:	b130      	cbz	r0, 949c <__cxa_current_exception_type+0x18>
    948e:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
    9492:	2b01      	cmp	r3, #1
    9494:	bf04      	itt	eq
    9496:	6800      	ldreq	r0, [r0, #0]
    9498:	3878      	subeq	r0, #120	; 0x78
    949a:	6800      	ldr	r0, [r0, #0]
    949c:	bd08      	pop	{r3, pc}
    949e:	bf00      	nop

000094a0 <selfrel_offset31>:
    94a0:	6803      	ldr	r3, [r0, #0]
    94a2:	005a      	lsls	r2, r3, #1
    94a4:	bf4c      	ite	mi
    94a6:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
    94aa:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
    94ae:	4418      	add	r0, r3
    94b0:	4770      	bx	lr
    94b2:	bf00      	nop

000094b4 <search_EIT_table>:
    94b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    94b8:	b329      	cbz	r1, 9506 <search_EIT_table+0x52>
    94ba:	1e4f      	subs	r7, r1, #1
    94bc:	4604      	mov	r4, r0
    94be:	4615      	mov	r5, r2
    94c0:	463e      	mov	r6, r7
    94c2:	f04f 0800 	mov.w	r8, #0
    94c6:	eb08 0106 	add.w	r1, r8, r6
    94ca:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
    94ce:	1049      	asrs	r1, r1, #1
    94d0:	eb04 09c1 	add.w	r9, r4, r1, lsl #3
    94d4:	4648      	mov	r0, r9
    94d6:	f7ff ffe3 	bl	94a0 <selfrel_offset31>
    94da:	4603      	mov	r3, r0
    94dc:	00c8      	lsls	r0, r1, #3
    94de:	3008      	adds	r0, #8
    94e0:	428f      	cmp	r7, r1
    94e2:	4420      	add	r0, r4
    94e4:	d009      	beq.n	94fa <search_EIT_table+0x46>
    94e6:	42ab      	cmp	r3, r5
    94e8:	d809      	bhi.n	94fe <search_EIT_table+0x4a>
    94ea:	f7ff ffd9 	bl	94a0 <selfrel_offset31>
    94ee:	3801      	subs	r0, #1
    94f0:	42a8      	cmp	r0, r5
    94f2:	d20a      	bcs.n	950a <search_EIT_table+0x56>
    94f4:	f101 0801 	add.w	r8, r1, #1
    94f8:	e7e5      	b.n	94c6 <search_EIT_table+0x12>
    94fa:	42ab      	cmp	r3, r5
    94fc:	d905      	bls.n	950a <search_EIT_table+0x56>
    94fe:	4588      	cmp	r8, r1
    9500:	d001      	beq.n	9506 <search_EIT_table+0x52>
    9502:	1e4e      	subs	r6, r1, #1
    9504:	e7df      	b.n	94c6 <search_EIT_table+0x12>
    9506:	f04f 0900 	mov.w	r9, #0
    950a:	4648      	mov	r0, r9
    950c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00009510 <__gnu_unwind_get_pr_addr>:
    9510:	2801      	cmp	r0, #1
    9512:	d007      	beq.n	9524 <__gnu_unwind_get_pr_addr+0x14>
    9514:	2802      	cmp	r0, #2
    9516:	d007      	beq.n	9528 <__gnu_unwind_get_pr_addr+0x18>
    9518:	4b04      	ldr	r3, [pc, #16]	; (952c <__gnu_unwind_get_pr_addr+0x1c>)
    951a:	2800      	cmp	r0, #0
    951c:	bf0c      	ite	eq
    951e:	4618      	moveq	r0, r3
    9520:	2000      	movne	r0, #0
    9522:	4770      	bx	lr
    9524:	4802      	ldr	r0, [pc, #8]	; (9530 <__gnu_unwind_get_pr_addr+0x20>)
    9526:	4770      	bx	lr
    9528:	4802      	ldr	r0, [pc, #8]	; (9534 <__gnu_unwind_get_pr_addr+0x24>)
    952a:	4770      	bx	lr
    952c:	00009be1 	.word	0x00009be1
    9530:	00009be9 	.word	0x00009be9
    9534:	00009bf1 	.word	0x00009bf1

00009538 <get_eit_entry>:
    9538:	b530      	push	{r4, r5, lr}
    953a:	4b22      	ldr	r3, [pc, #136]	; (95c4 <get_eit_entry+0x8c>)
    953c:	b083      	sub	sp, #12
    953e:	4604      	mov	r4, r0
    9540:	1e8d      	subs	r5, r1, #2
    9542:	b343      	cbz	r3, 9596 <get_eit_entry+0x5e>
    9544:	a901      	add	r1, sp, #4
    9546:	4628      	mov	r0, r5
    9548:	f3af 8000 	nop.w
    954c:	b1f0      	cbz	r0, 958c <get_eit_entry+0x54>
    954e:	9901      	ldr	r1, [sp, #4]
    9550:	462a      	mov	r2, r5
    9552:	f7ff ffaf 	bl	94b4 <search_EIT_table>
    9556:	4601      	mov	r1, r0
    9558:	b1c0      	cbz	r0, 958c <get_eit_entry+0x54>
    955a:	f7ff ffa1 	bl	94a0 <selfrel_offset31>
    955e:	684b      	ldr	r3, [r1, #4]
    9560:	64a0      	str	r0, [r4, #72]	; 0x48
    9562:	2b01      	cmp	r3, #1
    9564:	d02b      	beq.n	95be <get_eit_entry+0x86>
    9566:	2b00      	cmp	r3, #0
    9568:	f101 0004 	add.w	r0, r1, #4
    956c:	db25      	blt.n	95ba <get_eit_entry+0x82>
    956e:	f7ff ff97 	bl	94a0 <selfrel_offset31>
    9572:	2300      	movs	r3, #0
    9574:	6523      	str	r3, [r4, #80]	; 0x50
    9576:	6803      	ldr	r3, [r0, #0]
    9578:	64e0      	str	r0, [r4, #76]	; 0x4c
    957a:	2b00      	cmp	r3, #0
    957c:	db12      	blt.n	95a4 <get_eit_entry+0x6c>
    957e:	f7ff ff8f 	bl	94a0 <selfrel_offset31>
    9582:	4603      	mov	r3, r0
    9584:	2000      	movs	r0, #0
    9586:	6123      	str	r3, [r4, #16]
    9588:	b003      	add	sp, #12
    958a:	bd30      	pop	{r4, r5, pc}
    958c:	2300      	movs	r3, #0
    958e:	2009      	movs	r0, #9
    9590:	6123      	str	r3, [r4, #16]
    9592:	b003      	add	sp, #12
    9594:	bd30      	pop	{r4, r5, pc}
    9596:	4b0c      	ldr	r3, [pc, #48]	; (95c8 <get_eit_entry+0x90>)
    9598:	490c      	ldr	r1, [pc, #48]	; (95cc <get_eit_entry+0x94>)
    959a:	1ac9      	subs	r1, r1, r3
    959c:	10c9      	asrs	r1, r1, #3
    959e:	4618      	mov	r0, r3
    95a0:	9101      	str	r1, [sp, #4]
    95a2:	e7d5      	b.n	9550 <get_eit_entry+0x18>
    95a4:	f3c3 6003 	ubfx	r0, r3, #24, #4
    95a8:	f7ff ffb2 	bl	9510 <__gnu_unwind_get_pr_addr>
    95ac:	1e03      	subs	r3, r0, #0
    95ae:	bf0c      	ite	eq
    95b0:	2009      	moveq	r0, #9
    95b2:	2000      	movne	r0, #0
    95b4:	6123      	str	r3, [r4, #16]
    95b6:	b003      	add	sp, #12
    95b8:	bd30      	pop	{r4, r5, pc}
    95ba:	2301      	movs	r3, #1
    95bc:	e7da      	b.n	9574 <get_eit_entry+0x3c>
    95be:	2300      	movs	r3, #0
    95c0:	2005      	movs	r0, #5
    95c2:	e7e0      	b.n	9586 <get_eit_entry+0x4e>
    95c4:	00000000 	.word	0x00000000
    95c8:	00010c74 	.word	0x00010c74
    95cc:	00010f4c 	.word	0x00010f4c

000095d0 <restore_non_core_regs>:
    95d0:	6803      	ldr	r3, [r0, #0]
    95d2:	07da      	lsls	r2, r3, #31
    95d4:	b510      	push	{r4, lr}
    95d6:	4604      	mov	r4, r0
    95d8:	d406      	bmi.n	95e8 <restore_non_core_regs+0x18>
    95da:	079b      	lsls	r3, r3, #30
    95dc:	f100 0048 	add.w	r0, r0, #72	; 0x48
    95e0:	d509      	bpl.n	95f6 <restore_non_core_regs+0x26>
    95e2:	f000 fc75 	bl	9ed0 <__gnu_Unwind_Restore_VFP_D>
    95e6:	6823      	ldr	r3, [r4, #0]
    95e8:	0759      	lsls	r1, r3, #29
    95ea:	d509      	bpl.n	9600 <restore_non_core_regs+0x30>
    95ec:	071a      	lsls	r2, r3, #28
    95ee:	d50e      	bpl.n	960e <restore_non_core_regs+0x3e>
    95f0:	06db      	lsls	r3, r3, #27
    95f2:	d513      	bpl.n	961c <restore_non_core_regs+0x4c>
    95f4:	bd10      	pop	{r4, pc}
    95f6:	f000 fc63 	bl	9ec0 <__gnu_Unwind_Restore_VFP>
    95fa:	6823      	ldr	r3, [r4, #0]
    95fc:	0759      	lsls	r1, r3, #29
    95fe:	d4f5      	bmi.n	95ec <restore_non_core_regs+0x1c>
    9600:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
    9604:	f000 fc6c 	bl	9ee0 <__gnu_Unwind_Restore_VFP_D_16_to_31>
    9608:	6823      	ldr	r3, [r4, #0]
    960a:	071a      	lsls	r2, r3, #28
    960c:	d4f0      	bmi.n	95f0 <restore_non_core_regs+0x20>
    960e:	f504 70a8 	add.w	r0, r4, #336	; 0x150
    9612:	f000 fc6d 	bl	9ef0 <__gnu_Unwind_Restore_WMMXD>
    9616:	6823      	ldr	r3, [r4, #0]
    9618:	06db      	lsls	r3, r3, #27
    961a:	d4eb      	bmi.n	95f4 <restore_non_core_regs+0x24>
    961c:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
    9620:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    9624:	f000 bca8 	b.w	9f78 <__gnu_Unwind_Restore_WMMXC>

00009628 <_Unwind_decode_typeinfo_ptr.constprop.0>:
    9628:	4603      	mov	r3, r0
    962a:	6800      	ldr	r0, [r0, #0]
    962c:	b100      	cbz	r0, 9630 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
    962e:	4418      	add	r0, r3
    9630:	4770      	bx	lr
    9632:	bf00      	nop

00009634 <_Unwind_DebugHook>:
    9634:	4770      	bx	lr
    9636:	bf00      	nop

00009638 <unwind_phase2>:
    9638:	b570      	push	{r4, r5, r6, lr}
    963a:	4604      	mov	r4, r0
    963c:	460e      	mov	r6, r1
    963e:	6c31      	ldr	r1, [r6, #64]	; 0x40
    9640:	4620      	mov	r0, r4
    9642:	f7ff ff79 	bl	9538 <get_eit_entry>
    9646:	4605      	mov	r5, r0
    9648:	b988      	cbnz	r0, 966e <unwind_phase2+0x36>
    964a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    964c:	6162      	str	r2, [r4, #20]
    964e:	6923      	ldr	r3, [r4, #16]
    9650:	4632      	mov	r2, r6
    9652:	4621      	mov	r1, r4
    9654:	2001      	movs	r0, #1
    9656:	4798      	blx	r3
    9658:	2808      	cmp	r0, #8
    965a:	d0f0      	beq.n	963e <unwind_phase2+0x6>
    965c:	2807      	cmp	r0, #7
    965e:	d106      	bne.n	966e <unwind_phase2+0x36>
    9660:	4628      	mov	r0, r5
    9662:	6c31      	ldr	r1, [r6, #64]	; 0x40
    9664:	f7ff ffe6 	bl	9634 <_Unwind_DebugHook>
    9668:	1d30      	adds	r0, r6, #4
    966a:	f000 fc1d 	bl	9ea8 <__restore_core_regs>
    966e:	f7f7 f9a9 	bl	9c4 <abort>
    9672:	bf00      	nop

00009674 <unwind_phase2_forced>:
    9674:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    9678:	1d0d      	adds	r5, r1, #4
    967a:	f8d0 800c 	ldr.w	r8, [r0, #12]
    967e:	f8d0 9018 	ldr.w	r9, [r0, #24]
    9682:	4607      	mov	r7, r0
    9684:	4614      	mov	r4, r2
    9686:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    9688:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
    968c:	f10d 0c0c 	add.w	ip, sp, #12
    9690:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
    9694:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    9696:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
    969a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
    969c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
    96a0:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
    96a4:	ae02      	add	r6, sp, #8
    96a6:	f04f 0e00 	mov.w	lr, #0
    96aa:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
    96ae:	f8c6 e000 	str.w	lr, [r6]
    96b2:	e020      	b.n	96f6 <unwind_phase2_forced+0x82>
    96b4:	6c33      	ldr	r3, [r6, #64]	; 0x40
    96b6:	617b      	str	r3, [r7, #20]
    96b8:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
    96bc:	4631      	mov	r1, r6
    96be:	a87a      	add	r0, sp, #488	; 0x1e8
    96c0:	f7f6 ffbc 	bl	63c <memcpy>
    96c4:	693b      	ldr	r3, [r7, #16]
    96c6:	aa7a      	add	r2, sp, #488	; 0x1e8
    96c8:	4639      	mov	r1, r7
    96ca:	4650      	mov	r0, sl
    96cc:	4798      	blx	r3
    96ce:	9b88      	ldr	r3, [sp, #544]	; 0x220
    96d0:	6473      	str	r3, [r6, #68]	; 0x44
    96d2:	4621      	mov	r1, r4
    96d4:	e9cd 6900 	strd	r6, r9, [sp]
    96d8:	4605      	mov	r5, r0
    96da:	463b      	mov	r3, r7
    96dc:	463a      	mov	r2, r7
    96de:	2001      	movs	r0, #1
    96e0:	47c0      	blx	r8
    96e2:	4604      	mov	r4, r0
    96e4:	b9e0      	cbnz	r0, 9720 <unwind_phase2_forced+0xac>
    96e6:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
    96ea:	a97a      	add	r1, sp, #488	; 0x1e8
    96ec:	4630      	mov	r0, r6
    96ee:	f7f6 ffa5 	bl	63c <memcpy>
    96f2:	2d08      	cmp	r5, #8
    96f4:	d11a      	bne.n	972c <unwind_phase2_forced+0xb8>
    96f6:	6c31      	ldr	r1, [r6, #64]	; 0x40
    96f8:	4638      	mov	r0, r7
    96fa:	f7ff ff1d 	bl	9538 <get_eit_entry>
    96fe:	3409      	adds	r4, #9
    9700:	fa5f fa84 	uxtb.w	sl, r4
    9704:	4605      	mov	r5, r0
    9706:	2800      	cmp	r0, #0
    9708:	d0d4      	beq.n	96b4 <unwind_phase2_forced+0x40>
    970a:	6bb3      	ldr	r3, [r6, #56]	; 0x38
    970c:	6473      	str	r3, [r6, #68]	; 0x44
    970e:	463a      	mov	r2, r7
    9710:	e9cd 6900 	strd	r6, r9, [sp]
    9714:	463b      	mov	r3, r7
    9716:	f04a 0110 	orr.w	r1, sl, #16
    971a:	2001      	movs	r0, #1
    971c:	47c0      	blx	r8
    971e:	b100      	cbz	r0, 9722 <unwind_phase2_forced+0xae>
    9720:	2509      	movs	r5, #9
    9722:	4628      	mov	r0, r5
    9724:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
    9728:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    972c:	2d07      	cmp	r5, #7
    972e:	d1f7      	bne.n	9720 <unwind_phase2_forced+0xac>
    9730:	4620      	mov	r0, r4
    9732:	6c31      	ldr	r1, [r6, #64]	; 0x40
    9734:	f7ff ff7e 	bl	9634 <_Unwind_DebugHook>
    9738:	a803      	add	r0, sp, #12
    973a:	f000 fbb5 	bl	9ea8 <__restore_core_regs>
    973e:	bf00      	nop

00009740 <__gnu_Unwind_RaiseException>:
    9740:	b5f0      	push	{r4, r5, r6, r7, lr}
    9742:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
    9744:	640b      	str	r3, [r1, #64]	; 0x40
    9746:	f101 0c04 	add.w	ip, r1, #4
    974a:	460e      	mov	r6, r1
    974c:	4605      	mov	r5, r0
    974e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    9752:	b0f9      	sub	sp, #484	; 0x1e4
    9754:	ac01      	add	r4, sp, #4
    9756:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    9758:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    975c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    975e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    9762:	c40f      	stmia	r4!, {r0, r1, r2, r3}
    9764:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
    9768:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    976c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    9770:	9700      	str	r7, [sp, #0]
    9772:	e006      	b.n	9782 <__gnu_Unwind_RaiseException+0x42>
    9774:	692b      	ldr	r3, [r5, #16]
    9776:	466a      	mov	r2, sp
    9778:	4629      	mov	r1, r5
    977a:	4798      	blx	r3
    977c:	2808      	cmp	r0, #8
    977e:	4604      	mov	r4, r0
    9780:	d108      	bne.n	9794 <__gnu_Unwind_RaiseException+0x54>
    9782:	9910      	ldr	r1, [sp, #64]	; 0x40
    9784:	4628      	mov	r0, r5
    9786:	f7ff fed7 	bl	9538 <get_eit_entry>
    978a:	2800      	cmp	r0, #0
    978c:	d0f2      	beq.n	9774 <__gnu_Unwind_RaiseException+0x34>
    978e:	2009      	movs	r0, #9
    9790:	b079      	add	sp, #484	; 0x1e4
    9792:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9794:	4668      	mov	r0, sp
    9796:	f7ff ff1b 	bl	95d0 <restore_non_core_regs>
    979a:	2c06      	cmp	r4, #6
    979c:	d1f7      	bne.n	978e <__gnu_Unwind_RaiseException+0x4e>
    979e:	4631      	mov	r1, r6
    97a0:	4628      	mov	r0, r5
    97a2:	f7ff ff49 	bl	9638 <unwind_phase2>
    97a6:	bf00      	nop

000097a8 <__gnu_Unwind_ForcedUnwind>:
    97a8:	60c1      	str	r1, [r0, #12]
    97aa:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
    97ac:	6182      	str	r2, [r0, #24]
    97ae:	6419      	str	r1, [r3, #64]	; 0x40
    97b0:	2200      	movs	r2, #0
    97b2:	4619      	mov	r1, r3
    97b4:	f7ff bf5e 	b.w	9674 <unwind_phase2_forced>

000097b8 <__gnu_Unwind_Resume>:
    97b8:	b570      	push	{r4, r5, r6, lr}
    97ba:	68c6      	ldr	r6, [r0, #12]
    97bc:	6943      	ldr	r3, [r0, #20]
    97be:	640b      	str	r3, [r1, #64]	; 0x40
    97c0:	b9ae      	cbnz	r6, 97ee <__gnu_Unwind_Resume+0x36>
    97c2:	6903      	ldr	r3, [r0, #16]
    97c4:	460a      	mov	r2, r1
    97c6:	4604      	mov	r4, r0
    97c8:	460d      	mov	r5, r1
    97ca:	4601      	mov	r1, r0
    97cc:	2002      	movs	r0, #2
    97ce:	4798      	blx	r3
    97d0:	2807      	cmp	r0, #7
    97d2:	d005      	beq.n	97e0 <__gnu_Unwind_Resume+0x28>
    97d4:	2808      	cmp	r0, #8
    97d6:	d10f      	bne.n	97f8 <__gnu_Unwind_Resume+0x40>
    97d8:	4629      	mov	r1, r5
    97da:	4620      	mov	r0, r4
    97dc:	f7ff ff2c 	bl	9638 <unwind_phase2>
    97e0:	4630      	mov	r0, r6
    97e2:	6c29      	ldr	r1, [r5, #64]	; 0x40
    97e4:	f7ff ff26 	bl	9634 <_Unwind_DebugHook>
    97e8:	1d28      	adds	r0, r5, #4
    97ea:	f000 fb5d 	bl	9ea8 <__restore_core_regs>
    97ee:	2201      	movs	r2, #1
    97f0:	f7ff ff40 	bl	9674 <unwind_phase2_forced>
    97f4:	f7f7 f8e6 	bl	9c4 <abort>
    97f8:	f7f7 f8e4 	bl	9c4 <abort>

000097fc <__gnu_Unwind_Resume_or_Rethrow>:
    97fc:	68c2      	ldr	r2, [r0, #12]
    97fe:	b122      	cbz	r2, 980a <__gnu_Unwind_Resume_or_Rethrow+0xe>
    9800:	6bca      	ldr	r2, [r1, #60]	; 0x3c
    9802:	640a      	str	r2, [r1, #64]	; 0x40
    9804:	2200      	movs	r2, #0
    9806:	f7ff bf35 	b.w	9674 <unwind_phase2_forced>
    980a:	f7ff bf99 	b.w	9740 <__gnu_Unwind_RaiseException>
    980e:	bf00      	nop

00009810 <_Unwind_Complete>:
    9810:	4770      	bx	lr
    9812:	bf00      	nop

00009814 <_Unwind_DeleteException>:
    9814:	6883      	ldr	r3, [r0, #8]
    9816:	4601      	mov	r1, r0
    9818:	b10b      	cbz	r3, 981e <_Unwind_DeleteException+0xa>
    981a:	2001      	movs	r0, #1
    981c:	4718      	bx	r3
    981e:	4770      	bx	lr

00009820 <_Unwind_VRS_Get>:
    9820:	2901      	cmp	r1, #1
    9822:	d012      	beq.n	984a <_Unwind_VRS_Get+0x2a>
    9824:	d809      	bhi.n	983a <_Unwind_VRS_Get+0x1a>
    9826:	b973      	cbnz	r3, 9846 <_Unwind_VRS_Get+0x26>
    9828:	2a0f      	cmp	r2, #15
    982a:	d80c      	bhi.n	9846 <_Unwind_VRS_Get+0x26>
    982c:	eb00 0282 	add.w	r2, r0, r2, lsl #2
    9830:	4618      	mov	r0, r3
    9832:	6853      	ldr	r3, [r2, #4]
    9834:	9a00      	ldr	r2, [sp, #0]
    9836:	6013      	str	r3, [r2, #0]
    9838:	4770      	bx	lr
    983a:	3903      	subs	r1, #3
    983c:	2901      	cmp	r1, #1
    983e:	bf94      	ite	ls
    9840:	2001      	movls	r0, #1
    9842:	2002      	movhi	r0, #2
    9844:	4770      	bx	lr
    9846:	2002      	movs	r0, #2
    9848:	4770      	bx	lr
    984a:	4608      	mov	r0, r1
    984c:	4770      	bx	lr
    984e:	bf00      	nop

00009850 <_Unwind_GetGR>:
    9850:	b500      	push	{lr}
    9852:	b085      	sub	sp, #20
    9854:	460a      	mov	r2, r1
    9856:	2300      	movs	r3, #0
    9858:	a903      	add	r1, sp, #12
    985a:	9100      	str	r1, [sp, #0]
    985c:	4619      	mov	r1, r3
    985e:	f7ff ffdf 	bl	9820 <_Unwind_VRS_Get>
    9862:	9803      	ldr	r0, [sp, #12]
    9864:	b005      	add	sp, #20
    9866:	f85d fb04 	ldr.w	pc, [sp], #4
    986a:	bf00      	nop

0000986c <_Unwind_VRS_Set>:
    986c:	2901      	cmp	r1, #1
    986e:	d012      	beq.n	9896 <_Unwind_VRS_Set+0x2a>
    9870:	d809      	bhi.n	9886 <_Unwind_VRS_Set+0x1a>
    9872:	b973      	cbnz	r3, 9892 <_Unwind_VRS_Set+0x26>
    9874:	2a0f      	cmp	r2, #15
    9876:	d80c      	bhi.n	9892 <_Unwind_VRS_Set+0x26>
    9878:	9900      	ldr	r1, [sp, #0]
    987a:	eb00 0282 	add.w	r2, r0, r2, lsl #2
    987e:	6809      	ldr	r1, [r1, #0]
    9880:	6051      	str	r1, [r2, #4]
    9882:	4618      	mov	r0, r3
    9884:	4770      	bx	lr
    9886:	3903      	subs	r1, #3
    9888:	2901      	cmp	r1, #1
    988a:	bf94      	ite	ls
    988c:	2001      	movls	r0, #1
    988e:	2002      	movhi	r0, #2
    9890:	4770      	bx	lr
    9892:	2002      	movs	r0, #2
    9894:	4770      	bx	lr
    9896:	4608      	mov	r0, r1
    9898:	4770      	bx	lr
    989a:	bf00      	nop

0000989c <_Unwind_SetGR>:
    989c:	b510      	push	{r4, lr}
    989e:	b084      	sub	sp, #16
    98a0:	2300      	movs	r3, #0
    98a2:	ac03      	add	r4, sp, #12
    98a4:	9203      	str	r2, [sp, #12]
    98a6:	9400      	str	r4, [sp, #0]
    98a8:	460a      	mov	r2, r1
    98aa:	4619      	mov	r1, r3
    98ac:	f7ff ffde 	bl	986c <_Unwind_VRS_Set>
    98b0:	b004      	add	sp, #16
    98b2:	bd10      	pop	{r4, pc}

000098b4 <__gnu_Unwind_Backtrace>:
    98b4:	b570      	push	{r4, r5, r6, lr}
    98b6:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
    98b8:	6413      	str	r3, [r2, #64]	; 0x40
    98ba:	f102 0c04 	add.w	ip, r2, #4
    98be:	4605      	mov	r5, r0
    98c0:	460c      	mov	r4, r1
    98c2:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    98c6:	f5ad 7d0e 	sub.w	sp, sp, #568	; 0x238
    98ca:	f10d 0e5c 	add.w	lr, sp, #92	; 0x5c
    98ce:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    98d2:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    98d6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    98da:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
    98de:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
    98e2:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
    98e6:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
    98ea:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
    98ee:	9616      	str	r6, [sp, #88]	; 0x58
    98f0:	e010      	b.n	9914 <__gnu_Unwind_Backtrace+0x60>
    98f2:	f7ff ffd3 	bl	989c <_Unwind_SetGR>
    98f6:	4621      	mov	r1, r4
    98f8:	a816      	add	r0, sp, #88	; 0x58
    98fa:	47a8      	blx	r5
    98fc:	4603      	mov	r3, r0
    98fe:	aa16      	add	r2, sp, #88	; 0x58
    9900:	4669      	mov	r1, sp
    9902:	2008      	movs	r0, #8
    9904:	b983      	cbnz	r3, 9928 <__gnu_Unwind_Backtrace+0x74>
    9906:	9b04      	ldr	r3, [sp, #16]
    9908:	4798      	blx	r3
    990a:	2805      	cmp	r0, #5
    990c:	4606      	mov	r6, r0
    990e:	d00c      	beq.n	992a <__gnu_Unwind_Backtrace+0x76>
    9910:	2809      	cmp	r0, #9
    9912:	d009      	beq.n	9928 <__gnu_Unwind_Backtrace+0x74>
    9914:	9926      	ldr	r1, [sp, #152]	; 0x98
    9916:	4668      	mov	r0, sp
    9918:	f7ff fe0e 	bl	9538 <get_eit_entry>
    991c:	4603      	mov	r3, r0
    991e:	466a      	mov	r2, sp
    9920:	210c      	movs	r1, #12
    9922:	a816      	add	r0, sp, #88	; 0x58
    9924:	2b00      	cmp	r3, #0
    9926:	d0e4      	beq.n	98f2 <__gnu_Unwind_Backtrace+0x3e>
    9928:	2609      	movs	r6, #9
    992a:	a816      	add	r0, sp, #88	; 0x58
    992c:	f7ff fe50 	bl	95d0 <restore_non_core_regs>
    9930:	4630      	mov	r0, r6
    9932:	f50d 7d0e 	add.w	sp, sp, #568	; 0x238
    9936:	bd70      	pop	{r4, r5, r6, pc}

00009938 <__gnu_unwind_pr_common>:
    9938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    993c:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
    993e:	b089      	sub	sp, #36	; 0x24
    9940:	461e      	mov	r6, r3
    9942:	f854 3b04 	ldr.w	r3, [r4], #4
    9946:	9406      	str	r4, [sp, #24]
    9948:	460d      	mov	r5, r1
    994a:	4617      	mov	r7, r2
    994c:	f000 0803 	and.w	r8, r0, #3
    9950:	2e00      	cmp	r6, #0
    9952:	d079      	beq.n	9a48 <__gnu_unwind_pr_common+0x110>
    9954:	0c1a      	lsrs	r2, r3, #16
    9956:	f88d 201d 	strb.w	r2, [sp, #29]
    995a:	041b      	lsls	r3, r3, #16
    995c:	b2d2      	uxtb	r2, r2
    995e:	9305      	str	r3, [sp, #20]
    9960:	eb04 0482 	add.w	r4, r4, r2, lsl #2
    9964:	2302      	movs	r3, #2
    9966:	f88d 301c 	strb.w	r3, [sp, #28]
    996a:	6d2b      	ldr	r3, [r5, #80]	; 0x50
    996c:	f1b8 0f02 	cmp.w	r8, #2
    9970:	bf08      	it	eq
    9972:	6bac      	ldreq	r4, [r5, #56]	; 0x38
    9974:	f013 0301 	ands.w	r3, r3, #1
    9978:	d00c      	beq.n	9994 <__gnu_unwind_pr_common+0x5c>
    997a:	a905      	add	r1, sp, #20
    997c:	4638      	mov	r0, r7
    997e:	f000 fb95 	bl	a0ac <__gnu_unwind_execute>
    9982:	b918      	cbnz	r0, 998c <__gnu_unwind_pr_common+0x54>
    9984:	2008      	movs	r0, #8
    9986:	b009      	add	sp, #36	; 0x24
    9988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    998c:	2009      	movs	r0, #9
    998e:	b009      	add	sp, #36	; 0x24
    9990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9994:	f8d4 a000 	ldr.w	sl, [r4]
    9998:	f1ba 0f00 	cmp.w	sl, #0
    999c:	d0ed      	beq.n	997a <__gnu_unwind_pr_common+0x42>
    999e:	9301      	str	r3, [sp, #4]
    99a0:	f000 0308 	and.w	r3, r0, #8
    99a4:	9302      	str	r3, [sp, #8]
    99a6:	2e02      	cmp	r6, #2
    99a8:	d04a      	beq.n	9a40 <__gnu_unwind_pr_common+0x108>
    99aa:	f8b4 a000 	ldrh.w	sl, [r4]
    99ae:	f8b4 9002 	ldrh.w	r9, [r4, #2]
    99b2:	3404      	adds	r4, #4
    99b4:	6cab      	ldr	r3, [r5, #72]	; 0x48
    99b6:	f029 0b01 	bic.w	fp, r9, #1
    99ba:	210f      	movs	r1, #15
    99bc:	4638      	mov	r0, r7
    99be:	449b      	add	fp, r3
    99c0:	f7ff ff46 	bl	9850 <_Unwind_GetGR>
    99c4:	4583      	cmp	fp, r0
    99c6:	d839      	bhi.n	9a3c <__gnu_unwind_pr_common+0x104>
    99c8:	f02a 0201 	bic.w	r2, sl, #1
    99cc:	445a      	add	r2, fp
    99ce:	4282      	cmp	r2, r0
    99d0:	bf94      	ite	ls
    99d2:	2200      	movls	r2, #0
    99d4:	2201      	movhi	r2, #1
    99d6:	ea4f 0349 	mov.w	r3, r9, lsl #1
    99da:	f003 0302 	and.w	r3, r3, #2
    99de:	f00a 0a01 	and.w	sl, sl, #1
    99e2:	ea43 030a 	orr.w	r3, r3, sl
    99e6:	2b01      	cmp	r3, #1
    99e8:	d04b      	beq.n	9a82 <__gnu_unwind_pr_common+0x14a>
    99ea:	2b02      	cmp	r3, #2
    99ec:	d032      	beq.n	9a54 <__gnu_unwind_pr_common+0x11c>
    99ee:	2b00      	cmp	r3, #0
    99f0:	d1cc      	bne.n	998c <__gnu_unwind_pr_common+0x54>
    99f2:	f1b8 0f00 	cmp.w	r8, #0
    99f6:	d002      	beq.n	99fe <__gnu_unwind_pr_common+0xc6>
    99f8:	2a00      	cmp	r2, #0
    99fa:	f040 80cd 	bne.w	9b98 <__gnu_unwind_pr_common+0x260>
    99fe:	3404      	adds	r4, #4
    9a00:	f8d4 a000 	ldr.w	sl, [r4]
    9a04:	f1ba 0f00 	cmp.w	sl, #0
    9a08:	d1cd      	bne.n	99a6 <__gnu_unwind_pr_common+0x6e>
    9a0a:	a905      	add	r1, sp, #20
    9a0c:	4638      	mov	r0, r7
    9a0e:	f000 fb4d 	bl	a0ac <__gnu_unwind_execute>
    9a12:	2800      	cmp	r0, #0
    9a14:	d1ba      	bne.n	998c <__gnu_unwind_pr_common+0x54>
    9a16:	9b01      	ldr	r3, [sp, #4]
    9a18:	2b00      	cmp	r3, #0
    9a1a:	d0b3      	beq.n	9984 <__gnu_unwind_pr_common+0x4c>
    9a1c:	210f      	movs	r1, #15
    9a1e:	4638      	mov	r0, r7
    9a20:	f7ff ff16 	bl	9850 <_Unwind_GetGR>
    9a24:	210e      	movs	r1, #14
    9a26:	4602      	mov	r2, r0
    9a28:	4638      	mov	r0, r7
    9a2a:	f7ff ff37 	bl	989c <_Unwind_SetGR>
    9a2e:	4638      	mov	r0, r7
    9a30:	4a6a      	ldr	r2, [pc, #424]	; (9bdc <__gnu_unwind_pr_common+0x2a4>)
    9a32:	210f      	movs	r1, #15
    9a34:	f7ff ff32 	bl	989c <_Unwind_SetGR>
    9a38:	2007      	movs	r0, #7
    9a3a:	e7a8      	b.n	998e <__gnu_unwind_pr_common+0x56>
    9a3c:	2200      	movs	r2, #0
    9a3e:	e7ca      	b.n	99d6 <__gnu_unwind_pr_common+0x9e>
    9a40:	f8d4 9004 	ldr.w	r9, [r4, #4]
    9a44:	3408      	adds	r4, #8
    9a46:	e7b5      	b.n	99b4 <__gnu_unwind_pr_common+0x7c>
    9a48:	021b      	lsls	r3, r3, #8
    9a4a:	9305      	str	r3, [sp, #20]
    9a4c:	f88d 601d 	strb.w	r6, [sp, #29]
    9a50:	2303      	movs	r3, #3
    9a52:	e788      	b.n	9966 <__gnu_unwind_pr_common+0x2e>
    9a54:	f8d4 9000 	ldr.w	r9, [r4]
    9a58:	f029 4b00 	bic.w	fp, r9, #2147483648	; 0x80000000
    9a5c:	f1b8 0f00 	cmp.w	r8, #0
    9a60:	d146      	bne.n	9af0 <__gnu_unwind_pr_common+0x1b8>
    9a62:	b12a      	cbz	r2, 9a70 <__gnu_unwind_pr_common+0x138>
    9a64:	9b02      	ldr	r3, [sp, #8]
    9a66:	2b00      	cmp	r3, #0
    9a68:	d05b      	beq.n	9b22 <__gnu_unwind_pr_common+0x1ea>
    9a6a:	f1bb 0f00 	cmp.w	fp, #0
    9a6e:	d073      	beq.n	9b58 <__gnu_unwind_pr_common+0x220>
    9a70:	f1b9 0f00 	cmp.w	r9, #0
    9a74:	da00      	bge.n	9a78 <__gnu_unwind_pr_common+0x140>
    9a76:	3404      	adds	r4, #4
    9a78:	f10b 0b01 	add.w	fp, fp, #1
    9a7c:	eb04 048b 	add.w	r4, r4, fp, lsl #2
    9a80:	e7be      	b.n	9a00 <__gnu_unwind_pr_common+0xc8>
    9a82:	f1b8 0f00 	cmp.w	r8, #0
    9a86:	d119      	bne.n	9abc <__gnu_unwind_pr_common+0x184>
    9a88:	b1b2      	cbz	r2, 9ab8 <__gnu_unwind_pr_common+0x180>
    9a8a:	6861      	ldr	r1, [r4, #4]
    9a8c:	6822      	ldr	r2, [r4, #0]
    9a8e:	1c88      	adds	r0, r1, #2
    9a90:	ea4f 72d2 	mov.w	r2, r2, lsr #31
    9a94:	f43f af7a 	beq.w	998c <__gnu_unwind_pr_common+0x54>
    9a98:	f105 0358 	add.w	r3, r5, #88	; 0x58
    9a9c:	3101      	adds	r1, #1
    9a9e:	9304      	str	r3, [sp, #16]
    9aa0:	f000 808e 	beq.w	9bc0 <__gnu_unwind_pr_common+0x288>
    9aa4:	1d20      	adds	r0, r4, #4
    9aa6:	f7ff fdbf 	bl	9628 <_Unwind_decode_typeinfo_ptr.constprop.0>
    9aaa:	ab04      	add	r3, sp, #16
    9aac:	4601      	mov	r1, r0
    9aae:	4628      	mov	r0, r5
    9ab0:	f7f8 fc7a 	bl	23a8 <__cxa_type_match>
    9ab4:	2800      	cmp	r0, #0
    9ab6:	d159      	bne.n	9b6c <__gnu_unwind_pr_common+0x234>
    9ab8:	3408      	adds	r4, #8
    9aba:	e7a1      	b.n	9a00 <__gnu_unwind_pr_common+0xc8>
    9abc:	210d      	movs	r1, #13
    9abe:	4638      	mov	r0, r7
    9ac0:	f8d5 9020 	ldr.w	r9, [r5, #32]
    9ac4:	f7ff fec4 	bl	9850 <_Unwind_GetGR>
    9ac8:	4581      	cmp	r9, r0
    9aca:	d1f5      	bne.n	9ab8 <__gnu_unwind_pr_common+0x180>
    9acc:	6aab      	ldr	r3, [r5, #40]	; 0x28
    9ace:	429c      	cmp	r4, r3
    9ad0:	d1f2      	bne.n	9ab8 <__gnu_unwind_pr_common+0x180>
    9ad2:	4620      	mov	r0, r4
    9ad4:	f7ff fce4 	bl	94a0 <selfrel_offset31>
    9ad8:	210f      	movs	r1, #15
    9ada:	4602      	mov	r2, r0
    9adc:	4638      	mov	r0, r7
    9ade:	f7ff fedd 	bl	989c <_Unwind_SetGR>
    9ae2:	4638      	mov	r0, r7
    9ae4:	462a      	mov	r2, r5
    9ae6:	2100      	movs	r1, #0
    9ae8:	f7ff fed8 	bl	989c <_Unwind_SetGR>
    9aec:	2007      	movs	r0, #7
    9aee:	e74e      	b.n	998e <__gnu_unwind_pr_common+0x56>
    9af0:	210d      	movs	r1, #13
    9af2:	4638      	mov	r0, r7
    9af4:	f8d5 a020 	ldr.w	sl, [r5, #32]
    9af8:	f7ff feaa 	bl	9850 <_Unwind_GetGR>
    9afc:	4582      	cmp	sl, r0
    9afe:	d1b7      	bne.n	9a70 <__gnu_unwind_pr_common+0x138>
    9b00:	6aab      	ldr	r3, [r5, #40]	; 0x28
    9b02:	429c      	cmp	r4, r3
    9b04:	d1b4      	bne.n	9a70 <__gnu_unwind_pr_common+0x138>
    9b06:	2304      	movs	r3, #4
    9b08:	2200      	movs	r2, #0
    9b0a:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
    9b0e:	18e3      	adds	r3, r4, r3
    9b10:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
    9b14:	636b      	str	r3, [r5, #52]	; 0x34
    9b16:	6823      	ldr	r3, [r4, #0]
    9b18:	2b00      	cmp	r3, #0
    9b1a:	db59      	blt.n	9bd0 <__gnu_unwind_pr_common+0x298>
    9b1c:	2301      	movs	r3, #1
    9b1e:	9301      	str	r3, [sp, #4]
    9b20:	e7aa      	b.n	9a78 <__gnu_unwind_pr_common+0x140>
    9b22:	4699      	mov	r9, r3
    9b24:	f105 0358 	add.w	r3, r5, #88	; 0x58
    9b28:	f8cd 800c 	str.w	r8, [sp, #12]
    9b2c:	f104 0a04 	add.w	sl, r4, #4
    9b30:	46b0      	mov	r8, r6
    9b32:	461e      	mov	r6, r3
    9b34:	e00e      	b.n	9b54 <__gnu_unwind_pr_common+0x21c>
    9b36:	4650      	mov	r0, sl
    9b38:	9604      	str	r6, [sp, #16]
    9b3a:	f7ff fd75 	bl	9628 <_Unwind_decode_typeinfo_ptr.constprop.0>
    9b3e:	2200      	movs	r2, #0
    9b40:	4601      	mov	r1, r0
    9b42:	ab04      	add	r3, sp, #16
    9b44:	4628      	mov	r0, r5
    9b46:	f109 0901 	add.w	r9, r9, #1
    9b4a:	f10a 0a04 	add.w	sl, sl, #4
    9b4e:	f7f8 fc2b 	bl	23a8 <__cxa_type_match>
    9b52:	b9d8      	cbnz	r0, 9b8c <__gnu_unwind_pr_common+0x254>
    9b54:	45d9      	cmp	r9, fp
    9b56:	d1ee      	bne.n	9b36 <__gnu_unwind_pr_common+0x1fe>
    9b58:	210d      	movs	r1, #13
    9b5a:	4638      	mov	r0, r7
    9b5c:	f7ff fe78 	bl	9850 <_Unwind_GetGR>
    9b60:	9b04      	ldr	r3, [sp, #16]
    9b62:	6228      	str	r0, [r5, #32]
    9b64:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
    9b68:	2006      	movs	r0, #6
    9b6a:	e710      	b.n	998e <__gnu_unwind_pr_common+0x56>
    9b6c:	4681      	mov	r9, r0
    9b6e:	210d      	movs	r1, #13
    9b70:	4638      	mov	r0, r7
    9b72:	f7ff fe6d 	bl	9850 <_Unwind_GetGR>
    9b76:	f1b9 0f02 	cmp.w	r9, #2
    9b7a:	bf04      	itt	eq
    9b7c:	462b      	moveq	r3, r5
    9b7e:	9a04      	ldreq	r2, [sp, #16]
    9b80:	6228      	str	r0, [r5, #32]
    9b82:	bf14      	ite	ne
    9b84:	9b04      	ldrne	r3, [sp, #16]
    9b86:	f843 2f2c 	streq.w	r2, [r3, #44]!
    9b8a:	e7eb      	b.n	9b64 <__gnu_unwind_pr_common+0x22c>
    9b8c:	4646      	mov	r6, r8
    9b8e:	f8d4 9000 	ldr.w	r9, [r4]
    9b92:	f8dd 800c 	ldr.w	r8, [sp, #12]
    9b96:	e76b      	b.n	9a70 <__gnu_unwind_pr_common+0x138>
    9b98:	4620      	mov	r0, r4
    9b9a:	f7ff fc81 	bl	94a0 <selfrel_offset31>
    9b9e:	3404      	adds	r4, #4
    9ba0:	4602      	mov	r2, r0
    9ba2:	63ac      	str	r4, [r5, #56]	; 0x38
    9ba4:	4628      	mov	r0, r5
    9ba6:	4614      	mov	r4, r2
    9ba8:	f7f8 fc56 	bl	2458 <__cxa_begin_cleanup>
    9bac:	2800      	cmp	r0, #0
    9bae:	f43f aeed 	beq.w	998c <__gnu_unwind_pr_common+0x54>
    9bb2:	4638      	mov	r0, r7
    9bb4:	4622      	mov	r2, r4
    9bb6:	210f      	movs	r1, #15
    9bb8:	f7ff fe70 	bl	989c <_Unwind_SetGR>
    9bbc:	2007      	movs	r0, #7
    9bbe:	e6e6      	b.n	998e <__gnu_unwind_pr_common+0x56>
    9bc0:	210d      	movs	r1, #13
    9bc2:	4638      	mov	r0, r7
    9bc4:	9301      	str	r3, [sp, #4]
    9bc6:	f7ff fe43 	bl	9850 <_Unwind_GetGR>
    9bca:	9b01      	ldr	r3, [sp, #4]
    9bcc:	6228      	str	r0, [r5, #32]
    9bce:	e7c9      	b.n	9b64 <__gnu_unwind_pr_common+0x22c>
    9bd0:	f10b 0001 	add.w	r0, fp, #1
    9bd4:	eb04 0080 	add.w	r0, r4, r0, lsl #2
    9bd8:	e77c      	b.n	9ad4 <__gnu_unwind_pr_common+0x19c>
    9bda:	bf00      	nop
    9bdc:	00009299 	.word	0x00009299

00009be0 <__aeabi_unwind_cpp_pr0>:
    9be0:	2300      	movs	r3, #0
    9be2:	f7ff bea9 	b.w	9938 <__gnu_unwind_pr_common>
    9be6:	bf00      	nop

00009be8 <__aeabi_unwind_cpp_pr1>:
    9be8:	2301      	movs	r3, #1
    9bea:	f7ff bea5 	b.w	9938 <__gnu_unwind_pr_common>
    9bee:	bf00      	nop

00009bf0 <__aeabi_unwind_cpp_pr2>:
    9bf0:	2302      	movs	r3, #2
    9bf2:	f7ff bea1 	b.w	9938 <__gnu_unwind_pr_common>
    9bf6:	bf00      	nop

00009bf8 <_Unwind_VRS_Pop>:
    9bf8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    9bfc:	4606      	mov	r6, r0
    9bfe:	b0c3      	sub	sp, #268	; 0x10c
    9c00:	4691      	mov	r9, r2
    9c02:	461c      	mov	r4, r3
    9c04:	2904      	cmp	r1, #4
    9c06:	f200 809b 	bhi.w	9d40 <_Unwind_VRS_Pop+0x148>
    9c0a:	e8df f001 	tbb	[pc, r1]
    9c0e:	567b      	.short	0x567b
    9c10:	2e99      	.short	0x2e99
    9c12:	03          	.byte	0x03
    9c13:	00          	.byte	0x00
    9c14:	2c00      	cmp	r4, #0
    9c16:	f040 8093 	bne.w	9d40 <_Unwind_VRS_Pop+0x148>
    9c1a:	2a10      	cmp	r2, #16
    9c1c:	f200 8090 	bhi.w	9d40 <_Unwind_VRS_Pop+0x148>
    9c20:	6803      	ldr	r3, [r0, #0]
    9c22:	06dc      	lsls	r4, r3, #27
    9c24:	f100 80f3 	bmi.w	9e0e <_Unwind_VRS_Pop+0x216>
    9c28:	af20      	add	r7, sp, #128	; 0x80
    9c2a:	4638      	mov	r0, r7
    9c2c:	f000 f9ae 	bl	9f8c <__gnu_Unwind_Save_WMMXC>
    9c30:	6bb4      	ldr	r4, [r6, #56]	; 0x38
    9c32:	4639      	mov	r1, r7
    9c34:	2300      	movs	r3, #0
    9c36:	f04f 0c01 	mov.w	ip, #1
    9c3a:	fa0c f203 	lsl.w	r2, ip, r3
    9c3e:	ea12 0f09 	tst.w	r2, r9
    9c42:	4620      	mov	r0, r4
    9c44:	f103 0301 	add.w	r3, r3, #1
    9c48:	d003      	beq.n	9c52 <_Unwind_VRS_Pop+0x5a>
    9c4a:	f850 2b04 	ldr.w	r2, [r0], #4
    9c4e:	600a      	str	r2, [r1, #0]
    9c50:	4604      	mov	r4, r0
    9c52:	2b04      	cmp	r3, #4
    9c54:	f101 0104 	add.w	r1, r1, #4
    9c58:	d1ef      	bne.n	9c3a <_Unwind_VRS_Pop+0x42>
    9c5a:	4638      	mov	r0, r7
    9c5c:	63b4      	str	r4, [r6, #56]	; 0x38
    9c5e:	f000 f98b 	bl	9f78 <__gnu_Unwind_Restore_WMMXC>
    9c62:	2000      	movs	r0, #0
    9c64:	b043      	add	sp, #268	; 0x10c
    9c66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    9c6a:	2c03      	cmp	r4, #3
    9c6c:	d168      	bne.n	9d40 <_Unwind_VRS_Pop+0x148>
    9c6e:	b294      	uxth	r4, r2
    9c70:	eb04 4312 	add.w	r3, r4, r2, lsr #16
    9c74:	2b10      	cmp	r3, #16
    9c76:	ea4f 4912 	mov.w	r9, r2, lsr #16
    9c7a:	d861      	bhi.n	9d40 <_Unwind_VRS_Pop+0x148>
    9c7c:	6803      	ldr	r3, [r0, #0]
    9c7e:	071d      	lsls	r5, r3, #28
    9c80:	f100 80cd 	bmi.w	9e1e <_Unwind_VRS_Pop+0x226>
    9c84:	af20      	add	r7, sp, #128	; 0x80
    9c86:	4638      	mov	r0, r7
    9c88:	f000 f954 	bl	9f34 <__gnu_Unwind_Save_WMMXD>
    9c8c:	6bb2      	ldr	r2, [r6, #56]	; 0x38
    9c8e:	eb07 01c9 	add.w	r1, r7, r9, lsl #3
    9c92:	b154      	cbz	r4, 9caa <_Unwind_VRS_Pop+0xb2>
    9c94:	460b      	mov	r3, r1
    9c96:	1ad0      	subs	r0, r2, r3
    9c98:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
    9c9c:	00e4      	lsls	r4, r4, #3
    9c9e:	581d      	ldr	r5, [r3, r0]
    9ca0:	f843 5b04 	str.w	r5, [r3], #4
    9ca4:	428b      	cmp	r3, r1
    9ca6:	d1fa      	bne.n	9c9e <_Unwind_VRS_Pop+0xa6>
    9ca8:	4422      	add	r2, r4
    9caa:	4638      	mov	r0, r7
    9cac:	63b2      	str	r2, [r6, #56]	; 0x38
    9cae:	f000 f91f 	bl	9ef0 <__gnu_Unwind_Restore_WMMXD>
    9cb2:	2000      	movs	r0, #0
    9cb4:	b043      	add	sp, #268	; 0x10c
    9cb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    9cba:	2c01      	cmp	r4, #1
    9cbc:	ea4f 4812 	mov.w	r8, r2, lsr #16
    9cc0:	fa1f f982 	uxth.w	r9, r2
    9cc4:	d038      	beq.n	9d38 <_Unwind_VRS_Pop+0x140>
    9cc6:	2c05      	cmp	r4, #5
    9cc8:	d13a      	bne.n	9d40 <_Unwind_VRS_Pop+0x148>
    9cca:	eb08 0309 	add.w	r3, r8, r9
    9cce:	2b20      	cmp	r3, #32
    9cd0:	d836      	bhi.n	9d40 <_Unwind_VRS_Pop+0x148>
    9cd2:	f1b8 0f0f 	cmp.w	r8, #15
    9cd6:	d976      	bls.n	9dc6 <_Unwind_VRS_Pop+0x1ce>
    9cd8:	f1b9 0f00 	cmp.w	r9, #0
    9cdc:	f040 8083 	bne.w	9de6 <_Unwind_VRS_Pop+0x1ee>
    9ce0:	2b0f      	cmp	r3, #15
    9ce2:	d80b      	bhi.n	9cfc <_Unwind_VRS_Pop+0x104>
    9ce4:	6833      	ldr	r3, [r6, #0]
    9ce6:	07d8      	lsls	r0, r3, #31
    9ce8:	d508      	bpl.n	9cfc <_Unwind_VRS_Pop+0x104>
    9cea:	4630      	mov	r0, r6
    9cec:	f023 0301 	bic.w	r3, r3, #1
    9cf0:	f043 0302 	orr.w	r3, r3, #2
    9cf4:	f840 3b48 	str.w	r3, [r0], #72
    9cf8:	f000 f8ee 	bl	9ed8 <__gnu_Unwind_Save_VFP_D>
    9cfc:	2000      	movs	r0, #0
    9cfe:	b043      	add	sp, #268	; 0x10c
    9d00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    9d04:	b9e4      	cbnz	r4, 9d40 <_Unwind_VRS_Pop+0x148>
    9d06:	6b87      	ldr	r7, [r0, #56]	; 0x38
    9d08:	4623      	mov	r3, r4
    9d0a:	fa1f fc82 	uxth.w	ip, r2
    9d0e:	2001      	movs	r0, #1
    9d10:	1d34      	adds	r4, r6, #4
    9d12:	fa00 f203 	lsl.w	r2, r0, r3
    9d16:	ea12 0f0c 	tst.w	r2, ip
    9d1a:	4639      	mov	r1, r7
    9d1c:	d004      	beq.n	9d28 <_Unwind_VRS_Pop+0x130>
    9d1e:	f851 2b04 	ldr.w	r2, [r1], #4
    9d22:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
    9d26:	460f      	mov	r7, r1
    9d28:	3301      	adds	r3, #1
    9d2a:	2b10      	cmp	r3, #16
    9d2c:	d1f1      	bne.n	9d12 <_Unwind_VRS_Pop+0x11a>
    9d2e:	f419 5000 	ands.w	r0, r9, #8192	; 0x2000
    9d32:	d1e3      	bne.n	9cfc <_Unwind_VRS_Pop+0x104>
    9d34:	63b7      	str	r7, [r6, #56]	; 0x38
    9d36:	e004      	b.n	9d42 <_Unwind_VRS_Pop+0x14a>
    9d38:	eb08 0309 	add.w	r3, r8, r9
    9d3c:	2b10      	cmp	r3, #16
    9d3e:	d903      	bls.n	9d48 <_Unwind_VRS_Pop+0x150>
    9d40:	2002      	movs	r0, #2
    9d42:	b043      	add	sp, #268	; 0x10c
    9d44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    9d48:	f1b8 0f0f 	cmp.w	r8, #15
    9d4c:	d8f8      	bhi.n	9d40 <_Unwind_VRS_Pop+0x148>
    9d4e:	6833      	ldr	r3, [r6, #0]
    9d50:	07da      	lsls	r2, r3, #31
    9d52:	d506      	bpl.n	9d62 <_Unwind_VRS_Pop+0x16a>
    9d54:	4630      	mov	r0, r6
    9d56:	f023 0303 	bic.w	r3, r3, #3
    9d5a:	f840 3b48 	str.w	r3, [r0], #72
    9d5e:	f000 f8b3 	bl	9ec8 <__gnu_Unwind_Save_VFP>
    9d62:	af20      	add	r7, sp, #128	; 0x80
    9d64:	4638      	mov	r0, r7
    9d66:	464d      	mov	r5, r9
    9d68:	f000 f8ae 	bl	9ec8 <__gnu_Unwind_Save_VFP>
    9d6c:	6bb2      	ldr	r2, [r6, #56]	; 0x38
    9d6e:	2d00      	cmp	r5, #0
    9d70:	d05e      	beq.n	9e30 <_Unwind_VRS_Pop+0x238>
    9d72:	f04f 0900 	mov.w	r9, #0
    9d76:	eb07 01c8 	add.w	r1, r7, r8, lsl #3
    9d7a:	eb02 03c5 	add.w	r3, r2, r5, lsl #3
    9d7e:	3904      	subs	r1, #4
    9d80:	f852 0b04 	ldr.w	r0, [r2], #4
    9d84:	f841 0f04 	str.w	r0, [r1, #4]!
    9d88:	429a      	cmp	r2, r3
    9d8a:	d1f9      	bne.n	9d80 <_Unwind_VRS_Pop+0x188>
    9d8c:	f1b9 0f00 	cmp.w	r9, #0
    9d90:	d054      	beq.n	9e3c <_Unwind_VRS_Pop+0x244>
    9d92:	466f      	mov	r7, sp
    9d94:	4641      	mov	r1, r8
    9d96:	2910      	cmp	r1, #16
    9d98:	bf38      	it	cc
    9d9a:	2110      	movcc	r1, #16
    9d9c:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
    9da0:	3984      	subs	r1, #132	; 0x84
    9da2:	eb03 02c9 	add.w	r2, r3, r9, lsl #3
    9da6:	f853 5b04 	ldr.w	r5, [r3], #4
    9daa:	f841 5f04 	str.w	r5, [r1, #4]!
    9dae:	429a      	cmp	r2, r3
    9db0:	d1f9      	bne.n	9da6 <_Unwind_VRS_Pop+0x1ae>
    9db2:	2c01      	cmp	r4, #1
    9db4:	d03b      	beq.n	9e2e <_Unwind_VRS_Pop+0x236>
    9db6:	f1b8 0f0f 	cmp.w	r8, #15
    9dba:	63b2      	str	r2, [r6, #56]	; 0x38
    9dbc:	d958      	bls.n	9e70 <_Unwind_VRS_Pop+0x278>
    9dbe:	4638      	mov	r0, r7
    9dc0:	f000 f88e 	bl	9ee0 <__gnu_Unwind_Restore_VFP_D_16_to_31>
    9dc4:	e79a      	b.n	9cfc <_Unwind_VRS_Pop+0x104>
    9dc6:	2b10      	cmp	r3, #16
    9dc8:	d954      	bls.n	9e74 <_Unwind_VRS_Pop+0x27c>
    9dca:	6832      	ldr	r2, [r6, #0]
    9dcc:	07d7      	lsls	r7, r2, #31
    9dce:	f1a3 0910 	sub.w	r9, r3, #16
    9dd2:	d509      	bpl.n	9de8 <_Unwind_VRS_Pop+0x1f0>
    9dd4:	f022 0301 	bic.w	r3, r2, #1
    9dd8:	4630      	mov	r0, r6
    9dda:	f043 0302 	orr.w	r3, r3, #2
    9dde:	f840 3b48 	str.w	r3, [r0], #72
    9de2:	f000 f879 	bl	9ed8 <__gnu_Unwind_Save_VFP_D>
    9de6:	6832      	ldr	r2, [r6, #0]
    9de8:	0753      	lsls	r3, r2, #29
    9dea:	d439      	bmi.n	9e60 <_Unwind_VRS_Pop+0x268>
    9dec:	f1b8 0f0f 	cmp.w	r8, #15
    9df0:	d802      	bhi.n	9df8 <_Unwind_VRS_Pop+0x200>
    9df2:	a820      	add	r0, sp, #128	; 0x80
    9df4:	f000 f870 	bl	9ed8 <__gnu_Unwind_Save_VFP_D>
    9df8:	466f      	mov	r7, sp
    9dfa:	4638      	mov	r0, r7
    9dfc:	f1c8 0510 	rsb	r5, r8, #16
    9e00:	f000 f872 	bl	9ee8 <__gnu_Unwind_Save_VFP_D_16_to_31>
    9e04:	2d00      	cmp	r5, #0
    9e06:	6bb2      	ldr	r2, [r6, #56]	; 0x38
    9e08:	dd28      	ble.n	9e5c <_Unwind_VRS_Pop+0x264>
    9e0a:	af20      	add	r7, sp, #128	; 0x80
    9e0c:	e7b3      	b.n	9d76 <_Unwind_VRS_Pop+0x17e>
    9e0e:	f023 0310 	bic.w	r3, r3, #16
    9e12:	6003      	str	r3, [r0, #0]
    9e14:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
    9e18:	f000 f8b8 	bl	9f8c <__gnu_Unwind_Save_WMMXC>
    9e1c:	e704      	b.n	9c28 <_Unwind_VRS_Pop+0x30>
    9e1e:	f023 0308 	bic.w	r3, r3, #8
    9e22:	6003      	str	r3, [r0, #0]
    9e24:	f500 70a8 	add.w	r0, r0, #336	; 0x150
    9e28:	f000 f884 	bl	9f34 <__gnu_Unwind_Save_WMMXD>
    9e2c:	e72a      	b.n	9c84 <_Unwind_VRS_Pop+0x8c>
    9e2e:	af20      	add	r7, sp, #128	; 0x80
    9e30:	3204      	adds	r2, #4
    9e32:	63b2      	str	r2, [r6, #56]	; 0x38
    9e34:	4638      	mov	r0, r7
    9e36:	f000 f843 	bl	9ec0 <__gnu_Unwind_Restore_VFP>
    9e3a:	e75f      	b.n	9cfc <_Unwind_VRS_Pop+0x104>
    9e3c:	2c01      	cmp	r4, #1
    9e3e:	d0f7      	beq.n	9e30 <_Unwind_VRS_Pop+0x238>
    9e40:	f1b8 0f0f 	cmp.w	r8, #15
    9e44:	63b2      	str	r2, [r6, #56]	; 0x38
    9e46:	f63f af59 	bhi.w	9cfc <_Unwind_VRS_Pop+0x104>
    9e4a:	4638      	mov	r0, r7
    9e4c:	f000 f840 	bl	9ed0 <__gnu_Unwind_Restore_VFP_D>
    9e50:	f1b9 0f00 	cmp.w	r9, #0
    9e54:	f43f af52 	beq.w	9cfc <_Unwind_VRS_Pop+0x104>
    9e58:	466f      	mov	r7, sp
    9e5a:	e7b0      	b.n	9dbe <_Unwind_VRS_Pop+0x1c6>
    9e5c:	4613      	mov	r3, r2
    9e5e:	e799      	b.n	9d94 <_Unwind_VRS_Pop+0x19c>
    9e60:	4630      	mov	r0, r6
    9e62:	f022 0204 	bic.w	r2, r2, #4
    9e66:	f840 2bd0 	str.w	r2, [r0], #208
    9e6a:	f000 f83d 	bl	9ee8 <__gnu_Unwind_Save_VFP_D_16_to_31>
    9e6e:	e7bd      	b.n	9dec <_Unwind_VRS_Pop+0x1f4>
    9e70:	af20      	add	r7, sp, #128	; 0x80
    9e72:	e7ea      	b.n	9e4a <_Unwind_VRS_Pop+0x252>
    9e74:	6833      	ldr	r3, [r6, #0]
    9e76:	07d9      	lsls	r1, r3, #31
    9e78:	d508      	bpl.n	9e8c <_Unwind_VRS_Pop+0x294>
    9e7a:	f023 0301 	bic.w	r3, r3, #1
    9e7e:	4630      	mov	r0, r6
    9e80:	f043 0302 	orr.w	r3, r3, #2
    9e84:	f840 3b48 	str.w	r3, [r0], #72
    9e88:	f000 f826 	bl	9ed8 <__gnu_Unwind_Save_VFP_D>
    9e8c:	af20      	add	r7, sp, #128	; 0x80
    9e8e:	4638      	mov	r0, r7
    9e90:	464d      	mov	r5, r9
    9e92:	f000 f821 	bl	9ed8 <__gnu_Unwind_Save_VFP_D>
    9e96:	6bb2      	ldr	r2, [r6, #56]	; 0x38
    9e98:	2d00      	cmp	r5, #0
    9e9a:	f47f af6a 	bne.w	9d72 <_Unwind_VRS_Pop+0x17a>
    9e9e:	4638      	mov	r0, r7
    9ea0:	f000 f816 	bl	9ed0 <__gnu_Unwind_Restore_VFP_D>
    9ea4:	e72a      	b.n	9cfc <_Unwind_VRS_Pop+0x104>
    9ea6:	bf00      	nop

00009ea8 <__restore_core_regs>:
    9ea8:	f100 0134 	add.w	r1, r0, #52	; 0x34
    9eac:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
    9eb0:	469c      	mov	ip, r3
    9eb2:	46a6      	mov	lr, r4
    9eb4:	f84c 5d04 	str.w	r5, [ip, #-4]!
    9eb8:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
    9ebc:	46e5      	mov	sp, ip
    9ebe:	bd00      	pop	{pc}

00009ec0 <__gnu_Unwind_Restore_VFP>:
    9ec0:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
    9ec4:	4770      	bx	lr
    9ec6:	bf00      	nop

00009ec8 <__gnu_Unwind_Save_VFP>:
    9ec8:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
    9ecc:	4770      	bx	lr
    9ece:	bf00      	nop

00009ed0 <__gnu_Unwind_Restore_VFP_D>:
    9ed0:	ec90 0b20 	vldmia	r0, {d0-d15}
    9ed4:	4770      	bx	lr
    9ed6:	bf00      	nop

00009ed8 <__gnu_Unwind_Save_VFP_D>:
    9ed8:	ec80 0b20 	vstmia	r0, {d0-d15}
    9edc:	4770      	bx	lr
    9ede:	bf00      	nop

00009ee0 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
    9ee0:	ecd0 0b20 	vldmia	r0, {d16-d31}
    9ee4:	4770      	bx	lr
    9ee6:	bf00      	nop

00009ee8 <__gnu_Unwind_Save_VFP_D_16_to_31>:
    9ee8:	ecc0 0b20 	vstmia	r0, {d16-d31}
    9eec:	4770      	bx	lr
    9eee:	bf00      	nop

00009ef0 <__gnu_Unwind_Restore_WMMXD>:
    9ef0:	ecf0 0102 	ldfe	f0, [r0], #8
    9ef4:	ecf0 1102 	ldfe	f1, [r0], #8
    9ef8:	ecf0 2102 	ldfe	f2, [r0], #8
    9efc:	ecf0 3102 	ldfe	f3, [r0], #8
    9f00:	ecf0 4102 	ldfe	f4, [r0], #8
    9f04:	ecf0 5102 	ldfe	f5, [r0], #8
    9f08:	ecf0 6102 	ldfe	f6, [r0], #8
    9f0c:	ecf0 7102 	ldfe	f7, [r0], #8
    9f10:	ecf0 8102 	ldfp	f0, [r0], #8
    9f14:	ecf0 9102 	ldfp	f1, [r0], #8
    9f18:	ecf0 a102 	ldfp	f2, [r0], #8
    9f1c:	ecf0 b102 	ldfp	f3, [r0], #8
    9f20:	ecf0 c102 	ldfp	f4, [r0], #8
    9f24:	ecf0 d102 	ldfp	f5, [r0], #8
    9f28:	ecf0 e102 	ldfp	f6, [r0], #8
    9f2c:	ecf0 f102 	ldfp	f7, [r0], #8
    9f30:	4770      	bx	lr
    9f32:	bf00      	nop

00009f34 <__gnu_Unwind_Save_WMMXD>:
    9f34:	ece0 0102 	stfe	f0, [r0], #8
    9f38:	ece0 1102 	stfe	f1, [r0], #8
    9f3c:	ece0 2102 	stfe	f2, [r0], #8
    9f40:	ece0 3102 	stfe	f3, [r0], #8
    9f44:	ece0 4102 	stfe	f4, [r0], #8
    9f48:	ece0 5102 	stfe	f5, [r0], #8
    9f4c:	ece0 6102 	stfe	f6, [r0], #8
    9f50:	ece0 7102 	stfe	f7, [r0], #8
    9f54:	ece0 8102 	stfp	f0, [r0], #8
    9f58:	ece0 9102 	stfp	f1, [r0], #8
    9f5c:	ece0 a102 	stfp	f2, [r0], #8
    9f60:	ece0 b102 	stfp	f3, [r0], #8
    9f64:	ece0 c102 	stfp	f4, [r0], #8
    9f68:	ece0 d102 	stfp	f5, [r0], #8
    9f6c:	ece0 e102 	stfp	f6, [r0], #8
    9f70:	ece0 f102 	stfp	f7, [r0], #8
    9f74:	4770      	bx	lr
    9f76:	bf00      	nop

00009f78 <__gnu_Unwind_Restore_WMMXC>:
    9f78:	fcb0 8101 	ldc2	1, cr8, [r0], #4
    9f7c:	fcb0 9101 	ldc2	1, cr9, [r0], #4
    9f80:	fcb0 a101 	ldc2	1, cr10, [r0], #4
    9f84:	fcb0 b101 	ldc2	1, cr11, [r0], #4
    9f88:	4770      	bx	lr
    9f8a:	bf00      	nop

00009f8c <__gnu_Unwind_Save_WMMXC>:
    9f8c:	fca0 8101 	stc2	1, cr8, [r0], #4
    9f90:	fca0 9101 	stc2	1, cr9, [r0], #4
    9f94:	fca0 a101 	stc2	1, cr10, [r0], #4
    9f98:	fca0 b101 	stc2	1, cr11, [r0], #4
    9f9c:	4770      	bx	lr
    9f9e:	bf00      	nop

00009fa0 <_Unwind_RaiseException>:
    9fa0:	46ec      	mov	ip, sp
    9fa2:	b500      	push	{lr}
    9fa4:	e92d 5000 	stmdb	sp!, {ip, lr}
    9fa8:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    9fac:	f04f 0300 	mov.w	r3, #0
    9fb0:	e92d 000c 	stmdb	sp!, {r2, r3}
    9fb4:	a901      	add	r1, sp, #4
    9fb6:	f7ff fbc3 	bl	9740 <__gnu_Unwind_RaiseException>
    9fba:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    9fbe:	b012      	add	sp, #72	; 0x48
    9fc0:	4770      	bx	lr
    9fc2:	bf00      	nop

00009fc4 <_Unwind_Resume>:
    9fc4:	46ec      	mov	ip, sp
    9fc6:	b500      	push	{lr}
    9fc8:	e92d 5000 	stmdb	sp!, {ip, lr}
    9fcc:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    9fd0:	f04f 0300 	mov.w	r3, #0
    9fd4:	e92d 000c 	stmdb	sp!, {r2, r3}
    9fd8:	a901      	add	r1, sp, #4
    9fda:	f7ff fbed 	bl	97b8 <__gnu_Unwind_Resume>
    9fde:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    9fe2:	b012      	add	sp, #72	; 0x48
    9fe4:	4770      	bx	lr
    9fe6:	bf00      	nop

00009fe8 <_Unwind_Resume_or_Rethrow>:
    9fe8:	46ec      	mov	ip, sp
    9fea:	b500      	push	{lr}
    9fec:	e92d 5000 	stmdb	sp!, {ip, lr}
    9ff0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    9ff4:	f04f 0300 	mov.w	r3, #0
    9ff8:	e92d 000c 	stmdb	sp!, {r2, r3}
    9ffc:	a901      	add	r1, sp, #4
    9ffe:	f7ff fbfd 	bl	97fc <__gnu_Unwind_Resume_or_Rethrow>
    a002:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    a006:	b012      	add	sp, #72	; 0x48
    a008:	4770      	bx	lr
    a00a:	bf00      	nop

0000a00c <_Unwind_ForcedUnwind>:
    a00c:	46ec      	mov	ip, sp
    a00e:	b500      	push	{lr}
    a010:	e92d 5000 	stmdb	sp!, {ip, lr}
    a014:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    a018:	f04f 0300 	mov.w	r3, #0
    a01c:	e92d 000c 	stmdb	sp!, {r2, r3}
    a020:	ab01      	add	r3, sp, #4
    a022:	f7ff fbc1 	bl	97a8 <__gnu_Unwind_ForcedUnwind>
    a026:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    a02a:	b012      	add	sp, #72	; 0x48
    a02c:	4770      	bx	lr
    a02e:	bf00      	nop

0000a030 <_Unwind_Backtrace>:
    a030:	46ec      	mov	ip, sp
    a032:	b500      	push	{lr}
    a034:	e92d 5000 	stmdb	sp!, {ip, lr}
    a038:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
    a03c:	f04f 0300 	mov.w	r3, #0
    a040:	e92d 000c 	stmdb	sp!, {r2, r3}
    a044:	aa01      	add	r2, sp, #4
    a046:	f7ff fc35 	bl	98b4 <__gnu_Unwind_Backtrace>
    a04a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
    a04e:	b012      	add	sp, #72	; 0x48
    a050:	4770      	bx	lr
    a052:	bf00      	nop

0000a054 <next_unwind_byte>:
    a054:	7a02      	ldrb	r2, [r0, #8]
    a056:	4603      	mov	r3, r0
    a058:	b97a      	cbnz	r2, a07a <next_unwind_byte+0x26>
    a05a:	7a42      	ldrb	r2, [r0, #9]
    a05c:	b1a2      	cbz	r2, a088 <next_unwind_byte+0x34>
    a05e:	6841      	ldr	r1, [r0, #4]
    a060:	3a01      	subs	r2, #1
    a062:	b410      	push	{r4}
    a064:	7242      	strb	r2, [r0, #9]
    a066:	6808      	ldr	r0, [r1, #0]
    a068:	2203      	movs	r2, #3
    a06a:	1d0c      	adds	r4, r1, #4
    a06c:	721a      	strb	r2, [r3, #8]
    a06e:	0202      	lsls	r2, r0, #8
    a070:	605c      	str	r4, [r3, #4]
    a072:	0e00      	lsrs	r0, r0, #24
    a074:	bc10      	pop	{r4}
    a076:	601a      	str	r2, [r3, #0]
    a078:	4770      	bx	lr
    a07a:	6800      	ldr	r0, [r0, #0]
    a07c:	3a01      	subs	r2, #1
    a07e:	721a      	strb	r2, [r3, #8]
    a080:	0202      	lsls	r2, r0, #8
    a082:	601a      	str	r2, [r3, #0]
    a084:	0e00      	lsrs	r0, r0, #24
    a086:	4770      	bx	lr
    a088:	20b0      	movs	r0, #176	; 0xb0
    a08a:	4770      	bx	lr

0000a08c <_Unwind_GetGR.constprop.0>:
    a08c:	b500      	push	{lr}
    a08e:	b085      	sub	sp, #20
    a090:	2300      	movs	r3, #0
    a092:	aa03      	add	r2, sp, #12
    a094:	9200      	str	r2, [sp, #0]
    a096:	4619      	mov	r1, r3
    a098:	220c      	movs	r2, #12
    a09a:	f7ff fbc1 	bl	9820 <_Unwind_VRS_Get>
    a09e:	9803      	ldr	r0, [sp, #12]
    a0a0:	b005      	add	sp, #20
    a0a2:	f85d fb04 	ldr.w	pc, [sp], #4
    a0a6:	bf00      	nop

0000a0a8 <unwind_UCB_from_context>:
    a0a8:	f7ff bff0 	b.w	a08c <_Unwind_GetGR.constprop.0>

0000a0ac <__gnu_unwind_execute>:
    a0ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    a0b0:	b085      	sub	sp, #20
    a0b2:	4607      	mov	r7, r0
    a0b4:	460e      	mov	r6, r1
    a0b6:	f04f 0800 	mov.w	r8, #0
    a0ba:	ad03      	add	r5, sp, #12
    a0bc:	4630      	mov	r0, r6
    a0be:	f7ff ffc9 	bl	a054 <next_unwind_byte>
    a0c2:	28b0      	cmp	r0, #176	; 0xb0
    a0c4:	4604      	mov	r4, r0
    a0c6:	f000 80cb 	beq.w	a260 <__gnu_unwind_execute+0x1b4>
    a0ca:	0603      	lsls	r3, r0, #24
    a0cc:	d540      	bpl.n	a150 <__gnu_unwind_execute+0xa4>
    a0ce:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
    a0d2:	2b80      	cmp	r3, #128	; 0x80
    a0d4:	d056      	beq.n	a184 <__gnu_unwind_execute+0xd8>
    a0d6:	2bb0      	cmp	r3, #176	; 0xb0
    a0d8:	d07d      	beq.n	a1d6 <__gnu_unwind_execute+0x12a>
    a0da:	d81c      	bhi.n	a116 <__gnu_unwind_execute+0x6a>
    a0dc:	2b90      	cmp	r3, #144	; 0x90
    a0de:	f000 8093 	beq.w	a208 <__gnu_unwind_execute+0x15c>
    a0e2:	2ba0      	cmp	r3, #160	; 0xa0
    a0e4:	d113      	bne.n	a10e <__gnu_unwind_execute+0x62>
    a0e6:	43c3      	mvns	r3, r0
    a0e8:	f003 0307 	and.w	r3, r3, #7
    a0ec:	f44f 627f 	mov.w	r2, #4080	; 0xff0
    a0f0:	411a      	asrs	r2, r3
    a0f2:	0701      	lsls	r1, r0, #28
    a0f4:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
    a0f8:	f04f 0300 	mov.w	r3, #0
    a0fc:	bf48      	it	mi
    a0fe:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
    a102:	4619      	mov	r1, r3
    a104:	4638      	mov	r0, r7
    a106:	f7ff fd77 	bl	9bf8 <_Unwind_VRS_Pop>
    a10a:	2800      	cmp	r0, #0
    a10c:	d0d6      	beq.n	a0bc <__gnu_unwind_execute+0x10>
    a10e:	2009      	movs	r0, #9
    a110:	b005      	add	sp, #20
    a112:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    a116:	2bc0      	cmp	r3, #192	; 0xc0
    a118:	d14b      	bne.n	a1b2 <__gnu_unwind_execute+0x106>
    a11a:	28c6      	cmp	r0, #198	; 0xc6
    a11c:	f000 8089 	beq.w	a232 <__gnu_unwind_execute+0x186>
    a120:	28c7      	cmp	r0, #199	; 0xc7
    a122:	f000 80a2 	beq.w	a26a <__gnu_unwind_execute+0x1be>
    a126:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
    a12a:	2bc0      	cmp	r3, #192	; 0xc0
    a12c:	f000 80bc 	beq.w	a2a8 <__gnu_unwind_execute+0x1fc>
    a130:	28c8      	cmp	r0, #200	; 0xc8
    a132:	f000 80bf 	beq.w	a2b4 <__gnu_unwind_execute+0x208>
    a136:	28c9      	cmp	r0, #201	; 0xc9
    a138:	d1e9      	bne.n	a10e <__gnu_unwind_execute+0x62>
    a13a:	4630      	mov	r0, r6
    a13c:	f7ff ff8a 	bl	a054 <next_unwind_byte>
    a140:	0302      	lsls	r2, r0, #12
    a142:	f000 000f 	and.w	r0, r0, #15
    a146:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
    a14a:	3001      	adds	r0, #1
    a14c:	4302      	orrs	r2, r0
    a14e:	e039      	b.n	a1c4 <__gnu_unwind_execute+0x118>
    a150:	0083      	lsls	r3, r0, #2
    a152:	b2db      	uxtb	r3, r3
    a154:	f103 0904 	add.w	r9, r3, #4
    a158:	2300      	movs	r3, #0
    a15a:	4619      	mov	r1, r3
    a15c:	9500      	str	r5, [sp, #0]
    a15e:	220d      	movs	r2, #13
    a160:	4638      	mov	r0, r7
    a162:	f7ff fb5d 	bl	9820 <_Unwind_VRS_Get>
    a166:	9b03      	ldr	r3, [sp, #12]
    a168:	0660      	lsls	r0, r4, #25
    a16a:	bf4c      	ite	mi
    a16c:	eba3 0309 	submi.w	r3, r3, r9
    a170:	444b      	addpl	r3, r9
    a172:	9303      	str	r3, [sp, #12]
    a174:	2300      	movs	r3, #0
    a176:	9500      	str	r5, [sp, #0]
    a178:	220d      	movs	r2, #13
    a17a:	4619      	mov	r1, r3
    a17c:	4638      	mov	r0, r7
    a17e:	f7ff fb75 	bl	986c <_Unwind_VRS_Set>
    a182:	e79b      	b.n	a0bc <__gnu_unwind_execute+0x10>
    a184:	0204      	lsls	r4, r0, #8
    a186:	4630      	mov	r0, r6
    a188:	f7ff ff64 	bl	a054 <next_unwind_byte>
    a18c:	4320      	orrs	r0, r4
    a18e:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
    a192:	d0bc      	beq.n	a10e <__gnu_unwind_execute+0x62>
    a194:	0104      	lsls	r4, r0, #4
    a196:	2300      	movs	r3, #0
    a198:	b2a2      	uxth	r2, r4
    a19a:	4619      	mov	r1, r3
    a19c:	4638      	mov	r0, r7
    a19e:	f7ff fd2b 	bl	9bf8 <_Unwind_VRS_Pop>
    a1a2:	2800      	cmp	r0, #0
    a1a4:	d1b3      	bne.n	a10e <__gnu_unwind_execute+0x62>
    a1a6:	f414 4f00 	tst.w	r4, #32768	; 0x8000
    a1aa:	bf18      	it	ne
    a1ac:	f04f 0801 	movne.w	r8, #1
    a1b0:	e784      	b.n	a0bc <__gnu_unwind_execute+0x10>
    a1b2:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
    a1b6:	2bd0      	cmp	r3, #208	; 0xd0
    a1b8:	d1a9      	bne.n	a10e <__gnu_unwind_execute+0x62>
    a1ba:	f000 0207 	and.w	r2, r0, #7
    a1be:	3201      	adds	r2, #1
    a1c0:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
    a1c4:	2305      	movs	r3, #5
    a1c6:	2101      	movs	r1, #1
    a1c8:	4638      	mov	r0, r7
    a1ca:	f7ff fd15 	bl	9bf8 <_Unwind_VRS_Pop>
    a1ce:	2800      	cmp	r0, #0
    a1d0:	f43f af74 	beq.w	a0bc <__gnu_unwind_execute+0x10>
    a1d4:	e79b      	b.n	a10e <__gnu_unwind_execute+0x62>
    a1d6:	28b1      	cmp	r0, #177	; 0xb1
    a1d8:	d037      	beq.n	a24a <__gnu_unwind_execute+0x19e>
    a1da:	28b2      	cmp	r0, #178	; 0xb2
    a1dc:	f000 8087 	beq.w	a2ee <__gnu_unwind_execute+0x242>
    a1e0:	28b3      	cmp	r0, #179	; 0xb3
    a1e2:	d056      	beq.n	a292 <__gnu_unwind_execute+0x1e6>
    a1e4:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
    a1e8:	2bb4      	cmp	r3, #180	; 0xb4
    a1ea:	d090      	beq.n	a10e <__gnu_unwind_execute+0x62>
    a1ec:	f000 0207 	and.w	r2, r0, #7
    a1f0:	3201      	adds	r2, #1
    a1f2:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
    a1f6:	2301      	movs	r3, #1
    a1f8:	4619      	mov	r1, r3
    a1fa:	4638      	mov	r0, r7
    a1fc:	f7ff fcfc 	bl	9bf8 <_Unwind_VRS_Pop>
    a200:	2800      	cmp	r0, #0
    a202:	f43f af5b 	beq.w	a0bc <__gnu_unwind_execute+0x10>
    a206:	e782      	b.n	a10e <__gnu_unwind_execute+0x62>
    a208:	f000 030d 	and.w	r3, r0, #13
    a20c:	2b0d      	cmp	r3, #13
    a20e:	f43f af7e 	beq.w	a10e <__gnu_unwind_execute+0x62>
    a212:	2300      	movs	r3, #0
    a214:	f000 020f 	and.w	r2, r0, #15
    a218:	4619      	mov	r1, r3
    a21a:	9500      	str	r5, [sp, #0]
    a21c:	4638      	mov	r0, r7
    a21e:	f7ff faff 	bl	9820 <_Unwind_VRS_Get>
    a222:	2300      	movs	r3, #0
    a224:	9500      	str	r5, [sp, #0]
    a226:	220d      	movs	r2, #13
    a228:	4619      	mov	r1, r3
    a22a:	4638      	mov	r0, r7
    a22c:	f7ff fb1e 	bl	986c <_Unwind_VRS_Set>
    a230:	e744      	b.n	a0bc <__gnu_unwind_execute+0x10>
    a232:	4630      	mov	r0, r6
    a234:	f7ff ff0e 	bl	a054 <next_unwind_byte>
    a238:	0302      	lsls	r2, r0, #12
    a23a:	f000 000f 	and.w	r0, r0, #15
    a23e:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
    a242:	3001      	adds	r0, #1
    a244:	4302      	orrs	r2, r0
    a246:	2303      	movs	r3, #3
    a248:	e7d6      	b.n	a1f8 <__gnu_unwind_execute+0x14c>
    a24a:	4630      	mov	r0, r6
    a24c:	f7ff ff02 	bl	a054 <next_unwind_byte>
    a250:	4602      	mov	r2, r0
    a252:	2800      	cmp	r0, #0
    a254:	f43f af5b 	beq.w	a10e <__gnu_unwind_execute+0x62>
    a258:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
    a25c:	d0cc      	beq.n	a1f8 <__gnu_unwind_execute+0x14c>
    a25e:	e756      	b.n	a10e <__gnu_unwind_execute+0x62>
    a260:	f1b8 0f00 	cmp.w	r8, #0
    a264:	d032      	beq.n	a2cc <__gnu_unwind_execute+0x220>
    a266:	2000      	movs	r0, #0
    a268:	e752      	b.n	a110 <__gnu_unwind_execute+0x64>
    a26a:	4630      	mov	r0, r6
    a26c:	f7ff fef2 	bl	a054 <next_unwind_byte>
    a270:	4602      	mov	r2, r0
    a272:	2800      	cmp	r0, #0
    a274:	f43f af4b 	beq.w	a10e <__gnu_unwind_execute+0x62>
    a278:	f010 0ff0 	tst.w	r0, #240	; 0xf0
    a27c:	f47f af47 	bne.w	a10e <__gnu_unwind_execute+0x62>
    a280:	2300      	movs	r3, #0
    a282:	2104      	movs	r1, #4
    a284:	4638      	mov	r0, r7
    a286:	f7ff fcb7 	bl	9bf8 <_Unwind_VRS_Pop>
    a28a:	2800      	cmp	r0, #0
    a28c:	f43f af16 	beq.w	a0bc <__gnu_unwind_execute+0x10>
    a290:	e73d      	b.n	a10e <__gnu_unwind_execute+0x62>
    a292:	4630      	mov	r0, r6
    a294:	f7ff fede 	bl	a054 <next_unwind_byte>
    a298:	0302      	lsls	r2, r0, #12
    a29a:	f000 000f 	and.w	r0, r0, #15
    a29e:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
    a2a2:	3001      	adds	r0, #1
    a2a4:	4302      	orrs	r2, r0
    a2a6:	e7a6      	b.n	a1f6 <__gnu_unwind_execute+0x14a>
    a2a8:	f000 020f 	and.w	r2, r0, #15
    a2ac:	3201      	adds	r2, #1
    a2ae:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
    a2b2:	e7c8      	b.n	a246 <__gnu_unwind_execute+0x19a>
    a2b4:	4630      	mov	r0, r6
    a2b6:	f7ff fecd 	bl	a054 <next_unwind_byte>
    a2ba:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
    a2be:	f000 030f 	and.w	r3, r0, #15
    a2c2:	3210      	adds	r2, #16
    a2c4:	3301      	adds	r3, #1
    a2c6:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
    a2ca:	e77b      	b.n	a1c4 <__gnu_unwind_execute+0x118>
    a2cc:	ac03      	add	r4, sp, #12
    a2ce:	4643      	mov	r3, r8
    a2d0:	220e      	movs	r2, #14
    a2d2:	4641      	mov	r1, r8
    a2d4:	9400      	str	r4, [sp, #0]
    a2d6:	4638      	mov	r0, r7
    a2d8:	f7ff faa2 	bl	9820 <_Unwind_VRS_Get>
    a2dc:	9400      	str	r4, [sp, #0]
    a2de:	4643      	mov	r3, r8
    a2e0:	220f      	movs	r2, #15
    a2e2:	4641      	mov	r1, r8
    a2e4:	4638      	mov	r0, r7
    a2e6:	f7ff fac1 	bl	986c <_Unwind_VRS_Set>
    a2ea:	4640      	mov	r0, r8
    a2ec:	e710      	b.n	a110 <__gnu_unwind_execute+0x64>
    a2ee:	2300      	movs	r3, #0
    a2f0:	220d      	movs	r2, #13
    a2f2:	4619      	mov	r1, r3
    a2f4:	9500      	str	r5, [sp, #0]
    a2f6:	4638      	mov	r0, r7
    a2f8:	f7ff fa92 	bl	9820 <_Unwind_VRS_Get>
    a2fc:	4630      	mov	r0, r6
    a2fe:	f7ff fea9 	bl	a054 <next_unwind_byte>
    a302:	0602      	lsls	r2, r0, #24
    a304:	9c03      	ldr	r4, [sp, #12]
    a306:	f04f 0902 	mov.w	r9, #2
    a30a:	d50c      	bpl.n	a326 <__gnu_unwind_execute+0x27a>
    a30c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    a310:	fa00 f009 	lsl.w	r0, r0, r9
    a314:	4404      	add	r4, r0
    a316:	4630      	mov	r0, r6
    a318:	9403      	str	r4, [sp, #12]
    a31a:	f7ff fe9b 	bl	a054 <next_unwind_byte>
    a31e:	0603      	lsls	r3, r0, #24
    a320:	f109 0907 	add.w	r9, r9, #7
    a324:	d4f2      	bmi.n	a30c <__gnu_unwind_execute+0x260>
    a326:	f000 037f 	and.w	r3, r0, #127	; 0x7f
    a32a:	fa03 f309 	lsl.w	r3, r3, r9
    a32e:	f504 7401 	add.w	r4, r4, #516	; 0x204
    a332:	4423      	add	r3, r4
    a334:	e71d      	b.n	a172 <__gnu_unwind_execute+0xc6>
    a336:	bf00      	nop

0000a338 <__gnu_unwind_frame>:
    a338:	b510      	push	{r4, lr}
    a33a:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
    a33c:	6853      	ldr	r3, [r2, #4]
    a33e:	b084      	sub	sp, #16
    a340:	f04f 0c03 	mov.w	ip, #3
    a344:	3208      	adds	r2, #8
    a346:	021c      	lsls	r4, r3, #8
    a348:	4608      	mov	r0, r1
    a34a:	0e1b      	lsrs	r3, r3, #24
    a34c:	a901      	add	r1, sp, #4
    a34e:	9401      	str	r4, [sp, #4]
    a350:	9202      	str	r2, [sp, #8]
    a352:	f88d c00c 	strb.w	ip, [sp, #12]
    a356:	f88d 300d 	strb.w	r3, [sp, #13]
    a35a:	f7ff fea7 	bl	a0ac <__gnu_unwind_execute>
    a35e:	b004      	add	sp, #16
    a360:	bd10      	pop	{r4, pc}
    a362:	bf00      	nop

0000a364 <_Unwind_GetRegionStart>:
    a364:	b508      	push	{r3, lr}
    a366:	f7ff fe9f 	bl	a0a8 <unwind_UCB_from_context>
    a36a:	6c80      	ldr	r0, [r0, #72]	; 0x48
    a36c:	bd08      	pop	{r3, pc}
    a36e:	bf00      	nop

0000a370 <_Unwind_GetLanguageSpecificData>:
    a370:	b508      	push	{r3, lr}
    a372:	f7ff fe99 	bl	a0a8 <unwind_UCB_from_context>
    a376:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
    a378:	79c3      	ldrb	r3, [r0, #7]
    a37a:	3302      	adds	r3, #2
    a37c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
    a380:	bd08      	pop	{r3, pc}
    a382:	bf00      	nop

0000a384 <_Unwind_GetDataRelBase>:
    a384:	b508      	push	{r3, lr}
    a386:	f7f6 fb1d 	bl	9c4 <abort>

0000a38a <_Unwind_GetTextRelBase>:
    a38a:	b508      	push	{r3, lr}
    a38c:	f7ff fffa 	bl	a384 <_Unwind_GetDataRelBase>

0000a390 <strncmp>:
    a390:	2a00      	cmp	r2, #0
    a392:	d03e      	beq.n	a412 <strncmp+0x82>
    a394:	ea40 0301 	orr.w	r3, r0, r1
    a398:	079b      	lsls	r3, r3, #30
    a39a:	b530      	push	{r4, r5, lr}
    a39c:	4684      	mov	ip, r0
    a39e:	d12f      	bne.n	a400 <strncmp+0x70>
    a3a0:	2a03      	cmp	r2, #3
    a3a2:	d92d      	bls.n	a400 <strncmp+0x70>
    a3a4:	460b      	mov	r3, r1
    a3a6:	e008      	b.n	a3ba <strncmp+0x2a>
    a3a8:	3a04      	subs	r2, #4
    a3aa:	4684      	mov	ip, r0
    a3ac:	4619      	mov	r1, r3
    a3ae:	d025      	beq.n	a3fc <strncmp+0x6c>
    a3b0:	f01e 3f80 	tst.w	lr, #2155905152	; 0x80808080
    a3b4:	d122      	bne.n	a3fc <strncmp+0x6c>
    a3b6:	2a03      	cmp	r2, #3
    a3b8:	d922      	bls.n	a400 <strncmp+0x70>
    a3ba:	6804      	ldr	r4, [r0, #0]
    a3bc:	4619      	mov	r1, r3
    a3be:	f853 5b04 	ldr.w	r5, [r3], #4
    a3c2:	f1a4 3e01 	sub.w	lr, r4, #16843009	; 0x1010101
    a3c6:	42ac      	cmp	r4, r5
    a3c8:	4684      	mov	ip, r0
    a3ca:	ea2e 0e04 	bic.w	lr, lr, r4
    a3ce:	f100 0004 	add.w	r0, r0, #4
    a3d2:	d0e9      	beq.n	a3a8 <strncmp+0x18>
    a3d4:	f89c 0000 	ldrb.w	r0, [ip]
    a3d8:	780c      	ldrb	r4, [r1, #0]
    a3da:	42a0      	cmp	r0, r4
    a3dc:	d11b      	bne.n	a416 <strncmp+0x86>
    a3de:	46e6      	mov	lr, ip
    a3e0:	b168      	cbz	r0, a3fe <strncmp+0x6e>
    a3e2:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
    a3e6:	f811 4f01 	ldrb.w	r4, [r1, #1]!
    a3ea:	eba2 030e 	sub.w	r3, r2, lr
    a3ee:	42a0      	cmp	r0, r4
    a3f0:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
    a3f4:	d10f      	bne.n	a416 <strncmp+0x86>
    a3f6:	eb1c 0303 	adds.w	r3, ip, r3
    a3fa:	d1f1      	bne.n	a3e0 <strncmp+0x50>
    a3fc:	2000      	movs	r0, #0
    a3fe:	bd30      	pop	{r4, r5, pc}
    a400:	f89c 0000 	ldrb.w	r0, [ip]
    a404:	780c      	ldrb	r4, [r1, #0]
    a406:	4284      	cmp	r4, r0
    a408:	d105      	bne.n	a416 <strncmp+0x86>
    a40a:	2a01      	cmp	r2, #1
    a40c:	d0f6      	beq.n	a3fc <strncmp+0x6c>
    a40e:	46e6      	mov	lr, ip
    a410:	e7e6      	b.n	a3e0 <strncmp+0x50>
    a412:	4610      	mov	r0, r2
    a414:	4770      	bx	lr
    a416:	1b00      	subs	r0, r0, r4
    a418:	bd30      	pop	{r4, r5, pc}
    a41a:	bf00      	nop

0000a41c <strncpy>:
    a41c:	ea40 0301 	orr.w	r3, r0, r1
    a420:	079b      	lsls	r3, r3, #30
    a422:	b530      	push	{r4, r5, lr}
    a424:	d101      	bne.n	a42a <strncpy+0xe>
    a426:	2a03      	cmp	r2, #3
    a428:	d80f      	bhi.n	a44a <strncpy+0x2e>
    a42a:	4684      	mov	ip, r0
    a42c:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
    a430:	e007      	b.n	a442 <strncpy+0x26>
    a432:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
    a436:	f803 1b01 	strb.w	r1, [r3], #1
    a43a:	1e54      	subs	r4, r2, #1
    a43c:	b1c1      	cbz	r1, a470 <strncpy+0x54>
    a43e:	469c      	mov	ip, r3
    a440:	4622      	mov	r2, r4
    a442:	4663      	mov	r3, ip
    a444:	2a00      	cmp	r2, #0
    a446:	d1f4      	bne.n	a432 <strncpy+0x16>
    a448:	bd30      	pop	{r4, r5, pc}
    a44a:	460b      	mov	r3, r1
    a44c:	4684      	mov	ip, r0
    a44e:	4619      	mov	r1, r3
    a450:	f853 5b04 	ldr.w	r5, [r3], #4
    a454:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
    a458:	ea24 0405 	bic.w	r4, r4, r5
    a45c:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
    a460:	d1e4      	bne.n	a42c <strncpy+0x10>
    a462:	3a04      	subs	r2, #4
    a464:	2a03      	cmp	r2, #3
    a466:	f84c 5b04 	str.w	r5, [ip], #4
    a46a:	4619      	mov	r1, r3
    a46c:	d8ef      	bhi.n	a44e <strncpy+0x32>
    a46e:	e7dd      	b.n	a42c <strncpy+0x10>
    a470:	4494      	add	ip, r2
    a472:	2c00      	cmp	r4, #0
    a474:	d0e8      	beq.n	a448 <strncpy+0x2c>
    a476:	f803 1b01 	strb.w	r1, [r3], #1
    a47a:	4563      	cmp	r3, ip
    a47c:	d1fb      	bne.n	a476 <strncpy+0x5a>
    a47e:	bd30      	pop	{r4, r5, pc}

0000a480 <fputc>:
    a480:	b530      	push	{r4, r5, lr}
    a482:	4b17      	ldr	r3, [pc, #92]	; (a4e0 <fputc+0x60>)
    a484:	681d      	ldr	r5, [r3, #0]
    a486:	460c      	mov	r4, r1
    a488:	b083      	sub	sp, #12
    a48a:	4601      	mov	r1, r0
    a48c:	b10d      	cbz	r5, a492 <fputc+0x12>
    a48e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
    a490:	b1fb      	cbz	r3, a4d2 <fputc+0x52>
    a492:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a494:	07db      	lsls	r3, r3, #31
    a496:	d402      	bmi.n	a49e <fputc+0x1e>
    a498:	89a3      	ldrh	r3, [r4, #12]
    a49a:	0598      	lsls	r0, r3, #22
    a49c:	d513      	bpl.n	a4c6 <fputc+0x46>
    a49e:	4622      	mov	r2, r4
    a4a0:	4628      	mov	r0, r5
    a4a2:	f002 fe9d 	bl	d1e0 <_putc_r>
    a4a6:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a4a8:	07da      	lsls	r2, r3, #31
    a4aa:	4605      	mov	r5, r0
    a4ac:	d402      	bmi.n	a4b4 <fputc+0x34>
    a4ae:	89a3      	ldrh	r3, [r4, #12]
    a4b0:	059b      	lsls	r3, r3, #22
    a4b2:	d502      	bpl.n	a4ba <fputc+0x3a>
    a4b4:	4628      	mov	r0, r5
    a4b6:	b003      	add	sp, #12
    a4b8:	bd30      	pop	{r4, r5, pc}
    a4ba:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a4bc:	f002 fc3e 	bl	cd3c <__retarget_lock_release_recursive>
    a4c0:	4628      	mov	r0, r5
    a4c2:	b003      	add	sp, #12
    a4c4:	bd30      	pop	{r4, r5, pc}
    a4c6:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a4c8:	9101      	str	r1, [sp, #4]
    a4ca:	f002 fc35 	bl	cd38 <__retarget_lock_acquire_recursive>
    a4ce:	9901      	ldr	r1, [sp, #4]
    a4d0:	e7e5      	b.n	a49e <fputc+0x1e>
    a4d2:	9001      	str	r0, [sp, #4]
    a4d4:	4628      	mov	r0, r5
    a4d6:	f004 fb4f 	bl	eb78 <__sinit>
    a4da:	9901      	ldr	r1, [sp, #4]
    a4dc:	e7d9      	b.n	a492 <fputc+0x12>
    a4de:	bf00      	nop
    a4e0:	200031b4 	.word	0x200031b4

0000a4e4 <_fputs_r>:
    a4e4:	b530      	push	{r4, r5, lr}
    a4e6:	b087      	sub	sp, #28
    a4e8:	4605      	mov	r5, r0
    a4ea:	4608      	mov	r0, r1
    a4ec:	4614      	mov	r4, r2
    a4ee:	9101      	str	r1, [sp, #4]
    a4f0:	f004 fbc6 	bl	ec80 <strlen>
    a4f4:	aa01      	add	r2, sp, #4
    a4f6:	2301      	movs	r3, #1
    a4f8:	e9cd 0202 	strd	r0, r2, [sp, #8]
    a4fc:	9005      	str	r0, [sp, #20]
    a4fe:	9304      	str	r3, [sp, #16]
    a500:	b10d      	cbz	r5, a506 <_fputs_r+0x22>
    a502:	6b6b      	ldr	r3, [r5, #52]	; 0x34
    a504:	b36b      	cbz	r3, a562 <_fputs_r+0x7e>
    a506:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a508:	f013 0f01 	tst.w	r3, #1
    a50c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a510:	b29a      	uxth	r2, r3
    a512:	d101      	bne.n	a518 <_fputs_r+0x34>
    a514:	0598      	lsls	r0, r3, #22
    a516:	d51d      	bpl.n	a554 <_fputs_r+0x70>
    a518:	0491      	lsls	r1, r2, #18
    a51a:	d406      	bmi.n	a52a <_fputs_r+0x46>
    a51c:	6e62      	ldr	r2, [r4, #100]	; 0x64
    a51e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
    a522:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
    a526:	81a3      	strh	r3, [r4, #12]
    a528:	6662      	str	r2, [r4, #100]	; 0x64
    a52a:	aa03      	add	r2, sp, #12
    a52c:	4628      	mov	r0, r5
    a52e:	4621      	mov	r1, r4
    a530:	f000 f848 	bl	a5c4 <__sfvwrite_r>
    a534:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a536:	07da      	lsls	r2, r3, #31
    a538:	4605      	mov	r5, r0
    a53a:	d402      	bmi.n	a542 <_fputs_r+0x5e>
    a53c:	89a3      	ldrh	r3, [r4, #12]
    a53e:	059b      	lsls	r3, r3, #22
    a540:	d502      	bpl.n	a548 <_fputs_r+0x64>
    a542:	4628      	mov	r0, r5
    a544:	b007      	add	sp, #28
    a546:	bd30      	pop	{r4, r5, pc}
    a548:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a54a:	f002 fbf7 	bl	cd3c <__retarget_lock_release_recursive>
    a54e:	4628      	mov	r0, r5
    a550:	b007      	add	sp, #28
    a552:	bd30      	pop	{r4, r5, pc}
    a554:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a556:	f002 fbef 	bl	cd38 <__retarget_lock_acquire_recursive>
    a55a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a55e:	b29a      	uxth	r2, r3
    a560:	e7da      	b.n	a518 <_fputs_r+0x34>
    a562:	4628      	mov	r0, r5
    a564:	f004 fb08 	bl	eb78 <__sinit>
    a568:	e7cd      	b.n	a506 <_fputs_r+0x22>
    a56a:	bf00      	nop

0000a56c <fputs>:
    a56c:	b410      	push	{r4}
    a56e:	4c04      	ldr	r4, [pc, #16]	; (a580 <fputs+0x14>)
    a570:	4603      	mov	r3, r0
    a572:	460a      	mov	r2, r1
    a574:	6820      	ldr	r0, [r4, #0]
    a576:	f85d 4b04 	ldr.w	r4, [sp], #4
    a57a:	4619      	mov	r1, r3
    a57c:	f7ff bfb2 	b.w	a4e4 <_fputs_r>
    a580:	200031b4 	.word	0x200031b4

0000a584 <sprintf>:
    a584:	b40e      	push	{r1, r2, r3}
    a586:	b510      	push	{r4, lr}
    a588:	b09d      	sub	sp, #116	; 0x74
    a58a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    a58e:	ab1f      	add	r3, sp, #124	; 0x7c
    a590:	e9cd 0106 	strd	r0, r1, [sp, #24]
    a594:	9104      	str	r1, [sp, #16]
    a596:	4909      	ldr	r1, [pc, #36]	; (a5bc <sprintf+0x38>)
    a598:	f853 2b04 	ldr.w	r2, [r3], #4
    a59c:	9002      	str	r0, [sp, #8]
    a59e:	4c08      	ldr	r4, [pc, #32]	; (a5c0 <sprintf+0x3c>)
    a5a0:	6808      	ldr	r0, [r1, #0]
    a5a2:	9301      	str	r3, [sp, #4]
    a5a4:	a902      	add	r1, sp, #8
    a5a6:	9405      	str	r4, [sp, #20]
    a5a8:	f000 f9f2 	bl	a990 <_svfprintf_r>
    a5ac:	9b02      	ldr	r3, [sp, #8]
    a5ae:	2200      	movs	r2, #0
    a5b0:	701a      	strb	r2, [r3, #0]
    a5b2:	b01d      	add	sp, #116	; 0x74
    a5b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    a5b8:	b003      	add	sp, #12
    a5ba:	4770      	bx	lr
    a5bc:	200031b4 	.word	0x200031b4
    a5c0:	ffff0208 	.word	0xffff0208

0000a5c4 <__sfvwrite_r>:
    a5c4:	6893      	ldr	r3, [r2, #8]
    a5c6:	2b00      	cmp	r3, #0
    a5c8:	f000 8085 	beq.w	a6d6 <__sfvwrite_r+0x112>
    a5cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a5d0:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
    a5d4:	460c      	mov	r4, r1
    a5d6:	0719      	lsls	r1, r3, #28
    a5d8:	4680      	mov	r8, r0
    a5da:	b083      	sub	sp, #12
    a5dc:	4617      	mov	r7, r2
    a5de:	b298      	uxth	r0, r3
    a5e0:	d525      	bpl.n	a62e <__sfvwrite_r+0x6a>
    a5e2:	6923      	ldr	r3, [r4, #16]
    a5e4:	b31b      	cbz	r3, a62e <__sfvwrite_r+0x6a>
    a5e6:	f010 0302 	ands.w	r3, r0, #2
    a5ea:	683d      	ldr	r5, [r7, #0]
    a5ec:	d02d      	beq.n	a64a <__sfvwrite_r+0x86>
    a5ee:	f04f 0a00 	mov.w	sl, #0
    a5f2:	f8df b2c0 	ldr.w	fp, [pc, #704]	; a8b4 <__sfvwrite_r+0x2f0>
    a5f6:	4656      	mov	r6, sl
    a5f8:	46b9      	mov	r9, r7
    a5fa:	455e      	cmp	r6, fp
    a5fc:	4633      	mov	r3, r6
    a5fe:	4652      	mov	r2, sl
    a600:	bf28      	it	cs
    a602:	465b      	movcs	r3, fp
    a604:	4640      	mov	r0, r8
    a606:	2e00      	cmp	r6, #0
    a608:	d052      	beq.n	a6b0 <__sfvwrite_r+0xec>
    a60a:	69e1      	ldr	r1, [r4, #28]
    a60c:	6a67      	ldr	r7, [r4, #36]	; 0x24
    a60e:	47b8      	blx	r7
    a610:	2800      	cmp	r0, #0
    a612:	dd56      	ble.n	a6c2 <__sfvwrite_r+0xfe>
    a614:	f8d9 3008 	ldr.w	r3, [r9, #8]
    a618:	1a1b      	subs	r3, r3, r0
    a61a:	4482      	add	sl, r0
    a61c:	1a36      	subs	r6, r6, r0
    a61e:	f8c9 3008 	str.w	r3, [r9, #8]
    a622:	2b00      	cmp	r3, #0
    a624:	d1e9      	bne.n	a5fa <__sfvwrite_r+0x36>
    a626:	2000      	movs	r0, #0
    a628:	b003      	add	sp, #12
    a62a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a62e:	4621      	mov	r1, r4
    a630:	4640      	mov	r0, r8
    a632:	f002 fd03 	bl	d03c <__swsetup_r>
    a636:	2800      	cmp	r0, #0
    a638:	f040 8138 	bne.w	a8ac <__sfvwrite_r+0x2e8>
    a63c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a640:	683d      	ldr	r5, [r7, #0]
    a642:	b298      	uxth	r0, r3
    a644:	f010 0302 	ands.w	r3, r0, #2
    a648:	d1d1      	bne.n	a5ee <__sfvwrite_r+0x2a>
    a64a:	f010 0901 	ands.w	r9, r0, #1
    a64e:	d144      	bne.n	a6da <__sfvwrite_r+0x116>
    a650:	464e      	mov	r6, r9
    a652:	9700      	str	r7, [sp, #0]
    a654:	b346      	cbz	r6, a6a8 <__sfvwrite_r+0xe4>
    a656:	0582      	lsls	r2, r0, #22
    a658:	f8d4 b008 	ldr.w	fp, [r4, #8]
    a65c:	f140 8085 	bpl.w	a76a <__sfvwrite_r+0x1a6>
    a660:	45b3      	cmp	fp, r6
    a662:	465a      	mov	r2, fp
    a664:	f200 80b4 	bhi.w	a7d0 <__sfvwrite_r+0x20c>
    a668:	f410 6f90 	tst.w	r0, #1152	; 0x480
    a66c:	f040 80c1 	bne.w	a7f2 <__sfvwrite_r+0x22e>
    a670:	6820      	ldr	r0, [r4, #0]
    a672:	9201      	str	r2, [sp, #4]
    a674:	4649      	mov	r1, r9
    a676:	f002 fa1d 	bl	cab4 <memmove>
    a67a:	68a3      	ldr	r3, [r4, #8]
    a67c:	9a01      	ldr	r2, [sp, #4]
    a67e:	eba3 010b 	sub.w	r1, r3, fp
    a682:	6823      	ldr	r3, [r4, #0]
    a684:	60a1      	str	r1, [r4, #8]
    a686:	4413      	add	r3, r2
    a688:	46b2      	mov	sl, r6
    a68a:	6023      	str	r3, [r4, #0]
    a68c:	2600      	movs	r6, #0
    a68e:	9a00      	ldr	r2, [sp, #0]
    a690:	6893      	ldr	r3, [r2, #8]
    a692:	eba3 030a 	sub.w	r3, r3, sl
    a696:	44d1      	add	r9, sl
    a698:	6093      	str	r3, [r2, #8]
    a69a:	2b00      	cmp	r3, #0
    a69c:	d0c3      	beq.n	a626 <__sfvwrite_r+0x62>
    a69e:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
    a6a2:	b280      	uxth	r0, r0
    a6a4:	2e00      	cmp	r6, #0
    a6a6:	d1d6      	bne.n	a656 <__sfvwrite_r+0x92>
    a6a8:	e9d5 9600 	ldrd	r9, r6, [r5]
    a6ac:	3508      	adds	r5, #8
    a6ae:	e7d1      	b.n	a654 <__sfvwrite_r+0x90>
    a6b0:	e9d5 a600 	ldrd	sl, r6, [r5]
    a6b4:	3508      	adds	r5, #8
    a6b6:	e7a0      	b.n	a5fa <__sfvwrite_r+0x36>
    a6b8:	4621      	mov	r1, r4
    a6ba:	4640      	mov	r0, r8
    a6bc:	f004 f99c 	bl	e9f8 <_fflush_r>
    a6c0:	b388      	cbz	r0, a726 <__sfvwrite_r+0x162>
    a6c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a6c6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    a6ca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a6ce:	81a3      	strh	r3, [r4, #12]
    a6d0:	b003      	add	sp, #12
    a6d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a6d6:	2000      	movs	r0, #0
    a6d8:	4770      	bx	lr
    a6da:	461e      	mov	r6, r3
    a6dc:	46ba      	mov	sl, r7
    a6de:	4699      	mov	r9, r3
    a6e0:	4618      	mov	r0, r3
    a6e2:	9500      	str	r5, [sp, #0]
    a6e4:	461f      	mov	r7, r3
    a6e6:	b366      	cbz	r6, a742 <__sfvwrite_r+0x17e>
    a6e8:	2800      	cmp	r0, #0
    a6ea:	d032      	beq.n	a752 <__sfvwrite_r+0x18e>
    a6ec:	464a      	mov	r2, r9
    a6ee:	e9d4 1304 	ldrd	r1, r3, [r4, #16]
    a6f2:	6820      	ldr	r0, [r4, #0]
    a6f4:	68a5      	ldr	r5, [r4, #8]
    a6f6:	42b2      	cmp	r2, r6
    a6f8:	bf28      	it	cs
    a6fa:	4632      	movcs	r2, r6
    a6fc:	4288      	cmp	r0, r1
    a6fe:	d904      	bls.n	a70a <__sfvwrite_r+0x146>
    a700:	eb05 0b03 	add.w	fp, r5, r3
    a704:	455a      	cmp	r2, fp
    a706:	f300 80a7 	bgt.w	a858 <__sfvwrite_r+0x294>
    a70a:	4293      	cmp	r3, r2
    a70c:	dc64      	bgt.n	a7d8 <__sfvwrite_r+0x214>
    a70e:	69e1      	ldr	r1, [r4, #28]
    a710:	6a65      	ldr	r5, [r4, #36]	; 0x24
    a712:	463a      	mov	r2, r7
    a714:	4640      	mov	r0, r8
    a716:	47a8      	blx	r5
    a718:	f1b0 0b00 	subs.w	fp, r0, #0
    a71c:	ddd1      	ble.n	a6c2 <__sfvwrite_r+0xfe>
    a71e:	ebb9 090b 	subs.w	r9, r9, fp
    a722:	d0c9      	beq.n	a6b8 <__sfvwrite_r+0xf4>
    a724:	2001      	movs	r0, #1
    a726:	f8da 3008 	ldr.w	r3, [sl, #8]
    a72a:	eba3 030b 	sub.w	r3, r3, fp
    a72e:	445f      	add	r7, fp
    a730:	eba6 060b 	sub.w	r6, r6, fp
    a734:	f8ca 3008 	str.w	r3, [sl, #8]
    a738:	2b00      	cmp	r3, #0
    a73a:	f43f af74 	beq.w	a626 <__sfvwrite_r+0x62>
    a73e:	2e00      	cmp	r6, #0
    a740:	d1d2      	bne.n	a6e8 <__sfvwrite_r+0x124>
    a742:	9a00      	ldr	r2, [sp, #0]
    a744:	6856      	ldr	r6, [r2, #4]
    a746:	4613      	mov	r3, r2
    a748:	3208      	adds	r2, #8
    a74a:	9200      	str	r2, [sp, #0]
    a74c:	2e00      	cmp	r6, #0
    a74e:	d0f8      	beq.n	a742 <__sfvwrite_r+0x17e>
    a750:	681f      	ldr	r7, [r3, #0]
    a752:	4632      	mov	r2, r6
    a754:	210a      	movs	r1, #10
    a756:	4638      	mov	r0, r7
    a758:	f004 fa3a 	bl	ebd0 <memchr>
    a75c:	2800      	cmp	r0, #0
    a75e:	f000 809c 	beq.w	a89a <__sfvwrite_r+0x2d6>
    a762:	3001      	adds	r0, #1
    a764:	eba0 0907 	sub.w	r9, r0, r7
    a768:	e7c0      	b.n	a6ec <__sfvwrite_r+0x128>
    a76a:	6820      	ldr	r0, [r4, #0]
    a76c:	6923      	ldr	r3, [r4, #16]
    a76e:	4298      	cmp	r0, r3
    a770:	d816      	bhi.n	a7a0 <__sfvwrite_r+0x1dc>
    a772:	6962      	ldr	r2, [r4, #20]
    a774:	42b2      	cmp	r2, r6
    a776:	d813      	bhi.n	a7a0 <__sfvwrite_r+0x1dc>
    a778:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
    a77c:	42b3      	cmp	r3, r6
    a77e:	bf28      	it	cs
    a780:	4633      	movcs	r3, r6
    a782:	69e1      	ldr	r1, [r4, #28]
    a784:	fb93 f3f2 	sdiv	r3, r3, r2
    a788:	6a67      	ldr	r7, [r4, #36]	; 0x24
    a78a:	fb02 f303 	mul.w	r3, r2, r3
    a78e:	4640      	mov	r0, r8
    a790:	464a      	mov	r2, r9
    a792:	47b8      	blx	r7
    a794:	f1b0 0a00 	subs.w	sl, r0, #0
    a798:	dd93      	ble.n	a6c2 <__sfvwrite_r+0xfe>
    a79a:	eba6 060a 	sub.w	r6, r6, sl
    a79e:	e776      	b.n	a68e <__sfvwrite_r+0xca>
    a7a0:	45b3      	cmp	fp, r6
    a7a2:	46da      	mov	sl, fp
    a7a4:	bf28      	it	cs
    a7a6:	46b2      	movcs	sl, r6
    a7a8:	4652      	mov	r2, sl
    a7aa:	4649      	mov	r1, r9
    a7ac:	f002 f982 	bl	cab4 <memmove>
    a7b0:	68a3      	ldr	r3, [r4, #8]
    a7b2:	6822      	ldr	r2, [r4, #0]
    a7b4:	eba3 030a 	sub.w	r3, r3, sl
    a7b8:	4452      	add	r2, sl
    a7ba:	60a3      	str	r3, [r4, #8]
    a7bc:	6022      	str	r2, [r4, #0]
    a7be:	2b00      	cmp	r3, #0
    a7c0:	d1eb      	bne.n	a79a <__sfvwrite_r+0x1d6>
    a7c2:	4621      	mov	r1, r4
    a7c4:	4640      	mov	r0, r8
    a7c6:	f004 f917 	bl	e9f8 <_fflush_r>
    a7ca:	2800      	cmp	r0, #0
    a7cc:	d0e5      	beq.n	a79a <__sfvwrite_r+0x1d6>
    a7ce:	e778      	b.n	a6c2 <__sfvwrite_r+0xfe>
    a7d0:	6820      	ldr	r0, [r4, #0]
    a7d2:	46b3      	mov	fp, r6
    a7d4:	4632      	mov	r2, r6
    a7d6:	e74c      	b.n	a672 <__sfvwrite_r+0xae>
    a7d8:	4639      	mov	r1, r7
    a7da:	9201      	str	r2, [sp, #4]
    a7dc:	f002 f96a 	bl	cab4 <memmove>
    a7e0:	9a01      	ldr	r2, [sp, #4]
    a7e2:	68a3      	ldr	r3, [r4, #8]
    a7e4:	1a9b      	subs	r3, r3, r2
    a7e6:	60a3      	str	r3, [r4, #8]
    a7e8:	6823      	ldr	r3, [r4, #0]
    a7ea:	4413      	add	r3, r2
    a7ec:	6023      	str	r3, [r4, #0]
    a7ee:	4693      	mov	fp, r2
    a7f0:	e795      	b.n	a71e <__sfvwrite_r+0x15a>
    a7f2:	6823      	ldr	r3, [r4, #0]
    a7f4:	6921      	ldr	r1, [r4, #16]
    a7f6:	eba3 0b01 	sub.w	fp, r3, r1
    a7fa:	6963      	ldr	r3, [r4, #20]
    a7fc:	eb03 0a43 	add.w	sl, r3, r3, lsl #1
    a800:	eb0a 7ada 	add.w	sl, sl, sl, lsr #31
    a804:	f10b 0301 	add.w	r3, fp, #1
    a808:	ea4f 0a6a 	mov.w	sl, sl, asr #1
    a80c:	4433      	add	r3, r6
    a80e:	4553      	cmp	r3, sl
    a810:	4652      	mov	r2, sl
    a812:	bf84      	itt	hi
    a814:	469a      	movhi	sl, r3
    a816:	4652      	movhi	r2, sl
    a818:	0543      	lsls	r3, r0, #21
    a81a:	d52c      	bpl.n	a876 <__sfvwrite_r+0x2b2>
    a81c:	4611      	mov	r1, r2
    a81e:	4640      	mov	r0, r8
    a820:	f001 fe68 	bl	c4f4 <_malloc_r>
    a824:	2800      	cmp	r0, #0
    a826:	d03b      	beq.n	a8a0 <__sfvwrite_r+0x2dc>
    a828:	465a      	mov	r2, fp
    a82a:	6921      	ldr	r1, [r4, #16]
    a82c:	9001      	str	r0, [sp, #4]
    a82e:	f7f5 ff05 	bl	63c <memcpy>
    a832:	89a2      	ldrh	r2, [r4, #12]
    a834:	9b01      	ldr	r3, [sp, #4]
    a836:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
    a83a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    a83e:	81a2      	strh	r2, [r4, #12]
    a840:	eb03 000b 	add.w	r0, r3, fp
    a844:	6123      	str	r3, [r4, #16]
    a846:	ebaa 030b 	sub.w	r3, sl, fp
    a84a:	f8c4 a014 	str.w	sl, [r4, #20]
    a84e:	60a3      	str	r3, [r4, #8]
    a850:	6020      	str	r0, [r4, #0]
    a852:	46b3      	mov	fp, r6
    a854:	4632      	mov	r2, r6
    a856:	e70c      	b.n	a672 <__sfvwrite_r+0xae>
    a858:	4639      	mov	r1, r7
    a85a:	465a      	mov	r2, fp
    a85c:	f002 f92a 	bl	cab4 <memmove>
    a860:	6823      	ldr	r3, [r4, #0]
    a862:	445b      	add	r3, fp
    a864:	6023      	str	r3, [r4, #0]
    a866:	4621      	mov	r1, r4
    a868:	4640      	mov	r0, r8
    a86a:	f004 f8c5 	bl	e9f8 <_fflush_r>
    a86e:	2800      	cmp	r0, #0
    a870:	f43f af55 	beq.w	a71e <__sfvwrite_r+0x15a>
    a874:	e725      	b.n	a6c2 <__sfvwrite_r+0xfe>
    a876:	4640      	mov	r0, r8
    a878:	f004 faae 	bl	edd8 <_realloc_r>
    a87c:	4603      	mov	r3, r0
    a87e:	2800      	cmp	r0, #0
    a880:	d1de      	bne.n	a840 <__sfvwrite_r+0x27c>
    a882:	6921      	ldr	r1, [r4, #16]
    a884:	4640      	mov	r0, r8
    a886:	f004 fce3 	bl	f250 <_free_r>
    a88a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a88e:	220c      	movs	r2, #12
    a890:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    a894:	f8c8 2000 	str.w	r2, [r8]
    a898:	e715      	b.n	a6c6 <__sfvwrite_r+0x102>
    a89a:	1c72      	adds	r2, r6, #1
    a89c:	4691      	mov	r9, r2
    a89e:	e726      	b.n	a6ee <__sfvwrite_r+0x12a>
    a8a0:	220c      	movs	r2, #12
    a8a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a8a6:	f8c8 2000 	str.w	r2, [r8]
    a8aa:	e70c      	b.n	a6c6 <__sfvwrite_r+0x102>
    a8ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a8b0:	e6ba      	b.n	a628 <__sfvwrite_r+0x64>
    a8b2:	bf00      	nop
    a8b4:	7ffffc00 	.word	0x7ffffc00

0000a8b8 <_fwrite_r>:
    a8b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a8bc:	b086      	sub	sp, #24
    a8be:	fb02 f703 	mul.w	r7, r2, r3
    a8c2:	461d      	mov	r5, r3
    a8c4:	ab01      	add	r3, sp, #4
    a8c6:	9303      	str	r3, [sp, #12]
    a8c8:	2301      	movs	r3, #1
    a8ca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    a8cc:	9101      	str	r1, [sp, #4]
    a8ce:	4690      	mov	r8, r2
    a8d0:	9702      	str	r7, [sp, #8]
    a8d2:	9705      	str	r7, [sp, #20]
    a8d4:	9304      	str	r3, [sp, #16]
    a8d6:	4606      	mov	r6, r0
    a8d8:	b110      	cbz	r0, a8e0 <_fwrite_r+0x28>
    a8da:	6b43      	ldr	r3, [r0, #52]	; 0x34
    a8dc:	2b00      	cmp	r3, #0
    a8de:	d03d      	beq.n	a95c <_fwrite_r+0xa4>
    a8e0:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a8e2:	f013 0f01 	tst.w	r3, #1
    a8e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a8ea:	b29a      	uxth	r2, r3
    a8ec:	d101      	bne.n	a8f2 <_fwrite_r+0x3a>
    a8ee:	0599      	lsls	r1, r3, #22
    a8f0:	d52d      	bpl.n	a94e <_fwrite_r+0x96>
    a8f2:	0492      	lsls	r2, r2, #18
    a8f4:	d406      	bmi.n	a904 <_fwrite_r+0x4c>
    a8f6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
    a8fa:	81a3      	strh	r3, [r4, #12]
    a8fc:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a8fe:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
    a902:	6663      	str	r3, [r4, #100]	; 0x64
    a904:	4630      	mov	r0, r6
    a906:	aa03      	add	r2, sp, #12
    a908:	4621      	mov	r1, r4
    a90a:	f7ff fe5b 	bl	a5c4 <__sfvwrite_r>
    a90e:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a910:	b178      	cbz	r0, a932 <_fwrite_r+0x7a>
    a912:	07da      	lsls	r2, r3, #31
    a914:	d506      	bpl.n	a924 <_fwrite_r+0x6c>
    a916:	9b05      	ldr	r3, [sp, #20]
    a918:	1aff      	subs	r7, r7, r3
    a91a:	fbb7 f0f8 	udiv	r0, r7, r8
    a91e:	b006      	add	sp, #24
    a920:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    a924:	89a3      	ldrh	r3, [r4, #12]
    a926:	059b      	lsls	r3, r3, #22
    a928:	d4f5      	bmi.n	a916 <_fwrite_r+0x5e>
    a92a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a92c:	f002 fa06 	bl	cd3c <__retarget_lock_release_recursive>
    a930:	e7f1      	b.n	a916 <_fwrite_r+0x5e>
    a932:	07d8      	lsls	r0, r3, #31
    a934:	d407      	bmi.n	a946 <_fwrite_r+0x8e>
    a936:	89a3      	ldrh	r3, [r4, #12]
    a938:	0599      	lsls	r1, r3, #22
    a93a:	d404      	bmi.n	a946 <_fwrite_r+0x8e>
    a93c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a93e:	f002 f9fd 	bl	cd3c <__retarget_lock_release_recursive>
    a942:	4628      	mov	r0, r5
    a944:	e7eb      	b.n	a91e <_fwrite_r+0x66>
    a946:	4628      	mov	r0, r5
    a948:	b006      	add	sp, #24
    a94a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    a94e:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a950:	f002 f9f2 	bl	cd38 <__retarget_lock_acquire_recursive>
    a954:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a958:	b29a      	uxth	r2, r3
    a95a:	e7ca      	b.n	a8f2 <_fwrite_r+0x3a>
    a95c:	f004 f90c 	bl	eb78 <__sinit>
    a960:	e7be      	b.n	a8e0 <_fwrite_r+0x28>
    a962:	bf00      	nop

0000a964 <fwrite>:
    a964:	b510      	push	{r4, lr}
    a966:	4c06      	ldr	r4, [pc, #24]	; (a980 <fwrite+0x1c>)
    a968:	b082      	sub	sp, #8
    a96a:	4684      	mov	ip, r0
    a96c:	9300      	str	r3, [sp, #0]
    a96e:	6820      	ldr	r0, [r4, #0]
    a970:	4613      	mov	r3, r2
    a972:	460a      	mov	r2, r1
    a974:	4661      	mov	r1, ip
    a976:	f7ff ff9f 	bl	a8b8 <_fwrite_r>
    a97a:	b002      	add	sp, #8
    a97c:	bd10      	pop	{r4, pc}
    a97e:	bf00      	nop
    a980:	200031b4 	.word	0x200031b4

0000a984 <__errno>:
    a984:	4b01      	ldr	r3, [pc, #4]	; (a98c <__errno+0x8>)
    a986:	6818      	ldr	r0, [r3, #0]
    a988:	4770      	bx	lr
    a98a:	bf00      	nop
    a98c:	200031b4 	.word	0x200031b4

0000a990 <_svfprintf_r>:
    a990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a994:	ed2d 8b08 	vpush	{d8-d11}
    a998:	b0d1      	sub	sp, #324	; 0x144
    a99a:	460c      	mov	r4, r1
    a99c:	ee0b 1a10 	vmov	s22, r1
    a9a0:	4690      	mov	r8, r2
    a9a2:	9308      	str	r3, [sp, #32]
    a9a4:	4683      	mov	fp, r0
    a9a6:	f002 f9d1 	bl	cd4c <_localeconv_r>
    a9aa:	6803      	ldr	r3, [r0, #0]
    a9ac:	9312      	str	r3, [sp, #72]	; 0x48
    a9ae:	4618      	mov	r0, r3
    a9b0:	f004 f966 	bl	ec80 <strlen>
    a9b4:	af20      	add	r7, sp, #128	; 0x80
    a9b6:	9010      	str	r0, [sp, #64]	; 0x40
    a9b8:	2208      	movs	r2, #8
    a9ba:	2100      	movs	r1, #0
    a9bc:	4638      	mov	r0, r7
    a9be:	f002 f915 	bl	cbec <memset>
    a9c2:	89a3      	ldrh	r3, [r4, #12]
    a9c4:	061b      	lsls	r3, r3, #24
    a9c6:	d503      	bpl.n	a9d0 <_svfprintf_r+0x40>
    a9c8:	6923      	ldr	r3, [r4, #16]
    a9ca:	2b00      	cmp	r3, #0
    a9cc:	f000 8755 	beq.w	b87a <_svfprintf_r+0xeea>
    a9d0:	2300      	movs	r3, #0
    a9d2:	ed9f 8b83 	vldr	d8, [pc, #524]	; abe0 <_svfprintf_r+0x250>
    a9d6:	ed9f 9b84 	vldr	d9, [pc, #528]	; abe8 <_svfprintf_r+0x258>
    a9da:	e9cd 3325 	strd	r3, r3, [sp, #148]	; 0x94
    a9de:	e9cd 3313 	strd	r3, r3, [sp, #76]	; 0x4c
    a9e2:	e9cd 3315 	strd	r3, r3, [sp, #84]	; 0x54
    a9e6:	aa27      	add	r2, sp, #156	; 0x9c
    a9e8:	930e      	str	r3, [sp, #56]	; 0x38
    a9ea:	9224      	str	r2, [sp, #144]	; 0x90
    a9ec:	4692      	mov	sl, r2
    a9ee:	9311      	str	r3, [sp, #68]	; 0x44
    a9f0:	9304      	str	r3, [sp, #16]
    a9f2:	4644      	mov	r4, r8
    a9f4:	46a1      	mov	r9, r4
    a9f6:	4b7e      	ldr	r3, [pc, #504]	; (abf0 <_svfprintf_r+0x260>)
    a9f8:	f8d3 50e4 	ldr.w	r5, [r3, #228]	; 0xe4
    a9fc:	f002 f9a0 	bl	cd40 <__locale_mb_cur_max>
    aa00:	464a      	mov	r2, r9
    aa02:	4603      	mov	r3, r0
    aa04:	a91c      	add	r1, sp, #112	; 0x70
    aa06:	9700      	str	r7, [sp, #0]
    aa08:	4658      	mov	r0, fp
    aa0a:	47a8      	blx	r5
    aa0c:	2800      	cmp	r0, #0
    aa0e:	f000 80b0 	beq.w	ab72 <_svfprintf_r+0x1e2>
    aa12:	f2c0 80a6 	blt.w	ab62 <_svfprintf_r+0x1d2>
    aa16:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    aa18:	2a25      	cmp	r2, #37	; 0x25
    aa1a:	4603      	mov	r3, r0
    aa1c:	d001      	beq.n	aa22 <_svfprintf_r+0x92>
    aa1e:	4499      	add	r9, r3
    aa20:	e7e9      	b.n	a9f6 <_svfprintf_r+0x66>
    aa22:	ebb9 0504 	subs.w	r5, r9, r4
    aa26:	4606      	mov	r6, r0
    aa28:	f040 80a7 	bne.w	ab7a <_svfprintf_r+0x1ea>
    aa2c:	2300      	movs	r3, #0
    aa2e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    aa32:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
    aa36:	4698      	mov	r8, r3
    aa38:	9306      	str	r3, [sp, #24]
    aa3a:	f109 0901 	add.w	r9, r9, #1
    aa3e:	f899 3000 	ldrb.w	r3, [r9]
    aa42:	9203      	str	r2, [sp, #12]
    aa44:	252b      	movs	r5, #43	; 0x2b
    aa46:	2620      	movs	r6, #32
    aa48:	f109 0901 	add.w	r9, r9, #1
    aa4c:	f1a3 0220 	sub.w	r2, r3, #32
    aa50:	2a5a      	cmp	r2, #90	; 0x5a
    aa52:	f200 80cf 	bhi.w	abf4 <_svfprintf_r+0x264>
    aa56:	e8df f012 	tbh	[pc, r2, lsl #1]
    aa5a:	02e8      	.short	0x02e8
    aa5c:	00cd00cd 	.word	0x00cd00cd
    aa60:	00cd02e3 	.word	0x00cd02e3
    aa64:	00cd00cd 	.word	0x00cd00cd
    aa68:	00cd006a 	.word	0x00cd006a
    aa6c:	020500cd 	.word	0x020500cd
    aa70:	00cd0284 	.word	0x00cd0284
    aa74:	02c90210 	.word	0x02c90210
    aa78:	02bd00cd 	.word	0x02bd00cd
    aa7c:	005b005b 	.word	0x005b005b
    aa80:	005b005b 	.word	0x005b005b
    aa84:	005b005b 	.word	0x005b005b
    aa88:	005b005b 	.word	0x005b005b
    aa8c:	00cd005b 	.word	0x00cd005b
    aa90:	00cd00cd 	.word	0x00cd00cd
    aa94:	00cd00cd 	.word	0x00cd00cd
    aa98:	00cd00cd 	.word	0x00cd00cd
    aa9c:	00cd0153 	.word	0x00cd0153
    aaa0:	021a0183 	.word	0x021a0183
    aaa4:	01530153 	.word	0x01530153
    aaa8:	00cd0153 	.word	0x00cd0153
    aaac:	00cd00cd 	.word	0x00cd00cd
    aab0:	021500cd 	.word	0x021500cd
    aab4:	00cd00cd 	.word	0x00cd00cd
    aab8:	00cd0296 	.word	0x00cd0296
    aabc:	00cd00cd 	.word	0x00cd00cd
    aac0:	00cd01ab 	.word	0x00cd01ab
    aac4:	00cd02aa 	.word	0x00cd02aa
    aac8:	06e300cd 	.word	0x06e300cd
    aacc:	00cd00cd 	.word	0x00cd00cd
    aad0:	00cd00cd 	.word	0x00cd00cd
    aad4:	00cd00cd 	.word	0x00cd00cd
    aad8:	00cd00cd 	.word	0x00cd00cd
    aadc:	00cd0153 	.word	0x00cd0153
    aae0:	01de0183 	.word	0x01de0183
    aae4:	01530153 	.word	0x01530153
    aae8:	02770153 	.word	0x02770153
    aaec:	007f01de 	.word	0x007f01de
    aaf0:	028900cd 	.word	0x028900cd
    aaf4:	025f00cd 	.word	0x025f00cd
    aaf8:	022f06e0 	.word	0x022f06e0
    aafc:	00cd007f 	.word	0x00cd007f
    ab00:	007c01ab 	.word	0x007c01ab
    ab04:	00cd06b8 	.word	0x00cd06b8
    ab08:	06bd00cd 	.word	0x06bd00cd
    ab0c:	007c00cd 	.word	0x007c00cd
    ab10:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    ab14:	2100      	movs	r1, #0
    ab16:	f819 3b01 	ldrb.w	r3, [r9], #1
    ab1a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
    ab1e:	eb02 0141 	add.w	r1, r2, r1, lsl #1
    ab22:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    ab26:	2a09      	cmp	r2, #9
    ab28:	d9f5      	bls.n	ab16 <_svfprintf_r+0x186>
    ab2a:	9106      	str	r1, [sp, #24]
    ab2c:	e78e      	b.n	aa4c <_svfprintf_r+0xbc>
    ab2e:	4658      	mov	r0, fp
    ab30:	f002 f90c 	bl	cd4c <_localeconv_r>
    ab34:	6843      	ldr	r3, [r0, #4]
    ab36:	9315      	str	r3, [sp, #84]	; 0x54
    ab38:	4618      	mov	r0, r3
    ab3a:	f004 f8a1 	bl	ec80 <strlen>
    ab3e:	9016      	str	r0, [sp, #88]	; 0x58
    ab40:	4658      	mov	r0, fp
    ab42:	f002 f903 	bl	cd4c <_localeconv_r>
    ab46:	6883      	ldr	r3, [r0, #8]
    ab48:	9313      	str	r3, [sp, #76]	; 0x4c
    ab4a:	9b16      	ldr	r3, [sp, #88]	; 0x58
    ab4c:	2b00      	cmp	r3, #0
    ab4e:	f040 862d 	bne.w	b7ac <_svfprintf_r+0xe1c>
    ab52:	f899 3000 	ldrb.w	r3, [r9]
    ab56:	e777      	b.n	aa48 <_svfprintf_r+0xb8>
    ab58:	f899 3000 	ldrb.w	r3, [r9]
    ab5c:	f048 0820 	orr.w	r8, r8, #32
    ab60:	e772      	b.n	aa48 <_svfprintf_r+0xb8>
    ab62:	2208      	movs	r2, #8
    ab64:	2100      	movs	r1, #0
    ab66:	4638      	mov	r0, r7
    ab68:	f002 f840 	bl	cbec <memset>
    ab6c:	2301      	movs	r3, #1
    ab6e:	4499      	add	r9, r3
    ab70:	e741      	b.n	a9f6 <_svfprintf_r+0x66>
    ab72:	ebb9 0504 	subs.w	r5, r9, r4
    ab76:	4606      	mov	r6, r0
    ab78:	d011      	beq.n	ab9e <_svfprintf_r+0x20e>
    ab7a:	9b26      	ldr	r3, [sp, #152]	; 0x98
    ab7c:	442b      	add	r3, r5
    ab7e:	9326      	str	r3, [sp, #152]	; 0x98
    ab80:	9b25      	ldr	r3, [sp, #148]	; 0x94
    ab82:	3301      	adds	r3, #1
    ab84:	2b07      	cmp	r3, #7
    ab86:	e9ca 4500 	strd	r4, r5, [sl]
    ab8a:	9325      	str	r3, [sp, #148]	; 0x94
    ab8c:	dc1c      	bgt.n	abc8 <_svfprintf_r+0x238>
    ab8e:	f10a 0a08 	add.w	sl, sl, #8
    ab92:	9b04      	ldr	r3, [sp, #16]
    ab94:	442b      	add	r3, r5
    ab96:	9304      	str	r3, [sp, #16]
    ab98:	2e00      	cmp	r6, #0
    ab9a:	f47f af47 	bne.w	aa2c <_svfprintf_r+0x9c>
    ab9e:	9b26      	ldr	r3, [sp, #152]	; 0x98
    aba0:	2b00      	cmp	r3, #0
    aba2:	f041 820b 	bne.w	bfbc <_svfprintf_r+0x162c>
    aba6:	ee1b 3a10 	vmov	r3, s22
    abaa:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
    abae:	f013 0f40 	tst.w	r3, #64	; 0x40
    abb2:	9b04      	ldr	r3, [sp, #16]
    abb4:	bf18      	it	ne
    abb6:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
    abba:	9304      	str	r3, [sp, #16]
    abbc:	9804      	ldr	r0, [sp, #16]
    abbe:	b051      	add	sp, #324	; 0x144
    abc0:	ecbd 8b08 	vpop	{d8-d11}
    abc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    abc8:	ee1b 1a10 	vmov	r1, s22
    abcc:	aa24      	add	r2, sp, #144	; 0x90
    abce:	4658      	mov	r0, fp
    abd0:	f004 fd20 	bl	f614 <__ssprint_r>
    abd4:	2800      	cmp	r0, #0
    abd6:	d1e6      	bne.n	aba6 <_svfprintf_r+0x216>
    abd8:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    abdc:	e7d9      	b.n	ab92 <_svfprintf_r+0x202>
    abde:	bf00      	nop
	...
    abe8:	ffffffff 	.word	0xffffffff
    abec:	7fefffff 	.word	0x7fefffff
    abf0:	20002c2c 	.word	0x20002c2c
    abf4:	930b      	str	r3, [sp, #44]	; 0x2c
    abf6:	2b00      	cmp	r3, #0
    abf8:	d0d1      	beq.n	ab9e <_svfprintf_r+0x20e>
    abfa:	2100      	movs	r1, #0
    abfc:	e9cd 110c 	strd	r1, r1, [sp, #48]	; 0x30
    ac00:	f88d 30dc 	strb.w	r3, [sp, #220]	; 0xdc
    ac04:	2301      	movs	r3, #1
    ac06:	f88d 1067 	strb.w	r1, [sp, #103]	; 0x67
    ac0a:	9302      	str	r3, [sp, #8]
    ac0c:	9107      	str	r1, [sp, #28]
    ac0e:	9305      	str	r3, [sp, #20]
    ac10:	9103      	str	r1, [sp, #12]
    ac12:	910f      	str	r1, [sp, #60]	; 0x3c
    ac14:	ac37      	add	r4, sp, #220	; 0xdc
    ac16:	f018 0302 	ands.w	r3, r8, #2
    ac1a:	9309      	str	r3, [sp, #36]	; 0x24
    ac1c:	d002      	beq.n	ac24 <_svfprintf_r+0x294>
    ac1e:	9b02      	ldr	r3, [sp, #8]
    ac20:	3302      	adds	r3, #2
    ac22:	9302      	str	r3, [sp, #8]
    ac24:	f018 0384 	ands.w	r3, r8, #132	; 0x84
    ac28:	930a      	str	r3, [sp, #40]	; 0x28
    ac2a:	d105      	bne.n	ac38 <_svfprintf_r+0x2a8>
    ac2c:	9b06      	ldr	r3, [sp, #24]
    ac2e:	9a02      	ldr	r2, [sp, #8]
    ac30:	1a9d      	subs	r5, r3, r2
    ac32:	2d00      	cmp	r5, #0
    ac34:	f300 8369 	bgt.w	b30a <_svfprintf_r+0x97a>
    ac38:	9a26      	ldr	r2, [sp, #152]	; 0x98
    ac3a:	b189      	cbz	r1, ac60 <_svfprintf_r+0x2d0>
    ac3c:	9925      	ldr	r1, [sp, #148]	; 0x94
    ac3e:	f10d 0067 	add.w	r0, sp, #103	; 0x67
    ac42:	3101      	adds	r1, #1
    ac44:	3201      	adds	r2, #1
    ac46:	f8ca 0000 	str.w	r0, [sl]
    ac4a:	2907      	cmp	r1, #7
    ac4c:	f04f 0001 	mov.w	r0, #1
    ac50:	9226      	str	r2, [sp, #152]	; 0x98
    ac52:	9125      	str	r1, [sp, #148]	; 0x94
    ac54:	f8ca 0004 	str.w	r0, [sl, #4]
    ac58:	f300 83a2 	bgt.w	b3a0 <_svfprintf_r+0xa10>
    ac5c:	f10a 0a08 	add.w	sl, sl, #8
    ac60:	9b09      	ldr	r3, [sp, #36]	; 0x24
    ac62:	b183      	cbz	r3, ac86 <_svfprintf_r+0x2f6>
    ac64:	9b25      	ldr	r3, [sp, #148]	; 0x94
    ac66:	a91a      	add	r1, sp, #104	; 0x68
    ac68:	3301      	adds	r3, #1
    ac6a:	3202      	adds	r2, #2
    ac6c:	f8ca 1000 	str.w	r1, [sl]
    ac70:	2b07      	cmp	r3, #7
    ac72:	f04f 0102 	mov.w	r1, #2
    ac76:	9226      	str	r2, [sp, #152]	; 0x98
    ac78:	9325      	str	r3, [sp, #148]	; 0x94
    ac7a:	f8ca 1004 	str.w	r1, [sl, #4]
    ac7e:	f300 83a3 	bgt.w	b3c8 <_svfprintf_r+0xa38>
    ac82:	f10a 0a08 	add.w	sl, sl, #8
    ac86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    ac88:	2b80      	cmp	r3, #128	; 0x80
    ac8a:	f000 826c 	beq.w	b166 <_svfprintf_r+0x7d6>
    ac8e:	9b03      	ldr	r3, [sp, #12]
    ac90:	9905      	ldr	r1, [sp, #20]
    ac92:	1a5d      	subs	r5, r3, r1
    ac94:	2d00      	cmp	r5, #0
    ac96:	f300 82a5 	bgt.w	b1e4 <_svfprintf_r+0x854>
    ac9a:	f418 7f80 	tst.w	r8, #256	; 0x100
    ac9e:	f040 820d 	bne.w	b0bc <_svfprintf_r+0x72c>
    aca2:	9b05      	ldr	r3, [sp, #20]
    aca4:	f8ca 3004 	str.w	r3, [sl, #4]
    aca8:	441a      	add	r2, r3
    acaa:	9b25      	ldr	r3, [sp, #148]	; 0x94
    acac:	f8ca 4000 	str.w	r4, [sl]
    acb0:	3301      	adds	r3, #1
    acb2:	2b07      	cmp	r3, #7
    acb4:	9226      	str	r2, [sp, #152]	; 0x98
    acb6:	9325      	str	r3, [sp, #148]	; 0x94
    acb8:	f300 831b 	bgt.w	b2f2 <_svfprintf_r+0x962>
    acbc:	f10a 0a08 	add.w	sl, sl, #8
    acc0:	f018 0f04 	tst.w	r8, #4
    acc4:	d005      	beq.n	acd2 <_svfprintf_r+0x342>
    acc6:	9b06      	ldr	r3, [sp, #24]
    acc8:	9902      	ldr	r1, [sp, #8]
    acca:	1a5c      	subs	r4, r3, r1
    accc:	2c00      	cmp	r4, #0
    acce:	f300 8388 	bgt.w	b3e2 <_svfprintf_r+0xa52>
    acd2:	9b04      	ldr	r3, [sp, #16]
    acd4:	9906      	ldr	r1, [sp, #24]
    acd6:	9802      	ldr	r0, [sp, #8]
    acd8:	4281      	cmp	r1, r0
    acda:	bfac      	ite	ge
    acdc:	185b      	addge	r3, r3, r1
    acde:	181b      	addlt	r3, r3, r0
    ace0:	9304      	str	r3, [sp, #16]
    ace2:	2a00      	cmp	r2, #0
    ace4:	f040 82b0 	bne.w	b248 <_svfprintf_r+0x8b8>
    ace8:	2300      	movs	r3, #0
    acea:	9325      	str	r3, [sp, #148]	; 0x94
    acec:	9b07      	ldr	r3, [sp, #28]
    acee:	b11b      	cbz	r3, acf8 <_svfprintf_r+0x368>
    acf0:	9907      	ldr	r1, [sp, #28]
    acf2:	4658      	mov	r0, fp
    acf4:	f004 faac 	bl	f250 <_free_r>
    acf8:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    acfc:	464c      	mov	r4, r9
    acfe:	e679      	b.n	a9f4 <_svfprintf_r+0x64>
    ad00:	930b      	str	r3, [sp, #44]	; 0x2c
    ad02:	9b08      	ldr	r3, [sp, #32]
    ad04:	3307      	adds	r3, #7
    ad06:	f023 0307 	bic.w	r3, r3, #7
    ad0a:	ecb3 8b02 	vldmia	r3!, {d8}
    ad0e:	eeb0 7bc8 	vabs.f64	d7, d8
    ad12:	eeb4 7b49 	vcmp.f64	d7, d9
    ad16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ad1a:	9308      	str	r3, [sp, #32]
    ad1c:	f340 84e9 	ble.w	b6f2 <_svfprintf_r+0xd62>
    ad20:	eeb5 8bc0 	vcmpe.f64	d8, #0.0
    ad24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    ad28:	f101 8059 	bmi.w	bdde <_svfprintf_r+0x144e>
    ad2c:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    ad30:	4cab      	ldr	r4, [pc, #684]	; (afe0 <_svfprintf_r+0x650>)
    ad32:	4bac      	ldr	r3, [pc, #688]	; (afe4 <_svfprintf_r+0x654>)
    ad34:	f028 0880 	bic.w	r8, r8, #128	; 0x80
    ad38:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    ad3a:	2a47      	cmp	r2, #71	; 0x47
    ad3c:	bfc8      	it	gt
    ad3e:	461c      	movgt	r4, r3
    ad40:	2300      	movs	r3, #0
    ad42:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
    ad46:	2203      	movs	r2, #3
    ad48:	9307      	str	r3, [sp, #28]
    ad4a:	9202      	str	r2, [sp, #8]
    ad4c:	9205      	str	r2, [sp, #20]
    ad4e:	9303      	str	r3, [sp, #12]
    ad50:	930f      	str	r3, [sp, #60]	; 0x3c
    ad52:	2900      	cmp	r1, #0
    ad54:	f43f af5f 	beq.w	ac16 <_svfprintf_r+0x286>
    ad58:	9b02      	ldr	r3, [sp, #8]
    ad5a:	3301      	adds	r3, #1
    ad5c:	9302      	str	r3, [sp, #8]
    ad5e:	e75a      	b.n	ac16 <_svfprintf_r+0x286>
    ad60:	2b43      	cmp	r3, #67	; 0x43
    ad62:	930b      	str	r3, [sp, #44]	; 0x2c
    ad64:	d003      	beq.n	ad6e <_svfprintf_r+0x3de>
    ad66:	f018 0f10 	tst.w	r8, #16
    ad6a:	f000 855d 	beq.w	b828 <_svfprintf_r+0xe98>
    ad6e:	9d08      	ldr	r5, [sp, #32]
    ad70:	2208      	movs	r2, #8
    ad72:	2100      	movs	r1, #0
    ad74:	a822      	add	r0, sp, #136	; 0x88
    ad76:	ac37      	add	r4, sp, #220	; 0xdc
    ad78:	f001 ff38 	bl	cbec <memset>
    ad7c:	ab22      	add	r3, sp, #136	; 0x88
    ad7e:	f855 2b04 	ldr.w	r2, [r5], #4
    ad82:	4621      	mov	r1, r4
    ad84:	4658      	mov	r0, fp
    ad86:	f001 ff89 	bl	cc9c <_wcrtomb_r>
    ad8a:	4603      	mov	r3, r0
    ad8c:	3301      	adds	r3, #1
    ad8e:	9005      	str	r0, [sp, #20]
    ad90:	f001 82ee 	beq.w	c370 <_svfprintf_r+0x19e0>
    ad94:	9b05      	ldr	r3, [sp, #20]
    ad96:	9508      	str	r5, [sp, #32]
    ad98:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    ad9c:	9302      	str	r3, [sp, #8]
    ad9e:	2100      	movs	r1, #0
    ada0:	e9cd 110c 	strd	r1, r1, [sp, #48]	; 0x30
    ada4:	f88d 1067 	strb.w	r1, [sp, #103]	; 0x67
    ada8:	9107      	str	r1, [sp, #28]
    adaa:	9103      	str	r1, [sp, #12]
    adac:	910f      	str	r1, [sp, #60]	; 0x3c
    adae:	e732      	b.n	ac16 <_svfprintf_r+0x286>
    adb0:	930b      	str	r3, [sp, #44]	; 0x2c
    adb2:	9b08      	ldr	r3, [sp, #32]
    adb4:	461a      	mov	r2, r3
    adb6:	2300      	movs	r3, #0
    adb8:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
    adbc:	4613      	mov	r3, r2
    adbe:	f853 4b04 	ldr.w	r4, [r3], #4
    adc2:	9308      	str	r3, [sp, #32]
    adc4:	2c00      	cmp	r4, #0
    adc6:	f000 8548 	beq.w	b85a <_svfprintf_r+0xeca>
    adca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    adcc:	2b53      	cmp	r3, #83	; 0x53
    adce:	f000 86ec 	beq.w	bbaa <_svfprintf_r+0x121a>
    add2:	f018 0310 	ands.w	r3, r8, #16
    add6:	930c      	str	r3, [sp, #48]	; 0x30
    add8:	f040 86e7 	bne.w	bbaa <_svfprintf_r+0x121a>
    addc:	9b03      	ldr	r3, [sp, #12]
    adde:	1c5d      	adds	r5, r3, #1
    ade0:	f001 80e5 	beq.w	bfae <_svfprintf_r+0x161e>
    ade4:	990c      	ldr	r1, [sp, #48]	; 0x30
    ade6:	461a      	mov	r2, r3
    ade8:	4620      	mov	r0, r4
    adea:	f003 fef1 	bl	ebd0 <memchr>
    adee:	9007      	str	r0, [sp, #28]
    adf0:	2800      	cmp	r0, #0
    adf2:	f001 8328 	beq.w	c446 <_svfprintf_r+0x1ab6>
    adf6:	9b07      	ldr	r3, [sp, #28]
    adf8:	1b1a      	subs	r2, r3, r4
    adfa:	9205      	str	r2, [sp, #20]
    adfc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    adfe:	9303      	str	r3, [sp, #12]
    ae00:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
    ae04:	930f      	str	r3, [sp, #60]	; 0x3c
    ae06:	930d      	str	r3, [sp, #52]	; 0x34
    ae08:	9307      	str	r3, [sp, #28]
    ae0a:	2373      	movs	r3, #115	; 0x73
    ae0c:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    ae10:	9202      	str	r2, [sp, #8]
    ae12:	930b      	str	r3, [sp, #44]	; 0x2c
    ae14:	e79d      	b.n	ad52 <_svfprintf_r+0x3c2>
    ae16:	f018 0f20 	tst.w	r8, #32
    ae1a:	930b      	str	r3, [sp, #44]	; 0x2c
    ae1c:	9b08      	ldr	r3, [sp, #32]
    ae1e:	d03d      	beq.n	ae9c <_svfprintf_r+0x50c>
    ae20:	3307      	adds	r3, #7
    ae22:	f023 0307 	bic.w	r3, r3, #7
    ae26:	461a      	mov	r2, r3
    ae28:	4611      	mov	r1, r2
    ae2a:	685b      	ldr	r3, [r3, #4]
    ae2c:	f851 2b08 	ldr.w	r2, [r1], #8
    ae30:	9108      	str	r1, [sp, #32]
    ae32:	4619      	mov	r1, r3
    ae34:	2b00      	cmp	r3, #0
    ae36:	f2c0 840c 	blt.w	b652 <_svfprintf_r+0xcc2>
    ae3a:	9b03      	ldr	r3, [sp, #12]
    ae3c:	3301      	adds	r3, #1
    ae3e:	f000 829e 	beq.w	b37e <_svfprintf_r+0x9ee>
    ae42:	f028 0080 	bic.w	r0, r8, #128	; 0x80
    ae46:	ea52 0301 	orrs.w	r3, r2, r1
    ae4a:	9002      	str	r0, [sp, #8]
    ae4c:	f040 8299 	bne.w	b382 <_svfprintf_r+0x9f2>
    ae50:	9b03      	ldr	r3, [sp, #12]
    ae52:	2b00      	cmp	r3, #0
    ae54:	f040 829a 	bne.w	b38c <_svfprintf_r+0x9fc>
    ae58:	4680      	mov	r8, r0
    ae5a:	2300      	movs	r3, #0
    ae5c:	9303      	str	r3, [sp, #12]
    ae5e:	9305      	str	r3, [sp, #20]
    ae60:	ac50      	add	r4, sp, #320	; 0x140
    ae62:	e106      	b.n	b072 <_svfprintf_r+0x6e2>
    ae64:	9b08      	ldr	r3, [sp, #32]
    ae66:	f853 2b04 	ldr.w	r2, [r3], #4
    ae6a:	9206      	str	r2, [sp, #24]
    ae6c:	2a00      	cmp	r2, #0
    ae6e:	f280 8419 	bge.w	b6a4 <_svfprintf_r+0xd14>
    ae72:	9a06      	ldr	r2, [sp, #24]
    ae74:	9308      	str	r3, [sp, #32]
    ae76:	4252      	negs	r2, r2
    ae78:	9206      	str	r2, [sp, #24]
    ae7a:	f899 3000 	ldrb.w	r3, [r9]
    ae7e:	f048 0804 	orr.w	r8, r8, #4
    ae82:	e5e1      	b.n	aa48 <_svfprintf_r+0xb8>
    ae84:	f899 3000 	ldrb.w	r3, [r9]
    ae88:	f048 0808 	orr.w	r8, r8, #8
    ae8c:	e5dc      	b.n	aa48 <_svfprintf_r+0xb8>
    ae8e:	f048 0810 	orr.w	r8, r8, #16
    ae92:	f018 0f20 	tst.w	r8, #32
    ae96:	930b      	str	r3, [sp, #44]	; 0x2c
    ae98:	9b08      	ldr	r3, [sp, #32]
    ae9a:	d1c1      	bne.n	ae20 <_svfprintf_r+0x490>
    ae9c:	f018 0f10 	tst.w	r8, #16
    aea0:	f040 840b 	bne.w	b6ba <_svfprintf_r+0xd2a>
    aea4:	f018 0f40 	tst.w	r8, #64	; 0x40
    aea8:	f000 8403 	beq.w	b6b2 <_svfprintf_r+0xd22>
    aeac:	f933 2b04 	ldrsh.w	r2, [r3], #4
    aeb0:	9308      	str	r3, [sp, #32]
    aeb2:	17d1      	asrs	r1, r2, #31
    aeb4:	460b      	mov	r3, r1
    aeb6:	e7bd      	b.n	ae34 <_svfprintf_r+0x4a4>
    aeb8:	9b08      	ldr	r3, [sp, #32]
    aeba:	f048 0202 	orr.w	r2, r8, #2
    aebe:	9202      	str	r2, [sp, #8]
    aec0:	f853 2b04 	ldr.w	r2, [r3], #4
    aec4:	9308      	str	r3, [sp, #32]
    aec6:	f647 0330 	movw	r3, #30768	; 0x7830
    aeca:	f8ad 3068 	strh.w	r3, [sp, #104]	; 0x68
    aece:	2078      	movs	r0, #120	; 0x78
    aed0:	4b45      	ldr	r3, [pc, #276]	; (afe8 <_svfprintf_r+0x658>)
    aed2:	9311      	str	r3, [sp, #68]	; 0x44
    aed4:	2100      	movs	r1, #0
    aed6:	2302      	movs	r3, #2
    aed8:	900b      	str	r0, [sp, #44]	; 0x2c
    aeda:	2000      	movs	r0, #0
    aedc:	9c03      	ldr	r4, [sp, #12]
    aede:	f88d 0067 	strb.w	r0, [sp, #103]	; 0x67
    aee2:	1c60      	adds	r0, r4, #1
    aee4:	f000 80ad 	beq.w	b042 <_svfprintf_r+0x6b2>
    aee8:	9802      	ldr	r0, [sp, #8]
    aeea:	f020 0880 	bic.w	r8, r0, #128	; 0x80
    aeee:	ea52 0001 	orrs.w	r0, r2, r1
    aef2:	f040 80a4 	bne.w	b03e <_svfprintf_r+0x6ae>
    aef6:	2c00      	cmp	r4, #0
    aef8:	f040 86ae 	bne.w	bc58 <_svfprintf_r+0x12c8>
    aefc:	2b00      	cmp	r3, #0
    aefe:	d1ac      	bne.n	ae5a <_svfprintf_r+0x4ca>
    af00:	9b02      	ldr	r3, [sp, #8]
    af02:	f013 0301 	ands.w	r3, r3, #1
    af06:	9305      	str	r3, [sp, #20]
    af08:	f000 83d1 	beq.w	b6ae <_svfprintf_r+0xd1e>
    af0c:	2330      	movs	r3, #48	; 0x30
    af0e:	f88d 313f 	strb.w	r3, [sp, #319]	; 0x13f
    af12:	f20d 143f 	addw	r4, sp, #319	; 0x13f
    af16:	e0ac      	b.n	b072 <_svfprintf_r+0x6e2>
    af18:	f018 0f20 	tst.w	r8, #32
    af1c:	f040 83d4 	bne.w	b6c8 <_svfprintf_r+0xd38>
    af20:	f018 0f10 	tst.w	r8, #16
    af24:	f040 869f 	bne.w	bc66 <_svfprintf_r+0x12d6>
    af28:	f018 0f40 	tst.w	r8, #64	; 0x40
    af2c:	f040 8797 	bne.w	be5e <_svfprintf_r+0x14ce>
    af30:	f418 7f00 	tst.w	r8, #512	; 0x200
    af34:	f000 8697 	beq.w	bc66 <_svfprintf_r+0x12d6>
    af38:	9b08      	ldr	r3, [sp, #32]
    af3a:	9904      	ldr	r1, [sp, #16]
    af3c:	f853 2b04 	ldr.w	r2, [r3], #4
    af40:	9308      	str	r3, [sp, #32]
    af42:	7011      	strb	r1, [r2, #0]
    af44:	464c      	mov	r4, r9
    af46:	e555      	b.n	a9f4 <_svfprintf_r+0x64>
    af48:	f899 3000 	ldrb.w	r3, [r9]
    af4c:	2b68      	cmp	r3, #104	; 0x68
    af4e:	bf03      	ittte	eq
    af50:	f899 3001 	ldrbeq.w	r3, [r9, #1]
    af54:	f448 7800 	orreq.w	r8, r8, #512	; 0x200
    af58:	f109 0901 	addeq.w	r9, r9, #1
    af5c:	f048 0840 	orrne.w	r8, r8, #64	; 0x40
    af60:	e572      	b.n	aa48 <_svfprintf_r+0xb8>
    af62:	f899 3000 	ldrb.w	r3, [r9]
    af66:	f88d 5067 	strb.w	r5, [sp, #103]	; 0x67
    af6a:	e56d      	b.n	aa48 <_svfprintf_r+0xb8>
    af6c:	f899 3000 	ldrb.w	r3, [r9]
    af70:	2b6c      	cmp	r3, #108	; 0x6c
    af72:	bf03      	ittte	eq
    af74:	f899 3001 	ldrbeq.w	r3, [r9, #1]
    af78:	f048 0820 	orreq.w	r8, r8, #32
    af7c:	f109 0901 	addeq.w	r9, r9, #1
    af80:	f048 0810 	orrne.w	r8, r8, #16
    af84:	e560      	b.n	aa48 <_svfprintf_r+0xb8>
    af86:	930b      	str	r3, [sp, #44]	; 0x2c
    af88:	f048 0810 	orr.w	r8, r8, #16
    af8c:	f018 0120 	ands.w	r1, r8, #32
    af90:	f000 8351 	beq.w	b636 <_svfprintf_r+0xca6>
    af94:	9b08      	ldr	r3, [sp, #32]
    af96:	3307      	adds	r3, #7
    af98:	f023 0307 	bic.w	r3, r3, #7
    af9c:	6859      	ldr	r1, [r3, #4]
    af9e:	f853 2b08 	ldr.w	r2, [r3], #8
    afa2:	9308      	str	r3, [sp, #32]
    afa4:	f428 6380 	bic.w	r3, r8, #1024	; 0x400
    afa8:	9302      	str	r3, [sp, #8]
    afaa:	2300      	movs	r3, #0
    afac:	e795      	b.n	aeda <_svfprintf_r+0x54a>
    afae:	930b      	str	r3, [sp, #44]	; 0x2c
    afb0:	f048 0310 	orr.w	r3, r8, #16
    afb4:	9302      	str	r3, [sp, #8]
    afb6:	9b02      	ldr	r3, [sp, #8]
    afb8:	f013 0120 	ands.w	r1, r3, #32
    afbc:	f000 8329 	beq.w	b612 <_svfprintf_r+0xc82>
    afc0:	9b08      	ldr	r3, [sp, #32]
    afc2:	3307      	adds	r3, #7
    afc4:	f023 0307 	bic.w	r3, r3, #7
    afc8:	6859      	ldr	r1, [r3, #4]
    afca:	f853 2b08 	ldr.w	r2, [r3], #8
    afce:	9308      	str	r3, [sp, #32]
    afd0:	2301      	movs	r3, #1
    afd2:	e782      	b.n	aeda <_svfprintf_r+0x54a>
    afd4:	f899 3000 	ldrb.w	r3, [r9]
    afd8:	f048 0880 	orr.w	r8, r8, #128	; 0x80
    afdc:	e534      	b.n	aa48 <_svfprintf_r+0xb8>
    afde:	bf00      	nop
    afe0:	20001514 	.word	0x20001514
    afe4:	20001518 	.word	0x20001518
    afe8:	20001524 	.word	0x20001524
    afec:	4649      	mov	r1, r9
    afee:	f811 3b01 	ldrb.w	r3, [r1], #1
    aff2:	2b2a      	cmp	r3, #42	; 0x2a
    aff4:	f001 8249 	beq.w	c48a <_svfprintf_r+0x1afa>
    aff8:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    affc:	2a09      	cmp	r2, #9
    affe:	4689      	mov	r9, r1
    b000:	bf98      	it	ls
    b002:	2100      	movls	r1, #0
    b004:	f201 8144 	bhi.w	c290 <_svfprintf_r+0x1900>
    b008:	f819 3b01 	ldrb.w	r3, [r9], #1
    b00c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
    b010:	eb02 0141 	add.w	r1, r2, r1, lsl #1
    b014:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    b018:	2a09      	cmp	r2, #9
    b01a:	d9f5      	bls.n	b008 <_svfprintf_r+0x678>
    b01c:	9103      	str	r1, [sp, #12]
    b01e:	e515      	b.n	aa4c <_svfprintf_r+0xbc>
    b020:	f899 3000 	ldrb.w	r3, [r9]
    b024:	f048 0801 	orr.w	r8, r8, #1
    b028:	e50e      	b.n	aa48 <_svfprintf_r+0xb8>
    b02a:	f89d 3067 	ldrb.w	r3, [sp, #103]	; 0x67
    b02e:	2b00      	cmp	r3, #0
    b030:	f47f ad8f 	bne.w	ab52 <_svfprintf_r+0x1c2>
    b034:	f899 3000 	ldrb.w	r3, [r9]
    b038:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
    b03c:	e504      	b.n	aa48 <_svfprintf_r+0xb8>
    b03e:	f8cd 8008 	str.w	r8, [sp, #8]
    b042:	2b01      	cmp	r3, #1
    b044:	f000 819d 	beq.w	b382 <_svfprintf_r+0x9f2>
    b048:	2b02      	cmp	r3, #2
    b04a:	ac50      	add	r4, sp, #320	; 0x140
    b04c:	d120      	bne.n	b090 <_svfprintf_r+0x700>
    b04e:	9811      	ldr	r0, [sp, #68]	; 0x44
    b050:	f002 030f 	and.w	r3, r2, #15
    b054:	0912      	lsrs	r2, r2, #4
    b056:	5cc3      	ldrb	r3, [r0, r3]
    b058:	f804 3d01 	strb.w	r3, [r4, #-1]!
    b05c:	ea42 7201 	orr.w	r2, r2, r1, lsl #28
    b060:	0909      	lsrs	r1, r1, #4
    b062:	ea52 0301 	orrs.w	r3, r2, r1
    b066:	d1f3      	bne.n	b050 <_svfprintf_r+0x6c0>
    b068:	ab50      	add	r3, sp, #320	; 0x140
    b06a:	1b1b      	subs	r3, r3, r4
    b06c:	f8dd 8008 	ldr.w	r8, [sp, #8]
    b070:	9305      	str	r3, [sp, #20]
    b072:	9a05      	ldr	r2, [sp, #20]
    b074:	9803      	ldr	r0, [sp, #12]
    b076:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    b07a:	4282      	cmp	r2, r0
    b07c:	f04f 0300 	mov.w	r3, #0
    b080:	bfb8      	it	lt
    b082:	4602      	movlt	r2, r0
    b084:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
    b088:	9307      	str	r3, [sp, #28]
    b08a:	9202      	str	r2, [sp, #8]
    b08c:	930f      	str	r3, [sp, #60]	; 0x3c
    b08e:	e660      	b.n	ad52 <_svfprintf_r+0x3c2>
    b090:	f002 0307 	and.w	r3, r2, #7
    b094:	08d2      	lsrs	r2, r2, #3
    b096:	ea42 7241 	orr.w	r2, r2, r1, lsl #29
    b09a:	08c9      	lsrs	r1, r1, #3
    b09c:	3330      	adds	r3, #48	; 0x30
    b09e:	ea52 0501 	orrs.w	r5, r2, r1
    b0a2:	4620      	mov	r0, r4
    b0a4:	f804 3d01 	strb.w	r3, [r4, #-1]!
    b0a8:	d1f2      	bne.n	b090 <_svfprintf_r+0x700>
    b0aa:	9a02      	ldr	r2, [sp, #8]
    b0ac:	07d1      	lsls	r1, r2, #31
    b0ae:	f100 824d 	bmi.w	b54c <_svfprintf_r+0xbbc>
    b0b2:	ab50      	add	r3, sp, #320	; 0x140
    b0b4:	1b1b      	subs	r3, r3, r4
    b0b6:	4690      	mov	r8, r2
    b0b8:	9305      	str	r3, [sp, #20]
    b0ba:	e7da      	b.n	b072 <_svfprintf_r+0x6e2>
    b0bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b0be:	2b65      	cmp	r3, #101	; 0x65
    b0c0:	f340 80d4 	ble.w	b26c <_svfprintf_r+0x8dc>
    b0c4:	eeb5 8b40 	vcmp.f64	d8, #0.0
    b0c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    b0cc:	f040 81c1 	bne.w	b452 <_svfprintf_r+0xac2>
    b0d0:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b0d2:	49ba      	ldr	r1, [pc, #744]	; (b3bc <_svfprintf_r+0xa2c>)
    b0d4:	f8ca 1000 	str.w	r1, [sl]
    b0d8:	3301      	adds	r3, #1
    b0da:	3201      	adds	r2, #1
    b0dc:	2101      	movs	r1, #1
    b0de:	2b07      	cmp	r3, #7
    b0e0:	9226      	str	r2, [sp, #152]	; 0x98
    b0e2:	9325      	str	r3, [sp, #148]	; 0x94
    b0e4:	f8ca 1004 	str.w	r1, [sl, #4]
    b0e8:	f300 8551 	bgt.w	bb8e <_svfprintf_r+0x11fe>
    b0ec:	f10a 0a08 	add.w	sl, sl, #8
    b0f0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    b0f2:	990e      	ldr	r1, [sp, #56]	; 0x38
    b0f4:	428b      	cmp	r3, r1
    b0f6:	f280 82d0 	bge.w	b69a <_svfprintf_r+0xd0a>
    b0fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
    b0fc:	9912      	ldr	r1, [sp, #72]	; 0x48
    b0fe:	441a      	add	r2, r3
    b100:	e9ca 1300 	strd	r1, r3, [sl]
    b104:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b106:	9226      	str	r2, [sp, #152]	; 0x98
    b108:	3301      	adds	r3, #1
    b10a:	2b07      	cmp	r3, #7
    b10c:	9325      	str	r3, [sp, #148]	; 0x94
    b10e:	f300 8397 	bgt.w	b840 <_svfprintf_r+0xeb0>
    b112:	f10a 0a08 	add.w	sl, sl, #8
    b116:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b118:	1e5c      	subs	r4, r3, #1
    b11a:	2c00      	cmp	r4, #0
    b11c:	f77f add0 	ble.w	acc0 <_svfprintf_r+0x330>
    b120:	2c10      	cmp	r4, #16
    b122:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b124:	f340 856e 	ble.w	bc04 <_svfprintf_r+0x1274>
    b128:	ee1b 6a10 	vmov	r6, s22
    b12c:	2510      	movs	r5, #16
    b12e:	e005      	b.n	b13c <_svfprintf_r+0x7ac>
    b130:	f10a 0a08 	add.w	sl, sl, #8
    b134:	3c10      	subs	r4, #16
    b136:	2c10      	cmp	r4, #16
    b138:	f340 8564 	ble.w	bc04 <_svfprintf_r+0x1274>
    b13c:	3301      	adds	r3, #1
    b13e:	49a0      	ldr	r1, [pc, #640]	; (b3c0 <_svfprintf_r+0xa30>)
    b140:	3210      	adds	r2, #16
    b142:	2b07      	cmp	r3, #7
    b144:	e9ca 1500 	strd	r1, r5, [sl]
    b148:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b14c:	ddf0      	ble.n	b130 <_svfprintf_r+0x7a0>
    b14e:	aa24      	add	r2, sp, #144	; 0x90
    b150:	4631      	mov	r1, r6
    b152:	4658      	mov	r0, fp
    b154:	f004 fa5e 	bl	f614 <__ssprint_r>
    b158:	2800      	cmp	r0, #0
    b15a:	d17e      	bne.n	b25a <_svfprintf_r+0x8ca>
    b15c:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b160:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b164:	e7e6      	b.n	b134 <_svfprintf_r+0x7a4>
    b166:	9b06      	ldr	r3, [sp, #24]
    b168:	9902      	ldr	r1, [sp, #8]
    b16a:	1a5d      	subs	r5, r3, r1
    b16c:	2d00      	cmp	r5, #0
    b16e:	f77f ad8e 	ble.w	ac8e <_svfprintf_r+0x2fe>
    b172:	2d10      	cmp	r5, #16
    b174:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b176:	dd21      	ble.n	b1bc <_svfprintf_r+0x82c>
    b178:	9409      	str	r4, [sp, #36]	; 0x24
    b17a:	2610      	movs	r6, #16
    b17c:	ee1b 4a10 	vmov	r4, s22
    b180:	e004      	b.n	b18c <_svfprintf_r+0x7fc>
    b182:	3d10      	subs	r5, #16
    b184:	2d10      	cmp	r5, #16
    b186:	f10a 0a08 	add.w	sl, sl, #8
    b18a:	dd16      	ble.n	b1ba <_svfprintf_r+0x82a>
    b18c:	3301      	adds	r3, #1
    b18e:	498c      	ldr	r1, [pc, #560]	; (b3c0 <_svfprintf_r+0xa30>)
    b190:	3210      	adds	r2, #16
    b192:	2b07      	cmp	r3, #7
    b194:	e9ca 1600 	strd	r1, r6, [sl]
    b198:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b19c:	ddf1      	ble.n	b182 <_svfprintf_r+0x7f2>
    b19e:	aa24      	add	r2, sp, #144	; 0x90
    b1a0:	4621      	mov	r1, r4
    b1a2:	4658      	mov	r0, fp
    b1a4:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b1a8:	f004 fa34 	bl	f614 <__ssprint_r>
    b1ac:	2800      	cmp	r0, #0
    b1ae:	d154      	bne.n	b25a <_svfprintf_r+0x8ca>
    b1b0:	3d10      	subs	r5, #16
    b1b2:	2d10      	cmp	r5, #16
    b1b4:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b1b8:	dce8      	bgt.n	b18c <_svfprintf_r+0x7fc>
    b1ba:	9c09      	ldr	r4, [sp, #36]	; 0x24
    b1bc:	4980      	ldr	r1, [pc, #512]	; (b3c0 <_svfprintf_r+0xa30>)
    b1be:	f8ca 5004 	str.w	r5, [sl, #4]
    b1c2:	3301      	adds	r3, #1
    b1c4:	442a      	add	r2, r5
    b1c6:	2b07      	cmp	r3, #7
    b1c8:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b1cc:	f8ca 1000 	str.w	r1, [sl]
    b1d0:	f300 8526 	bgt.w	bc20 <_svfprintf_r+0x1290>
    b1d4:	9b03      	ldr	r3, [sp, #12]
    b1d6:	9905      	ldr	r1, [sp, #20]
    b1d8:	1a5d      	subs	r5, r3, r1
    b1da:	2d00      	cmp	r5, #0
    b1dc:	f10a 0a08 	add.w	sl, sl, #8
    b1e0:	f77f ad5b 	ble.w	ac9a <_svfprintf_r+0x30a>
    b1e4:	2d10      	cmp	r5, #16
    b1e6:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b1e8:	dd1f      	ble.n	b22a <_svfprintf_r+0x89a>
    b1ea:	4651      	mov	r1, sl
    b1ec:	2610      	movs	r6, #16
    b1ee:	ee1b aa10 	vmov	sl, s22
    b1f2:	e004      	b.n	b1fe <_svfprintf_r+0x86e>
    b1f4:	3d10      	subs	r5, #16
    b1f6:	2d10      	cmp	r5, #16
    b1f8:	f101 0108 	add.w	r1, r1, #8
    b1fc:	dd14      	ble.n	b228 <_svfprintf_r+0x898>
    b1fe:	3301      	adds	r3, #1
    b200:	486f      	ldr	r0, [pc, #444]	; (b3c0 <_svfprintf_r+0xa30>)
    b202:	3210      	adds	r2, #16
    b204:	2b07      	cmp	r3, #7
    b206:	e9c1 0600 	strd	r0, r6, [r1]
    b20a:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b20e:	ddf1      	ble.n	b1f4 <_svfprintf_r+0x864>
    b210:	aa24      	add	r2, sp, #144	; 0x90
    b212:	4651      	mov	r1, sl
    b214:	4658      	mov	r0, fp
    b216:	f004 f9fd 	bl	f614 <__ssprint_r>
    b21a:	b9f0      	cbnz	r0, b25a <_svfprintf_r+0x8ca>
    b21c:	3d10      	subs	r5, #16
    b21e:	2d10      	cmp	r5, #16
    b220:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b224:	a927      	add	r1, sp, #156	; 0x9c
    b226:	dcea      	bgt.n	b1fe <_svfprintf_r+0x86e>
    b228:	468a      	mov	sl, r1
    b22a:	3301      	adds	r3, #1
    b22c:	4964      	ldr	r1, [pc, #400]	; (b3c0 <_svfprintf_r+0xa30>)
    b22e:	f8ca 5004 	str.w	r5, [sl, #4]
    b232:	442a      	add	r2, r5
    b234:	2b07      	cmp	r3, #7
    b236:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b23a:	f8ca 1000 	str.w	r1, [sl]
    b23e:	f300 81da 	bgt.w	b5f6 <_svfprintf_r+0xc66>
    b242:	f10a 0a08 	add.w	sl, sl, #8
    b246:	e528      	b.n	ac9a <_svfprintf_r+0x30a>
    b248:	ee1b 1a10 	vmov	r1, s22
    b24c:	aa24      	add	r2, sp, #144	; 0x90
    b24e:	4658      	mov	r0, fp
    b250:	f004 f9e0 	bl	f614 <__ssprint_r>
    b254:	2800      	cmp	r0, #0
    b256:	f43f ad47 	beq.w	ace8 <_svfprintf_r+0x358>
    b25a:	9b07      	ldr	r3, [sp, #28]
    b25c:	2b00      	cmp	r3, #0
    b25e:	f43f aca2 	beq.w	aba6 <_svfprintf_r+0x216>
    b262:	9907      	ldr	r1, [sp, #28]
    b264:	4658      	mov	r0, fp
    b266:	f003 fff3 	bl	f250 <_free_r>
    b26a:	e49c      	b.n	aba6 <_svfprintf_r+0x216>
    b26c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b26e:	2b01      	cmp	r3, #1
    b270:	f340 817a 	ble.w	b568 <_svfprintf_r+0xbd8>
    b274:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b276:	f8ca 4000 	str.w	r4, [sl]
    b27a:	3301      	adds	r3, #1
    b27c:	3201      	adds	r2, #1
    b27e:	2101      	movs	r1, #1
    b280:	2b07      	cmp	r3, #7
    b282:	9226      	str	r2, [sp, #152]	; 0x98
    b284:	9325      	str	r3, [sp, #148]	; 0x94
    b286:	f8ca 1004 	str.w	r1, [sl, #4]
    b28a:	f300 81f8 	bgt.w	b67e <_svfprintf_r+0xcee>
    b28e:	f10a 0a08 	add.w	sl, sl, #8
    b292:	9910      	ldr	r1, [sp, #64]	; 0x40
    b294:	9812      	ldr	r0, [sp, #72]	; 0x48
    b296:	3301      	adds	r3, #1
    b298:	440a      	add	r2, r1
    b29a:	2b07      	cmp	r3, #7
    b29c:	e9ca 0100 	strd	r0, r1, [sl]
    b2a0:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b2a4:	f300 81dd 	bgt.w	b662 <_svfprintf_r+0xcd2>
    b2a8:	f10a 0a08 	add.w	sl, sl, #8
    b2ac:	eeb5 8b40 	vcmp.f64	d8, #0.0
    b2b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    b2b4:	f000 8177 	beq.w	b5a6 <_svfprintf_r+0xc16>
    b2b8:	990e      	ldr	r1, [sp, #56]	; 0x38
    b2ba:	3301      	adds	r3, #1
    b2bc:	3901      	subs	r1, #1
    b2be:	3401      	adds	r4, #1
    b2c0:	440a      	add	r2, r1
    b2c2:	2b07      	cmp	r3, #7
    b2c4:	f8ca 4000 	str.w	r4, [sl]
    b2c8:	9325      	str	r3, [sp, #148]	; 0x94
    b2ca:	f8ca 1004 	str.w	r1, [sl, #4]
    b2ce:	9226      	str	r2, [sp, #152]	; 0x98
    b2d0:	f300 815b 	bgt.w	b58a <_svfprintf_r+0xbfa>
    b2d4:	f10a 0a08 	add.w	sl, sl, #8
    b2d8:	9914      	ldr	r1, [sp, #80]	; 0x50
    b2da:	f8ca 1004 	str.w	r1, [sl, #4]
    b2de:	3301      	adds	r3, #1
    b2e0:	440a      	add	r2, r1
    b2e2:	2b07      	cmp	r3, #7
    b2e4:	a91e      	add	r1, sp, #120	; 0x78
    b2e6:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b2ea:	f8ca 1000 	str.w	r1, [sl]
    b2ee:	f77f ace5 	ble.w	acbc <_svfprintf_r+0x32c>
    b2f2:	ee1b 1a10 	vmov	r1, s22
    b2f6:	aa24      	add	r2, sp, #144	; 0x90
    b2f8:	4658      	mov	r0, fp
    b2fa:	f004 f98b 	bl	f614 <__ssprint_r>
    b2fe:	2800      	cmp	r0, #0
    b300:	d1ab      	bne.n	b25a <_svfprintf_r+0x8ca>
    b302:	9a26      	ldr	r2, [sp, #152]	; 0x98
    b304:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b308:	e4da      	b.n	acc0 <_svfprintf_r+0x330>
    b30a:	2d10      	cmp	r5, #16
    b30c:	e9dd 1225 	ldrd	r1, r2, [sp, #148]	; 0x94
    b310:	4e2c      	ldr	r6, [pc, #176]	; (b3c4 <_svfprintf_r+0xa34>)
    b312:	dd24      	ble.n	b35e <_svfprintf_r+0x9ce>
    b314:	9417      	str	r4, [sp, #92]	; 0x5c
    b316:	2310      	movs	r3, #16
    b318:	ee1b 4a10 	vmov	r4, s22
    b31c:	4608      	mov	r0, r1
    b31e:	e004      	b.n	b32a <_svfprintf_r+0x99a>
    b320:	3d10      	subs	r5, #16
    b322:	2d10      	cmp	r5, #16
    b324:	f10a 0a08 	add.w	sl, sl, #8
    b328:	dd17      	ble.n	b35a <_svfprintf_r+0x9ca>
    b32a:	3001      	adds	r0, #1
    b32c:	3210      	adds	r2, #16
    b32e:	2807      	cmp	r0, #7
    b330:	e9ca 6300 	strd	r6, r3, [sl]
    b334:	e9cd 0225 	strd	r0, r2, [sp, #148]	; 0x94
    b338:	ddf2      	ble.n	b320 <_svfprintf_r+0x990>
    b33a:	aa24      	add	r2, sp, #144	; 0x90
    b33c:	4621      	mov	r1, r4
    b33e:	4658      	mov	r0, fp
    b340:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b344:	f004 f966 	bl	f614 <__ssprint_r>
    b348:	2800      	cmp	r0, #0
    b34a:	d186      	bne.n	b25a <_svfprintf_r+0x8ca>
    b34c:	3d10      	subs	r5, #16
    b34e:	2d10      	cmp	r5, #16
    b350:	e9dd 0225 	ldrd	r0, r2, [sp, #148]	; 0x94
    b354:	f04f 0310 	mov.w	r3, #16
    b358:	dce7      	bgt.n	b32a <_svfprintf_r+0x99a>
    b35a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
    b35c:	4601      	mov	r1, r0
    b35e:	3101      	adds	r1, #1
    b360:	442a      	add	r2, r5
    b362:	2907      	cmp	r1, #7
    b364:	e9cd 1225 	strd	r1, r2, [sp, #148]	; 0x94
    b368:	f8ca 6000 	str.w	r6, [sl]
    b36c:	f8ca 5004 	str.w	r5, [sl, #4]
    b370:	f300 83bd 	bgt.w	baee <_svfprintf_r+0x115e>
    b374:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    b378:	f10a 0a08 	add.w	sl, sl, #8
    b37c:	e45d      	b.n	ac3a <_svfprintf_r+0x2aa>
    b37e:	f8cd 8008 	str.w	r8, [sp, #8]
    b382:	2a0a      	cmp	r2, #10
    b384:	f171 0300 	sbcs.w	r3, r1, #0
    b388:	f080 8345 	bcs.w	ba16 <_svfprintf_r+0x1086>
    b38c:	3230      	adds	r2, #48	; 0x30
    b38e:	2301      	movs	r3, #1
    b390:	f8dd 8008 	ldr.w	r8, [sp, #8]
    b394:	f88d 213f 	strb.w	r2, [sp, #319]	; 0x13f
    b398:	9305      	str	r3, [sp, #20]
    b39a:	f20d 143f 	addw	r4, sp, #319	; 0x13f
    b39e:	e668      	b.n	b072 <_svfprintf_r+0x6e2>
    b3a0:	ee1b 1a10 	vmov	r1, s22
    b3a4:	aa24      	add	r2, sp, #144	; 0x90
    b3a6:	4658      	mov	r0, fp
    b3a8:	f004 f934 	bl	f614 <__ssprint_r>
    b3ac:	2800      	cmp	r0, #0
    b3ae:	f47f af54 	bne.w	b25a <_svfprintf_r+0x8ca>
    b3b2:	9a26      	ldr	r2, [sp, #152]	; 0x98
    b3b4:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b3b8:	e452      	b.n	ac60 <_svfprintf_r+0x2d0>
    b3ba:	bf00      	nop
    b3bc:	20001554 	.word	0x20001554
    b3c0:	20002abc 	.word	0x20002abc
    b3c4:	20001558 	.word	0x20001558
    b3c8:	ee1b 1a10 	vmov	r1, s22
    b3cc:	aa24      	add	r2, sp, #144	; 0x90
    b3ce:	4658      	mov	r0, fp
    b3d0:	f004 f920 	bl	f614 <__ssprint_r>
    b3d4:	2800      	cmp	r0, #0
    b3d6:	f47f af40 	bne.w	b25a <_svfprintf_r+0x8ca>
    b3da:	9a26      	ldr	r2, [sp, #152]	; 0x98
    b3dc:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b3e0:	e451      	b.n	ac86 <_svfprintf_r+0x2f6>
    b3e2:	2c10      	cmp	r4, #16
    b3e4:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b3e6:	4ebe      	ldr	r6, [pc, #760]	; (b6e0 <_svfprintf_r+0xd50>)
    b3e8:	dd1f      	ble.n	b42a <_svfprintf_r+0xa9a>
    b3ea:	ee1b 8a10 	vmov	r8, s22
    b3ee:	2510      	movs	r5, #16
    b3f0:	e004      	b.n	b3fc <_svfprintf_r+0xa6c>
    b3f2:	3c10      	subs	r4, #16
    b3f4:	2c10      	cmp	r4, #16
    b3f6:	f10a 0a08 	add.w	sl, sl, #8
    b3fa:	dd16      	ble.n	b42a <_svfprintf_r+0xa9a>
    b3fc:	3301      	adds	r3, #1
    b3fe:	3210      	adds	r2, #16
    b400:	2b07      	cmp	r3, #7
    b402:	e9ca 6500 	strd	r6, r5, [sl]
    b406:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b40a:	ddf2      	ble.n	b3f2 <_svfprintf_r+0xa62>
    b40c:	aa24      	add	r2, sp, #144	; 0x90
    b40e:	4641      	mov	r1, r8
    b410:	4658      	mov	r0, fp
    b412:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b416:	f004 f8fd 	bl	f614 <__ssprint_r>
    b41a:	2800      	cmp	r0, #0
    b41c:	f47f af1d 	bne.w	b25a <_svfprintf_r+0x8ca>
    b420:	3c10      	subs	r4, #16
    b422:	2c10      	cmp	r4, #16
    b424:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b428:	dce8      	bgt.n	b3fc <_svfprintf_r+0xa6c>
    b42a:	3301      	adds	r3, #1
    b42c:	4422      	add	r2, r4
    b42e:	2b07      	cmp	r3, #7
    b430:	e9ca 6400 	strd	r6, r4, [sl]
    b434:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b438:	f77f ac4b 	ble.w	acd2 <_svfprintf_r+0x342>
    b43c:	ee1b 1a10 	vmov	r1, s22
    b440:	aa24      	add	r2, sp, #144	; 0x90
    b442:	4658      	mov	r0, fp
    b444:	f004 f8e6 	bl	f614 <__ssprint_r>
    b448:	2800      	cmp	r0, #0
    b44a:	f47f af06 	bne.w	b25a <_svfprintf_r+0x8ca>
    b44e:	9a26      	ldr	r2, [sp, #152]	; 0x98
    b450:	e43f      	b.n	acd2 <_svfprintf_r+0x342>
    b452:	991b      	ldr	r1, [sp, #108]	; 0x6c
    b454:	2900      	cmp	r1, #0
    b456:	f340 835a 	ble.w	bb0e <_svfprintf_r+0x117e>
    b45a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    b45c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b45e:	429e      	cmp	r6, r3
    b460:	bfa8      	it	ge
    b462:	461e      	movge	r6, r3
    b464:	2e00      	cmp	r6, #0
    b466:	dd0b      	ble.n	b480 <_svfprintf_r+0xaf0>
    b468:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b46a:	3301      	adds	r3, #1
    b46c:	4432      	add	r2, r6
    b46e:	2b07      	cmp	r3, #7
    b470:	e9ca 4600 	strd	r4, r6, [sl]
    b474:	9226      	str	r2, [sp, #152]	; 0x98
    b476:	9325      	str	r3, [sp, #148]	; 0x94
    b478:	f300 8689 	bgt.w	c18e <_svfprintf_r+0x17fe>
    b47c:	f10a 0a08 	add.w	sl, sl, #8
    b480:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    b482:	2e00      	cmp	r6, #0
    b484:	bfa8      	it	ge
    b486:	1bad      	subge	r5, r5, r6
    b488:	2d00      	cmp	r5, #0
    b48a:	f300 8203 	bgt.w	b894 <_svfprintf_r+0xf04>
    b48e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b490:	f418 6f80 	tst.w	r8, #1024	; 0x400
    b494:	4423      	add	r3, r4
    b496:	9305      	str	r3, [sp, #20]
    b498:	f040 821f 	bne.w	b8da <_svfprintf_r+0xf4a>
    b49c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    b49e:	990e      	ldr	r1, [sp, #56]	; 0x38
    b4a0:	428b      	cmp	r3, r1
    b4a2:	db03      	blt.n	b4ac <_svfprintf_r+0xb1c>
    b4a4:	f018 0f01 	tst.w	r8, #1
    b4a8:	f000 84cf 	beq.w	be4a <_svfprintf_r+0x14ba>
    b4ac:	9910      	ldr	r1, [sp, #64]	; 0x40
    b4ae:	9812      	ldr	r0, [sp, #72]	; 0x48
    b4b0:	440a      	add	r2, r1
    b4b2:	e9ca 0100 	strd	r0, r1, [sl]
    b4b6:	9925      	ldr	r1, [sp, #148]	; 0x94
    b4b8:	9226      	str	r2, [sp, #152]	; 0x98
    b4ba:	3101      	adds	r1, #1
    b4bc:	2907      	cmp	r1, #7
    b4be:	9125      	str	r1, [sp, #148]	; 0x94
    b4c0:	f300 86a5 	bgt.w	c20e <_svfprintf_r+0x187e>
    b4c4:	f10a 0a08 	add.w	sl, sl, #8
    b4c8:	990e      	ldr	r1, [sp, #56]	; 0x38
    b4ca:	1865      	adds	r5, r4, r1
    b4cc:	1acc      	subs	r4, r1, r3
    b4ce:	9b05      	ldr	r3, [sp, #20]
    b4d0:	1aed      	subs	r5, r5, r3
    b4d2:	42a5      	cmp	r5, r4
    b4d4:	bfa8      	it	ge
    b4d6:	4625      	movge	r5, r4
    b4d8:	2d00      	cmp	r5, #0
    b4da:	dd0d      	ble.n	b4f8 <_svfprintf_r+0xb68>
    b4dc:	f8ca 3000 	str.w	r3, [sl]
    b4e0:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b4e2:	f8ca 5004 	str.w	r5, [sl, #4]
    b4e6:	3301      	adds	r3, #1
    b4e8:	442a      	add	r2, r5
    b4ea:	2b07      	cmp	r3, #7
    b4ec:	9226      	str	r2, [sp, #152]	; 0x98
    b4ee:	9325      	str	r3, [sp, #148]	; 0x94
    b4f0:	f300 86bb 	bgt.w	c26a <_svfprintf_r+0x18da>
    b4f4:	f10a 0a08 	add.w	sl, sl, #8
    b4f8:	2d00      	cmp	r5, #0
    b4fa:	bfa8      	it	ge
    b4fc:	1b64      	subge	r4, r4, r5
    b4fe:	2c00      	cmp	r4, #0
    b500:	f77f abde 	ble.w	acc0 <_svfprintf_r+0x330>
    b504:	2c10      	cmp	r4, #16
    b506:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b508:	f340 837c 	ble.w	bc04 <_svfprintf_r+0x1274>
    b50c:	ee1b 6a10 	vmov	r6, s22
    b510:	2510      	movs	r5, #16
    b512:	e005      	b.n	b520 <_svfprintf_r+0xb90>
    b514:	f10a 0a08 	add.w	sl, sl, #8
    b518:	3c10      	subs	r4, #16
    b51a:	2c10      	cmp	r4, #16
    b51c:	f340 8372 	ble.w	bc04 <_svfprintf_r+0x1274>
    b520:	3301      	adds	r3, #1
    b522:	4970      	ldr	r1, [pc, #448]	; (b6e4 <_svfprintf_r+0xd54>)
    b524:	3210      	adds	r2, #16
    b526:	2b07      	cmp	r3, #7
    b528:	e9ca 1500 	strd	r1, r5, [sl]
    b52c:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b530:	ddf0      	ble.n	b514 <_svfprintf_r+0xb84>
    b532:	aa24      	add	r2, sp, #144	; 0x90
    b534:	4631      	mov	r1, r6
    b536:	4658      	mov	r0, fp
    b538:	f004 f86c 	bl	f614 <__ssprint_r>
    b53c:	2800      	cmp	r0, #0
    b53e:	f47f ae8c 	bne.w	b25a <_svfprintf_r+0x8ca>
    b542:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b546:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b54a:	e7e5      	b.n	b518 <_svfprintf_r+0xb88>
    b54c:	2b30      	cmp	r3, #48	; 0x30
    b54e:	f43f ad8b 	beq.w	b068 <_svfprintf_r+0x6d8>
    b552:	2330      	movs	r3, #48	; 0x30
    b554:	3802      	subs	r0, #2
    b556:	f804 3c01 	strb.w	r3, [r4, #-1]
    b55a:	ab50      	add	r3, sp, #320	; 0x140
    b55c:	1a1b      	subs	r3, r3, r0
    b55e:	f8dd 8008 	ldr.w	r8, [sp, #8]
    b562:	9305      	str	r3, [sp, #20]
    b564:	4604      	mov	r4, r0
    b566:	e584      	b.n	b072 <_svfprintf_r+0x6e2>
    b568:	f018 0f01 	tst.w	r8, #1
    b56c:	f47f ae82 	bne.w	b274 <_svfprintf_r+0x8e4>
    b570:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b572:	f8ca 4000 	str.w	r4, [sl]
    b576:	3301      	adds	r3, #1
    b578:	3201      	adds	r2, #1
    b57a:	2101      	movs	r1, #1
    b57c:	2b07      	cmp	r3, #7
    b57e:	9226      	str	r2, [sp, #152]	; 0x98
    b580:	9325      	str	r3, [sp, #148]	; 0x94
    b582:	f8ca 1004 	str.w	r1, [sl, #4]
    b586:	f77f aea5 	ble.w	b2d4 <_svfprintf_r+0x944>
    b58a:	ee1b 1a10 	vmov	r1, s22
    b58e:	aa24      	add	r2, sp, #144	; 0x90
    b590:	4658      	mov	r0, fp
    b592:	f004 f83f 	bl	f614 <__ssprint_r>
    b596:	2800      	cmp	r0, #0
    b598:	f47f ae5f 	bne.w	b25a <_svfprintf_r+0x8ca>
    b59c:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b5a0:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b5a4:	e698      	b.n	b2d8 <_svfprintf_r+0x948>
    b5a6:	990e      	ldr	r1, [sp, #56]	; 0x38
    b5a8:	1e4c      	subs	r4, r1, #1
    b5aa:	2c00      	cmp	r4, #0
    b5ac:	f77f ae94 	ble.w	b2d8 <_svfprintf_r+0x948>
    b5b0:	2c10      	cmp	r4, #16
    b5b2:	f340 8361 	ble.w	bc78 <_svfprintf_r+0x12e8>
    b5b6:	ee1b 6a10 	vmov	r6, s22
    b5ba:	2510      	movs	r5, #16
    b5bc:	e005      	b.n	b5ca <_svfprintf_r+0xc3a>
    b5be:	f10a 0a08 	add.w	sl, sl, #8
    b5c2:	3c10      	subs	r4, #16
    b5c4:	2c10      	cmp	r4, #16
    b5c6:	f340 8357 	ble.w	bc78 <_svfprintf_r+0x12e8>
    b5ca:	3301      	adds	r3, #1
    b5cc:	4945      	ldr	r1, [pc, #276]	; (b6e4 <_svfprintf_r+0xd54>)
    b5ce:	3210      	adds	r2, #16
    b5d0:	2b07      	cmp	r3, #7
    b5d2:	e9ca 1500 	strd	r1, r5, [sl]
    b5d6:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b5da:	ddf0      	ble.n	b5be <_svfprintf_r+0xc2e>
    b5dc:	aa24      	add	r2, sp, #144	; 0x90
    b5de:	4631      	mov	r1, r6
    b5e0:	4658      	mov	r0, fp
    b5e2:	f004 f817 	bl	f614 <__ssprint_r>
    b5e6:	2800      	cmp	r0, #0
    b5e8:	f47f ae37 	bne.w	b25a <_svfprintf_r+0x8ca>
    b5ec:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b5f0:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b5f4:	e7e5      	b.n	b5c2 <_svfprintf_r+0xc32>
    b5f6:	ee1b 1a10 	vmov	r1, s22
    b5fa:	aa24      	add	r2, sp, #144	; 0x90
    b5fc:	4658      	mov	r0, fp
    b5fe:	f004 f809 	bl	f614 <__ssprint_r>
    b602:	2800      	cmp	r0, #0
    b604:	f47f ae29 	bne.w	b25a <_svfprintf_r+0x8ca>
    b608:	9a26      	ldr	r2, [sp, #152]	; 0x98
    b60a:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b60e:	f7ff bb44 	b.w	ac9a <_svfprintf_r+0x30a>
    b612:	9b02      	ldr	r3, [sp, #8]
    b614:	f013 0310 	ands.w	r3, r3, #16
    b618:	f040 80c1 	bne.w	b79e <_svfprintf_r+0xe0e>
    b61c:	9a02      	ldr	r2, [sp, #8]
    b61e:	f012 0240 	ands.w	r2, r2, #64	; 0x40
    b622:	f000 837a 	beq.w	bd1a <_svfprintf_r+0x138a>
    b626:	9808      	ldr	r0, [sp, #32]
    b628:	f850 2b04 	ldr.w	r2, [r0], #4
    b62c:	9008      	str	r0, [sp, #32]
    b62e:	4619      	mov	r1, r3
    b630:	b292      	uxth	r2, r2
    b632:	2301      	movs	r3, #1
    b634:	e451      	b.n	aeda <_svfprintf_r+0x54a>
    b636:	f018 0310 	ands.w	r3, r8, #16
    b63a:	d155      	bne.n	b6e8 <_svfprintf_r+0xd58>
    b63c:	f018 0240 	ands.w	r2, r8, #64	; 0x40
    b640:	f000 835d 	beq.w	bcfe <_svfprintf_r+0x136e>
    b644:	9808      	ldr	r0, [sp, #32]
    b646:	f850 2b04 	ldr.w	r2, [r0], #4
    b64a:	9008      	str	r0, [sp, #32]
    b64c:	4619      	mov	r1, r3
    b64e:	b292      	uxth	r2, r2
    b650:	e4a8      	b.n	afa4 <_svfprintf_r+0x614>
    b652:	4252      	negs	r2, r2
    b654:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    b658:	f8cd 8008 	str.w	r8, [sp, #8]
    b65c:	202d      	movs	r0, #45	; 0x2d
    b65e:	2301      	movs	r3, #1
    b660:	e43c      	b.n	aedc <_svfprintf_r+0x54c>
    b662:	ee1b 1a10 	vmov	r1, s22
    b666:	aa24      	add	r2, sp, #144	; 0x90
    b668:	4658      	mov	r0, fp
    b66a:	f003 ffd3 	bl	f614 <__ssprint_r>
    b66e:	2800      	cmp	r0, #0
    b670:	f47f adf3 	bne.w	b25a <_svfprintf_r+0x8ca>
    b674:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b678:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b67c:	e616      	b.n	b2ac <_svfprintf_r+0x91c>
    b67e:	ee1b 1a10 	vmov	r1, s22
    b682:	aa24      	add	r2, sp, #144	; 0x90
    b684:	4658      	mov	r0, fp
    b686:	f003 ffc5 	bl	f614 <__ssprint_r>
    b68a:	2800      	cmp	r0, #0
    b68c:	f47f ade5 	bne.w	b25a <_svfprintf_r+0x8ca>
    b690:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b694:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b698:	e5fb      	b.n	b292 <_svfprintf_r+0x902>
    b69a:	f018 0f01 	tst.w	r8, #1
    b69e:	f43f ab0f 	beq.w	acc0 <_svfprintf_r+0x330>
    b6a2:	e52a      	b.n	b0fa <_svfprintf_r+0x76a>
    b6a4:	9308      	str	r3, [sp, #32]
    b6a6:	f899 3000 	ldrb.w	r3, [r9]
    b6aa:	f7ff b9cd 	b.w	aa48 <_svfprintf_r+0xb8>
    b6ae:	ac50      	add	r4, sp, #320	; 0x140
    b6b0:	e4df      	b.n	b072 <_svfprintf_r+0x6e2>
    b6b2:	f418 7f00 	tst.w	r8, #512	; 0x200
    b6b6:	f040 83db 	bne.w	be70 <_svfprintf_r+0x14e0>
    b6ba:	f853 2b04 	ldr.w	r2, [r3], #4
    b6be:	9308      	str	r3, [sp, #32]
    b6c0:	17d1      	asrs	r1, r2, #31
    b6c2:	460b      	mov	r3, r1
    b6c4:	f7ff bbb6 	b.w	ae34 <_svfprintf_r+0x4a4>
    b6c8:	9b08      	ldr	r3, [sp, #32]
    b6ca:	9804      	ldr	r0, [sp, #16]
    b6cc:	f853 1b04 	ldr.w	r1, [r3], #4
    b6d0:	9308      	str	r3, [sp, #32]
    b6d2:	17c2      	asrs	r2, r0, #31
    b6d4:	e9c1 0200 	strd	r0, r2, [r1]
    b6d8:	464c      	mov	r4, r9
    b6da:	f7ff b98b 	b.w	a9f4 <_svfprintf_r+0x64>
    b6de:	bf00      	nop
    b6e0:	20001558 	.word	0x20001558
    b6e4:	20002abc 	.word	0x20002abc
    b6e8:	9b08      	ldr	r3, [sp, #32]
    b6ea:	f853 2b04 	ldr.w	r2, [r3], #4
    b6ee:	9308      	str	r3, [sp, #32]
    b6f0:	e458      	b.n	afa4 <_svfprintf_r+0x614>
    b6f2:	eeb4 8b48 	vcmp.f64	d8, d8
    b6f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    b6fa:	f180 8694 	bvs.w	c426 <_svfprintf_r+0x1a96>
    b6fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b700:	2b61      	cmp	r3, #97	; 0x61
    b702:	f000 8552 	beq.w	c1aa <_svfprintf_r+0x181a>
    b706:	2b41      	cmp	r3, #65	; 0x41
    b708:	f000 85c0 	beq.w	c28c <_svfprintf_r+0x18fc>
    b70c:	9b03      	ldr	r3, [sp, #12]
    b70e:	3301      	adds	r3, #1
    b710:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b712:	f023 0520 	bic.w	r5, r3, #32
    b716:	f000 8480 	beq.w	c01a <_svfprintf_r+0x168a>
    b71a:	2d47      	cmp	r5, #71	; 0x47
    b71c:	d104      	bne.n	b728 <_svfprintf_r+0xd98>
    b71e:	9b03      	ldr	r3, [sp, #12]
    b720:	2b00      	cmp	r3, #0
    b722:	bf08      	it	eq
    b724:	2301      	moveq	r3, #1
    b726:	9303      	str	r3, [sp, #12]
    b728:	ee18 3a90 	vmov	r3, s17
    b72c:	2b00      	cmp	r3, #0
    b72e:	f448 7280 	orr.w	r2, r8, #256	; 0x100
    b732:	4646      	mov	r6, r8
    b734:	f2c0 8618 	blt.w	c368 <_svfprintf_r+0x19d8>
    b738:	eeb0 ab48 	vmov.f64	d10, d8
    b73c:	2300      	movs	r3, #0
    b73e:	4690      	mov	r8, r2
    b740:	9309      	str	r3, [sp, #36]	; 0x24
    b742:	9307      	str	r3, [sp, #28]
    b744:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b746:	3b41      	subs	r3, #65	; 0x41
    b748:	2b25      	cmp	r3, #37	; 0x25
    b74a:	f200 8398 	bhi.w	be7e <_svfprintf_r+0x14ee>
    b74e:	e8df f013 	tbh	[pc, r3, lsl #1]
    b752:	046f      	.short	0x046f
    b754:	03960396 	.word	0x03960396
    b758:	04680396 	.word	0x04680396
    b75c:	0396046c 	.word	0x0396046c
    b760:	03960396 	.word	0x03960396
    b764:	03960396 	.word	0x03960396
    b768:	03960396 	.word	0x03960396
    b76c:	03960396 	.word	0x03960396
    b770:	03960396 	.word	0x03960396
    b774:	03960396 	.word	0x03960396
    b778:	03960396 	.word	0x03960396
    b77c:	03960396 	.word	0x03960396
    b780:	03960396 	.word	0x03960396
    b784:	03960396 	.word	0x03960396
    b788:	03960396 	.word	0x03960396
    b78c:	03960396 	.word	0x03960396
    b790:	03960396 	.word	0x03960396
    b794:	03960396 	.word	0x03960396
    b798:	04680396 	.word	0x04680396
    b79c:	046c      	.short	0x046c
    b79e:	9b08      	ldr	r3, [sp, #32]
    b7a0:	f853 2b04 	ldr.w	r2, [r3], #4
    b7a4:	9308      	str	r3, [sp, #32]
    b7a6:	2301      	movs	r3, #1
    b7a8:	f7ff bb97 	b.w	aeda <_svfprintf_r+0x54a>
    b7ac:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    b7ae:	2b00      	cmp	r3, #0
    b7b0:	f43f a9cf 	beq.w	ab52 <_svfprintf_r+0x1c2>
    b7b4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    b7b6:	781b      	ldrb	r3, [r3, #0]
    b7b8:	2b00      	cmp	r3, #0
    b7ba:	f43f a9ca 	beq.w	ab52 <_svfprintf_r+0x1c2>
    b7be:	f899 3000 	ldrb.w	r3, [r9]
    b7c2:	f448 6880 	orr.w	r8, r8, #1024	; 0x400
    b7c6:	f7ff b93f 	b.w	aa48 <_svfprintf_r+0xb8>
    b7ca:	930b      	str	r3, [sp, #44]	; 0x2c
    b7cc:	f8cd 8008 	str.w	r8, [sp, #8]
    b7d0:	f7ff bbf1 	b.w	afb6 <_svfprintf_r+0x626>
    b7d4:	930b      	str	r3, [sp, #44]	; 0x2c
    b7d6:	4b9a      	ldr	r3, [pc, #616]	; (ba40 <_svfprintf_r+0x10b0>)
    b7d8:	9311      	str	r3, [sp, #68]	; 0x44
    b7da:	f018 0120 	ands.w	r1, r8, #32
    b7de:	f000 8105 	beq.w	b9ec <_svfprintf_r+0x105c>
    b7e2:	9b08      	ldr	r3, [sp, #32]
    b7e4:	3307      	adds	r3, #7
    b7e6:	f023 0307 	bic.w	r3, r3, #7
    b7ea:	6859      	ldr	r1, [r3, #4]
    b7ec:	f853 2b08 	ldr.w	r2, [r3], #8
    b7f0:	9308      	str	r3, [sp, #32]
    b7f2:	f018 0f01 	tst.w	r8, #1
    b7f6:	d00a      	beq.n	b80e <_svfprintf_r+0xe7e>
    b7f8:	ea52 0301 	orrs.w	r3, r2, r1
    b7fc:	d007      	beq.n	b80e <_svfprintf_r+0xe7e>
    b7fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b800:	f88d 3069 	strb.w	r3, [sp, #105]	; 0x69
    b804:	2330      	movs	r3, #48	; 0x30
    b806:	f048 0802 	orr.w	r8, r8, #2
    b80a:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
    b80e:	f428 6380 	bic.w	r3, r8, #1024	; 0x400
    b812:	9302      	str	r3, [sp, #8]
    b814:	2302      	movs	r3, #2
    b816:	f7ff bb60 	b.w	aeda <_svfprintf_r+0x54a>
    b81a:	930b      	str	r3, [sp, #44]	; 0x2c
    b81c:	f7ff bbb6 	b.w	af8c <_svfprintf_r+0x5fc>
    b820:	930b      	str	r3, [sp, #44]	; 0x2c
    b822:	4b88      	ldr	r3, [pc, #544]	; (ba44 <_svfprintf_r+0x10b4>)
    b824:	9311      	str	r3, [sp, #68]	; 0x44
    b826:	e7d8      	b.n	b7da <_svfprintf_r+0xe4a>
    b828:	9b08      	ldr	r3, [sp, #32]
    b82a:	2101      	movs	r1, #1
    b82c:	f853 2b04 	ldr.w	r2, [r3], #4
    b830:	9102      	str	r1, [sp, #8]
    b832:	f88d 20dc 	strb.w	r2, [sp, #220]	; 0xdc
    b836:	9308      	str	r3, [sp, #32]
    b838:	9105      	str	r1, [sp, #20]
    b83a:	ac37      	add	r4, sp, #220	; 0xdc
    b83c:	f7ff baaf 	b.w	ad9e <_svfprintf_r+0x40e>
    b840:	ee1b 1a10 	vmov	r1, s22
    b844:	aa24      	add	r2, sp, #144	; 0x90
    b846:	4658      	mov	r0, fp
    b848:	f003 fee4 	bl	f614 <__ssprint_r>
    b84c:	2800      	cmp	r0, #0
    b84e:	f47f ad04 	bne.w	b25a <_svfprintf_r+0x8ca>
    b852:	9a26      	ldr	r2, [sp, #152]	; 0x98
    b854:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    b858:	e45d      	b.n	b116 <_svfprintf_r+0x786>
    b85a:	9b03      	ldr	r3, [sp, #12]
    b85c:	9407      	str	r4, [sp, #28]
    b85e:	2b06      	cmp	r3, #6
    b860:	4622      	mov	r2, r4
    b862:	bf28      	it	cs
    b864:	2306      	movcs	r3, #6
    b866:	9403      	str	r4, [sp, #12]
    b868:	4621      	mov	r1, r4
    b86a:	e9cd 220c 	strd	r2, r2, [sp, #48]	; 0x30
    b86e:	4c76      	ldr	r4, [pc, #472]	; (ba48 <_svfprintf_r+0x10b8>)
    b870:	9302      	str	r3, [sp, #8]
    b872:	9305      	str	r3, [sp, #20]
    b874:	920f      	str	r2, [sp, #60]	; 0x3c
    b876:	f7ff ba6c 	b.w	ad52 <_svfprintf_r+0x3c2>
    b87a:	2140      	movs	r1, #64	; 0x40
    b87c:	4658      	mov	r0, fp
    b87e:	f000 fe39 	bl	c4f4 <_malloc_r>
    b882:	6020      	str	r0, [r4, #0]
    b884:	6120      	str	r0, [r4, #16]
    b886:	2800      	cmp	r0, #0
    b888:	f000 860f 	beq.w	c4aa <_svfprintf_r+0x1b1a>
    b88c:	2340      	movs	r3, #64	; 0x40
    b88e:	6163      	str	r3, [r4, #20]
    b890:	f7ff b89e 	b.w	a9d0 <_svfprintf_r+0x40>
    b894:	2d10      	cmp	r5, #16
    b896:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b898:	f340 825d 	ble.w	bd56 <_svfprintf_r+0x13c6>
    b89c:	4651      	mov	r1, sl
    b89e:	2610      	movs	r6, #16
    b8a0:	ee1b aa10 	vmov	sl, s22
    b8a4:	e004      	b.n	b8b0 <_svfprintf_r+0xf20>
    b8a6:	3108      	adds	r1, #8
    b8a8:	3d10      	subs	r5, #16
    b8aa:	2d10      	cmp	r5, #16
    b8ac:	f340 8252 	ble.w	bd54 <_svfprintf_r+0x13c4>
    b8b0:	3301      	adds	r3, #1
    b8b2:	4866      	ldr	r0, [pc, #408]	; (ba4c <_svfprintf_r+0x10bc>)
    b8b4:	3210      	adds	r2, #16
    b8b6:	2b07      	cmp	r3, #7
    b8b8:	e9c1 0600 	strd	r0, r6, [r1]
    b8bc:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b8c0:	ddf1      	ble.n	b8a6 <_svfprintf_r+0xf16>
    b8c2:	aa24      	add	r2, sp, #144	; 0x90
    b8c4:	4651      	mov	r1, sl
    b8c6:	4658      	mov	r0, fp
    b8c8:	f003 fea4 	bl	f614 <__ssprint_r>
    b8cc:	2800      	cmp	r0, #0
    b8ce:	f47f acc4 	bne.w	b25a <_svfprintf_r+0x8ca>
    b8d2:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b8d6:	a927      	add	r1, sp, #156	; 0x9c
    b8d8:	e7e6      	b.n	b8a8 <_svfprintf_r+0xf18>
    b8da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b8dc:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
    b8e0:	18e3      	adds	r3, r4, r3
    b8e2:	9303      	str	r3, [sp, #12]
    b8e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b8e6:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
    b8ea:	9e13      	ldr	r6, [sp, #76]	; 0x4c
    b8ec:	9d05      	ldr	r5, [sp, #20]
    b8ee:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
    b8f2:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
    b8f6:	940b      	str	r4, [sp, #44]	; 0x2c
    b8f8:	ee1b 1a10 	vmov	r1, s22
    b8fc:	4650      	mov	r0, sl
    b8fe:	2b00      	cmp	r3, #0
    b900:	d034      	beq.n	b96c <_svfprintf_r+0xfdc>
    b902:	f1b8 0f00 	cmp.w	r8, #0
    b906:	d135      	bne.n	b974 <_svfprintf_r+0xfe4>
    b908:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b90a:	3b01      	subs	r3, #1
    b90c:	3e01      	subs	r6, #1
    b90e:	930d      	str	r3, [sp, #52]	; 0x34
    b910:	9b15      	ldr	r3, [sp, #84]	; 0x54
    b912:	e9c0 3900 	strd	r3, r9, [r0]
    b916:	9b25      	ldr	r3, [sp, #148]	; 0x94
    b918:	3301      	adds	r3, #1
    b91a:	444a      	add	r2, r9
    b91c:	2b07      	cmp	r3, #7
    b91e:	9226      	str	r2, [sp, #152]	; 0x98
    b920:	9325      	str	r3, [sp, #148]	; 0x94
    b922:	dc6c      	bgt.n	b9fe <_svfprintf_r+0x106e>
    b924:	3008      	adds	r0, #8
    b926:	9b03      	ldr	r3, [sp, #12]
    b928:	f896 c000 	ldrb.w	ip, [r6]
    b92c:	1b5b      	subs	r3, r3, r5
    b92e:	4563      	cmp	r3, ip
    b930:	bfa8      	it	ge
    b932:	4663      	movge	r3, ip
    b934:	2b00      	cmp	r3, #0
    b936:	469a      	mov	sl, r3
    b938:	dd0c      	ble.n	b954 <_svfprintf_r+0xfc4>
    b93a:	9c25      	ldr	r4, [sp, #148]	; 0x94
    b93c:	3401      	adds	r4, #1
    b93e:	441a      	add	r2, r3
    b940:	2c07      	cmp	r4, #7
    b942:	e9c0 5300 	strd	r5, r3, [r0]
    b946:	9226      	str	r2, [sp, #152]	; 0x98
    b948:	9425      	str	r4, [sp, #148]	; 0x94
    b94a:	f300 8177 	bgt.w	bc3c <_svfprintf_r+0x12ac>
    b94e:	f896 c000 	ldrb.w	ip, [r6]
    b952:	3008      	adds	r0, #8
    b954:	f1ba 0f00 	cmp.w	sl, #0
    b958:	bfac      	ite	ge
    b95a:	ebac 040a 	subge.w	r4, ip, sl
    b95e:	4664      	movlt	r4, ip
    b960:	2c00      	cmp	r4, #0
    b962:	dc0a      	bgt.n	b97a <_svfprintf_r+0xfea>
    b964:	4465      	add	r5, ip
    b966:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b968:	2b00      	cmp	r3, #0
    b96a:	d1ca      	bne.n	b902 <_svfprintf_r+0xf72>
    b96c:	f1b8 0f00 	cmp.w	r8, #0
    b970:	f000 83ac 	beq.w	c0cc <_svfprintf_r+0x173c>
    b974:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
    b978:	e7ca      	b.n	b910 <_svfprintf_r+0xf80>
    b97a:	2c10      	cmp	r4, #16
    b97c:	f8dd c094 	ldr.w	ip, [sp, #148]	; 0x94
    b980:	dd24      	ble.n	b9cc <_svfprintf_r+0x103c>
    b982:	9505      	str	r5, [sp, #20]
    b984:	f04f 0a10 	mov.w	sl, #16
    b988:	4663      	mov	r3, ip
    b98a:	460d      	mov	r5, r1
    b98c:	e004      	b.n	b998 <_svfprintf_r+0x1008>
    b98e:	3c10      	subs	r4, #16
    b990:	2c10      	cmp	r4, #16
    b992:	f100 0008 	add.w	r0, r0, #8
    b996:	dd16      	ble.n	b9c6 <_svfprintf_r+0x1036>
    b998:	3301      	adds	r3, #1
    b99a:	492c      	ldr	r1, [pc, #176]	; (ba4c <_svfprintf_r+0x10bc>)
    b99c:	3210      	adds	r2, #16
    b99e:	2b07      	cmp	r3, #7
    b9a0:	e9c0 1a00 	strd	r1, sl, [r0]
    b9a4:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b9a8:	ddf1      	ble.n	b98e <_svfprintf_r+0xffe>
    b9aa:	aa24      	add	r2, sp, #144	; 0x90
    b9ac:	4629      	mov	r1, r5
    b9ae:	4658      	mov	r0, fp
    b9b0:	f003 fe30 	bl	f614 <__ssprint_r>
    b9b4:	2800      	cmp	r0, #0
    b9b6:	f47f ac50 	bne.w	b25a <_svfprintf_r+0x8ca>
    b9ba:	3c10      	subs	r4, #16
    b9bc:	2c10      	cmp	r4, #16
    b9be:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    b9c2:	a827      	add	r0, sp, #156	; 0x9c
    b9c4:	dce8      	bgt.n	b998 <_svfprintf_r+0x1008>
    b9c6:	4629      	mov	r1, r5
    b9c8:	9d05      	ldr	r5, [sp, #20]
    b9ca:	469c      	mov	ip, r3
    b9cc:	f10c 0301 	add.w	r3, ip, #1
    b9d0:	4422      	add	r2, r4
    b9d2:	6044      	str	r4, [r0, #4]
    b9d4:	2b07      	cmp	r3, #7
    b9d6:	4c1d      	ldr	r4, [pc, #116]	; (ba4c <_svfprintf_r+0x10bc>)
    b9d8:	6004      	str	r4, [r0, #0]
    b9da:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    b9de:	f300 83c6 	bgt.w	c16e <_svfprintf_r+0x17de>
    b9e2:	f896 c000 	ldrb.w	ip, [r6]
    b9e6:	3008      	adds	r0, #8
    b9e8:	4465      	add	r5, ip
    b9ea:	e7bc      	b.n	b966 <_svfprintf_r+0xfd6>
    b9ec:	f018 0310 	ands.w	r3, r8, #16
    b9f0:	f000 80c2 	beq.w	bb78 <_svfprintf_r+0x11e8>
    b9f4:	9b08      	ldr	r3, [sp, #32]
    b9f6:	f853 2b04 	ldr.w	r2, [r3], #4
    b9fa:	9308      	str	r3, [sp, #32]
    b9fc:	e6f9      	b.n	b7f2 <_svfprintf_r+0xe62>
    b9fe:	aa24      	add	r2, sp, #144	; 0x90
    ba00:	4658      	mov	r0, fp
    ba02:	9105      	str	r1, [sp, #20]
    ba04:	f003 fe06 	bl	f614 <__ssprint_r>
    ba08:	2800      	cmp	r0, #0
    ba0a:	f47f ac26 	bne.w	b25a <_svfprintf_r+0x8ca>
    ba0e:	9a26      	ldr	r2, [sp, #152]	; 0x98
    ba10:	9905      	ldr	r1, [sp, #20]
    ba12:	a827      	add	r0, sp, #156	; 0x9c
    ba14:	e787      	b.n	b926 <_svfprintf_r+0xf96>
    ba16:	9802      	ldr	r0, [sp, #8]
    ba18:	f8cd a01c 	str.w	sl, [sp, #28]
    ba1c:	ac50      	add	r4, sp, #320	; 0x140
    ba1e:	f400 6080 	and.w	r0, r0, #1024	; 0x400
    ba22:	2500      	movs	r5, #0
    ba24:	ee0a ba10 	vmov	s20, fp
    ba28:	4b09      	ldr	r3, [pc, #36]	; (ba50 <_svfprintf_r+0x10c0>)
    ba2a:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
    ba2e:	f8cd 9014 	str.w	r9, [sp, #20]
    ba32:	46a3      	mov	fp, r4
    ba34:	f04f 0805 	mov.w	r8, #5
    ba38:	46ac      	mov	ip, r5
    ba3a:	4604      	mov	r4, r0
    ba3c:	e010      	b.n	ba60 <_svfprintf_r+0x10d0>
    ba3e:	bf00      	nop
    ba40:	20001524 	.word	0x20001524
    ba44:	20001538 	.word	0x20001538
    ba48:	2000154c 	.word	0x2000154c
    ba4c:	20002abc 	.word	0x20002abc
    ba50:	cccccccd 	.word	0xcccccccd
    ba54:	2a0a      	cmp	r2, #10
    ba56:	f171 0100 	sbcs.w	r1, r1, #0
    ba5a:	d336      	bcc.n	baca <_svfprintf_r+0x113a>
    ba5c:	464a      	mov	r2, r9
    ba5e:	4631      	mov	r1, r6
    ba60:	1850      	adds	r0, r2, r1
    ba62:	f140 0000 	adc.w	r0, r0, #0
    ba66:	fba3 5600 	umull	r5, r6, r3, r0
    ba6a:	f026 0503 	bic.w	r5, r6, #3
    ba6e:	eb05 0596 	add.w	r5, r5, r6, lsr #2
    ba72:	1b40      	subs	r0, r0, r5
    ba74:	1a15      	subs	r5, r2, r0
    ba76:	f04f 36cc 	mov.w	r6, #3435973836	; 0xcccccccc
    ba7a:	f161 0e00 	sbc.w	lr, r1, #0
    ba7e:	fb06 f605 	mul.w	r6, r6, r5
    ba82:	fba5 9503 	umull	r9, r5, r5, r3
    ba86:	fb03 660e 	mla	r6, r3, lr, r6
    ba8a:	f009 0e01 	and.w	lr, r9, #1
    ba8e:	442e      	add	r6, r5
    ba90:	fbae 5e08 	umull	r5, lr, lr, r8
    ba94:	182d      	adds	r5, r5, r0
    ba96:	ea4f 0959 	mov.w	r9, r9, lsr #1
    ba9a:	3530      	adds	r5, #48	; 0x30
    ba9c:	f80b 5c01 	strb.w	r5, [fp, #-1]
    baa0:	ea49 79c6 	orr.w	r9, r9, r6, lsl #31
    baa4:	f10c 0c01 	add.w	ip, ip, #1
    baa8:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
    baac:	0876      	lsrs	r6, r6, #1
    baae:	2c00      	cmp	r4, #0
    bab0:	d0d0      	beq.n	ba54 <_svfprintf_r+0x10c4>
    bab2:	f89a 0000 	ldrb.w	r0, [sl]
    bab6:	4584      	cmp	ip, r0
    bab8:	d1cc      	bne.n	ba54 <_svfprintf_r+0x10c4>
    baba:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
    babe:	d0c9      	beq.n	ba54 <_svfprintf_r+0x10c4>
    bac0:	2a0a      	cmp	r2, #10
    bac2:	f171 0100 	sbcs.w	r1, r1, #0
    bac6:	f080 818f 	bcs.w	bde8 <_svfprintf_r+0x1458>
    baca:	465c      	mov	r4, fp
    bacc:	ab50      	add	r3, sp, #320	; 0x140
    bace:	1b1b      	subs	r3, r3, r4
    bad0:	f8dd 9014 	ldr.w	r9, [sp, #20]
    bad4:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
    bad8:	ee1a ba10 	vmov	fp, s20
    badc:	f8dd a01c 	ldr.w	sl, [sp, #28]
    bae0:	f8dd 8008 	ldr.w	r8, [sp, #8]
    bae4:	f8cd c038 	str.w	ip, [sp, #56]	; 0x38
    bae8:	9305      	str	r3, [sp, #20]
    baea:	f7ff bac2 	b.w	b072 <_svfprintf_r+0x6e2>
    baee:	ee1b 1a10 	vmov	r1, s22
    baf2:	aa24      	add	r2, sp, #144	; 0x90
    baf4:	4658      	mov	r0, fp
    baf6:	f003 fd8d 	bl	f614 <__ssprint_r>
    bafa:	2800      	cmp	r0, #0
    bafc:	f47f abad 	bne.w	b25a <_svfprintf_r+0x8ca>
    bb00:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    bb04:	9a26      	ldr	r2, [sp, #152]	; 0x98
    bb06:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    bb0a:	f7ff b896 	b.w	ac3a <_svfprintf_r+0x2aa>
    bb0e:	9b25      	ldr	r3, [sp, #148]	; 0x94
    bb10:	48be      	ldr	r0, [pc, #760]	; (be0c <_svfprintf_r+0x147c>)
    bb12:	f8ca 0000 	str.w	r0, [sl]
    bb16:	3301      	adds	r3, #1
    bb18:	3201      	adds	r2, #1
    bb1a:	2001      	movs	r0, #1
    bb1c:	2b07      	cmp	r3, #7
    bb1e:	9226      	str	r2, [sp, #152]	; 0x98
    bb20:	9325      	str	r3, [sp, #148]	; 0x94
    bb22:	f8ca 0004 	str.w	r0, [sl, #4]
    bb26:	f300 8177 	bgt.w	be18 <_svfprintf_r+0x1488>
    bb2a:	f10a 0a08 	add.w	sl, sl, #8
    bb2e:	2900      	cmp	r1, #0
    bb30:	f040 80af 	bne.w	bc92 <_svfprintf_r+0x1302>
    bb34:	990e      	ldr	r1, [sp, #56]	; 0x38
    bb36:	f008 0301 	and.w	r3, r8, #1
    bb3a:	430b      	orrs	r3, r1
    bb3c:	f43f a8c0 	beq.w	acc0 <_svfprintf_r+0x330>
    bb40:	9b10      	ldr	r3, [sp, #64]	; 0x40
    bb42:	9912      	ldr	r1, [sp, #72]	; 0x48
    bb44:	441a      	add	r2, r3
    bb46:	e9ca 1300 	strd	r1, r3, [sl]
    bb4a:	9b25      	ldr	r3, [sp, #148]	; 0x94
    bb4c:	9226      	str	r2, [sp, #152]	; 0x98
    bb4e:	3301      	adds	r3, #1
    bb50:	2b07      	cmp	r3, #7
    bb52:	9325      	str	r3, [sp, #148]	; 0x94
    bb54:	f300 8252 	bgt.w	bffc <_svfprintf_r+0x166c>
    bb58:	f10a 0a08 	add.w	sl, sl, #8
    bb5c:	990e      	ldr	r1, [sp, #56]	; 0x38
    bb5e:	f8ca 4000 	str.w	r4, [sl]
    bb62:	3301      	adds	r3, #1
    bb64:	440a      	add	r2, r1
    bb66:	2b07      	cmp	r3, #7
    bb68:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    bb6c:	f8ca 1004 	str.w	r1, [sl, #4]
    bb70:	f77f a8a4 	ble.w	acbc <_svfprintf_r+0x32c>
    bb74:	f7ff bbbd 	b.w	b2f2 <_svfprintf_r+0x962>
    bb78:	f018 0240 	ands.w	r2, r8, #64	; 0x40
    bb7c:	f000 80dd 	beq.w	bd3a <_svfprintf_r+0x13aa>
    bb80:	9808      	ldr	r0, [sp, #32]
    bb82:	f850 2b04 	ldr.w	r2, [r0], #4
    bb86:	9008      	str	r0, [sp, #32]
    bb88:	4619      	mov	r1, r3
    bb8a:	b292      	uxth	r2, r2
    bb8c:	e631      	b.n	b7f2 <_svfprintf_r+0xe62>
    bb8e:	ee1b 1a10 	vmov	r1, s22
    bb92:	aa24      	add	r2, sp, #144	; 0x90
    bb94:	4658      	mov	r0, fp
    bb96:	f003 fd3d 	bl	f614 <__ssprint_r>
    bb9a:	2800      	cmp	r0, #0
    bb9c:	f47f ab5d 	bne.w	b25a <_svfprintf_r+0x8ca>
    bba0:	9a26      	ldr	r2, [sp, #152]	; 0x98
    bba2:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    bba6:	f7ff baa3 	b.w	b0f0 <_svfprintf_r+0x760>
    bbaa:	ae22      	add	r6, sp, #136	; 0x88
    bbac:	2208      	movs	r2, #8
    bbae:	2100      	movs	r1, #0
    bbb0:	4630      	mov	r0, r6
    bbb2:	941d      	str	r4, [sp, #116]	; 0x74
    bbb4:	f001 f81a 	bl	cbec <memset>
    bbb8:	9b03      	ldr	r3, [sp, #12]
    bbba:	1c5a      	adds	r2, r3, #1
    bbbc:	f000 80db 	beq.w	bd76 <_svfprintf_r+0x13e6>
    bbc0:	2500      	movs	r5, #0
    bbc2:	f8cd 9008 	str.w	r9, [sp, #8]
    bbc6:	f8cd 801c 	str.w	r8, [sp, #28]
    bbca:	4699      	mov	r9, r3
    bbcc:	46a8      	mov	r8, r5
    bbce:	e00c      	b.n	bbea <_svfprintf_r+0x125a>
    bbd0:	a937      	add	r1, sp, #220	; 0xdc
    bbd2:	4658      	mov	r0, fp
    bbd4:	f001 f862 	bl	cc9c <_wcrtomb_r>
    bbd8:	1c43      	adds	r3, r0, #1
    bbda:	4440      	add	r0, r8
    bbdc:	f000 83c8 	beq.w	c370 <_svfprintf_r+0x19e0>
    bbe0:	4548      	cmp	r0, r9
    bbe2:	dc08      	bgt.n	bbf6 <_svfprintf_r+0x1266>
    bbe4:	f000 8418 	beq.w	c418 <_svfprintf_r+0x1a88>
    bbe8:	4680      	mov	r8, r0
    bbea:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    bbec:	5952      	ldr	r2, [r2, r5]
    bbee:	4633      	mov	r3, r6
    bbf0:	3504      	adds	r5, #4
    bbf2:	2a00      	cmp	r2, #0
    bbf4:	d1ec      	bne.n	bbd0 <_svfprintf_r+0x1240>
    bbf6:	f8cd 8014 	str.w	r8, [sp, #20]
    bbfa:	f8dd 9008 	ldr.w	r9, [sp, #8]
    bbfe:	f8dd 801c 	ldr.w	r8, [sp, #28]
    bc02:	e0c5      	b.n	bd90 <_svfprintf_r+0x1400>
    bc04:	3301      	adds	r3, #1
    bc06:	4982      	ldr	r1, [pc, #520]	; (be10 <_svfprintf_r+0x1480>)
    bc08:	f8ca 4004 	str.w	r4, [sl, #4]
    bc0c:	4422      	add	r2, r4
    bc0e:	2b07      	cmp	r3, #7
    bc10:	f8ca 1000 	str.w	r1, [sl]
    bc14:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    bc18:	f77f a850 	ble.w	acbc <_svfprintf_r+0x32c>
    bc1c:	f7ff bb69 	b.w	b2f2 <_svfprintf_r+0x962>
    bc20:	ee1b 1a10 	vmov	r1, s22
    bc24:	aa24      	add	r2, sp, #144	; 0x90
    bc26:	4658      	mov	r0, fp
    bc28:	f003 fcf4 	bl	f614 <__ssprint_r>
    bc2c:	2800      	cmp	r0, #0
    bc2e:	f47f ab14 	bne.w	b25a <_svfprintf_r+0x8ca>
    bc32:	9a26      	ldr	r2, [sp, #152]	; 0x98
    bc34:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    bc38:	f7ff b829 	b.w	ac8e <_svfprintf_r+0x2fe>
    bc3c:	aa24      	add	r2, sp, #144	; 0x90
    bc3e:	4658      	mov	r0, fp
    bc40:	9105      	str	r1, [sp, #20]
    bc42:	f003 fce7 	bl	f614 <__ssprint_r>
    bc46:	2800      	cmp	r0, #0
    bc48:	f47f ab07 	bne.w	b25a <_svfprintf_r+0x8ca>
    bc4c:	f896 c000 	ldrb.w	ip, [r6]
    bc50:	9a26      	ldr	r2, [sp, #152]	; 0x98
    bc52:	9905      	ldr	r1, [sp, #20]
    bc54:	a827      	add	r0, sp, #156	; 0x9c
    bc56:	e67d      	b.n	b954 <_svfprintf_r+0xfc4>
    bc58:	2b01      	cmp	r3, #1
    bc5a:	f8cd 8008 	str.w	r8, [sp, #8]
    bc5e:	f47f a9f3 	bne.w	b048 <_svfprintf_r+0x6b8>
    bc62:	f7ff bb93 	b.w	b38c <_svfprintf_r+0x9fc>
    bc66:	9b08      	ldr	r3, [sp, #32]
    bc68:	9904      	ldr	r1, [sp, #16]
    bc6a:	f853 2b04 	ldr.w	r2, [r3], #4
    bc6e:	464c      	mov	r4, r9
    bc70:	6011      	str	r1, [r2, #0]
    bc72:	9308      	str	r3, [sp, #32]
    bc74:	f7fe bebe 	b.w	a9f4 <_svfprintf_r+0x64>
    bc78:	3301      	adds	r3, #1
    bc7a:	4965      	ldr	r1, [pc, #404]	; (be10 <_svfprintf_r+0x1480>)
    bc7c:	f8ca 4004 	str.w	r4, [sl, #4]
    bc80:	4422      	add	r2, r4
    bc82:	2b07      	cmp	r3, #7
    bc84:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    bc88:	f8ca 1000 	str.w	r1, [sl]
    bc8c:	f77f ab22 	ble.w	b2d4 <_svfprintf_r+0x944>
    bc90:	e47b      	b.n	b58a <_svfprintf_r+0xbfa>
    bc92:	9b10      	ldr	r3, [sp, #64]	; 0x40
    bc94:	9812      	ldr	r0, [sp, #72]	; 0x48
    bc96:	441a      	add	r2, r3
    bc98:	e9ca 0300 	strd	r0, r3, [sl]
    bc9c:	9b25      	ldr	r3, [sp, #148]	; 0x94
    bc9e:	9226      	str	r2, [sp, #152]	; 0x98
    bca0:	3301      	adds	r3, #1
    bca2:	2b07      	cmp	r3, #7
    bca4:	9325      	str	r3, [sp, #148]	; 0x94
    bca6:	f300 81a9 	bgt.w	bffc <_svfprintf_r+0x166c>
    bcaa:	f10a 0a08 	add.w	sl, sl, #8
    bcae:	2900      	cmp	r1, #0
    bcb0:	f6bf af54 	bge.w	bb5c <_svfprintf_r+0x11cc>
    bcb4:	424d      	negs	r5, r1
    bcb6:	3110      	adds	r1, #16
    bcb8:	f280 830f 	bge.w	c2da <_svfprintf_r+0x194a>
    bcbc:	ee1b 1a10 	vmov	r1, s22
    bcc0:	2610      	movs	r6, #16
    bcc2:	e005      	b.n	bcd0 <_svfprintf_r+0x1340>
    bcc4:	f10a 0a08 	add.w	sl, sl, #8
    bcc8:	3d10      	subs	r5, #16
    bcca:	2d10      	cmp	r5, #16
    bccc:	f340 8305 	ble.w	c2da <_svfprintf_r+0x194a>
    bcd0:	3301      	adds	r3, #1
    bcd2:	484f      	ldr	r0, [pc, #316]	; (be10 <_svfprintf_r+0x1480>)
    bcd4:	3210      	adds	r2, #16
    bcd6:	2b07      	cmp	r3, #7
    bcd8:	e9ca 0600 	strd	r0, r6, [sl]
    bcdc:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    bce0:	ddf0      	ble.n	bcc4 <_svfprintf_r+0x1334>
    bce2:	aa24      	add	r2, sp, #144	; 0x90
    bce4:	4658      	mov	r0, fp
    bce6:	9103      	str	r1, [sp, #12]
    bce8:	f003 fc94 	bl	f614 <__ssprint_r>
    bcec:	2800      	cmp	r0, #0
    bcee:	f47f aab4 	bne.w	b25a <_svfprintf_r+0x8ca>
    bcf2:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    bcf6:	9903      	ldr	r1, [sp, #12]
    bcf8:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    bcfc:	e7e4      	b.n	bcc8 <_svfprintf_r+0x1338>
    bcfe:	9b08      	ldr	r3, [sp, #32]
    bd00:	f418 7100 	ands.w	r1, r8, #512	; 0x200
    bd04:	bf1a      	itte	ne
    bd06:	4611      	movne	r1, r2
    bd08:	f853 2b04 	ldrne.w	r2, [r3], #4
    bd0c:	f853 2b04 	ldreq.w	r2, [r3], #4
    bd10:	9308      	str	r3, [sp, #32]
    bd12:	bf18      	it	ne
    bd14:	b2d2      	uxtbne	r2, r2
    bd16:	f7ff b945 	b.w	afa4 <_svfprintf_r+0x614>
    bd1a:	9b02      	ldr	r3, [sp, #8]
    bd1c:	f413 7100 	ands.w	r1, r3, #512	; 0x200
    bd20:	9b08      	ldr	r3, [sp, #32]
    bd22:	bf1a      	itte	ne
    bd24:	4611      	movne	r1, r2
    bd26:	f853 2b04 	ldrne.w	r2, [r3], #4
    bd2a:	f853 2b04 	ldreq.w	r2, [r3], #4
    bd2e:	9308      	str	r3, [sp, #32]
    bd30:	bf18      	it	ne
    bd32:	b2d2      	uxtbne	r2, r2
    bd34:	2301      	movs	r3, #1
    bd36:	f7ff b8d0 	b.w	aeda <_svfprintf_r+0x54a>
    bd3a:	9b08      	ldr	r3, [sp, #32]
    bd3c:	f418 7100 	ands.w	r1, r8, #512	; 0x200
    bd40:	bf1a      	itte	ne
    bd42:	4611      	movne	r1, r2
    bd44:	f853 2b04 	ldrne.w	r2, [r3], #4
    bd48:	f853 2b04 	ldreq.w	r2, [r3], #4
    bd4c:	9308      	str	r3, [sp, #32]
    bd4e:	bf18      	it	ne
    bd50:	b2d2      	uxtbne	r2, r2
    bd52:	e54e      	b.n	b7f2 <_svfprintf_r+0xe62>
    bd54:	468a      	mov	sl, r1
    bd56:	3301      	adds	r3, #1
    bd58:	492d      	ldr	r1, [pc, #180]	; (be10 <_svfprintf_r+0x1480>)
    bd5a:	f8ca 5004 	str.w	r5, [sl, #4]
    bd5e:	442a      	add	r2, r5
    bd60:	2b07      	cmp	r3, #7
    bd62:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    bd66:	f8ca 1000 	str.w	r1, [sl]
    bd6a:	f300 8139 	bgt.w	bfe0 <_svfprintf_r+0x1650>
    bd6e:	f10a 0a08 	add.w	sl, sl, #8
    bd72:	f7ff bb8c 	b.w	b48e <_svfprintf_r+0xafe>
    bd76:	2300      	movs	r3, #0
    bd78:	4619      	mov	r1, r3
    bd7a:	9600      	str	r6, [sp, #0]
    bd7c:	aa1d      	add	r2, sp, #116	; 0x74
    bd7e:	4658      	mov	r0, fp
    bd80:	f001 fe7a 	bl	da78 <_wcsrtombs_r>
    bd84:	4603      	mov	r3, r0
    bd86:	3301      	adds	r3, #1
    bd88:	9005      	str	r0, [sp, #20]
    bd8a:	f000 82f1 	beq.w	c370 <_svfprintf_r+0x19e0>
    bd8e:	941d      	str	r4, [sp, #116]	; 0x74
    bd90:	9b05      	ldr	r3, [sp, #20]
    bd92:	2b00      	cmp	r3, #0
    bd94:	d04e      	beq.n	be34 <_svfprintf_r+0x14a4>
    bd96:	2b63      	cmp	r3, #99	; 0x63
    bd98:	f300 8118 	bgt.w	bfcc <_svfprintf_r+0x163c>
    bd9c:	2300      	movs	r3, #0
    bd9e:	9307      	str	r3, [sp, #28]
    bda0:	ac37      	add	r4, sp, #220	; 0xdc
    bda2:	2208      	movs	r2, #8
    bda4:	2100      	movs	r1, #0
    bda6:	4630      	mov	r0, r6
    bda8:	f000 ff20 	bl	cbec <memset>
    bdac:	9d05      	ldr	r5, [sp, #20]
    bdae:	9600      	str	r6, [sp, #0]
    bdb0:	462b      	mov	r3, r5
    bdb2:	aa1d      	add	r2, sp, #116	; 0x74
    bdb4:	4621      	mov	r1, r4
    bdb6:	4658      	mov	r0, fp
    bdb8:	f001 fe5e 	bl	da78 <_wcsrtombs_r>
    bdbc:	4285      	cmp	r5, r0
    bdbe:	f040 837c 	bne.w	c4ba <_svfprintf_r+0x1b2a>
    bdc2:	9a05      	ldr	r2, [sp, #20]
    bdc4:	2300      	movs	r3, #0
    bdc6:	54a3      	strb	r3, [r4, r2]
    bdc8:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
    bdcc:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
    bdd0:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    bdd4:	9303      	str	r3, [sp, #12]
    bdd6:	9202      	str	r2, [sp, #8]
    bdd8:	930f      	str	r3, [sp, #60]	; 0x3c
    bdda:	f7fe bfba 	b.w	ad52 <_svfprintf_r+0x3c2>
    bdde:	212d      	movs	r1, #45	; 0x2d
    bde0:	f88d 1067 	strb.w	r1, [sp, #103]	; 0x67
    bde4:	f7fe bfa4 	b.w	ad30 <_svfprintf_r+0x3a0>
    bde8:	9b16      	ldr	r3, [sp, #88]	; 0x58
    bdea:	9915      	ldr	r1, [sp, #84]	; 0x54
    bdec:	ebab 0b03 	sub.w	fp, fp, r3
    bdf0:	461a      	mov	r2, r3
    bdf2:	4658      	mov	r0, fp
    bdf4:	f7fe fb12 	bl	a41c <strncpy>
    bdf8:	f89a 2001 	ldrb.w	r2, [sl, #1]
    bdfc:	4b05      	ldr	r3, [pc, #20]	; (be14 <_svfprintf_r+0x1484>)
    bdfe:	b10a      	cbz	r2, be04 <_svfprintf_r+0x1474>
    be00:	f10a 0a01 	add.w	sl, sl, #1
    be04:	f04f 0c00 	mov.w	ip, #0
    be08:	e628      	b.n	ba5c <_svfprintf_r+0x10cc>
    be0a:	bf00      	nop
    be0c:	20001554 	.word	0x20001554
    be10:	20002abc 	.word	0x20002abc
    be14:	cccccccd 	.word	0xcccccccd
    be18:	ee1b 1a10 	vmov	r1, s22
    be1c:	aa24      	add	r2, sp, #144	; 0x90
    be1e:	4658      	mov	r0, fp
    be20:	f003 fbf8 	bl	f614 <__ssprint_r>
    be24:	2800      	cmp	r0, #0
    be26:	f47f aa18 	bne.w	b25a <_svfprintf_r+0x8ca>
    be2a:	991b      	ldr	r1, [sp, #108]	; 0x6c
    be2c:	9a26      	ldr	r2, [sp, #152]	; 0x98
    be2e:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    be32:	e67c      	b.n	bb2e <_svfprintf_r+0x119e>
    be34:	9b05      	ldr	r3, [sp, #20]
    be36:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    be3a:	930f      	str	r3, [sp, #60]	; 0x3c
    be3c:	e9cd 3302 	strd	r3, r3, [sp, #8]
    be40:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
    be44:	9307      	str	r3, [sp, #28]
    be46:	f7fe bf84 	b.w	ad52 <_svfprintf_r+0x3c2>
    be4a:	990e      	ldr	r1, [sp, #56]	; 0x38
    be4c:	9805      	ldr	r0, [sp, #20]
    be4e:	1865      	adds	r5, r4, r1
    be50:	1a2d      	subs	r5, r5, r0
    be52:	1acc      	subs	r4, r1, r3
    be54:	42a5      	cmp	r5, r4
    be56:	bfa8      	it	ge
    be58:	4625      	movge	r5, r4
    be5a:	f7ff bb4d 	b.w	b4f8 <_svfprintf_r+0xb68>
    be5e:	9b08      	ldr	r3, [sp, #32]
    be60:	9904      	ldr	r1, [sp, #16]
    be62:	f853 2b04 	ldr.w	r2, [r3], #4
    be66:	9308      	str	r3, [sp, #32]
    be68:	8011      	strh	r1, [r2, #0]
    be6a:	464c      	mov	r4, r9
    be6c:	f7fe bdc2 	b.w	a9f4 <_svfprintf_r+0x64>
    be70:	f913 2b04 	ldrsb.w	r2, [r3], #4
    be74:	9308      	str	r3, [sp, #32]
    be76:	17d1      	asrs	r1, r2, #31
    be78:	460b      	mov	r3, r1
    be7a:	f7fe bfdb 	b.w	ae34 <_svfprintf_r+0x4a4>
    be7e:	9a03      	ldr	r2, [sp, #12]
    be80:	2102      	movs	r1, #2
    be82:	ab22      	add	r3, sp, #136	; 0x88
    be84:	9301      	str	r3, [sp, #4]
    be86:	ab1d      	add	r3, sp, #116	; 0x74
    be88:	9300      	str	r3, [sp, #0]
    be8a:	4658      	mov	r0, fp
    be8c:	ab1b      	add	r3, sp, #108	; 0x6c
    be8e:	eeb0 0b4a 	vmov.f64	d0, d10
    be92:	9202      	str	r2, [sp, #8]
    be94:	f001 fe90 	bl	dbb8 <_dtoa_r>
    be98:	2d47      	cmp	r5, #71	; 0x47
    be9a:	9a02      	ldr	r2, [sp, #8]
    be9c:	4604      	mov	r4, r0
    be9e:	f000 8161 	beq.w	c164 <_svfprintf_r+0x17d4>
    bea2:	2d46      	cmp	r5, #70	; 0x46
    bea4:	4410      	add	r0, r2
    bea6:	d105      	bne.n	beb4 <_svfprintf_r+0x1524>
    bea8:	7823      	ldrb	r3, [r4, #0]
    beaa:	2b30      	cmp	r3, #48	; 0x30
    beac:	f000 826f 	beq.w	c38e <_svfprintf_r+0x19fe>
    beb0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    beb2:	4410      	add	r0, r2
    beb4:	eeb5 ab40 	vcmp.f64	d10, #0.0
    beb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    bebc:	f040 8146 	bne.w	c14c <_svfprintf_r+0x17bc>
    bec0:	4603      	mov	r3, r0
    bec2:	1b1b      	subs	r3, r3, r4
    bec4:	930e      	str	r3, [sp, #56]	; 0x38
    bec6:	2d47      	cmp	r5, #71	; 0x47
    bec8:	f000 8110 	beq.w	c0ec <_svfprintf_r+0x175c>
    becc:	2d46      	cmp	r5, #70	; 0x46
    bece:	f000 81b5 	beq.w	c23c <_svfprintf_r+0x18ac>
    bed2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    bed4:	930c      	str	r3, [sp, #48]	; 0x30
    bed6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bed8:	2d41      	cmp	r5, #65	; 0x41
    beda:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
    bede:	931b      	str	r3, [sp, #108]	; 0x6c
    bee0:	f000 81e5 	beq.w	c2ae <_svfprintf_r+0x191e>
    bee4:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
    bee8:	2100      	movs	r1, #0
    beea:	2b00      	cmp	r3, #0
    beec:	bfb8      	it	lt
    beee:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
    bef0:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
    bef4:	bfba      	itte	lt
    bef6:	f1c3 0301 	rsblt	r3, r3, #1
    befa:	222d      	movlt	r2, #45	; 0x2d
    befc:	222b      	movge	r2, #43	; 0x2b
    befe:	2b09      	cmp	r3, #9
    bf00:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
    bf04:	f340 81da 	ble.w	c2bc <_svfprintf_r+0x192c>
    bf08:	f10d 058f 	add.w	r5, sp, #143	; 0x8f
    bf0c:	f8df c41c 	ldr.w	ip, [pc, #1052]	; c32c <_svfprintf_r+0x199c>
    bf10:	462a      	mov	r2, r5
    bf12:	4610      	mov	r0, r2
    bf14:	fb8c 2103 	smull	r2, r1, ip, r3
    bf18:	17da      	asrs	r2, r3, #31
    bf1a:	ebc2 02a1 	rsb	r2, r2, r1, asr #2
    bf1e:	eb02 0182 	add.w	r1, r2, r2, lsl #2
    bf22:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
    bf26:	3130      	adds	r1, #48	; 0x30
    bf28:	f800 1c01 	strb.w	r1, [r0, #-1]
    bf2c:	4619      	mov	r1, r3
    bf2e:	2963      	cmp	r1, #99	; 0x63
    bf30:	4613      	mov	r3, r2
    bf32:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
    bf36:	dcec      	bgt.n	bf12 <_svfprintf_r+0x1582>
    bf38:	3330      	adds	r3, #48	; 0x30
    bf3a:	b2d9      	uxtb	r1, r3
    bf3c:	1e83      	subs	r3, r0, #2
    bf3e:	429d      	cmp	r5, r3
    bf40:	f802 1c01 	strb.w	r1, [r2, #-1]
    bf44:	f240 828b 	bls.w	c45e <_svfprintf_r+0x1ace>
    bf48:	4613      	mov	r3, r2
    bf4a:	f10d 027a 	add.w	r2, sp, #122	; 0x7a
    bf4e:	e001      	b.n	bf54 <_svfprintf_r+0x15c4>
    bf50:	f813 1b01 	ldrb.w	r1, [r3], #1
    bf54:	f802 1b01 	strb.w	r1, [r2], #1
    bf58:	429d      	cmp	r5, r3
    bf5a:	d1f9      	bne.n	bf50 <_svfprintf_r+0x15c0>
    bf5c:	f10d 0391 	add.w	r3, sp, #145	; 0x91
    bf60:	f10d 027a 	add.w	r2, sp, #122	; 0x7a
    bf64:	1a1b      	subs	r3, r3, r0
    bf66:	4413      	add	r3, r2
    bf68:	aa1e      	add	r2, sp, #120	; 0x78
    bf6a:	1a9b      	subs	r3, r3, r2
    bf6c:	9314      	str	r3, [sp, #80]	; 0x50
    bf6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bf70:	9a14      	ldr	r2, [sp, #80]	; 0x50
    bf72:	2b01      	cmp	r3, #1
    bf74:	441a      	add	r2, r3
    bf76:	9205      	str	r2, [sp, #20]
    bf78:	f340 8203 	ble.w	c382 <_svfprintf_r+0x19f2>
    bf7c:	9b05      	ldr	r3, [sp, #20]
    bf7e:	9a10      	ldr	r2, [sp, #64]	; 0x40
    bf80:	4413      	add	r3, r2
    bf82:	9305      	str	r3, [sp, #20]
    bf84:	f426 6380 	bic.w	r3, r6, #1024	; 0x400
    bf88:	9a05      	ldr	r2, [sp, #20]
    bf8a:	f443 7880 	orr.w	r8, r3, #256	; 0x100
    bf8e:	2300      	movs	r3, #0
    bf90:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
    bf94:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
    bf98:	930f      	str	r3, [sp, #60]	; 0x3c
    bf9a:	9202      	str	r2, [sp, #8]
    bf9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bf9e:	2b00      	cmp	r3, #0
    bfa0:	f040 80b1 	bne.w	c106 <_svfprintf_r+0x1776>
    bfa4:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    bfa8:	9303      	str	r3, [sp, #12]
    bfaa:	f7fe bed2 	b.w	ad52 <_svfprintf_r+0x3c2>
    bfae:	4620      	mov	r0, r4
    bfb0:	f002 fe66 	bl	ec80 <strlen>
    bfb4:	4602      	mov	r2, r0
    bfb6:	9005      	str	r0, [sp, #20]
    bfb8:	f7fe bf20 	b.w	adfc <_svfprintf_r+0x46c>
    bfbc:	ee1b 1a10 	vmov	r1, s22
    bfc0:	aa24      	add	r2, sp, #144	; 0x90
    bfc2:	4658      	mov	r0, fp
    bfc4:	f003 fb26 	bl	f614 <__ssprint_r>
    bfc8:	f7fe bded 	b.w	aba6 <_svfprintf_r+0x216>
    bfcc:	1c59      	adds	r1, r3, #1
    bfce:	4658      	mov	r0, fp
    bfd0:	f000 fa90 	bl	c4f4 <_malloc_r>
    bfd4:	4604      	mov	r4, r0
    bfd6:	2800      	cmp	r0, #0
    bfd8:	f000 81ca 	beq.w	c370 <_svfprintf_r+0x19e0>
    bfdc:	9007      	str	r0, [sp, #28]
    bfde:	e6e0      	b.n	bda2 <_svfprintf_r+0x1412>
    bfe0:	ee1b 1a10 	vmov	r1, s22
    bfe4:	aa24      	add	r2, sp, #144	; 0x90
    bfe6:	4658      	mov	r0, fp
    bfe8:	f003 fb14 	bl	f614 <__ssprint_r>
    bfec:	2800      	cmp	r0, #0
    bfee:	f47f a934 	bne.w	b25a <_svfprintf_r+0x8ca>
    bff2:	9a26      	ldr	r2, [sp, #152]	; 0x98
    bff4:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    bff8:	f7ff ba49 	b.w	b48e <_svfprintf_r+0xafe>
    bffc:	ee1b 1a10 	vmov	r1, s22
    c000:	aa24      	add	r2, sp, #144	; 0x90
    c002:	4658      	mov	r0, fp
    c004:	f003 fb06 	bl	f614 <__ssprint_r>
    c008:	2800      	cmp	r0, #0
    c00a:	f47f a926 	bne.w	b25a <_svfprintf_r+0x8ca>
    c00e:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    c012:	991b      	ldr	r1, [sp, #108]	; 0x6c
    c014:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    c018:	e649      	b.n	bcae <_svfprintf_r+0x131e>
    c01a:	2306      	movs	r3, #6
    c01c:	9303      	str	r3, [sp, #12]
    c01e:	f7ff bb83 	b.w	b728 <_svfprintf_r+0xd98>
    c022:	9b03      	ldr	r3, [sp, #12]
    c024:	2102      	movs	r1, #2
    c026:	1c5a      	adds	r2, r3, #1
    c028:	e72b      	b.n	be82 <_svfprintf_r+0x14f2>
    c02a:	9a03      	ldr	r2, [sp, #12]
    c02c:	2103      	movs	r1, #3
    c02e:	e728      	b.n	be82 <_svfprintf_r+0x14f2>
    c030:	a81b      	add	r0, sp, #108	; 0x6c
    c032:	eeb0 0b4a 	vmov.f64	d0, d10
    c036:	f002 fe93 	bl	ed60 <frexp>
    c03a:	eeb4 7b00 	vmov.f64	d7, #64	; 0x3e000000  0.125
    c03e:	ee20 0b07 	vmul.f64	d0, d0, d7
    c042:	eeb5 0b40 	vcmp.f64	d0, #0.0
    c046:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c04a:	d101      	bne.n	c050 <_svfprintf_r+0x16c0>
    c04c:	2301      	movs	r3, #1
    c04e:	931b      	str	r3, [sp, #108]	; 0x6c
    c050:	48b3      	ldr	r0, [pc, #716]	; (c320 <_svfprintf_r+0x1990>)
    c052:	9b03      	ldr	r3, [sp, #12]
    c054:	eeb3 5b00 	vmov.f64	d5, #48	; 0x41800000  16.0
    c058:	3b01      	subs	r3, #1
    c05a:	4622      	mov	r2, r4
    c05c:	e004      	b.n	c068 <_svfprintf_r+0x16d8>
    c05e:	eeb5 0b40 	vcmp.f64	d0, #0.0
    c062:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c066:	d013      	beq.n	c090 <_svfprintf_r+0x1700>
    c068:	ee20 0b05 	vmul.f64	d0, d0, d5
    c06c:	eefd 7bc0 	vcvt.s32.f64	s15, d0
    c070:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    c074:	ee17 1a90 	vmov	r1, s15
    c078:	5c41      	ldrb	r1, [r0, r1]
    c07a:	eeb8 6be7 	vcvt.f64.s32	d6, s15
    c07e:	4694      	mov	ip, r2
    c080:	ee30 0b46 	vsub.f64	d0, d0, d6
    c084:	f802 1b01 	strb.w	r1, [r2], #1
    c088:	4619      	mov	r1, r3
    c08a:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
    c08e:	d1e6      	bne.n	c05e <_svfprintf_r+0x16ce>
    c090:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    c094:	eeb4 0bc6 	vcmpe.f64	d0, d6
    c098:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c09c:	f300 8148 	bgt.w	c330 <_svfprintf_r+0x19a0>
    c0a0:	eeb4 0b46 	vcmp.f64	d0, d6
    c0a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c0a8:	d104      	bne.n	c0b4 <_svfprintf_r+0x1724>
    c0aa:	ee17 3a90 	vmov	r3, s15
    c0ae:	07db      	lsls	r3, r3, #31
    c0b0:	f100 813e 	bmi.w	c330 <_svfprintf_r+0x19a0>
    c0b4:	2900      	cmp	r1, #0
    c0b6:	db06      	blt.n	c0c6 <_svfprintf_r+0x1736>
    c0b8:	1c4b      	adds	r3, r1, #1
    c0ba:	4413      	add	r3, r2
    c0bc:	2130      	movs	r1, #48	; 0x30
    c0be:	f802 1b01 	strb.w	r1, [r2], #1
    c0c2:	4293      	cmp	r3, r2
    c0c4:	d1fb      	bne.n	c0be <_svfprintf_r+0x172e>
    c0c6:	1b13      	subs	r3, r2, r4
    c0c8:	930e      	str	r3, [sp, #56]	; 0x38
    c0ca:	e6fc      	b.n	bec6 <_svfprintf_r+0x1536>
    c0cc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    c0ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c0d0:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
    c0d4:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
    c0d8:	9613      	str	r6, [sp, #76]	; 0x4c
    c0da:	18e3      	adds	r3, r4, r3
    c0dc:	429d      	cmp	r5, r3
    c0de:	4629      	mov	r1, r5
    c0e0:	bf28      	it	cs
    c0e2:	4619      	movcs	r1, r3
    c0e4:	4682      	mov	sl, r0
    c0e6:	9105      	str	r1, [sp, #20]
    c0e8:	f7ff b9d8 	b.w	b49c <_svfprintf_r+0xb0c>
    c0ec:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    c0ee:	930c      	str	r3, [sp, #48]	; 0x30
    c0f0:	1cda      	adds	r2, r3, #3
    c0f2:	db02      	blt.n	c0fa <_svfprintf_r+0x176a>
    c0f4:	9a03      	ldr	r2, [sp, #12]
    c0f6:	4293      	cmp	r3, r2
    c0f8:	dd0c      	ble.n	c114 <_svfprintf_r+0x1784>
    c0fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    c0fc:	3b02      	subs	r3, #2
    c0fe:	930b      	str	r3, [sp, #44]	; 0x2c
    c100:	f023 0520 	bic.w	r5, r3, #32
    c104:	e6e7      	b.n	bed6 <_svfprintf_r+0x1546>
    c106:	212d      	movs	r1, #45	; 0x2d
    c108:	2300      	movs	r3, #0
    c10a:	f88d 1067 	strb.w	r1, [sp, #103]	; 0x67
    c10e:	9303      	str	r3, [sp, #12]
    c110:	f7fe be22 	b.w	ad58 <_svfprintf_r+0x3c8>
    c114:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c116:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    c118:	4293      	cmp	r3, r2
    c11a:	f2c0 80bd 	blt.w	c298 <_svfprintf_r+0x1908>
    c11e:	07f0      	lsls	r0, r6, #31
    c120:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c122:	f140 8132 	bpl.w	c38a <_svfprintf_r+0x19fa>
    c126:	9a10      	ldr	r2, [sp, #64]	; 0x40
    c128:	4413      	add	r3, r2
    c12a:	9305      	str	r3, [sp, #20]
    c12c:	0571      	lsls	r1, r6, #21
    c12e:	d503      	bpl.n	c138 <_svfprintf_r+0x17a8>
    c130:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c132:	2b00      	cmp	r3, #0
    c134:	f300 8135 	bgt.w	c3a2 <_svfprintf_r+0x1a12>
    c138:	9b05      	ldr	r3, [sp, #20]
    c13a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    c13e:	9302      	str	r3, [sp, #8]
    c140:	2367      	movs	r3, #103	; 0x67
    c142:	930b      	str	r3, [sp, #44]	; 0x2c
    c144:	2300      	movs	r3, #0
    c146:	930f      	str	r3, [sp, #60]	; 0x3c
    c148:	930d      	str	r3, [sp, #52]	; 0x34
    c14a:	e727      	b.n	bf9c <_svfprintf_r+0x160c>
    c14c:	9b22      	ldr	r3, [sp, #136]	; 0x88
    c14e:	4283      	cmp	r3, r0
    c150:	f4bf aeb7 	bcs.w	bec2 <_svfprintf_r+0x1532>
    c154:	2130      	movs	r1, #48	; 0x30
    c156:	1c5a      	adds	r2, r3, #1
    c158:	9222      	str	r2, [sp, #136]	; 0x88
    c15a:	7019      	strb	r1, [r3, #0]
    c15c:	9b22      	ldr	r3, [sp, #136]	; 0x88
    c15e:	4298      	cmp	r0, r3
    c160:	d8f9      	bhi.n	c156 <_svfprintf_r+0x17c6>
    c162:	e6ae      	b.n	bec2 <_svfprintf_r+0x1532>
    c164:	07f3      	lsls	r3, r6, #31
    c166:	f100 80a7 	bmi.w	c2b8 <_svfprintf_r+0x1928>
    c16a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    c16c:	e6a9      	b.n	bec2 <_svfprintf_r+0x1532>
    c16e:	aa24      	add	r2, sp, #144	; 0x90
    c170:	4658      	mov	r0, fp
    c172:	9105      	str	r1, [sp, #20]
    c174:	f003 fa4e 	bl	f614 <__ssprint_r>
    c178:	2800      	cmp	r0, #0
    c17a:	f47f a86e 	bne.w	b25a <_svfprintf_r+0x8ca>
    c17e:	f896 c000 	ldrb.w	ip, [r6]
    c182:	9a26      	ldr	r2, [sp, #152]	; 0x98
    c184:	9905      	ldr	r1, [sp, #20]
    c186:	a827      	add	r0, sp, #156	; 0x9c
    c188:	4465      	add	r5, ip
    c18a:	f7ff bbec 	b.w	b966 <_svfprintf_r+0xfd6>
    c18e:	ee1b 1a10 	vmov	r1, s22
    c192:	aa24      	add	r2, sp, #144	; 0x90
    c194:	4658      	mov	r0, fp
    c196:	f003 fa3d 	bl	f614 <__ssprint_r>
    c19a:	2800      	cmp	r0, #0
    c19c:	f47f a85d 	bne.w	b25a <_svfprintf_r+0x8ca>
    c1a0:	9a26      	ldr	r2, [sp, #152]	; 0x98
    c1a2:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    c1a6:	f7ff b96b 	b.w	b480 <_svfprintf_r+0xaf0>
    c1aa:	2378      	movs	r3, #120	; 0x78
    c1ac:	f88d 3069 	strb.w	r3, [sp, #105]	; 0x69
    c1b0:	2330      	movs	r3, #48	; 0x30
    c1b2:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
    c1b6:	9b03      	ldr	r3, [sp, #12]
    c1b8:	2b63      	cmp	r3, #99	; 0x63
    c1ba:	f048 0602 	orr.w	r6, r8, #2
    c1be:	f300 80a6 	bgt.w	c30e <_svfprintf_r+0x197e>
    c1c2:	2300      	movs	r3, #0
    c1c4:	9307      	str	r3, [sp, #28]
    c1c6:	ac37      	add	r4, sp, #220	; 0xdc
    c1c8:	ee18 3a90 	vmov	r3, s17
    c1cc:	2b00      	cmp	r3, #0
    c1ce:	f448 7881 	orr.w	r8, r8, #258	; 0x102
    c1d2:	db2b      	blt.n	c22c <_svfprintf_r+0x189c>
    c1d4:	eeb0 ab48 	vmov.f64	d10, d8
    c1d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    c1da:	f023 0520 	bic.w	r5, r3, #32
    c1de:	2300      	movs	r3, #0
    c1e0:	9309      	str	r3, [sp, #36]	; 0x24
    c1e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    c1e4:	2b61      	cmp	r3, #97	; 0x61
    c1e6:	f47f aaad 	bne.w	b744 <_svfprintf_r+0xdb4>
    c1ea:	eeb0 0b4a 	vmov.f64	d0, d10
    c1ee:	a81b      	add	r0, sp, #108	; 0x6c
    c1f0:	f002 fdb6 	bl	ed60 <frexp>
    c1f4:	eeb4 7b00 	vmov.f64	d7, #64	; 0x3e000000  0.125
    c1f8:	ee20 0b07 	vmul.f64	d0, d0, d7
    c1fc:	eeb5 0b40 	vcmp.f64	d0, #0.0
    c200:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c204:	d101      	bne.n	c20a <_svfprintf_r+0x187a>
    c206:	2301      	movs	r3, #1
    c208:	931b      	str	r3, [sp, #108]	; 0x6c
    c20a:	4846      	ldr	r0, [pc, #280]	; (c324 <_svfprintf_r+0x1994>)
    c20c:	e721      	b.n	c052 <_svfprintf_r+0x16c2>
    c20e:	ee1b 1a10 	vmov	r1, s22
    c212:	aa24      	add	r2, sp, #144	; 0x90
    c214:	4658      	mov	r0, fp
    c216:	f003 f9fd 	bl	f614 <__ssprint_r>
    c21a:	2800      	cmp	r0, #0
    c21c:	f47f a81d 	bne.w	b25a <_svfprintf_r+0x8ca>
    c220:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    c222:	9a26      	ldr	r2, [sp, #152]	; 0x98
    c224:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    c228:	f7ff b94e 	b.w	b4c8 <_svfprintf_r+0xb38>
    c22c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    c22e:	f023 0520 	bic.w	r5, r3, #32
    c232:	232d      	movs	r3, #45	; 0x2d
    c234:	9309      	str	r3, [sp, #36]	; 0x24
    c236:	eeb1 ab48 	vneg.f64	d10, d8
    c23a:	e7d2      	b.n	c1e2 <_svfprintf_r+0x1852>
    c23c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    c23e:	920c      	str	r2, [sp, #48]	; 0x30
    c240:	2a00      	cmp	r2, #0
    c242:	f006 0301 	and.w	r3, r6, #1
    c246:	f340 810d 	ble.w	c464 <_svfprintf_r+0x1ad4>
    c24a:	9903      	ldr	r1, [sp, #12]
    c24c:	430b      	orrs	r3, r1
    c24e:	f040 80cf 	bne.w	c3f0 <_svfprintf_r+0x1a60>
    c252:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c254:	9305      	str	r3, [sp, #20]
    c256:	2366      	movs	r3, #102	; 0x66
    c258:	930b      	str	r3, [sp, #44]	; 0x2c
    c25a:	0572      	lsls	r2, r6, #21
    c25c:	f100 80a3 	bmi.w	c3a6 <_svfprintf_r+0x1a16>
    c260:	9b05      	ldr	r3, [sp, #20]
    c262:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    c266:	9302      	str	r3, [sp, #8]
    c268:	e76c      	b.n	c144 <_svfprintf_r+0x17b4>
    c26a:	ee1b 1a10 	vmov	r1, s22
    c26e:	aa24      	add	r2, sp, #144	; 0x90
    c270:	4658      	mov	r0, fp
    c272:	f003 f9cf 	bl	f614 <__ssprint_r>
    c276:	2800      	cmp	r0, #0
    c278:	f47e afef 	bne.w	b25a <_svfprintf_r+0x8ca>
    c27c:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
    c27e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c280:	9a26      	ldr	r2, [sp, #152]	; 0x98
    c282:	1b1c      	subs	r4, r3, r4
    c284:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    c288:	f7ff b936 	b.w	b4f8 <_svfprintf_r+0xb68>
    c28c:	2358      	movs	r3, #88	; 0x58
    c28e:	e78d      	b.n	c1ac <_svfprintf_r+0x181c>
    c290:	2200      	movs	r2, #0
    c292:	9203      	str	r2, [sp, #12]
    c294:	f7fe bbda 	b.w	aa4c <_svfprintf_r+0xbc>
    c298:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c29a:	9a10      	ldr	r2, [sp, #64]	; 0x40
    c29c:	189a      	adds	r2, r3, r2
    c29e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c2a0:	9205      	str	r2, [sp, #20]
    c2a2:	2b00      	cmp	r3, #0
    c2a4:	f340 80ab 	ble.w	c3fe <_svfprintf_r+0x1a6e>
    c2a8:	2367      	movs	r3, #103	; 0x67
    c2aa:	930b      	str	r3, [sp, #44]	; 0x2c
    c2ac:	e7d5      	b.n	c25a <_svfprintf_r+0x18ca>
    c2ae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    c2b0:	320f      	adds	r2, #15
    c2b2:	b2d2      	uxtb	r2, r2
    c2b4:	2101      	movs	r1, #1
    c2b6:	e618      	b.n	beea <_svfprintf_r+0x155a>
    c2b8:	18a0      	adds	r0, r4, r2
    c2ba:	e5fb      	b.n	beb4 <_svfprintf_r+0x1524>
    c2bc:	2900      	cmp	r1, #0
    c2be:	f040 80a8 	bne.w	c412 <_svfprintf_r+0x1a82>
    c2c2:	2230      	movs	r2, #48	; 0x30
    c2c4:	f88d 207a 	strb.w	r2, [sp, #122]	; 0x7a
    c2c8:	f10d 027b 	add.w	r2, sp, #123	; 0x7b
    c2cc:	3330      	adds	r3, #48	; 0x30
    c2ce:	f802 3b01 	strb.w	r3, [r2], #1
    c2d2:	ab1e      	add	r3, sp, #120	; 0x78
    c2d4:	1ad3      	subs	r3, r2, r3
    c2d6:	9314      	str	r3, [sp, #80]	; 0x50
    c2d8:	e649      	b.n	bf6e <_svfprintf_r+0x15de>
    c2da:	3301      	adds	r3, #1
    c2dc:	4912      	ldr	r1, [pc, #72]	; (c328 <_svfprintf_r+0x1998>)
    c2de:	f8ca 5004 	str.w	r5, [sl, #4]
    c2e2:	442a      	add	r2, r5
    c2e4:	2b07      	cmp	r3, #7
    c2e6:	e9cd 3225 	strd	r3, r2, [sp, #148]	; 0x94
    c2ea:	f8ca 1000 	str.w	r1, [sl]
    c2ee:	f77f ac33 	ble.w	bb58 <_svfprintf_r+0x11c8>
    c2f2:	ee1b 1a10 	vmov	r1, s22
    c2f6:	aa24      	add	r2, sp, #144	; 0x90
    c2f8:	4658      	mov	r0, fp
    c2fa:	f003 f98b 	bl	f614 <__ssprint_r>
    c2fe:	2800      	cmp	r0, #0
    c300:	f47e afab 	bne.w	b25a <_svfprintf_r+0x8ca>
    c304:	e9dd 3225 	ldrd	r3, r2, [sp, #148]	; 0x94
    c308:	f10d 0a9c 	add.w	sl, sp, #156	; 0x9c
    c30c:	e426      	b.n	bb5c <_svfprintf_r+0x11cc>
    c30e:	1c59      	adds	r1, r3, #1
    c310:	4658      	mov	r0, fp
    c312:	f000 f8ef 	bl	c4f4 <_malloc_r>
    c316:	4604      	mov	r4, r0
    c318:	b350      	cbz	r0, c370 <_svfprintf_r+0x19e0>
    c31a:	9007      	str	r0, [sp, #28]
    c31c:	e754      	b.n	c1c8 <_svfprintf_r+0x1838>
    c31e:	bf00      	nop
    c320:	20001538 	.word	0x20001538
    c324:	20001524 	.word	0x20001524
    c328:	20002abc 	.word	0x20002abc
    c32c:	66666667 	.word	0x66666667
    c330:	f8cd c088 	str.w	ip, [sp, #136]	; 0x88
    c334:	f812 1c01 	ldrb.w	r1, [r2, #-1]
    c338:	f890 c00f 	ldrb.w	ip, [r0, #15]
    c33c:	4561      	cmp	r1, ip
    c33e:	4613      	mov	r3, r2
    c340:	d10a      	bne.n	c358 <_svfprintf_r+0x19c8>
    c342:	f04f 0e30 	mov.w	lr, #48	; 0x30
    c346:	f803 ec01 	strb.w	lr, [r3, #-1]
    c34a:	9b22      	ldr	r3, [sp, #136]	; 0x88
    c34c:	1e59      	subs	r1, r3, #1
    c34e:	9122      	str	r1, [sp, #136]	; 0x88
    c350:	f813 1c01 	ldrb.w	r1, [r3, #-1]
    c354:	458c      	cmp	ip, r1
    c356:	d0f6      	beq.n	c346 <_svfprintf_r+0x19b6>
    c358:	2939      	cmp	r1, #57	; 0x39
    c35a:	bf16      	itet	ne
    c35c:	3101      	addne	r1, #1
    c35e:	7a81      	ldrbeq	r1, [r0, #10]
    c360:	b2c9      	uxtbne	r1, r1
    c362:	f803 1c01 	strb.w	r1, [r3, #-1]
    c366:	e6ae      	b.n	c0c6 <_svfprintf_r+0x1736>
    c368:	2300      	movs	r3, #0
    c36a:	4690      	mov	r8, r2
    c36c:	9307      	str	r3, [sp, #28]
    c36e:	e760      	b.n	c232 <_svfprintf_r+0x18a2>
    c370:	ee1b 2a10 	vmov	r2, s22
    c374:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
    c378:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    c37c:	8193      	strh	r3, [r2, #12]
    c37e:	f7fe bc16 	b.w	abae <_svfprintf_r+0x21e>
    c382:	07f5      	lsls	r5, r6, #31
    c384:	f57f adfe 	bpl.w	bf84 <_svfprintf_r+0x15f4>
    c388:	e5f8      	b.n	bf7c <_svfprintf_r+0x15ec>
    c38a:	9305      	str	r3, [sp, #20]
    c38c:	e6ce      	b.n	c12c <_svfprintf_r+0x179c>
    c38e:	eeb5 ab40 	vcmp.f64	d10, #0.0
    c392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    c396:	f43f ad8b 	beq.w	beb0 <_svfprintf_r+0x1520>
    c39a:	f1c2 0201 	rsb	r2, r2, #1
    c39e:	921b      	str	r2, [sp, #108]	; 0x6c
    c3a0:	e587      	b.n	beb2 <_svfprintf_r+0x1522>
    c3a2:	2367      	movs	r3, #103	; 0x67
    c3a4:	930b      	str	r3, [sp, #44]	; 0x2c
    c3a6:	9913      	ldr	r1, [sp, #76]	; 0x4c
    c3a8:	780b      	ldrb	r3, [r1, #0]
    c3aa:	2bff      	cmp	r3, #255	; 0xff
    c3ac:	d079      	beq.n	c4a2 <_svfprintf_r+0x1b12>
    c3ae:	2500      	movs	r5, #0
    c3b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    c3b2:	4628      	mov	r0, r5
    c3b4:	e003      	b.n	c3be <_svfprintf_r+0x1a2e>
    c3b6:	3001      	adds	r0, #1
    c3b8:	3101      	adds	r1, #1
    c3ba:	2bff      	cmp	r3, #255	; 0xff
    c3bc:	d008      	beq.n	c3d0 <_svfprintf_r+0x1a40>
    c3be:	4293      	cmp	r3, r2
    c3c0:	da06      	bge.n	c3d0 <_svfprintf_r+0x1a40>
    c3c2:	1ad2      	subs	r2, r2, r3
    c3c4:	784b      	ldrb	r3, [r1, #1]
    c3c6:	2b00      	cmp	r3, #0
    c3c8:	d1f5      	bne.n	c3b6 <_svfprintf_r+0x1a26>
    c3ca:	780b      	ldrb	r3, [r1, #0]
    c3cc:	3501      	adds	r5, #1
    c3ce:	e7f4      	b.n	c3ba <_svfprintf_r+0x1a2a>
    c3d0:	920c      	str	r2, [sp, #48]	; 0x30
    c3d2:	9113      	str	r1, [sp, #76]	; 0x4c
    c3d4:	900d      	str	r0, [sp, #52]	; 0x34
    c3d6:	950f      	str	r5, [sp, #60]	; 0x3c
    c3d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    c3da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    c3dc:	9916      	ldr	r1, [sp, #88]	; 0x58
    c3de:	4413      	add	r3, r2
    c3e0:	9a05      	ldr	r2, [sp, #20]
    c3e2:	fb01 2303 	mla	r3, r1, r3, r2
    c3e6:	9305      	str	r3, [sp, #20]
    c3e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    c3ec:	9302      	str	r3, [sp, #8]
    c3ee:	e5d5      	b.n	bf9c <_svfprintf_r+0x160c>
    c3f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
    c3f2:	18d3      	adds	r3, r2, r3
    c3f4:	4419      	add	r1, r3
    c3f6:	2366      	movs	r3, #102	; 0x66
    c3f8:	9105      	str	r1, [sp, #20]
    c3fa:	930b      	str	r3, [sp, #44]	; 0x2c
    c3fc:	e72d      	b.n	c25a <_svfprintf_r+0x18ca>
    c3fe:	f1c3 0301 	rsb	r3, r3, #1
    c402:	441a      	add	r2, r3
    c404:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
    c408:	9302      	str	r3, [sp, #8]
    c40a:	2367      	movs	r3, #103	; 0x67
    c40c:	9205      	str	r2, [sp, #20]
    c40e:	930b      	str	r3, [sp, #44]	; 0x2c
    c410:	e698      	b.n	c144 <_svfprintf_r+0x17b4>
    c412:	f10d 027a 	add.w	r2, sp, #122	; 0x7a
    c416:	e759      	b.n	c2cc <_svfprintf_r+0x193c>
    c418:	9b03      	ldr	r3, [sp, #12]
    c41a:	f8dd 9008 	ldr.w	r9, [sp, #8]
    c41e:	f8dd 801c 	ldr.w	r8, [sp, #28]
    c422:	9305      	str	r3, [sp, #20]
    c424:	e4b4      	b.n	bd90 <_svfprintf_r+0x1400>
    c426:	ee18 3a90 	vmov	r3, s17
    c42a:	2b00      	cmp	r3, #0
    c42c:	bfb4      	ite	lt
    c42e:	212d      	movlt	r1, #45	; 0x2d
    c430:	f89d 1067 	ldrbge.w	r1, [sp, #103]	; 0x67
    c434:	4c25      	ldr	r4, [pc, #148]	; (c4cc <_svfprintf_r+0x1b3c>)
    c436:	4b26      	ldr	r3, [pc, #152]	; (c4d0 <_svfprintf_r+0x1b40>)
    c438:	bfb8      	it	lt
    c43a:	f88d 1067 	strblt.w	r1, [sp, #103]	; 0x67
    c43e:	f028 0880 	bic.w	r8, r8, #128	; 0x80
    c442:	f7fe bc79 	b.w	ad38 <_svfprintf_r+0x3a8>
    c446:	9b03      	ldr	r3, [sp, #12]
    c448:	9302      	str	r3, [sp, #8]
    c44a:	9305      	str	r3, [sp, #20]
    c44c:	2373      	movs	r3, #115	; 0x73
    c44e:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
    c452:	9003      	str	r0, [sp, #12]
    c454:	900f      	str	r0, [sp, #60]	; 0x3c
    c456:	900d      	str	r0, [sp, #52]	; 0x34
    c458:	930b      	str	r3, [sp, #44]	; 0x2c
    c45a:	f7fe bc7a 	b.w	ad52 <_svfprintf_r+0x3c2>
    c45e:	2302      	movs	r3, #2
    c460:	9314      	str	r3, [sp, #80]	; 0x50
    c462:	e584      	b.n	bf6e <_svfprintf_r+0x15de>
    c464:	9a03      	ldr	r2, [sp, #12]
    c466:	4313      	orrs	r3, r2
    c468:	d105      	bne.n	c476 <_svfprintf_r+0x1ae6>
    c46a:	2301      	movs	r3, #1
    c46c:	2266      	movs	r2, #102	; 0x66
    c46e:	9302      	str	r3, [sp, #8]
    c470:	920b      	str	r2, [sp, #44]	; 0x2c
    c472:	9305      	str	r3, [sp, #20]
    c474:	e666      	b.n	c144 <_svfprintf_r+0x17b4>
    c476:	9b10      	ldr	r3, [sp, #64]	; 0x40
    c478:	3301      	adds	r3, #1
    c47a:	441a      	add	r2, r3
    c47c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
    c480:	9302      	str	r3, [sp, #8]
    c482:	2366      	movs	r3, #102	; 0x66
    c484:	9205      	str	r2, [sp, #20]
    c486:	930b      	str	r3, [sp, #44]	; 0x2c
    c488:	e65c      	b.n	c144 <_svfprintf_r+0x17b4>
    c48a:	9a08      	ldr	r2, [sp, #32]
    c48c:	f899 3001 	ldrb.w	r3, [r9, #1]
    c490:	4689      	mov	r9, r1
    c492:	f852 1b04 	ldr.w	r1, [r2], #4
    c496:	9208      	str	r2, [sp, #32]
    c498:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
    c49c:	9103      	str	r1, [sp, #12]
    c49e:	f7fe bad3 	b.w	aa48 <_svfprintf_r+0xb8>
    c4a2:	2300      	movs	r3, #0
    c4a4:	930f      	str	r3, [sp, #60]	; 0x3c
    c4a6:	930d      	str	r3, [sp, #52]	; 0x34
    c4a8:	e796      	b.n	c3d8 <_svfprintf_r+0x1a48>
    c4aa:	230c      	movs	r3, #12
    c4ac:	f8cb 3000 	str.w	r3, [fp]
    c4b0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    c4b4:	9304      	str	r3, [sp, #16]
    c4b6:	f7fe bb81 	b.w	abbc <_svfprintf_r+0x22c>
    c4ba:	ee1b 2a10 	vmov	r2, s22
    c4be:	8993      	ldrh	r3, [r2, #12]
    c4c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    c4c4:	8193      	strh	r3, [r2, #12]
    c4c6:	f7fe bec8 	b.w	b25a <_svfprintf_r+0x8ca>
    c4ca:	bf00      	nop
    c4cc:	2000151c 	.word	0x2000151c
    c4d0:	20001520 	.word	0x20001520

0000c4d4 <malloc>:
    c4d4:	4b02      	ldr	r3, [pc, #8]	; (c4e0 <malloc+0xc>)
    c4d6:	4601      	mov	r1, r0
    c4d8:	6818      	ldr	r0, [r3, #0]
    c4da:	f000 b80b 	b.w	c4f4 <_malloc_r>
    c4de:	bf00      	nop
    c4e0:	200031b4 	.word	0x200031b4

0000c4e4 <free>:
    c4e4:	4b02      	ldr	r3, [pc, #8]	; (c4f0 <free+0xc>)
    c4e6:	4601      	mov	r1, r0
    c4e8:	6818      	ldr	r0, [r3, #0]
    c4ea:	f002 beb1 	b.w	f250 <_free_r>
    c4ee:	bf00      	nop
    c4f0:	200031b4 	.word	0x200031b4

0000c4f4 <_malloc_r>:
    c4f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c4f8:	f101 060b 	add.w	r6, r1, #11
    c4fc:	2e16      	cmp	r6, #22
    c4fe:	b083      	sub	sp, #12
    c500:	4604      	mov	r4, r0
    c502:	d824      	bhi.n	c54e <_malloc_r+0x5a>
    c504:	2910      	cmp	r1, #16
    c506:	f200 80ba 	bhi.w	c67e <_malloc_r+0x18a>
    c50a:	f000 fea5 	bl	d258 <__malloc_lock>
    c50e:	2610      	movs	r6, #16
    c510:	2218      	movs	r2, #24
    c512:	2002      	movs	r0, #2
    c514:	4fb5      	ldr	r7, [pc, #724]	; (c7ec <_malloc_r+0x2f8>)
    c516:	443a      	add	r2, r7
    c518:	f1a2 0108 	sub.w	r1, r2, #8
    c51c:	6853      	ldr	r3, [r2, #4]
    c51e:	428b      	cmp	r3, r1
    c520:	f000 80ba 	beq.w	c698 <_malloc_r+0x1a4>
    c524:	685a      	ldr	r2, [r3, #4]
    c526:	68d9      	ldr	r1, [r3, #12]
    c528:	f022 0203 	bic.w	r2, r2, #3
    c52c:	441a      	add	r2, r3
    c52e:	689d      	ldr	r5, [r3, #8]
    c530:	60e9      	str	r1, [r5, #12]
    c532:	608d      	str	r5, [r1, #8]
    c534:	6851      	ldr	r1, [r2, #4]
    c536:	f041 0101 	orr.w	r1, r1, #1
    c53a:	4620      	mov	r0, r4
    c53c:	6051      	str	r1, [r2, #4]
    c53e:	f103 0508 	add.w	r5, r3, #8
    c542:	f000 fe8f 	bl	d264 <__malloc_unlock>
    c546:	4628      	mov	r0, r5
    c548:	b003      	add	sp, #12
    c54a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c54e:	f036 0607 	bics.w	r6, r6, #7
    c552:	f100 8094 	bmi.w	c67e <_malloc_r+0x18a>
    c556:	42b1      	cmp	r1, r6
    c558:	f200 8091 	bhi.w	c67e <_malloc_r+0x18a>
    c55c:	f000 fe7c 	bl	d258 <__malloc_lock>
    c560:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
    c564:	f0c0 819a 	bcc.w	c89c <_malloc_r+0x3a8>
    c568:	0a73      	lsrs	r3, r6, #9
    c56a:	f000 808f 	beq.w	c68c <_malloc_r+0x198>
    c56e:	2b04      	cmp	r3, #4
    c570:	f200 816f 	bhi.w	c852 <_malloc_r+0x35e>
    c574:	09b3      	lsrs	r3, r6, #6
    c576:	f103 0039 	add.w	r0, r3, #57	; 0x39
    c57a:	f103 0c38 	add.w	ip, r3, #56	; 0x38
    c57e:	00c3      	lsls	r3, r0, #3
    c580:	4f9a      	ldr	r7, [pc, #616]	; (c7ec <_malloc_r+0x2f8>)
    c582:	443b      	add	r3, r7
    c584:	f1a3 0508 	sub.w	r5, r3, #8
    c588:	685b      	ldr	r3, [r3, #4]
    c58a:	429d      	cmp	r5, r3
    c58c:	d106      	bne.n	c59c <_malloc_r+0xa8>
    c58e:	e00c      	b.n	c5aa <_malloc_r+0xb6>
    c590:	2900      	cmp	r1, #0
    c592:	f280 8127 	bge.w	c7e4 <_malloc_r+0x2f0>
    c596:	68db      	ldr	r3, [r3, #12]
    c598:	429d      	cmp	r5, r3
    c59a:	d006      	beq.n	c5aa <_malloc_r+0xb6>
    c59c:	685a      	ldr	r2, [r3, #4]
    c59e:	f022 0203 	bic.w	r2, r2, #3
    c5a2:	1b91      	subs	r1, r2, r6
    c5a4:	290f      	cmp	r1, #15
    c5a6:	ddf3      	ble.n	c590 <_malloc_r+0x9c>
    c5a8:	4660      	mov	r0, ip
    c5aa:	693d      	ldr	r5, [r7, #16]
    c5ac:	f8df c250 	ldr.w	ip, [pc, #592]	; c800 <_malloc_r+0x30c>
    c5b0:	4565      	cmp	r5, ip
    c5b2:	d07c      	beq.n	c6ae <_malloc_r+0x1ba>
    c5b4:	686a      	ldr	r2, [r5, #4]
    c5b6:	f022 0203 	bic.w	r2, r2, #3
    c5ba:	1b93      	subs	r3, r2, r6
    c5bc:	2b0f      	cmp	r3, #15
    c5be:	f300 817b 	bgt.w	c8b8 <_malloc_r+0x3c4>
    c5c2:	2b00      	cmp	r3, #0
    c5c4:	e9c7 cc04 	strd	ip, ip, [r7, #16]
    c5c8:	f280 816c 	bge.w	c8a4 <_malloc_r+0x3b0>
    c5cc:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
    c5d0:	f080 811a 	bcs.w	c808 <_malloc_r+0x314>
    c5d4:	08d3      	lsrs	r3, r2, #3
    c5d6:	6879      	ldr	r1, [r7, #4]
    c5d8:	3301      	adds	r3, #1
    c5da:	ea4f 1e52 	mov.w	lr, r2, lsr #5
    c5de:	2201      	movs	r2, #1
    c5e0:	fa02 f20e 	lsl.w	r2, r2, lr
    c5e4:	430a      	orrs	r2, r1
    c5e6:	f857 e033 	ldr.w	lr, [r7, r3, lsl #3]
    c5ea:	f8c5 e008 	str.w	lr, [r5, #8]
    c5ee:	eb07 01c3 	add.w	r1, r7, r3, lsl #3
    c5f2:	3908      	subs	r1, #8
    c5f4:	60e9      	str	r1, [r5, #12]
    c5f6:	607a      	str	r2, [r7, #4]
    c5f8:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
    c5fc:	f8ce 500c 	str.w	r5, [lr, #12]
    c600:	1083      	asrs	r3, r0, #2
    c602:	2101      	movs	r1, #1
    c604:	4099      	lsls	r1, r3
    c606:	4291      	cmp	r1, r2
    c608:	d857      	bhi.n	c6ba <_malloc_r+0x1c6>
    c60a:	4211      	tst	r1, r2
    c60c:	d106      	bne.n	c61c <_malloc_r+0x128>
    c60e:	f020 0003 	bic.w	r0, r0, #3
    c612:	0049      	lsls	r1, r1, #1
    c614:	4211      	tst	r1, r2
    c616:	f100 0004 	add.w	r0, r0, #4
    c61a:	d0fa      	beq.n	c612 <_malloc_r+0x11e>
    c61c:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
    c620:	464d      	mov	r5, r9
    c622:	4686      	mov	lr, r0
    c624:	f8d5 800c 	ldr.w	r8, [r5, #12]
    c628:	4545      	cmp	r5, r8
    c62a:	d108      	bne.n	c63e <_malloc_r+0x14a>
    c62c:	e11d      	b.n	c86a <_malloc_r+0x376>
    c62e:	2b00      	cmp	r3, #0
    c630:	f280 8124 	bge.w	c87c <_malloc_r+0x388>
    c634:	f8d8 800c 	ldr.w	r8, [r8, #12]
    c638:	4545      	cmp	r5, r8
    c63a:	f000 8116 	beq.w	c86a <_malloc_r+0x376>
    c63e:	f8d8 2004 	ldr.w	r2, [r8, #4]
    c642:	f022 0203 	bic.w	r2, r2, #3
    c646:	1b93      	subs	r3, r2, r6
    c648:	2b0f      	cmp	r3, #15
    c64a:	ddf0      	ble.n	c62e <_malloc_r+0x13a>
    c64c:	4620      	mov	r0, r4
    c64e:	e9d8 5402 	ldrd	r5, r4, [r8, #8]
    c652:	eb08 0106 	add.w	r1, r8, r6
    c656:	f046 0601 	orr.w	r6, r6, #1
    c65a:	f8c8 6004 	str.w	r6, [r8, #4]
    c65e:	60ec      	str	r4, [r5, #12]
    c660:	60a5      	str	r5, [r4, #8]
    c662:	f043 0401 	orr.w	r4, r3, #1
    c666:	e9c7 1104 	strd	r1, r1, [r7, #16]
    c66a:	e9c1 cc02 	strd	ip, ip, [r1, #8]
    c66e:	604c      	str	r4, [r1, #4]
    c670:	f848 3002 	str.w	r3, [r8, r2]
    c674:	f000 fdf6 	bl	d264 <__malloc_unlock>
    c678:	f108 0508 	add.w	r5, r8, #8
    c67c:	e002      	b.n	c684 <_malloc_r+0x190>
    c67e:	230c      	movs	r3, #12
    c680:	6023      	str	r3, [r4, #0]
    c682:	2500      	movs	r5, #0
    c684:	4628      	mov	r0, r5
    c686:	b003      	add	sp, #12
    c688:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c68c:	f44f 7300 	mov.w	r3, #512	; 0x200
    c690:	2040      	movs	r0, #64	; 0x40
    c692:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
    c696:	e773      	b.n	c580 <_malloc_r+0x8c>
    c698:	68d3      	ldr	r3, [r2, #12]
    c69a:	429a      	cmp	r2, r3
    c69c:	bf08      	it	eq
    c69e:	3002      	addeq	r0, #2
    c6a0:	f47f af40 	bne.w	c524 <_malloc_r+0x30>
    c6a4:	693d      	ldr	r5, [r7, #16]
    c6a6:	f8df c158 	ldr.w	ip, [pc, #344]	; c800 <_malloc_r+0x30c>
    c6aa:	4565      	cmp	r5, ip
    c6ac:	d182      	bne.n	c5b4 <_malloc_r+0xc0>
    c6ae:	687a      	ldr	r2, [r7, #4]
    c6b0:	1083      	asrs	r3, r0, #2
    c6b2:	2101      	movs	r1, #1
    c6b4:	4099      	lsls	r1, r3
    c6b6:	4291      	cmp	r1, r2
    c6b8:	d9a7      	bls.n	c60a <_malloc_r+0x116>
    c6ba:	68bd      	ldr	r5, [r7, #8]
    c6bc:	686b      	ldr	r3, [r5, #4]
    c6be:	f023 0903 	bic.w	r9, r3, #3
    c6c2:	454e      	cmp	r6, r9
    c6c4:	d803      	bhi.n	c6ce <_malloc_r+0x1da>
    c6c6:	eba9 0306 	sub.w	r3, r9, r6
    c6ca:	2b0f      	cmp	r3, #15
    c6cc:	dc7a      	bgt.n	c7c4 <_malloc_r+0x2d0>
    c6ce:	f8df b134 	ldr.w	fp, [pc, #308]	; c804 <_malloc_r+0x310>
    c6d2:	4b47      	ldr	r3, [pc, #284]	; (c7f0 <_malloc_r+0x2fc>)
    c6d4:	f8db 2000 	ldr.w	r2, [fp]
    c6d8:	681b      	ldr	r3, [r3, #0]
    c6da:	3201      	adds	r2, #1
    c6dc:	4433      	add	r3, r6
    c6de:	eb05 0a09 	add.w	sl, r5, r9
    c6e2:	f000 8133 	beq.w	c94c <_malloc_r+0x458>
    c6e6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    c6ea:	330f      	adds	r3, #15
    c6ec:	f423 687f 	bic.w	r8, r3, #4080	; 0xff0
    c6f0:	f028 080f 	bic.w	r8, r8, #15
    c6f4:	4641      	mov	r1, r8
    c6f6:	4620      	mov	r0, r4
    c6f8:	f002 ff40 	bl	f57c <_sbrk_r>
    c6fc:	1c41      	adds	r1, r0, #1
    c6fe:	4602      	mov	r2, r0
    c700:	f000 80f3 	beq.w	c8ea <_malloc_r+0x3f6>
    c704:	4582      	cmp	sl, r0
    c706:	f200 80ee 	bhi.w	c8e6 <_malloc_r+0x3f2>
    c70a:	4b3a      	ldr	r3, [pc, #232]	; (c7f4 <_malloc_r+0x300>)
    c70c:	6819      	ldr	r1, [r3, #0]
    c70e:	4441      	add	r1, r8
    c710:	6019      	str	r1, [r3, #0]
    c712:	4608      	mov	r0, r1
    c714:	f000 814e 	beq.w	c9b4 <_malloc_r+0x4c0>
    c718:	f8db 1000 	ldr.w	r1, [fp]
    c71c:	9301      	str	r3, [sp, #4]
    c71e:	3101      	adds	r1, #1
    c720:	bf1b      	ittet	ne
    c722:	eba2 010a 	subne.w	r1, r2, sl
    c726:	1809      	addne	r1, r1, r0
    c728:	f8cb 2000 	streq.w	r2, [fp]
    c72c:	6019      	strne	r1, [r3, #0]
    c72e:	f012 0b07 	ands.w	fp, r2, #7
    c732:	f000 8117 	beq.w	c964 <_malloc_r+0x470>
    c736:	f1cb 0108 	rsb	r1, fp, #8
    c73a:	440a      	add	r2, r1
    c73c:	f5cb 5180 	rsb	r1, fp, #4096	; 0x1000
    c740:	4490      	add	r8, r2
    c742:	3108      	adds	r1, #8
    c744:	eba1 0108 	sub.w	r1, r1, r8
    c748:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
    c74c:	4651      	mov	r1, sl
    c74e:	4620      	mov	r0, r4
    c750:	9200      	str	r2, [sp, #0]
    c752:	f002 ff13 	bl	f57c <_sbrk_r>
    c756:	1c42      	adds	r2, r0, #1
    c758:	e9dd 2300 	ldrd	r2, r3, [sp]
    c75c:	f000 814f 	beq.w	c9fe <_malloc_r+0x50a>
    c760:	1a80      	subs	r0, r0, r2
    c762:	eb00 080a 	add.w	r8, r0, sl
    c766:	6819      	ldr	r1, [r3, #0]
    c768:	60ba      	str	r2, [r7, #8]
    c76a:	f048 0001 	orr.w	r0, r8, #1
    c76e:	4451      	add	r1, sl
    c770:	42bd      	cmp	r5, r7
    c772:	6050      	str	r0, [r2, #4]
    c774:	6019      	str	r1, [r3, #0]
    c776:	f000 8129 	beq.w	c9cc <_malloc_r+0x4d8>
    c77a:	f1b9 0f0f 	cmp.w	r9, #15
    c77e:	f240 8127 	bls.w	c9d0 <_malloc_r+0x4dc>
    c782:	6868      	ldr	r0, [r5, #4]
    c784:	f1a9 0c0c 	sub.w	ip, r9, #12
    c788:	f02c 0c07 	bic.w	ip, ip, #7
    c78c:	f000 0001 	and.w	r0, r0, #1
    c790:	ea40 000c 	orr.w	r0, r0, ip
    c794:	6068      	str	r0, [r5, #4]
    c796:	f04f 0e05 	mov.w	lr, #5
    c79a:	eb05 000c 	add.w	r0, r5, ip
    c79e:	f1bc 0f0f 	cmp.w	ip, #15
    c7a2:	e9c0 ee01 	strd	lr, lr, [r0, #4]
    c7a6:	f200 8132 	bhi.w	ca0e <_malloc_r+0x51a>
    c7aa:	6850      	ldr	r0, [r2, #4]
    c7ac:	4615      	mov	r5, r2
    c7ae:	4b12      	ldr	r3, [pc, #72]	; (c7f8 <_malloc_r+0x304>)
    c7b0:	681a      	ldr	r2, [r3, #0]
    c7b2:	428a      	cmp	r2, r1
    c7b4:	bf38      	it	cc
    c7b6:	6019      	strcc	r1, [r3, #0]
    c7b8:	4b10      	ldr	r3, [pc, #64]	; (c7fc <_malloc_r+0x308>)
    c7ba:	681a      	ldr	r2, [r3, #0]
    c7bc:	428a      	cmp	r2, r1
    c7be:	bf38      	it	cc
    c7c0:	6019      	strcc	r1, [r3, #0]
    c7c2:	e094      	b.n	c8ee <_malloc_r+0x3fa>
    c7c4:	19aa      	adds	r2, r5, r6
    c7c6:	f043 0301 	orr.w	r3, r3, #1
    c7ca:	f046 0601 	orr.w	r6, r6, #1
    c7ce:	606e      	str	r6, [r5, #4]
    c7d0:	4620      	mov	r0, r4
    c7d2:	60ba      	str	r2, [r7, #8]
    c7d4:	6053      	str	r3, [r2, #4]
    c7d6:	f000 fd45 	bl	d264 <__malloc_unlock>
    c7da:	3508      	adds	r5, #8
    c7dc:	4628      	mov	r0, r5
    c7de:	b003      	add	sp, #12
    c7e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c7e4:	68d9      	ldr	r1, [r3, #12]
    c7e6:	441a      	add	r2, r3
    c7e8:	e6a1      	b.n	c52e <_malloc_r+0x3a>
    c7ea:	bf00      	nop
    c7ec:	20002d98 	.word	0x20002d98
    c7f0:	20003ab4 	.word	0x20003ab4
    c7f4:	20003a84 	.word	0x20003a84
    c7f8:	20003aac 	.word	0x20003aac
    c7fc:	20003ab0 	.word	0x20003ab0
    c800:	20002da0 	.word	0x20002da0
    c804:	200031a0 	.word	0x200031a0
    c808:	f5b2 6f20 	cmp.w	r2, #2560	; 0xa00
    c80c:	ea4f 2352 	mov.w	r3, r2, lsr #9
    c810:	d363      	bcc.n	c8da <_malloc_r+0x3e6>
    c812:	2b14      	cmp	r3, #20
    c814:	f200 80b7 	bhi.w	c986 <_malloc_r+0x492>
    c818:	f103 015c 	add.w	r1, r3, #92	; 0x5c
    c81c:	00c9      	lsls	r1, r1, #3
    c81e:	335b      	adds	r3, #91	; 0x5b
    c820:	eb07 0e01 	add.w	lr, r7, r1
    c824:	5879      	ldr	r1, [r7, r1]
    c826:	f1ae 0e08 	sub.w	lr, lr, #8
    c82a:	458e      	cmp	lr, r1
    c82c:	f000 8091 	beq.w	c952 <_malloc_r+0x45e>
    c830:	684b      	ldr	r3, [r1, #4]
    c832:	f023 0303 	bic.w	r3, r3, #3
    c836:	4293      	cmp	r3, r2
    c838:	d902      	bls.n	c840 <_malloc_r+0x34c>
    c83a:	6889      	ldr	r1, [r1, #8]
    c83c:	458e      	cmp	lr, r1
    c83e:	d1f7      	bne.n	c830 <_malloc_r+0x33c>
    c840:	f8d1 e00c 	ldr.w	lr, [r1, #12]
    c844:	687a      	ldr	r2, [r7, #4]
    c846:	e9c5 1e02 	strd	r1, lr, [r5, #8]
    c84a:	f8ce 5008 	str.w	r5, [lr, #8]
    c84e:	60cd      	str	r5, [r1, #12]
    c850:	e6d6      	b.n	c600 <_malloc_r+0x10c>
    c852:	2b14      	cmp	r3, #20
    c854:	d959      	bls.n	c90a <_malloc_r+0x416>
    c856:	2b54      	cmp	r3, #84	; 0x54
    c858:	f200 809d 	bhi.w	c996 <_malloc_r+0x4a2>
    c85c:	0b33      	lsrs	r3, r6, #12
    c85e:	f103 006f 	add.w	r0, r3, #111	; 0x6f
    c862:	f103 0c6e 	add.w	ip, r3, #110	; 0x6e
    c866:	00c3      	lsls	r3, r0, #3
    c868:	e68a      	b.n	c580 <_malloc_r+0x8c>
    c86a:	f10e 0e01 	add.w	lr, lr, #1
    c86e:	f01e 0f03 	tst.w	lr, #3
    c872:	f105 0508 	add.w	r5, r5, #8
    c876:	f47f aed5 	bne.w	c624 <_malloc_r+0x130>
    c87a:	e051      	b.n	c920 <_malloc_r+0x42c>
    c87c:	4442      	add	r2, r8
    c87e:	4645      	mov	r5, r8
    c880:	6853      	ldr	r3, [r2, #4]
    c882:	f8d8 100c 	ldr.w	r1, [r8, #12]
    c886:	f043 0301 	orr.w	r3, r3, #1
    c88a:	6053      	str	r3, [r2, #4]
    c88c:	f855 3f08 	ldr.w	r3, [r5, #8]!
    c890:	4620      	mov	r0, r4
    c892:	60d9      	str	r1, [r3, #12]
    c894:	608b      	str	r3, [r1, #8]
    c896:	f000 fce5 	bl	d264 <__malloc_unlock>
    c89a:	e6f3      	b.n	c684 <_malloc_r+0x190>
    c89c:	08f0      	lsrs	r0, r6, #3
    c89e:	f106 0208 	add.w	r2, r6, #8
    c8a2:	e637      	b.n	c514 <_malloc_r+0x20>
    c8a4:	442a      	add	r2, r5
    c8a6:	4620      	mov	r0, r4
    c8a8:	6853      	ldr	r3, [r2, #4]
    c8aa:	f043 0301 	orr.w	r3, r3, #1
    c8ae:	6053      	str	r3, [r2, #4]
    c8b0:	3508      	adds	r5, #8
    c8b2:	f000 fcd7 	bl	d264 <__malloc_unlock>
    c8b6:	e6e5      	b.n	c684 <_malloc_r+0x190>
    c8b8:	19a9      	adds	r1, r5, r6
    c8ba:	4620      	mov	r0, r4
    c8bc:	f046 0601 	orr.w	r6, r6, #1
    c8c0:	f043 0401 	orr.w	r4, r3, #1
    c8c4:	606e      	str	r6, [r5, #4]
    c8c6:	e9c7 1104 	strd	r1, r1, [r7, #16]
    c8ca:	e9c1 cc02 	strd	ip, ip, [r1, #8]
    c8ce:	604c      	str	r4, [r1, #4]
    c8d0:	50ab      	str	r3, [r5, r2]
    c8d2:	f000 fcc7 	bl	d264 <__malloc_unlock>
    c8d6:	3508      	adds	r5, #8
    c8d8:	e6d4      	b.n	c684 <_malloc_r+0x190>
    c8da:	0993      	lsrs	r3, r2, #6
    c8dc:	f103 0139 	add.w	r1, r3, #57	; 0x39
    c8e0:	00c9      	lsls	r1, r1, #3
    c8e2:	3338      	adds	r3, #56	; 0x38
    c8e4:	e79c      	b.n	c820 <_malloc_r+0x32c>
    c8e6:	42bd      	cmp	r5, r7
    c8e8:	d05f      	beq.n	c9aa <_malloc_r+0x4b6>
    c8ea:	68bd      	ldr	r5, [r7, #8]
    c8ec:	6868      	ldr	r0, [r5, #4]
    c8ee:	f020 0803 	bic.w	r8, r0, #3
    c8f2:	4546      	cmp	r6, r8
    c8f4:	eba8 0306 	sub.w	r3, r8, r6
    c8f8:	d802      	bhi.n	c900 <_malloc_r+0x40c>
    c8fa:	2b0f      	cmp	r3, #15
    c8fc:	f73f af62 	bgt.w	c7c4 <_malloc_r+0x2d0>
    c900:	4620      	mov	r0, r4
    c902:	f000 fcaf 	bl	d264 <__malloc_unlock>
    c906:	2500      	movs	r5, #0
    c908:	e6bc      	b.n	c684 <_malloc_r+0x190>
    c90a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
    c90e:	f103 0c5b 	add.w	ip, r3, #91	; 0x5b
    c912:	00c3      	lsls	r3, r0, #3
    c914:	e634      	b.n	c580 <_malloc_r+0x8c>
    c916:	f859 3908 	ldr.w	r3, [r9], #-8
    c91a:	454b      	cmp	r3, r9
    c91c:	f040 8096 	bne.w	ca4c <_malloc_r+0x558>
    c920:	f010 0f03 	tst.w	r0, #3
    c924:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
    c928:	d1f5      	bne.n	c916 <_malloc_r+0x422>
    c92a:	687b      	ldr	r3, [r7, #4]
    c92c:	ea23 0301 	bic.w	r3, r3, r1
    c930:	607b      	str	r3, [r7, #4]
    c932:	0049      	lsls	r1, r1, #1
    c934:	4299      	cmp	r1, r3
    c936:	f63f aec0 	bhi.w	c6ba <_malloc_r+0x1c6>
    c93a:	b919      	cbnz	r1, c944 <_malloc_r+0x450>
    c93c:	e6bd      	b.n	c6ba <_malloc_r+0x1c6>
    c93e:	0049      	lsls	r1, r1, #1
    c940:	f10e 0e04 	add.w	lr, lr, #4
    c944:	4219      	tst	r1, r3
    c946:	d0fa      	beq.n	c93e <_malloc_r+0x44a>
    c948:	4670      	mov	r0, lr
    c94a:	e667      	b.n	c61c <_malloc_r+0x128>
    c94c:	f103 0810 	add.w	r8, r3, #16
    c950:	e6d0      	b.n	c6f4 <_malloc_r+0x200>
    c952:	109a      	asrs	r2, r3, #2
    c954:	f04f 0801 	mov.w	r8, #1
    c958:	687b      	ldr	r3, [r7, #4]
    c95a:	fa08 f202 	lsl.w	r2, r8, r2
    c95e:	431a      	orrs	r2, r3
    c960:	607a      	str	r2, [r7, #4]
    c962:	e770      	b.n	c846 <_malloc_r+0x352>
    c964:	eb02 0108 	add.w	r1, r2, r8
    c968:	4249      	negs	r1, r1
    c96a:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
    c96e:	4651      	mov	r1, sl
    c970:	4620      	mov	r0, r4
    c972:	9200      	str	r2, [sp, #0]
    c974:	f002 fe02 	bl	f57c <_sbrk_r>
    c978:	1c43      	adds	r3, r0, #1
    c97a:	e9dd 2300 	ldrd	r2, r3, [sp]
    c97e:	f47f aeef 	bne.w	c760 <_malloc_r+0x26c>
    c982:	46da      	mov	sl, fp
    c984:	e6ef      	b.n	c766 <_malloc_r+0x272>
    c986:	2b54      	cmp	r3, #84	; 0x54
    c988:	d825      	bhi.n	c9d6 <_malloc_r+0x4e2>
    c98a:	0b13      	lsrs	r3, r2, #12
    c98c:	f103 016f 	add.w	r1, r3, #111	; 0x6f
    c990:	00c9      	lsls	r1, r1, #3
    c992:	336e      	adds	r3, #110	; 0x6e
    c994:	e744      	b.n	c820 <_malloc_r+0x32c>
    c996:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    c99a:	d825      	bhi.n	c9e8 <_malloc_r+0x4f4>
    c99c:	0bf3      	lsrs	r3, r6, #15
    c99e:	f103 0078 	add.w	r0, r3, #120	; 0x78
    c9a2:	f103 0c77 	add.w	ip, r3, #119	; 0x77
    c9a6:	00c3      	lsls	r3, r0, #3
    c9a8:	e5ea      	b.n	c580 <_malloc_r+0x8c>
    c9aa:	4b29      	ldr	r3, [pc, #164]	; (ca50 <_malloc_r+0x55c>)
    c9ac:	6818      	ldr	r0, [r3, #0]
    c9ae:	4440      	add	r0, r8
    c9b0:	6018      	str	r0, [r3, #0]
    c9b2:	e6b1      	b.n	c718 <_malloc_r+0x224>
    c9b4:	f3ca 0c0b 	ubfx	ip, sl, #0, #12
    c9b8:	f1bc 0f00 	cmp.w	ip, #0
    c9bc:	f47f aeac 	bne.w	c718 <_malloc_r+0x224>
    c9c0:	68bd      	ldr	r5, [r7, #8]
    c9c2:	44c8      	add	r8, r9
    c9c4:	f048 0001 	orr.w	r0, r8, #1
    c9c8:	6068      	str	r0, [r5, #4]
    c9ca:	e6f0      	b.n	c7ae <_malloc_r+0x2ba>
    c9cc:	4615      	mov	r5, r2
    c9ce:	e6ee      	b.n	c7ae <_malloc_r+0x2ba>
    c9d0:	2301      	movs	r3, #1
    c9d2:	6053      	str	r3, [r2, #4]
    c9d4:	e794      	b.n	c900 <_malloc_r+0x40c>
    c9d6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    c9da:	d823      	bhi.n	ca24 <_malloc_r+0x530>
    c9dc:	0bd3      	lsrs	r3, r2, #15
    c9de:	f103 0178 	add.w	r1, r3, #120	; 0x78
    c9e2:	00c9      	lsls	r1, r1, #3
    c9e4:	3377      	adds	r3, #119	; 0x77
    c9e6:	e71b      	b.n	c820 <_malloc_r+0x32c>
    c9e8:	f240 5254 	movw	r2, #1364	; 0x554
    c9ec:	4293      	cmp	r3, r2
    c9ee:	d823      	bhi.n	ca38 <_malloc_r+0x544>
    c9f0:	0cb3      	lsrs	r3, r6, #18
    c9f2:	f103 007d 	add.w	r0, r3, #125	; 0x7d
    c9f6:	f103 0c7c 	add.w	ip, r3, #124	; 0x7c
    c9fa:	00c3      	lsls	r3, r0, #3
    c9fc:	e5c0      	b.n	c580 <_malloc_r+0x8c>
    c9fe:	f1ab 0b08 	sub.w	fp, fp, #8
    ca02:	44d8      	add	r8, fp
    ca04:	eba8 0802 	sub.w	r8, r8, r2
    ca08:	f04f 0a00 	mov.w	sl, #0
    ca0c:	e6ab      	b.n	c766 <_malloc_r+0x272>
    ca0e:	f105 0108 	add.w	r1, r5, #8
    ca12:	4620      	mov	r0, r4
    ca14:	9300      	str	r3, [sp, #0]
    ca16:	f002 fc1b 	bl	f250 <_free_r>
    ca1a:	68bd      	ldr	r5, [r7, #8]
    ca1c:	9b00      	ldr	r3, [sp, #0]
    ca1e:	6868      	ldr	r0, [r5, #4]
    ca20:	6819      	ldr	r1, [r3, #0]
    ca22:	e6c4      	b.n	c7ae <_malloc_r+0x2ba>
    ca24:	f240 5154 	movw	r1, #1364	; 0x554
    ca28:	428b      	cmp	r3, r1
    ca2a:	d80b      	bhi.n	ca44 <_malloc_r+0x550>
    ca2c:	0c93      	lsrs	r3, r2, #18
    ca2e:	f103 017d 	add.w	r1, r3, #125	; 0x7d
    ca32:	00c9      	lsls	r1, r1, #3
    ca34:	337c      	adds	r3, #124	; 0x7c
    ca36:	e6f3      	b.n	c820 <_malloc_r+0x32c>
    ca38:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
    ca3c:	207f      	movs	r0, #127	; 0x7f
    ca3e:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
    ca42:	e59d      	b.n	c580 <_malloc_r+0x8c>
    ca44:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
    ca48:	237e      	movs	r3, #126	; 0x7e
    ca4a:	e6e9      	b.n	c820 <_malloc_r+0x32c>
    ca4c:	687b      	ldr	r3, [r7, #4]
    ca4e:	e770      	b.n	c932 <_malloc_r+0x43e>
    ca50:	20003a84 	.word	0x20003a84

0000ca54 <memcmp>:
    ca54:	2a03      	cmp	r2, #3
    ca56:	b570      	push	{r4, r5, r6, lr}
    ca58:	d914      	bls.n	ca84 <memcmp+0x30>
    ca5a:	ea40 0301 	orr.w	r3, r0, r1
    ca5e:	079b      	lsls	r3, r3, #30
    ca60:	d122      	bne.n	caa8 <memcmp+0x54>
    ca62:	4604      	mov	r4, r0
    ca64:	460b      	mov	r3, r1
    ca66:	4619      	mov	r1, r3
    ca68:	4620      	mov	r0, r4
    ca6a:	680e      	ldr	r6, [r1, #0]
    ca6c:	6805      	ldr	r5, [r0, #0]
    ca6e:	42b5      	cmp	r5, r6
    ca70:	f104 0404 	add.w	r4, r4, #4
    ca74:	f103 0304 	add.w	r3, r3, #4
    ca78:	d116      	bne.n	caa8 <memcmp+0x54>
    ca7a:	3a04      	subs	r2, #4
    ca7c:	2a03      	cmp	r2, #3
    ca7e:	4620      	mov	r0, r4
    ca80:	4619      	mov	r1, r3
    ca82:	d8f0      	bhi.n	ca66 <memcmp+0x12>
    ca84:	1e54      	subs	r4, r2, #1
    ca86:	b19a      	cbz	r2, cab0 <memcmp+0x5c>
    ca88:	1e42      	subs	r2, r0, #1
    ca8a:	3901      	subs	r1, #1
    ca8c:	e001      	b.n	ca92 <memcmp+0x3e>
    ca8e:	18c3      	adds	r3, r0, r3
    ca90:	d00c      	beq.n	caac <memcmp+0x58>
    ca92:	f812 ef01 	ldrb.w	lr, [r2, #1]!
    ca96:	f811 cf01 	ldrb.w	ip, [r1, #1]!
    ca9a:	45e6      	cmp	lr, ip
    ca9c:	eba4 0302 	sub.w	r3, r4, r2
    caa0:	d0f5      	beq.n	ca8e <memcmp+0x3a>
    caa2:	ebae 000c 	sub.w	r0, lr, ip
    caa6:	bd70      	pop	{r4, r5, r6, pc}
    caa8:	1e54      	subs	r4, r2, #1
    caaa:	e7ed      	b.n	ca88 <memcmp+0x34>
    caac:	4618      	mov	r0, r3
    caae:	bd70      	pop	{r4, r5, r6, pc}
    cab0:	4610      	mov	r0, r2
    cab2:	bd70      	pop	{r4, r5, r6, pc}

0000cab4 <memmove>:
    cab4:	4288      	cmp	r0, r1
    cab6:	d90d      	bls.n	cad4 <memmove+0x20>
    cab8:	188b      	adds	r3, r1, r2
    caba:	4283      	cmp	r3, r0
    cabc:	d90a      	bls.n	cad4 <memmove+0x20>
    cabe:	eb00 0c02 	add.w	ip, r0, r2
    cac2:	b1ba      	cbz	r2, caf4 <memmove+0x40>
    cac4:	4662      	mov	r2, ip
    cac6:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
    caca:	f802 cd01 	strb.w	ip, [r2, #-1]!
    cace:	4299      	cmp	r1, r3
    cad0:	d1f9      	bne.n	cac6 <memmove+0x12>
    cad2:	4770      	bx	lr
    cad4:	2a0f      	cmp	r2, #15
    cad6:	d80e      	bhi.n	caf6 <memmove+0x42>
    cad8:	4603      	mov	r3, r0
    cada:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    cade:	b14a      	cbz	r2, caf4 <memmove+0x40>
    cae0:	f10c 0c01 	add.w	ip, ip, #1
    cae4:	3b01      	subs	r3, #1
    cae6:	448c      	add	ip, r1
    cae8:	f811 2b01 	ldrb.w	r2, [r1], #1
    caec:	f803 2f01 	strb.w	r2, [r3, #1]!
    caf0:	4561      	cmp	r1, ip
    caf2:	d1f9      	bne.n	cae8 <memmove+0x34>
    caf4:	4770      	bx	lr
    caf6:	ea40 0301 	orr.w	r3, r0, r1
    cafa:	079b      	lsls	r3, r3, #30
    cafc:	d150      	bne.n	cba0 <memmove+0xec>
    cafe:	f1a2 0310 	sub.w	r3, r2, #16
    cb02:	b570      	push	{r4, r5, r6, lr}
    cb04:	f101 0c20 	add.w	ip, r1, #32
    cb08:	f023 050f 	bic.w	r5, r3, #15
    cb0c:	f101 0e10 	add.w	lr, r1, #16
    cb10:	f100 0410 	add.w	r4, r0, #16
    cb14:	44ac      	add	ip, r5
    cb16:	091b      	lsrs	r3, r3, #4
    cb18:	f85e 5c10 	ldr.w	r5, [lr, #-16]
    cb1c:	f844 5c10 	str.w	r5, [r4, #-16]
    cb20:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
    cb24:	f844 5c0c 	str.w	r5, [r4, #-12]
    cb28:	f85e 5c08 	ldr.w	r5, [lr, #-8]
    cb2c:	f844 5c08 	str.w	r5, [r4, #-8]
    cb30:	f85e 5c04 	ldr.w	r5, [lr, #-4]
    cb34:	f844 5c04 	str.w	r5, [r4, #-4]
    cb38:	f10e 0e10 	add.w	lr, lr, #16
    cb3c:	45e6      	cmp	lr, ip
    cb3e:	f104 0410 	add.w	r4, r4, #16
    cb42:	d1e9      	bne.n	cb18 <memmove+0x64>
    cb44:	3301      	adds	r3, #1
    cb46:	f012 0f0c 	tst.w	r2, #12
    cb4a:	eb01 1103 	add.w	r1, r1, r3, lsl #4
    cb4e:	f002 040f 	and.w	r4, r2, #15
    cb52:	eb00 1303 	add.w	r3, r0, r3, lsl #4
    cb56:	d027      	beq.n	cba8 <memmove+0xf4>
    cb58:	3c04      	subs	r4, #4
    cb5a:	f024 0603 	bic.w	r6, r4, #3
    cb5e:	ea4f 0c94 	mov.w	ip, r4, lsr #2
    cb62:	441e      	add	r6, r3
    cb64:	1f1c      	subs	r4, r3, #4
    cb66:	468e      	mov	lr, r1
    cb68:	f85e 5b04 	ldr.w	r5, [lr], #4
    cb6c:	f844 5f04 	str.w	r5, [r4, #4]!
    cb70:	42b4      	cmp	r4, r6
    cb72:	d1f9      	bne.n	cb68 <memmove+0xb4>
    cb74:	f10c 0401 	add.w	r4, ip, #1
    cb78:	f002 0203 	and.w	r2, r2, #3
    cb7c:	eb03 0384 	add.w	r3, r3, r4, lsl #2
    cb80:	eb01 0184 	add.w	r1, r1, r4, lsl #2
    cb84:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    cb88:	b14a      	cbz	r2, cb9e <memmove+0xea>
    cb8a:	f10c 0c01 	add.w	ip, ip, #1
    cb8e:	3b01      	subs	r3, #1
    cb90:	448c      	add	ip, r1
    cb92:	f811 2b01 	ldrb.w	r2, [r1], #1
    cb96:	f803 2f01 	strb.w	r2, [r3, #1]!
    cb9a:	4561      	cmp	r1, ip
    cb9c:	d1f9      	bne.n	cb92 <memmove+0xde>
    cb9e:	bd70      	pop	{r4, r5, r6, pc}
    cba0:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    cba4:	4603      	mov	r3, r0
    cba6:	e79b      	b.n	cae0 <memmove+0x2c>
    cba8:	4622      	mov	r2, r4
    cbaa:	e7eb      	b.n	cb84 <memmove+0xd0>

0000cbac <__assert_func>:
    cbac:	b500      	push	{lr}
    cbae:	4c0b      	ldr	r4, [pc, #44]	; (cbdc <__assert_func+0x30>)
    cbb0:	6825      	ldr	r5, [r4, #0]
    cbb2:	4614      	mov	r4, r2
    cbb4:	68ee      	ldr	r6, [r5, #12]
    cbb6:	461a      	mov	r2, r3
    cbb8:	b085      	sub	sp, #20
    cbba:	4603      	mov	r3, r0
    cbbc:	460d      	mov	r5, r1
    cbbe:	b14c      	cbz	r4, cbd4 <__assert_func+0x28>
    cbc0:	4907      	ldr	r1, [pc, #28]	; (cbe0 <__assert_func+0x34>)
    cbc2:	9500      	str	r5, [sp, #0]
    cbc4:	e9cd 1401 	strd	r1, r4, [sp, #4]
    cbc8:	4630      	mov	r0, r6
    cbca:	4906      	ldr	r1, [pc, #24]	; (cbe4 <__assert_func+0x38>)
    cbcc:	f002 fc6e 	bl	f4ac <fiprintf>
    cbd0:	f7f3 fef8 	bl	9c4 <abort>
    cbd4:	4904      	ldr	r1, [pc, #16]	; (cbe8 <__assert_func+0x3c>)
    cbd6:	460c      	mov	r4, r1
    cbd8:	e7f3      	b.n	cbc2 <__assert_func+0x16>
    cbda:	bf00      	nop
    cbdc:	200031b4 	.word	0x200031b4
    cbe0:	200012f4 	.word	0x200012f4
    cbe4:	20001304 	.word	0x20001304
    cbe8:	20001300 	.word	0x20001300

0000cbec <memset>:
    cbec:	0783      	lsls	r3, r0, #30
    cbee:	b530      	push	{r4, r5, lr}
    cbf0:	d048      	beq.n	cc84 <memset+0x98>
    cbf2:	1e54      	subs	r4, r2, #1
    cbf4:	2a00      	cmp	r2, #0
    cbf6:	d03f      	beq.n	cc78 <memset+0x8c>
    cbf8:	b2ca      	uxtb	r2, r1
    cbfa:	4603      	mov	r3, r0
    cbfc:	e001      	b.n	cc02 <memset+0x16>
    cbfe:	3c01      	subs	r4, #1
    cc00:	d33a      	bcc.n	cc78 <memset+0x8c>
    cc02:	f803 2b01 	strb.w	r2, [r3], #1
    cc06:	079d      	lsls	r5, r3, #30
    cc08:	d1f9      	bne.n	cbfe <memset+0x12>
    cc0a:	2c03      	cmp	r4, #3
    cc0c:	d92d      	bls.n	cc6a <memset+0x7e>
    cc0e:	b2cd      	uxtb	r5, r1
    cc10:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
    cc14:	2c0f      	cmp	r4, #15
    cc16:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
    cc1a:	d936      	bls.n	cc8a <memset+0x9e>
    cc1c:	f1a4 0210 	sub.w	r2, r4, #16
    cc20:	f022 0c0f 	bic.w	ip, r2, #15
    cc24:	f103 0e20 	add.w	lr, r3, #32
    cc28:	44e6      	add	lr, ip
    cc2a:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    cc2e:	f103 0210 	add.w	r2, r3, #16
    cc32:	e942 5504 	strd	r5, r5, [r2, #-16]
    cc36:	e942 5502 	strd	r5, r5, [r2, #-8]
    cc3a:	3210      	adds	r2, #16
    cc3c:	4572      	cmp	r2, lr
    cc3e:	d1f8      	bne.n	cc32 <memset+0x46>
    cc40:	f10c 0201 	add.w	r2, ip, #1
    cc44:	f014 0f0c 	tst.w	r4, #12
    cc48:	eb03 1202 	add.w	r2, r3, r2, lsl #4
    cc4c:	f004 0c0f 	and.w	ip, r4, #15
    cc50:	d013      	beq.n	cc7a <memset+0x8e>
    cc52:	f1ac 0304 	sub.w	r3, ip, #4
    cc56:	f023 0303 	bic.w	r3, r3, #3
    cc5a:	3304      	adds	r3, #4
    cc5c:	4413      	add	r3, r2
    cc5e:	f842 5b04 	str.w	r5, [r2], #4
    cc62:	4293      	cmp	r3, r2
    cc64:	d1fb      	bne.n	cc5e <memset+0x72>
    cc66:	f00c 0403 	and.w	r4, ip, #3
    cc6a:	b12c      	cbz	r4, cc78 <memset+0x8c>
    cc6c:	b2c9      	uxtb	r1, r1
    cc6e:	441c      	add	r4, r3
    cc70:	f803 1b01 	strb.w	r1, [r3], #1
    cc74:	429c      	cmp	r4, r3
    cc76:	d1fb      	bne.n	cc70 <memset+0x84>
    cc78:	bd30      	pop	{r4, r5, pc}
    cc7a:	4664      	mov	r4, ip
    cc7c:	4613      	mov	r3, r2
    cc7e:	2c00      	cmp	r4, #0
    cc80:	d1f4      	bne.n	cc6c <memset+0x80>
    cc82:	e7f9      	b.n	cc78 <memset+0x8c>
    cc84:	4603      	mov	r3, r0
    cc86:	4614      	mov	r4, r2
    cc88:	e7bf      	b.n	cc0a <memset+0x1e>
    cc8a:	461a      	mov	r2, r3
    cc8c:	46a4      	mov	ip, r4
    cc8e:	e7e0      	b.n	cc52 <memset+0x66>

0000cc90 <__cxa_atexit>:
    cc90:	4613      	mov	r3, r2
    cc92:	460a      	mov	r2, r1
    cc94:	4601      	mov	r1, r0
    cc96:	2002      	movs	r0, #2
    cc98:	f003 bdd6 	b.w	10848 <__register_exitproc>

0000cc9c <_wcrtomb_r>:
    cc9c:	b570      	push	{r4, r5, r6, lr}
    cc9e:	4605      	mov	r5, r0
    cca0:	b084      	sub	sp, #16
    cca2:	b15b      	cbz	r3, ccbc <_wcrtomb_r+0x20>
    cca4:	461c      	mov	r4, r3
    cca6:	b169      	cbz	r1, ccc4 <_wcrtomb_r+0x28>
    cca8:	4b0e      	ldr	r3, [pc, #56]	; (cce4 <_wcrtomb_r+0x48>)
    ccaa:	4628      	mov	r0, r5
    ccac:	f8d3 60e0 	ldr.w	r6, [r3, #224]	; 0xe0
    ccb0:	4623      	mov	r3, r4
    ccb2:	47b0      	blx	r6
    ccb4:	1c43      	adds	r3, r0, #1
    ccb6:	d00f      	beq.n	ccd8 <_wcrtomb_r+0x3c>
    ccb8:	b004      	add	sp, #16
    ccba:	bd70      	pop	{r4, r5, r6, pc}
    ccbc:	f500 7482 	add.w	r4, r0, #260	; 0x104
    ccc0:	2900      	cmp	r1, #0
    ccc2:	d1f1      	bne.n	cca8 <_wcrtomb_r+0xc>
    ccc4:	4a07      	ldr	r2, [pc, #28]	; (cce4 <_wcrtomb_r+0x48>)
    ccc6:	4623      	mov	r3, r4
    ccc8:	f8d2 60e0 	ldr.w	r6, [r2, #224]	; 0xe0
    cccc:	4628      	mov	r0, r5
    ccce:	460a      	mov	r2, r1
    ccd0:	a901      	add	r1, sp, #4
    ccd2:	47b0      	blx	r6
    ccd4:	1c43      	adds	r3, r0, #1
    ccd6:	d1ef      	bne.n	ccb8 <_wcrtomb_r+0x1c>
    ccd8:	2200      	movs	r2, #0
    ccda:	238a      	movs	r3, #138	; 0x8a
    ccdc:	6022      	str	r2, [r4, #0]
    ccde:	602b      	str	r3, [r5, #0]
    cce0:	b004      	add	sp, #16
    cce2:	bd70      	pop	{r4, r5, r6, pc}
    cce4:	20002c2c 	.word	0x20002c2c

0000cce8 <__libc_init_array>:
    cce8:	b570      	push	{r4, r5, r6, lr}
    ccea:	4e0d      	ldr	r6, [pc, #52]	; (cd20 <__libc_init_array+0x38>)
    ccec:	4d0d      	ldr	r5, [pc, #52]	; (cd24 <__libc_init_array+0x3c>)
    ccee:	1b76      	subs	r6, r6, r5
    ccf0:	10b6      	asrs	r6, r6, #2
    ccf2:	d006      	beq.n	cd02 <__libc_init_array+0x1a>
    ccf4:	2400      	movs	r4, #0
    ccf6:	f855 3b04 	ldr.w	r3, [r5], #4
    ccfa:	3401      	adds	r4, #1
    ccfc:	4798      	blx	r3
    ccfe:	42a6      	cmp	r6, r4
    cd00:	d1f9      	bne.n	ccf6 <__libc_init_array+0xe>
    cd02:	4e09      	ldr	r6, [pc, #36]	; (cd28 <__libc_init_array+0x40>)
    cd04:	4d09      	ldr	r5, [pc, #36]	; (cd2c <__libc_init_array+0x44>)
    cd06:	1b76      	subs	r6, r6, r5
    cd08:	f003 ffae 	bl	10c68 <___init_veneer>
    cd0c:	10b6      	asrs	r6, r6, #2
    cd0e:	d006      	beq.n	cd1e <__libc_init_array+0x36>
    cd10:	2400      	movs	r4, #0
    cd12:	f855 3b04 	ldr.w	r3, [r5], #4
    cd16:	3401      	adds	r4, #1
    cd18:	4798      	blx	r3
    cd1a:	42a6      	cmp	r6, r4
    cd1c:	d1f9      	bne.n	cd12 <__libc_init_array+0x2a>
    cd1e:	bd70      	pop	{r4, r5, r6, pc}
    cd20:	60001e80 	.word	0x60001e80
    cd24:	60001e80 	.word	0x60001e80
    cd28:	60001e8c 	.word	0x60001e8c
    cd2c:	60001e80 	.word	0x60001e80

0000cd30 <__retarget_lock_init_recursive>:
    cd30:	4770      	bx	lr
    cd32:	bf00      	nop

0000cd34 <__retarget_lock_close_recursive>:
    cd34:	4770      	bx	lr
    cd36:	bf00      	nop

0000cd38 <__retarget_lock_acquire_recursive>:
    cd38:	4770      	bx	lr
    cd3a:	bf00      	nop

0000cd3c <__retarget_lock_release_recursive>:
    cd3c:	4770      	bx	lr
    cd3e:	bf00      	nop

0000cd40 <__locale_mb_cur_max>:
    cd40:	4b01      	ldr	r3, [pc, #4]	; (cd48 <__locale_mb_cur_max+0x8>)
    cd42:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
    cd46:	4770      	bx	lr
    cd48:	20002c2c 	.word	0x20002c2c

0000cd4c <_localeconv_r>:
    cd4c:	4800      	ldr	r0, [pc, #0]	; (cd50 <_localeconv_r+0x4>)
    cd4e:	4770      	bx	lr
    cd50:	20002d1c 	.word	0x20002d1c
	...
    cd60:	eba2 0003 	sub.w	r0, r2, r3
    cd64:	4770      	bx	lr
    cd66:	bf00      	nop

0000cd68 <strcmp>:
    cd68:	7802      	ldrb	r2, [r0, #0]
    cd6a:	780b      	ldrb	r3, [r1, #0]
    cd6c:	2a01      	cmp	r2, #1
    cd6e:	bf28      	it	cs
    cd70:	429a      	cmpcs	r2, r3
    cd72:	d1f5      	bne.n	cd60 <_localeconv_r+0x14>
    cd74:	e96d 4504 	strd	r4, r5, [sp, #-16]!
    cd78:	ea40 0401 	orr.w	r4, r0, r1
    cd7c:	e9cd 6702 	strd	r6, r7, [sp, #8]
    cd80:	f06f 0c00 	mvn.w	ip, #0
    cd84:	ea4f 7244 	mov.w	r2, r4, lsl #29
    cd88:	b312      	cbz	r2, cdd0 <strcmp+0x68>
    cd8a:	ea80 0401 	eor.w	r4, r0, r1
    cd8e:	f014 0f07 	tst.w	r4, #7
    cd92:	d16a      	bne.n	ce6a <strcmp+0x102>
    cd94:	f000 0407 	and.w	r4, r0, #7
    cd98:	f020 0007 	bic.w	r0, r0, #7
    cd9c:	f004 0503 	and.w	r5, r4, #3
    cda0:	f021 0107 	bic.w	r1, r1, #7
    cda4:	ea4f 05c5 	mov.w	r5, r5, lsl #3
    cda8:	e8f0 2304 	ldrd	r2, r3, [r0], #16
    cdac:	f014 0f04 	tst.w	r4, #4
    cdb0:	e8f1 6704 	ldrd	r6, r7, [r1], #16
    cdb4:	fa0c f405 	lsl.w	r4, ip, r5
    cdb8:	ea62 0204 	orn	r2, r2, r4
    cdbc:	ea66 0604 	orn	r6, r6, r4
    cdc0:	d00a      	beq.n	cdd8 <strcmp+0x70>
    cdc2:	ea63 0304 	orn	r3, r3, r4
    cdc6:	4662      	mov	r2, ip
    cdc8:	ea67 0704 	orn	r7, r7, r4
    cdcc:	4666      	mov	r6, ip
    cdce:	e003      	b.n	cdd8 <strcmp+0x70>
    cdd0:	e8f0 2304 	ldrd	r2, r3, [r0], #16
    cdd4:	e8f1 6704 	ldrd	r6, r7, [r1], #16
    cdd8:	fa82 f54c 	uadd8	r5, r2, ip
    cddc:	ea82 0406 	eor.w	r4, r2, r6
    cde0:	faa4 f48c 	sel	r4, r4, ip
    cde4:	bb6c      	cbnz	r4, ce42 <strcmp+0xda>
    cde6:	fa83 f54c 	uadd8	r5, r3, ip
    cdea:	ea83 0507 	eor.w	r5, r3, r7
    cdee:	faa5 f58c 	sel	r5, r5, ip
    cdf2:	b995      	cbnz	r5, ce1a <strcmp+0xb2>
    cdf4:	e950 2302 	ldrd	r2, r3, [r0, #-8]
    cdf8:	e951 6702 	ldrd	r6, r7, [r1, #-8]
    cdfc:	fa82 f54c 	uadd8	r5, r2, ip
    ce00:	ea82 0406 	eor.w	r4, r2, r6
    ce04:	faa4 f48c 	sel	r4, r4, ip
    ce08:	fa83 f54c 	uadd8	r5, r3, ip
    ce0c:	ea83 0507 	eor.w	r5, r3, r7
    ce10:	faa5 f58c 	sel	r5, r5, ip
    ce14:	4325      	orrs	r5, r4
    ce16:	d0db      	beq.n	cdd0 <strcmp+0x68>
    ce18:	b99c      	cbnz	r4, ce42 <strcmp+0xda>
    ce1a:	ba2d      	rev	r5, r5
    ce1c:	fab5 f485 	clz	r4, r5
    ce20:	f024 0407 	bic.w	r4, r4, #7
    ce24:	fa27 f104 	lsr.w	r1, r7, r4
    ce28:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
    ce2c:	fa23 f304 	lsr.w	r3, r3, r4
    ce30:	f003 00ff 	and.w	r0, r3, #255	; 0xff
    ce34:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    ce38:	e8fd 4504 	ldrd	r4, r5, [sp], #16
    ce3c:	eba0 0001 	sub.w	r0, r0, r1
    ce40:	4770      	bx	lr
    ce42:	ba24      	rev	r4, r4
    ce44:	fab4 f484 	clz	r4, r4
    ce48:	f024 0407 	bic.w	r4, r4, #7
    ce4c:	fa26 f104 	lsr.w	r1, r6, r4
    ce50:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
    ce54:	fa22 f204 	lsr.w	r2, r2, r4
    ce58:	f002 00ff 	and.w	r0, r2, #255	; 0xff
    ce5c:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    ce60:	e8fd 4504 	ldrd	r4, r5, [sp], #16
    ce64:	eba0 0001 	sub.w	r0, r0, r1
    ce68:	4770      	bx	lr
    ce6a:	f014 0f03 	tst.w	r4, #3
    ce6e:	d13c      	bne.n	ceea <strcmp+0x182>
    ce70:	f010 0403 	ands.w	r4, r0, #3
    ce74:	d128      	bne.n	cec8 <strcmp+0x160>
    ce76:	f850 2b08 	ldr.w	r2, [r0], #8
    ce7a:	f851 3b08 	ldr.w	r3, [r1], #8
    ce7e:	fa82 f54c 	uadd8	r5, r2, ip
    ce82:	ea82 0503 	eor.w	r5, r2, r3
    ce86:	faa5 f58c 	sel	r5, r5, ip
    ce8a:	b95d      	cbnz	r5, cea4 <strcmp+0x13c>
    ce8c:	f850 2c04 	ldr.w	r2, [r0, #-4]
    ce90:	f851 3c04 	ldr.w	r3, [r1, #-4]
    ce94:	fa82 f54c 	uadd8	r5, r2, ip
    ce98:	ea82 0503 	eor.w	r5, r2, r3
    ce9c:	faa5 f58c 	sel	r5, r5, ip
    cea0:	2d00      	cmp	r5, #0
    cea2:	d0e8      	beq.n	ce76 <strcmp+0x10e>
    cea4:	ba2d      	rev	r5, r5
    cea6:	fab5 f485 	clz	r4, r5
    ceaa:	f024 0407 	bic.w	r4, r4, #7
    ceae:	fa23 f104 	lsr.w	r1, r3, r4
    ceb2:	fa22 f204 	lsr.w	r2, r2, r4
    ceb6:	f002 00ff 	and.w	r0, r2, #255	; 0xff
    ceba:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    cebe:	e8fd 4504 	ldrd	r4, r5, [sp], #16
    cec2:	eba0 0001 	sub.w	r0, r0, r1
    cec6:	4770      	bx	lr
    cec8:	ea4f 04c4 	mov.w	r4, r4, lsl #3
    cecc:	f020 0003 	bic.w	r0, r0, #3
    ced0:	f850 2b08 	ldr.w	r2, [r0], #8
    ced4:	f021 0103 	bic.w	r1, r1, #3
    ced8:	f851 3b08 	ldr.w	r3, [r1], #8
    cedc:	fa0c f404 	lsl.w	r4, ip, r4
    cee0:	ea62 0204 	orn	r2, r2, r4
    cee4:	ea63 0304 	orn	r3, r3, r4
    cee8:	e7c9      	b.n	ce7e <strcmp+0x116>
    ceea:	f010 0403 	ands.w	r4, r0, #3
    ceee:	d01a      	beq.n	cf26 <strcmp+0x1be>
    cef0:	eba1 0104 	sub.w	r1, r1, r4
    cef4:	f020 0003 	bic.w	r0, r0, #3
    cef8:	07e4      	lsls	r4, r4, #31
    cefa:	f850 2b04 	ldr.w	r2, [r0], #4
    cefe:	d006      	beq.n	cf0e <strcmp+0x1a6>
    cf00:	d20f      	bcs.n	cf22 <strcmp+0x1ba>
    cf02:	788b      	ldrb	r3, [r1, #2]
    cf04:	fa5f f4a2 	uxtb.w	r4, r2, ror #16
    cf08:	1ae4      	subs	r4, r4, r3
    cf0a:	d106      	bne.n	cf1a <strcmp+0x1b2>
    cf0c:	b12b      	cbz	r3, cf1a <strcmp+0x1b2>
    cf0e:	78cb      	ldrb	r3, [r1, #3]
    cf10:	fa5f f4b2 	uxtb.w	r4, r2, ror #24
    cf14:	1ae4      	subs	r4, r4, r3
    cf16:	d100      	bne.n	cf1a <strcmp+0x1b2>
    cf18:	b91b      	cbnz	r3, cf22 <strcmp+0x1ba>
    cf1a:	4620      	mov	r0, r4
    cf1c:	f85d 4b10 	ldr.w	r4, [sp], #16
    cf20:	4770      	bx	lr
    cf22:	f101 0104 	add.w	r1, r1, #4
    cf26:	f850 2b04 	ldr.w	r2, [r0], #4
    cf2a:	07cc      	lsls	r4, r1, #31
    cf2c:	f021 0103 	bic.w	r1, r1, #3
    cf30:	f851 3b04 	ldr.w	r3, [r1], #4
    cf34:	d848      	bhi.n	cfc8 <strcmp+0x260>
    cf36:	d224      	bcs.n	cf82 <strcmp+0x21a>
    cf38:	f022 447f 	bic.w	r4, r2, #4278190080	; 0xff000000
    cf3c:	fa82 f54c 	uadd8	r5, r2, ip
    cf40:	ea94 2513 	eors.w	r5, r4, r3, lsr #8
    cf44:	faa5 f58c 	sel	r5, r5, ip
    cf48:	d10a      	bne.n	cf60 <strcmp+0x1f8>
    cf4a:	b965      	cbnz	r5, cf66 <strcmp+0x1fe>
    cf4c:	f851 3b04 	ldr.w	r3, [r1], #4
    cf50:	ea84 0402 	eor.w	r4, r4, r2
    cf54:	ebb4 6f03 	cmp.w	r4, r3, lsl #24
    cf58:	d10e      	bne.n	cf78 <strcmp+0x210>
    cf5a:	f850 2b04 	ldr.w	r2, [r0], #4
    cf5e:	e7eb      	b.n	cf38 <strcmp+0x1d0>
    cf60:	ea4f 2313 	mov.w	r3, r3, lsr #8
    cf64:	e055      	b.n	d012 <strcmp+0x2aa>
    cf66:	f035 457f 	bics.w	r5, r5, #4278190080	; 0xff000000
    cf6a:	d14d      	bne.n	d008 <strcmp+0x2a0>
    cf6c:	7808      	ldrb	r0, [r1, #0]
    cf6e:	e8fd 4504 	ldrd	r4, r5, [sp], #16
    cf72:	f1c0 0000 	rsb	r0, r0, #0
    cf76:	4770      	bx	lr
    cf78:	ea4f 6212 	mov.w	r2, r2, lsr #24
    cf7c:	f003 03ff 	and.w	r3, r3, #255	; 0xff
    cf80:	e047      	b.n	d012 <strcmp+0x2aa>
    cf82:	ea02 441c 	and.w	r4, r2, ip, lsr #16
    cf86:	fa82 f54c 	uadd8	r5, r2, ip
    cf8a:	ea94 4513 	eors.w	r5, r4, r3, lsr #16
    cf8e:	faa5 f58c 	sel	r5, r5, ip
    cf92:	d10a      	bne.n	cfaa <strcmp+0x242>
    cf94:	b965      	cbnz	r5, cfb0 <strcmp+0x248>
    cf96:	f851 3b04 	ldr.w	r3, [r1], #4
    cf9a:	ea84 0402 	eor.w	r4, r4, r2
    cf9e:	ebb4 4f03 	cmp.w	r4, r3, lsl #16
    cfa2:	d10c      	bne.n	cfbe <strcmp+0x256>
    cfa4:	f850 2b04 	ldr.w	r2, [r0], #4
    cfa8:	e7eb      	b.n	cf82 <strcmp+0x21a>
    cfaa:	ea4f 4313 	mov.w	r3, r3, lsr #16
    cfae:	e030      	b.n	d012 <strcmp+0x2aa>
    cfb0:	ea15 451c 	ands.w	r5, r5, ip, lsr #16
    cfb4:	d128      	bne.n	d008 <strcmp+0x2a0>
    cfb6:	880b      	ldrh	r3, [r1, #0]
    cfb8:	ea4f 4212 	mov.w	r2, r2, lsr #16
    cfbc:	e029      	b.n	d012 <strcmp+0x2aa>
    cfbe:	ea4f 4212 	mov.w	r2, r2, lsr #16
    cfc2:	ea03 431c 	and.w	r3, r3, ip, lsr #16
    cfc6:	e024      	b.n	d012 <strcmp+0x2aa>
    cfc8:	f002 04ff 	and.w	r4, r2, #255	; 0xff
    cfcc:	fa82 f54c 	uadd8	r5, r2, ip
    cfd0:	ea94 6513 	eors.w	r5, r4, r3, lsr #24
    cfd4:	faa5 f58c 	sel	r5, r5, ip
    cfd8:	d10a      	bne.n	cff0 <strcmp+0x288>
    cfda:	b965      	cbnz	r5, cff6 <strcmp+0x28e>
    cfdc:	f851 3b04 	ldr.w	r3, [r1], #4
    cfe0:	ea84 0402 	eor.w	r4, r4, r2
    cfe4:	ebb4 2f03 	cmp.w	r4, r3, lsl #8
    cfe8:	d109      	bne.n	cffe <strcmp+0x296>
    cfea:	f850 2b04 	ldr.w	r2, [r0], #4
    cfee:	e7eb      	b.n	cfc8 <strcmp+0x260>
    cff0:	ea4f 6313 	mov.w	r3, r3, lsr #24
    cff4:	e00d      	b.n	d012 <strcmp+0x2aa>
    cff6:	f015 0fff 	tst.w	r5, #255	; 0xff
    cffa:	d105      	bne.n	d008 <strcmp+0x2a0>
    cffc:	680b      	ldr	r3, [r1, #0]
    cffe:	ea4f 2212 	mov.w	r2, r2, lsr #8
    d002:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
    d006:	e004      	b.n	d012 <strcmp+0x2aa>
    d008:	f04f 0000 	mov.w	r0, #0
    d00c:	e8fd 4504 	ldrd	r4, r5, [sp], #16
    d010:	4770      	bx	lr
    d012:	ba12      	rev	r2, r2
    d014:	ba1b      	rev	r3, r3
    d016:	fa82 f44c 	uadd8	r4, r2, ip
    d01a:	ea82 0403 	eor.w	r4, r2, r3
    d01e:	faa4 f58c 	sel	r5, r4, ip
    d022:	fab5 f485 	clz	r4, r5
    d026:	fa02 f204 	lsl.w	r2, r2, r4
    d02a:	fa03 f304 	lsl.w	r3, r3, r4
    d02e:	ea4f 6012 	mov.w	r0, r2, lsr #24
    d032:	e8fd 4504 	ldrd	r4, r5, [sp], #16
    d036:	eba0 6013 	sub.w	r0, r0, r3, lsr #24
    d03a:	4770      	bx	lr

0000d03c <__swsetup_r>:
    d03c:	b538      	push	{r3, r4, r5, lr}
    d03e:	4b31      	ldr	r3, [pc, #196]	; (d104 <__swsetup_r+0xc8>)
    d040:	681b      	ldr	r3, [r3, #0]
    d042:	4605      	mov	r5, r0
    d044:	460c      	mov	r4, r1
    d046:	b113      	cbz	r3, d04e <__swsetup_r+0x12>
    d048:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    d04a:	2a00      	cmp	r2, #0
    d04c:	d04e      	beq.n	d0ec <__swsetup_r+0xb0>
    d04e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    d052:	0718      	lsls	r0, r3, #28
    d054:	b29a      	uxth	r2, r3
    d056:	d51c      	bpl.n	d092 <__swsetup_r+0x56>
    d058:	6921      	ldr	r1, [r4, #16]
    d05a:	b329      	cbz	r1, d0a8 <__swsetup_r+0x6c>
    d05c:	f012 0001 	ands.w	r0, r2, #1
    d060:	d007      	beq.n	d072 <__swsetup_r+0x36>
    d062:	2000      	movs	r0, #0
    d064:	60a0      	str	r0, [r4, #8]
    d066:	6960      	ldr	r0, [r4, #20]
    d068:	4240      	negs	r0, r0
    d06a:	61a0      	str	r0, [r4, #24]
    d06c:	b139      	cbz	r1, d07e <__swsetup_r+0x42>
    d06e:	2000      	movs	r0, #0
    d070:	bd38      	pop	{r3, r4, r5, pc}
    d072:	0795      	lsls	r5, r2, #30
    d074:	bf58      	it	pl
    d076:	6960      	ldrpl	r0, [r4, #20]
    d078:	60a0      	str	r0, [r4, #8]
    d07a:	2900      	cmp	r1, #0
    d07c:	d1f7      	bne.n	d06e <__swsetup_r+0x32>
    d07e:	0612      	lsls	r2, r2, #24
    d080:	bf58      	it	pl
    d082:	4608      	movpl	r0, r1
    d084:	d5f4      	bpl.n	d070 <__swsetup_r+0x34>
    d086:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    d08a:	81a3      	strh	r3, [r4, #12]
    d08c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d090:	bd38      	pop	{r3, r4, r5, pc}
    d092:	06d1      	lsls	r1, r2, #27
    d094:	d52e      	bpl.n	d0f4 <__swsetup_r+0xb8>
    d096:	0752      	lsls	r2, r2, #29
    d098:	d414      	bmi.n	d0c4 <__swsetup_r+0x88>
    d09a:	6921      	ldr	r1, [r4, #16]
    d09c:	f043 0308 	orr.w	r3, r3, #8
    d0a0:	81a3      	strh	r3, [r4, #12]
    d0a2:	b29a      	uxth	r2, r3
    d0a4:	2900      	cmp	r1, #0
    d0a6:	d1d9      	bne.n	d05c <__swsetup_r+0x20>
    d0a8:	f402 7020 	and.w	r0, r2, #640	; 0x280
    d0ac:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
    d0b0:	d0d4      	beq.n	d05c <__swsetup_r+0x20>
    d0b2:	4621      	mov	r1, r4
    d0b4:	4628      	mov	r0, r5
    d0b6:	f000 f827 	bl	d108 <__smakebuf_r>
    d0ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    d0be:	6921      	ldr	r1, [r4, #16]
    d0c0:	b29a      	uxth	r2, r3
    d0c2:	e7cb      	b.n	d05c <__swsetup_r+0x20>
    d0c4:	6b21      	ldr	r1, [r4, #48]	; 0x30
    d0c6:	b151      	cbz	r1, d0de <__swsetup_r+0xa2>
    d0c8:	f104 0240 	add.w	r2, r4, #64	; 0x40
    d0cc:	4291      	cmp	r1, r2
    d0ce:	d004      	beq.n	d0da <__swsetup_r+0x9e>
    d0d0:	4628      	mov	r0, r5
    d0d2:	f002 f8bd 	bl	f250 <_free_r>
    d0d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    d0da:	2200      	movs	r2, #0
    d0dc:	6322      	str	r2, [r4, #48]	; 0x30
    d0de:	6921      	ldr	r1, [r4, #16]
    d0e0:	2200      	movs	r2, #0
    d0e2:	e9c4 1200 	strd	r1, r2, [r4]
    d0e6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
    d0ea:	e7d7      	b.n	d09c <__swsetup_r+0x60>
    d0ec:	4618      	mov	r0, r3
    d0ee:	f001 fd43 	bl	eb78 <__sinit>
    d0f2:	e7ac      	b.n	d04e <__swsetup_r+0x12>
    d0f4:	2209      	movs	r2, #9
    d0f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    d0fa:	602a      	str	r2, [r5, #0]
    d0fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d100:	81a3      	strh	r3, [r4, #12]
    d102:	bd38      	pop	{r3, r4, r5, pc}
    d104:	200031b4 	.word	0x200031b4

0000d108 <__smakebuf_r>:
    d108:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d10c:	898b      	ldrh	r3, [r1, #12]
    d10e:	460c      	mov	r4, r1
    d110:	0799      	lsls	r1, r3, #30
    d112:	b096      	sub	sp, #88	; 0x58
    d114:	d508      	bpl.n	d128 <__smakebuf_r+0x20>
    d116:	f104 0343 	add.w	r3, r4, #67	; 0x43
    d11a:	2201      	movs	r2, #1
    d11c:	e9c4 3204 	strd	r3, r2, [r4, #16]
    d120:	6023      	str	r3, [r4, #0]
    d122:	b016      	add	sp, #88	; 0x58
    d124:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d128:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    d12c:	2900      	cmp	r1, #0
    d12e:	4606      	mov	r6, r0
    d130:	db25      	blt.n	d17e <__smakebuf_r+0x76>
    d132:	466a      	mov	r2, sp
    d134:	f002 f992 	bl	f45c <_fstat_r>
    d138:	2800      	cmp	r0, #0
    d13a:	db1f      	blt.n	d17c <__smakebuf_r+0x74>
    d13c:	9d01      	ldr	r5, [sp, #4]
    d13e:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
    d142:	f5a5 5500 	sub.w	r5, r5, #8192	; 0x2000
    d146:	fab5 f585 	clz	r5, r5
    d14a:	f44f 6880 	mov.w	r8, #1024	; 0x400
    d14e:	096d      	lsrs	r5, r5, #5
    d150:	f44f 6700 	mov.w	r7, #2048	; 0x800
    d154:	4641      	mov	r1, r8
    d156:	4630      	mov	r0, r6
    d158:	f7ff f9cc 	bl	c4f4 <_malloc_r>
    d15c:	b1e0      	cbz	r0, d198 <__smakebuf_r+0x90>
    d15e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    d162:	f8c4 8014 	str.w	r8, [r4, #20]
    d166:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    d16a:	6020      	str	r0, [r4, #0]
    d16c:	6120      	str	r0, [r4, #16]
    d16e:	81a3      	strh	r3, [r4, #12]
    d170:	bb35      	cbnz	r5, d1c0 <__smakebuf_r+0xb8>
    d172:	433b      	orrs	r3, r7
    d174:	81a3      	strh	r3, [r4, #12]
    d176:	b016      	add	sp, #88	; 0x58
    d178:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d17c:	89a3      	ldrh	r3, [r4, #12]
    d17e:	f013 0580 	ands.w	r5, r3, #128	; 0x80
    d182:	d019      	beq.n	d1b8 <__smakebuf_r+0xb0>
    d184:	f04f 0840 	mov.w	r8, #64	; 0x40
    d188:	2500      	movs	r5, #0
    d18a:	4641      	mov	r1, r8
    d18c:	4630      	mov	r0, r6
    d18e:	462f      	mov	r7, r5
    d190:	f7ff f9b0 	bl	c4f4 <_malloc_r>
    d194:	2800      	cmp	r0, #0
    d196:	d1e2      	bne.n	d15e <__smakebuf_r+0x56>
    d198:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    d19c:	059a      	lsls	r2, r3, #22
    d19e:	d4c0      	bmi.n	d122 <__smakebuf_r+0x1a>
    d1a0:	f023 0303 	bic.w	r3, r3, #3
    d1a4:	f104 0243 	add.w	r2, r4, #67	; 0x43
    d1a8:	f043 0302 	orr.w	r3, r3, #2
    d1ac:	2101      	movs	r1, #1
    d1ae:	e9c4 2104 	strd	r2, r1, [r4, #16]
    d1b2:	81a3      	strh	r3, [r4, #12]
    d1b4:	6022      	str	r2, [r4, #0]
    d1b6:	e7b4      	b.n	d122 <__smakebuf_r+0x1a>
    d1b8:	f44f 6880 	mov.w	r8, #1024	; 0x400
    d1bc:	462f      	mov	r7, r5
    d1be:	e7c9      	b.n	d154 <__smakebuf_r+0x4c>
    d1c0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    d1c4:	4630      	mov	r0, r6
    d1c6:	f002 f95f 	bl	f488 <_isatty_r>
    d1ca:	b910      	cbnz	r0, d1d2 <__smakebuf_r+0xca>
    d1cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    d1d0:	e7cf      	b.n	d172 <__smakebuf_r+0x6a>
    d1d2:	89a3      	ldrh	r3, [r4, #12]
    d1d4:	f023 0303 	bic.w	r3, r3, #3
    d1d8:	f043 0301 	orr.w	r3, r3, #1
    d1dc:	b21b      	sxth	r3, r3
    d1de:	e7c8      	b.n	d172 <__smakebuf_r+0x6a>

0000d1e0 <_putc_r>:
    d1e0:	b570      	push	{r4, r5, r6, lr}
    d1e2:	460e      	mov	r6, r1
    d1e4:	4614      	mov	r4, r2
    d1e6:	4605      	mov	r5, r0
    d1e8:	b110      	cbz	r0, d1f0 <_putc_r+0x10>
    d1ea:	6b43      	ldr	r3, [r0, #52]	; 0x34
    d1ec:	2b00      	cmp	r3, #0
    d1ee:	d02f      	beq.n	d250 <_putc_r+0x70>
    d1f0:	6e63      	ldr	r3, [r4, #100]	; 0x64
    d1f2:	07d8      	lsls	r0, r3, #31
    d1f4:	d402      	bmi.n	d1fc <_putc_r+0x1c>
    d1f6:	89a3      	ldrh	r3, [r4, #12]
    d1f8:	0599      	lsls	r1, r3, #22
    d1fa:	d520      	bpl.n	d23e <_putc_r+0x5e>
    d1fc:	68a3      	ldr	r3, [r4, #8]
    d1fe:	3b01      	subs	r3, #1
    d200:	2b00      	cmp	r3, #0
    d202:	60a3      	str	r3, [r4, #8]
    d204:	da19      	bge.n	d23a <_putc_r+0x5a>
    d206:	69a2      	ldr	r2, [r4, #24]
    d208:	4293      	cmp	r3, r2
    d20a:	db0f      	blt.n	d22c <_putc_r+0x4c>
    d20c:	b2f0      	uxtb	r0, r6
    d20e:	280a      	cmp	r0, #10
    d210:	d00c      	beq.n	d22c <_putc_r+0x4c>
    d212:	6823      	ldr	r3, [r4, #0]
    d214:	1c5a      	adds	r2, r3, #1
    d216:	6022      	str	r2, [r4, #0]
    d218:	4605      	mov	r5, r0
    d21a:	701e      	strb	r6, [r3, #0]
    d21c:	6e63      	ldr	r3, [r4, #100]	; 0x64
    d21e:	07da      	lsls	r2, r3, #31
    d220:	d402      	bmi.n	d228 <_putc_r+0x48>
    d222:	89a3      	ldrh	r3, [r4, #12]
    d224:	059b      	lsls	r3, r3, #22
    d226:	d50e      	bpl.n	d246 <_putc_r+0x66>
    d228:	4628      	mov	r0, r5
    d22a:	bd70      	pop	{r4, r5, r6, pc}
    d22c:	4628      	mov	r0, r5
    d22e:	4622      	mov	r2, r4
    d230:	4631      	mov	r1, r6
    d232:	f003 fab1 	bl	10798 <__swbuf_r>
    d236:	4605      	mov	r5, r0
    d238:	e7f0      	b.n	d21c <_putc_r+0x3c>
    d23a:	b2f0      	uxtb	r0, r6
    d23c:	e7e9      	b.n	d212 <_putc_r+0x32>
    d23e:	6da0      	ldr	r0, [r4, #88]	; 0x58
    d240:	f7ff fd7a 	bl	cd38 <__retarget_lock_acquire_recursive>
    d244:	e7da      	b.n	d1fc <_putc_r+0x1c>
    d246:	6da0      	ldr	r0, [r4, #88]	; 0x58
    d248:	f7ff fd78 	bl	cd3c <__retarget_lock_release_recursive>
    d24c:	4628      	mov	r0, r5
    d24e:	bd70      	pop	{r4, r5, r6, pc}
    d250:	f001 fc92 	bl	eb78 <__sinit>
    d254:	e7cc      	b.n	d1f0 <_putc_r+0x10>
    d256:	bf00      	nop

0000d258 <__malloc_lock>:
    d258:	4801      	ldr	r0, [pc, #4]	; (d260 <__malloc_lock+0x8>)
    d25a:	f7ff bd6d 	b.w	cd38 <__retarget_lock_acquire_recursive>
    d25e:	bf00      	nop
    d260:	20003a7c 	.word	0x20003a7c

0000d264 <__malloc_unlock>:
    d264:	4801      	ldr	r0, [pc, #4]	; (d26c <__malloc_unlock+0x8>)
    d266:	f7ff bd69 	b.w	cd3c <__retarget_lock_release_recursive>
    d26a:	bf00      	nop
    d26c:	20003a7c 	.word	0x20003a7c

0000d270 <_Balloc>:
    d270:	6c43      	ldr	r3, [r0, #68]	; 0x44
    d272:	b570      	push	{r4, r5, r6, lr}
    d274:	4605      	mov	r5, r0
    d276:	460c      	mov	r4, r1
    d278:	b14b      	cbz	r3, d28e <_Balloc+0x1e>
    d27a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    d27e:	b180      	cbz	r0, d2a2 <_Balloc+0x32>
    d280:	6802      	ldr	r2, [r0, #0]
    d282:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
    d286:	2300      	movs	r3, #0
    d288:	e9c0 3303 	strd	r3, r3, [r0, #12]
    d28c:	bd70      	pop	{r4, r5, r6, pc}
    d28e:	2221      	movs	r2, #33	; 0x21
    d290:	2104      	movs	r1, #4
    d292:	f000 fba9 	bl	d9e8 <_calloc_r>
    d296:	4603      	mov	r3, r0
    d298:	6468      	str	r0, [r5, #68]	; 0x44
    d29a:	2800      	cmp	r0, #0
    d29c:	d1ed      	bne.n	d27a <_Balloc+0xa>
    d29e:	2000      	movs	r0, #0
    d2a0:	bd70      	pop	{r4, r5, r6, pc}
    d2a2:	2101      	movs	r1, #1
    d2a4:	fa01 f604 	lsl.w	r6, r1, r4
    d2a8:	1d72      	adds	r2, r6, #5
    d2aa:	0092      	lsls	r2, r2, #2
    d2ac:	4628      	mov	r0, r5
    d2ae:	f000 fb9b 	bl	d9e8 <_calloc_r>
    d2b2:	2800      	cmp	r0, #0
    d2b4:	d0f3      	beq.n	d29e <_Balloc+0x2e>
    d2b6:	e9c0 4601 	strd	r4, r6, [r0, #4]
    d2ba:	e7e4      	b.n	d286 <_Balloc+0x16>

0000d2bc <_Bfree>:
    d2bc:	b131      	cbz	r1, d2cc <_Bfree+0x10>
    d2be:	6c43      	ldr	r3, [r0, #68]	; 0x44
    d2c0:	684a      	ldr	r2, [r1, #4]
    d2c2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
    d2c6:	6008      	str	r0, [r1, #0]
    d2c8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    d2cc:	4770      	bx	lr
    d2ce:	bf00      	nop

0000d2d0 <__multadd>:
    d2d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d2d4:	690e      	ldr	r6, [r1, #16]
    d2d6:	4680      	mov	r8, r0
    d2d8:	460f      	mov	r7, r1
    d2da:	461d      	mov	r5, r3
    d2dc:	f101 0e14 	add.w	lr, r1, #20
    d2e0:	2000      	movs	r0, #0
    d2e2:	f8de 1000 	ldr.w	r1, [lr]
    d2e6:	b28c      	uxth	r4, r1
    d2e8:	fb02 5304 	mla	r3, r2, r4, r5
    d2ec:	0c09      	lsrs	r1, r1, #16
    d2ee:	ea4f 4c13 	mov.w	ip, r3, lsr #16
    d2f2:	fb02 cc01 	mla	ip, r2, r1, ip
    d2f6:	3001      	adds	r0, #1
    d2f8:	b29c      	uxth	r4, r3
    d2fa:	eb04 440c 	add.w	r4, r4, ip, lsl #16
    d2fe:	4286      	cmp	r6, r0
    d300:	f84e 4b04 	str.w	r4, [lr], #4
    d304:	ea4f 451c 	mov.w	r5, ip, lsr #16
    d308:	dceb      	bgt.n	d2e2 <__multadd+0x12>
    d30a:	b13d      	cbz	r5, d31c <__multadd+0x4c>
    d30c:	68bb      	ldr	r3, [r7, #8]
    d30e:	42b3      	cmp	r3, r6
    d310:	dd07      	ble.n	d322 <__multadd+0x52>
    d312:	eb07 0386 	add.w	r3, r7, r6, lsl #2
    d316:	3601      	adds	r6, #1
    d318:	615d      	str	r5, [r3, #20]
    d31a:	613e      	str	r6, [r7, #16]
    d31c:	4638      	mov	r0, r7
    d31e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d322:	6879      	ldr	r1, [r7, #4]
    d324:	4640      	mov	r0, r8
    d326:	3101      	adds	r1, #1
    d328:	f7ff ffa2 	bl	d270 <_Balloc>
    d32c:	4604      	mov	r4, r0
    d32e:	b1b0      	cbz	r0, d35e <__multadd+0x8e>
    d330:	693a      	ldr	r2, [r7, #16]
    d332:	3202      	adds	r2, #2
    d334:	f107 010c 	add.w	r1, r7, #12
    d338:	0092      	lsls	r2, r2, #2
    d33a:	300c      	adds	r0, #12
    d33c:	f7f3 f97e 	bl	63c <memcpy>
    d340:	f8d8 3044 	ldr.w	r3, [r8, #68]	; 0x44
    d344:	687a      	ldr	r2, [r7, #4]
    d346:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    d34a:	6039      	str	r1, [r7, #0]
    d34c:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
    d350:	4627      	mov	r7, r4
    d352:	eb07 0386 	add.w	r3, r7, r6, lsl #2
    d356:	3601      	adds	r6, #1
    d358:	615d      	str	r5, [r3, #20]
    d35a:	613e      	str	r6, [r7, #16]
    d35c:	e7de      	b.n	d31c <__multadd+0x4c>
    d35e:	4b03      	ldr	r3, [pc, #12]	; (d36c <__multadd+0x9c>)
    d360:	4803      	ldr	r0, [pc, #12]	; (d370 <__multadd+0xa0>)
    d362:	4622      	mov	r2, r4
    d364:	21ba      	movs	r1, #186	; 0xba
    d366:	f7ff fc21 	bl	cbac <__assert_func>
    d36a:	bf00      	nop
    d36c:	20001334 	.word	0x20001334
    d370:	20001348 	.word	0x20001348

0000d374 <__hi0bits>:
    d374:	0c03      	lsrs	r3, r0, #16
    d376:	041b      	lsls	r3, r3, #16
    d378:	b9d3      	cbnz	r3, d3b0 <__hi0bits+0x3c>
    d37a:	0400      	lsls	r0, r0, #16
    d37c:	2310      	movs	r3, #16
    d37e:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
    d382:	bf04      	itt	eq
    d384:	0200      	lsleq	r0, r0, #8
    d386:	3308      	addeq	r3, #8
    d388:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
    d38c:	bf04      	itt	eq
    d38e:	0100      	lsleq	r0, r0, #4
    d390:	3304      	addeq	r3, #4
    d392:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
    d396:	bf04      	itt	eq
    d398:	0080      	lsleq	r0, r0, #2
    d39a:	3302      	addeq	r3, #2
    d39c:	2800      	cmp	r0, #0
    d39e:	db05      	blt.n	d3ac <__hi0bits+0x38>
    d3a0:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
    d3a4:	f103 0301 	add.w	r3, r3, #1
    d3a8:	bf08      	it	eq
    d3aa:	2320      	moveq	r3, #32
    d3ac:	4618      	mov	r0, r3
    d3ae:	4770      	bx	lr
    d3b0:	2300      	movs	r3, #0
    d3b2:	e7e4      	b.n	d37e <__hi0bits+0xa>

0000d3b4 <__lo0bits>:
    d3b4:	6803      	ldr	r3, [r0, #0]
    d3b6:	f013 0207 	ands.w	r2, r3, #7
    d3ba:	d008      	beq.n	d3ce <__lo0bits+0x1a>
    d3bc:	07d9      	lsls	r1, r3, #31
    d3be:	d41f      	bmi.n	d400 <__lo0bits+0x4c>
    d3c0:	079a      	lsls	r2, r3, #30
    d3c2:	d522      	bpl.n	d40a <__lo0bits+0x56>
    d3c4:	085b      	lsrs	r3, r3, #1
    d3c6:	6003      	str	r3, [r0, #0]
    d3c8:	2201      	movs	r2, #1
    d3ca:	4610      	mov	r0, r2
    d3cc:	4770      	bx	lr
    d3ce:	b299      	uxth	r1, r3
    d3d0:	b909      	cbnz	r1, d3d6 <__lo0bits+0x22>
    d3d2:	0c1b      	lsrs	r3, r3, #16
    d3d4:	2210      	movs	r2, #16
    d3d6:	b2d9      	uxtb	r1, r3
    d3d8:	b909      	cbnz	r1, d3de <__lo0bits+0x2a>
    d3da:	3208      	adds	r2, #8
    d3dc:	0a1b      	lsrs	r3, r3, #8
    d3de:	0719      	lsls	r1, r3, #28
    d3e0:	bf04      	itt	eq
    d3e2:	091b      	lsreq	r3, r3, #4
    d3e4:	3204      	addeq	r2, #4
    d3e6:	0799      	lsls	r1, r3, #30
    d3e8:	bf04      	itt	eq
    d3ea:	089b      	lsreq	r3, r3, #2
    d3ec:	3202      	addeq	r2, #2
    d3ee:	07d9      	lsls	r1, r3, #31
    d3f0:	d403      	bmi.n	d3fa <__lo0bits+0x46>
    d3f2:	085b      	lsrs	r3, r3, #1
    d3f4:	f102 0201 	add.w	r2, r2, #1
    d3f8:	d005      	beq.n	d406 <__lo0bits+0x52>
    d3fa:	6003      	str	r3, [r0, #0]
    d3fc:	4610      	mov	r0, r2
    d3fe:	4770      	bx	lr
    d400:	2200      	movs	r2, #0
    d402:	4610      	mov	r0, r2
    d404:	4770      	bx	lr
    d406:	2220      	movs	r2, #32
    d408:	e7df      	b.n	d3ca <__lo0bits+0x16>
    d40a:	089b      	lsrs	r3, r3, #2
    d40c:	2202      	movs	r2, #2
    d40e:	6003      	str	r3, [r0, #0]
    d410:	4610      	mov	r0, r2
    d412:	4770      	bx	lr

0000d414 <__i2b>:
    d414:	b538      	push	{r3, r4, r5, lr}
    d416:	6c43      	ldr	r3, [r0, #68]	; 0x44
    d418:	4604      	mov	r4, r0
    d41a:	460d      	mov	r5, r1
    d41c:	b14b      	cbz	r3, d432 <__i2b+0x1e>
    d41e:	6858      	ldr	r0, [r3, #4]
    d420:	b1b0      	cbz	r0, d450 <__i2b+0x3c>
    d422:	6802      	ldr	r2, [r0, #0]
    d424:	605a      	str	r2, [r3, #4]
    d426:	2200      	movs	r2, #0
    d428:	2301      	movs	r3, #1
    d42a:	e9c0 3504 	strd	r3, r5, [r0, #16]
    d42e:	60c2      	str	r2, [r0, #12]
    d430:	bd38      	pop	{r3, r4, r5, pc}
    d432:	2221      	movs	r2, #33	; 0x21
    d434:	2104      	movs	r1, #4
    d436:	f000 fad7 	bl	d9e8 <_calloc_r>
    d43a:	4603      	mov	r3, r0
    d43c:	6460      	str	r0, [r4, #68]	; 0x44
    d43e:	2800      	cmp	r0, #0
    d440:	d1ed      	bne.n	d41e <__i2b+0xa>
    d442:	4b09      	ldr	r3, [pc, #36]	; (d468 <__i2b+0x54>)
    d444:	4809      	ldr	r0, [pc, #36]	; (d46c <__i2b+0x58>)
    d446:	2200      	movs	r2, #0
    d448:	f240 1145 	movw	r1, #325	; 0x145
    d44c:	f7ff fbae 	bl	cbac <__assert_func>
    d450:	221c      	movs	r2, #28
    d452:	2101      	movs	r1, #1
    d454:	4620      	mov	r0, r4
    d456:	f000 fac7 	bl	d9e8 <_calloc_r>
    d45a:	2800      	cmp	r0, #0
    d45c:	d0f1      	beq.n	d442 <__i2b+0x2e>
    d45e:	2201      	movs	r2, #1
    d460:	2302      	movs	r3, #2
    d462:	e9c0 2301 	strd	r2, r3, [r0, #4]
    d466:	e7de      	b.n	d426 <__i2b+0x12>
    d468:	20001334 	.word	0x20001334
    d46c:	20001348 	.word	0x20001348

0000d470 <__multiply>:
    d470:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d474:	690e      	ldr	r6, [r1, #16]
    d476:	6915      	ldr	r5, [r2, #16]
    d478:	42ae      	cmp	r6, r5
    d47a:	b085      	sub	sp, #20
    d47c:	4688      	mov	r8, r1
    d47e:	4614      	mov	r4, r2
    d480:	db05      	blt.n	d48e <__multiply+0x1e>
    d482:	462a      	mov	r2, r5
    d484:	4623      	mov	r3, r4
    d486:	4635      	mov	r5, r6
    d488:	460c      	mov	r4, r1
    d48a:	4616      	mov	r6, r2
    d48c:	4698      	mov	r8, r3
    d48e:	68a3      	ldr	r3, [r4, #8]
    d490:	6861      	ldr	r1, [r4, #4]
    d492:	19af      	adds	r7, r5, r6
    d494:	42bb      	cmp	r3, r7
    d496:	bfb8      	it	lt
    d498:	3101      	addlt	r1, #1
    d49a:	f7ff fee9 	bl	d270 <_Balloc>
    d49e:	9001      	str	r0, [sp, #4]
    d4a0:	2800      	cmp	r0, #0
    d4a2:	f000 8087 	beq.w	d5b4 <__multiply+0x144>
    d4a6:	9b01      	ldr	r3, [sp, #4]
    d4a8:	f103 0914 	add.w	r9, r3, #20
    d4ac:	eb09 0a87 	add.w	sl, r9, r7, lsl #2
    d4b0:	45d1      	cmp	r9, sl
    d4b2:	d205      	bcs.n	d4c0 <__multiply+0x50>
    d4b4:	464b      	mov	r3, r9
    d4b6:	2200      	movs	r2, #0
    d4b8:	f843 2b04 	str.w	r2, [r3], #4
    d4bc:	459a      	cmp	sl, r3
    d4be:	d8fb      	bhi.n	d4b8 <__multiply+0x48>
    d4c0:	f108 0814 	add.w	r8, r8, #20
    d4c4:	eb08 0b86 	add.w	fp, r8, r6, lsl #2
    d4c8:	f104 0314 	add.w	r3, r4, #20
    d4cc:	45d8      	cmp	r8, fp
    d4ce:	461a      	mov	r2, r3
    d4d0:	eb03 0585 	add.w	r5, r3, r5, lsl #2
    d4d4:	d25f      	bcs.n	d596 <__multiply+0x126>
    d4d6:	1b2b      	subs	r3, r5, r4
    d4d8:	3b15      	subs	r3, #21
    d4da:	f023 0303 	bic.w	r3, r3, #3
    d4de:	3304      	adds	r3, #4
    d4e0:	3415      	adds	r4, #21
    d4e2:	42a5      	cmp	r5, r4
    d4e4:	bf38      	it	cc
    d4e6:	2304      	movcc	r3, #4
    d4e8:	e9cd a702 	strd	sl, r7, [sp, #8]
    d4ec:	46ac      	mov	ip, r5
    d4ee:	461f      	mov	r7, r3
    d4f0:	4692      	mov	sl, r2
    d4f2:	e005      	b.n	d500 <__multiply+0x90>
    d4f4:	0c09      	lsrs	r1, r1, #16
    d4f6:	d129      	bne.n	d54c <__multiply+0xdc>
    d4f8:	45c3      	cmp	fp, r8
    d4fa:	f109 0904 	add.w	r9, r9, #4
    d4fe:	d948      	bls.n	d592 <__multiply+0x122>
    d500:	f858 1b04 	ldr.w	r1, [r8], #4
    d504:	b28d      	uxth	r5, r1
    d506:	2d00      	cmp	r5, #0
    d508:	d0f4      	beq.n	d4f4 <__multiply+0x84>
    d50a:	4656      	mov	r6, sl
    d50c:	464c      	mov	r4, r9
    d50e:	2300      	movs	r3, #0
    d510:	f856 1b04 	ldr.w	r1, [r6], #4
    d514:	6822      	ldr	r2, [r4, #0]
    d516:	fa1f fe81 	uxth.w	lr, r1
    d51a:	b290      	uxth	r0, r2
    d51c:	0c09      	lsrs	r1, r1, #16
    d51e:	fb05 000e 	mla	r0, r5, lr, r0
    d522:	0c12      	lsrs	r2, r2, #16
    d524:	4403      	add	r3, r0
    d526:	fb05 2201 	mla	r2, r5, r1, r2
    d52a:	eb02 4213 	add.w	r2, r2, r3, lsr #16
    d52e:	b29b      	uxth	r3, r3
    d530:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    d534:	45b4      	cmp	ip, r6
    d536:	f844 3b04 	str.w	r3, [r4], #4
    d53a:	ea4f 4312 	mov.w	r3, r2, lsr #16
    d53e:	d8e7      	bhi.n	d510 <__multiply+0xa0>
    d540:	f849 3007 	str.w	r3, [r9, r7]
    d544:	f858 1c04 	ldr.w	r1, [r8, #-4]
    d548:	0c09      	lsrs	r1, r1, #16
    d54a:	d0d5      	beq.n	d4f8 <__multiply+0x88>
    d54c:	f8d9 3000 	ldr.w	r3, [r9]
    d550:	4650      	mov	r0, sl
    d552:	461a      	mov	r2, r3
    d554:	464c      	mov	r4, r9
    d556:	2600      	movs	r6, #0
    d558:	8805      	ldrh	r5, [r0, #0]
    d55a:	0c12      	lsrs	r2, r2, #16
    d55c:	fb01 2205 	mla	r2, r1, r5, r2
    d560:	4416      	add	r6, r2
    d562:	b29b      	uxth	r3, r3
    d564:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
    d568:	f844 3b04 	str.w	r3, [r4], #4
    d56c:	f850 5b04 	ldr.w	r5, [r0], #4
    d570:	6822      	ldr	r2, [r4, #0]
    d572:	0c2d      	lsrs	r5, r5, #16
    d574:	b293      	uxth	r3, r2
    d576:	fb01 3305 	mla	r3, r1, r5, r3
    d57a:	eb03 4316 	add.w	r3, r3, r6, lsr #16
    d57e:	4584      	cmp	ip, r0
    d580:	ea4f 4613 	mov.w	r6, r3, lsr #16
    d584:	d8e8      	bhi.n	d558 <__multiply+0xe8>
    d586:	45c3      	cmp	fp, r8
    d588:	f849 3007 	str.w	r3, [r9, r7]
    d58c:	f109 0904 	add.w	r9, r9, #4
    d590:	d8b6      	bhi.n	d500 <__multiply+0x90>
    d592:	e9dd a702 	ldrd	sl, r7, [sp, #8]
    d596:	2f00      	cmp	r7, #0
    d598:	dc02      	bgt.n	d5a0 <__multiply+0x130>
    d59a:	e005      	b.n	d5a8 <__multiply+0x138>
    d59c:	3f01      	subs	r7, #1
    d59e:	d003      	beq.n	d5a8 <__multiply+0x138>
    d5a0:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
    d5a4:	2b00      	cmp	r3, #0
    d5a6:	d0f9      	beq.n	d59c <__multiply+0x12c>
    d5a8:	9b01      	ldr	r3, [sp, #4]
    d5aa:	4618      	mov	r0, r3
    d5ac:	611f      	str	r7, [r3, #16]
    d5ae:	b005      	add	sp, #20
    d5b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d5b4:	4b03      	ldr	r3, [pc, #12]	; (d5c4 <__multiply+0x154>)
    d5b6:	4804      	ldr	r0, [pc, #16]	; (d5c8 <__multiply+0x158>)
    d5b8:	9a01      	ldr	r2, [sp, #4]
    d5ba:	f44f 71b1 	mov.w	r1, #354	; 0x162
    d5be:	f7ff faf5 	bl	cbac <__assert_func>
    d5c2:	bf00      	nop
    d5c4:	20001334 	.word	0x20001334
    d5c8:	20001348 	.word	0x20001348

0000d5cc <__pow5mult>:
    d5cc:	f012 0303 	ands.w	r3, r2, #3
    d5d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d5d4:	4614      	mov	r4, r2
    d5d6:	4606      	mov	r6, r0
    d5d8:	d132      	bne.n	d640 <__pow5mult+0x74>
    d5da:	460d      	mov	r5, r1
    d5dc:	10a4      	asrs	r4, r4, #2
    d5de:	d020      	beq.n	d622 <__pow5mult+0x56>
    d5e0:	f8d6 8040 	ldr.w	r8, [r6, #64]	; 0x40
    d5e4:	f1b8 0f00 	cmp.w	r8, #0
    d5e8:	d033      	beq.n	d652 <__pow5mult+0x86>
    d5ea:	07e3      	lsls	r3, r4, #31
    d5ec:	f04f 0700 	mov.w	r7, #0
    d5f0:	d407      	bmi.n	d602 <__pow5mult+0x36>
    d5f2:	1064      	asrs	r4, r4, #1
    d5f4:	d015      	beq.n	d622 <__pow5mult+0x56>
    d5f6:	f8d8 0000 	ldr.w	r0, [r8]
    d5fa:	b1a8      	cbz	r0, d628 <__pow5mult+0x5c>
    d5fc:	4680      	mov	r8, r0
    d5fe:	07e3      	lsls	r3, r4, #31
    d600:	d5f7      	bpl.n	d5f2 <__pow5mult+0x26>
    d602:	4642      	mov	r2, r8
    d604:	4629      	mov	r1, r5
    d606:	4630      	mov	r0, r6
    d608:	f7ff ff32 	bl	d470 <__multiply>
    d60c:	b1b5      	cbz	r5, d63c <__pow5mult+0x70>
    d60e:	6869      	ldr	r1, [r5, #4]
    d610:	6c73      	ldr	r3, [r6, #68]	; 0x44
    d612:	1064      	asrs	r4, r4, #1
    d614:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
    d618:	602a      	str	r2, [r5, #0]
    d61a:	f843 5021 	str.w	r5, [r3, r1, lsl #2]
    d61e:	4605      	mov	r5, r0
    d620:	d1e9      	bne.n	d5f6 <__pow5mult+0x2a>
    d622:	4628      	mov	r0, r5
    d624:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d628:	4642      	mov	r2, r8
    d62a:	4641      	mov	r1, r8
    d62c:	4630      	mov	r0, r6
    d62e:	f7ff ff1f 	bl	d470 <__multiply>
    d632:	f8c8 0000 	str.w	r0, [r8]
    d636:	6007      	str	r7, [r0, #0]
    d638:	4680      	mov	r8, r0
    d63a:	e7e0      	b.n	d5fe <__pow5mult+0x32>
    d63c:	4605      	mov	r5, r0
    d63e:	e7d8      	b.n	d5f2 <__pow5mult+0x26>
    d640:	3b01      	subs	r3, #1
    d642:	4a0f      	ldr	r2, [pc, #60]	; (d680 <__pow5mult+0xb4>)
    d644:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
    d648:	2300      	movs	r3, #0
    d64a:	f7ff fe41 	bl	d2d0 <__multadd>
    d64e:	4605      	mov	r5, r0
    d650:	e7c4      	b.n	d5dc <__pow5mult+0x10>
    d652:	2101      	movs	r1, #1
    d654:	4630      	mov	r0, r6
    d656:	f7ff fe0b 	bl	d270 <_Balloc>
    d65a:	4680      	mov	r8, r0
    d65c:	b140      	cbz	r0, d670 <__pow5mult+0xa4>
    d65e:	2301      	movs	r3, #1
    d660:	f240 2271 	movw	r2, #625	; 0x271
    d664:	e9c0 3204 	strd	r3, r2, [r0, #16]
    d668:	2300      	movs	r3, #0
    d66a:	6430      	str	r0, [r6, #64]	; 0x40
    d66c:	6003      	str	r3, [r0, #0]
    d66e:	e7bc      	b.n	d5ea <__pow5mult+0x1e>
    d670:	4b04      	ldr	r3, [pc, #16]	; (d684 <__pow5mult+0xb8>)
    d672:	4805      	ldr	r0, [pc, #20]	; (d688 <__pow5mult+0xbc>)
    d674:	4642      	mov	r2, r8
    d676:	f240 1145 	movw	r1, #325	; 0x145
    d67a:	f7ff fa97 	bl	cbac <__assert_func>
    d67e:	bf00      	nop
    d680:	200023c4 	.word	0x200023c4
    d684:	20001334 	.word	0x20001334
    d688:	20001348 	.word	0x20001348

0000d68c <__lshift>:
    d68c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    d690:	460d      	mov	r5, r1
    d692:	4614      	mov	r4, r2
    d694:	692f      	ldr	r7, [r5, #16]
    d696:	68ab      	ldr	r3, [r5, #8]
    d698:	6849      	ldr	r1, [r1, #4]
    d69a:	eb07 1762 	add.w	r7, r7, r2, asr #5
    d69e:	1c7e      	adds	r6, r7, #1
    d6a0:	429e      	cmp	r6, r3
    d6a2:	4680      	mov	r8, r0
    d6a4:	ea4f 1962 	mov.w	r9, r2, asr #5
    d6a8:	dd04      	ble.n	d6b4 <__lshift+0x28>
    d6aa:	005b      	lsls	r3, r3, #1
    d6ac:	429e      	cmp	r6, r3
    d6ae:	f101 0101 	add.w	r1, r1, #1
    d6b2:	dcfa      	bgt.n	d6aa <__lshift+0x1e>
    d6b4:	4640      	mov	r0, r8
    d6b6:	f7ff fddb 	bl	d270 <_Balloc>
    d6ba:	4684      	mov	ip, r0
    d6bc:	2800      	cmp	r0, #0
    d6be:	d052      	beq.n	d766 <__lshift+0xda>
    d6c0:	f1b9 0f00 	cmp.w	r9, #0
    d6c4:	f100 0214 	add.w	r2, r0, #20
    d6c8:	dd0e      	ble.n	d6e8 <__lshift+0x5c>
    d6ca:	f109 0105 	add.w	r1, r9, #5
    d6ce:	ea4f 0e81 	mov.w	lr, r1, lsl #2
    d6d2:	4613      	mov	r3, r2
    d6d4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
    d6d8:	2000      	movs	r0, #0
    d6da:	f843 0b04 	str.w	r0, [r3], #4
    d6de:	428b      	cmp	r3, r1
    d6e0:	d1fb      	bne.n	d6da <__lshift+0x4e>
    d6e2:	f1ae 0314 	sub.w	r3, lr, #20
    d6e6:	441a      	add	r2, r3
    d6e8:	6929      	ldr	r1, [r5, #16]
    d6ea:	f105 0314 	add.w	r3, r5, #20
    d6ee:	f014 0e1f 	ands.w	lr, r4, #31
    d6f2:	eb03 0181 	add.w	r1, r3, r1, lsl #2
    d6f6:	d02e      	beq.n	d756 <__lshift+0xca>
    d6f8:	f1ce 0920 	rsb	r9, lr, #32
    d6fc:	4610      	mov	r0, r2
    d6fe:	f04f 0a00 	mov.w	sl, #0
    d702:	681c      	ldr	r4, [r3, #0]
    d704:	fa04 f40e 	lsl.w	r4, r4, lr
    d708:	ea44 040a 	orr.w	r4, r4, sl
    d70c:	f840 4b04 	str.w	r4, [r0], #4
    d710:	f853 4b04 	ldr.w	r4, [r3], #4
    d714:	4299      	cmp	r1, r3
    d716:	fa24 fa09 	lsr.w	sl, r4, r9
    d71a:	d8f2      	bhi.n	d702 <__lshift+0x76>
    d71c:	1b4b      	subs	r3, r1, r5
    d71e:	3b15      	subs	r3, #21
    d720:	f023 0303 	bic.w	r3, r3, #3
    d724:	3304      	adds	r3, #4
    d726:	f105 0015 	add.w	r0, r5, #21
    d72a:	4281      	cmp	r1, r0
    d72c:	bf38      	it	cc
    d72e:	2304      	movcc	r3, #4
    d730:	f1ba 0f00 	cmp.w	sl, #0
    d734:	bf18      	it	ne
    d736:	4637      	movne	r7, r6
    d738:	f842 a003 	str.w	sl, [r2, r3]
    d73c:	f8d8 3044 	ldr.w	r3, [r8, #68]	; 0x44
    d740:	686a      	ldr	r2, [r5, #4]
    d742:	f8cc 7010 	str.w	r7, [ip, #16]
    d746:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    d74a:	6029      	str	r1, [r5, #0]
    d74c:	4660      	mov	r0, ip
    d74e:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
    d752:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    d756:	3a04      	subs	r2, #4
    d758:	f853 0b04 	ldr.w	r0, [r3], #4
    d75c:	f842 0f04 	str.w	r0, [r2, #4]!
    d760:	4299      	cmp	r1, r3
    d762:	d8f9      	bhi.n	d758 <__lshift+0xcc>
    d764:	e7ea      	b.n	d73c <__lshift+0xb0>
    d766:	4b03      	ldr	r3, [pc, #12]	; (d774 <__lshift+0xe8>)
    d768:	4803      	ldr	r0, [pc, #12]	; (d778 <__lshift+0xec>)
    d76a:	4662      	mov	r2, ip
    d76c:	f44f 71ef 	mov.w	r1, #478	; 0x1de
    d770:	f7ff fa1c 	bl	cbac <__assert_func>
    d774:	20001334 	.word	0x20001334
    d778:	20001348 	.word	0x20001348

0000d77c <__mcmp>:
    d77c:	690b      	ldr	r3, [r1, #16]
    d77e:	4684      	mov	ip, r0
    d780:	6900      	ldr	r0, [r0, #16]
    d782:	1ac0      	subs	r0, r0, r3
    d784:	d116      	bne.n	d7b4 <__mcmp+0x38>
    d786:	f10c 0c14 	add.w	ip, ip, #20
    d78a:	3114      	adds	r1, #20
    d78c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
    d790:	b410      	push	{r4}
    d792:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    d796:	e001      	b.n	d79c <__mcmp+0x20>
    d798:	4594      	cmp	ip, r2
    d79a:	d208      	bcs.n	d7ae <__mcmp+0x32>
    d79c:	f852 4d04 	ldr.w	r4, [r2, #-4]!
    d7a0:	f853 1d04 	ldr.w	r1, [r3, #-4]!
    d7a4:	428c      	cmp	r4, r1
    d7a6:	d0f7      	beq.n	d798 <__mcmp+0x1c>
    d7a8:	d205      	bcs.n	d7b6 <__mcmp+0x3a>
    d7aa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    d7ae:	f85d 4b04 	ldr.w	r4, [sp], #4
    d7b2:	4770      	bx	lr
    d7b4:	4770      	bx	lr
    d7b6:	2001      	movs	r0, #1
    d7b8:	f85d 4b04 	ldr.w	r4, [sp], #4
    d7bc:	4770      	bx	lr
    d7be:	bf00      	nop

0000d7c0 <__mdiff>:
    d7c0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d7c4:	690f      	ldr	r7, [r1, #16]
    d7c6:	6913      	ldr	r3, [r2, #16]
    d7c8:	1aff      	subs	r7, r7, r3
    d7ca:	2f00      	cmp	r7, #0
    d7cc:	460e      	mov	r6, r1
    d7ce:	4690      	mov	r8, r2
    d7d0:	d17f      	bne.n	d8d2 <__mdiff+0x112>
    d7d2:	f101 0514 	add.w	r5, r1, #20
    d7d6:	3214      	adds	r2, #20
    d7d8:	eb02 0283 	add.w	r2, r2, r3, lsl #2
    d7dc:	eb05 0383 	add.w	r3, r5, r3, lsl #2
    d7e0:	e001      	b.n	d7e6 <__mdiff+0x26>
    d7e2:	429d      	cmp	r5, r3
    d7e4:	d278      	bcs.n	d8d8 <__mdiff+0x118>
    d7e6:	f853 1d04 	ldr.w	r1, [r3, #-4]!
    d7ea:	f852 4d04 	ldr.w	r4, [r2, #-4]!
    d7ee:	42a1      	cmp	r1, r4
    d7f0:	d0f7      	beq.n	d7e2 <__mdiff+0x22>
    d7f2:	d369      	bcc.n	d8c8 <__mdiff+0x108>
    d7f4:	6871      	ldr	r1, [r6, #4]
    d7f6:	f7ff fd3b 	bl	d270 <_Balloc>
    d7fa:	4681      	mov	r9, r0
    d7fc:	2800      	cmp	r0, #0
    d7fe:	d077      	beq.n	d8f0 <__mdiff+0x130>
    d800:	6935      	ldr	r5, [r6, #16]
    d802:	f8d8 2010 	ldr.w	r2, [r8, #16]
    d806:	60c7      	str	r7, [r0, #12]
    d808:	f108 0e14 	add.w	lr, r8, #20
    d80c:	f106 0014 	add.w	r0, r6, #20
    d810:	f109 0a14 	add.w	sl, r9, #20
    d814:	f106 0110 	add.w	r1, r6, #16
    d818:	eb0e 0282 	add.w	r2, lr, r2, lsl #2
    d81c:	eb00 0785 	add.w	r7, r0, r5, lsl #2
    d820:	4656      	mov	r6, sl
    d822:	f04f 0c00 	mov.w	ip, #0
    d826:	f85e 4b04 	ldr.w	r4, [lr], #4
    d82a:	f851 bf04 	ldr.w	fp, [r1, #4]!
    d82e:	b2a3      	uxth	r3, r4
    d830:	fa1c fc8b 	uxtah	ip, ip, fp
    d834:	ebac 0303 	sub.w	r3, ip, r3
    d838:	ea4f 4c14 	mov.w	ip, r4, lsr #16
    d83c:	ebcc 4c1b 	rsb	ip, ip, fp, lsr #16
    d840:	eb0c 4c23 	add.w	ip, ip, r3, asr #16
    d844:	b29b      	uxth	r3, r3
    d846:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
    d84a:	4572      	cmp	r2, lr
    d84c:	f846 3b04 	str.w	r3, [r6], #4
    d850:	ea4f 4c2c 	mov.w	ip, ip, asr #16
    d854:	d8e7      	bhi.n	d826 <__mdiff+0x66>
    d856:	eba2 0108 	sub.w	r1, r2, r8
    d85a:	3915      	subs	r1, #21
    d85c:	f108 0815 	add.w	r8, r8, #21
    d860:	4542      	cmp	r2, r8
    d862:	f021 0403 	bic.w	r4, r1, #3
    d866:	f104 0404 	add.w	r4, r4, #4
    d86a:	bf38      	it	cc
    d86c:	2404      	movcc	r4, #4
    d86e:	4420      	add	r0, r4
    d870:	f021 0203 	bic.w	r2, r1, #3
    d874:	bf38      	it	cc
    d876:	2200      	movcc	r2, #0
    d878:	4287      	cmp	r7, r0
    d87a:	4452      	add	r2, sl
    d87c:	4454      	add	r4, sl
    d87e:	d918      	bls.n	d8b2 <__mdiff+0xf2>
    d880:	4626      	mov	r6, r4
    d882:	4601      	mov	r1, r0
    d884:	f851 3b04 	ldr.w	r3, [r1], #4
    d888:	fa1c fc83 	uxtah	ip, ip, r3
    d88c:	ea4f 422c 	mov.w	r2, ip, asr #16
    d890:	eb02 4213 	add.w	r2, r2, r3, lsr #16
    d894:	fa1f fc8c 	uxth.w	ip, ip
    d898:	ea4c 4302 	orr.w	r3, ip, r2, lsl #16
    d89c:	428f      	cmp	r7, r1
    d89e:	f846 3b04 	str.w	r3, [r6], #4
    d8a2:	ea4f 4c22 	mov.w	ip, r2, asr #16
    d8a6:	d8ed      	bhi.n	d884 <__mdiff+0xc4>
    d8a8:	3f01      	subs	r7, #1
    d8aa:	1a3f      	subs	r7, r7, r0
    d8ac:	f027 0703 	bic.w	r7, r7, #3
    d8b0:	19e2      	adds	r2, r4, r7
    d8b2:	b923      	cbnz	r3, d8be <__mdiff+0xfe>
    d8b4:	f852 3d04 	ldr.w	r3, [r2, #-4]!
    d8b8:	3d01      	subs	r5, #1
    d8ba:	2b00      	cmp	r3, #0
    d8bc:	d0fa      	beq.n	d8b4 <__mdiff+0xf4>
    d8be:	f8c9 5010 	str.w	r5, [r9, #16]
    d8c2:	4648      	mov	r0, r9
    d8c4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d8c8:	4633      	mov	r3, r6
    d8ca:	2701      	movs	r7, #1
    d8cc:	4646      	mov	r6, r8
    d8ce:	4698      	mov	r8, r3
    d8d0:	e790      	b.n	d7f4 <__mdiff+0x34>
    d8d2:	dbf9      	blt.n	d8c8 <__mdiff+0x108>
    d8d4:	2700      	movs	r7, #0
    d8d6:	e78d      	b.n	d7f4 <__mdiff+0x34>
    d8d8:	2100      	movs	r1, #0
    d8da:	f7ff fcc9 	bl	d270 <_Balloc>
    d8de:	4681      	mov	r9, r0
    d8e0:	b168      	cbz	r0, d8fe <__mdiff+0x13e>
    d8e2:	2201      	movs	r2, #1
    d8e4:	2300      	movs	r3, #0
    d8e6:	e9c9 2304 	strd	r2, r3, [r9, #16]
    d8ea:	4648      	mov	r0, r9
    d8ec:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d8f0:	4b06      	ldr	r3, [pc, #24]	; (d90c <__mdiff+0x14c>)
    d8f2:	4807      	ldr	r0, [pc, #28]	; (d910 <__mdiff+0x150>)
    d8f4:	464a      	mov	r2, r9
    d8f6:	f240 2145 	movw	r1, #581	; 0x245
    d8fa:	f7ff f957 	bl	cbac <__assert_func>
    d8fe:	4b03      	ldr	r3, [pc, #12]	; (d90c <__mdiff+0x14c>)
    d900:	4803      	ldr	r0, [pc, #12]	; (d910 <__mdiff+0x150>)
    d902:	464a      	mov	r2, r9
    d904:	f240 2137 	movw	r1, #567	; 0x237
    d908:	f7ff f950 	bl	cbac <__assert_func>
    d90c:	20001334 	.word	0x20001334
    d910:	20001348 	.word	0x20001348

0000d914 <__d2b>:
    d914:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    d918:	4688      	mov	r8, r1
    d91a:	b083      	sub	sp, #12
    d91c:	2101      	movs	r1, #1
    d91e:	ec57 6b10 	vmov	r6, r7, d0
    d922:	4615      	mov	r5, r2
    d924:	f7ff fca4 	bl	d270 <_Balloc>
    d928:	4604      	mov	r4, r0
    d92a:	2800      	cmp	r0, #0
    d92c:	d051      	beq.n	d9d2 <__d2b+0xbe>
    d92e:	f3c7 590a 	ubfx	r9, r7, #20, #11
    d932:	f3c7 0313 	ubfx	r3, r7, #0, #20
    d936:	f1b9 0f00 	cmp.w	r9, #0
    d93a:	d001      	beq.n	d940 <__d2b+0x2c>
    d93c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    d940:	2e00      	cmp	r6, #0
    d942:	9301      	str	r3, [sp, #4]
    d944:	d118      	bne.n	d978 <__d2b+0x64>
    d946:	a801      	add	r0, sp, #4
    d948:	f7ff fd34 	bl	d3b4 <__lo0bits>
    d94c:	9a01      	ldr	r2, [sp, #4]
    d94e:	6162      	str	r2, [r4, #20]
    d950:	2201      	movs	r2, #1
    d952:	f100 0320 	add.w	r3, r0, #32
    d956:	6122      	str	r2, [r4, #16]
    d958:	f1b9 0f00 	cmp.w	r9, #0
    d95c:	d025      	beq.n	d9aa <__d2b+0x96>
    d95e:	f2a9 4933 	subw	r9, r9, #1075	; 0x433
    d962:	eb09 0203 	add.w	r2, r9, r3
    d966:	4620      	mov	r0, r4
    d968:	f1c3 0335 	rsb	r3, r3, #53	; 0x35
    d96c:	f8c8 2000 	str.w	r2, [r8]
    d970:	602b      	str	r3, [r5, #0]
    d972:	b003      	add	sp, #12
    d974:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    d978:	4668      	mov	r0, sp
    d97a:	9600      	str	r6, [sp, #0]
    d97c:	f7ff fd1a 	bl	d3b4 <__lo0bits>
    d980:	4603      	mov	r3, r0
    d982:	b310      	cbz	r0, d9ca <__d2b+0xb6>
    d984:	e9dd 0200 	ldrd	r0, r2, [sp]
    d988:	f1c3 0120 	rsb	r1, r3, #32
    d98c:	fa02 f101 	lsl.w	r1, r2, r1
    d990:	4301      	orrs	r1, r0
    d992:	40da      	lsrs	r2, r3
    d994:	6161      	str	r1, [r4, #20]
    d996:	9201      	str	r2, [sp, #4]
    d998:	2a00      	cmp	r2, #0
    d99a:	61a2      	str	r2, [r4, #24]
    d99c:	bf14      	ite	ne
    d99e:	2202      	movne	r2, #2
    d9a0:	2201      	moveq	r2, #1
    d9a2:	6122      	str	r2, [r4, #16]
    d9a4:	f1b9 0f00 	cmp.w	r9, #0
    d9a8:	d1d9      	bne.n	d95e <__d2b+0x4a>
    d9aa:	f2a3 4332 	subw	r3, r3, #1074	; 0x432
    d9ae:	f8c8 3000 	str.w	r3, [r8]
    d9b2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
    d9b6:	6918      	ldr	r0, [r3, #16]
    d9b8:	f7ff fcdc 	bl	d374 <__hi0bits>
    d9bc:	ebc0 1342 	rsb	r3, r0, r2, lsl #5
    d9c0:	4620      	mov	r0, r4
    d9c2:	602b      	str	r3, [r5, #0]
    d9c4:	b003      	add	sp, #12
    d9c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    d9ca:	9a00      	ldr	r2, [sp, #0]
    d9cc:	6162      	str	r2, [r4, #20]
    d9ce:	9a01      	ldr	r2, [sp, #4]
    d9d0:	e7e2      	b.n	d998 <__d2b+0x84>
    d9d2:	4b03      	ldr	r3, [pc, #12]	; (d9e0 <__d2b+0xcc>)
    d9d4:	4803      	ldr	r0, [pc, #12]	; (d9e4 <__d2b+0xd0>)
    d9d6:	4622      	mov	r2, r4
    d9d8:	f240 310f 	movw	r1, #783	; 0x30f
    d9dc:	f7ff f8e6 	bl	cbac <__assert_func>
    d9e0:	20001334 	.word	0x20001334
    d9e4:	20001348 	.word	0x20001348

0000d9e8 <_calloc_r>:
    d9e8:	b538      	push	{r3, r4, r5, lr}
    d9ea:	fba1 1402 	umull	r1, r4, r1, r2
    d9ee:	bb8c      	cbnz	r4, da54 <_calloc_r+0x6c>
    d9f0:	f7fe fd80 	bl	c4f4 <_malloc_r>
    d9f4:	4605      	mov	r5, r0
    d9f6:	b1e0      	cbz	r0, da32 <_calloc_r+0x4a>
    d9f8:	f850 2c04 	ldr.w	r2, [r0, #-4]
    d9fc:	f022 0203 	bic.w	r2, r2, #3
    da00:	3a04      	subs	r2, #4
    da02:	2a24      	cmp	r2, #36	; 0x24
    da04:	d817      	bhi.n	da36 <_calloc_r+0x4e>
    da06:	2a13      	cmp	r2, #19
    da08:	d91a      	bls.n	da40 <_calloc_r+0x58>
    da0a:	2a1b      	cmp	r2, #27
    da0c:	e9c0 4400 	strd	r4, r4, [r0]
    da10:	d91d      	bls.n	da4e <_calloc_r+0x66>
    da12:	2a24      	cmp	r2, #36	; 0x24
    da14:	bf14      	ite	ne
    da16:	f100 0210 	addne.w	r2, r0, #16
    da1a:	f100 0218 	addeq.w	r2, r0, #24
    da1e:	f04f 0300 	mov.w	r3, #0
    da22:	e9c0 4402 	strd	r4, r4, [r0, #8]
    da26:	bf04      	itt	eq
    da28:	6104      	streq	r4, [r0, #16]
    da2a:	6144      	streq	r4, [r0, #20]
    da2c:	e9c2 3300 	strd	r3, r3, [r2]
    da30:	6093      	str	r3, [r2, #8]
    da32:	4628      	mov	r0, r5
    da34:	bd38      	pop	{r3, r4, r5, pc}
    da36:	4621      	mov	r1, r4
    da38:	f7ff f8d8 	bl	cbec <memset>
    da3c:	4628      	mov	r0, r5
    da3e:	bd38      	pop	{r3, r4, r5, pc}
    da40:	4602      	mov	r2, r0
    da42:	2300      	movs	r3, #0
    da44:	e9c2 3300 	strd	r3, r3, [r2]
    da48:	6093      	str	r3, [r2, #8]
    da4a:	4628      	mov	r0, r5
    da4c:	bd38      	pop	{r3, r4, r5, pc}
    da4e:	f100 0208 	add.w	r2, r0, #8
    da52:	e7f6      	b.n	da42 <_calloc_r+0x5a>
    da54:	f7fc ff96 	bl	a984 <__errno>
    da58:	230c      	movs	r3, #12
    da5a:	2500      	movs	r5, #0
    da5c:	6003      	str	r3, [r0, #0]
    da5e:	e7e8      	b.n	da32 <_calloc_r+0x4a>

0000da60 <realloc>:
    da60:	b410      	push	{r4}
    da62:	4c04      	ldr	r4, [pc, #16]	; (da74 <realloc+0x14>)
    da64:	4603      	mov	r3, r0
    da66:	460a      	mov	r2, r1
    da68:	6820      	ldr	r0, [r4, #0]
    da6a:	f85d 4b04 	ldr.w	r4, [sp], #4
    da6e:	4619      	mov	r1, r3
    da70:	f001 b9b2 	b.w	edd8 <_realloc_r>
    da74:	200031b4 	.word	0x200031b4

0000da78 <_wcsrtombs_r>:
    da78:	b510      	push	{r4, lr}
    da7a:	b082      	sub	sp, #8
    da7c:	9c04      	ldr	r4, [sp, #16]
    da7e:	e9cd 3400 	strd	r3, r4, [sp]
    da82:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    da86:	f003 f821 	bl	10acc <_wcsnrtombs_r>
    da8a:	b002      	add	sp, #8
    da8c:	bd10      	pop	{r4, pc}
    da8e:	bf00      	nop

0000da90 <quorem>:
    da90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    da94:	6903      	ldr	r3, [r0, #16]
    da96:	690c      	ldr	r4, [r1, #16]
    da98:	42a3      	cmp	r3, r4
    da9a:	b083      	sub	sp, #12
    da9c:	f2c0 8087 	blt.w	dbae <quorem+0x11e>
    daa0:	3c01      	subs	r4, #1
    daa2:	f101 0514 	add.w	r5, r1, #20
    daa6:	00a3      	lsls	r3, r4, #2
    daa8:	f100 0814 	add.w	r8, r0, #20
    daac:	9300      	str	r3, [sp, #0]
    daae:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
    dab2:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
    dab6:	3301      	adds	r3, #1
    dab8:	4681      	mov	r9, r0
    daba:	429a      	cmp	r2, r3
    dabc:	eb08 0084 	add.w	r0, r8, r4, lsl #2
    dac0:	eb05 0784 	add.w	r7, r5, r4, lsl #2
    dac4:	9001      	str	r0, [sp, #4]
    dac6:	fbb2 f6f3 	udiv	r6, r2, r3
    daca:	d33b      	bcc.n	db44 <quorem+0xb4>
    dacc:	f04f 0c00 	mov.w	ip, #0
    dad0:	46ae      	mov	lr, r5
    dad2:	4640      	mov	r0, r8
    dad4:	46e2      	mov	sl, ip
    dad6:	4663      	mov	r3, ip
    dad8:	f85e bb04 	ldr.w	fp, [lr], #4
    dadc:	6802      	ldr	r2, [r0, #0]
    dade:	fa1f fc8b 	uxth.w	ip, fp
    dae2:	fb06 330c 	mla	r3, r6, ip, r3
    dae6:	ea4f 4c13 	mov.w	ip, r3, lsr #16
    daea:	ea4f 4b1b 	mov.w	fp, fp, lsr #16
    daee:	fb06 cc0b 	mla	ip, r6, fp, ip
    daf2:	b29b      	uxth	r3, r3
    daf4:	ebaa 0303 	sub.w	r3, sl, r3
    daf8:	fa1f fa8c 	uxth.w	sl, ip
    dafc:	fa13 f382 	uxtah	r3, r3, r2
    db00:	ebca 4212 	rsb	r2, sl, r2, lsr #16
    db04:	eb02 4223 	add.w	r2, r2, r3, asr #16
    db08:	b29b      	uxth	r3, r3
    db0a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    db0e:	4577      	cmp	r7, lr
    db10:	f840 3b04 	str.w	r3, [r0], #4
    db14:	ea4f 4a22 	mov.w	sl, r2, asr #16
    db18:	ea4f 431c 	mov.w	r3, ip, lsr #16
    db1c:	d2dc      	bcs.n	dad8 <quorem+0x48>
    db1e:	9b00      	ldr	r3, [sp, #0]
    db20:	f858 3003 	ldr.w	r3, [r8, r3]
    db24:	b973      	cbnz	r3, db44 <quorem+0xb4>
    db26:	9b01      	ldr	r3, [sp, #4]
    db28:	3b04      	subs	r3, #4
    db2a:	4598      	cmp	r8, r3
    db2c:	d304      	bcc.n	db38 <quorem+0xa8>
    db2e:	e007      	b.n	db40 <quorem+0xb0>
    db30:	4598      	cmp	r8, r3
    db32:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
    db36:	d203      	bcs.n	db40 <quorem+0xb0>
    db38:	f853 2904 	ldr.w	r2, [r3], #-4
    db3c:	2a00      	cmp	r2, #0
    db3e:	d0f7      	beq.n	db30 <quorem+0xa0>
    db40:	f8c9 4010 	str.w	r4, [r9, #16]
    db44:	4648      	mov	r0, r9
    db46:	f7ff fe19 	bl	d77c <__mcmp>
    db4a:	2800      	cmp	r0, #0
    db4c:	db2b      	blt.n	dba6 <quorem+0x116>
    db4e:	3601      	adds	r6, #1
    db50:	4641      	mov	r1, r8
    db52:	2300      	movs	r3, #0
    db54:	f855 0b04 	ldr.w	r0, [r5], #4
    db58:	f8d1 c000 	ldr.w	ip, [r1]
    db5c:	b282      	uxth	r2, r0
    db5e:	1a9a      	subs	r2, r3, r2
    db60:	0c03      	lsrs	r3, r0, #16
    db62:	fa12 f28c 	uxtah	r2, r2, ip
    db66:	ebc3 431c 	rsb	r3, r3, ip, lsr #16
    db6a:	eb03 4322 	add.w	r3, r3, r2, asr #16
    db6e:	b292      	uxth	r2, r2
    db70:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
    db74:	42af      	cmp	r7, r5
    db76:	f841 2b04 	str.w	r2, [r1], #4
    db7a:	ea4f 4323 	mov.w	r3, r3, asr #16
    db7e:	d2e9      	bcs.n	db54 <quorem+0xc4>
    db80:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
    db84:	eb08 0384 	add.w	r3, r8, r4, lsl #2
    db88:	b96a      	cbnz	r2, dba6 <quorem+0x116>
    db8a:	3b04      	subs	r3, #4
    db8c:	4598      	cmp	r8, r3
    db8e:	d304      	bcc.n	db9a <quorem+0x10a>
    db90:	e007      	b.n	dba2 <quorem+0x112>
    db92:	4598      	cmp	r8, r3
    db94:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
    db98:	d203      	bcs.n	dba2 <quorem+0x112>
    db9a:	f853 2904 	ldr.w	r2, [r3], #-4
    db9e:	2a00      	cmp	r2, #0
    dba0:	d0f7      	beq.n	db92 <quorem+0x102>
    dba2:	f8c9 4010 	str.w	r4, [r9, #16]
    dba6:	4630      	mov	r0, r6
    dba8:	b003      	add	sp, #12
    dbaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dbae:	2000      	movs	r0, #0
    dbb0:	b003      	add	sp, #12
    dbb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dbb6:	bf00      	nop

0000dbb8 <_dtoa_r>:
    dbb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dbbc:	ed2d 8b02 	vpush	{d8}
    dbc0:	b08f      	sub	sp, #60	; 0x3c
    dbc2:	ed8d 0b02 	vstr	d0, [sp, #8]
    dbc6:	9101      	str	r1, [sp, #4]
    dbc8:	6b81      	ldr	r1, [r0, #56]	; 0x38
    dbca:	9d1a      	ldr	r5, [sp, #104]	; 0x68
    dbcc:	9305      	str	r3, [sp, #20]
    dbce:	ec57 6b10 	vmov	r6, r7, d0
    dbd2:	4604      	mov	r4, r0
    dbd4:	4693      	mov	fp, r2
    dbd6:	b141      	cbz	r1, dbea <_dtoa_r+0x32>
    dbd8:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
    dbda:	604a      	str	r2, [r1, #4]
    dbdc:	2301      	movs	r3, #1
    dbde:	4093      	lsls	r3, r2
    dbe0:	608b      	str	r3, [r1, #8]
    dbe2:	f7ff fb6b 	bl	d2bc <_Bfree>
    dbe6:	2300      	movs	r3, #0
    dbe8:	63a3      	str	r3, [r4, #56]	; 0x38
    dbea:	f1b7 0800 	subs.w	r8, r7, #0
    dbee:	bfb4      	ite	lt
    dbf0:	2301      	movlt	r3, #1
    dbf2:	2300      	movge	r3, #0
    dbf4:	602b      	str	r3, [r5, #0]
    dbf6:	4bbe      	ldr	r3, [pc, #760]	; (def0 <_dtoa_r+0x338>)
    dbf8:	bfbc      	itt	lt
    dbfa:	f028 4800 	biclt.w	r8, r8, #2147483648	; 0x80000000
    dbfe:	f8cd 800c 	strlt.w	r8, [sp, #12]
    dc02:	ea33 0308 	bics.w	r3, r3, r8
    dc06:	f000 809f 	beq.w	dd48 <_dtoa_r+0x190>
    dc0a:	ed9d 8b02 	vldr	d8, [sp, #8]
    dc0e:	eeb5 8b40 	vcmp.f64	d8, #0.0
    dc12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dc16:	d111      	bne.n	dc3c <_dtoa_r+0x84>
    dc18:	9a05      	ldr	r2, [sp, #20]
    dc1a:	2301      	movs	r3, #1
    dc1c:	6013      	str	r3, [r2, #0]
    dc1e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    dc20:	2b00      	cmp	r3, #0
    dc22:	f000 823f 	beq.w	e0a4 <_dtoa_r+0x4ec>
    dc26:	4bb3      	ldr	r3, [pc, #716]	; (def4 <_dtoa_r+0x33c>)
    dc28:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    dc2a:	6013      	str	r3, [r2, #0]
    dc2c:	3b01      	subs	r3, #1
    dc2e:	9300      	str	r3, [sp, #0]
    dc30:	9800      	ldr	r0, [sp, #0]
    dc32:	b00f      	add	sp, #60	; 0x3c
    dc34:	ecbd 8b02 	vpop	{d8}
    dc38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dc3c:	aa0c      	add	r2, sp, #48	; 0x30
    dc3e:	a90d      	add	r1, sp, #52	; 0x34
    dc40:	4620      	mov	r0, r4
    dc42:	eeb0 0b48 	vmov.f64	d0, d8
    dc46:	f7ff fe65 	bl	d914 <__d2b>
    dc4a:	ea5f 5318 	movs.w	r3, r8, lsr #20
    dc4e:	4605      	mov	r5, r0
    dc50:	f040 8092 	bne.w	dd78 <_dtoa_r+0x1c0>
    dc54:	e9dd 130c 	ldrd	r1, r3, [sp, #48]	; 0x30
    dc58:	440b      	add	r3, r1
    dc5a:	f203 4232 	addw	r2, r3, #1074	; 0x432
    dc5e:	2a20      	cmp	r2, #32
    dc60:	f340 82fa 	ble.w	e258 <_dtoa_r+0x6a0>
    dc64:	f1c2 0240 	rsb	r2, r2, #64	; 0x40
    dc68:	fa08 f802 	lsl.w	r8, r8, r2
    dc6c:	f203 4212 	addw	r2, r3, #1042	; 0x412
    dc70:	40d6      	lsrs	r6, r2
    dc72:	ea48 0206 	orr.w	r2, r8, r6
    dc76:	ee07 2a10 	vmov	s14, r2
    dc7a:	eeb8 7b47 	vcvt.f64.u32	d7, s14
    dc7e:	1e58      	subs	r0, r3, #1
    dc80:	ee17 6a90 	vmov	r6, s15
    dc84:	ec53 2b17 	vmov	r2, r3, d7
    dc88:	f04f 0a01 	mov.w	sl, #1
    dc8c:	f1a6 73f8 	sub.w	r3, r6, #32505856	; 0x1f00000
    dc90:	ed9f 3b91 	vldr	d3, [pc, #580]	; ded8 <_dtoa_r+0x320>
    dc94:	ed9f 7b92 	vldr	d7, [pc, #584]	; dee0 <_dtoa_r+0x328>
    dc98:	ed9f 5b93 	vldr	d5, [pc, #588]	; dee8 <_dtoa_r+0x330>
    dc9c:	ee06 0a90 	vmov	s13, r0
    dca0:	ec43 2b12 	vmov	d2, r2, r3
    dca4:	eeb8 4be6 	vcvt.f64.s32	d4, s13
    dca8:	eeb7 6b08 	vmov.f64	d6, #120	; 0x3fc00000  1.5
    dcac:	ee32 6b46 	vsub.f64	d6, d2, d6
    dcb0:	eea6 7b03 	vfma.f64	d7, d6, d3
    dcb4:	eea4 7b05 	vfma.f64	d7, d4, d5
    dcb8:	eefd 6bc7 	vcvt.s32.f64	s13, d7
    dcbc:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
    dcc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dcc4:	ee16 7a90 	vmov	r7, s13
    dcc8:	d508      	bpl.n	dcdc <_dtoa_r+0x124>
    dcca:	eeb8 6be6 	vcvt.f64.s32	d6, s13
    dcce:	eeb4 6b47 	vcmp.f64	d6, d7
    dcd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dcd6:	bf18      	it	ne
    dcd8:	f107 37ff 	addne.w	r7, r7, #4294967295	; 0xffffffff
    dcdc:	2f16      	cmp	r7, #22
    dcde:	f200 8145 	bhi.w	df6c <_dtoa_r+0x3b4>
    dce2:	4b85      	ldr	r3, [pc, #532]	; (def8 <_dtoa_r+0x340>)
    dce4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
    dce8:	ed93 7b00 	vldr	d7, [r3]
    dcec:	eeb4 8bc7 	vcmpe.f64	d8, d7
    dcf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dcf4:	d557      	bpl.n	dda6 <_dtoa_r+0x1ee>
    dcf6:	1a09      	subs	r1, r1, r0
    dcf8:	2300      	movs	r3, #0
    dcfa:	f1b1 0801 	subs.w	r8, r1, #1
    dcfe:	f107 37ff 	add.w	r7, r7, #4294967295	; 0xffffffff
    dd02:	930a      	str	r3, [sp, #40]	; 0x28
    dd04:	f100 8139 	bmi.w	df7a <_dtoa_r+0x3c2>
    dd08:	2300      	movs	r3, #0
    dd0a:	9306      	str	r3, [sp, #24]
    dd0c:	2f00      	cmp	r7, #0
    dd0e:	da52      	bge.n	ddb6 <_dtoa_r+0x1fe>
    dd10:	9b06      	ldr	r3, [sp, #24]
    dd12:	9704      	str	r7, [sp, #16]
    dd14:	1bdb      	subs	r3, r3, r7
    dd16:	9306      	str	r3, [sp, #24]
    dd18:	427b      	negs	r3, r7
    dd1a:	9308      	str	r3, [sp, #32]
    dd1c:	9b01      	ldr	r3, [sp, #4]
    dd1e:	2b09      	cmp	r3, #9
    dd20:	f04f 0700 	mov.w	r7, #0
    dd24:	d84e      	bhi.n	ddc4 <_dtoa_r+0x20c>
    dd26:	2b05      	cmp	r3, #5
    dd28:	f340 829d 	ble.w	e266 <_dtoa_r+0x6ae>
    dd2c:	3b04      	subs	r3, #4
    dd2e:	9301      	str	r3, [sp, #4]
    dd30:	2600      	movs	r6, #0
    dd32:	9b01      	ldr	r3, [sp, #4]
    dd34:	1e9a      	subs	r2, r3, #2
    dd36:	2a03      	cmp	r2, #3
    dd38:	f200 8125 	bhi.w	df86 <_dtoa_r+0x3ce>
    dd3c:	e8df f012 	tbh	[pc, r2, lsl #1]
    dd40:	03a703aa 	.word	0x03a703aa
    dd44:	037e039d 	.word	0x037e039d
    dd48:	9a05      	ldr	r2, [sp, #20]
    dd4a:	f3c8 0813 	ubfx	r8, r8, #0, #20
    dd4e:	f242 730f 	movw	r3, #9999	; 0x270f
    dd52:	ea58 0806 	orrs.w	r8, r8, r6
    dd56:	6013      	str	r3, [r2, #0]
    dd58:	d11e      	bne.n	dd98 <_dtoa_r+0x1e0>
    dd5a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    dd5c:	2b00      	cmp	r3, #0
    dd5e:	f000 8591 	beq.w	e884 <_dtoa_r+0xccc>
    dd62:	4b66      	ldr	r3, [pc, #408]	; (defc <_dtoa_r+0x344>)
    dd64:	9300      	str	r3, [sp, #0]
    dd66:	3308      	adds	r3, #8
    dd68:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    dd6a:	9800      	ldr	r0, [sp, #0]
    dd6c:	6013      	str	r3, [r2, #0]
    dd6e:	b00f      	add	sp, #60	; 0x3c
    dd70:	ecbd 8b02 	vpop	{d8}
    dd74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dd78:	ee18 6a90 	vmov	r6, s17
    dd7c:	f3c6 0613 	ubfx	r6, r6, #0, #20
    dd80:	f2a3 30ff 	subw	r0, r3, #1023	; 0x3ff
    dd84:	ec53 2b18 	vmov	r2, r3, d8
    dd88:	f046 537f 	orr.w	r3, r6, #1069547520	; 0x3fc00000
    dd8c:	990c      	ldr	r1, [sp, #48]	; 0x30
    dd8e:	f04f 0a00 	mov.w	sl, #0
    dd92:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
    dd96:	e77b      	b.n	dc90 <_dtoa_r+0xd8>
    dd98:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    dd9a:	2b00      	cmp	r3, #0
    dd9c:	f040 833b 	bne.w	e416 <_dtoa_r+0x85e>
    dda0:	4b57      	ldr	r3, [pc, #348]	; (df00 <_dtoa_r+0x348>)
    dda2:	9300      	str	r3, [sp, #0]
    dda4:	e744      	b.n	dc30 <_dtoa_r+0x78>
    dda6:	1a09      	subs	r1, r1, r0
    dda8:	2300      	movs	r3, #0
    ddaa:	f1b1 0801 	subs.w	r8, r1, #1
    ddae:	930a      	str	r3, [sp, #40]	; 0x28
    ddb0:	f100 80e3 	bmi.w	df7a <_dtoa_r+0x3c2>
    ddb4:	9306      	str	r3, [sp, #24]
    ddb6:	2300      	movs	r3, #0
    ddb8:	9308      	str	r3, [sp, #32]
    ddba:	9b01      	ldr	r3, [sp, #4]
    ddbc:	9704      	str	r7, [sp, #16]
    ddbe:	2b09      	cmp	r3, #9
    ddc0:	44b8      	add	r8, r7
    ddc2:	d9b0      	bls.n	dd26 <_dtoa_r+0x16e>
    ddc4:	2300      	movs	r3, #0
    ddc6:	2601      	movs	r6, #1
    ddc8:	9301      	str	r3, [sp, #4]
    ddca:	9607      	str	r6, [sp, #28]
    ddcc:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
    ddd0:	469b      	mov	fp, r3
    ddd2:	2100      	movs	r1, #0
    ddd4:	63e1      	str	r1, [r4, #60]	; 0x3c
    ddd6:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
    ddda:	4620      	mov	r0, r4
    dddc:	f7ff fa48 	bl	d270 <_Balloc>
    dde0:	9000      	str	r0, [sp, #0]
    dde2:	2800      	cmp	r0, #0
    dde4:	f000 8540 	beq.w	e868 <_dtoa_r+0xcb0>
    dde8:	9b00      	ldr	r3, [sp, #0]
    ddea:	63a3      	str	r3, [r4, #56]	; 0x38
    ddec:	f1b9 0f0e 	cmp.w	r9, #14
    ddf0:	f200 80dc 	bhi.w	dfac <_dtoa_r+0x3f4>
    ddf4:	2e00      	cmp	r6, #0
    ddf6:	f000 80d9 	beq.w	dfac <_dtoa_r+0x3f4>
    ddfa:	9b04      	ldr	r3, [sp, #16]
    ddfc:	2b00      	cmp	r3, #0
    ddfe:	f340 83de 	ble.w	e5be <_dtoa_r+0xa06>
    de02:	4a3d      	ldr	r2, [pc, #244]	; (def8 <_dtoa_r+0x340>)
    de04:	f003 010f 	and.w	r1, r3, #15
    de08:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
    de0c:	ed92 7b00 	vldr	d7, [r2]
    de10:	111a      	asrs	r2, r3, #4
    de12:	05db      	lsls	r3, r3, #23
    de14:	f140 8382 	bpl.w	e51c <_dtoa_r+0x964>
    de18:	493a      	ldr	r1, [pc, #232]	; (df04 <_dtoa_r+0x34c>)
    de1a:	ed91 6b08 	vldr	d6, [r1, #32]
    de1e:	f002 020f 	and.w	r2, r2, #15
    de22:	2003      	movs	r0, #3
    de24:	ee88 5b06 	vdiv.f64	d5, d8, d6
    de28:	b15a      	cbz	r2, de42 <_dtoa_r+0x28a>
    de2a:	4936      	ldr	r1, [pc, #216]	; (df04 <_dtoa_r+0x34c>)
    de2c:	07d6      	lsls	r6, r2, #31
    de2e:	d504      	bpl.n	de3a <_dtoa_r+0x282>
    de30:	ed91 6b00 	vldr	d6, [r1]
    de34:	3001      	adds	r0, #1
    de36:	ee27 7b06 	vmul.f64	d7, d7, d6
    de3a:	1052      	asrs	r2, r2, #1
    de3c:	f101 0108 	add.w	r1, r1, #8
    de40:	d1f4      	bne.n	de2c <_dtoa_r+0x274>
    de42:	ee85 6b07 	vdiv.f64	d6, d5, d7
    de46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    de48:	b13b      	cbz	r3, de5a <_dtoa_r+0x2a2>
    de4a:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
    de4e:	eeb4 6bc7 	vcmpe.f64	d6, d7
    de52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    de56:	f100 84ae 	bmi.w	e7b6 <_dtoa_r+0xbfe>
    de5a:	ee07 0a90 	vmov	s15, r0
    de5e:	eeb8 5be7 	vcvt.f64.s32	d5, s15
    de62:	eeb1 7b0c 	vmov.f64	d7, #28	; 0x40e00000  7.0
    de66:	eea5 7b06 	vfma.f64	d7, d5, d6
    de6a:	ee17 2a90 	vmov	r2, s15
    de6e:	ec51 0b17 	vmov	r0, r1, d7
    de72:	f1a2 7150 	sub.w	r1, r2, #54525952	; 0x3400000
    de76:	f1b9 0f00 	cmp.w	r9, #0
    de7a:	f000 8388 	beq.w	e58e <_dtoa_r+0x9d6>
    de7e:	9e04      	ldr	r6, [sp, #16]
    de80:	464a      	mov	r2, r9
    de82:	9b07      	ldr	r3, [sp, #28]
    de84:	2b00      	cmp	r3, #0
    de86:	f000 8447 	beq.w	e718 <_dtoa_r+0xb60>
    de8a:	eeb6 3b00 	vmov.f64	d3, #96	; 0x3f000000  0.5
    de8e:	4b1a      	ldr	r3, [pc, #104]	; (def8 <_dtoa_r+0x340>)
    de90:	eefd 4bc6 	vcvt.s32.f64	s9, d6
    de94:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
    de98:	eeb8 7be4 	vcvt.f64.s32	d7, s9
    de9c:	ee36 7b47 	vsub.f64	d7, d6, d7
    dea0:	ed1c 6b02 	vldr	d6, [ip, #-8]
    dea4:	ee83 5b06 	vdiv.f64	d5, d3, d6
    dea8:	ec41 0b16 	vmov	d6, r0, r1
    deac:	ee14 0a90 	vmov	r0, s9
    deb0:	ee35 5b46 	vsub.f64	d5, d5, d6
    deb4:	9900      	ldr	r1, [sp, #0]
    deb6:	eeb4 5bc7 	vcmpe.f64	d5, d7
    deba:	3030      	adds	r0, #48	; 0x30
    debc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dec0:	f801 0b01 	strb.w	r0, [r1], #1
    dec4:	f300 84ac 	bgt.w	e820 <_dtoa_r+0xc68>
    dec8:	eeb7 2b00 	vmov.f64	d2, #112	; 0x3f800000  1.0
    decc:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
    ded0:	f04f 0c00 	mov.w	ip, #0
    ded4:	e031      	b.n	df3a <_dtoa_r+0x382>
    ded6:	bf00      	nop
    ded8:	636f4361 	.word	0x636f4361
    dedc:	3fd287a7 	.word	0x3fd287a7
    dee0:	8b60c8b3 	.word	0x8b60c8b3
    dee4:	3fc68a28 	.word	0x3fc68a28
    dee8:	509f79fb 	.word	0x509f79fb
    deec:	3fd34413 	.word	0x3fd34413
    def0:	7ff00000 	.word	0x7ff00000
    def4:	20001555 	.word	0x20001555
    def8:	200002a8 	.word	0x200002a8
    defc:	200014a8 	.word	0x200014a8
    df00:	200014b4 	.word	0x200014b4
    df04:	20000280 	.word	0x20000280
    df08:	f10c 0c01 	add.w	ip, ip, #1
    df0c:	4594      	cmp	ip, r2
    df0e:	da4d      	bge.n	dfac <_dtoa_r+0x3f4>
    df10:	ee27 7b04 	vmul.f64	d7, d7, d4
    df14:	ee25 5b04 	vmul.f64	d5, d5, d4
    df18:	eefd 6bc7 	vcvt.s32.f64	s13, d7
    df1c:	ee16 3a90 	vmov	r3, s13
    df20:	eeb8 3be6 	vcvt.f64.s32	d3, s13
    df24:	3330      	adds	r3, #48	; 0x30
    df26:	ee37 7b43 	vsub.f64	d7, d7, d3
    df2a:	eeb4 7bc5 	vcmpe.f64	d7, d5
    df2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    df32:	f801 3b01 	strb.w	r3, [r1], #1
    df36:	f100 8473 	bmi.w	e820 <_dtoa_r+0xc68>
    df3a:	ee32 6b47 	vsub.f64	d6, d2, d7
    df3e:	eeb4 6bc5 	vcmpe.f64	d6, d5
    df42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    df46:	d5df      	bpl.n	df08 <_dtoa_r+0x350>
    df48:	9a00      	ldr	r2, [sp, #0]
    df4a:	9604      	str	r6, [sp, #16]
    df4c:	e002      	b.n	df54 <_dtoa_r+0x39c>
    df4e:	428a      	cmp	r2, r1
    df50:	f000 8450 	beq.w	e7f4 <_dtoa_r+0xc3c>
    df54:	4689      	mov	r9, r1
    df56:	f811 3d01 	ldrb.w	r3, [r1, #-1]!
    df5a:	2b39      	cmp	r3, #57	; 0x39
    df5c:	d0f7      	beq.n	df4e <_dtoa_r+0x396>
    df5e:	3301      	adds	r3, #1
    df60:	b2db      	uxtb	r3, r3
    df62:	700b      	strb	r3, [r1, #0]
    df64:	9b04      	ldr	r3, [sp, #16]
    df66:	3301      	adds	r3, #1
    df68:	9304      	str	r3, [sp, #16]
    df6a:	e155      	b.n	e218 <_dtoa_r+0x660>
    df6c:	1a09      	subs	r1, r1, r0
    df6e:	2301      	movs	r3, #1
    df70:	f1b1 0801 	subs.w	r8, r1, #1
    df74:	930a      	str	r3, [sp, #40]	; 0x28
    df76:	f57f aec7 	bpl.w	dd08 <_dtoa_r+0x150>
    df7a:	f1c1 0301 	rsb	r3, r1, #1
    df7e:	9306      	str	r3, [sp, #24]
    df80:	f04f 0800 	mov.w	r8, #0
    df84:	e6c2      	b.n	dd0c <_dtoa_r+0x154>
    df86:	2600      	movs	r6, #0
    df88:	63e6      	str	r6, [r4, #60]	; 0x3c
    df8a:	4631      	mov	r1, r6
    df8c:	4620      	mov	r0, r4
    df8e:	f7ff f96f 	bl	d270 <_Balloc>
    df92:	9000      	str	r0, [sp, #0]
    df94:	2800      	cmp	r0, #0
    df96:	f000 8467 	beq.w	e868 <_dtoa_r+0xcb0>
    df9a:	9b00      	ldr	r3, [sp, #0]
    df9c:	63a3      	str	r3, [r4, #56]	; 0x38
    df9e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    dfa2:	930b      	str	r3, [sp, #44]	; 0x2c
    dfa4:	4699      	mov	r9, r3
    dfa6:	2301      	movs	r3, #1
    dfa8:	46b3      	mov	fp, r6
    dfaa:	9307      	str	r3, [sp, #28]
    dfac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    dfae:	2a00      	cmp	r2, #0
    dfb0:	db55      	blt.n	e05e <_dtoa_r+0x4a6>
    dfb2:	9904      	ldr	r1, [sp, #16]
    dfb4:	290e      	cmp	r1, #14
    dfb6:	dc52      	bgt.n	e05e <_dtoa_r+0x4a6>
    dfb8:	4bb7      	ldr	r3, [pc, #732]	; (e298 <_dtoa_r+0x6e0>)
    dfba:	f1bb 0f00 	cmp.w	fp, #0
    dfbe:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
    dfc2:	ed93 6b00 	vldr	d6, [r3]
    dfc6:	da15      	bge.n	dff4 <_dtoa_r+0x43c>
    dfc8:	f1b9 0f00 	cmp.w	r9, #0
    dfcc:	dc12      	bgt.n	dff4 <_dtoa_r+0x43c>
    dfce:	f040 82f2 	bne.w	e5b6 <_dtoa_r+0x9fe>
    dfd2:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
    dfd6:	ee26 7b07 	vmul.f64	d7, d6, d7
    dfda:	eeb4 8bc7 	vcmpe.f64	d8, d7
    dfde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    dfe2:	46ca      	mov	sl, r9
    dfe4:	464e      	mov	r6, r9
    dfe6:	f200 826d 	bhi.w	e4c4 <_dtoa_r+0x90c>
    dfea:	f8dd 8000 	ldr.w	r8, [sp]
    dfee:	ea6f 0b0b 	mvn.w	fp, fp
    dff2:	e270      	b.n	e4d6 <_dtoa_r+0x91e>
    dff4:	ee88 7b06 	vdiv.f64	d7, d8, d6
    dff8:	eebd 7bc7 	vcvt.s32.f64	s14, d7
    dffc:	9900      	ldr	r1, [sp, #0]
    dffe:	ee17 3a10 	vmov	r3, s14
    e002:	f1b9 0f01 	cmp.w	r9, #1
    e006:	f103 0330 	add.w	r3, r3, #48	; 0x30
    e00a:	eeb8 5bc7 	vcvt.f64.s32	d5, s14
    e00e:	f801 3b01 	strb.w	r3, [r1], #1
    e012:	eea5 8b46 	vfms.f64	d8, d5, d6
    e016:	f000 8334 	beq.w	e682 <_dtoa_r+0xaca>
    e01a:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
    e01e:	2301      	movs	r3, #1
    e020:	e011      	b.n	e046 <_dtoa_r+0x48e>
    e022:	ee88 7b06 	vdiv.f64	d7, d8, d6
    e026:	eebd 7bc7 	vcvt.s32.f64	s14, d7
    e02a:	3301      	adds	r3, #1
    e02c:	ee17 2a10 	vmov	r2, s14
    e030:	454b      	cmp	r3, r9
    e032:	f102 0230 	add.w	r2, r2, #48	; 0x30
    e036:	eeb8 5bc7 	vcvt.f64.s32	d5, s14
    e03a:	f801 2b01 	strb.w	r2, [r1], #1
    e03e:	eea5 8b46 	vfms.f64	d8, d5, d6
    e042:	f000 831e 	beq.w	e682 <_dtoa_r+0xaca>
    e046:	ee28 8b04 	vmul.f64	d8, d8, d4
    e04a:	eeb5 8b40 	vcmp.f64	d8, #0.0
    e04e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e052:	d1e6      	bne.n	e022 <_dtoa_r+0x46a>
    e054:	9b04      	ldr	r3, [sp, #16]
    e056:	3301      	adds	r3, #1
    e058:	9304      	str	r3, [sp, #16]
    e05a:	4689      	mov	r9, r1
    e05c:	e0dc      	b.n	e218 <_dtoa_r+0x660>
    e05e:	9b07      	ldr	r3, [sp, #28]
    e060:	b343      	cbz	r3, e0b4 <_dtoa_r+0x4fc>
    e062:	9b01      	ldr	r3, [sp, #4]
    e064:	2b01      	cmp	r3, #1
    e066:	f340 8276 	ble.w	e556 <_dtoa_r+0x99e>
    e06a:	9b08      	ldr	r3, [sp, #32]
    e06c:	f109 3aff 	add.w	sl, r9, #4294967295	; 0xffffffff
    e070:	4553      	cmp	r3, sl
    e072:	f280 823f 	bge.w	e4f4 <_dtoa_r+0x93c>
    e076:	9b08      	ldr	r3, [sp, #32]
    e078:	f8cd a020 	str.w	sl, [sp, #32]
    e07c:	ebaa 0203 	sub.w	r2, sl, r3
    e080:	4417      	add	r7, r2
    e082:	f04f 0a00 	mov.w	sl, #0
    e086:	f1b9 0f00 	cmp.w	r9, #0
    e08a:	f2c0 8325 	blt.w	e6d8 <_dtoa_r+0xb20>
    e08e:	9b06      	ldr	r3, [sp, #24]
    e090:	9309      	str	r3, [sp, #36]	; 0x24
    e092:	444b      	add	r3, r9
    e094:	44c8      	add	r8, r9
    e096:	9306      	str	r3, [sp, #24]
    e098:	2101      	movs	r1, #1
    e09a:	4620      	mov	r0, r4
    e09c:	f7ff f9ba 	bl	d414 <__i2b>
    e0a0:	4606      	mov	r6, r0
    e0a2:	e00c      	b.n	e0be <_dtoa_r+0x506>
    e0a4:	4b7d      	ldr	r3, [pc, #500]	; (e29c <_dtoa_r+0x6e4>)
    e0a6:	9300      	str	r3, [sp, #0]
    e0a8:	9800      	ldr	r0, [sp, #0]
    e0aa:	b00f      	add	sp, #60	; 0x3c
    e0ac:	ecbd 8b02 	vpop	{d8}
    e0b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e0b4:	9b06      	ldr	r3, [sp, #24]
    e0b6:	f8dd a020 	ldr.w	sl, [sp, #32]
    e0ba:	9e07      	ldr	r6, [sp, #28]
    e0bc:	9309      	str	r3, [sp, #36]	; 0x24
    e0be:	9b09      	ldr	r3, [sp, #36]	; 0x24
    e0c0:	b16b      	cbz	r3, e0de <_dtoa_r+0x526>
    e0c2:	f1b8 0f00 	cmp.w	r8, #0
    e0c6:	dd0a      	ble.n	e0de <_dtoa_r+0x526>
    e0c8:	4543      	cmp	r3, r8
    e0ca:	9906      	ldr	r1, [sp, #24]
    e0cc:	461a      	mov	r2, r3
    e0ce:	bfa8      	it	ge
    e0d0:	4642      	movge	r2, r8
    e0d2:	1a89      	subs	r1, r1, r2
    e0d4:	1a9b      	subs	r3, r3, r2
    e0d6:	9106      	str	r1, [sp, #24]
    e0d8:	9309      	str	r3, [sp, #36]	; 0x24
    e0da:	eba8 0802 	sub.w	r8, r8, r2
    e0de:	9b08      	ldr	r3, [sp, #32]
    e0e0:	b163      	cbz	r3, e0fc <_dtoa_r+0x544>
    e0e2:	9b07      	ldr	r3, [sp, #28]
    e0e4:	2b00      	cmp	r3, #0
    e0e6:	f000 82a7 	beq.w	e638 <_dtoa_r+0xa80>
    e0ea:	f1ba 0f00 	cmp.w	sl, #0
    e0ee:	f300 8204 	bgt.w	e4fa <_dtoa_r+0x942>
    e0f2:	9b08      	ldr	r3, [sp, #32]
    e0f4:	ebb3 020a 	subs.w	r2, r3, sl
    e0f8:	f040 82ff 	bne.w	e6fa <_dtoa_r+0xb42>
    e0fc:	2101      	movs	r1, #1
    e0fe:	4620      	mov	r0, r4
    e100:	f7ff f988 	bl	d414 <__i2b>
    e104:	2f00      	cmp	r7, #0
    e106:	4682      	mov	sl, r0
    e108:	f300 80af 	bgt.w	e26a <_dtoa_r+0x6b2>
    e10c:	9b01      	ldr	r3, [sp, #4]
    e10e:	2b01      	cmp	r3, #1
    e110:	f340 8187 	ble.w	e422 <_dtoa_r+0x86a>
    e114:	2300      	movs	r3, #0
    e116:	9308      	str	r3, [sp, #32]
    e118:	2001      	movs	r0, #1
    e11a:	2f00      	cmp	r7, #0
    e11c:	f040 80b1 	bne.w	e282 <_dtoa_r+0x6ca>
    e120:	4440      	add	r0, r8
    e122:	f010 001f 	ands.w	r0, r0, #31
    e126:	f000 817a 	beq.w	e41e <_dtoa_r+0x866>
    e12a:	f1c0 0220 	rsb	r2, r0, #32
    e12e:	2a04      	cmp	r2, #4
    e130:	f300 8088 	bgt.w	e244 <_dtoa_r+0x68c>
    e134:	f040 81f6 	bne.w	e524 <_dtoa_r+0x96c>
    e138:	9b06      	ldr	r3, [sp, #24]
    e13a:	2b00      	cmp	r3, #0
    e13c:	dd05      	ble.n	e14a <_dtoa_r+0x592>
    e13e:	4629      	mov	r1, r5
    e140:	461a      	mov	r2, r3
    e142:	4620      	mov	r0, r4
    e144:	f7ff faa2 	bl	d68c <__lshift>
    e148:	4605      	mov	r5, r0
    e14a:	f1b8 0f00 	cmp.w	r8, #0
    e14e:	dd05      	ble.n	e15c <_dtoa_r+0x5a4>
    e150:	4651      	mov	r1, sl
    e152:	4642      	mov	r2, r8
    e154:	4620      	mov	r0, r4
    e156:	f7ff fa99 	bl	d68c <__lshift>
    e15a:	4682      	mov	sl, r0
    e15c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    e15e:	2b00      	cmp	r3, #0
    e160:	f040 813f 	bne.w	e3e2 <_dtoa_r+0x82a>
    e164:	f1b9 0f00 	cmp.w	r9, #0
    e168:	f340 8125 	ble.w	e3b6 <_dtoa_r+0x7fe>
    e16c:	9b07      	ldr	r3, [sp, #28]
    e16e:	2b00      	cmp	r3, #0
    e170:	f040 80a3 	bne.w	e2ba <_dtoa_r+0x702>
    e174:	9b04      	ldr	r3, [sp, #16]
    e176:	3301      	adds	r3, #1
    e178:	9304      	str	r3, [sp, #16]
    e17a:	f8dd 8000 	ldr.w	r8, [sp]
    e17e:	2701      	movs	r7, #1
    e180:	e007      	b.n	e192 <_dtoa_r+0x5da>
    e182:	4629      	mov	r1, r5
    e184:	2300      	movs	r3, #0
    e186:	220a      	movs	r2, #10
    e188:	4620      	mov	r0, r4
    e18a:	f7ff f8a1 	bl	d2d0 <__multadd>
    e18e:	3701      	adds	r7, #1
    e190:	4605      	mov	r5, r0
    e192:	4651      	mov	r1, sl
    e194:	4628      	mov	r0, r5
    e196:	f7ff fc7b 	bl	da90 <quorem>
    e19a:	45b9      	cmp	r9, r7
    e19c:	f100 0030 	add.w	r0, r0, #48	; 0x30
    e1a0:	f808 0b01 	strb.w	r0, [r8], #1
    e1a4:	dced      	bgt.n	e182 <_dtoa_r+0x5ca>
    e1a6:	f1b9 0f00 	cmp.w	r9, #0
    e1aa:	9a00      	ldr	r2, [sp, #0]
    e1ac:	bfcc      	ite	gt
    e1ae:	46cb      	movgt	fp, r9
    e1b0:	f04f 0b01 	movle.w	fp, #1
    e1b4:	4603      	mov	r3, r0
    e1b6:	4493      	add	fp, r2
    e1b8:	2700      	movs	r7, #0
    e1ba:	4629      	mov	r1, r5
    e1bc:	2201      	movs	r2, #1
    e1be:	4620      	mov	r0, r4
    e1c0:	9301      	str	r3, [sp, #4]
    e1c2:	f7ff fa63 	bl	d68c <__lshift>
    e1c6:	4651      	mov	r1, sl
    e1c8:	4605      	mov	r5, r0
    e1ca:	f7ff fad7 	bl	d77c <__mcmp>
    e1ce:	2800      	cmp	r0, #0
    e1d0:	f340 81af 	ble.w	e532 <_dtoa_r+0x97a>
    e1d4:	f81b 3c01 	ldrb.w	r3, [fp, #-1]
    e1d8:	9a00      	ldr	r2, [sp, #0]
    e1da:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
    e1de:	e004      	b.n	e1ea <_dtoa_r+0x632>
    e1e0:	455a      	cmp	r2, fp
    e1e2:	f000 81b1 	beq.w	e548 <_dtoa_r+0x990>
    e1e6:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
    e1ea:	2b39      	cmp	r3, #57	; 0x39
    e1ec:	f10b 0901 	add.w	r9, fp, #1
    e1f0:	d0f6      	beq.n	e1e0 <_dtoa_r+0x628>
    e1f2:	3301      	adds	r3, #1
    e1f4:	f88b 3000 	strb.w	r3, [fp]
    e1f8:	4651      	mov	r1, sl
    e1fa:	4620      	mov	r0, r4
    e1fc:	f7ff f85e 	bl	d2bc <_Bfree>
    e200:	b156      	cbz	r6, e218 <_dtoa_r+0x660>
    e202:	b12f      	cbz	r7, e210 <_dtoa_r+0x658>
    e204:	42b7      	cmp	r7, r6
    e206:	d003      	beq.n	e210 <_dtoa_r+0x658>
    e208:	4639      	mov	r1, r7
    e20a:	4620      	mov	r0, r4
    e20c:	f7ff f856 	bl	d2bc <_Bfree>
    e210:	4631      	mov	r1, r6
    e212:	4620      	mov	r0, r4
    e214:	f7ff f852 	bl	d2bc <_Bfree>
    e218:	4629      	mov	r1, r5
    e21a:	4620      	mov	r0, r4
    e21c:	f7ff f84e 	bl	d2bc <_Bfree>
    e220:	2300      	movs	r3, #0
    e222:	f889 3000 	strb.w	r3, [r9]
    e226:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    e22a:	601a      	str	r2, [r3, #0]
    e22c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    e22e:	2b00      	cmp	r3, #0
    e230:	f43f acfe 	beq.w	dc30 <_dtoa_r+0x78>
    e234:	9800      	ldr	r0, [sp, #0]
    e236:	f8c3 9000 	str.w	r9, [r3]
    e23a:	b00f      	add	sp, #60	; 0x3c
    e23c:	ecbd 8b02 	vpop	{d8}
    e240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e244:	f1c0 001c 	rsb	r0, r0, #28
    e248:	9b06      	ldr	r3, [sp, #24]
    e24a:	4403      	add	r3, r0
    e24c:	9306      	str	r3, [sp, #24]
    e24e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    e250:	4403      	add	r3, r0
    e252:	9309      	str	r3, [sp, #36]	; 0x24
    e254:	4480      	add	r8, r0
    e256:	e76f      	b.n	e138 <_dtoa_r+0x580>
    e258:	f1c2 0220 	rsb	r2, r2, #32
    e25c:	fa06 f202 	lsl.w	r2, r6, r2
    e260:	ee07 2a10 	vmov	s14, r2
    e264:	e509      	b.n	dc7a <_dtoa_r+0xc2>
    e266:	2601      	movs	r6, #1
    e268:	e563      	b.n	dd32 <_dtoa_r+0x17a>
    e26a:	4601      	mov	r1, r0
    e26c:	463a      	mov	r2, r7
    e26e:	4620      	mov	r0, r4
    e270:	f7ff f9ac 	bl	d5cc <__pow5mult>
    e274:	9b01      	ldr	r3, [sp, #4]
    e276:	2b01      	cmp	r3, #1
    e278:	4682      	mov	sl, r0
    e27a:	f340 81c5 	ble.w	e608 <_dtoa_r+0xa50>
    e27e:	2300      	movs	r3, #0
    e280:	9308      	str	r3, [sp, #32]
    e282:	f8da 2010 	ldr.w	r2, [sl, #16]
    e286:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
    e28a:	6910      	ldr	r0, [r2, #16]
    e28c:	f7ff f872 	bl	d374 <__hi0bits>
    e290:	f1c0 0020 	rsb	r0, r0, #32
    e294:	e744      	b.n	e120 <_dtoa_r+0x568>
    e296:	bf00      	nop
    e298:	200002a8 	.word	0x200002a8
    e29c:	20001554 	.word	0x20001554
    e2a0:	4631      	mov	r1, r6
    e2a2:	2300      	movs	r3, #0
    e2a4:	220a      	movs	r2, #10
    e2a6:	4620      	mov	r0, r4
    e2a8:	f7ff f812 	bl	d2d0 <__multadd>
    e2ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    e2ae:	2b00      	cmp	r3, #0
    e2b0:	4606      	mov	r6, r0
    e2b2:	f340 82ce 	ble.w	e852 <_dtoa_r+0xc9a>
    e2b6:	9704      	str	r7, [sp, #16]
    e2b8:	4699      	mov	r9, r3
    e2ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
    e2bc:	2b00      	cmp	r3, #0
    e2be:	dd05      	ble.n	e2cc <_dtoa_r+0x714>
    e2c0:	4631      	mov	r1, r6
    e2c2:	461a      	mov	r2, r3
    e2c4:	4620      	mov	r0, r4
    e2c6:	f7ff f9e1 	bl	d68c <__lshift>
    e2ca:	4606      	mov	r6, r0
    e2cc:	9b08      	ldr	r3, [sp, #32]
    e2ce:	2b00      	cmp	r3, #0
    e2d0:	f040 81eb 	bne.w	e6aa <_dtoa_r+0xaf2>
    e2d4:	46b0      	mov	r8, r6
    e2d6:	9b02      	ldr	r3, [sp, #8]
    e2d8:	9f00      	ldr	r7, [sp, #0]
    e2da:	f003 0201 	and.w	r2, r3, #1
    e2de:	1e7b      	subs	r3, r7, #1
    e2e0:	444b      	add	r3, r9
    e2e2:	9308      	str	r3, [sp, #32]
    e2e4:	9b01      	ldr	r3, [sp, #4]
    e2e6:	920a      	str	r2, [sp, #40]	; 0x28
    e2e8:	4313      	orrs	r3, r2
    e2ea:	9309      	str	r3, [sp, #36]	; 0x24
    e2ec:	4651      	mov	r1, sl
    e2ee:	4628      	mov	r0, r5
    e2f0:	f7ff fbce 	bl	da90 <quorem>
    e2f4:	4631      	mov	r1, r6
    e2f6:	4683      	mov	fp, r0
    e2f8:	4628      	mov	r0, r5
    e2fa:	f7ff fa3f 	bl	d77c <__mcmp>
    e2fe:	4642      	mov	r2, r8
    e300:	4651      	mov	r1, sl
    e302:	4681      	mov	r9, r0
    e304:	4620      	mov	r0, r4
    e306:	f7ff fa5b 	bl	d7c0 <__mdiff>
    e30a:	68c2      	ldr	r2, [r0, #12]
    e30c:	4601      	mov	r1, r0
    e30e:	f10b 0330 	add.w	r3, fp, #48	; 0x30
    e312:	2a00      	cmp	r2, #0
    e314:	d142      	bne.n	e39c <_dtoa_r+0x7e4>
    e316:	e9cd 0306 	strd	r0, r3, [sp, #24]
    e31a:	4628      	mov	r0, r5
    e31c:	f7ff fa2e 	bl	d77c <__mcmp>
    e320:	9906      	ldr	r1, [sp, #24]
    e322:	9002      	str	r0, [sp, #8]
    e324:	4620      	mov	r0, r4
    e326:	f7fe ffc9 	bl	d2bc <_Bfree>
    e32a:	9a02      	ldr	r2, [sp, #8]
    e32c:	9b07      	ldr	r3, [sp, #28]
    e32e:	b91a      	cbnz	r2, e338 <_dtoa_r+0x780>
    e330:	9909      	ldr	r1, [sp, #36]	; 0x24
    e332:	2900      	cmp	r1, #0
    e334:	f000 827e 	beq.w	e834 <_dtoa_r+0xc7c>
    e338:	f1b9 0f00 	cmp.w	r9, #0
    e33c:	f2c0 8183 	blt.w	e646 <_dtoa_r+0xa8e>
    e340:	9901      	ldr	r1, [sp, #4]
    e342:	ea49 0901 	orr.w	r9, r9, r1
    e346:	990a      	ldr	r1, [sp, #40]	; 0x28
    e348:	ea51 0909 	orrs.w	r9, r1, r9
    e34c:	f000 817b 	beq.w	e646 <_dtoa_r+0xa8e>
    e350:	2a00      	cmp	r2, #0
    e352:	f300 81c6 	bgt.w	e6e2 <_dtoa_r+0xb2a>
    e356:	9a08      	ldr	r2, [sp, #32]
    e358:	703b      	strb	r3, [r7, #0]
    e35a:	f107 0901 	add.w	r9, r7, #1
    e35e:	4297      	cmp	r7, r2
    e360:	46cb      	mov	fp, r9
    e362:	f000 81c4 	beq.w	e6ee <_dtoa_r+0xb36>
    e366:	4629      	mov	r1, r5
    e368:	2300      	movs	r3, #0
    e36a:	220a      	movs	r2, #10
    e36c:	4620      	mov	r0, r4
    e36e:	f7fe ffaf 	bl	d2d0 <__multadd>
    e372:	4546      	cmp	r6, r8
    e374:	4605      	mov	r5, r0
    e376:	4631      	mov	r1, r6
    e378:	f04f 0300 	mov.w	r3, #0
    e37c:	f04f 020a 	mov.w	r2, #10
    e380:	4620      	mov	r0, r4
    e382:	d012      	beq.n	e3aa <_dtoa_r+0x7f2>
    e384:	f7fe ffa4 	bl	d2d0 <__multadd>
    e388:	4641      	mov	r1, r8
    e38a:	4606      	mov	r6, r0
    e38c:	2300      	movs	r3, #0
    e38e:	220a      	movs	r2, #10
    e390:	4620      	mov	r0, r4
    e392:	f7fe ff9d 	bl	d2d0 <__multadd>
    e396:	464f      	mov	r7, r9
    e398:	4680      	mov	r8, r0
    e39a:	e7a7      	b.n	e2ec <_dtoa_r+0x734>
    e39c:	4620      	mov	r0, r4
    e39e:	9302      	str	r3, [sp, #8]
    e3a0:	f7fe ff8c 	bl	d2bc <_Bfree>
    e3a4:	9b02      	ldr	r3, [sp, #8]
    e3a6:	2201      	movs	r2, #1
    e3a8:	e7c6      	b.n	e338 <_dtoa_r+0x780>
    e3aa:	f7fe ff91 	bl	d2d0 <__multadd>
    e3ae:	464f      	mov	r7, r9
    e3b0:	4606      	mov	r6, r0
    e3b2:	4680      	mov	r8, r0
    e3b4:	e79a      	b.n	e2ec <_dtoa_r+0x734>
    e3b6:	9b01      	ldr	r3, [sp, #4]
    e3b8:	2b02      	cmp	r3, #2
    e3ba:	dc71      	bgt.n	e4a0 <_dtoa_r+0x8e8>
    e3bc:	9b07      	ldr	r3, [sp, #28]
    e3be:	2b00      	cmp	r3, #0
    e3c0:	f47f af7b 	bne.w	e2ba <_dtoa_r+0x702>
    e3c4:	9b04      	ldr	r3, [sp, #16]
    e3c6:	4651      	mov	r1, sl
    e3c8:	3301      	adds	r3, #1
    e3ca:	4628      	mov	r0, r5
    e3cc:	9304      	str	r3, [sp, #16]
    e3ce:	f7ff fb5f 	bl	da90 <quorem>
    e3d2:	f8dd b000 	ldr.w	fp, [sp]
    e3d6:	f100 0330 	add.w	r3, r0, #48	; 0x30
    e3da:	f80b 3b01 	strb.w	r3, [fp], #1
    e3de:	2700      	movs	r7, #0
    e3e0:	e6eb      	b.n	e1ba <_dtoa_r+0x602>
    e3e2:	4651      	mov	r1, sl
    e3e4:	4628      	mov	r0, r5
    e3e6:	f7ff f9c9 	bl	d77c <__mcmp>
    e3ea:	2800      	cmp	r0, #0
    e3ec:	f6bf aeba 	bge.w	e164 <_dtoa_r+0x5ac>
    e3f0:	4629      	mov	r1, r5
    e3f2:	2300      	movs	r3, #0
    e3f4:	220a      	movs	r2, #10
    e3f6:	4620      	mov	r0, r4
    e3f8:	f7fe ff6a 	bl	d2d0 <__multadd>
    e3fc:	9b04      	ldr	r3, [sp, #16]
    e3fe:	1e5f      	subs	r7, r3, #1
    e400:	9b07      	ldr	r3, [sp, #28]
    e402:	4605      	mov	r5, r0
    e404:	2b00      	cmp	r3, #0
    e406:	f47f af4b 	bne.w	e2a0 <_dtoa_r+0x6e8>
    e40a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    e40c:	2b00      	cmp	r3, #0
    e40e:	f340 8218 	ble.w	e842 <_dtoa_r+0xc8a>
    e412:	4699      	mov	r9, r3
    e414:	e6b1      	b.n	e17a <_dtoa_r+0x5c2>
    e416:	4bbc      	ldr	r3, [pc, #752]	; (e708 <_dtoa_r+0xb50>)
    e418:	9300      	str	r3, [sp, #0]
    e41a:	3303      	adds	r3, #3
    e41c:	e4a4      	b.n	dd68 <_dtoa_r+0x1b0>
    e41e:	201c      	movs	r0, #28
    e420:	e712      	b.n	e248 <_dtoa_r+0x690>
    e422:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    e426:	2800      	cmp	r0, #0
    e428:	f47f ae74 	bne.w	e114 <_dtoa_r+0x55c>
    e42c:	f3c1 0213 	ubfx	r2, r1, #0, #20
    e430:	2a00      	cmp	r2, #0
    e432:	f000 80f4 	beq.w	e61e <_dtoa_r+0xa66>
    e436:	9b02      	ldr	r3, [sp, #8]
    e438:	9308      	str	r3, [sp, #32]
    e43a:	e66d      	b.n	e118 <_dtoa_r+0x560>
    e43c:	2301      	movs	r3, #1
    e43e:	9307      	str	r3, [sp, #28]
    e440:	9b04      	ldr	r3, [sp, #16]
    e442:	445b      	add	r3, fp
    e444:	f103 0901 	add.w	r9, r3, #1
    e448:	f1b9 0f01 	cmp.w	r9, #1
    e44c:	46cc      	mov	ip, r9
    e44e:	930b      	str	r3, [sp, #44]	; 0x2c
    e450:	bfb8      	it	lt
    e452:	f04f 0c01 	movlt.w	ip, #1
    e456:	2100      	movs	r1, #0
    e458:	f1bc 0f17 	cmp.w	ip, #23
    e45c:	63e1      	str	r1, [r4, #60]	; 0x3c
    e45e:	f77f acbc 	ble.w	ddda <_dtoa_r+0x222>
    e462:	2001      	movs	r0, #1
    e464:	2204      	movs	r2, #4
    e466:	0052      	lsls	r2, r2, #1
    e468:	f102 0314 	add.w	r3, r2, #20
    e46c:	4563      	cmp	r3, ip
    e46e:	4601      	mov	r1, r0
    e470:	f100 0001 	add.w	r0, r0, #1
    e474:	d9f7      	bls.n	e466 <_dtoa_r+0x8ae>
    e476:	63e1      	str	r1, [r4, #60]	; 0x3c
    e478:	e4af      	b.n	ddda <_dtoa_r+0x222>
    e47a:	2301      	movs	r3, #1
    e47c:	9307      	str	r3, [sp, #28]
    e47e:	f1bb 0f00 	cmp.w	fp, #0
    e482:	dd52      	ble.n	e52a <_dtoa_r+0x972>
    e484:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
    e488:	46d9      	mov	r9, fp
    e48a:	46dc      	mov	ip, fp
    e48c:	e7e3      	b.n	e456 <_dtoa_r+0x89e>
    e48e:	2300      	movs	r3, #0
    e490:	9307      	str	r3, [sp, #28]
    e492:	e7d5      	b.n	e440 <_dtoa_r+0x888>
    e494:	2300      	movs	r3, #0
    e496:	9307      	str	r3, [sp, #28]
    e498:	e7f1      	b.n	e47e <_dtoa_r+0x8c6>
    e49a:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
    e49e:	9704      	str	r7, [sp, #16]
    e4a0:	f1b9 0f00 	cmp.w	r9, #0
    e4a4:	f47f ada1 	bne.w	dfea <_dtoa_r+0x432>
    e4a8:	4651      	mov	r1, sl
    e4aa:	464b      	mov	r3, r9
    e4ac:	2205      	movs	r2, #5
    e4ae:	4620      	mov	r0, r4
    e4b0:	f7fe ff0e 	bl	d2d0 <__multadd>
    e4b4:	4601      	mov	r1, r0
    e4b6:	4682      	mov	sl, r0
    e4b8:	4628      	mov	r0, r5
    e4ba:	f7ff f95f 	bl	d77c <__mcmp>
    e4be:	2800      	cmp	r0, #0
    e4c0:	f77f ad93 	ble.w	dfea <_dtoa_r+0x432>
    e4c4:	9b04      	ldr	r3, [sp, #16]
    e4c6:	f103 0b01 	add.w	fp, r3, #1
    e4ca:	9b00      	ldr	r3, [sp, #0]
    e4cc:	2231      	movs	r2, #49	; 0x31
    e4ce:	4698      	mov	r8, r3
    e4d0:	f803 2b01 	strb.w	r2, [r3], #1
    e4d4:	9300      	str	r3, [sp, #0]
    e4d6:	4651      	mov	r1, sl
    e4d8:	4620      	mov	r0, r4
    e4da:	f7fe feef 	bl	d2bc <_Bfree>
    e4de:	f10b 0301 	add.w	r3, fp, #1
    e4e2:	f8dd 9000 	ldr.w	r9, [sp]
    e4e6:	9304      	str	r3, [sp, #16]
    e4e8:	f8cd 8000 	str.w	r8, [sp]
    e4ec:	2e00      	cmp	r6, #0
    e4ee:	f47f ae8f 	bne.w	e210 <_dtoa_r+0x658>
    e4f2:	e691      	b.n	e218 <_dtoa_r+0x660>
    e4f4:	eba3 0a0a 	sub.w	sl, r3, sl
    e4f8:	e5c5      	b.n	e086 <_dtoa_r+0x4ce>
    e4fa:	4631      	mov	r1, r6
    e4fc:	4652      	mov	r2, sl
    e4fe:	4620      	mov	r0, r4
    e500:	f7ff f864 	bl	d5cc <__pow5mult>
    e504:	462a      	mov	r2, r5
    e506:	4601      	mov	r1, r0
    e508:	4606      	mov	r6, r0
    e50a:	4620      	mov	r0, r4
    e50c:	f7fe ffb0 	bl	d470 <__multiply>
    e510:	4629      	mov	r1, r5
    e512:	4605      	mov	r5, r0
    e514:	4620      	mov	r0, r4
    e516:	f7fe fed1 	bl	d2bc <_Bfree>
    e51a:	e5ea      	b.n	e0f2 <_dtoa_r+0x53a>
    e51c:	2002      	movs	r0, #2
    e51e:	eeb0 5b48 	vmov.f64	d5, d8
    e522:	e481      	b.n	de28 <_dtoa_r+0x270>
    e524:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
    e528:	e68e      	b.n	e248 <_dtoa_r+0x690>
    e52a:	f04f 0b01 	mov.w	fp, #1
    e52e:	46d9      	mov	r9, fp
    e530:	e44f      	b.n	ddd2 <_dtoa_r+0x21a>
    e532:	d103      	bne.n	e53c <_dtoa_r+0x984>
    e534:	9b01      	ldr	r3, [sp, #4]
    e536:	07db      	lsls	r3, r3, #31
    e538:	f53f ae4c 	bmi.w	e1d4 <_dtoa_r+0x61c>
    e53c:	46d9      	mov	r9, fp
    e53e:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
    e542:	2b30      	cmp	r3, #48	; 0x30
    e544:	d0fa      	beq.n	e53c <_dtoa_r+0x984>
    e546:	e657      	b.n	e1f8 <_dtoa_r+0x640>
    e548:	9b04      	ldr	r3, [sp, #16]
    e54a:	9a00      	ldr	r2, [sp, #0]
    e54c:	3301      	adds	r3, #1
    e54e:	9304      	str	r3, [sp, #16]
    e550:	2331      	movs	r3, #49	; 0x31
    e552:	7013      	strb	r3, [r2, #0]
    e554:	e650      	b.n	e1f8 <_dtoa_r+0x640>
    e556:	f1ba 0f00 	cmp.w	sl, #0
    e55a:	f000 8123 	beq.w	e7a4 <_dtoa_r+0xbec>
    e55e:	f202 4233 	addw	r2, r2, #1075	; 0x433
    e562:	9b06      	ldr	r3, [sp, #24]
    e564:	9309      	str	r3, [sp, #36]	; 0x24
    e566:	4413      	add	r3, r2
    e568:	f8dd a020 	ldr.w	sl, [sp, #32]
    e56c:	9306      	str	r3, [sp, #24]
    e56e:	4490      	add	r8, r2
    e570:	e592      	b.n	e098 <_dtoa_r+0x4e0>
    e572:	ee07 0a90 	vmov	s15, r0
    e576:	eeb1 5b0c 	vmov.f64	d5, #28	; 0x40e00000  7.0
    e57a:	eeb8 7be7 	vcvt.f64.s32	d7, s15
    e57e:	eea6 5b07 	vfma.f64	d5, d6, d7
    e582:	ee15 2a90 	vmov	r2, s11
    e586:	ec51 0b15 	vmov	r0, r1, d5
    e58a:	f1a2 7150 	sub.w	r1, r2, #54525952	; 0x3400000
    e58e:	ec41 0b15 	vmov	d5, r0, r1
    e592:	eeb1 7b04 	vmov.f64	d7, #20	; 0x40a00000  5.0
    e596:	ee36 7b47 	vsub.f64	d7, d6, d7
    e59a:	eeb4 7bc5 	vcmpe.f64	d7, d5
    e59e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e5a2:	f300 8137 	bgt.w	e814 <_dtoa_r+0xc5c>
    e5a6:	eeb1 5b45 	vneg.f64	d5, d5
    e5aa:	eeb4 7bc5 	vcmpe.f64	d7, d5
    e5ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e5b2:	f57f acfb 	bpl.w	dfac <_dtoa_r+0x3f4>
    e5b6:	f04f 0a00 	mov.w	sl, #0
    e5ba:	4656      	mov	r6, sl
    e5bc:	e515      	b.n	dfea <_dtoa_r+0x432>
    e5be:	f000 80f5 	beq.w	e7ac <_dtoa_r+0xbf4>
    e5c2:	9b04      	ldr	r3, [sp, #16]
    e5c4:	4951      	ldr	r1, [pc, #324]	; (e70c <_dtoa_r+0xb54>)
    e5c6:	425a      	negs	r2, r3
    e5c8:	f002 000f 	and.w	r0, r2, #15
    e5cc:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
    e5d0:	ed91 6b00 	vldr	d6, [r1]
    e5d4:	1112      	asrs	r2, r2, #4
    e5d6:	ee28 6b06 	vmul.f64	d6, d8, d6
    e5da:	f000 8142 	beq.w	e862 <_dtoa_r+0xcaa>
    e5de:	eeb0 7b46 	vmov.f64	d7, d6
    e5e2:	494b      	ldr	r1, [pc, #300]	; (e710 <_dtoa_r+0xb58>)
    e5e4:	2600      	movs	r6, #0
    e5e6:	2002      	movs	r0, #2
    e5e8:	07d3      	lsls	r3, r2, #31
    e5ea:	d505      	bpl.n	e5f8 <_dtoa_r+0xa40>
    e5ec:	ed91 5b00 	vldr	d5, [r1]
    e5f0:	3001      	adds	r0, #1
    e5f2:	2601      	movs	r6, #1
    e5f4:	ee27 7b05 	vmul.f64	d7, d7, d5
    e5f8:	1052      	asrs	r2, r2, #1
    e5fa:	f101 0108 	add.w	r1, r1, #8
    e5fe:	d1f3      	bne.n	e5e8 <_dtoa_r+0xa30>
    e600:	2e00      	cmp	r6, #0
    e602:	fe06 6b07 	vseleq.f64	d6, d6, d7
    e606:	e41e      	b.n	de46 <_dtoa_r+0x28e>
    e608:	9b02      	ldr	r3, [sp, #8]
    e60a:	2b00      	cmp	r3, #0
    e60c:	f47f ae37 	bne.w	e27e <_dtoa_r+0x6c6>
    e610:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    e614:	f3c1 0213 	ubfx	r2, r1, #0, #20
    e618:	2a00      	cmp	r2, #0
    e61a:	f040 8137 	bne.w	e88c <_dtoa_r+0xcd4>
    e61e:	4a3d      	ldr	r2, [pc, #244]	; (e714 <_dtoa_r+0xb5c>)
    e620:	400a      	ands	r2, r1
    e622:	2a00      	cmp	r2, #0
    e624:	f000 80fa 	beq.w	e81c <_dtoa_r+0xc64>
    e628:	9b06      	ldr	r3, [sp, #24]
    e62a:	3301      	adds	r3, #1
    e62c:	9306      	str	r3, [sp, #24]
    e62e:	2301      	movs	r3, #1
    e630:	f108 0801 	add.w	r8, r8, #1
    e634:	9308      	str	r3, [sp, #32]
    e636:	e56f      	b.n	e118 <_dtoa_r+0x560>
    e638:	4629      	mov	r1, r5
    e63a:	9a08      	ldr	r2, [sp, #32]
    e63c:	4620      	mov	r0, r4
    e63e:	f7fe ffc5 	bl	d5cc <__pow5mult>
    e642:	4605      	mov	r5, r0
    e644:	e55a      	b.n	e0fc <_dtoa_r+0x544>
    e646:	2a00      	cmp	r2, #0
    e648:	dd12      	ble.n	e670 <_dtoa_r+0xab8>
    e64a:	4629      	mov	r1, r5
    e64c:	2201      	movs	r2, #1
    e64e:	4620      	mov	r0, r4
    e650:	9301      	str	r3, [sp, #4]
    e652:	f7ff f81b 	bl	d68c <__lshift>
    e656:	4651      	mov	r1, sl
    e658:	4605      	mov	r5, r0
    e65a:	f7ff f88f 	bl	d77c <__mcmp>
    e65e:	2800      	cmp	r0, #0
    e660:	9b01      	ldr	r3, [sp, #4]
    e662:	f340 80e1 	ble.w	e828 <_dtoa_r+0xc70>
    e666:	2b39      	cmp	r3, #57	; 0x39
    e668:	f000 80ca 	beq.w	e800 <_dtoa_r+0xc48>
    e66c:	f10b 0331 	add.w	r3, fp, #49	; 0x31
    e670:	46b9      	mov	r9, r7
    e672:	f809 3b01 	strb.w	r3, [r9], #1
    e676:	9b04      	ldr	r3, [sp, #16]
    e678:	3301      	adds	r3, #1
    e67a:	4637      	mov	r7, r6
    e67c:	9304      	str	r3, [sp, #16]
    e67e:	4646      	mov	r6, r8
    e680:	e5ba      	b.n	e1f8 <_dtoa_r+0x640>
    e682:	ee38 8b08 	vadd.f64	d8, d8, d8
    e686:	eeb4 8bc6 	vcmpe.f64	d8, d6
    e68a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e68e:	dc0a      	bgt.n	e6a6 <_dtoa_r+0xaee>
    e690:	eeb4 8b46 	vcmp.f64	d8, d6
    e694:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e698:	f47f acdc 	bne.w	e054 <_dtoa_r+0x49c>
    e69c:	ee17 3a10 	vmov	r3, s14
    e6a0:	07d8      	lsls	r0, r3, #31
    e6a2:	f57f acd7 	bpl.w	e054 <_dtoa_r+0x49c>
    e6a6:	9a00      	ldr	r2, [sp, #0]
    e6a8:	e454      	b.n	df54 <_dtoa_r+0x39c>
    e6aa:	6871      	ldr	r1, [r6, #4]
    e6ac:	4620      	mov	r0, r4
    e6ae:	f7fe fddf 	bl	d270 <_Balloc>
    e6b2:	4607      	mov	r7, r0
    e6b4:	2800      	cmp	r0, #0
    e6b6:	f000 80de 	beq.w	e876 <_dtoa_r+0xcbe>
    e6ba:	6933      	ldr	r3, [r6, #16]
    e6bc:	3302      	adds	r3, #2
    e6be:	009a      	lsls	r2, r3, #2
    e6c0:	f106 010c 	add.w	r1, r6, #12
    e6c4:	300c      	adds	r0, #12
    e6c6:	f7f1 ffb9 	bl	63c <memcpy>
    e6ca:	4639      	mov	r1, r7
    e6cc:	2201      	movs	r2, #1
    e6ce:	4620      	mov	r0, r4
    e6d0:	f7fe ffdc 	bl	d68c <__lshift>
    e6d4:	4680      	mov	r8, r0
    e6d6:	e5fe      	b.n	e2d6 <_dtoa_r+0x71e>
    e6d8:	9b06      	ldr	r3, [sp, #24]
    e6da:	eba3 0309 	sub.w	r3, r3, r9
    e6de:	9309      	str	r3, [sp, #36]	; 0x24
    e6e0:	e4da      	b.n	e098 <_dtoa_r+0x4e0>
    e6e2:	2b39      	cmp	r3, #57	; 0x39
    e6e4:	f000 808c 	beq.w	e800 <_dtoa_r+0xc48>
    e6e8:	46b9      	mov	r9, r7
    e6ea:	3301      	adds	r3, #1
    e6ec:	e7c1      	b.n	e672 <_dtoa_r+0xaba>
    e6ee:	9a04      	ldr	r2, [sp, #16]
    e6f0:	3201      	adds	r2, #1
    e6f2:	4637      	mov	r7, r6
    e6f4:	9204      	str	r2, [sp, #16]
    e6f6:	4646      	mov	r6, r8
    e6f8:	e55f      	b.n	e1ba <_dtoa_r+0x602>
    e6fa:	4629      	mov	r1, r5
    e6fc:	4620      	mov	r0, r4
    e6fe:	f7fe ff65 	bl	d5cc <__pow5mult>
    e702:	4605      	mov	r5, r0
    e704:	e4fa      	b.n	e0fc <_dtoa_r+0x544>
    e706:	bf00      	nop
    e708:	200014b4 	.word	0x200014b4
    e70c:	200002a8 	.word	0x200002a8
    e710:	20000280 	.word	0x20000280
    e714:	7ff00000 	.word	0x7ff00000
    e718:	4b5e      	ldr	r3, [pc, #376]	; (e894 <_dtoa_r+0xcdc>)
    e71a:	eefd 5bc6 	vcvt.s32.f64	s11, d6
    e71e:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
    e722:	ed1c 3b02 	vldr	d3, [ip, #-8]
    e726:	eeb8 7be5 	vcvt.f64.s32	d7, s11
    e72a:	ee36 7b47 	vsub.f64	d7, d6, d7
    e72e:	ec41 0b16 	vmov	d6, r0, r1
    e732:	ee15 1a90 	vmov	r1, s11
    e736:	ee23 3b06 	vmul.f64	d3, d3, d6
    e73a:	9800      	ldr	r0, [sp, #0]
    e73c:	3130      	adds	r1, #48	; 0x30
    e73e:	2a01      	cmp	r2, #1
    e740:	f800 1b01 	strb.w	r1, [r0], #1
    e744:	f000 8083 	beq.w	e84e <_dtoa_r+0xc96>
    e748:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
    e74c:	9b00      	ldr	r3, [sp, #0]
    e74e:	1899      	adds	r1, r3, r2
    e750:	ee27 7b04 	vmul.f64	d7, d7, d4
    e754:	eefd 6bc7 	vcvt.s32.f64	s13, d7
    e758:	ee16 3a90 	vmov	r3, s13
    e75c:	3330      	adds	r3, #48	; 0x30
    e75e:	f800 3b01 	strb.w	r3, [r0], #1
    e762:	4281      	cmp	r1, r0
    e764:	eeb8 5be6 	vcvt.f64.s32	d5, s13
    e768:	ee37 7b45 	vsub.f64	d7, d7, d5
    e76c:	d1f0      	bne.n	e750 <_dtoa_r+0xb98>
    e76e:	eeb6 6b00 	vmov.f64	d6, #96	; 0x3f000000  0.5
    e772:	ee33 5b06 	vadd.f64	d5, d3, d6
    e776:	eeb4 5bc7 	vcmpe.f64	d5, d7
    e77a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e77e:	f53f abe3 	bmi.w	df48 <_dtoa_r+0x390>
    e782:	ee36 6b43 	vsub.f64	d6, d6, d3
    e786:	eeb4 6bc7 	vcmpe.f64	d6, d7
    e78a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    e78e:	f77f ac0d 	ble.w	dfac <_dtoa_r+0x3f4>
    e792:	4689      	mov	r9, r1
    e794:	3901      	subs	r1, #1
    e796:	f819 3c01 	ldrb.w	r3, [r9, #-1]
    e79a:	2b30      	cmp	r3, #48	; 0x30
    e79c:	d0f9      	beq.n	e792 <_dtoa_r+0xbda>
    e79e:	1c73      	adds	r3, r6, #1
    e7a0:	9304      	str	r3, [sp, #16]
    e7a2:	e539      	b.n	e218 <_dtoa_r+0x660>
    e7a4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    e7a6:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
    e7aa:	e6da      	b.n	e562 <_dtoa_r+0x9aa>
    e7ac:	2002      	movs	r0, #2
    e7ae:	eeb0 6b48 	vmov.f64	d6, d8
    e7b2:	f7ff bb48 	b.w	de46 <_dtoa_r+0x28e>
    e7b6:	f1b9 0f00 	cmp.w	r9, #0
    e7ba:	f43f aeda 	beq.w	e572 <_dtoa_r+0x9ba>
    e7be:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    e7c0:	2a00      	cmp	r2, #0
    e7c2:	f77f abf3 	ble.w	dfac <_dtoa_r+0x3f4>
    e7c6:	eeb2 4b04 	vmov.f64	d4, #36	; 0x41200000  10.0
    e7ca:	ee26 6b04 	vmul.f64	d6, d6, d4
    e7ce:	3001      	adds	r0, #1
    e7d0:	ee07 0a90 	vmov	s15, r0
    e7d4:	9b04      	ldr	r3, [sp, #16]
    e7d6:	eeb8 5be7 	vcvt.f64.s32	d5, s15
    e7da:	eeb1 7b0c 	vmov.f64	d7, #28	; 0x40e00000  7.0
    e7de:	eea6 7b05 	vfma.f64	d7, d6, d5
    e7e2:	ee17 ca90 	vmov	ip, s15
    e7e6:	ec51 0b17 	vmov	r0, r1, d7
    e7ea:	1e5e      	subs	r6, r3, #1
    e7ec:	f1ac 7150 	sub.w	r1, ip, #54525952	; 0x3400000
    e7f0:	f7ff bb47 	b.w	de82 <_dtoa_r+0x2ca>
    e7f4:	9b04      	ldr	r3, [sp, #16]
    e7f6:	3301      	adds	r3, #1
    e7f8:	9304      	str	r3, [sp, #16]
    e7fa:	2331      	movs	r3, #49	; 0x31
    e7fc:	f7ff bbb1 	b.w	df62 <_dtoa_r+0x3aa>
    e800:	9b04      	ldr	r3, [sp, #16]
    e802:	46bb      	mov	fp, r7
    e804:	3301      	adds	r3, #1
    e806:	9304      	str	r3, [sp, #16]
    e808:	2339      	movs	r3, #57	; 0x39
    e80a:	4637      	mov	r7, r6
    e80c:	f80b 3b01 	strb.w	r3, [fp], #1
    e810:	4646      	mov	r6, r8
    e812:	e4e1      	b.n	e1d8 <_dtoa_r+0x620>
    e814:	f04f 0a00 	mov.w	sl, #0
    e818:	4656      	mov	r6, sl
    e81a:	e653      	b.n	e4c4 <_dtoa_r+0x90c>
    e81c:	9208      	str	r2, [sp, #32]
    e81e:	e47b      	b.n	e118 <_dtoa_r+0x560>
    e820:	1c73      	adds	r3, r6, #1
    e822:	9304      	str	r3, [sp, #16]
    e824:	4689      	mov	r9, r1
    e826:	e4f7      	b.n	e218 <_dtoa_r+0x660>
    e828:	f47f af22 	bne.w	e670 <_dtoa_r+0xab8>
    e82c:	07da      	lsls	r2, r3, #31
    e82e:	f57f af1f 	bpl.w	e670 <_dtoa_r+0xab8>
    e832:	e718      	b.n	e666 <_dtoa_r+0xaae>
    e834:	2b39      	cmp	r3, #57	; 0x39
    e836:	d0e3      	beq.n	e800 <_dtoa_r+0xc48>
    e838:	f1b9 0f00 	cmp.w	r9, #0
    e83c:	f73f af16 	bgt.w	e66c <_dtoa_r+0xab4>
    e840:	e716      	b.n	e670 <_dtoa_r+0xab8>
    e842:	9b01      	ldr	r3, [sp, #4]
    e844:	2b02      	cmp	r3, #2
    e846:	f73f ae28 	bgt.w	e49a <_dtoa_r+0x8e2>
    e84a:	9704      	str	r7, [sp, #16]
    e84c:	e5ba      	b.n	e3c4 <_dtoa_r+0x80c>
    e84e:	4601      	mov	r1, r0
    e850:	e78d      	b.n	e76e <_dtoa_r+0xbb6>
    e852:	9b01      	ldr	r3, [sp, #4]
    e854:	2b02      	cmp	r3, #2
    e856:	f73f ae20 	bgt.w	e49a <_dtoa_r+0x8e2>
    e85a:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
    e85e:	9704      	str	r7, [sp, #16]
    e860:	e52b      	b.n	e2ba <_dtoa_r+0x702>
    e862:	2002      	movs	r0, #2
    e864:	f7ff baef 	b.w	de46 <_dtoa_r+0x28e>
    e868:	4b0b      	ldr	r3, [pc, #44]	; (e898 <_dtoa_r+0xce0>)
    e86a:	480c      	ldr	r0, [pc, #48]	; (e89c <_dtoa_r+0xce4>)
    e86c:	2200      	movs	r2, #0
    e86e:	f240 11af 	movw	r1, #431	; 0x1af
    e872:	f7fe f99b 	bl	cbac <__assert_func>
    e876:	4b08      	ldr	r3, [pc, #32]	; (e898 <_dtoa_r+0xce0>)
    e878:	4808      	ldr	r0, [pc, #32]	; (e89c <_dtoa_r+0xce4>)
    e87a:	463a      	mov	r2, r7
    e87c:	f240 21ef 	movw	r1, #751	; 0x2ef
    e880:	f7fe f994 	bl	cbac <__assert_func>
    e884:	4b06      	ldr	r3, [pc, #24]	; (e8a0 <_dtoa_r+0xce8>)
    e886:	9300      	str	r3, [sp, #0]
    e888:	f7ff b9d2 	b.w	dc30 <_dtoa_r+0x78>
    e88c:	9b02      	ldr	r3, [sp, #8]
    e88e:	9308      	str	r3, [sp, #32]
    e890:	e4f7      	b.n	e282 <_dtoa_r+0x6ca>
    e892:	bf00      	nop
    e894:	200002a8 	.word	0x200002a8
    e898:	20001334 	.word	0x20001334
    e89c:	200014b8 	.word	0x200014b8
    e8a0:	200014a8 	.word	0x200014a8

0000e8a4 <_close_r>:
    e8a4:	b538      	push	{r3, r4, r5, lr}
    e8a6:	4d07      	ldr	r5, [pc, #28]	; (e8c4 <_close_r+0x20>)
    e8a8:	2200      	movs	r2, #0
    e8aa:	4604      	mov	r4, r0
    e8ac:	4608      	mov	r0, r1
    e8ae:	602a      	str	r2, [r5, #0]
    e8b0:	f7f2 f878 	bl	9a4 <_close>
    e8b4:	1c43      	adds	r3, r0, #1
    e8b6:	d000      	beq.n	e8ba <_close_r+0x16>
    e8b8:	bd38      	pop	{r3, r4, r5, pc}
    e8ba:	682b      	ldr	r3, [r5, #0]
    e8bc:	2b00      	cmp	r3, #0
    e8be:	d0fb      	beq.n	e8b8 <_close_r+0x14>
    e8c0:	6023      	str	r3, [r4, #0]
    e8c2:	bd38      	pop	{r3, r4, r5, pc}
    e8c4:	20003c04 	.word	0x20003c04

0000e8c8 <__sflush_r>:
    e8c8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
    e8cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    e8d0:	460c      	mov	r4, r1
    e8d2:	0711      	lsls	r1, r2, #28
    e8d4:	4680      	mov	r8, r0
    e8d6:	d447      	bmi.n	e968 <__sflush_r+0xa0>
    e8d8:	6863      	ldr	r3, [r4, #4]
    e8da:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
    e8de:	2b00      	cmp	r3, #0
    e8e0:	81a2      	strh	r2, [r4, #12]
    e8e2:	dd5e      	ble.n	e9a2 <__sflush_r+0xda>
    e8e4:	6aa5      	ldr	r5, [r4, #40]	; 0x28
    e8e6:	2d00      	cmp	r5, #0
    e8e8:	d058      	beq.n	e99c <__sflush_r+0xd4>
    e8ea:	2300      	movs	r3, #0
    e8ec:	f8d8 6000 	ldr.w	r6, [r8]
    e8f0:	f8c8 3000 	str.w	r3, [r8]
    e8f4:	b293      	uxth	r3, r2
    e8f6:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
    e8fa:	d156      	bne.n	e9aa <__sflush_r+0xe2>
    e8fc:	2301      	movs	r3, #1
    e8fe:	69e1      	ldr	r1, [r4, #28]
    e900:	4640      	mov	r0, r8
    e902:	47a8      	blx	r5
    e904:	1c43      	adds	r3, r0, #1
    e906:	d067      	beq.n	e9d8 <__sflush_r+0x110>
    e908:	89a3      	ldrh	r3, [r4, #12]
    e90a:	6aa5      	ldr	r5, [r4, #40]	; 0x28
    e90c:	075f      	lsls	r7, r3, #29
    e90e:	d505      	bpl.n	e91c <__sflush_r+0x54>
    e910:	6863      	ldr	r3, [r4, #4]
    e912:	1ac0      	subs	r0, r0, r3
    e914:	6b23      	ldr	r3, [r4, #48]	; 0x30
    e916:	b10b      	cbz	r3, e91c <__sflush_r+0x54>
    e918:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    e91a:	1ac0      	subs	r0, r0, r3
    e91c:	69e1      	ldr	r1, [r4, #28]
    e91e:	4602      	mov	r2, r0
    e920:	2300      	movs	r3, #0
    e922:	4640      	mov	r0, r8
    e924:	47a8      	blx	r5
    e926:	1c41      	adds	r1, r0, #1
    e928:	d141      	bne.n	e9ae <__sflush_r+0xe6>
    e92a:	f8d8 3000 	ldr.w	r3, [r8]
    e92e:	2b00      	cmp	r3, #0
    e930:	d03d      	beq.n	e9ae <__sflush_r+0xe6>
    e932:	2b1d      	cmp	r3, #29
    e934:	d001      	beq.n	e93a <__sflush_r+0x72>
    e936:	2b16      	cmp	r3, #22
    e938:	d156      	bne.n	e9e8 <__sflush_r+0x120>
    e93a:	89a3      	ldrh	r3, [r4, #12]
    e93c:	6922      	ldr	r2, [r4, #16]
    e93e:	6022      	str	r2, [r4, #0]
    e940:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    e944:	2100      	movs	r1, #0
    e946:	6061      	str	r1, [r4, #4]
    e948:	81a3      	strh	r3, [r4, #12]
    e94a:	6b21      	ldr	r1, [r4, #48]	; 0x30
    e94c:	f8c8 6000 	str.w	r6, [r8]
    e950:	b321      	cbz	r1, e99c <__sflush_r+0xd4>
    e952:	f104 0340 	add.w	r3, r4, #64	; 0x40
    e956:	4299      	cmp	r1, r3
    e958:	d002      	beq.n	e960 <__sflush_r+0x98>
    e95a:	4640      	mov	r0, r8
    e95c:	f000 fc78 	bl	f250 <_free_r>
    e960:	2000      	movs	r0, #0
    e962:	6320      	str	r0, [r4, #48]	; 0x30
    e964:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e968:	6926      	ldr	r6, [r4, #16]
    e96a:	b1be      	cbz	r6, e99c <__sflush_r+0xd4>
    e96c:	b293      	uxth	r3, r2
    e96e:	6825      	ldr	r5, [r4, #0]
    e970:	6026      	str	r6, [r4, #0]
    e972:	079a      	lsls	r2, r3, #30
    e974:	bf0c      	ite	eq
    e976:	6963      	ldreq	r3, [r4, #20]
    e978:	2300      	movne	r3, #0
    e97a:	1bad      	subs	r5, r5, r6
    e97c:	60a3      	str	r3, [r4, #8]
    e97e:	e00b      	b.n	e998 <__sflush_r+0xd0>
    e980:	462b      	mov	r3, r5
    e982:	4632      	mov	r2, r6
    e984:	69e1      	ldr	r1, [r4, #28]
    e986:	6a67      	ldr	r7, [r4, #36]	; 0x24
    e988:	4640      	mov	r0, r8
    e98a:	47b8      	blx	r7
    e98c:	f1b0 0c00 	subs.w	ip, r0, #0
    e990:	eba5 050c 	sub.w	r5, r5, ip
    e994:	4466      	add	r6, ip
    e996:	dd17      	ble.n	e9c8 <__sflush_r+0x100>
    e998:	2d00      	cmp	r5, #0
    e99a:	dcf1      	bgt.n	e980 <__sflush_r+0xb8>
    e99c:	2000      	movs	r0, #0
    e99e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e9a2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    e9a4:	2b00      	cmp	r3, #0
    e9a6:	dc9d      	bgt.n	e8e4 <__sflush_r+0x1c>
    e9a8:	e7f8      	b.n	e99c <__sflush_r+0xd4>
    e9aa:	6d20      	ldr	r0, [r4, #80]	; 0x50
    e9ac:	e7ae      	b.n	e90c <__sflush_r+0x44>
    e9ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    e9b2:	6922      	ldr	r2, [r4, #16]
    e9b4:	6022      	str	r2, [r4, #0]
    e9b6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    e9ba:	81a3      	strh	r3, [r4, #12]
    e9bc:	2200      	movs	r2, #0
    e9be:	04db      	lsls	r3, r3, #19
    e9c0:	6062      	str	r2, [r4, #4]
    e9c2:	d5c2      	bpl.n	e94a <__sflush_r+0x82>
    e9c4:	6520      	str	r0, [r4, #80]	; 0x50
    e9c6:	e7c0      	b.n	e94a <__sflush_r+0x82>
    e9c8:	89a3      	ldrh	r3, [r4, #12]
    e9ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    e9ce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    e9d2:	81a3      	strh	r3, [r4, #12]
    e9d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e9d8:	f8d8 3000 	ldr.w	r3, [r8]
    e9dc:	2b00      	cmp	r3, #0
    e9de:	d093      	beq.n	e908 <__sflush_r+0x40>
    e9e0:	2b1d      	cmp	r3, #29
    e9e2:	d006      	beq.n	e9f2 <__sflush_r+0x12a>
    e9e4:	2b16      	cmp	r3, #22
    e9e6:	d004      	beq.n	e9f2 <__sflush_r+0x12a>
    e9e8:	89a3      	ldrh	r3, [r4, #12]
    e9ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    e9ee:	81a3      	strh	r3, [r4, #12]
    e9f0:	e7d5      	b.n	e99e <__sflush_r+0xd6>
    e9f2:	f8c8 6000 	str.w	r6, [r8]
    e9f6:	e7d1      	b.n	e99c <__sflush_r+0xd4>

0000e9f8 <_fflush_r>:
    e9f8:	b538      	push	{r3, r4, r5, lr}
    e9fa:	460c      	mov	r4, r1
    e9fc:	4605      	mov	r5, r0
    e9fe:	b108      	cbz	r0, ea04 <_fflush_r+0xc>
    ea00:	6b43      	ldr	r3, [r0, #52]	; 0x34
    ea02:	b303      	cbz	r3, ea46 <_fflush_r+0x4e>
    ea04:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
    ea08:	b188      	cbz	r0, ea2e <_fflush_r+0x36>
    ea0a:	6e63      	ldr	r3, [r4, #100]	; 0x64
    ea0c:	07db      	lsls	r3, r3, #31
    ea0e:	d401      	bmi.n	ea14 <_fflush_r+0x1c>
    ea10:	0581      	lsls	r1, r0, #22
    ea12:	d50f      	bpl.n	ea34 <_fflush_r+0x3c>
    ea14:	4628      	mov	r0, r5
    ea16:	4621      	mov	r1, r4
    ea18:	f7ff ff56 	bl	e8c8 <__sflush_r>
    ea1c:	6e63      	ldr	r3, [r4, #100]	; 0x64
    ea1e:	07da      	lsls	r2, r3, #31
    ea20:	4605      	mov	r5, r0
    ea22:	d402      	bmi.n	ea2a <_fflush_r+0x32>
    ea24:	89a3      	ldrh	r3, [r4, #12]
    ea26:	059b      	lsls	r3, r3, #22
    ea28:	d508      	bpl.n	ea3c <_fflush_r+0x44>
    ea2a:	4628      	mov	r0, r5
    ea2c:	bd38      	pop	{r3, r4, r5, pc}
    ea2e:	4605      	mov	r5, r0
    ea30:	4628      	mov	r0, r5
    ea32:	bd38      	pop	{r3, r4, r5, pc}
    ea34:	6da0      	ldr	r0, [r4, #88]	; 0x58
    ea36:	f7fe f97f 	bl	cd38 <__retarget_lock_acquire_recursive>
    ea3a:	e7eb      	b.n	ea14 <_fflush_r+0x1c>
    ea3c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    ea3e:	f7fe f97d 	bl	cd3c <__retarget_lock_release_recursive>
    ea42:	4628      	mov	r0, r5
    ea44:	bd38      	pop	{r3, r4, r5, pc}
    ea46:	f000 f897 	bl	eb78 <__sinit>
    ea4a:	e7db      	b.n	ea04 <_fflush_r+0xc>

0000ea4c <stdio_exit_handler>:
    ea4c:	4a02      	ldr	r2, [pc, #8]	; (ea58 <stdio_exit_handler+0xc>)
    ea4e:	4903      	ldr	r1, [pc, #12]	; (ea5c <stdio_exit_handler+0x10>)
    ea50:	4803      	ldr	r0, [pc, #12]	; (ea60 <stdio_exit_handler+0x14>)
    ea52:	f000 bda5 	b.w	f5a0 <_fwalk_sglue>
    ea56:	bf00      	nop
    ea58:	200031a8 	.word	0x200031a8
    ea5c:	000108fd 	.word	0x000108fd
    ea60:	20002ae0 	.word	0x20002ae0

0000ea64 <cleanup_stdio>:
    ea64:	4b0c      	ldr	r3, [pc, #48]	; (ea98 <cleanup_stdio+0x34>)
    ea66:	6841      	ldr	r1, [r0, #4]
    ea68:	4299      	cmp	r1, r3
    ea6a:	b510      	push	{r4, lr}
    ea6c:	4604      	mov	r4, r0
    ea6e:	d001      	beq.n	ea74 <cleanup_stdio+0x10>
    ea70:	f001 ff44 	bl	108fc <_fclose_r>
    ea74:	68a1      	ldr	r1, [r4, #8]
    ea76:	4b09      	ldr	r3, [pc, #36]	; (ea9c <cleanup_stdio+0x38>)
    ea78:	4299      	cmp	r1, r3
    ea7a:	d002      	beq.n	ea82 <cleanup_stdio+0x1e>
    ea7c:	4620      	mov	r0, r4
    ea7e:	f001 ff3d 	bl	108fc <_fclose_r>
    ea82:	68e1      	ldr	r1, [r4, #12]
    ea84:	4b06      	ldr	r3, [pc, #24]	; (eaa0 <cleanup_stdio+0x3c>)
    ea86:	4299      	cmp	r1, r3
    ea88:	d004      	beq.n	ea94 <cleanup_stdio+0x30>
    ea8a:	4620      	mov	r0, r4
    ea8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ea90:	f001 bf34 	b.w	108fc <_fclose_r>
    ea94:	bd10      	pop	{r4, pc}
    ea96:	bf00      	nop
    ea98:	20003ab8 	.word	0x20003ab8
    ea9c:	20003b20 	.word	0x20003b20
    eaa0:	20003b88 	.word	0x20003b88

0000eaa4 <global_stdio_init.part.0>:
    eaa4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    eaa8:	4c2a      	ldr	r4, [pc, #168]	; (eb54 <global_stdio_init.part.0+0xb0>)
    eaaa:	4b2b      	ldr	r3, [pc, #172]	; (eb58 <global_stdio_init.part.0+0xb4>)
    eaac:	482b      	ldr	r0, [pc, #172]	; (eb5c <global_stdio_init.part.0+0xb8>)
    eaae:	f8df 90c0 	ldr.w	r9, [pc, #192]	; eb70 <global_stdio_init.part.0+0xcc>
    eab2:	f8df 80c0 	ldr.w	r8, [pc, #192]	; eb74 <global_stdio_init.part.0+0xd0>
    eab6:	4f2a      	ldr	r7, [pc, #168]	; (eb60 <global_stdio_init.part.0+0xbc>)
    eab8:	6018      	str	r0, [r3, #0]
    eaba:	2500      	movs	r5, #0
    eabc:	2304      	movs	r3, #4
    eabe:	2208      	movs	r2, #8
    eac0:	4629      	mov	r1, r5
    eac2:	f104 005c 	add.w	r0, r4, #92	; 0x5c
    eac6:	4e27      	ldr	r6, [pc, #156]	; (eb64 <global_stdio_init.part.0+0xc0>)
    eac8:	6665      	str	r5, [r4, #100]	; 0x64
    eaca:	e9c4 5302 	strd	r5, r3, [r4, #8]
    eace:	e9c4 5500 	strd	r5, r5, [r4]
    ead2:	e9c4 5504 	strd	r5, r5, [r4, #16]
    ead6:	61a5      	str	r5, [r4, #24]
    ead8:	f7fe f888 	bl	cbec <memset>
    eadc:	4b22      	ldr	r3, [pc, #136]	; (eb68 <global_stdio_init.part.0+0xc4>)
    eade:	6763      	str	r3, [r4, #116]	; 0x74
    eae0:	2208      	movs	r2, #8
    eae2:	4629      	mov	r1, r5
    eae4:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
    eae8:	e9c4 4907 	strd	r4, r9, [r4, #28]
    eaec:	e9c4 8709 	strd	r8, r7, [r4, #36]	; 0x24
    eaf0:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
    eaf4:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
    eaf8:	f8c4 50cc 	str.w	r5, [r4, #204]	; 0xcc
    eafc:	6725      	str	r5, [r4, #112]	; 0x70
    eafe:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
    eb02:	62e6      	str	r6, [r4, #44]	; 0x2c
    eb04:	f7fe f872 	bl	cbec <memset>
    eb08:	4b18      	ldr	r3, [pc, #96]	; (eb6c <global_stdio_init.part.0+0xc8>)
    eb0a:	f8c4 30dc 	str.w	r3, [r4, #220]	; 0xdc
    eb0e:	4629      	mov	r1, r5
    eb10:	f104 0368 	add.w	r3, r4, #104	; 0x68
    eb14:	2208      	movs	r2, #8
    eb16:	f504 7096 	add.w	r0, r4, #300	; 0x12c
    eb1a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
    eb1e:	e9c4 9822 	strd	r9, r8, [r4, #136]	; 0x88
    eb22:	e9c4 7624 	strd	r7, r6, [r4, #144]	; 0x90
    eb26:	e9c4 5534 	strd	r5, r5, [r4, #208]	; 0xd0
    eb2a:	e9c4 5538 	strd	r5, r5, [r4, #224]	; 0xe0
    eb2e:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
    eb32:	f8c4 50d8 	str.w	r5, [r4, #216]	; 0xd8
    eb36:	f8c4 50e8 	str.w	r5, [r4, #232]	; 0xe8
    eb3a:	f7fe f857 	bl	cbec <memset>
    eb3e:	f104 03d0 	add.w	r3, r4, #208	; 0xd0
    eb42:	e9c4 983c 	strd	r9, r8, [r4, #240]	; 0xf0
    eb46:	e9c4 763e 	strd	r7, r6, [r4, #248]	; 0xf8
    eb4a:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
    eb4e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    eb52:	bf00      	nop
    eb54:	20003ab8 	.word	0x20003ab8
    eb58:	20003bf0 	.word	0x20003bf0
    eb5c:	0000ea4d 	.word	0x0000ea4d
    eb60:	0000f539 	.word	0x0000f539
    eb64:	0000f559 	.word	0x0000f559
    eb68:	00010009 	.word	0x00010009
    eb6c:	00020012 	.word	0x00020012
    eb70:	0000f4d5 	.word	0x0000f4d5
    eb74:	0000f4f9 	.word	0x0000f4f9

0000eb78 <__sinit>:
    eb78:	b510      	push	{r4, lr}
    eb7a:	4604      	mov	r4, r0
    eb7c:	480a      	ldr	r0, [pc, #40]	; (eba8 <__sinit+0x30>)
    eb7e:	f7fe f8db 	bl	cd38 <__retarget_lock_acquire_recursive>
    eb82:	6b63      	ldr	r3, [r4, #52]	; 0x34
    eb84:	b923      	cbnz	r3, eb90 <__sinit+0x18>
    eb86:	4b09      	ldr	r3, [pc, #36]	; (ebac <__sinit+0x34>)
    eb88:	4a09      	ldr	r2, [pc, #36]	; (ebb0 <__sinit+0x38>)
    eb8a:	681b      	ldr	r3, [r3, #0]
    eb8c:	6362      	str	r2, [r4, #52]	; 0x34
    eb8e:	b123      	cbz	r3, eb9a <__sinit+0x22>
    eb90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    eb94:	4804      	ldr	r0, [pc, #16]	; (eba8 <__sinit+0x30>)
    eb96:	f7fe b8d1 	b.w	cd3c <__retarget_lock_release_recursive>
    eb9a:	f7ff ff83 	bl	eaa4 <global_stdio_init.part.0>
    eb9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    eba2:	4801      	ldr	r0, [pc, #4]	; (eba8 <__sinit+0x30>)
    eba4:	f7fe b8ca 	b.w	cd3c <__retarget_lock_release_recursive>
    eba8:	20003a80 	.word	0x20003a80
    ebac:	20003bf0 	.word	0x20003bf0
    ebb0:	0000ea65 	.word	0x0000ea65

0000ebb4 <__sfp_lock_acquire>:
    ebb4:	4801      	ldr	r0, [pc, #4]	; (ebbc <__sfp_lock_acquire+0x8>)
    ebb6:	f7fe b8bf 	b.w	cd38 <__retarget_lock_acquire_recursive>
    ebba:	bf00      	nop
    ebbc:	20003a80 	.word	0x20003a80

0000ebc0 <__sfp_lock_release>:
    ebc0:	4801      	ldr	r0, [pc, #4]	; (ebc8 <__sfp_lock_release+0x8>)
    ebc2:	f7fe b8bb 	b.w	cd3c <__retarget_lock_release_recursive>
    ebc6:	bf00      	nop
    ebc8:	20003a80 	.word	0x20003a80
    ebcc:	00000000 	.word	0x00000000

0000ebd0 <memchr>:
    ebd0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    ebd4:	2a10      	cmp	r2, #16
    ebd6:	db2b      	blt.n	ec30 <memchr+0x60>
    ebd8:	f010 0f07 	tst.w	r0, #7
    ebdc:	d008      	beq.n	ebf0 <memchr+0x20>
    ebde:	f810 3b01 	ldrb.w	r3, [r0], #1
    ebe2:	3a01      	subs	r2, #1
    ebe4:	428b      	cmp	r3, r1
    ebe6:	d02d      	beq.n	ec44 <memchr+0x74>
    ebe8:	f010 0f07 	tst.w	r0, #7
    ebec:	b342      	cbz	r2, ec40 <memchr+0x70>
    ebee:	d1f6      	bne.n	ebde <memchr+0xe>
    ebf0:	b4f0      	push	{r4, r5, r6, r7}
    ebf2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
    ebf6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
    ebfa:	f022 0407 	bic.w	r4, r2, #7
    ebfe:	f07f 0700 	mvns.w	r7, #0
    ec02:	2300      	movs	r3, #0
    ec04:	e8f0 5602 	ldrd	r5, r6, [r0], #8
    ec08:	3c08      	subs	r4, #8
    ec0a:	ea85 0501 	eor.w	r5, r5, r1
    ec0e:	ea86 0601 	eor.w	r6, r6, r1
    ec12:	fa85 f547 	uadd8	r5, r5, r7
    ec16:	faa3 f587 	sel	r5, r3, r7
    ec1a:	fa86 f647 	uadd8	r6, r6, r7
    ec1e:	faa5 f687 	sel	r6, r5, r7
    ec22:	b98e      	cbnz	r6, ec48 <memchr+0x78>
    ec24:	d1ee      	bne.n	ec04 <memchr+0x34>
    ec26:	bcf0      	pop	{r4, r5, r6, r7}
    ec28:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    ec2c:	f002 0207 	and.w	r2, r2, #7
    ec30:	b132      	cbz	r2, ec40 <memchr+0x70>
    ec32:	f810 3b01 	ldrb.w	r3, [r0], #1
    ec36:	3a01      	subs	r2, #1
    ec38:	ea83 0301 	eor.w	r3, r3, r1
    ec3c:	b113      	cbz	r3, ec44 <memchr+0x74>
    ec3e:	d1f8      	bne.n	ec32 <memchr+0x62>
    ec40:	2000      	movs	r0, #0
    ec42:	4770      	bx	lr
    ec44:	3801      	subs	r0, #1
    ec46:	4770      	bx	lr
    ec48:	2d00      	cmp	r5, #0
    ec4a:	bf06      	itte	eq
    ec4c:	4635      	moveq	r5, r6
    ec4e:	3803      	subeq	r0, #3
    ec50:	3807      	subne	r0, #7
    ec52:	f015 0f01 	tst.w	r5, #1
    ec56:	d107      	bne.n	ec68 <memchr+0x98>
    ec58:	3001      	adds	r0, #1
    ec5a:	f415 7f80 	tst.w	r5, #256	; 0x100
    ec5e:	bf02      	ittt	eq
    ec60:	3001      	addeq	r0, #1
    ec62:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
    ec66:	3001      	addeq	r0, #1
    ec68:	bcf0      	pop	{r4, r5, r6, r7}
    ec6a:	3801      	subs	r0, #1
    ec6c:	4770      	bx	lr
    ec6e:	bf00      	nop
	...

0000ec80 <strlen>:
    ec80:	f890 f000 	pld	[r0]
    ec84:	e96d 4502 	strd	r4, r5, [sp, #-8]!
    ec88:	f020 0107 	bic.w	r1, r0, #7
    ec8c:	f06f 0c00 	mvn.w	ip, #0
    ec90:	f010 0407 	ands.w	r4, r0, #7
    ec94:	f891 f020 	pld	[r1, #32]
    ec98:	f040 8049 	bne.w	ed2e <strlen+0xae>
    ec9c:	f04f 0400 	mov.w	r4, #0
    eca0:	f06f 0007 	mvn.w	r0, #7
    eca4:	e9d1 2300 	ldrd	r2, r3, [r1]
    eca8:	f891 f040 	pld	[r1, #64]	; 0x40
    ecac:	f100 0008 	add.w	r0, r0, #8
    ecb0:	fa82 f24c 	uadd8	r2, r2, ip
    ecb4:	faa4 f28c 	sel	r2, r4, ip
    ecb8:	fa83 f34c 	uadd8	r3, r3, ip
    ecbc:	faa2 f38c 	sel	r3, r2, ip
    ecc0:	bb4b      	cbnz	r3, ed16 <strlen+0x96>
    ecc2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
    ecc6:	fa82 f24c 	uadd8	r2, r2, ip
    ecca:	f100 0008 	add.w	r0, r0, #8
    ecce:	faa4 f28c 	sel	r2, r4, ip
    ecd2:	fa83 f34c 	uadd8	r3, r3, ip
    ecd6:	faa2 f38c 	sel	r3, r2, ip
    ecda:	b9e3      	cbnz	r3, ed16 <strlen+0x96>
    ecdc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
    ece0:	fa82 f24c 	uadd8	r2, r2, ip
    ece4:	f100 0008 	add.w	r0, r0, #8
    ece8:	faa4 f28c 	sel	r2, r4, ip
    ecec:	fa83 f34c 	uadd8	r3, r3, ip
    ecf0:	faa2 f38c 	sel	r3, r2, ip
    ecf4:	b97b      	cbnz	r3, ed16 <strlen+0x96>
    ecf6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
    ecfa:	f101 0120 	add.w	r1, r1, #32
    ecfe:	fa82 f24c 	uadd8	r2, r2, ip
    ed02:	f100 0008 	add.w	r0, r0, #8
    ed06:	faa4 f28c 	sel	r2, r4, ip
    ed0a:	fa83 f34c 	uadd8	r3, r3, ip
    ed0e:	faa2 f38c 	sel	r3, r2, ip
    ed12:	2b00      	cmp	r3, #0
    ed14:	d0c6      	beq.n	eca4 <strlen+0x24>
    ed16:	2a00      	cmp	r2, #0
    ed18:	bf04      	itt	eq
    ed1a:	3004      	addeq	r0, #4
    ed1c:	461a      	moveq	r2, r3
    ed1e:	ba12      	rev	r2, r2
    ed20:	fab2 f282 	clz	r2, r2
    ed24:	e8fd 4502 	ldrd	r4, r5, [sp], #8
    ed28:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
    ed2c:	4770      	bx	lr
    ed2e:	e9d1 2300 	ldrd	r2, r3, [r1]
    ed32:	f004 0503 	and.w	r5, r4, #3
    ed36:	f1c4 0000 	rsb	r0, r4, #0
    ed3a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
    ed3e:	f014 0f04 	tst.w	r4, #4
    ed42:	f891 f040 	pld	[r1, #64]	; 0x40
    ed46:	fa0c f505 	lsl.w	r5, ip, r5
    ed4a:	ea62 0205 	orn	r2, r2, r5
    ed4e:	bf1c      	itt	ne
    ed50:	ea63 0305 	ornne	r3, r3, r5
    ed54:	4662      	movne	r2, ip
    ed56:	f04f 0400 	mov.w	r4, #0
    ed5a:	e7a9      	b.n	ecb0 <strlen+0x30>
    ed5c:	0000      	movs	r0, r0
	...

0000ed60 <frexp>:
    ed60:	b430      	push	{r4, r5}
    ed62:	b082      	sub	sp, #8
    ed64:	ed8d 0b00 	vstr	d0, [sp]
    ed68:	9a01      	ldr	r2, [sp, #4]
    ed6a:	4c19      	ldr	r4, [pc, #100]	; (edd0 <frexp+0x70>)
    ed6c:	f022 4300 	bic.w	r3, r2, #2147483648	; 0x80000000
    ed70:	2100      	movs	r1, #0
    ed72:	42a3      	cmp	r3, r4
    ed74:	6001      	str	r1, [r0, #0]
    ed76:	dc21      	bgt.n	edbc <frexp+0x5c>
    ed78:	9c00      	ldr	r4, [sp, #0]
    ed7a:	431c      	orrs	r4, r3
    ed7c:	d01e      	beq.n	edbc <frexp+0x5c>
    ed7e:	4c15      	ldr	r4, [pc, #84]	; (edd4 <frexp+0x74>)
    ed80:	4014      	ands	r4, r2
    ed82:	b954      	cbnz	r4, ed9a <frexp+0x3a>
    ed84:	ed9f 7b10 	vldr	d7, [pc, #64]	; edc8 <frexp+0x68>
    ed88:	ee20 7b07 	vmul.f64	d7, d0, d7
    ed8c:	ed8d 7b00 	vstr	d7, [sp]
    ed90:	9a01      	ldr	r2, [sp, #4]
    ed92:	f06f 0135 	mvn.w	r1, #53	; 0x35
    ed96:	f022 4300 	bic.w	r3, r2, #2147483648	; 0x80000000
    ed9a:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
    ed9e:	e9dd 4500 	ldrd	r4, r5, [sp]
    eda2:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
    eda6:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
    edaa:	151b      	asrs	r3, r3, #20
    edac:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
    edb0:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
    edb4:	e9cd 4500 	strd	r4, r5, [sp]
    edb8:	440b      	add	r3, r1
    edba:	6003      	str	r3, [r0, #0]
    edbc:	ed9d 0b00 	vldr	d0, [sp]
    edc0:	b002      	add	sp, #8
    edc2:	bc30      	pop	{r4, r5}
    edc4:	4770      	bx	lr
    edc6:	bf00      	nop
    edc8:	00000000 	.word	0x00000000
    edcc:	43500000 	.word	0x43500000
    edd0:	7fefffff 	.word	0x7fefffff
    edd4:	7ff00000 	.word	0x7ff00000

0000edd8 <_realloc_r>:
    edd8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eddc:	4617      	mov	r7, r2
    edde:	2900      	cmp	r1, #0
    ede0:	f000 8098 	beq.w	ef14 <_realloc_r+0x13c>
    ede4:	460c      	mov	r4, r1
    ede6:	f107 050b 	add.w	r5, r7, #11
    edea:	4680      	mov	r8, r0
    edec:	f7fe fa34 	bl	d258 <__malloc_lock>
    edf0:	2d16      	cmp	r5, #22
    edf2:	f854 1c04 	ldr.w	r1, [r4, #-4]
    edf6:	d85b      	bhi.n	eeb0 <_realloc_r+0xd8>
    edf8:	2510      	movs	r5, #16
    edfa:	462a      	mov	r2, r5
    edfc:	42af      	cmp	r7, r5
    edfe:	d85c      	bhi.n	eeba <_realloc_r+0xe2>
    ee00:	f021 0603 	bic.w	r6, r1, #3
    ee04:	4296      	cmp	r6, r2
    ee06:	f1a4 0908 	sub.w	r9, r4, #8
    ee0a:	da62      	bge.n	eed2 <_realloc_r+0xfa>
    ee0c:	4bbc      	ldr	r3, [pc, #752]	; (f100 <_realloc_r+0x328>)
    ee0e:	f8d3 c008 	ldr.w	ip, [r3, #8]
    ee12:	eb09 0006 	add.w	r0, r9, r6
    ee16:	4584      	cmp	ip, r0
    ee18:	f000 8097 	beq.w	ef4a <_realloc_r+0x172>
    ee1c:	f8d0 c004 	ldr.w	ip, [r0, #4]
    ee20:	f02c 0301 	bic.w	r3, ip, #1
    ee24:	4403      	add	r3, r0
    ee26:	685b      	ldr	r3, [r3, #4]
    ee28:	07db      	lsls	r3, r3, #31
    ee2a:	d468      	bmi.n	eefe <_realloc_r+0x126>
    ee2c:	f02c 0c03 	bic.w	ip, ip, #3
    ee30:	eb06 030c 	add.w	r3, r6, ip
    ee34:	4293      	cmp	r3, r2
    ee36:	da47      	bge.n	eec8 <_realloc_r+0xf0>
    ee38:	07cb      	lsls	r3, r1, #31
    ee3a:	d410      	bmi.n	ee5e <_realloc_r+0x86>
    ee3c:	f854 3c08 	ldr.w	r3, [r4, #-8]
    ee40:	eba9 0a03 	sub.w	sl, r9, r3
    ee44:	f8da 3004 	ldr.w	r3, [sl, #4]
    ee48:	f023 0103 	bic.w	r1, r3, #3
    ee4c:	448c      	add	ip, r1
    ee4e:	44b4      	add	ip, r6
    ee50:	4594      	cmp	ip, r2
    ee52:	f280 8111 	bge.w	f078 <_realloc_r+0x2a0>
    ee56:	1873      	adds	r3, r6, r1
    ee58:	4293      	cmp	r3, r2
    ee5a:	f280 80e8 	bge.w	f02e <_realloc_r+0x256>
    ee5e:	4639      	mov	r1, r7
    ee60:	4640      	mov	r0, r8
    ee62:	f7fd fb47 	bl	c4f4 <_malloc_r>
    ee66:	4607      	mov	r7, r0
    ee68:	b1e0      	cbz	r0, eea4 <_realloc_r+0xcc>
    ee6a:	f854 3c04 	ldr.w	r3, [r4, #-4]
    ee6e:	f023 0301 	bic.w	r3, r3, #1
    ee72:	444b      	add	r3, r9
    ee74:	f1a0 0208 	sub.w	r2, r0, #8
    ee78:	4293      	cmp	r3, r2
    ee7a:	f000 80d2 	beq.w	f022 <_realloc_r+0x24a>
    ee7e:	1f32      	subs	r2, r6, #4
    ee80:	2a24      	cmp	r2, #36	; 0x24
    ee82:	f200 80f5 	bhi.w	f070 <_realloc_r+0x298>
    ee86:	2a13      	cmp	r2, #19
    ee88:	f200 80ac 	bhi.w	efe4 <_realloc_r+0x20c>
    ee8c:	4603      	mov	r3, r0
    ee8e:	4622      	mov	r2, r4
    ee90:	6811      	ldr	r1, [r2, #0]
    ee92:	6019      	str	r1, [r3, #0]
    ee94:	6851      	ldr	r1, [r2, #4]
    ee96:	6059      	str	r1, [r3, #4]
    ee98:	6892      	ldr	r2, [r2, #8]
    ee9a:	609a      	str	r2, [r3, #8]
    ee9c:	4621      	mov	r1, r4
    ee9e:	4640      	mov	r0, r8
    eea0:	f000 f9d6 	bl	f250 <_free_r>
    eea4:	4640      	mov	r0, r8
    eea6:	f7fe f9dd 	bl	d264 <__malloc_unlock>
    eeaa:	4638      	mov	r0, r7
    eeac:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eeb0:	f025 0507 	bic.w	r5, r5, #7
    eeb4:	2d00      	cmp	r5, #0
    eeb6:	462a      	mov	r2, r5
    eeb8:	daa0      	bge.n	edfc <_realloc_r+0x24>
    eeba:	230c      	movs	r3, #12
    eebc:	f8c8 3000 	str.w	r3, [r8]
    eec0:	2700      	movs	r7, #0
    eec2:	4638      	mov	r0, r7
    eec4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eec8:	461e      	mov	r6, r3
    eeca:	e9d0 2302 	ldrd	r2, r3, [r0, #8]
    eece:	60d3      	str	r3, [r2, #12]
    eed0:	609a      	str	r2, [r3, #8]
    eed2:	1b73      	subs	r3, r6, r5
    eed4:	2b0f      	cmp	r3, #15
    eed6:	d822      	bhi.n	ef1e <_realloc_r+0x146>
    eed8:	f8d9 3004 	ldr.w	r3, [r9, #4]
    eedc:	f003 0301 	and.w	r3, r3, #1
    eee0:	4333      	orrs	r3, r6
    eee2:	444e      	add	r6, r9
    eee4:	f8c9 3004 	str.w	r3, [r9, #4]
    eee8:	6873      	ldr	r3, [r6, #4]
    eeea:	f043 0301 	orr.w	r3, r3, #1
    eeee:	6073      	str	r3, [r6, #4]
    eef0:	4640      	mov	r0, r8
    eef2:	4627      	mov	r7, r4
    eef4:	f7fe f9b6 	bl	d264 <__malloc_unlock>
    eef8:	4638      	mov	r0, r7
    eefa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eefe:	07c9      	lsls	r1, r1, #31
    ef00:	d4ad      	bmi.n	ee5e <_realloc_r+0x86>
    ef02:	f854 3c08 	ldr.w	r3, [r4, #-8]
    ef06:	eba9 0a03 	sub.w	sl, r9, r3
    ef0a:	f8da 1004 	ldr.w	r1, [sl, #4]
    ef0e:	f021 0103 	bic.w	r1, r1, #3
    ef12:	e7a0      	b.n	ee56 <_realloc_r+0x7e>
    ef14:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ef18:	4611      	mov	r1, r2
    ef1a:	f7fd baeb 	b.w	c4f4 <_malloc_r>
    ef1e:	f8d9 2004 	ldr.w	r2, [r9, #4]
    ef22:	eb09 0105 	add.w	r1, r9, r5
    ef26:	f002 0201 	and.w	r2, r2, #1
    ef2a:	444e      	add	r6, r9
    ef2c:	f043 0301 	orr.w	r3, r3, #1
    ef30:	432a      	orrs	r2, r5
    ef32:	f8c9 2004 	str.w	r2, [r9, #4]
    ef36:	604b      	str	r3, [r1, #4]
    ef38:	6873      	ldr	r3, [r6, #4]
    ef3a:	f043 0301 	orr.w	r3, r3, #1
    ef3e:	3108      	adds	r1, #8
    ef40:	6073      	str	r3, [r6, #4]
    ef42:	4640      	mov	r0, r8
    ef44:	f000 f984 	bl	f250 <_free_r>
    ef48:	e7d2      	b.n	eef0 <_realloc_r+0x118>
    ef4a:	f8dc 0004 	ldr.w	r0, [ip, #4]
    ef4e:	f020 0b03 	bic.w	fp, r0, #3
    ef52:	eb06 0c0b 	add.w	ip, r6, fp
    ef56:	f105 0010 	add.w	r0, r5, #16
    ef5a:	4584      	cmp	ip, r0
    ef5c:	da4d      	bge.n	effa <_realloc_r+0x222>
    ef5e:	07c9      	lsls	r1, r1, #31
    ef60:	f53f af7d 	bmi.w	ee5e <_realloc_r+0x86>
    ef64:	f854 1c08 	ldr.w	r1, [r4, #-8]
    ef68:	eba9 0a01 	sub.w	sl, r9, r1
    ef6c:	f8da 1004 	ldr.w	r1, [sl, #4]
    ef70:	f021 0103 	bic.w	r1, r1, #3
    ef74:	448b      	add	fp, r1
    ef76:	44b3      	add	fp, r6
    ef78:	4558      	cmp	r0, fp
    ef7a:	f73f af6c 	bgt.w	ee56 <_realloc_r+0x7e>
    ef7e:	4657      	mov	r7, sl
    ef80:	f8da 100c 	ldr.w	r1, [sl, #12]
    ef84:	f857 0f08 	ldr.w	r0, [r7, #8]!
    ef88:	1f32      	subs	r2, r6, #4
    ef8a:	2a24      	cmp	r2, #36	; 0x24
    ef8c:	60c1      	str	r1, [r0, #12]
    ef8e:	6088      	str	r0, [r1, #8]
    ef90:	f200 80db 	bhi.w	f14a <_realloc_r+0x372>
    ef94:	2a13      	cmp	r2, #19
    ef96:	f240 80d6 	bls.w	f146 <_realloc_r+0x36e>
    ef9a:	6821      	ldr	r1, [r4, #0]
    ef9c:	f8ca 1008 	str.w	r1, [sl, #8]
    efa0:	6861      	ldr	r1, [r4, #4]
    efa2:	f8ca 100c 	str.w	r1, [sl, #12]
    efa6:	2a1b      	cmp	r2, #27
    efa8:	f200 80df 	bhi.w	f16a <_realloc_r+0x392>
    efac:	3408      	adds	r4, #8
    efae:	f10a 0210 	add.w	r2, sl, #16
    efb2:	6821      	ldr	r1, [r4, #0]
    efb4:	6011      	str	r1, [r2, #0]
    efb6:	6861      	ldr	r1, [r4, #4]
    efb8:	6051      	str	r1, [r2, #4]
    efba:	68a1      	ldr	r1, [r4, #8]
    efbc:	6091      	str	r1, [r2, #8]
    efbe:	eb0a 0105 	add.w	r1, sl, r5
    efc2:	ebab 0205 	sub.w	r2, fp, r5
    efc6:	f042 0201 	orr.w	r2, r2, #1
    efca:	6099      	str	r1, [r3, #8]
    efcc:	604a      	str	r2, [r1, #4]
    efce:	f8da 3004 	ldr.w	r3, [sl, #4]
    efd2:	f003 0301 	and.w	r3, r3, #1
    efd6:	432b      	orrs	r3, r5
    efd8:	4640      	mov	r0, r8
    efda:	f8ca 3004 	str.w	r3, [sl, #4]
    efde:	f7fe f941 	bl	d264 <__malloc_unlock>
    efe2:	e76e      	b.n	eec2 <_realloc_r+0xea>
    efe4:	6823      	ldr	r3, [r4, #0]
    efe6:	6003      	str	r3, [r0, #0]
    efe8:	6863      	ldr	r3, [r4, #4]
    efea:	6043      	str	r3, [r0, #4]
    efec:	2a1b      	cmp	r2, #27
    efee:	d868      	bhi.n	f0c2 <_realloc_r+0x2ea>
    eff0:	f104 0208 	add.w	r2, r4, #8
    eff4:	f100 0308 	add.w	r3, r0, #8
    eff8:	e74a      	b.n	ee90 <_realloc_r+0xb8>
    effa:	eb09 0205 	add.w	r2, r9, r5
    effe:	609a      	str	r2, [r3, #8]
    f000:	ebac 0305 	sub.w	r3, ip, r5
    f004:	f043 0301 	orr.w	r3, r3, #1
    f008:	6053      	str	r3, [r2, #4]
    f00a:	f854 3c04 	ldr.w	r3, [r4, #-4]
    f00e:	f003 0301 	and.w	r3, r3, #1
    f012:	432b      	orrs	r3, r5
    f014:	4640      	mov	r0, r8
    f016:	f844 3c04 	str.w	r3, [r4, #-4]
    f01a:	f7fe f923 	bl	d264 <__malloc_unlock>
    f01e:	4627      	mov	r7, r4
    f020:	e74f      	b.n	eec2 <_realloc_r+0xea>
    f022:	f850 3c04 	ldr.w	r3, [r0, #-4]
    f026:	f023 0303 	bic.w	r3, r3, #3
    f02a:	441e      	add	r6, r3
    f02c:	e751      	b.n	eed2 <_realloc_r+0xfa>
    f02e:	4657      	mov	r7, sl
    f030:	f8da 100c 	ldr.w	r1, [sl, #12]
    f034:	f857 0f08 	ldr.w	r0, [r7, #8]!
    f038:	1f32      	subs	r2, r6, #4
    f03a:	2a24      	cmp	r2, #36	; 0x24
    f03c:	60c1      	str	r1, [r0, #12]
    f03e:	6088      	str	r0, [r1, #8]
    f040:	d84c      	bhi.n	f0dc <_realloc_r+0x304>
    f042:	2a13      	cmp	r2, #19
    f044:	d948      	bls.n	f0d8 <_realloc_r+0x300>
    f046:	6821      	ldr	r1, [r4, #0]
    f048:	f8ca 1008 	str.w	r1, [sl, #8]
    f04c:	6861      	ldr	r1, [r4, #4]
    f04e:	f8ca 100c 	str.w	r1, [sl, #12]
    f052:	2a1b      	cmp	r2, #27
    f054:	d856      	bhi.n	f104 <_realloc_r+0x32c>
    f056:	3408      	adds	r4, #8
    f058:	f10a 0210 	add.w	r2, sl, #16
    f05c:	461e      	mov	r6, r3
    f05e:	6823      	ldr	r3, [r4, #0]
    f060:	6013      	str	r3, [r2, #0]
    f062:	6863      	ldr	r3, [r4, #4]
    f064:	6053      	str	r3, [r2, #4]
    f066:	68a3      	ldr	r3, [r4, #8]
    f068:	6093      	str	r3, [r2, #8]
    f06a:	46d1      	mov	r9, sl
    f06c:	463c      	mov	r4, r7
    f06e:	e730      	b.n	eed2 <_realloc_r+0xfa>
    f070:	4621      	mov	r1, r4
    f072:	f7fd fd1f 	bl	cab4 <memmove>
    f076:	e711      	b.n	ee9c <_realloc_r+0xc4>
    f078:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
    f07c:	4657      	mov	r7, sl
    f07e:	60cb      	str	r3, [r1, #12]
    f080:	6099      	str	r1, [r3, #8]
    f082:	f857 1f08 	ldr.w	r1, [r7, #8]!
    f086:	f8da 300c 	ldr.w	r3, [sl, #12]
    f08a:	60cb      	str	r3, [r1, #12]
    f08c:	1f32      	subs	r2, r6, #4
    f08e:	2a24      	cmp	r2, #36	; 0x24
    f090:	6099      	str	r1, [r3, #8]
    f092:	d82d      	bhi.n	f0f0 <_realloc_r+0x318>
    f094:	2a13      	cmp	r2, #19
    f096:	d929      	bls.n	f0ec <_realloc_r+0x314>
    f098:	6823      	ldr	r3, [r4, #0]
    f09a:	f8ca 3008 	str.w	r3, [sl, #8]
    f09e:	6863      	ldr	r3, [r4, #4]
    f0a0:	f8ca 300c 	str.w	r3, [sl, #12]
    f0a4:	2a1b      	cmp	r2, #27
    f0a6:	d842      	bhi.n	f12e <_realloc_r+0x356>
    f0a8:	3408      	adds	r4, #8
    f0aa:	f10a 0310 	add.w	r3, sl, #16
    f0ae:	6822      	ldr	r2, [r4, #0]
    f0b0:	601a      	str	r2, [r3, #0]
    f0b2:	6862      	ldr	r2, [r4, #4]
    f0b4:	605a      	str	r2, [r3, #4]
    f0b6:	68a2      	ldr	r2, [r4, #8]
    f0b8:	609a      	str	r2, [r3, #8]
    f0ba:	4666      	mov	r6, ip
    f0bc:	46d1      	mov	r9, sl
    f0be:	463c      	mov	r4, r7
    f0c0:	e707      	b.n	eed2 <_realloc_r+0xfa>
    f0c2:	68a3      	ldr	r3, [r4, #8]
    f0c4:	6083      	str	r3, [r0, #8]
    f0c6:	68e3      	ldr	r3, [r4, #12]
    f0c8:	60c3      	str	r3, [r0, #12]
    f0ca:	2a24      	cmp	r2, #36	; 0x24
    f0cc:	d026      	beq.n	f11c <_realloc_r+0x344>
    f0ce:	f104 0210 	add.w	r2, r4, #16
    f0d2:	f100 0310 	add.w	r3, r0, #16
    f0d6:	e6db      	b.n	ee90 <_realloc_r+0xb8>
    f0d8:	463a      	mov	r2, r7
    f0da:	e7bf      	b.n	f05c <_realloc_r+0x284>
    f0dc:	4621      	mov	r1, r4
    f0de:	4638      	mov	r0, r7
    f0e0:	461e      	mov	r6, r3
    f0e2:	46d1      	mov	r9, sl
    f0e4:	f7fd fce6 	bl	cab4 <memmove>
    f0e8:	463c      	mov	r4, r7
    f0ea:	e6f2      	b.n	eed2 <_realloc_r+0xfa>
    f0ec:	463b      	mov	r3, r7
    f0ee:	e7de      	b.n	f0ae <_realloc_r+0x2d6>
    f0f0:	4621      	mov	r1, r4
    f0f2:	4638      	mov	r0, r7
    f0f4:	4666      	mov	r6, ip
    f0f6:	46d1      	mov	r9, sl
    f0f8:	f7fd fcdc 	bl	cab4 <memmove>
    f0fc:	463c      	mov	r4, r7
    f0fe:	e6e8      	b.n	eed2 <_realloc_r+0xfa>
    f100:	20002d98 	.word	0x20002d98
    f104:	68a1      	ldr	r1, [r4, #8]
    f106:	f8ca 1010 	str.w	r1, [sl, #16]
    f10a:	68e1      	ldr	r1, [r4, #12]
    f10c:	f8ca 1014 	str.w	r1, [sl, #20]
    f110:	2a24      	cmp	r2, #36	; 0x24
    f112:	d020      	beq.n	f156 <_realloc_r+0x37e>
    f114:	3410      	adds	r4, #16
    f116:	f10a 0218 	add.w	r2, sl, #24
    f11a:	e79f      	b.n	f05c <_realloc_r+0x284>
    f11c:	6923      	ldr	r3, [r4, #16]
    f11e:	6103      	str	r3, [r0, #16]
    f120:	6961      	ldr	r1, [r4, #20]
    f122:	6141      	str	r1, [r0, #20]
    f124:	f104 0218 	add.w	r2, r4, #24
    f128:	f100 0318 	add.w	r3, r0, #24
    f12c:	e6b0      	b.n	ee90 <_realloc_r+0xb8>
    f12e:	68a3      	ldr	r3, [r4, #8]
    f130:	f8ca 3010 	str.w	r3, [sl, #16]
    f134:	68e3      	ldr	r3, [r4, #12]
    f136:	f8ca 3014 	str.w	r3, [sl, #20]
    f13a:	2a24      	cmp	r2, #36	; 0x24
    f13c:	d021      	beq.n	f182 <_realloc_r+0x3aa>
    f13e:	3410      	adds	r4, #16
    f140:	f10a 0318 	add.w	r3, sl, #24
    f144:	e7b3      	b.n	f0ae <_realloc_r+0x2d6>
    f146:	463a      	mov	r2, r7
    f148:	e733      	b.n	efb2 <_realloc_r+0x1da>
    f14a:	4621      	mov	r1, r4
    f14c:	4638      	mov	r0, r7
    f14e:	f7fd fcb1 	bl	cab4 <memmove>
    f152:	4b16      	ldr	r3, [pc, #88]	; (f1ac <_realloc_r+0x3d4>)
    f154:	e733      	b.n	efbe <_realloc_r+0x1e6>
    f156:	6922      	ldr	r2, [r4, #16]
    f158:	f8ca 2018 	str.w	r2, [sl, #24]
    f15c:	6962      	ldr	r2, [r4, #20]
    f15e:	f8ca 201c 	str.w	r2, [sl, #28]
    f162:	3418      	adds	r4, #24
    f164:	f10a 0220 	add.w	r2, sl, #32
    f168:	e778      	b.n	f05c <_realloc_r+0x284>
    f16a:	68a1      	ldr	r1, [r4, #8]
    f16c:	f8ca 1010 	str.w	r1, [sl, #16]
    f170:	68e1      	ldr	r1, [r4, #12]
    f172:	f8ca 1014 	str.w	r1, [sl, #20]
    f176:	2a24      	cmp	r2, #36	; 0x24
    f178:	d00d      	beq.n	f196 <_realloc_r+0x3be>
    f17a:	3410      	adds	r4, #16
    f17c:	f10a 0218 	add.w	r2, sl, #24
    f180:	e717      	b.n	efb2 <_realloc_r+0x1da>
    f182:	6923      	ldr	r3, [r4, #16]
    f184:	f8ca 3018 	str.w	r3, [sl, #24]
    f188:	6963      	ldr	r3, [r4, #20]
    f18a:	f8ca 301c 	str.w	r3, [sl, #28]
    f18e:	3418      	adds	r4, #24
    f190:	f10a 0320 	add.w	r3, sl, #32
    f194:	e78b      	b.n	f0ae <_realloc_r+0x2d6>
    f196:	6922      	ldr	r2, [r4, #16]
    f198:	f8ca 2018 	str.w	r2, [sl, #24]
    f19c:	6962      	ldr	r2, [r4, #20]
    f19e:	f8ca 201c 	str.w	r2, [sl, #28]
    f1a2:	3418      	adds	r4, #24
    f1a4:	f10a 0220 	add.w	r2, sl, #32
    f1a8:	e703      	b.n	efb2 <_realloc_r+0x1da>
    f1aa:	bf00      	nop
    f1ac:	20002d98 	.word	0x20002d98

0000f1b0 <_malloc_trim_r>:
    f1b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f1b2:	4f24      	ldr	r7, [pc, #144]	; (f244 <_malloc_trim_r+0x94>)
    f1b4:	460c      	mov	r4, r1
    f1b6:	4606      	mov	r6, r0
    f1b8:	f7fe f84e 	bl	d258 <__malloc_lock>
    f1bc:	68bb      	ldr	r3, [r7, #8]
    f1be:	685d      	ldr	r5, [r3, #4]
    f1c0:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
    f1c4:	310f      	adds	r1, #15
    f1c6:	f025 0503 	bic.w	r5, r5, #3
    f1ca:	194b      	adds	r3, r1, r5
    f1cc:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
    f1d0:	f023 030f 	bic.w	r3, r3, #15
    f1d4:	f5a3 5480 	sub.w	r4, r3, #4096	; 0x1000
    f1d8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
    f1dc:	db07      	blt.n	f1ee <_malloc_trim_r+0x3e>
    f1de:	2100      	movs	r1, #0
    f1e0:	4630      	mov	r0, r6
    f1e2:	f000 f9cb 	bl	f57c <_sbrk_r>
    f1e6:	68bb      	ldr	r3, [r7, #8]
    f1e8:	442b      	add	r3, r5
    f1ea:	4298      	cmp	r0, r3
    f1ec:	d004      	beq.n	f1f8 <_malloc_trim_r+0x48>
    f1ee:	4630      	mov	r0, r6
    f1f0:	f7fe f838 	bl	d264 <__malloc_unlock>
    f1f4:	2000      	movs	r0, #0
    f1f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    f1f8:	4261      	negs	r1, r4
    f1fa:	4630      	mov	r0, r6
    f1fc:	f000 f9be 	bl	f57c <_sbrk_r>
    f200:	3001      	adds	r0, #1
    f202:	d00d      	beq.n	f220 <_malloc_trim_r+0x70>
    f204:	4a10      	ldr	r2, [pc, #64]	; (f248 <_malloc_trim_r+0x98>)
    f206:	68bb      	ldr	r3, [r7, #8]
    f208:	1b2d      	subs	r5, r5, r4
    f20a:	f045 0501 	orr.w	r5, r5, #1
    f20e:	605d      	str	r5, [r3, #4]
    f210:	6813      	ldr	r3, [r2, #0]
    f212:	4630      	mov	r0, r6
    f214:	1b1b      	subs	r3, r3, r4
    f216:	6013      	str	r3, [r2, #0]
    f218:	f7fe f824 	bl	d264 <__malloc_unlock>
    f21c:	2001      	movs	r0, #1
    f21e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    f220:	2100      	movs	r1, #0
    f222:	4630      	mov	r0, r6
    f224:	f000 f9aa 	bl	f57c <_sbrk_r>
    f228:	68ba      	ldr	r2, [r7, #8]
    f22a:	1a83      	subs	r3, r0, r2
    f22c:	2b0f      	cmp	r3, #15
    f22e:	ddde      	ble.n	f1ee <_malloc_trim_r+0x3e>
    f230:	f043 0301 	orr.w	r3, r3, #1
    f234:	6053      	str	r3, [r2, #4]
    f236:	4b05      	ldr	r3, [pc, #20]	; (f24c <_malloc_trim_r+0x9c>)
    f238:	4903      	ldr	r1, [pc, #12]	; (f248 <_malloc_trim_r+0x98>)
    f23a:	681b      	ldr	r3, [r3, #0]
    f23c:	1ac0      	subs	r0, r0, r3
    f23e:	6008      	str	r0, [r1, #0]
    f240:	e7d5      	b.n	f1ee <_malloc_trim_r+0x3e>
    f242:	bf00      	nop
    f244:	20002d98 	.word	0x20002d98
    f248:	20003a84 	.word	0x20003a84
    f24c:	200031a0 	.word	0x200031a0

0000f250 <_free_r>:
    f250:	2900      	cmp	r1, #0
    f252:	d061      	beq.n	f318 <_free_r+0xc8>
    f254:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f256:	460c      	mov	r4, r1
    f258:	4606      	mov	r6, r0
    f25a:	f7fd fffd 	bl	d258 <__malloc_lock>
    f25e:	f854 2c04 	ldr.w	r2, [r4, #-4]
    f262:	4f7b      	ldr	r7, [pc, #492]	; (f450 <_free_r+0x200>)
    f264:	f1a4 0508 	sub.w	r5, r4, #8
    f268:	f022 0101 	bic.w	r1, r2, #1
    f26c:	eb05 0c01 	add.w	ip, r5, r1
    f270:	68b8      	ldr	r0, [r7, #8]
    f272:	f8dc 3004 	ldr.w	r3, [ip, #4]
    f276:	4560      	cmp	r0, ip
    f278:	f023 0303 	bic.w	r3, r3, #3
    f27c:	f000 808b 	beq.w	f396 <_free_r+0x146>
    f280:	07d2      	lsls	r2, r2, #31
    f282:	f8cc 3004 	str.w	r3, [ip, #4]
    f286:	d432      	bmi.n	f2ee <_free_r+0x9e>
    f288:	f854 2c08 	ldr.w	r2, [r4, #-8]
    f28c:	1aad      	subs	r5, r5, r2
    f28e:	4411      	add	r1, r2
    f290:	68aa      	ldr	r2, [r5, #8]
    f292:	f107 0008 	add.w	r0, r7, #8
    f296:	4282      	cmp	r2, r0
    f298:	d06a      	beq.n	f370 <_free_r+0x120>
    f29a:	eb0c 0403 	add.w	r4, ip, r3
    f29e:	f8d4 e004 	ldr.w	lr, [r4, #4]
    f2a2:	68ec      	ldr	r4, [r5, #12]
    f2a4:	60d4      	str	r4, [r2, #12]
    f2a6:	f01e 0f01 	tst.w	lr, #1
    f2aa:	60a2      	str	r2, [r4, #8]
    f2ac:	f000 8097 	beq.w	f3de <_free_r+0x18e>
    f2b0:	f041 0301 	orr.w	r3, r1, #1
    f2b4:	606b      	str	r3, [r5, #4]
    f2b6:	f8cc 1000 	str.w	r1, [ip]
    f2ba:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
    f2be:	d235      	bcs.n	f32c <_free_r+0xdc>
    f2c0:	6878      	ldr	r0, [r7, #4]
    f2c2:	08cb      	lsrs	r3, r1, #3
    f2c4:	2201      	movs	r2, #1
    f2c6:	0949      	lsrs	r1, r1, #5
    f2c8:	3301      	adds	r3, #1
    f2ca:	408a      	lsls	r2, r1
    f2cc:	4302      	orrs	r2, r0
    f2ce:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
    f2d2:	607a      	str	r2, [r7, #4]
    f2d4:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
    f2d8:	3a08      	subs	r2, #8
    f2da:	e9c5 1202 	strd	r1, r2, [r5, #8]
    f2de:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
    f2e2:	60cd      	str	r5, [r1, #12]
    f2e4:	4630      	mov	r0, r6
    f2e6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    f2ea:	f7fd bfbb 	b.w	d264 <__malloc_unlock>
    f2ee:	eb0c 0203 	add.w	r2, ip, r3
    f2f2:	6852      	ldr	r2, [r2, #4]
    f2f4:	07d0      	lsls	r0, r2, #31
    f2f6:	d410      	bmi.n	f31a <_free_r+0xca>
    f2f8:	4419      	add	r1, r3
    f2fa:	f107 0008 	add.w	r0, r7, #8
    f2fe:	f8dc 3008 	ldr.w	r3, [ip, #8]
    f302:	4283      	cmp	r3, r0
    f304:	d073      	beq.n	f3ee <_free_r+0x19e>
    f306:	f8dc 200c 	ldr.w	r2, [ip, #12]
    f30a:	60da      	str	r2, [r3, #12]
    f30c:	6093      	str	r3, [r2, #8]
    f30e:	f041 0301 	orr.w	r3, r1, #1
    f312:	606b      	str	r3, [r5, #4]
    f314:	5069      	str	r1, [r5, r1]
    f316:	e7d0      	b.n	f2ba <_free_r+0x6a>
    f318:	4770      	bx	lr
    f31a:	f041 0301 	orr.w	r3, r1, #1
    f31e:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
    f322:	f844 3c04 	str.w	r3, [r4, #-4]
    f326:	f8cc 1000 	str.w	r1, [ip]
    f32a:	d3c9      	bcc.n	f2c0 <_free_r+0x70>
    f32c:	f5b1 6f20 	cmp.w	r1, #2560	; 0xa00
    f330:	ea4f 2351 	mov.w	r3, r1, lsr #9
    f334:	d248      	bcs.n	f3c8 <_free_r+0x178>
    f336:	098b      	lsrs	r3, r1, #6
    f338:	f103 0039 	add.w	r0, r3, #57	; 0x39
    f33c:	f103 0238 	add.w	r2, r3, #56	; 0x38
    f340:	00c3      	lsls	r3, r0, #3
    f342:	18f8      	adds	r0, r7, r3
    f344:	58fb      	ldr	r3, [r7, r3]
    f346:	3808      	subs	r0, #8
    f348:	4298      	cmp	r0, r3
    f34a:	d059      	beq.n	f400 <_free_r+0x1b0>
    f34c:	685a      	ldr	r2, [r3, #4]
    f34e:	f022 0203 	bic.w	r2, r2, #3
    f352:	428a      	cmp	r2, r1
    f354:	d902      	bls.n	f35c <_free_r+0x10c>
    f356:	689b      	ldr	r3, [r3, #8]
    f358:	4298      	cmp	r0, r3
    f35a:	d1f7      	bne.n	f34c <_free_r+0xfc>
    f35c:	68d8      	ldr	r0, [r3, #12]
    f35e:	e9c5 3002 	strd	r3, r0, [r5, #8]
    f362:	6085      	str	r5, [r0, #8]
    f364:	60dd      	str	r5, [r3, #12]
    f366:	4630      	mov	r0, r6
    f368:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    f36c:	f7fd bf7a 	b.w	d264 <__malloc_unlock>
    f370:	eb0c 0203 	add.w	r2, ip, r3
    f374:	6852      	ldr	r2, [r2, #4]
    f376:	07d2      	lsls	r2, r2, #31
    f378:	d463      	bmi.n	f442 <_free_r+0x1f2>
    f37a:	440b      	add	r3, r1
    f37c:	e9dc 1202 	ldrd	r1, r2, [ip, #8]
    f380:	60ca      	str	r2, [r1, #12]
    f382:	6091      	str	r1, [r2, #8]
    f384:	f043 0201 	orr.w	r2, r3, #1
    f388:	606a      	str	r2, [r5, #4]
    f38a:	4630      	mov	r0, r6
    f38c:	50eb      	str	r3, [r5, r3]
    f38e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    f392:	f7fd bf67 	b.w	d264 <__malloc_unlock>
    f396:	440b      	add	r3, r1
    f398:	07d1      	lsls	r1, r2, #31
    f39a:	d407      	bmi.n	f3ac <_free_r+0x15c>
    f39c:	f854 2c08 	ldr.w	r2, [r4, #-8]
    f3a0:	1aad      	subs	r5, r5, r2
    f3a2:	4413      	add	r3, r2
    f3a4:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
    f3a8:	60ca      	str	r2, [r1, #12]
    f3aa:	6091      	str	r1, [r2, #8]
    f3ac:	f043 0201 	orr.w	r2, r3, #1
    f3b0:	606a      	str	r2, [r5, #4]
    f3b2:	4a28      	ldr	r2, [pc, #160]	; (f454 <_free_r+0x204>)
    f3b4:	60bd      	str	r5, [r7, #8]
    f3b6:	6812      	ldr	r2, [r2, #0]
    f3b8:	429a      	cmp	r2, r3
    f3ba:	d893      	bhi.n	f2e4 <_free_r+0x94>
    f3bc:	4b26      	ldr	r3, [pc, #152]	; (f458 <_free_r+0x208>)
    f3be:	4630      	mov	r0, r6
    f3c0:	6819      	ldr	r1, [r3, #0]
    f3c2:	f7ff fef5 	bl	f1b0 <_malloc_trim_r>
    f3c6:	e78d      	b.n	f2e4 <_free_r+0x94>
    f3c8:	2b14      	cmp	r3, #20
    f3ca:	d90a      	bls.n	f3e2 <_free_r+0x192>
    f3cc:	2b54      	cmp	r3, #84	; 0x54
    f3ce:	d81f      	bhi.n	f410 <_free_r+0x1c0>
    f3d0:	0b0b      	lsrs	r3, r1, #12
    f3d2:	f103 006f 	add.w	r0, r3, #111	; 0x6f
    f3d6:	f103 026e 	add.w	r2, r3, #110	; 0x6e
    f3da:	00c3      	lsls	r3, r0, #3
    f3dc:	e7b1      	b.n	f342 <_free_r+0xf2>
    f3de:	4419      	add	r1, r3
    f3e0:	e78d      	b.n	f2fe <_free_r+0xae>
    f3e2:	f103 005c 	add.w	r0, r3, #92	; 0x5c
    f3e6:	f103 025b 	add.w	r2, r3, #91	; 0x5b
    f3ea:	00c3      	lsls	r3, r0, #3
    f3ec:	e7a9      	b.n	f342 <_free_r+0xf2>
    f3ee:	f041 0301 	orr.w	r3, r1, #1
    f3f2:	e9c7 5504 	strd	r5, r5, [r7, #16]
    f3f6:	e9c5 0002 	strd	r0, r0, [r5, #8]
    f3fa:	606b      	str	r3, [r5, #4]
    f3fc:	5069      	str	r1, [r5, r1]
    f3fe:	e771      	b.n	f2e4 <_free_r+0x94>
    f400:	6879      	ldr	r1, [r7, #4]
    f402:	1092      	asrs	r2, r2, #2
    f404:	2401      	movs	r4, #1
    f406:	fa04 f202 	lsl.w	r2, r4, r2
    f40a:	430a      	orrs	r2, r1
    f40c:	607a      	str	r2, [r7, #4]
    f40e:	e7a6      	b.n	f35e <_free_r+0x10e>
    f410:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    f414:	d806      	bhi.n	f424 <_free_r+0x1d4>
    f416:	0bcb      	lsrs	r3, r1, #15
    f418:	f103 0078 	add.w	r0, r3, #120	; 0x78
    f41c:	f103 0277 	add.w	r2, r3, #119	; 0x77
    f420:	00c3      	lsls	r3, r0, #3
    f422:	e78e      	b.n	f342 <_free_r+0xf2>
    f424:	f240 5254 	movw	r2, #1364	; 0x554
    f428:	4293      	cmp	r3, r2
    f42a:	d806      	bhi.n	f43a <_free_r+0x1ea>
    f42c:	0c8b      	lsrs	r3, r1, #18
    f42e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
    f432:	f103 027c 	add.w	r2, r3, #124	; 0x7c
    f436:	00c3      	lsls	r3, r0, #3
    f438:	e783      	b.n	f342 <_free_r+0xf2>
    f43a:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
    f43e:	227e      	movs	r2, #126	; 0x7e
    f440:	e77f      	b.n	f342 <_free_r+0xf2>
    f442:	f041 0301 	orr.w	r3, r1, #1
    f446:	606b      	str	r3, [r5, #4]
    f448:	f8cc 1000 	str.w	r1, [ip]
    f44c:	e74a      	b.n	f2e4 <_free_r+0x94>
    f44e:	bf00      	nop
    f450:	20002d98 	.word	0x20002d98
    f454:	200031a4 	.word	0x200031a4
    f458:	20003ab4 	.word	0x20003ab4

0000f45c <_fstat_r>:
    f45c:	b570      	push	{r4, r5, r6, lr}
    f45e:	460c      	mov	r4, r1
    f460:	4d08      	ldr	r5, [pc, #32]	; (f484 <_fstat_r+0x28>)
    f462:	4603      	mov	r3, r0
    f464:	2600      	movs	r6, #0
    f466:	4620      	mov	r0, r4
    f468:	4611      	mov	r1, r2
    f46a:	461c      	mov	r4, r3
    f46c:	602e      	str	r6, [r5, #0]
    f46e:	f7f1 fa9d 	bl	9ac <_fstat>
    f472:	1c43      	adds	r3, r0, #1
    f474:	d000      	beq.n	f478 <_fstat_r+0x1c>
    f476:	bd70      	pop	{r4, r5, r6, pc}
    f478:	682b      	ldr	r3, [r5, #0]
    f47a:	2b00      	cmp	r3, #0
    f47c:	d0fb      	beq.n	f476 <_fstat_r+0x1a>
    f47e:	6023      	str	r3, [r4, #0]
    f480:	bd70      	pop	{r4, r5, r6, pc}
    f482:	bf00      	nop
    f484:	20003c04 	.word	0x20003c04

0000f488 <_isatty_r>:
    f488:	b538      	push	{r3, r4, r5, lr}
    f48a:	4d07      	ldr	r5, [pc, #28]	; (f4a8 <_isatty_r+0x20>)
    f48c:	2200      	movs	r2, #0
    f48e:	4604      	mov	r4, r0
    f490:	4608      	mov	r0, r1
    f492:	602a      	str	r2, [r5, #0]
    f494:	f7f1 fa90 	bl	9b8 <_isatty>
    f498:	1c43      	adds	r3, r0, #1
    f49a:	d000      	beq.n	f49e <_isatty_r+0x16>
    f49c:	bd38      	pop	{r3, r4, r5, pc}
    f49e:	682b      	ldr	r3, [r5, #0]
    f4a0:	2b00      	cmp	r3, #0
    f4a2:	d0fb      	beq.n	f49c <_isatty_r+0x14>
    f4a4:	6023      	str	r3, [r4, #0]
    f4a6:	bd38      	pop	{r3, r4, r5, pc}
    f4a8:	20003c04 	.word	0x20003c04

0000f4ac <fiprintf>:
    f4ac:	b40e      	push	{r1, r2, r3}
    f4ae:	b510      	push	{r4, lr}
    f4b0:	b083      	sub	sp, #12
    f4b2:	ab05      	add	r3, sp, #20
    f4b4:	4c06      	ldr	r4, [pc, #24]	; (f4d0 <fiprintf+0x24>)
    f4b6:	f853 2b04 	ldr.w	r2, [r3], #4
    f4ba:	9301      	str	r3, [sp, #4]
    f4bc:	4601      	mov	r1, r0
    f4be:	6820      	ldr	r0, [r4, #0]
    f4c0:	f000 f964 	bl	f78c <_vfiprintf_r>
    f4c4:	b003      	add	sp, #12
    f4c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    f4ca:	b003      	add	sp, #12
    f4cc:	4770      	bx	lr
    f4ce:	bf00      	nop
    f4d0:	200031b4 	.word	0x200031b4

0000f4d4 <__sread>:
    f4d4:	b510      	push	{r4, lr}
    f4d6:	460c      	mov	r4, r1
    f4d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    f4dc:	f001 fb1e 	bl	10b1c <_read_r>
    f4e0:	2800      	cmp	r0, #0
    f4e2:	db03      	blt.n	f4ec <__sread+0x18>
    f4e4:	6d23      	ldr	r3, [r4, #80]	; 0x50
    f4e6:	4403      	add	r3, r0
    f4e8:	6523      	str	r3, [r4, #80]	; 0x50
    f4ea:	bd10      	pop	{r4, pc}
    f4ec:	89a3      	ldrh	r3, [r4, #12]
    f4ee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
    f4f2:	81a3      	strh	r3, [r4, #12]
    f4f4:	bd10      	pop	{r4, pc}
    f4f6:	bf00      	nop

0000f4f8 <__swrite>:
    f4f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    f4fc:	460c      	mov	r4, r1
    f4fe:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
    f502:	461f      	mov	r7, r3
    f504:	05cb      	lsls	r3, r1, #23
    f506:	4605      	mov	r5, r0
    f508:	4616      	mov	r6, r2
    f50a:	d40b      	bmi.n	f524 <__swrite+0x2c>
    f50c:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
    f510:	81a1      	strh	r1, [r4, #12]
    f512:	463b      	mov	r3, r7
    f514:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    f518:	4632      	mov	r2, r6
    f51a:	4628      	mov	r0, r5
    f51c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    f520:	f000 b862 	b.w	f5e8 <_write_r>
    f524:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    f528:	2302      	movs	r3, #2
    f52a:	2200      	movs	r2, #0
    f52c:	f001 fae0 	bl	10af0 <_lseek_r>
    f530:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
    f534:	e7ea      	b.n	f50c <__swrite+0x14>
    f536:	bf00      	nop

0000f538 <__sseek>:
    f538:	b510      	push	{r4, lr}
    f53a:	460c      	mov	r4, r1
    f53c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    f540:	f001 fad6 	bl	10af0 <_lseek_r>
    f544:	89a3      	ldrh	r3, [r4, #12]
    f546:	1c42      	adds	r2, r0, #1
    f548:	bf0e      	itee	eq
    f54a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
    f54e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
    f552:	6520      	strne	r0, [r4, #80]	; 0x50
    f554:	81a3      	strh	r3, [r4, #12]
    f556:	bd10      	pop	{r4, pc}

0000f558 <__sclose>:
    f558:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    f55c:	f7ff b9a2 	b.w	e8a4 <_close_r>

0000f560 <__ascii_wctomb>:
    f560:	b149      	cbz	r1, f576 <__ascii_wctomb+0x16>
    f562:	2aff      	cmp	r2, #255	; 0xff
    f564:	d802      	bhi.n	f56c <__ascii_wctomb+0xc>
    f566:	700a      	strb	r2, [r1, #0]
    f568:	2001      	movs	r0, #1
    f56a:	4770      	bx	lr
    f56c:	238a      	movs	r3, #138	; 0x8a
    f56e:	6003      	str	r3, [r0, #0]
    f570:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    f574:	4770      	bx	lr
    f576:	4608      	mov	r0, r1
    f578:	4770      	bx	lr
    f57a:	bf00      	nop

0000f57c <_sbrk_r>:
    f57c:	b538      	push	{r3, r4, r5, lr}
    f57e:	4d07      	ldr	r5, [pc, #28]	; (f59c <_sbrk_r+0x20>)
    f580:	2200      	movs	r2, #0
    f582:	4604      	mov	r4, r0
    f584:	4608      	mov	r0, r1
    f586:	602a      	str	r2, [r5, #0]
    f588:	f7f1 f9f0 	bl	96c <_sbrk>
    f58c:	1c43      	adds	r3, r0, #1
    f58e:	d000      	beq.n	f592 <_sbrk_r+0x16>
    f590:	bd38      	pop	{r3, r4, r5, pc}
    f592:	682b      	ldr	r3, [r5, #0]
    f594:	2b00      	cmp	r3, #0
    f596:	d0fb      	beq.n	f590 <_sbrk_r+0x14>
    f598:	6023      	str	r3, [r4, #0]
    f59a:	bd38      	pop	{r3, r4, r5, pc}
    f59c:	20003c04 	.word	0x20003c04

0000f5a0 <_fwalk_sglue>:
    f5a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    f5a4:	4680      	mov	r8, r0
    f5a6:	460f      	mov	r7, r1
    f5a8:	4616      	mov	r6, r2
    f5aa:	f04f 0900 	mov.w	r9, #0
    f5ae:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
    f5b2:	3d01      	subs	r5, #1
    f5b4:	d411      	bmi.n	f5da <_fwalk_sglue+0x3a>
    f5b6:	89a3      	ldrh	r3, [r4, #12]
    f5b8:	2b01      	cmp	r3, #1
    f5ba:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
    f5be:	d908      	bls.n	f5d2 <_fwalk_sglue+0x32>
    f5c0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
    f5c4:	3301      	adds	r3, #1
    f5c6:	4621      	mov	r1, r4
    f5c8:	d003      	beq.n	f5d2 <_fwalk_sglue+0x32>
    f5ca:	4640      	mov	r0, r8
    f5cc:	47b8      	blx	r7
    f5ce:	ea49 0900 	orr.w	r9, r9, r0
    f5d2:	1c6b      	adds	r3, r5, #1
    f5d4:	f104 0468 	add.w	r4, r4, #104	; 0x68
    f5d8:	d1ed      	bne.n	f5b6 <_fwalk_sglue+0x16>
    f5da:	6836      	ldr	r6, [r6, #0]
    f5dc:	2e00      	cmp	r6, #0
    f5de:	d1e6      	bne.n	f5ae <_fwalk_sglue+0xe>
    f5e0:	4648      	mov	r0, r9
    f5e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    f5e6:	bf00      	nop

0000f5e8 <_write_r>:
    f5e8:	b538      	push	{r3, r4, r5, lr}
    f5ea:	460c      	mov	r4, r1
    f5ec:	4d08      	ldr	r5, [pc, #32]	; (f610 <_write_r+0x28>)
    f5ee:	4684      	mov	ip, r0
    f5f0:	4611      	mov	r1, r2
    f5f2:	4620      	mov	r0, r4
    f5f4:	461a      	mov	r2, r3
    f5f6:	2300      	movs	r3, #0
    f5f8:	602b      	str	r3, [r5, #0]
    f5fa:	4664      	mov	r4, ip
    f5fc:	f7f0 ff14 	bl	428 <_write>
    f600:	1c43      	adds	r3, r0, #1
    f602:	d000      	beq.n	f606 <_write_r+0x1e>
    f604:	bd38      	pop	{r3, r4, r5, pc}
    f606:	682b      	ldr	r3, [r5, #0]
    f608:	2b00      	cmp	r3, #0
    f60a:	d0fb      	beq.n	f604 <_write_r+0x1c>
    f60c:	6023      	str	r3, [r4, #0]
    f60e:	bd38      	pop	{r3, r4, r5, pc}
    f610:	20003c04 	.word	0x20003c04

0000f614 <__ssprint_r>:
    f614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f618:	6893      	ldr	r3, [r2, #8]
    f61a:	6817      	ldr	r7, [r2, #0]
    f61c:	b083      	sub	sp, #12
    f61e:	4692      	mov	sl, r2
    f620:	2b00      	cmp	r3, #0
    f622:	d070      	beq.n	f706 <__ssprint_r+0xf2>
    f624:	4681      	mov	r9, r0
    f626:	688a      	ldr	r2, [r1, #8]
    f628:	6808      	ldr	r0, [r1, #0]
    f62a:	460c      	mov	r4, r1
    f62c:	3708      	adds	r7, #8
    f62e:	e043      	b.n	f6b8 <__ssprint_r+0xa4>
    f630:	89a3      	ldrh	r3, [r4, #12]
    f632:	f413 6f90 	tst.w	r3, #1152	; 0x480
    f636:	d02e      	beq.n	f696 <__ssprint_r+0x82>
    f638:	e9d4 1604 	ldrd	r1, r6, [r4, #16]
    f63c:	eba0 0801 	sub.w	r8, r0, r1
    f640:	eb06 0646 	add.w	r6, r6, r6, lsl #1
    f644:	eb06 76d6 	add.w	r6, r6, r6, lsr #31
    f648:	f108 0001 	add.w	r0, r8, #1
    f64c:	1076      	asrs	r6, r6, #1
    f64e:	4428      	add	r0, r5
    f650:	42b0      	cmp	r0, r6
    f652:	4632      	mov	r2, r6
    f654:	bf84      	itt	hi
    f656:	4606      	movhi	r6, r0
    f658:	4632      	movhi	r2, r6
    f65a:	055b      	lsls	r3, r3, #21
    f65c:	d537      	bpl.n	f6ce <__ssprint_r+0xba>
    f65e:	4611      	mov	r1, r2
    f660:	4648      	mov	r0, r9
    f662:	f7fc ff47 	bl	c4f4 <_malloc_r>
    f666:	9001      	str	r0, [sp, #4]
    f668:	2800      	cmp	r0, #0
    f66a:	d03a      	beq.n	f6e2 <__ssprint_r+0xce>
    f66c:	4642      	mov	r2, r8
    f66e:	6921      	ldr	r1, [r4, #16]
    f670:	f7f0 ffe4 	bl	63c <memcpy>
    f674:	89a2      	ldrh	r2, [r4, #12]
    f676:	9b01      	ldr	r3, [sp, #4]
    f678:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
    f67c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    f680:	81a2      	strh	r2, [r4, #12]
    f682:	eba6 0208 	sub.w	r2, r6, r8
    f686:	eb03 0008 	add.w	r0, r3, r8
    f68a:	6166      	str	r6, [r4, #20]
    f68c:	60a2      	str	r2, [r4, #8]
    f68e:	6123      	str	r3, [r4, #16]
    f690:	6020      	str	r0, [r4, #0]
    f692:	462e      	mov	r6, r5
    f694:	46a8      	mov	r8, r5
    f696:	4642      	mov	r2, r8
    f698:	4659      	mov	r1, fp
    f69a:	f7fd fa0b 	bl	cab4 <memmove>
    f69e:	f8da 3008 	ldr.w	r3, [sl, #8]
    f6a2:	68a2      	ldr	r2, [r4, #8]
    f6a4:	6820      	ldr	r0, [r4, #0]
    f6a6:	1b92      	subs	r2, r2, r6
    f6a8:	4440      	add	r0, r8
    f6aa:	1b5b      	subs	r3, r3, r5
    f6ac:	60a2      	str	r2, [r4, #8]
    f6ae:	6020      	str	r0, [r4, #0]
    f6b0:	f8ca 3008 	str.w	r3, [sl, #8]
    f6b4:	b33b      	cbz	r3, f706 <__ssprint_r+0xf2>
    f6b6:	3708      	adds	r7, #8
    f6b8:	e957 b502 	ldrd	fp, r5, [r7, #-8]
    f6bc:	2d00      	cmp	r5, #0
    f6be:	d0fa      	beq.n	f6b6 <__ssprint_r+0xa2>
    f6c0:	42aa      	cmp	r2, r5
    f6c2:	4616      	mov	r6, r2
    f6c4:	4690      	mov	r8, r2
    f6c6:	d9b3      	bls.n	f630 <__ssprint_r+0x1c>
    f6c8:	462e      	mov	r6, r5
    f6ca:	46a8      	mov	r8, r5
    f6cc:	e7e3      	b.n	f696 <__ssprint_r+0x82>
    f6ce:	4648      	mov	r0, r9
    f6d0:	f7ff fb82 	bl	edd8 <_realloc_r>
    f6d4:	4603      	mov	r3, r0
    f6d6:	2800      	cmp	r0, #0
    f6d8:	d1d3      	bne.n	f682 <__ssprint_r+0x6e>
    f6da:	6921      	ldr	r1, [r4, #16]
    f6dc:	4648      	mov	r0, r9
    f6de:	f7ff fdb7 	bl	f250 <_free_r>
    f6e2:	89a3      	ldrh	r3, [r4, #12]
    f6e4:	220c      	movs	r2, #12
    f6e6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    f6ea:	f8c9 2000 	str.w	r2, [r9]
    f6ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    f6f2:	81a3      	strh	r3, [r4, #12]
    f6f4:	2200      	movs	r2, #0
    f6f6:	2300      	movs	r3, #0
    f6f8:	f8ca 2008 	str.w	r2, [sl, #8]
    f6fc:	f8ca 3004 	str.w	r3, [sl, #4]
    f700:	b003      	add	sp, #12
    f702:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f706:	2000      	movs	r0, #0
    f708:	2300      	movs	r3, #0
    f70a:	f8ca 3004 	str.w	r3, [sl, #4]
    f70e:	b003      	add	sp, #12
    f710:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000f714 <__sprint_r.part.0>:
    f714:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f718:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    f71a:	049c      	lsls	r4, r3, #18
    f71c:	4690      	mov	r8, r2
    f71e:	d52d      	bpl.n	f77c <__sprint_r.part.0+0x68>
    f720:	6893      	ldr	r3, [r2, #8]
    f722:	6812      	ldr	r2, [r2, #0]
    f724:	b343      	cbz	r3, f778 <__sprint_r.part.0+0x64>
    f726:	468b      	mov	fp, r1
    f728:	4606      	mov	r6, r0
    f72a:	f102 0908 	add.w	r9, r2, #8
    f72e:	e959 5a02 	ldrd	r5, sl, [r9, #-8]
    f732:	ea5f 079a 	movs.w	r7, sl, lsr #2
    f736:	d015      	beq.n	f764 <__sprint_r.part.0+0x50>
    f738:	3d04      	subs	r5, #4
    f73a:	2400      	movs	r4, #0
    f73c:	e001      	b.n	f742 <__sprint_r.part.0+0x2e>
    f73e:	42a7      	cmp	r7, r4
    f740:	d00e      	beq.n	f760 <__sprint_r.part.0+0x4c>
    f742:	f855 1f04 	ldr.w	r1, [r5, #4]!
    f746:	465a      	mov	r2, fp
    f748:	4630      	mov	r0, r6
    f74a:	f001 fa53 	bl	10bf4 <_fputwc_r>
    f74e:	1c43      	adds	r3, r0, #1
    f750:	f104 0401 	add.w	r4, r4, #1
    f754:	d1f3      	bne.n	f73e <__sprint_r.part.0+0x2a>
    f756:	2300      	movs	r3, #0
    f758:	e9c8 3301 	strd	r3, r3, [r8, #4]
    f75c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f760:	f8d8 3008 	ldr.w	r3, [r8, #8]
    f764:	f02a 0a03 	bic.w	sl, sl, #3
    f768:	eba3 030a 	sub.w	r3, r3, sl
    f76c:	f8c8 3008 	str.w	r3, [r8, #8]
    f770:	f109 0908 	add.w	r9, r9, #8
    f774:	2b00      	cmp	r3, #0
    f776:	d1da      	bne.n	f72e <__sprint_r.part.0+0x1a>
    f778:	2000      	movs	r0, #0
    f77a:	e7ec      	b.n	f756 <__sprint_r.part.0+0x42>
    f77c:	f7fa ff22 	bl	a5c4 <__sfvwrite_r>
    f780:	2300      	movs	r3, #0
    f782:	e9c8 3301 	strd	r3, r3, [r8, #4]
    f786:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f78a:	bf00      	nop

0000f78c <_vfiprintf_r>:
    f78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f790:	ed2d 8b02 	vpush	{d8}
    f794:	b0c5      	sub	sp, #276	; 0x114
    f796:	f10d 0a50 	add.w	sl, sp, #80	; 0x50
    f79a:	4683      	mov	fp, r0
    f79c:	ee08 1a10 	vmov	s16, r1
    f7a0:	4616      	mov	r6, r2
    f7a2:	2100      	movs	r1, #0
    f7a4:	2208      	movs	r2, #8
    f7a6:	4650      	mov	r0, sl
    f7a8:	461c      	mov	r4, r3
    f7aa:	9307      	str	r3, [sp, #28]
    f7ac:	f7fd fa1e 	bl	cbec <memset>
    f7b0:	f1bb 0f00 	cmp.w	fp, #0
    f7b4:	d004      	beq.n	f7c0 <_vfiprintf_r+0x34>
    f7b6:	f8db 3034 	ldr.w	r3, [fp, #52]	; 0x34
    f7ba:	2b00      	cmp	r3, #0
    f7bc:	f000 86a0 	beq.w	10500 <_vfiprintf_r+0xd74>
    f7c0:	ee18 2a10 	vmov	r2, s16
    f7c4:	6e53      	ldr	r3, [r2, #100]	; 0x64
    f7c6:	07db      	lsls	r3, r3, #31
    f7c8:	f140 8513 	bpl.w	101f2 <_vfiprintf_r+0xa66>
    f7cc:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
    f7d0:	b28a      	uxth	r2, r1
    f7d2:	0495      	lsls	r5, r2, #18
    f7d4:	d40b      	bmi.n	f7ee <_vfiprintf_r+0x62>
    f7d6:	ee18 3a10 	vmov	r3, s16
    f7da:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
    f7de:	8199      	strh	r1, [r3, #12]
    f7e0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    f7e2:	b28a      	uxth	r2, r1
    f7e4:	ee18 1a10 	vmov	r1, s16
    f7e8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
    f7ec:	664b      	str	r3, [r1, #100]	; 0x64
    f7ee:	0710      	lsls	r0, r2, #28
    f7f0:	f140 8105 	bpl.w	f9fe <_vfiprintf_r+0x272>
    f7f4:	ee18 3a10 	vmov	r3, s16
    f7f8:	691b      	ldr	r3, [r3, #16]
    f7fa:	2b00      	cmp	r3, #0
    f7fc:	f000 80ff 	beq.w	f9fe <_vfiprintf_r+0x272>
    f800:	f002 031a 	and.w	r3, r2, #26
    f804:	2b0a      	cmp	r3, #10
    f806:	f000 810a 	beq.w	fa1e <_vfiprintf_r+0x292>
    f80a:	2300      	movs	r3, #0
    f80c:	e9cd 3319 	strd	r3, r3, [sp, #100]	; 0x64
    f810:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
    f814:	aa1b      	add	r2, sp, #108	; 0x6c
    f816:	930c      	str	r3, [sp, #48]	; 0x30
    f818:	9218      	str	r2, [sp, #96]	; 0x60
    f81a:	4691      	mov	r9, r2
    f81c:	930b      	str	r3, [sp, #44]	; 0x2c
    f81e:	9305      	str	r3, [sp, #20]
    f820:	46b0      	mov	r8, r6
    f822:	4644      	mov	r4, r8
    f824:	4ba8      	ldr	r3, [pc, #672]	; (fac8 <_vfiprintf_r+0x33c>)
    f826:	f8d3 50e4 	ldr.w	r5, [r3, #228]	; 0xe4
    f82a:	f7fd fa89 	bl	cd40 <__locale_mb_cur_max>
    f82e:	4622      	mov	r2, r4
    f830:	4603      	mov	r3, r0
    f832:	a912      	add	r1, sp, #72	; 0x48
    f834:	f8cd a000 	str.w	sl, [sp]
    f838:	4658      	mov	r0, fp
    f83a:	47a8      	blx	r5
    f83c:	2800      	cmp	r0, #0
    f83e:	f000 8145 	beq.w	facc <_vfiprintf_r+0x340>
    f842:	f2c0 8139 	blt.w	fab8 <_vfiprintf_r+0x32c>
    f846:	9a12      	ldr	r2, [sp, #72]	; 0x48
    f848:	2a25      	cmp	r2, #37	; 0x25
    f84a:	4603      	mov	r3, r0
    f84c:	d001      	beq.n	f852 <_vfiprintf_r+0xc6>
    f84e:	441c      	add	r4, r3
    f850:	e7e8      	b.n	f824 <_vfiprintf_r+0x98>
    f852:	ebb4 0608 	subs.w	r6, r4, r8
    f856:	4605      	mov	r5, r0
    f858:	f040 813c 	bne.w	fad4 <_vfiprintf_r+0x348>
    f85c:	2300      	movs	r3, #0
    f85e:	7861      	ldrb	r1, [r4, #1]
    f860:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
    f864:	f104 0801 	add.w	r8, r4, #1
    f868:	9306      	str	r3, [sp, #24]
    f86a:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    f86e:	461e      	mov	r6, r3
    f870:	242b      	movs	r4, #43	; 0x2b
    f872:	f108 0801 	add.w	r8, r8, #1
    f876:	f1a1 0320 	sub.w	r3, r1, #32
    f87a:	2b5a      	cmp	r3, #90	; 0x5a
    f87c:	f200 8178 	bhi.w	fb70 <_vfiprintf_r+0x3e4>
    f880:	e8df f013 	tbh	[pc, r3, lsl #1]
    f884:	017602b5 	.word	0x017602b5
    f888:	02b00176 	.word	0x02b00176
    f88c:	01760176 	.word	0x01760176
    f890:	006a0176 	.word	0x006a0176
    f894:	01760176 	.word	0x01760176
    f898:	028d027d 	.word	0x028d027d
    f89c:	02880176 	.word	0x02880176
    f8a0:	01760297 	.word	0x01760297
    f8a4:	005b0292 	.word	0x005b0292
    f8a8:	005b005b 	.word	0x005b005b
    f8ac:	005b005b 	.word	0x005b005b
    f8b0:	005b005b 	.word	0x005b005b
    f8b4:	005b005b 	.word	0x005b005b
    f8b8:	01760176 	.word	0x01760176
    f8bc:	01760176 	.word	0x01760176
    f8c0:	01760176 	.word	0x01760176
    f8c4:	01760176 	.word	0x01760176
    f8c8:	025c0176 	.word	0x025c0176
    f8cc:	01760084 	.word	0x01760084
    f8d0:	01760176 	.word	0x01760176
    f8d4:	01760176 	.word	0x01760176
    f8d8:	01760176 	.word	0x01760176
    f8dc:	01760176 	.word	0x01760176
    f8e0:	00e80176 	.word	0x00e80176
    f8e4:	01760176 	.word	0x01760176
    f8e8:	02330176 	.word	0x02330176
    f8ec:	02da0176 	.word	0x02da0176
    f8f0:	01760176 	.word	0x01760176
    f8f4:	0176058b 	.word	0x0176058b
    f8f8:	01760176 	.word	0x01760176
    f8fc:	01760176 	.word	0x01760176
    f900:	01760176 	.word	0x01760176
    f904:	01760176 	.word	0x01760176
    f908:	025c0176 	.word	0x025c0176
    f90c:	01760086 	.word	0x01760086
    f910:	01760176 	.word	0x01760176
    f914:	008602cd 	.word	0x008602cd
    f918:	0176007f 	.word	0x0176007f
    f91c:	017602c0 	.word	0x017602c0
    f920:	00ea02fd 	.word	0x00ea02fd
    f924:	007f02ed 	.word	0x007f02ed
    f928:	02330176 	.word	0x02330176
    f92c:	0569007c 	.word	0x0569007c
    f930:	01760176 	.word	0x01760176
    f934:	0176056b 	.word	0x0176056b
    f938:	007c      	.short	0x007c
    f93a:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    f93e:	2200      	movs	r2, #0
    f940:	f818 1b01 	ldrb.w	r1, [r8], #1
    f944:	eb02 0282 	add.w	r2, r2, r2, lsl #2
    f948:	eb03 0242 	add.w	r2, r3, r2, lsl #1
    f94c:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    f950:	2b09      	cmp	r3, #9
    f952:	d9f5      	bls.n	f940 <_vfiprintf_r+0x1b4>
    f954:	9206      	str	r2, [sp, #24]
    f956:	e78e      	b.n	f876 <_vfiprintf_r+0xea>
    f958:	4658      	mov	r0, fp
    f95a:	f7fd f9f7 	bl	cd4c <_localeconv_r>
    f95e:	6843      	ldr	r3, [r0, #4]
    f960:	930d      	str	r3, [sp, #52]	; 0x34
    f962:	4618      	mov	r0, r3
    f964:	f7ff f98c 	bl	ec80 <strlen>
    f968:	900e      	str	r0, [sp, #56]	; 0x38
    f96a:	4605      	mov	r5, r0
    f96c:	4658      	mov	r0, fp
    f96e:	f7fd f9ed 	bl	cd4c <_localeconv_r>
    f972:	6883      	ldr	r3, [r0, #8]
    f974:	930b      	str	r3, [sp, #44]	; 0x2c
    f976:	2d00      	cmp	r5, #0
    f978:	f040 84d6 	bne.w	10328 <_vfiprintf_r+0xb9c>
    f97c:	f898 1000 	ldrb.w	r1, [r8]
    f980:	e777      	b.n	f872 <_vfiprintf_r+0xe6>
    f982:	f898 1000 	ldrb.w	r1, [r8]
    f986:	f046 0620 	orr.w	r6, r6, #32
    f98a:	e772      	b.n	f872 <_vfiprintf_r+0xe6>
    f98c:	f046 0610 	orr.w	r6, r6, #16
    f990:	06b4      	lsls	r4, r6, #26
    f992:	f140 818e 	bpl.w	fcb2 <_vfiprintf_r+0x526>
    f996:	9b07      	ldr	r3, [sp, #28]
    f998:	3307      	adds	r3, #7
    f99a:	f023 0307 	bic.w	r3, r3, #7
    f99e:	461a      	mov	r2, r3
    f9a0:	6859      	ldr	r1, [r3, #4]
    f9a2:	f852 3b08 	ldr.w	r3, [r2], #8
    f9a6:	9207      	str	r2, [sp, #28]
    f9a8:	460a      	mov	r2, r1
    f9aa:	2900      	cmp	r1, #0
    f9ac:	f2c0 8470 	blt.w	10290 <_vfiprintf_r+0xb04>
    f9b0:	1c79      	adds	r1, r7, #1
    f9b2:	f000 85a2 	beq.w	104fa <_vfiprintf_r+0xd6e>
    f9b6:	f026 0180 	bic.w	r1, r6, #128	; 0x80
    f9ba:	9103      	str	r1, [sp, #12]
    f9bc:	ea53 0102 	orrs.w	r1, r3, r2
    f9c0:	f000 843f 	beq.w	10242 <_vfiprintf_r+0xab6>
    f9c4:	2b0a      	cmp	r3, #10
    f9c6:	f172 0100 	sbcs.w	r1, r2, #0
    f9ca:	f080 8541 	bcs.w	10450 <_vfiprintf_r+0xcc4>
    f9ce:	3330      	adds	r3, #48	; 0x30
    f9d0:	f88d 310f 	strb.w	r3, [sp, #271]	; 0x10f
    f9d4:	9e03      	ldr	r6, [sp, #12]
    f9d6:	2301      	movs	r3, #1
    f9d8:	9304      	str	r3, [sp, #16]
    f9da:	f20d 140f 	addw	r4, sp, #271	; 0x10f
    f9de:	9b04      	ldr	r3, [sp, #16]
    f9e0:	42bb      	cmp	r3, r7
    f9e2:	bfb8      	it	lt
    f9e4:	463b      	movlt	r3, r7
    f9e6:	9303      	str	r3, [sp, #12]
    f9e8:	2300      	movs	r3, #0
    f9ea:	9308      	str	r3, [sp, #32]
    f9ec:	f89d 3043 	ldrb.w	r3, [sp, #67]	; 0x43
    f9f0:	2b00      	cmp	r3, #0
    f9f2:	f000 80cb 	beq.w	fb8c <_vfiprintf_r+0x400>
    f9f6:	9b03      	ldr	r3, [sp, #12]
    f9f8:	3301      	adds	r3, #1
    f9fa:	9303      	str	r3, [sp, #12]
    f9fc:	e0c6      	b.n	fb8c <_vfiprintf_r+0x400>
    f9fe:	ee18 1a10 	vmov	r1, s16
    fa02:	4658      	mov	r0, fp
    fa04:	ee18 5a10 	vmov	r5, s16
    fa08:	f7fd fb18 	bl	d03c <__swsetup_r>
    fa0c:	2800      	cmp	r0, #0
    fa0e:	f040 8652 	bne.w	106b6 <_vfiprintf_r+0xf2a>
    fa12:	89aa      	ldrh	r2, [r5, #12]
    fa14:	f002 031a 	and.w	r3, r2, #26
    fa18:	2b0a      	cmp	r3, #10
    fa1a:	f47f aef6 	bne.w	f80a <_vfiprintf_r+0x7e>
    fa1e:	ee18 1a10 	vmov	r1, s16
    fa22:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
    fa26:	2b00      	cmp	r3, #0
    fa28:	f6ff aeef 	blt.w	f80a <_vfiprintf_r+0x7e>
    fa2c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    fa2e:	07db      	lsls	r3, r3, #31
    fa30:	d402      	bmi.n	fa38 <_vfiprintf_r+0x2ac>
    fa32:	0597      	lsls	r7, r2, #22
    fa34:	f140 8612 	bpl.w	1065c <_vfiprintf_r+0xed0>
    fa38:	ee18 1a10 	vmov	r1, s16
    fa3c:	4623      	mov	r3, r4
    fa3e:	4632      	mov	r2, r6
    fa40:	4658      	mov	r0, fp
    fa42:	f000 fe69 	bl	10718 <__sbprintf>
    fa46:	9005      	str	r0, [sp, #20]
    fa48:	9805      	ldr	r0, [sp, #20]
    fa4a:	b045      	add	sp, #276	; 0x114
    fa4c:	ecbd 8b02 	vpop	{d8}
    fa50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fa54:	f046 0610 	orr.w	r6, r6, #16
    fa58:	f016 0220 	ands.w	r2, r6, #32
    fa5c:	f000 8136 	beq.w	fccc <_vfiprintf_r+0x540>
    fa60:	9b07      	ldr	r3, [sp, #28]
    fa62:	3307      	adds	r3, #7
    fa64:	f023 0307 	bic.w	r3, r3, #7
    fa68:	4619      	mov	r1, r3
    fa6a:	685a      	ldr	r2, [r3, #4]
    fa6c:	f851 3b08 	ldr.w	r3, [r1], #8
    fa70:	9107      	str	r1, [sp, #28]
    fa72:	f426 6180 	bic.w	r1, r6, #1024	; 0x400
    fa76:	9103      	str	r1, [sp, #12]
    fa78:	2100      	movs	r1, #0
    fa7a:	2000      	movs	r0, #0
    fa7c:	f88d 0043 	strb.w	r0, [sp, #67]	; 0x43
    fa80:	1c78      	adds	r0, r7, #1
    fa82:	f000 8210 	beq.w	fea6 <_vfiprintf_r+0x71a>
    fa86:	9803      	ldr	r0, [sp, #12]
    fa88:	f020 0680 	bic.w	r6, r0, #128	; 0x80
    fa8c:	ea53 0002 	orrs.w	r0, r3, r2
    fa90:	f040 8208 	bne.w	fea4 <_vfiprintf_r+0x718>
    fa94:	2f00      	cmp	r7, #0
    fa96:	f040 8538 	bne.w	1050a <_vfiprintf_r+0xd7e>
    fa9a:	2900      	cmp	r1, #0
    fa9c:	f040 83d5 	bne.w	1024a <_vfiprintf_r+0xabe>
    faa0:	9b03      	ldr	r3, [sp, #12]
    faa2:	f013 0301 	ands.w	r3, r3, #1
    faa6:	9304      	str	r3, [sp, #16]
    faa8:	f000 8411 	beq.w	102ce <_vfiprintf_r+0xb42>
    faac:	2330      	movs	r3, #48	; 0x30
    faae:	f88d 310f 	strb.w	r3, [sp, #271]	; 0x10f
    fab2:	f20d 140f 	addw	r4, sp, #271	; 0x10f
    fab6:	e792      	b.n	f9de <_vfiprintf_r+0x252>
    fab8:	2208      	movs	r2, #8
    faba:	2100      	movs	r1, #0
    fabc:	4650      	mov	r0, sl
    fabe:	f7fd f895 	bl	cbec <memset>
    fac2:	2301      	movs	r3, #1
    fac4:	441c      	add	r4, r3
    fac6:	e6ad      	b.n	f824 <_vfiprintf_r+0x98>
    fac8:	20002c2c 	.word	0x20002c2c
    facc:	ebb4 0608 	subs.w	r6, r4, r8
    fad0:	4605      	mov	r5, r0
    fad2:	d01b      	beq.n	fb0c <_vfiprintf_r+0x380>
    fad4:	9b19      	ldr	r3, [sp, #100]	; 0x64
    fad6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    fad8:	3301      	adds	r3, #1
    fada:	4432      	add	r2, r6
    fadc:	2b07      	cmp	r3, #7
    fade:	e9c9 8600 	strd	r8, r6, [r9]
    fae2:	921a      	str	r2, [sp, #104]	; 0x68
    fae4:	9319      	str	r3, [sp, #100]	; 0x64
    fae6:	dd1c      	ble.n	fb22 <_vfiprintf_r+0x396>
    fae8:	2a00      	cmp	r2, #0
    faea:	f000 83a6 	beq.w	1023a <_vfiprintf_r+0xaae>
    faee:	ee18 1a10 	vmov	r1, s16
    faf2:	aa18      	add	r2, sp, #96	; 0x60
    faf4:	4658      	mov	r0, fp
    faf6:	f7ff fe0d 	bl	f714 <__sprint_r.part.0>
    fafa:	bb20      	cbnz	r0, fb46 <_vfiprintf_r+0x3ba>
    fafc:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    fb00:	9b05      	ldr	r3, [sp, #20]
    fb02:	4433      	add	r3, r6
    fb04:	9305      	str	r3, [sp, #20]
    fb06:	2d00      	cmp	r5, #0
    fb08:	f47f aea8 	bne.w	f85c <_vfiprintf_r+0xd0>
    fb0c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    fb0e:	2b00      	cmp	r3, #0
    fb10:	f040 85c1 	bne.w	10696 <_vfiprintf_r+0xf0a>
    fb14:	ee18 3a10 	vmov	r3, s16
    fb18:	2200      	movs	r2, #0
    fb1a:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
    fb1e:	9219      	str	r2, [sp, #100]	; 0x64
    fb20:	e015      	b.n	fb4e <_vfiprintf_r+0x3c2>
    fb22:	f109 0908 	add.w	r9, r9, #8
    fb26:	e7eb      	b.n	fb00 <_vfiprintf_r+0x374>
    fb28:	ee18 1a10 	vmov	r1, s16
    fb2c:	aa18      	add	r2, sp, #96	; 0x60
    fb2e:	4658      	mov	r0, fp
    fb30:	f7ff fdf0 	bl	f714 <__sprint_r.part.0>
    fb34:	2800      	cmp	r0, #0
    fb36:	f000 80a6 	beq.w	fc86 <_vfiprintf_r+0x4fa>
    fb3a:	9b08      	ldr	r3, [sp, #32]
    fb3c:	b11b      	cbz	r3, fb46 <_vfiprintf_r+0x3ba>
    fb3e:	9908      	ldr	r1, [sp, #32]
    fb40:	4658      	mov	r0, fp
    fb42:	f7ff fb85 	bl	f250 <_free_r>
    fb46:	ee18 3a10 	vmov	r3, s16
    fb4a:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
    fb4e:	ee18 2a10 	vmov	r2, s16
    fb52:	6e52      	ldr	r2, [r2, #100]	; 0x64
    fb54:	f012 0f01 	tst.w	r2, #1
    fb58:	b29a      	uxth	r2, r3
    fb5a:	f000 80a0 	beq.w	fc9e <_vfiprintf_r+0x512>
    fb5e:	0650      	lsls	r0, r2, #25
    fb60:	f100 85b2 	bmi.w	106c8 <_vfiprintf_r+0xf3c>
    fb64:	9805      	ldr	r0, [sp, #20]
    fb66:	b045      	add	sp, #276	; 0x114
    fb68:	ecbd 8b02 	vpop	{d8}
    fb6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fb70:	2900      	cmp	r1, #0
    fb72:	d0cb      	beq.n	fb0c <_vfiprintf_r+0x380>
    fb74:	2300      	movs	r3, #0
    fb76:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
    fb7a:	2301      	movs	r3, #1
    fb7c:	e9cd 3303 	strd	r3, r3, [sp, #12]
    fb80:	f88d 10ac 	strb.w	r1, [sp, #172]	; 0xac
    fb84:	ac2b      	add	r4, sp, #172	; 0xac
    fb86:	2300      	movs	r3, #0
    fb88:	9308      	str	r3, [sp, #32]
    fb8a:	461f      	mov	r7, r3
    fb8c:	f016 0302 	ands.w	r3, r6, #2
    fb90:	9309      	str	r3, [sp, #36]	; 0x24
    fb92:	d002      	beq.n	fb9a <_vfiprintf_r+0x40e>
    fb94:	9b03      	ldr	r3, [sp, #12]
    fb96:	3302      	adds	r3, #2
    fb98:	9303      	str	r3, [sp, #12]
    fb9a:	f016 0384 	ands.w	r3, r6, #132	; 0x84
    fb9e:	930a      	str	r3, [sp, #40]	; 0x28
    fba0:	d105      	bne.n	fbae <_vfiprintf_r+0x422>
    fba2:	9b06      	ldr	r3, [sp, #24]
    fba4:	9a03      	ldr	r2, [sp, #12]
    fba6:	1a9d      	subs	r5, r3, r2
    fba8:	2d00      	cmp	r5, #0
    fbaa:	f300 827b 	bgt.w	100a4 <_vfiprintf_r+0x918>
    fbae:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
    fbb2:	1c41      	adds	r1, r0, #1
    fbb4:	f89d 2043 	ldrb.w	r2, [sp, #67]	; 0x43
    fbb8:	b182      	cbz	r2, fbdc <_vfiprintf_r+0x450>
    fbba:	2201      	movs	r2, #1
    fbbc:	3301      	adds	r3, #1
    fbbe:	f8c9 2004 	str.w	r2, [r9, #4]
    fbc2:	2907      	cmp	r1, #7
    fbc4:	f10d 0243 	add.w	r2, sp, #67	; 0x43
    fbc8:	e9cd 1319 	strd	r1, r3, [sp, #100]	; 0x64
    fbcc:	f8c9 2000 	str.w	r2, [r9]
    fbd0:	f300 824a 	bgt.w	10068 <_vfiprintf_r+0x8dc>
    fbd4:	4608      	mov	r0, r1
    fbd6:	f109 0908 	add.w	r9, r9, #8
    fbda:	3101      	adds	r1, #1
    fbdc:	9a09      	ldr	r2, [sp, #36]	; 0x24
    fbde:	b1e2      	cbz	r2, fc1a <_vfiprintf_r+0x48e>
    fbe0:	aa11      	add	r2, sp, #68	; 0x44
    fbe2:	3302      	adds	r3, #2
    fbe4:	f8c9 2000 	str.w	r2, [r9]
    fbe8:	2907      	cmp	r1, #7
    fbea:	f04f 0202 	mov.w	r2, #2
    fbee:	e9cd 1319 	strd	r1, r3, [sp, #100]	; 0x64
    fbf2:	f8c9 2004 	str.w	r2, [r9, #4]
    fbf6:	f340 8250 	ble.w	1009a <_vfiprintf_r+0x90e>
    fbfa:	2b00      	cmp	r3, #0
    fbfc:	f000 8343 	beq.w	10286 <_vfiprintf_r+0xafa>
    fc00:	ee18 1a10 	vmov	r1, s16
    fc04:	aa18      	add	r2, sp, #96	; 0x60
    fc06:	4658      	mov	r0, fp
    fc08:	f7ff fd84 	bl	f714 <__sprint_r.part.0>
    fc0c:	2800      	cmp	r0, #0
    fc0e:	d194      	bne.n	fb3a <_vfiprintf_r+0x3ae>
    fc10:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
    fc14:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    fc18:	1c41      	adds	r1, r0, #1
    fc1a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    fc1c:	2a80      	cmp	r2, #128	; 0x80
    fc1e:	f000 8184 	beq.w	ff2a <_vfiprintf_r+0x79e>
    fc22:	9a04      	ldr	r2, [sp, #16]
    fc24:	1abd      	subs	r5, r7, r2
    fc26:	2d00      	cmp	r5, #0
    fc28:	f300 81d7 	bgt.w	ffda <_vfiprintf_r+0x84e>
    fc2c:	9a04      	ldr	r2, [sp, #16]
    fc2e:	f8c9 4000 	str.w	r4, [r9]
    fc32:	4413      	add	r3, r2
    fc34:	2907      	cmp	r1, #7
    fc36:	e9cd 1319 	strd	r1, r3, [sp, #100]	; 0x64
    fc3a:	f8c9 2004 	str.w	r2, [r9, #4]
    fc3e:	f340 816e 	ble.w	ff1e <_vfiprintf_r+0x792>
    fc42:	2b00      	cmp	r3, #0
    fc44:	f000 8275 	beq.w	10132 <_vfiprintf_r+0x9a6>
    fc48:	ee18 1a10 	vmov	r1, s16
    fc4c:	aa18      	add	r2, sp, #96	; 0x60
    fc4e:	4658      	mov	r0, fp
    fc50:	f7ff fd60 	bl	f714 <__sprint_r.part.0>
    fc54:	2800      	cmp	r0, #0
    fc56:	f47f af70 	bne.w	fb3a <_vfiprintf_r+0x3ae>
    fc5a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    fc5c:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    fc60:	0775      	lsls	r5, r6, #29
    fc62:	d505      	bpl.n	fc70 <_vfiprintf_r+0x4e4>
    fc64:	9a06      	ldr	r2, [sp, #24]
    fc66:	9903      	ldr	r1, [sp, #12]
    fc68:	1a54      	subs	r4, r2, r1
    fc6a:	2c00      	cmp	r4, #0
    fc6c:	f300 826b 	bgt.w	10146 <_vfiprintf_r+0x9ba>
    fc70:	e9dd 2105 	ldrd	r2, r1, [sp, #20]
    fc74:	9803      	ldr	r0, [sp, #12]
    fc76:	4281      	cmp	r1, r0
    fc78:	bfac      	ite	ge
    fc7a:	1852      	addge	r2, r2, r1
    fc7c:	1812      	addlt	r2, r2, r0
    fc7e:	9205      	str	r2, [sp, #20]
    fc80:	2b00      	cmp	r3, #0
    fc82:	f47f af51 	bne.w	fb28 <_vfiprintf_r+0x39c>
    fc86:	9908      	ldr	r1, [sp, #32]
    fc88:	2300      	movs	r3, #0
    fc8a:	9319      	str	r3, [sp, #100]	; 0x64
    fc8c:	2900      	cmp	r1, #0
    fc8e:	f000 8149 	beq.w	ff24 <_vfiprintf_r+0x798>
    fc92:	4658      	mov	r0, fp
    fc94:	f7ff fadc 	bl	f250 <_free_r>
    fc98:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    fc9c:	e5c1      	b.n	f822 <_vfiprintf_r+0x96>
    fc9e:	059c      	lsls	r4, r3, #22
    fca0:	f53f af5d 	bmi.w	fb5e <_vfiprintf_r+0x3d2>
    fca4:	ee18 4a10 	vmov	r4, s16
    fca8:	6da0      	ldr	r0, [r4, #88]	; 0x58
    fcaa:	f7fd f847 	bl	cd3c <__retarget_lock_release_recursive>
    fcae:	89a2      	ldrh	r2, [r4, #12]
    fcb0:	e755      	b.n	fb5e <_vfiprintf_r+0x3d2>
    fcb2:	06f0      	lsls	r0, r6, #27
    fcb4:	9a07      	ldr	r2, [sp, #28]
    fcb6:	f100 831f 	bmi.w	102f8 <_vfiprintf_r+0xb6c>
    fcba:	0671      	lsls	r1, r6, #25
    fcbc:	f140 8319 	bpl.w	102f2 <_vfiprintf_r+0xb66>
    fcc0:	f932 3b04 	ldrsh.w	r3, [r2], #4
    fcc4:	9207      	str	r2, [sp, #28]
    fcc6:	17da      	asrs	r2, r3, #31
    fcc8:	4611      	mov	r1, r2
    fcca:	e66e      	b.n	f9aa <_vfiprintf_r+0x21e>
    fccc:	f016 0310 	ands.w	r3, r6, #16
    fcd0:	9907      	ldr	r1, [sp, #28]
    fcd2:	f040 8309 	bne.w	102e8 <_vfiprintf_r+0xb5c>
    fcd6:	f016 0040 	ands.w	r0, r6, #64	; 0x40
    fcda:	f000 8301 	beq.w	102e0 <_vfiprintf_r+0xb54>
    fcde:	461a      	mov	r2, r3
    fce0:	f851 3b04 	ldr.w	r3, [r1], #4
    fce4:	9107      	str	r1, [sp, #28]
    fce6:	b29b      	uxth	r3, r3
    fce8:	e6c3      	b.n	fa72 <_vfiprintf_r+0x2e6>
    fcea:	9b07      	ldr	r3, [sp, #28]
    fcec:	461a      	mov	r2, r3
    fcee:	2300      	movs	r3, #0
    fcf0:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
    fcf4:	4613      	mov	r3, r2
    fcf6:	f853 4b04 	ldr.w	r4, [r3], #4
    fcfa:	9303      	str	r3, [sp, #12]
    fcfc:	2c00      	cmp	r4, #0
    fcfe:	f000 8412 	beq.w	10526 <_vfiprintf_r+0xd9a>
    fd02:	2953      	cmp	r1, #83	; 0x53
    fd04:	f000 8365 	beq.w	103d2 <_vfiprintf_r+0xc46>
    fd08:	f016 0510 	ands.w	r5, r6, #16
    fd0c:	f040 8361 	bne.w	103d2 <_vfiprintf_r+0xc46>
    fd10:	1c7b      	adds	r3, r7, #1
    fd12:	f000 84b3 	beq.w	1067c <_vfiprintf_r+0xef0>
    fd16:	463a      	mov	r2, r7
    fd18:	4629      	mov	r1, r5
    fd1a:	4620      	mov	r0, r4
    fd1c:	f7fe ff58 	bl	ebd0 <memchr>
    fd20:	9008      	str	r0, [sp, #32]
    fd22:	2800      	cmp	r0, #0
    fd24:	f000 849f 	beq.w	10666 <_vfiprintf_r+0xeda>
    fd28:	1b03      	subs	r3, r0, r4
    fd2a:	9a03      	ldr	r2, [sp, #12]
    fd2c:	9304      	str	r3, [sp, #16]
    fd2e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    fd32:	462f      	mov	r7, r5
    fd34:	9207      	str	r2, [sp, #28]
    fd36:	9303      	str	r3, [sp, #12]
    fd38:	9508      	str	r5, [sp, #32]
    fd3a:	e657      	b.n	f9ec <_vfiprintf_r+0x260>
    fd3c:	2943      	cmp	r1, #67	; 0x43
    fd3e:	d002      	beq.n	fd46 <_vfiprintf_r+0x5ba>
    fd40:	06f5      	lsls	r5, r6, #27
    fd42:	f140 832d 	bpl.w	103a0 <_vfiprintf_r+0xc14>
    fd46:	9d07      	ldr	r5, [sp, #28]
    fd48:	2208      	movs	r2, #8
    fd4a:	2100      	movs	r1, #0
    fd4c:	a816      	add	r0, sp, #88	; 0x58
    fd4e:	ac2b      	add	r4, sp, #172	; 0xac
    fd50:	f7fc ff4c 	bl	cbec <memset>
    fd54:	ab16      	add	r3, sp, #88	; 0x58
    fd56:	f855 2b04 	ldr.w	r2, [r5], #4
    fd5a:	4621      	mov	r1, r4
    fd5c:	4658      	mov	r0, fp
    fd5e:	f7fc ff9d 	bl	cc9c <_wcrtomb_r>
    fd62:	4603      	mov	r3, r0
    fd64:	3301      	adds	r3, #1
    fd66:	9004      	str	r0, [sp, #16]
    fd68:	f000 84b3 	beq.w	106d2 <_vfiprintf_r+0xf46>
    fd6c:	9b04      	ldr	r3, [sp, #16]
    fd6e:	9507      	str	r5, [sp, #28]
    fd70:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    fd74:	9303      	str	r3, [sp, #12]
    fd76:	2300      	movs	r3, #0
    fd78:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
    fd7c:	e703      	b.n	fb86 <_vfiprintf_r+0x3fa>
    fd7e:	9b07      	ldr	r3, [sp, #28]
    fd80:	f853 2b04 	ldr.w	r2, [r3], #4
    fd84:	9206      	str	r2, [sp, #24]
    fd86:	2a00      	cmp	r2, #0
    fd88:	f280 829c 	bge.w	102c4 <_vfiprintf_r+0xb38>
    fd8c:	9a06      	ldr	r2, [sp, #24]
    fd8e:	4252      	negs	r2, r2
    fd90:	e9cd 2306 	strd	r2, r3, [sp, #24]
    fd94:	f898 1000 	ldrb.w	r1, [r8]
    fd98:	f046 0604 	orr.w	r6, r6, #4
    fd9c:	e569      	b.n	f872 <_vfiprintf_r+0xe6>
    fd9e:	f898 1000 	ldrb.w	r1, [r8]
    fda2:	f88d 4043 	strb.w	r4, [sp, #67]	; 0x43
    fda6:	e564      	b.n	f872 <_vfiprintf_r+0xe6>
    fda8:	f898 1000 	ldrb.w	r1, [r8]
    fdac:	f046 0680 	orr.w	r6, r6, #128	; 0x80
    fdb0:	e55f      	b.n	f872 <_vfiprintf_r+0xe6>
    fdb2:	4642      	mov	r2, r8
    fdb4:	f812 1b01 	ldrb.w	r1, [r2], #1
    fdb8:	292a      	cmp	r1, #42	; 0x2a
    fdba:	f000 8496 	beq.w	106ea <_vfiprintf_r+0xf5e>
    fdbe:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    fdc2:	2b09      	cmp	r3, #9
    fdc4:	4690      	mov	r8, r2
    fdc6:	f04f 0700 	mov.w	r7, #0
    fdca:	f63f ad54 	bhi.w	f876 <_vfiprintf_r+0xea>
    fdce:	f818 1b01 	ldrb.w	r1, [r8], #1
    fdd2:	eb07 0787 	add.w	r7, r7, r7, lsl #2
    fdd6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
    fdda:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    fdde:	2b09      	cmp	r3, #9
    fde0:	d9f5      	bls.n	fdce <_vfiprintf_r+0x642>
    fde2:	e548      	b.n	f876 <_vfiprintf_r+0xea>
    fde4:	f898 1000 	ldrb.w	r1, [r8]
    fde8:	f046 0601 	orr.w	r6, r6, #1
    fdec:	e541      	b.n	f872 <_vfiprintf_r+0xe6>
    fdee:	f89d 3043 	ldrb.w	r3, [sp, #67]	; 0x43
    fdf2:	2b00      	cmp	r3, #0
    fdf4:	f47f adc2 	bne.w	f97c <_vfiprintf_r+0x1f0>
    fdf8:	2320      	movs	r3, #32
    fdfa:	f898 1000 	ldrb.w	r1, [r8]
    fdfe:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
    fe02:	e536      	b.n	f872 <_vfiprintf_r+0xe6>
    fe04:	f898 1000 	ldrb.w	r1, [r8]
    fe08:	296c      	cmp	r1, #108	; 0x6c
    fe0a:	bf03      	ittte	eq
    fe0c:	f898 1001 	ldrbeq.w	r1, [r8, #1]
    fe10:	f046 0620 	orreq.w	r6, r6, #32
    fe14:	f108 0801 	addeq.w	r8, r8, #1
    fe18:	f046 0610 	orrne.w	r6, r6, #16
    fe1c:	e529      	b.n	f872 <_vfiprintf_r+0xe6>
    fe1e:	f898 1000 	ldrb.w	r1, [r8]
    fe22:	2968      	cmp	r1, #104	; 0x68
    fe24:	bf03      	ittte	eq
    fe26:	f898 1001 	ldrbeq.w	r1, [r8, #1]
    fe2a:	f446 7600 	orreq.w	r6, r6, #512	; 0x200
    fe2e:	f108 0801 	addeq.w	r8, r8, #1
    fe32:	f046 0640 	orrne.w	r6, r6, #64	; 0x40
    fe36:	e51c      	b.n	f872 <_vfiprintf_r+0xe6>
    fe38:	f046 0310 	orr.w	r3, r6, #16
    fe3c:	9303      	str	r3, [sp, #12]
    fe3e:	9b03      	ldr	r3, [sp, #12]
    fe40:	f013 0220 	ands.w	r2, r3, #32
    fe44:	f000 8206 	beq.w	10254 <_vfiprintf_r+0xac8>
    fe48:	9b07      	ldr	r3, [sp, #28]
    fe4a:	3307      	adds	r3, #7
    fe4c:	f023 0307 	bic.w	r3, r3, #7
    fe50:	4619      	mov	r1, r3
    fe52:	685a      	ldr	r2, [r3, #4]
    fe54:	f851 3b08 	ldr.w	r3, [r1], #8
    fe58:	9107      	str	r1, [sp, #28]
    fe5a:	2101      	movs	r1, #1
    fe5c:	e60d      	b.n	fa7a <_vfiprintf_r+0x2ee>
    fe5e:	9a07      	ldr	r2, [sp, #28]
    fe60:	f046 0302 	orr.w	r3, r6, #2
    fe64:	9303      	str	r3, [sp, #12]
    fe66:	f852 3b04 	ldr.w	r3, [r2], #4
    fe6a:	9207      	str	r2, [sp, #28]
    fe6c:	f647 0230 	movw	r2, #30768	; 0x7830
    fe70:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
    fe74:	4ab8      	ldr	r2, [pc, #736]	; (10158 <_vfiprintf_r+0x9cc>)
    fe76:	920c      	str	r2, [sp, #48]	; 0x30
    fe78:	2102      	movs	r1, #2
    fe7a:	2200      	movs	r2, #0
    fe7c:	e5fd      	b.n	fa7a <_vfiprintf_r+0x2ee>
    fe7e:	06b7      	lsls	r7, r6, #26
    fe80:	f100 8248 	bmi.w	10314 <_vfiprintf_r+0xb88>
    fe84:	06f5      	lsls	r5, r6, #27
    fe86:	f100 8346 	bmi.w	10516 <_vfiprintf_r+0xd8a>
    fe8a:	0674      	lsls	r4, r6, #25
    fe8c:	f100 83d5 	bmi.w	1063a <_vfiprintf_r+0xeae>
    fe90:	05b0      	lsls	r0, r6, #22
    fe92:	f140 8340 	bpl.w	10516 <_vfiprintf_r+0xd8a>
    fe96:	9b07      	ldr	r3, [sp, #28]
    fe98:	9905      	ldr	r1, [sp, #20]
    fe9a:	f853 2b04 	ldr.w	r2, [r3], #4
    fe9e:	9307      	str	r3, [sp, #28]
    fea0:	7011      	strb	r1, [r2, #0]
    fea2:	e4be      	b.n	f822 <_vfiprintf_r+0x96>
    fea4:	9603      	str	r6, [sp, #12]
    fea6:	2901      	cmp	r1, #1
    fea8:	f43f ad8c 	beq.w	f9c4 <_vfiprintf_r+0x238>
    feac:	2902      	cmp	r1, #2
    feae:	ac44      	add	r4, sp, #272	; 0x110
    feb0:	d111      	bne.n	fed6 <_vfiprintf_r+0x74a>
    feb2:	980c      	ldr	r0, [sp, #48]	; 0x30
    feb4:	f003 010f 	and.w	r1, r3, #15
    feb8:	091b      	lsrs	r3, r3, #4
    feba:	5c41      	ldrb	r1, [r0, r1]
    febc:	f804 1d01 	strb.w	r1, [r4, #-1]!
    fec0:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
    fec4:	0912      	lsrs	r2, r2, #4
    fec6:	ea53 0102 	orrs.w	r1, r3, r2
    feca:	d1f3      	bne.n	feb4 <_vfiprintf_r+0x728>
    fecc:	9e03      	ldr	r6, [sp, #12]
    fece:	ab44      	add	r3, sp, #272	; 0x110
    fed0:	1b1b      	subs	r3, r3, r4
    fed2:	9304      	str	r3, [sp, #16]
    fed4:	e583      	b.n	f9de <_vfiprintf_r+0x252>
    fed6:	f003 0107 	and.w	r1, r3, #7
    feda:	08db      	lsrs	r3, r3, #3
    fedc:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
    fee0:	08d2      	lsrs	r2, r2, #3
    fee2:	3130      	adds	r1, #48	; 0x30
    fee4:	ea53 0502 	orrs.w	r5, r3, r2
    fee8:	4620      	mov	r0, r4
    feea:	f804 1d01 	strb.w	r1, [r4, #-1]!
    feee:	d1f2      	bne.n	fed6 <_vfiprintf_r+0x74a>
    fef0:	9e03      	ldr	r6, [sp, #12]
    fef2:	07f3      	lsls	r3, r6, #31
    fef4:	d5eb      	bpl.n	fece <_vfiprintf_r+0x742>
    fef6:	2930      	cmp	r1, #48	; 0x30
    fef8:	d0e8      	beq.n	fecc <_vfiprintf_r+0x740>
    fefa:	2330      	movs	r3, #48	; 0x30
    fefc:	3802      	subs	r0, #2
    fefe:	f804 3c01 	strb.w	r3, [r4, #-1]
    ff02:	ab44      	add	r3, sp, #272	; 0x110
    ff04:	1a1b      	subs	r3, r3, r0
    ff06:	9e03      	ldr	r6, [sp, #12]
    ff08:	9304      	str	r3, [sp, #16]
    ff0a:	4604      	mov	r4, r0
    ff0c:	e567      	b.n	f9de <_vfiprintf_r+0x252>
    ff0e:	9b04      	ldr	r3, [sp, #16]
    ff10:	941b      	str	r4, [sp, #108]	; 0x6c
    ff12:	2201      	movs	r2, #1
    ff14:	931c      	str	r3, [sp, #112]	; 0x70
    ff16:	931a      	str	r3, [sp, #104]	; 0x68
    ff18:	9219      	str	r2, [sp, #100]	; 0x64
    ff1a:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    ff1e:	f109 0908 	add.w	r9, r9, #8
    ff22:	e69d      	b.n	fc60 <_vfiprintf_r+0x4d4>
    ff24:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    ff28:	e47b      	b.n	f822 <_vfiprintf_r+0x96>
    ff2a:	9a06      	ldr	r2, [sp, #24]
    ff2c:	9d03      	ldr	r5, [sp, #12]
    ff2e:	1b55      	subs	r5, r2, r5
    ff30:	2d00      	cmp	r5, #0
    ff32:	f77f ae76 	ble.w	fc22 <_vfiprintf_r+0x496>
    ff36:	2d10      	cmp	r5, #16
    ff38:	f340 83bb 	ble.w	106b2 <_vfiprintf_r+0xf26>
    ff3c:	9409      	str	r4, [sp, #36]	; 0x24
    ff3e:	ee18 4a10 	vmov	r4, s16
    ff42:	e007      	b.n	ff54 <_vfiprintf_r+0x7c8>
    ff44:	f100 0c02 	add.w	ip, r0, #2
    ff48:	f109 0908 	add.w	r9, r9, #8
    ff4c:	4610      	mov	r0, r2
    ff4e:	3d10      	subs	r5, #16
    ff50:	2d10      	cmp	r5, #16
    ff52:	dd1e      	ble.n	ff92 <_vfiprintf_r+0x806>
    ff54:	4981      	ldr	r1, [pc, #516]	; (1015c <_vfiprintf_r+0x9d0>)
    ff56:	f8c9 1000 	str.w	r1, [r9]
    ff5a:	1c42      	adds	r2, r0, #1
    ff5c:	3310      	adds	r3, #16
    ff5e:	2110      	movs	r1, #16
    ff60:	2a07      	cmp	r2, #7
    ff62:	e9cd 2319 	strd	r2, r3, [sp, #100]	; 0x64
    ff66:	f8c9 1004 	str.w	r1, [r9, #4]
    ff6a:	ddeb      	ble.n	ff44 <_vfiprintf_r+0x7b8>
    ff6c:	aa18      	add	r2, sp, #96	; 0x60
    ff6e:	2b00      	cmp	r3, #0
    ff70:	d074      	beq.n	1005c <_vfiprintf_r+0x8d0>
    ff72:	4621      	mov	r1, r4
    ff74:	4658      	mov	r0, fp
    ff76:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    ff7a:	f7ff fbcb 	bl	f714 <__sprint_r.part.0>
    ff7e:	2800      	cmp	r0, #0
    ff80:	f47f addb 	bne.w	fb3a <_vfiprintf_r+0x3ae>
    ff84:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
    ff88:	3d10      	subs	r5, #16
    ff8a:	2d10      	cmp	r5, #16
    ff8c:	f100 0c01 	add.w	ip, r0, #1
    ff90:	dce0      	bgt.n	ff54 <_vfiprintf_r+0x7c8>
    ff92:	9c09      	ldr	r4, [sp, #36]	; 0x24
    ff94:	4a71      	ldr	r2, [pc, #452]	; (1015c <_vfiprintf_r+0x9d0>)
    ff96:	f8c9 5004 	str.w	r5, [r9, #4]
    ff9a:	442b      	add	r3, r5
    ff9c:	f1bc 0f07 	cmp.w	ip, #7
    ffa0:	e9cd c319 	strd	ip, r3, [sp, #100]	; 0x64
    ffa4:	f8c9 2000 	str.w	r2, [r9]
    ffa8:	f340 8194 	ble.w	102d4 <_vfiprintf_r+0xb48>
    ffac:	2b00      	cmp	r3, #0
    ffae:	f000 831f 	beq.w	105f0 <_vfiprintf_r+0xe64>
    ffb2:	ee18 1a10 	vmov	r1, s16
    ffb6:	aa18      	add	r2, sp, #96	; 0x60
    ffb8:	4658      	mov	r0, fp
    ffba:	f7ff fbab 	bl	f714 <__sprint_r.part.0>
    ffbe:	2800      	cmp	r0, #0
    ffc0:	f47f adbb 	bne.w	fb3a <_vfiprintf_r+0x3ae>
    ffc4:	9a04      	ldr	r2, [sp, #16]
    ffc6:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
    ffca:	1abd      	subs	r5, r7, r2
    ffcc:	2d00      	cmp	r5, #0
    ffce:	f100 0101 	add.w	r1, r0, #1
    ffd2:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    ffd6:	f77f ae29 	ble.w	fc2c <_vfiprintf_r+0x4a0>
    ffda:	2d10      	cmp	r5, #16
    ffdc:	dd29      	ble.n	10032 <_vfiprintf_r+0x8a6>
    ffde:	9409      	str	r4, [sp, #36]	; 0x24
    ffe0:	2710      	movs	r7, #16
    ffe2:	ee18 4a10 	vmov	r4, s16
    ffe6:	e007      	b.n	fff8 <_vfiprintf_r+0x86c>
    ffe8:	f100 0c02 	add.w	ip, r0, #2
    ffec:	f109 0908 	add.w	r9, r9, #8
    fff0:	4610      	mov	r0, r2
    fff2:	3d10      	subs	r5, #16
    fff4:	2d10      	cmp	r5, #16
    fff6:	dd1a      	ble.n	1002e <_vfiprintf_r+0x8a2>
    fff8:	1c42      	adds	r2, r0, #1
    fffa:	4958      	ldr	r1, [pc, #352]	; (1015c <_vfiprintf_r+0x9d0>)
    fffc:	3310      	adds	r3, #16
    fffe:	2a07      	cmp	r2, #7
   10000:	e9c9 1700 	strd	r1, r7, [r9]
   10004:	e9cd 2319 	strd	r2, r3, [sp, #100]	; 0x64
   10008:	ddee      	ble.n	ffe8 <_vfiprintf_r+0x85c>
   1000a:	aa18      	add	r2, sp, #96	; 0x60
   1000c:	b303      	cbz	r3, 10050 <_vfiprintf_r+0x8c4>
   1000e:	4621      	mov	r1, r4
   10010:	4658      	mov	r0, fp
   10012:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10016:	f7ff fb7d 	bl	f714 <__sprint_r.part.0>
   1001a:	2800      	cmp	r0, #0
   1001c:	f47f ad8d 	bne.w	fb3a <_vfiprintf_r+0x3ae>
   10020:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
   10024:	3d10      	subs	r5, #16
   10026:	2d10      	cmp	r5, #16
   10028:	f100 0c01 	add.w	ip, r0, #1
   1002c:	dce4      	bgt.n	fff8 <_vfiprintf_r+0x86c>
   1002e:	9c09      	ldr	r4, [sp, #36]	; 0x24
   10030:	4661      	mov	r1, ip
   10032:	4a4a      	ldr	r2, [pc, #296]	; (1015c <_vfiprintf_r+0x9d0>)
   10034:	f8c9 5004 	str.w	r5, [r9, #4]
   10038:	442b      	add	r3, r5
   1003a:	2907      	cmp	r1, #7
   1003c:	e9cd 1319 	strd	r1, r3, [sp, #100]	; 0x64
   10040:	f8c9 2000 	str.w	r2, [r9]
   10044:	f300 80e7 	bgt.w	10216 <_vfiprintf_r+0xa8a>
   10048:	f109 0908 	add.w	r9, r9, #8
   1004c:	3101      	adds	r1, #1
   1004e:	e5ed      	b.n	fc2c <_vfiprintf_r+0x4a0>
   10050:	f04f 0c01 	mov.w	ip, #1
   10054:	4618      	mov	r0, r3
   10056:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   1005a:	e7ca      	b.n	fff2 <_vfiprintf_r+0x866>
   1005c:	f04f 0c01 	mov.w	ip, #1
   10060:	4618      	mov	r0, r3
   10062:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10066:	e772      	b.n	ff4e <_vfiprintf_r+0x7c2>
   10068:	2b00      	cmp	r3, #0
   1006a:	f000 8104 	beq.w	10276 <_vfiprintf_r+0xaea>
   1006e:	ee18 1a10 	vmov	r1, s16
   10072:	aa18      	add	r2, sp, #96	; 0x60
   10074:	4658      	mov	r0, fp
   10076:	f7ff fb4d 	bl	f714 <__sprint_r.part.0>
   1007a:	2800      	cmp	r0, #0
   1007c:	f47f ad5d 	bne.w	fb3a <_vfiprintf_r+0x3ae>
   10080:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
   10084:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10088:	1c41      	adds	r1, r0, #1
   1008a:	e5a7      	b.n	fbdc <_vfiprintf_r+0x450>
   1008c:	2302      	movs	r3, #2
   1008e:	aa11      	add	r2, sp, #68	; 0x44
   10090:	931c      	str	r3, [sp, #112]	; 0x70
   10092:	921b      	str	r2, [sp, #108]	; 0x6c
   10094:	2101      	movs	r1, #1
   10096:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   1009a:	4608      	mov	r0, r1
   1009c:	f109 0908 	add.w	r9, r9, #8
   100a0:	1c41      	adds	r1, r0, #1
   100a2:	e5ba      	b.n	fc1a <_vfiprintf_r+0x48e>
   100a4:	2d10      	cmp	r5, #16
   100a6:	f340 82e5 	ble.w	10674 <_vfiprintf_r+0xee8>
   100aa:	e9dd 1319 	ldrd	r1, r3, [sp, #100]	; 0x64
   100ae:	940f      	str	r4, [sp, #60]	; 0x3c
   100b0:	4608      	mov	r0, r1
   100b2:	ee18 4a10 	vmov	r4, s16
   100b6:	e007      	b.n	100c8 <_vfiprintf_r+0x93c>
   100b8:	f100 0c02 	add.w	ip, r0, #2
   100bc:	f109 0908 	add.w	r9, r9, #8
   100c0:	4610      	mov	r0, r2
   100c2:	3d10      	subs	r5, #16
   100c4:	2d10      	cmp	r5, #16
   100c6:	dd1d      	ble.n	10104 <_vfiprintf_r+0x978>
   100c8:	4925      	ldr	r1, [pc, #148]	; (10160 <_vfiprintf_r+0x9d4>)
   100ca:	f8c9 1000 	str.w	r1, [r9]
   100ce:	1c42      	adds	r2, r0, #1
   100d0:	3310      	adds	r3, #16
   100d2:	2110      	movs	r1, #16
   100d4:	2a07      	cmp	r2, #7
   100d6:	e9cd 2319 	strd	r2, r3, [sp, #100]	; 0x64
   100da:	f8c9 1004 	str.w	r1, [r9, #4]
   100de:	ddeb      	ble.n	100b8 <_vfiprintf_r+0x92c>
   100e0:	aa18      	add	r2, sp, #96	; 0x60
   100e2:	b303      	cbz	r3, 10126 <_vfiprintf_r+0x99a>
   100e4:	4621      	mov	r1, r4
   100e6:	4658      	mov	r0, fp
   100e8:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   100ec:	f7ff fb12 	bl	f714 <__sprint_r.part.0>
   100f0:	2800      	cmp	r0, #0
   100f2:	f47f ad22 	bne.w	fb3a <_vfiprintf_r+0x3ae>
   100f6:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
   100fa:	3d10      	subs	r5, #16
   100fc:	2d10      	cmp	r5, #16
   100fe:	f100 0c01 	add.w	ip, r0, #1
   10102:	dce1      	bgt.n	100c8 <_vfiprintf_r+0x93c>
   10104:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   10106:	4660      	mov	r0, ip
   10108:	4a15      	ldr	r2, [pc, #84]	; (10160 <_vfiprintf_r+0x9d4>)
   1010a:	f8c9 5004 	str.w	r5, [r9, #4]
   1010e:	442b      	add	r3, r5
   10110:	2807      	cmp	r0, #7
   10112:	e9cd 0319 	strd	r0, r3, [sp, #100]	; 0x64
   10116:	f8c9 2000 	str.w	r2, [r9]
   1011a:	f300 80c1 	bgt.w	102a0 <_vfiprintf_r+0xb14>
   1011e:	f109 0908 	add.w	r9, r9, #8
   10122:	1c41      	adds	r1, r0, #1
   10124:	e546      	b.n	fbb4 <_vfiprintf_r+0x428>
   10126:	4618      	mov	r0, r3
   10128:	f04f 0c01 	mov.w	ip, #1
   1012c:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10130:	e7c7      	b.n	100c2 <_vfiprintf_r+0x936>
   10132:	0776      	lsls	r6, r6, #29
   10134:	9319      	str	r3, [sp, #100]	; 0x64
   10136:	d553      	bpl.n	101e0 <_vfiprintf_r+0xa54>
   10138:	9a06      	ldr	r2, [sp, #24]
   1013a:	9903      	ldr	r1, [sp, #12]
   1013c:	1a54      	subs	r4, r2, r1
   1013e:	2c00      	cmp	r4, #0
   10140:	dd4e      	ble.n	101e0 <_vfiprintf_r+0xa54>
   10142:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10146:	2c10      	cmp	r4, #16
   10148:	f340 82b0 	ble.w	106ac <_vfiprintf_r+0xf20>
   1014c:	9919      	ldr	r1, [sp, #100]	; 0x64
   1014e:	ee18 6a10 	vmov	r6, s16
   10152:	2510      	movs	r5, #16
   10154:	e00d      	b.n	10172 <_vfiprintf_r+0x9e6>
   10156:	bf00      	nop
   10158:	20001524 	.word	0x20001524
   1015c:	20002acc 	.word	0x20002acc
   10160:	20001568 	.word	0x20001568
   10164:	1c88      	adds	r0, r1, #2
   10166:	f109 0908 	add.w	r9, r9, #8
   1016a:	4611      	mov	r1, r2
   1016c:	3c10      	subs	r4, #16
   1016e:	2c10      	cmp	r4, #16
   10170:	dd1a      	ble.n	101a8 <_vfiprintf_r+0xa1c>
   10172:	1c4a      	adds	r2, r1, #1
   10174:	48b3      	ldr	r0, [pc, #716]	; (10444 <_vfiprintf_r+0xcb8>)
   10176:	3310      	adds	r3, #16
   10178:	2a07      	cmp	r2, #7
   1017a:	e9c9 0500 	strd	r0, r5, [r9]
   1017e:	e9cd 2319 	strd	r2, r3, [sp, #100]	; 0x64
   10182:	ddef      	ble.n	10164 <_vfiprintf_r+0x9d8>
   10184:	aa18      	add	r2, sp, #96	; 0x60
   10186:	b333      	cbz	r3, 101d6 <_vfiprintf_r+0xa4a>
   10188:	4631      	mov	r1, r6
   1018a:	4658      	mov	r0, fp
   1018c:	f7ff fac2 	bl	f714 <__sprint_r.part.0>
   10190:	2800      	cmp	r0, #0
   10192:	f47f acd2 	bne.w	fb3a <_vfiprintf_r+0x3ae>
   10196:	e9dd 1319 	ldrd	r1, r3, [sp, #100]	; 0x64
   1019a:	3c10      	subs	r4, #16
   1019c:	2c10      	cmp	r4, #16
   1019e:	f101 0001 	add.w	r0, r1, #1
   101a2:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   101a6:	dce4      	bgt.n	10172 <_vfiprintf_r+0x9e6>
   101a8:	4aa6      	ldr	r2, [pc, #664]	; (10444 <_vfiprintf_r+0xcb8>)
   101aa:	f8c9 4004 	str.w	r4, [r9, #4]
   101ae:	4423      	add	r3, r4
   101b0:	2807      	cmp	r0, #7
   101b2:	e9cd 0319 	strd	r0, r3, [sp, #100]	; 0x64
   101b6:	f8c9 2000 	str.w	r2, [r9]
   101ba:	f77f ad59 	ble.w	fc70 <_vfiprintf_r+0x4e4>
   101be:	b17b      	cbz	r3, 101e0 <_vfiprintf_r+0xa54>
   101c0:	ee18 1a10 	vmov	r1, s16
   101c4:	aa18      	add	r2, sp, #96	; 0x60
   101c6:	4658      	mov	r0, fp
   101c8:	f7ff faa4 	bl	f714 <__sprint_r.part.0>
   101cc:	2800      	cmp	r0, #0
   101ce:	f47f acb4 	bne.w	fb3a <_vfiprintf_r+0x3ae>
   101d2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   101d4:	e54c      	b.n	fc70 <_vfiprintf_r+0x4e4>
   101d6:	2001      	movs	r0, #1
   101d8:	4619      	mov	r1, r3
   101da:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   101de:	e7c5      	b.n	1016c <_vfiprintf_r+0x9e0>
   101e0:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
   101e4:	9903      	ldr	r1, [sp, #12]
   101e6:	428a      	cmp	r2, r1
   101e8:	bfac      	ite	ge
   101ea:	189b      	addge	r3, r3, r2
   101ec:	185b      	addlt	r3, r3, r1
   101ee:	9305      	str	r3, [sp, #20]
   101f0:	e549      	b.n	fc86 <_vfiprintf_r+0x4fa>
   101f2:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
   101f6:	058f      	lsls	r7, r1, #22
   101f8:	ee18 3a10 	vmov	r3, s16
   101fc:	b28a      	uxth	r2, r1
   101fe:	f53f aae8 	bmi.w	f7d2 <_vfiprintf_r+0x46>
   10202:	ee18 5a10 	vmov	r5, s16
   10206:	6d98      	ldr	r0, [r3, #88]	; 0x58
   10208:	f7fc fd96 	bl	cd38 <__retarget_lock_acquire_recursive>
   1020c:	f9b5 100c 	ldrsh.w	r1, [r5, #12]
   10210:	b28a      	uxth	r2, r1
   10212:	f7ff bade 	b.w	f7d2 <_vfiprintf_r+0x46>
   10216:	2b00      	cmp	r3, #0
   10218:	f43f ae79 	beq.w	ff0e <_vfiprintf_r+0x782>
   1021c:	ee18 1a10 	vmov	r1, s16
   10220:	aa18      	add	r2, sp, #96	; 0x60
   10222:	4658      	mov	r0, fp
   10224:	f7ff fa76 	bl	f714 <__sprint_r.part.0>
   10228:	2800      	cmp	r0, #0
   1022a:	f47f ac86 	bne.w	fb3a <_vfiprintf_r+0x3ae>
   1022e:	9919      	ldr	r1, [sp, #100]	; 0x64
   10230:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   10232:	3101      	adds	r1, #1
   10234:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10238:	e4f8      	b.n	fc2c <_vfiprintf_r+0x4a0>
   1023a:	9219      	str	r2, [sp, #100]	; 0x64
   1023c:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10240:	e45e      	b.n	fb00 <_vfiprintf_r+0x374>
   10242:	2f00      	cmp	r7, #0
   10244:	f47f abc3 	bne.w	f9ce <_vfiprintf_r+0x242>
   10248:	9e03      	ldr	r6, [sp, #12]
   1024a:	2700      	movs	r7, #0
   1024c:	9704      	str	r7, [sp, #16]
   1024e:	ac44      	add	r4, sp, #272	; 0x110
   10250:	f7ff bbc5 	b.w	f9de <_vfiprintf_r+0x252>
   10254:	9b03      	ldr	r3, [sp, #12]
   10256:	f013 0310 	ands.w	r3, r3, #16
   1025a:	d154      	bne.n	10306 <_vfiprintf_r+0xb7a>
   1025c:	9a03      	ldr	r2, [sp, #12]
   1025e:	f012 0040 	ands.w	r0, r2, #64	; 0x40
   10262:	f000 816b 	beq.w	1053c <_vfiprintf_r+0xdb0>
   10266:	9907      	ldr	r1, [sp, #28]
   10268:	461a      	mov	r2, r3
   1026a:	f851 3b04 	ldr.w	r3, [r1], #4
   1026e:	9107      	str	r1, [sp, #28]
   10270:	b29b      	uxth	r3, r3
   10272:	2101      	movs	r1, #1
   10274:	e401      	b.n	fa7a <_vfiprintf_r+0x2ee>
   10276:	9a09      	ldr	r2, [sp, #36]	; 0x24
   10278:	2a00      	cmp	r2, #0
   1027a:	d164      	bne.n	10346 <_vfiprintf_r+0xbba>
   1027c:	4618      	mov	r0, r3
   1027e:	2101      	movs	r1, #1
   10280:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10284:	e4c9      	b.n	fc1a <_vfiprintf_r+0x48e>
   10286:	2101      	movs	r1, #1
   10288:	4618      	mov	r0, r3
   1028a:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   1028e:	e4c4      	b.n	fc1a <_vfiprintf_r+0x48e>
   10290:	425b      	negs	r3, r3
   10292:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
   10296:	9603      	str	r6, [sp, #12]
   10298:	202d      	movs	r0, #45	; 0x2d
   1029a:	2101      	movs	r1, #1
   1029c:	f7ff bbee 	b.w	fa7c <_vfiprintf_r+0x2f0>
   102a0:	2b00      	cmp	r3, #0
   102a2:	f000 8088 	beq.w	103b6 <_vfiprintf_r+0xc2a>
   102a6:	ee18 1a10 	vmov	r1, s16
   102aa:	aa18      	add	r2, sp, #96	; 0x60
   102ac:	4658      	mov	r0, fp
   102ae:	f7ff fa31 	bl	f714 <__sprint_r.part.0>
   102b2:	2800      	cmp	r0, #0
   102b4:	f47f ac41 	bne.w	fb3a <_vfiprintf_r+0x3ae>
   102b8:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
   102bc:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   102c0:	1c41      	adds	r1, r0, #1
   102c2:	e477      	b.n	fbb4 <_vfiprintf_r+0x428>
   102c4:	f898 1000 	ldrb.w	r1, [r8]
   102c8:	9307      	str	r3, [sp, #28]
   102ca:	f7ff bad2 	b.w	f872 <_vfiprintf_r+0xe6>
   102ce:	ac44      	add	r4, sp, #272	; 0x110
   102d0:	f7ff bb85 	b.w	f9de <_vfiprintf_r+0x252>
   102d4:	f109 0908 	add.w	r9, r9, #8
   102d8:	f10c 0101 	add.w	r1, ip, #1
   102dc:	4660      	mov	r0, ip
   102de:	e4a0      	b.n	fc22 <_vfiprintf_r+0x496>
   102e0:	f416 7200 	ands.w	r2, r6, #512	; 0x200
   102e4:	f040 8197 	bne.w	10616 <_vfiprintf_r+0xe8a>
   102e8:	f851 3b04 	ldr.w	r3, [r1], #4
   102ec:	9107      	str	r1, [sp, #28]
   102ee:	f7ff bbc0 	b.w	fa72 <_vfiprintf_r+0x2e6>
   102f2:	05b3      	lsls	r3, r6, #22
   102f4:	f100 8188 	bmi.w	10608 <_vfiprintf_r+0xe7c>
   102f8:	f852 3b04 	ldr.w	r3, [r2], #4
   102fc:	9207      	str	r2, [sp, #28]
   102fe:	17da      	asrs	r2, r3, #31
   10300:	4611      	mov	r1, r2
   10302:	f7ff bb52 	b.w	f9aa <_vfiprintf_r+0x21e>
   10306:	9907      	ldr	r1, [sp, #28]
   10308:	f851 3b04 	ldr.w	r3, [r1], #4
   1030c:	9107      	str	r1, [sp, #28]
   1030e:	2101      	movs	r1, #1
   10310:	f7ff bbb3 	b.w	fa7a <_vfiprintf_r+0x2ee>
   10314:	9b07      	ldr	r3, [sp, #28]
   10316:	9805      	ldr	r0, [sp, #20]
   10318:	f853 1b04 	ldr.w	r1, [r3], #4
   1031c:	9307      	str	r3, [sp, #28]
   1031e:	17c2      	asrs	r2, r0, #31
   10320:	e9c1 0200 	strd	r0, r2, [r1]
   10324:	f7ff ba7d 	b.w	f822 <_vfiprintf_r+0x96>
   10328:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   1032a:	2b00      	cmp	r3, #0
   1032c:	f43f ab26 	beq.w	f97c <_vfiprintf_r+0x1f0>
   10330:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   10332:	781b      	ldrb	r3, [r3, #0]
   10334:	2b00      	cmp	r3, #0
   10336:	f43f ab21 	beq.w	f97c <_vfiprintf_r+0x1f0>
   1033a:	f898 1000 	ldrb.w	r1, [r8]
   1033e:	f446 6680 	orr.w	r6, r6, #1024	; 0x400
   10342:	f7ff ba96 	b.w	f872 <_vfiprintf_r+0xe6>
   10346:	2302      	movs	r3, #2
   10348:	aa11      	add	r2, sp, #68	; 0x44
   1034a:	931c      	str	r3, [sp, #112]	; 0x70
   1034c:	921b      	str	r2, [sp, #108]	; 0x6c
   1034e:	2001      	movs	r0, #1
   10350:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10354:	e6a2      	b.n	1009c <_vfiprintf_r+0x910>
   10356:	9603      	str	r6, [sp, #12]
   10358:	e571      	b.n	fe3e <_vfiprintf_r+0x6b2>
   1035a:	4b3b      	ldr	r3, [pc, #236]	; (10448 <_vfiprintf_r+0xcbc>)
   1035c:	930c      	str	r3, [sp, #48]	; 0x30
   1035e:	f016 0220 	ands.w	r2, r6, #32
   10362:	d059      	beq.n	10418 <_vfiprintf_r+0xc8c>
   10364:	9b07      	ldr	r3, [sp, #28]
   10366:	3307      	adds	r3, #7
   10368:	f023 0307 	bic.w	r3, r3, #7
   1036c:	4618      	mov	r0, r3
   1036e:	685a      	ldr	r2, [r3, #4]
   10370:	f850 3b08 	ldr.w	r3, [r0], #8
   10374:	9007      	str	r0, [sp, #28]
   10376:	07f4      	lsls	r4, r6, #31
   10378:	d509      	bpl.n	1038e <_vfiprintf_r+0xc02>
   1037a:	ea53 0002 	orrs.w	r0, r3, r2
   1037e:	d006      	beq.n	1038e <_vfiprintf_r+0xc02>
   10380:	f88d 1045 	strb.w	r1, [sp, #69]	; 0x45
   10384:	2130      	movs	r1, #48	; 0x30
   10386:	f046 0602 	orr.w	r6, r6, #2
   1038a:	f88d 1044 	strb.w	r1, [sp, #68]	; 0x44
   1038e:	f426 6180 	bic.w	r1, r6, #1024	; 0x400
   10392:	9103      	str	r1, [sp, #12]
   10394:	2102      	movs	r1, #2
   10396:	f7ff bb70 	b.w	fa7a <_vfiprintf_r+0x2ee>
   1039a:	4b2c      	ldr	r3, [pc, #176]	; (1044c <_vfiprintf_r+0xcc0>)
   1039c:	930c      	str	r3, [sp, #48]	; 0x30
   1039e:	e7de      	b.n	1035e <_vfiprintf_r+0xbd2>
   103a0:	9b07      	ldr	r3, [sp, #28]
   103a2:	2101      	movs	r1, #1
   103a4:	f853 2b04 	ldr.w	r2, [r3], #4
   103a8:	9103      	str	r1, [sp, #12]
   103aa:	f88d 20ac 	strb.w	r2, [sp, #172]	; 0xac
   103ae:	9307      	str	r3, [sp, #28]
   103b0:	9104      	str	r1, [sp, #16]
   103b2:	ac2b      	add	r4, sp, #172	; 0xac
   103b4:	e4df      	b.n	fd76 <_vfiprintf_r+0x5ea>
   103b6:	f89d 2043 	ldrb.w	r2, [sp, #67]	; 0x43
   103ba:	2a00      	cmp	r2, #0
   103bc:	f040 8132 	bne.w	10624 <_vfiprintf_r+0xe98>
   103c0:	9a09      	ldr	r2, [sp, #36]	; 0x24
   103c2:	2a00      	cmp	r2, #0
   103c4:	f47f ae62 	bne.w	1008c <_vfiprintf_r+0x900>
   103c8:	4618      	mov	r0, r3
   103ca:	2101      	movs	r1, #1
   103cc:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   103d0:	e427      	b.n	fc22 <_vfiprintf_r+0x496>
   103d2:	2100      	movs	r1, #0
   103d4:	2208      	movs	r2, #8
   103d6:	a816      	add	r0, sp, #88	; 0x58
   103d8:	9413      	str	r4, [sp, #76]	; 0x4c
   103da:	f7fc fc07 	bl	cbec <memset>
   103de:	1c79      	adds	r1, r7, #1
   103e0:	f000 80bc 	beq.w	1055c <_vfiprintf_r+0xdd0>
   103e4:	2500      	movs	r5, #0
   103e6:	9407      	str	r4, [sp, #28]
   103e8:	462c      	mov	r4, r5
   103ea:	e00c      	b.n	10406 <_vfiprintf_r+0xc7a>
   103ec:	a92b      	add	r1, sp, #172	; 0xac
   103ee:	4658      	mov	r0, fp
   103f0:	f7fc fc54 	bl	cc9c <_wcrtomb_r>
   103f4:	1c42      	adds	r2, r0, #1
   103f6:	4420      	add	r0, r4
   103f8:	f000 816b 	beq.w	106d2 <_vfiprintf_r+0xf46>
   103fc:	42b8      	cmp	r0, r7
   103fe:	dc08      	bgt.n	10412 <_vfiprintf_r+0xc86>
   10400:	f000 8170 	beq.w	106e4 <_vfiprintf_r+0xf58>
   10404:	4604      	mov	r4, r0
   10406:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   10408:	5952      	ldr	r2, [r2, r5]
   1040a:	ab16      	add	r3, sp, #88	; 0x58
   1040c:	3504      	adds	r5, #4
   1040e:	2a00      	cmp	r2, #0
   10410:	d1ec      	bne.n	103ec <_vfiprintf_r+0xc60>
   10412:	9404      	str	r4, [sp, #16]
   10414:	9c07      	ldr	r4, [sp, #28]
   10416:	e0af      	b.n	10578 <_vfiprintf_r+0xdec>
   10418:	f016 0310 	ands.w	r3, r6, #16
   1041c:	9807      	ldr	r0, [sp, #28]
   1041e:	d10c      	bne.n	1043a <_vfiprintf_r+0xcae>
   10420:	f016 0440 	ands.w	r4, r6, #64	; 0x40
   10424:	d005      	beq.n	10432 <_vfiprintf_r+0xca6>
   10426:	461a      	mov	r2, r3
   10428:	f850 3b04 	ldr.w	r3, [r0], #4
   1042c:	9007      	str	r0, [sp, #28]
   1042e:	b29b      	uxth	r3, r3
   10430:	e7a1      	b.n	10376 <_vfiprintf_r+0xbea>
   10432:	f416 7200 	ands.w	r2, r6, #512	; 0x200
   10436:	f040 80e1 	bne.w	105fc <_vfiprintf_r+0xe70>
   1043a:	f850 3b04 	ldr.w	r3, [r0], #4
   1043e:	9007      	str	r0, [sp, #28]
   10440:	e799      	b.n	10376 <_vfiprintf_r+0xbea>
   10442:	bf00      	nop
   10444:	20001568 	.word	0x20001568
   10448:	20001524 	.word	0x20001524
   1044c:	20001538 	.word	0x20001538
   10450:	9903      	ldr	r1, [sp, #12]
   10452:	9704      	str	r7, [sp, #16]
   10454:	ac44      	add	r4, sp, #272	; 0x110
   10456:	469e      	mov	lr, r3
   10458:	ee08 ba90 	vmov	s17, fp
   1045c:	f401 6680 	and.w	r6, r1, #1024	; 0x400
   10460:	f04f 0c00 	mov.w	ip, #0
   10464:	4623      	mov	r3, r4
   10466:	e006      	b.n	10476 <_vfiprintf_r+0xcea>
   10468:	f1be 0f0a 	cmp.w	lr, #10
   1046c:	f172 0200 	sbcs.w	r2, r2, #0
   10470:	d339      	bcc.n	104e6 <_vfiprintf_r+0xd5a>
   10472:	46a6      	mov	lr, r4
   10474:	462a      	mov	r2, r5
   10476:	49a6      	ldr	r1, [pc, #664]	; (10710 <_vfiprintf_r+0xf84>)
   10478:	eb1e 0002 	adds.w	r0, lr, r2
   1047c:	f140 0000 	adc.w	r0, r0, #0
   10480:	460f      	mov	r7, r1
   10482:	fba1 1400 	umull	r1, r4, r1, r0
   10486:	f024 0103 	bic.w	r1, r4, #3
   1048a:	eb01 0194 	add.w	r1, r1, r4, lsr #2
   1048e:	1a40      	subs	r0, r0, r1
   10490:	ebbe 0100 	subs.w	r1, lr, r0
   10494:	f04f 35cc 	mov.w	r5, #3435973836	; 0xcccccccc
   10498:	f162 0400 	sbc.w	r4, r2, #0
   1049c:	fb05 f501 	mul.w	r5, r5, r1
   104a0:	fb07 5504 	mla	r5, r7, r4, r5
   104a4:	fba1 4107 	umull	r4, r1, r1, r7
   104a8:	440d      	add	r5, r1
   104aa:	2705      	movs	r7, #5
   104ac:	f004 0101 	and.w	r1, r4, #1
   104b0:	fba1 1b07 	umull	r1, fp, r1, r7
   104b4:	1809      	adds	r1, r1, r0
   104b6:	0864      	lsrs	r4, r4, #1
   104b8:	3130      	adds	r1, #48	; 0x30
   104ba:	f803 1c01 	strb.w	r1, [r3, #-1]
   104be:	ea44 74c5 	orr.w	r4, r4, r5, lsl #31
   104c2:	f10c 0c01 	add.w	ip, ip, #1
   104c6:	3b01      	subs	r3, #1
   104c8:	086d      	lsrs	r5, r5, #1
   104ca:	2e00      	cmp	r6, #0
   104cc:	d0cc      	beq.n	10468 <_vfiprintf_r+0xcdc>
   104ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
   104d0:	7809      	ldrb	r1, [r1, #0]
   104d2:	4561      	cmp	r1, ip
   104d4:	d1c8      	bne.n	10468 <_vfiprintf_r+0xcdc>
   104d6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
   104da:	d0c5      	beq.n	10468 <_vfiprintf_r+0xcdc>
   104dc:	f1be 0f0a 	cmp.w	lr, #10
   104e0:	f172 0200 	sbcs.w	r2, r2, #0
   104e4:	d26c      	bcs.n	105c0 <_vfiprintf_r+0xe34>
   104e6:	461c      	mov	r4, r3
   104e8:	ab44      	add	r3, sp, #272	; 0x110
   104ea:	1b1b      	subs	r3, r3, r4
   104ec:	9f04      	ldr	r7, [sp, #16]
   104ee:	9e03      	ldr	r6, [sp, #12]
   104f0:	9304      	str	r3, [sp, #16]
   104f2:	ee18 ba90 	vmov	fp, s17
   104f6:	f7ff ba72 	b.w	f9de <_vfiprintf_r+0x252>
   104fa:	9603      	str	r6, [sp, #12]
   104fc:	f7ff ba62 	b.w	f9c4 <_vfiprintf_r+0x238>
   10500:	4658      	mov	r0, fp
   10502:	f7fe fb39 	bl	eb78 <__sinit>
   10506:	f7ff b95b 	b.w	f7c0 <_vfiprintf_r+0x34>
   1050a:	2901      	cmp	r1, #1
   1050c:	9603      	str	r6, [sp, #12]
   1050e:	f47f accd 	bne.w	feac <_vfiprintf_r+0x720>
   10512:	f7ff ba5c 	b.w	f9ce <_vfiprintf_r+0x242>
   10516:	9b07      	ldr	r3, [sp, #28]
   10518:	9905      	ldr	r1, [sp, #20]
   1051a:	f853 2b04 	ldr.w	r2, [r3], #4
   1051e:	6011      	str	r1, [r2, #0]
   10520:	9307      	str	r3, [sp, #28]
   10522:	f7ff b97e 	b.w	f822 <_vfiprintf_r+0x96>
   10526:	2f06      	cmp	r7, #6
   10528:	463b      	mov	r3, r7
   1052a:	9a03      	ldr	r2, [sp, #12]
   1052c:	4c79      	ldr	r4, [pc, #484]	; (10714 <_vfiprintf_r+0xf88>)
   1052e:	9207      	str	r2, [sp, #28]
   10530:	bf28      	it	cs
   10532:	2306      	movcs	r3, #6
   10534:	9304      	str	r3, [sp, #16]
   10536:	9303      	str	r3, [sp, #12]
   10538:	f7ff bb25 	b.w	fb86 <_vfiprintf_r+0x3fa>
   1053c:	9b03      	ldr	r3, [sp, #12]
   1053e:	9907      	ldr	r1, [sp, #28]
   10540:	f413 7200 	ands.w	r2, r3, #512	; 0x200
   10544:	bf14      	ite	ne
   10546:	f851 3b04 	ldrne.w	r3, [r1], #4
   1054a:	f851 3b04 	ldreq.w	r3, [r1], #4
   1054e:	9107      	str	r1, [sp, #28]
   10550:	bf1c      	itt	ne
   10552:	4602      	movne	r2, r0
   10554:	b2db      	uxtbne	r3, r3
   10556:	2101      	movs	r1, #1
   10558:	f7ff ba8f 	b.w	fa7a <_vfiprintf_r+0x2ee>
   1055c:	ab16      	add	r3, sp, #88	; 0x58
   1055e:	9300      	str	r3, [sp, #0]
   10560:	2300      	movs	r3, #0
   10562:	4619      	mov	r1, r3
   10564:	aa13      	add	r2, sp, #76	; 0x4c
   10566:	4658      	mov	r0, fp
   10568:	f7fd fa86 	bl	da78 <_wcsrtombs_r>
   1056c:	4603      	mov	r3, r0
   1056e:	3301      	adds	r3, #1
   10570:	9004      	str	r0, [sp, #16]
   10572:	f000 80ae 	beq.w	106d2 <_vfiprintf_r+0xf46>
   10576:	9413      	str	r4, [sp, #76]	; 0x4c
   10578:	9b04      	ldr	r3, [sp, #16]
   1057a:	2b00      	cmp	r3, #0
   1057c:	d030      	beq.n	105e0 <_vfiprintf_r+0xe54>
   1057e:	2b63      	cmp	r3, #99	; 0x63
   10580:	dc63      	bgt.n	1064a <_vfiprintf_r+0xebe>
   10582:	2300      	movs	r3, #0
   10584:	9308      	str	r3, [sp, #32]
   10586:	ac2b      	add	r4, sp, #172	; 0xac
   10588:	2208      	movs	r2, #8
   1058a:	2100      	movs	r1, #0
   1058c:	a816      	add	r0, sp, #88	; 0x58
   1058e:	f7fc fb2d 	bl	cbec <memset>
   10592:	9d04      	ldr	r5, [sp, #16]
   10594:	ab16      	add	r3, sp, #88	; 0x58
   10596:	9300      	str	r3, [sp, #0]
   10598:	aa13      	add	r2, sp, #76	; 0x4c
   1059a:	462b      	mov	r3, r5
   1059c:	4621      	mov	r1, r4
   1059e:	4658      	mov	r0, fp
   105a0:	f7fd fa6a 	bl	da78 <_wcsrtombs_r>
   105a4:	4285      	cmp	r5, r0
   105a6:	f040 80ab 	bne.w	10700 <_vfiprintf_r+0xf74>
   105aa:	9b03      	ldr	r3, [sp, #12]
   105ac:	9a04      	ldr	r2, [sp, #16]
   105ae:	9307      	str	r3, [sp, #28]
   105b0:	2300      	movs	r3, #0
   105b2:	54a3      	strb	r3, [r4, r2]
   105b4:	461f      	mov	r7, r3
   105b6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   105ba:	9303      	str	r3, [sp, #12]
   105bc:	f7ff ba16 	b.w	f9ec <_vfiprintf_r+0x260>
   105c0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   105c2:	990d      	ldr	r1, [sp, #52]	; 0x34
   105c4:	1a9b      	subs	r3, r3, r2
   105c6:	4618      	mov	r0, r3
   105c8:	9308      	str	r3, [sp, #32]
   105ca:	f7f9 ff27 	bl	a41c <strncpy>
   105ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
   105d0:	9b08      	ldr	r3, [sp, #32]
   105d2:	784a      	ldrb	r2, [r1, #1]
   105d4:	b10a      	cbz	r2, 105da <_vfiprintf_r+0xe4e>
   105d6:	3101      	adds	r1, #1
   105d8:	910b      	str	r1, [sp, #44]	; 0x2c
   105da:	f04f 0c00 	mov.w	ip, #0
   105de:	e748      	b.n	10472 <_vfiprintf_r+0xce6>
   105e0:	9b03      	ldr	r3, [sp, #12]
   105e2:	9307      	str	r3, [sp, #28]
   105e4:	9b04      	ldr	r3, [sp, #16]
   105e6:	9303      	str	r3, [sp, #12]
   105e8:	461f      	mov	r7, r3
   105ea:	9308      	str	r3, [sp, #32]
   105ec:	f7ff b9fe 	b.w	f9ec <_vfiprintf_r+0x260>
   105f0:	2101      	movs	r1, #1
   105f2:	4618      	mov	r0, r3
   105f4:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   105f8:	f7ff bb13 	b.w	fc22 <_vfiprintf_r+0x496>
   105fc:	f850 3b04 	ldr.w	r3, [r0], #4
   10600:	9007      	str	r0, [sp, #28]
   10602:	4622      	mov	r2, r4
   10604:	b2db      	uxtb	r3, r3
   10606:	e6b6      	b.n	10376 <_vfiprintf_r+0xbea>
   10608:	f912 3b04 	ldrsb.w	r3, [r2], #4
   1060c:	9207      	str	r2, [sp, #28]
   1060e:	17da      	asrs	r2, r3, #31
   10610:	4611      	mov	r1, r2
   10612:	f7ff b9ca 	b.w	f9aa <_vfiprintf_r+0x21e>
   10616:	f851 3b04 	ldr.w	r3, [r1], #4
   1061a:	9107      	str	r1, [sp, #28]
   1061c:	4602      	mov	r2, r0
   1061e:	b2db      	uxtb	r3, r3
   10620:	f7ff ba27 	b.w	fa72 <_vfiprintf_r+0x2e6>
   10624:	2301      	movs	r3, #1
   10626:	931c      	str	r3, [sp, #112]	; 0x70
   10628:	2101      	movs	r1, #1
   1062a:	f10d 0343 	add.w	r3, sp, #67	; 0x43
   1062e:	931b      	str	r3, [sp, #108]	; 0x6c
   10630:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
   10634:	460b      	mov	r3, r1
   10636:	f7ff bacd 	b.w	fbd4 <_vfiprintf_r+0x448>
   1063a:	9b07      	ldr	r3, [sp, #28]
   1063c:	9905      	ldr	r1, [sp, #20]
   1063e:	f853 2b04 	ldr.w	r2, [r3], #4
   10642:	9307      	str	r3, [sp, #28]
   10644:	8011      	strh	r1, [r2, #0]
   10646:	f7ff b8ec 	b.w	f822 <_vfiprintf_r+0x96>
   1064a:	1c59      	adds	r1, r3, #1
   1064c:	4658      	mov	r0, fp
   1064e:	f7fb ff51 	bl	c4f4 <_malloc_r>
   10652:	4604      	mov	r4, r0
   10654:	2800      	cmp	r0, #0
   10656:	d03c      	beq.n	106d2 <_vfiprintf_r+0xf46>
   10658:	9008      	str	r0, [sp, #32]
   1065a:	e795      	b.n	10588 <_vfiprintf_r+0xdfc>
   1065c:	6d88      	ldr	r0, [r1, #88]	; 0x58
   1065e:	f7fc fb6d 	bl	cd3c <__retarget_lock_release_recursive>
   10662:	f7ff b9e9 	b.w	fa38 <_vfiprintf_r+0x2ac>
   10666:	9b03      	ldr	r3, [sp, #12]
   10668:	9307      	str	r3, [sp, #28]
   1066a:	e9cd 7703 	strd	r7, r7, [sp, #12]
   1066e:	9f08      	ldr	r7, [sp, #32]
   10670:	f7ff b9bc 	b.w	f9ec <_vfiprintf_r+0x260>
   10674:	9819      	ldr	r0, [sp, #100]	; 0x64
   10676:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   10678:	3001      	adds	r0, #1
   1067a:	e545      	b.n	10108 <_vfiprintf_r+0x97c>
   1067c:	9b03      	ldr	r3, [sp, #12]
   1067e:	9307      	str	r3, [sp, #28]
   10680:	4620      	mov	r0, r4
   10682:	f7fe fafd 	bl	ec80 <strlen>
   10686:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
   1068a:	462f      	mov	r7, r5
   1068c:	9004      	str	r0, [sp, #16]
   1068e:	9303      	str	r3, [sp, #12]
   10690:	9508      	str	r5, [sp, #32]
   10692:	f7ff b9ab 	b.w	f9ec <_vfiprintf_r+0x260>
   10696:	ee18 1a10 	vmov	r1, s16
   1069a:	aa18      	add	r2, sp, #96	; 0x60
   1069c:	4658      	mov	r0, fp
   1069e:	f7ff f839 	bl	f714 <__sprint_r.part.0>
   106a2:	2800      	cmp	r0, #0
   106a4:	f43f aa36 	beq.w	fb14 <_vfiprintf_r+0x388>
   106a8:	f7ff ba4d 	b.w	fb46 <_vfiprintf_r+0x3ba>
   106ac:	9819      	ldr	r0, [sp, #100]	; 0x64
   106ae:	3001      	adds	r0, #1
   106b0:	e57a      	b.n	101a8 <_vfiprintf_r+0xa1c>
   106b2:	468c      	mov	ip, r1
   106b4:	e46e      	b.n	ff94 <_vfiprintf_r+0x808>
   106b6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   106b8:	07d9      	lsls	r1, r3, #31
   106ba:	d405      	bmi.n	106c8 <_vfiprintf_r+0xf3c>
   106bc:	89ab      	ldrh	r3, [r5, #12]
   106be:	059a      	lsls	r2, r3, #22
   106c0:	d402      	bmi.n	106c8 <_vfiprintf_r+0xf3c>
   106c2:	6da8      	ldr	r0, [r5, #88]	; 0x58
   106c4:	f7fc fb3a 	bl	cd3c <__retarget_lock_release_recursive>
   106c8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   106cc:	9305      	str	r3, [sp, #20]
   106ce:	f7ff ba49 	b.w	fb64 <_vfiprintf_r+0x3d8>
   106d2:	ee18 2a10 	vmov	r2, s16
   106d6:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   106da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   106de:	8193      	strh	r3, [r2, #12]
   106e0:	f7ff ba35 	b.w	fb4e <_vfiprintf_r+0x3c2>
   106e4:	9c07      	ldr	r4, [sp, #28]
   106e6:	9704      	str	r7, [sp, #16]
   106e8:	e746      	b.n	10578 <_vfiprintf_r+0xdec>
   106ea:	9b07      	ldr	r3, [sp, #28]
   106ec:	f898 1001 	ldrb.w	r1, [r8, #1]
   106f0:	f853 7b04 	ldr.w	r7, [r3], #4
   106f4:	9307      	str	r3, [sp, #28]
   106f6:	4690      	mov	r8, r2
   106f8:	ea47 77e7 	orr.w	r7, r7, r7, asr #31
   106fc:	f7ff b8b9 	b.w	f872 <_vfiprintf_r+0xe6>
   10700:	ee18 2a10 	vmov	r2, s16
   10704:	8993      	ldrh	r3, [r2, #12]
   10706:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   1070a:	8193      	strh	r3, [r2, #12]
   1070c:	f7ff ba15 	b.w	fb3a <_vfiprintf_r+0x3ae>
   10710:	cccccccd 	.word	0xcccccccd
   10714:	2000154c 	.word	0x2000154c

00010718 <__sbprintf>:
   10718:	b570      	push	{r4, r5, r6, lr}
   1071a:	460c      	mov	r4, r1
   1071c:	8989      	ldrh	r1, [r1, #12]
   1071e:	f5ad 6d8e 	sub.w	sp, sp, #1136	; 0x470
   10722:	f021 0102 	bic.w	r1, r1, #2
   10726:	f8ad 1014 	strh.w	r1, [sp, #20]
   1072a:	6e61      	ldr	r1, [r4, #100]	; 0x64
   1072c:	911b      	str	r1, [sp, #108]	; 0x6c
   1072e:	89e1      	ldrh	r1, [r4, #14]
   10730:	f8ad 1016 	strh.w	r1, [sp, #22]
   10734:	69e1      	ldr	r1, [r4, #28]
   10736:	9109      	str	r1, [sp, #36]	; 0x24
   10738:	6a61      	ldr	r1, [r4, #36]	; 0x24
   1073a:	910b      	str	r1, [sp, #44]	; 0x2c
   1073c:	a91c      	add	r1, sp, #112	; 0x70
   1073e:	9102      	str	r1, [sp, #8]
   10740:	9106      	str	r1, [sp, #24]
   10742:	f44f 6180 	mov.w	r1, #1024	; 0x400
   10746:	4606      	mov	r6, r0
   10748:	9104      	str	r1, [sp, #16]
   1074a:	9107      	str	r1, [sp, #28]
   1074c:	a818      	add	r0, sp, #96	; 0x60
   1074e:	2100      	movs	r1, #0
   10750:	e9cd 3200 	strd	r3, r2, [sp]
   10754:	9108      	str	r1, [sp, #32]
   10756:	f7fc faeb 	bl	cd30 <__retarget_lock_init_recursive>
   1075a:	e9dd 3200 	ldrd	r3, r2, [sp]
   1075e:	a902      	add	r1, sp, #8
   10760:	4630      	mov	r0, r6
   10762:	f7ff f813 	bl	f78c <_vfiprintf_r>
   10766:	1e05      	subs	r5, r0, #0
   10768:	db07      	blt.n	1077a <__sbprintf+0x62>
   1076a:	a902      	add	r1, sp, #8
   1076c:	4630      	mov	r0, r6
   1076e:	f7fe f943 	bl	e9f8 <_fflush_r>
   10772:	2800      	cmp	r0, #0
   10774:	bf18      	it	ne
   10776:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
   1077a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
   1077e:	065b      	lsls	r3, r3, #25
   10780:	d503      	bpl.n	1078a <__sbprintf+0x72>
   10782:	89a3      	ldrh	r3, [r4, #12]
   10784:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   10788:	81a3      	strh	r3, [r4, #12]
   1078a:	9818      	ldr	r0, [sp, #96]	; 0x60
   1078c:	f7fc fad2 	bl	cd34 <__retarget_lock_close_recursive>
   10790:	4628      	mov	r0, r5
   10792:	f50d 6d8e 	add.w	sp, sp, #1136	; 0x470
   10796:	bd70      	pop	{r4, r5, r6, pc}

00010798 <__swbuf_r>:
   10798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   1079a:	460d      	mov	r5, r1
   1079c:	4614      	mov	r4, r2
   1079e:	4606      	mov	r6, r0
   107a0:	b110      	cbz	r0, 107a8 <__swbuf_r+0x10>
   107a2:	6b43      	ldr	r3, [r0, #52]	; 0x34
   107a4:	2b00      	cmp	r3, #0
   107a6:	d04c      	beq.n	10842 <__swbuf_r+0xaa>
   107a8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   107ac:	69a3      	ldr	r3, [r4, #24]
   107ae:	60a3      	str	r3, [r4, #8]
   107b0:	0717      	lsls	r7, r2, #28
   107b2:	b290      	uxth	r0, r2
   107b4:	d51b      	bpl.n	107ee <__swbuf_r+0x56>
   107b6:	6923      	ldr	r3, [r4, #16]
   107b8:	b1cb      	cbz	r3, 107ee <__swbuf_r+0x56>
   107ba:	b2ed      	uxtb	r5, r5
   107bc:	0481      	lsls	r1, r0, #18
   107be:	462f      	mov	r7, r5
   107c0:	d522      	bpl.n	10808 <__swbuf_r+0x70>
   107c2:	6822      	ldr	r2, [r4, #0]
   107c4:	6961      	ldr	r1, [r4, #20]
   107c6:	1ad3      	subs	r3, r2, r3
   107c8:	4299      	cmp	r1, r3
   107ca:	dd29      	ble.n	10820 <__swbuf_r+0x88>
   107cc:	3301      	adds	r3, #1
   107ce:	68a1      	ldr	r1, [r4, #8]
   107d0:	3901      	subs	r1, #1
   107d2:	60a1      	str	r1, [r4, #8]
   107d4:	1c51      	adds	r1, r2, #1
   107d6:	6021      	str	r1, [r4, #0]
   107d8:	7015      	strb	r5, [r2, #0]
   107da:	6962      	ldr	r2, [r4, #20]
   107dc:	429a      	cmp	r2, r3
   107de:	d027      	beq.n	10830 <__swbuf_r+0x98>
   107e0:	89a3      	ldrh	r3, [r4, #12]
   107e2:	07db      	lsls	r3, r3, #31
   107e4:	d501      	bpl.n	107ea <__swbuf_r+0x52>
   107e6:	2d0a      	cmp	r5, #10
   107e8:	d022      	beq.n	10830 <__swbuf_r+0x98>
   107ea:	4638      	mov	r0, r7
   107ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   107ee:	4621      	mov	r1, r4
   107f0:	4630      	mov	r0, r6
   107f2:	f7fc fc23 	bl	d03c <__swsetup_r>
   107f6:	bb08      	cbnz	r0, 1083c <__swbuf_r+0xa4>
   107f8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   107fc:	6923      	ldr	r3, [r4, #16]
   107fe:	b290      	uxth	r0, r2
   10800:	b2ed      	uxtb	r5, r5
   10802:	0481      	lsls	r1, r0, #18
   10804:	462f      	mov	r7, r5
   10806:	d4dc      	bmi.n	107c2 <__swbuf_r+0x2a>
   10808:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   1080c:	81a2      	strh	r2, [r4, #12]
   1080e:	6e62      	ldr	r2, [r4, #100]	; 0x64
   10810:	6961      	ldr	r1, [r4, #20]
   10812:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
   10816:	6662      	str	r2, [r4, #100]	; 0x64
   10818:	6822      	ldr	r2, [r4, #0]
   1081a:	1ad3      	subs	r3, r2, r3
   1081c:	4299      	cmp	r1, r3
   1081e:	dcd5      	bgt.n	107cc <__swbuf_r+0x34>
   10820:	4621      	mov	r1, r4
   10822:	4630      	mov	r0, r6
   10824:	f7fe f8e8 	bl	e9f8 <_fflush_r>
   10828:	b940      	cbnz	r0, 1083c <__swbuf_r+0xa4>
   1082a:	6822      	ldr	r2, [r4, #0]
   1082c:	2301      	movs	r3, #1
   1082e:	e7ce      	b.n	107ce <__swbuf_r+0x36>
   10830:	4621      	mov	r1, r4
   10832:	4630      	mov	r0, r6
   10834:	f7fe f8e0 	bl	e9f8 <_fflush_r>
   10838:	2800      	cmp	r0, #0
   1083a:	d0d6      	beq.n	107ea <__swbuf_r+0x52>
   1083c:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   10840:	e7d3      	b.n	107ea <__swbuf_r+0x52>
   10842:	f7fe f999 	bl	eb78 <__sinit>
   10846:	e7af      	b.n	107a8 <__swbuf_r+0x10>

00010848 <__register_exitproc>:
   10848:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1084c:	f8df a07c 	ldr.w	sl, [pc, #124]	; 108cc <__register_exitproc+0x84>
   10850:	4606      	mov	r6, r0
   10852:	f8da 0000 	ldr.w	r0, [sl]
   10856:	4698      	mov	r8, r3
   10858:	460f      	mov	r7, r1
   1085a:	4691      	mov	r9, r2
   1085c:	f7fc fa6c 	bl	cd38 <__retarget_lock_acquire_recursive>
   10860:	4b18      	ldr	r3, [pc, #96]	; (108c4 <__register_exitproc+0x7c>)
   10862:	681c      	ldr	r4, [r3, #0]
   10864:	b324      	cbz	r4, 108b0 <__register_exitproc+0x68>
   10866:	6865      	ldr	r5, [r4, #4]
   10868:	2d1f      	cmp	r5, #31
   1086a:	dc24      	bgt.n	108b6 <__register_exitproc+0x6e>
   1086c:	b95e      	cbnz	r6, 10886 <__register_exitproc+0x3e>
   1086e:	1c6b      	adds	r3, r5, #1
   10870:	3502      	adds	r5, #2
   10872:	f8da 0000 	ldr.w	r0, [sl]
   10876:	6063      	str	r3, [r4, #4]
   10878:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
   1087c:	f7fc fa5e 	bl	cd3c <__retarget_lock_release_recursive>
   10880:	2000      	movs	r0, #0
   10882:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10886:	eb04 0185 	add.w	r1, r4, r5, lsl #2
   1088a:	2301      	movs	r3, #1
   1088c:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
   10890:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   10894:	40ab      	lsls	r3, r5
   10896:	431a      	orrs	r2, r3
   10898:	2e02      	cmp	r6, #2
   1089a:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   1089e:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
   108a2:	d1e4      	bne.n	1086e <__register_exitproc+0x26>
   108a4:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
   108a8:	431a      	orrs	r2, r3
   108aa:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
   108ae:	e7de      	b.n	1086e <__register_exitproc+0x26>
   108b0:	4c05      	ldr	r4, [pc, #20]	; (108c8 <__register_exitproc+0x80>)
   108b2:	601c      	str	r4, [r3, #0]
   108b4:	e7d7      	b.n	10866 <__register_exitproc+0x1e>
   108b6:	f8da 0000 	ldr.w	r0, [sl]
   108ba:	f7fc fa3f 	bl	cd3c <__retarget_lock_release_recursive>
   108be:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   108c2:	e7de      	b.n	10882 <__register_exitproc+0x3a>
   108c4:	200038e4 	.word	0x200038e4
   108c8:	200038e8 	.word	0x200038e8
   108cc:	20002c20 	.word	0x20002c20

000108d0 <__ascii_mbtowc>:
   108d0:	b082      	sub	sp, #8
   108d2:	b149      	cbz	r1, 108e8 <__ascii_mbtowc+0x18>
   108d4:	b15a      	cbz	r2, 108ee <__ascii_mbtowc+0x1e>
   108d6:	b16b      	cbz	r3, 108f4 <__ascii_mbtowc+0x24>
   108d8:	7813      	ldrb	r3, [r2, #0]
   108da:	600b      	str	r3, [r1, #0]
   108dc:	7812      	ldrb	r2, [r2, #0]
   108de:	1e10      	subs	r0, r2, #0
   108e0:	bf18      	it	ne
   108e2:	2001      	movne	r0, #1
   108e4:	b002      	add	sp, #8
   108e6:	4770      	bx	lr
   108e8:	a901      	add	r1, sp, #4
   108ea:	2a00      	cmp	r2, #0
   108ec:	d1f3      	bne.n	108d6 <__ascii_mbtowc+0x6>
   108ee:	4610      	mov	r0, r2
   108f0:	b002      	add	sp, #8
   108f2:	4770      	bx	lr
   108f4:	f06f 0001 	mvn.w	r0, #1
   108f8:	e7f4      	b.n	108e4 <__ascii_mbtowc+0x14>
   108fa:	bf00      	nop

000108fc <_fclose_r>:
   108fc:	b570      	push	{r4, r5, r6, lr}
   108fe:	2900      	cmp	r1, #0
   10900:	d04b      	beq.n	1099a <_fclose_r+0x9e>
   10902:	4606      	mov	r6, r0
   10904:	460c      	mov	r4, r1
   10906:	b110      	cbz	r0, 1090e <_fclose_r+0x12>
   10908:	6b43      	ldr	r3, [r0, #52]	; 0x34
   1090a:	2b00      	cmp	r3, #0
   1090c:	d048      	beq.n	109a0 <_fclose_r+0xa4>
   1090e:	6e63      	ldr	r3, [r4, #100]	; 0x64
   10910:	07d8      	lsls	r0, r3, #31
   10912:	d534      	bpl.n	1097e <_fclose_r+0x82>
   10914:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   10918:	2b00      	cmp	r3, #0
   1091a:	d03e      	beq.n	1099a <_fclose_r+0x9e>
   1091c:	4621      	mov	r1, r4
   1091e:	4630      	mov	r0, r6
   10920:	f7fd ffd2 	bl	e8c8 <__sflush_r>
   10924:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   10926:	4605      	mov	r5, r0
   10928:	b133      	cbz	r3, 10938 <_fclose_r+0x3c>
   1092a:	69e1      	ldr	r1, [r4, #28]
   1092c:	4630      	mov	r0, r6
   1092e:	4798      	blx	r3
   10930:	2800      	cmp	r0, #0
   10932:	bfb8      	it	lt
   10934:	f04f 35ff 	movlt.w	r5, #4294967295	; 0xffffffff
   10938:	89a3      	ldrh	r3, [r4, #12]
   1093a:	061a      	lsls	r2, r3, #24
   1093c:	d43c      	bmi.n	109b8 <_fclose_r+0xbc>
   1093e:	6b21      	ldr	r1, [r4, #48]	; 0x30
   10940:	b141      	cbz	r1, 10954 <_fclose_r+0x58>
   10942:	f104 0340 	add.w	r3, r4, #64	; 0x40
   10946:	4299      	cmp	r1, r3
   10948:	d002      	beq.n	10950 <_fclose_r+0x54>
   1094a:	4630      	mov	r0, r6
   1094c:	f7fe fc80 	bl	f250 <_free_r>
   10950:	2300      	movs	r3, #0
   10952:	6323      	str	r3, [r4, #48]	; 0x30
   10954:	6c61      	ldr	r1, [r4, #68]	; 0x44
   10956:	b121      	cbz	r1, 10962 <_fclose_r+0x66>
   10958:	4630      	mov	r0, r6
   1095a:	f7fe fc79 	bl	f250 <_free_r>
   1095e:	2300      	movs	r3, #0
   10960:	6463      	str	r3, [r4, #68]	; 0x44
   10962:	f7fe f927 	bl	ebb4 <__sfp_lock_acquire>
   10966:	6e63      	ldr	r3, [r4, #100]	; 0x64
   10968:	2200      	movs	r2, #0
   1096a:	07db      	lsls	r3, r3, #31
   1096c:	81a2      	strh	r2, [r4, #12]
   1096e:	d51f      	bpl.n	109b0 <_fclose_r+0xb4>
   10970:	6da0      	ldr	r0, [r4, #88]	; 0x58
   10972:	f7fc f9df 	bl	cd34 <__retarget_lock_close_recursive>
   10976:	f7fe f923 	bl	ebc0 <__sfp_lock_release>
   1097a:	4628      	mov	r0, r5
   1097c:	bd70      	pop	{r4, r5, r6, pc}
   1097e:	89a3      	ldrh	r3, [r4, #12]
   10980:	0599      	lsls	r1, r3, #22
   10982:	d4cb      	bmi.n	1091c <_fclose_r+0x20>
   10984:	6da0      	ldr	r0, [r4, #88]	; 0x58
   10986:	f7fc f9d7 	bl	cd38 <__retarget_lock_acquire_recursive>
   1098a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   1098e:	2b00      	cmp	r3, #0
   10990:	d1c4      	bne.n	1091c <_fclose_r+0x20>
   10992:	6e65      	ldr	r5, [r4, #100]	; 0x64
   10994:	f015 0501 	ands.w	r5, r5, #1
   10998:	d005      	beq.n	109a6 <_fclose_r+0xaa>
   1099a:	2500      	movs	r5, #0
   1099c:	4628      	mov	r0, r5
   1099e:	bd70      	pop	{r4, r5, r6, pc}
   109a0:	f7fe f8ea 	bl	eb78 <__sinit>
   109a4:	e7b3      	b.n	1090e <_fclose_r+0x12>
   109a6:	6da0      	ldr	r0, [r4, #88]	; 0x58
   109a8:	f7fc f9c8 	bl	cd3c <__retarget_lock_release_recursive>
   109ac:	4628      	mov	r0, r5
   109ae:	bd70      	pop	{r4, r5, r6, pc}
   109b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
   109b2:	f7fc f9c3 	bl	cd3c <__retarget_lock_release_recursive>
   109b6:	e7db      	b.n	10970 <_fclose_r+0x74>
   109b8:	6921      	ldr	r1, [r4, #16]
   109ba:	4630      	mov	r0, r6
   109bc:	f7fe fc48 	bl	f250 <_free_r>
   109c0:	e7bd      	b.n	1093e <_fclose_r+0x42>
   109c2:	bf00      	nop

000109c4 <_wcsnrtombs_l>:
   109c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109c8:	b08b      	sub	sp, #44	; 0x2c
   109ca:	e9dd 8a15 	ldrd	r8, sl, [sp, #84]	; 0x54
   109ce:	9f14      	ldr	r7, [sp, #80]	; 0x50
   109d0:	9103      	str	r1, [sp, #12]
   109d2:	4681      	mov	r9, r0
   109d4:	9205      	str	r2, [sp, #20]
   109d6:	461e      	mov	r6, r3
   109d8:	f1b8 0f00 	cmp.w	r8, #0
   109dc:	d05c      	beq.n	10a98 <_wcsnrtombs_l+0xd4>
   109de:	9b03      	ldr	r3, [sp, #12]
   109e0:	2b00      	cmp	r3, #0
   109e2:	d05e      	beq.n	10aa2 <_wcsnrtombs_l+0xde>
   109e4:	9b05      	ldr	r3, [sp, #20]
   109e6:	681d      	ldr	r5, [r3, #0]
   109e8:	2f00      	cmp	r7, #0
   109ea:	d06a      	beq.n	10ac2 <_wcsnrtombs_l+0xfe>
   109ec:	1e74      	subs	r4, r6, #1
   109ee:	b34e      	cbz	r6, 10a44 <_wcsnrtombs_l+0x80>
   109f0:	9b03      	ldr	r3, [sp, #12]
   109f2:	9304      	str	r3, [sp, #16]
   109f4:	3d04      	subs	r5, #4
   109f6:	2600      	movs	r6, #0
   109f8:	9501      	str	r5, [sp, #4]
   109fa:	e00b      	b.n	10a14 <_wcsnrtombs_l+0x50>
   109fc:	9b03      	ldr	r3, [sp, #12]
   109fe:	bb2b      	cbnz	r3, 10a4c <_wcsnrtombs_l+0x88>
   10a00:	9b01      	ldr	r3, [sp, #4]
   10a02:	681a      	ldr	r2, [r3, #0]
   10a04:	2a00      	cmp	r2, #0
   10a06:	d03a      	beq.n	10a7e <_wcsnrtombs_l+0xba>
   10a08:	45bc      	cmp	ip, r7
   10a0a:	d25c      	bcs.n	10ac6 <_wcsnrtombs_l+0x102>
   10a0c:	3c01      	subs	r4, #1
   10a0e:	1c63      	adds	r3, r4, #1
   10a10:	4666      	mov	r6, ip
   10a12:	d017      	beq.n	10a44 <_wcsnrtombs_l+0x80>
   10a14:	f8d8 3000 	ldr.w	r3, [r8]
   10a18:	9302      	str	r3, [sp, #8]
   10a1a:	9b01      	ldr	r3, [sp, #4]
   10a1c:	f8da 50e0 	ldr.w	r5, [sl, #224]	; 0xe0
   10a20:	f853 2f04 	ldr.w	r2, [r3, #4]!
   10a24:	9301      	str	r3, [sp, #4]
   10a26:	a907      	add	r1, sp, #28
   10a28:	4643      	mov	r3, r8
   10a2a:	4648      	mov	r0, r9
   10a2c:	f8d8 b004 	ldr.w	fp, [r8, #4]
   10a30:	47a8      	blx	r5
   10a32:	1c42      	adds	r2, r0, #1
   10a34:	d03a      	beq.n	10aac <_wcsnrtombs_l+0xe8>
   10a36:	eb00 0c06 	add.w	ip, r0, r6
   10a3a:	45bc      	cmp	ip, r7
   10a3c:	d9de      	bls.n	109fc <_wcsnrtombs_l+0x38>
   10a3e:	9b02      	ldr	r3, [sp, #8]
   10a40:	e9c8 3b00 	strd	r3, fp, [r8]
   10a44:	4630      	mov	r0, r6
   10a46:	b00b      	add	sp, #44	; 0x2c
   10a48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a4c:	2800      	cmp	r0, #0
   10a4e:	dd0e      	ble.n	10a6e <_wcsnrtombs_l+0xaa>
   10a50:	9b04      	ldr	r3, [sp, #16]
   10a52:	9d01      	ldr	r5, [sp, #4]
   10a54:	4418      	add	r0, r3
   10a56:	1e5a      	subs	r2, r3, #1
   10a58:	a907      	add	r1, sp, #28
   10a5a:	f100 3eff 	add.w	lr, r0, #4294967295	; 0xffffffff
   10a5e:	f811 3b01 	ldrb.w	r3, [r1], #1
   10a62:	f802 3f01 	strb.w	r3, [r2, #1]!
   10a66:	4572      	cmp	r2, lr
   10a68:	d1f9      	bne.n	10a5e <_wcsnrtombs_l+0x9a>
   10a6a:	9501      	str	r5, [sp, #4]
   10a6c:	9004      	str	r0, [sp, #16]
   10a6e:	9b05      	ldr	r3, [sp, #20]
   10a70:	681a      	ldr	r2, [r3, #0]
   10a72:	3204      	adds	r2, #4
   10a74:	601a      	str	r2, [r3, #0]
   10a76:	9b01      	ldr	r3, [sp, #4]
   10a78:	681a      	ldr	r2, [r3, #0]
   10a7a:	2a00      	cmp	r2, #0
   10a7c:	d1c4      	bne.n	10a08 <_wcsnrtombs_l+0x44>
   10a7e:	9b03      	ldr	r3, [sp, #12]
   10a80:	b10b      	cbz	r3, 10a86 <_wcsnrtombs_l+0xc2>
   10a82:	9b05      	ldr	r3, [sp, #20]
   10a84:	601a      	str	r2, [r3, #0]
   10a86:	f10c 36ff 	add.w	r6, ip, #4294967295	; 0xffffffff
   10a8a:	2200      	movs	r2, #0
   10a8c:	4630      	mov	r0, r6
   10a8e:	f8c8 2000 	str.w	r2, [r8]
   10a92:	b00b      	add	sp, #44	; 0x2c
   10a94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a98:	9b03      	ldr	r3, [sp, #12]
   10a9a:	f500 7886 	add.w	r8, r0, #268	; 0x10c
   10a9e:	2b00      	cmp	r3, #0
   10aa0:	d1a0      	bne.n	109e4 <_wcsnrtombs_l+0x20>
   10aa2:	9b05      	ldr	r3, [sp, #20]
   10aa4:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   10aa8:	681d      	ldr	r5, [r3, #0]
   10aaa:	e79f      	b.n	109ec <_wcsnrtombs_l+0x28>
   10aac:	4606      	mov	r6, r0
   10aae:	218a      	movs	r1, #138	; 0x8a
   10ab0:	2200      	movs	r2, #0
   10ab2:	4630      	mov	r0, r6
   10ab4:	f8c9 1000 	str.w	r1, [r9]
   10ab8:	f8c8 2000 	str.w	r2, [r8]
   10abc:	b00b      	add	sp, #44	; 0x2c
   10abe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ac2:	463e      	mov	r6, r7
   10ac4:	e7be      	b.n	10a44 <_wcsnrtombs_l+0x80>
   10ac6:	4666      	mov	r6, ip
   10ac8:	e7bc      	b.n	10a44 <_wcsnrtombs_l+0x80>
   10aca:	bf00      	nop

00010acc <_wcsnrtombs_r>:
   10acc:	b510      	push	{r4, lr}
   10ace:	b084      	sub	sp, #16
   10ad0:	4c05      	ldr	r4, [pc, #20]	; (10ae8 <_wcsnrtombs_r+0x1c>)
   10ad2:	9806      	ldr	r0, [sp, #24]
   10ad4:	9000      	str	r0, [sp, #0]
   10ad6:	9807      	ldr	r0, [sp, #28]
   10ad8:	9001      	str	r0, [sp, #4]
   10ada:	4804      	ldr	r0, [pc, #16]	; (10aec <_wcsnrtombs_r+0x20>)
   10adc:	6800      	ldr	r0, [r0, #0]
   10ade:	9402      	str	r4, [sp, #8]
   10ae0:	f7ff ff70 	bl	109c4 <_wcsnrtombs_l>
   10ae4:	b004      	add	sp, #16
   10ae6:	bd10      	pop	{r4, pc}
   10ae8:	20002c2c 	.word	0x20002c2c
   10aec:	200031b4 	.word	0x200031b4

00010af0 <_lseek_r>:
   10af0:	b538      	push	{r3, r4, r5, lr}
   10af2:	460c      	mov	r4, r1
   10af4:	4d08      	ldr	r5, [pc, #32]	; (10b18 <_lseek_r+0x28>)
   10af6:	4684      	mov	ip, r0
   10af8:	4611      	mov	r1, r2
   10afa:	4620      	mov	r0, r4
   10afc:	461a      	mov	r2, r3
   10afe:	2300      	movs	r3, #0
   10b00:	602b      	str	r3, [r5, #0]
   10b02:	4664      	mov	r4, ip
   10b04:	f7ef ff5a 	bl	9bc <_lseek>
   10b08:	1c43      	adds	r3, r0, #1
   10b0a:	d000      	beq.n	10b0e <_lseek_r+0x1e>
   10b0c:	bd38      	pop	{r3, r4, r5, pc}
   10b0e:	682b      	ldr	r3, [r5, #0]
   10b10:	2b00      	cmp	r3, #0
   10b12:	d0fb      	beq.n	10b0c <_lseek_r+0x1c>
   10b14:	6023      	str	r3, [r4, #0]
   10b16:	bd38      	pop	{r3, r4, r5, pc}
   10b18:	20003c04 	.word	0x20003c04

00010b1c <_read_r>:
   10b1c:	b538      	push	{r3, r4, r5, lr}
   10b1e:	460c      	mov	r4, r1
   10b20:	4d08      	ldr	r5, [pc, #32]	; (10b44 <_read_r+0x28>)
   10b22:	4684      	mov	ip, r0
   10b24:	4611      	mov	r1, r2
   10b26:	4620      	mov	r0, r4
   10b28:	461a      	mov	r2, r3
   10b2a:	2300      	movs	r3, #0
   10b2c:	602b      	str	r3, [r5, #0]
   10b2e:	4664      	mov	r4, ip
   10b30:	f7ef ff36 	bl	9a0 <_read>
   10b34:	1c43      	adds	r3, r0, #1
   10b36:	d000      	beq.n	10b3a <_read_r+0x1e>
   10b38:	bd38      	pop	{r3, r4, r5, pc}
   10b3a:	682b      	ldr	r3, [r5, #0]
   10b3c:	2b00      	cmp	r3, #0
   10b3e:	d0fb      	beq.n	10b38 <_read_r+0x1c>
   10b40:	6023      	str	r3, [r4, #0]
   10b42:	bd38      	pop	{r3, r4, r5, pc}
   10b44:	20003c04 	.word	0x20003c04

00010b48 <__fputwc>:
   10b48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   10b4c:	b082      	sub	sp, #8
   10b4e:	4682      	mov	sl, r0
   10b50:	4688      	mov	r8, r1
   10b52:	4614      	mov	r4, r2
   10b54:	f7fc f8f4 	bl	cd40 <__locale_mb_cur_max>
   10b58:	2801      	cmp	r0, #1
   10b5a:	d103      	bne.n	10b64 <__fputwc+0x1c>
   10b5c:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
   10b60:	2bfe      	cmp	r3, #254	; 0xfe
   10b62:	d936      	bls.n	10bd2 <__fputwc+0x8a>
   10b64:	f10d 0904 	add.w	r9, sp, #4
   10b68:	4642      	mov	r2, r8
   10b6a:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   10b6e:	4649      	mov	r1, r9
   10b70:	4650      	mov	r0, sl
   10b72:	f7fc f893 	bl	cc9c <_wcrtomb_r>
   10b76:	1c42      	adds	r2, r0, #1
   10b78:	4606      	mov	r6, r0
   10b7a:	d032      	beq.n	10be2 <__fputwc+0x9a>
   10b7c:	b320      	cbz	r0, 10bc8 <__fputwc+0x80>
   10b7e:	f89d c004 	ldrb.w	ip, [sp, #4]
   10b82:	2500      	movs	r5, #0
   10b84:	e009      	b.n	10b9a <__fputwc+0x52>
   10b86:	6823      	ldr	r3, [r4, #0]
   10b88:	1c5a      	adds	r2, r3, #1
   10b8a:	6022      	str	r2, [r4, #0]
   10b8c:	f883 c000 	strb.w	ip, [r3]
   10b90:	3501      	adds	r5, #1
   10b92:	42b5      	cmp	r5, r6
   10b94:	d218      	bcs.n	10bc8 <__fputwc+0x80>
   10b96:	f819 cf01 	ldrb.w	ip, [r9, #1]!
   10b9a:	68a3      	ldr	r3, [r4, #8]
   10b9c:	3b01      	subs	r3, #1
   10b9e:	2b00      	cmp	r3, #0
   10ba0:	60a3      	str	r3, [r4, #8]
   10ba2:	daf0      	bge.n	10b86 <__fputwc+0x3e>
   10ba4:	69a7      	ldr	r7, [r4, #24]
   10ba6:	42bb      	cmp	r3, r7
   10ba8:	4661      	mov	r1, ip
   10baa:	4622      	mov	r2, r4
   10bac:	4650      	mov	r0, sl
   10bae:	db02      	blt.n	10bb6 <__fputwc+0x6e>
   10bb0:	f1bc 0f0a 	cmp.w	ip, #10
   10bb4:	d1e7      	bne.n	10b86 <__fputwc+0x3e>
   10bb6:	f7ff fdef 	bl	10798 <__swbuf_r>
   10bba:	1c43      	adds	r3, r0, #1
   10bbc:	d1e8      	bne.n	10b90 <__fputwc+0x48>
   10bbe:	4606      	mov	r6, r0
   10bc0:	4630      	mov	r0, r6
   10bc2:	b002      	add	sp, #8
   10bc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10bc8:	4646      	mov	r6, r8
   10bca:	4630      	mov	r0, r6
   10bcc:	b002      	add	sp, #8
   10bce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10bd2:	fa5f fc88 	uxtb.w	ip, r8
   10bd6:	f88d c004 	strb.w	ip, [sp, #4]
   10bda:	4606      	mov	r6, r0
   10bdc:	f10d 0904 	add.w	r9, sp, #4
   10be0:	e7cf      	b.n	10b82 <__fputwc+0x3a>
   10be2:	89a3      	ldrh	r3, [r4, #12]
   10be4:	4630      	mov	r0, r6
   10be6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   10bea:	81a3      	strh	r3, [r4, #12]
   10bec:	b002      	add	sp, #8
   10bee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10bf2:	bf00      	nop

00010bf4 <_fputwc_r>:
   10bf4:	b530      	push	{r4, r5, lr}
   10bf6:	6e53      	ldr	r3, [r2, #100]	; 0x64
   10bf8:	f013 0f01 	tst.w	r3, #1
   10bfc:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   10c00:	4614      	mov	r4, r2
   10c02:	b083      	sub	sp, #12
   10c04:	4605      	mov	r5, r0
   10c06:	b29a      	uxth	r2, r3
   10c08:	d101      	bne.n	10c0e <_fputwc_r+0x1a>
   10c0a:	0598      	lsls	r0, r3, #22
   10c0c:	d51c      	bpl.n	10c48 <_fputwc_r+0x54>
   10c0e:	0490      	lsls	r0, r2, #18
   10c10:	d406      	bmi.n	10c20 <_fputwc_r+0x2c>
   10c12:	6e62      	ldr	r2, [r4, #100]	; 0x64
   10c14:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   10c18:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   10c1c:	81a3      	strh	r3, [r4, #12]
   10c1e:	6662      	str	r2, [r4, #100]	; 0x64
   10c20:	4622      	mov	r2, r4
   10c22:	4628      	mov	r0, r5
   10c24:	f7ff ff90 	bl	10b48 <__fputwc>
   10c28:	6e63      	ldr	r3, [r4, #100]	; 0x64
   10c2a:	07da      	lsls	r2, r3, #31
   10c2c:	4605      	mov	r5, r0
   10c2e:	d402      	bmi.n	10c36 <_fputwc_r+0x42>
   10c30:	89a3      	ldrh	r3, [r4, #12]
   10c32:	059b      	lsls	r3, r3, #22
   10c34:	d502      	bpl.n	10c3c <_fputwc_r+0x48>
   10c36:	4628      	mov	r0, r5
   10c38:	b003      	add	sp, #12
   10c3a:	bd30      	pop	{r4, r5, pc}
   10c3c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   10c3e:	f7fc f87d 	bl	cd3c <__retarget_lock_release_recursive>
   10c42:	4628      	mov	r0, r5
   10c44:	b003      	add	sp, #12
   10c46:	bd30      	pop	{r4, r5, pc}
   10c48:	6da0      	ldr	r0, [r4, #88]	; 0x58
   10c4a:	9101      	str	r1, [sp, #4]
   10c4c:	f7fc f874 	bl	cd38 <__retarget_lock_acquire_recursive>
   10c50:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   10c54:	9901      	ldr	r1, [sp, #4]
   10c56:	b29a      	uxth	r2, r3
   10c58:	e7d9      	b.n	10c0e <_fputwc_r+0x1a>
   10c5a:	bf00      	nop
   10c5c:	0000      	movs	r0, r0
	...

00010c60 <___reboot_Teensyduino__veneer>:
   10c60:	f85f f000 	ldr.w	pc, [pc]	; 10c64 <___reboot_Teensyduino__veneer+0x4>
   10c64:	60001d8d 	.word	0x60001d8d

00010c68 <___init_veneer>:
   10c68:	f85f f000 	ldr.w	pc, [pc]	; 10c6c <___init_veneer+0x4>
   10c6c:	60001e35 	.word	0x60001e35

Disassembly of section .fini:

00010c70 <_fini>:
   10c70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   10c72:	bf00      	nop
