
/home/happik/.cache/arduino/sketches/6FEA8C1578FFDE30A500D7DB9735B8EA/baseline.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60001e8c l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00010c70 l    d  .fini	00000000 .fini
00010c74 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20002ac0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
600159a0 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000012 memory_copy
60001414 l     F .text.code	0000001c memory_clear.constprop.0
60001430 l     F .text.code	0000021c ResetHandler2
00000000 l    df *ABS*	00000000 tempmon.c
20003074 l     O .bss	00000004 s_hotCount
20003078 l     O .bss	00000004 s_hotTemp
2000307c l     O .bss	00000004 s_hot_ROOM
20003080 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
00000a14 l     F .text.itcm	00000088 schedule_transfer
00000a9c l     F .text.itcm	00000036 run_callbacks
00000ad4 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
20002ff4 l     O .bss	00000008 endpoint0_buffer
20002ffc l     O .bss	00000004 endpoint0_notify_mask
20002c80 l     O .bss	00000008 endpoint0_setupdata
20003000 l     O .bss	00000004 endpointN_notify_mask
2000303c l     O .bss	00000008 reply_buffer
200030b6 l     O .bss	00000001 sof_usage
200030bd l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
200030b2 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
20003018 l     O .bss	00000000 object.0
60001e80 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 baseline.ino.cpp
0000032c l     F .text.itcm	00000020 _GLOBAL__sub_I_raw_bits
200003b0 l     O .data	0000017c seed_bits
00000000 l    df *ABS*	00000000 eh_alloc.o
0000222c l     F .text.itcm	00000088 (anonymous namespace)::pool::free(void*) [clone .constprop.0]
000022b4 l     F .text.itcm	00000058 (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0000235c l     F .text.itcm	00000028 _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00000000 l    df *ABS*	00000000 usb_desc.c
200026f8 l     O .data	00000012 device_descriptor
2000270c l     O .data	00000028 microsoft_os_compatible_id_desc
20002734 l     O .data	00000012 microsoft_os_string_desc
60001f88 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 Print.cpp
00000354 l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
00001380 l     F .text.itcm	00000060 rx_queue_transfer
20200080 l     O .bss.dma	00001000 rx_buffer
000013e0 l     F .text.itcm	000000b4 rx_event
00001494 l     F .text.itcm	00000090 usb_serial_flush_callback
20201080 l     O .bss.dma	00002000 txbuffer
00001524 l     F .text.itcm	000001b8 usb_serial_write.part.0
20003044 l     O .bss	00000004 rx_available
20003048 l     O .bss	00000010 rx_count
200030b4 l     O .bss	00000001 rx_head
20003058 l     O .bss	00000010 rx_index
20003068 l     O .bss	00000009 rx_list
200030a8 l     O .bss	00000002 rx_packet_size
200030b5 l     O .bss	00000001 rx_tail
20002b00 l     O .bss	00000100 rx_transfer
200030b7 l     O .bss	00000001 transmit_previous_timeout
200030aa l     O .bss	00000002 tx_available
200030b8 l     O .bss	00000001 tx_head
200030b9 l     O .bss	00000001 tx_noautoflush
200030ac l     O .bss	00000002 tx_packet_size
20002c00 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
200030b0 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 functexcept.o
00000000 l    df *ABS*	00000000 bad_alloc.o
00000000 l    df *ABS*	00000000 eh_arm.o
00000000 l    df *ABS*	00000000 eh_exception.o
00000000 l    df *ABS*	00000000 eh_globals.o
00000000 l    df *ABS*	00000000 eh_personality.o
00002544 l     F .text.itcm	000000c0 read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
00002604 l     F .text.itcm	00000048 base_of_encoded_value(unsigned char, _Unwind_Context*)
0000264c l     F .text.itcm	00000090 parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00000000 l    df *ABS*	00000000 eh_terminate.o
00000000 l    df *ABS*	00000000 eh_throw.o
00002bd0 l     F .text.itcm	0000004c __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
00000000 l    df *ABS*	00000000 si_class_type_info.o
00000000 l    df *ABS*	00000000 tinfo.o
00000000 l    df *ABS*	00000000 vterminate.o
00000000 l    df *ABS*	00000000 stdexcept.o
00000000 l    df *ABS*	00000000 cow-stdexcept.o
00000000 l    df *ABS*	00000000 cow-string-inst.o
00000000 l    df *ABS*	00000000 class_type_info.o
00000000 l    df *ABS*	00000000 cp-demangle.o
00003290 l     F .text.itcm	000000f0 d_make_comp
00003380 l     F .text.itcm	00000074 d_number
000033f4 l     F .text.itcm	00000046 d_call_offset
0000343c l     F .text.itcm	00000036 d_ref_qualifier
00003474 l     F .text.itcm	000000d4 d_count_templates_scopes
00003548 l     F .text.itcm	0000001c d_pack_length
00003564 l     F .text.itcm	00000048 d_discriminator
000035ac l     F .text.itcm	0000001c d_index_template_argument.part.0
000035c8 l     F .text.itcm	00000078 d_growable_string_callback_adapter
00003640 l     F .text.itcm	00000030 next_is_type_qual.isra.0
00003670 l     F .text.itcm	00000044 d_append_char
000036b4 l     F .text.itcm	00000036 d_lookup_template_argument
000036ec l     F .text.itcm	00000094 d_find_pack
00003780 l     F .text.itcm	00000066 d_append_string
000037e8 l     F .text.itcm	0000005e d_template_param
00003848 l     F .text.itcm	00000078 d_append_num
000038c0 l     F .text.itcm	000000e0 d_source_name
000039a0 l     F .text.itcm	00000194 d_substitution
00003b34 l     F .text.itcm	0000086e d_type
00005188 l     F .text.itcm	00000152 d_cv_qualifiers
0000446c l     F .text.itcm	0000006a d_function_type
00005750 l     F .text.itcm	0000029c d_name
00004a98 l     F .text.itcm	00000064 d_template_args_1
00004c28 l     F .text.itcm	000004ec d_expression_1
000043a4 l     F .text.itcm	00000080 d_parmlist
00004424 l     F .text.itcm	00000048 d_bare_function_type
000044d8 l     F .text.itcm	00000108 d_operator_name
000045e0 l     F .text.itcm	00000340 d_unqualified_name
00004920 l     F .text.itcm	00000120 d_expr_primary
000059ec l     F .text.itcm	000000f6 d_encoding.part.0
000052dc l     F .text.itcm	00000474 d_special_name
00004a40 l     F .text.itcm	00000058 d_template_arg
00004afc l     F .text.itcm	0000012a d_prefix
00005114 l     F .text.itcm	00000072 d_exprlist
00005ae4 l     F .text.itcm	000020f4 d_print_comp_inner
00007bd8 l     F .text.itcm	0000005a d_print_comp
0000826c l     F .text.itcm	000001d8 d_print_function_type
00008d28 l     F .text.itcm	00000254 d_maybe_print_fold_expression
00008f7c l     F .text.itcm	000001e4 d_maybe_print_designated_init
00008c4c l     F .text.itcm	000000da d_print_subexpr
00008854 l     F .text.itcm	00000076 d_print_expr_op
00007c34 l     F .text.itcm	00000638 d_print_mod
0000868c l     F .text.itcm	000001c8 d_print_array_type
00008444 l     F .text.itcm	00000248 d_print_mod_list
000088cc l     F .text.itcm	0000037e d_demangle_callback.constprop.0
00000000 l    df *ABS*	00000000 eh_call.o
00009224 l     F .text.itcm	0000003a __cxxabiv1::__is_gxx_exception_class(char*)
00000000 l    df *ABS*	00000000 eh_catch.o
00000000 l    df *ABS*	00000000 eh_type.o
00000000 l    df *ABS*	00000000 unwind-arm.o
00009488 l     F .text.itcm	00000012 selfrel_offset31
0000949c l     F .text.itcm	0000005c search_EIT_table
000094f8 l     F .text.itcm	00000028 __gnu_unwind_get_pr_addr
00009520 l     F .text.itcm	00000098 get_eit_entry
000095b8 l     F .text.itcm	00000058 restore_non_core_regs
00009610 l     F .text.itcm	0000000a _Unwind_decode_typeinfo_ptr.constprop.0
0000961c l     F .text.itcm	00000002 _Unwind_DebugHook
00009620 l     F .text.itcm	0000003a unwind_phase2
0000965c l     F .text.itcm	000000ca unwind_phase2_forced
00009838 l     F .text.itcm	0000001a _Unwind_GetGR
00009884 l     F .text.itcm	00000018 _Unwind_SetGR
00009920 l     F .text.itcm	000002a8 __gnu_unwind_pr_common
00000000 l    df *ABS*	00000000 libunwind.o
00000000 l    df *ABS*	00000000 pr-support.o
0000a03c l     F .text.itcm	00000038 next_unwind_byte
0000a074 l     F .text.itcm	0000001a _Unwind_GetGR.constprop.0
0000a090 l     F .text.itcm	00000004 unwind_UCB_from_context
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-fputc.o
00000000 l    df *ABS*	00000000 libc_a-fputs.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-fwrite.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-putc.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
0000da70 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
0000ea2c l     F .text.itcm	00000018 stdio_exit_handler
0000ea44 l     F .text.itcm	00000040 cleanup_stdio
0000ea84 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
0000f714 l     F .text.itcm	00000076 __sprint_r.part.0
00010718 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 eh_term_handler.o
00000000 l    df *ABS*	00000000 eh_unex_handler.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
60001e40 l     F .text.code	00000008 __delay_veneer
60001e48 l     F .text.code	00000008 __pwm_init_veneer
60001e50 l     F .text.code	00000008 __memset_veneer
60001e58 l     F .text.code	00000008 ____libc_init_array_veneer
60001e60 l     F .text.code	00000008 __set_arm_clock_veneer
60001e68 l     F .text.code	00000008 __main_veneer
60001e70 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60001e78 l     F .text.code	00000008 __sm_set_pool_veneer
00010c60 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00010c68 l     F .text.itcm	00000008 ___init_veneer
0000233c g     F .text.itcm	00000020 __cxa_free_exception
00009ff4 g     F .text.itcm	00000022 .hidden ___Unwind_ForcedUnwind
00009728 g     F .text.itcm	00000066 .hidden __gnu_Unwind_RaiseException
00002e34 g     F .text.itcm	00000004 std::type_info::__is_function_p() const
00001904 g     F .text.itcm	00000018 usb_serial_available
00002b9c g     F .text.itcm	00000014 std::unexpected()
0000f488 g     F .text.itcm	00000024 _isatty_r
6000167c g     F .text.code	00000002 startup_default_late_hook
00010af0 g     F .text.itcm	0000002c _lseek_r
00001ad4  w    F .text.itcm	000000d8 yield
200030a4 g     O .bss	00000004 usb_timer1_callback
00009160 g     F .text.itcm	000000c4 __cxa_demangle
00003104 g     F .text.itcm	00000014 std::length_error::length_error(char const*)
00002cac g     F .text.itcm	0000006e __cxa_rethrow
60001ea4 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
60001794 g     F .text.code	00000384 configure_external_ram
000021fc g     F .text.itcm	00000014 std::bad_alloc::~bad_alloc()
20002e78 g     O .bss	00000001 __lock___atexit_recursive_mutex
00002384 g     F .text.itcm	00000000 __cxa_end_cleanup
0000cc84 g     F .text.itcm	0000004c _wcrtomb_r
0000f538 g     F .text.itcm	00000020 __sseek
0000eb58 g     F .text.itcm	0000003c __sinit
00010798 g     F .text.itcm	000000b0 __swbuf_r
00002d1c g     F .text.itcm	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
20000714 g     O .data	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
0000d244 g     F .text.itcm	0000000c __malloc_unlock
200030af g     O .bss	00000001 HardwareSerialIMXRT::s_count_serials_with_serial_events
60001de0 g     F .text.code	00000054 analog_init
20002144 g     O .data	00000004 F_CPU_ACTUAL
0000ca9c g     F .text.itcm	000000f8 memmove
00009eb0 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP
00002514 g     F .text.itcm	00000002 std::exception::~exception()
00009fd0 g     F .text.itcm	00000022 .hidden _Unwind_Resume_or_Rethrow
0000d250 g     F .text.itcm	0000004c _Balloc
00010f4c g       .ARM.exidx	00000000 __exidx_end
200030ae g     O .bss	00000001 EventResponder::runningFromYield
000009b4 g     F .text.itcm	00000060 tempmonGetTemp
00009bc8 g     F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr0
20002160 g     O .data	00000004 __atexit_recursive_mutex
2000084c g     O .data	00000014 vtable for std::bad_exception
0000a96c g     F .text.itcm	0000000c __errno
60001000 g     O .text.headers	00000020 ImageVectorTable
20002cac g     O .bss	00000004 EventResponder::firstInterrupt
00001304 g     F .text.itcm	00000004 usb_transfer_status
000020e4 g     F .text.itcm	00000084 sm_set_pool
20002cb4 g     O .bss	00000020 HardwareSerialIMXRT::s_serials_with_serial_events
20002ff0 g     O .bss	00000004 __stdio_exit_handler
0000a34c g     F .text.itcm	0000000a .hidden _Unwind_GetRegionStart
00009fd0 g     F .text.itcm	00000022 .hidden ___Unwind_Resume_or_Rethrow
00001378  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
0000f45c g     F .text.itcm	0000002c _fstat_r
200015bc g     O .data	00000370 digital_pin_to_info_PGM
20003004 g     O .bss	00000004 errno
00010f48 g       .text.itcm	00000000 _etext
20002ac0 g       .bss	00000000 _sbss
0000a018 g     F .text.itcm	00000022 .hidden _Unwind_Backtrace
00000580 g     F .text.itcm	00000024 digitalRead
00002440 g     F .text.itcm	00000064 __cxa_begin_cleanup
60001f94 g       *ABS*	00000000 _stextload
00000254 g     F .text.itcm	000000d8 loop
00001f04 g     F .text.itcm	0000007a flexpwm_init
00009e90 g     F .text.itcm	00000018 .hidden __restore_core_regs
00009ed0 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP_D_16_to_31
60001680 g     F .text.code	00000004 startup_debug_reset
000011c8 g     F .text.itcm	00000064 usb_config_rx
00009280 g     F .text.itcm	000000e4 __cxa_call_unexpected
00002fb4 g     F .text.itcm	00000040 std::length_error::~length_error()
20002ca8 g     O .bss	00000004 EventResponder::lastInterrupt
00000624 g     F .text.itcm	00000134 memcpy
20002ac0 g     O .data	00000000 .hidden __TMC_END__
00009854 g     F .text.itcm	0000002e .hidden _Unwind_VRS_Set
000031c8 g     F .text.itcm	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0000a978 g     F .text.itcm	00001b44 _svfprintf_r
2000308c g     O .bss	00000004 systick_millis_count
000031d4 g     F .text.itcm	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
200030bb g     O .bss	00000001 usb_configuration
00002098 g     F .text.itcm	0000004c sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
60001ea4  w    O .text.progmem	00000018 usb_string_manufacturer_name
0000c4bc g     F .text.itcm	00000010 malloc
00000994  w    F .text.itcm	0000000a _fstat
0000cb94 g     F .text.itcm	00000040 __assert_func
200002a8 g     O .data	000000c8 __mprec_tens
60001ca4 g     F .text.code	000000e8 usb_init
20002eb4 g     O .bss	00000004 __malloc_top_pad
20003090 g     O .bss	00000004 systick_safe_read
00003084 g     F .text.itcm	00000080 std::logic_error::logic_error(char const*)
0000989c g     F .text.itcm	00000084 .hidden __gnu_Unwind_Backtrace
aaaaaabf g       *ABS*	00000000 _flexram_bank_config
20002168 g     O .data	00000000 .hidden __dso_handle
0000cd34 g     F .text.itcm	00000008 _localeconv_r
000024a4 g     F .text.itcm	00000070 __gnu_end_cleanup
0000a5ac g     F .text.itcm	000002f4 __sfvwrite_r
0000d3f4 g     F .text.itcm	0000005c __i2b
00003264 g     F .text.itcm	0000002a __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
20000000 g       .data	00000000 _sdata
60001f24 g     O .text.progmem	00000062 usb_config_descriptor_480
0000f57c g     F .text.itcm	00000024 _sbrk_r
60001674 g     F .text.code	00000002 startup_default_early_hook
6000164c g     F .text.code	00000028 ResetHandler
0000198c g     F .text.itcm	00000020 usb_serial_getchar
00009ec0 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP_D
00002174 g     F .text.itcm	00000020 std::__throw_bad_alloc()
20003094 g     O .bss	00000008 usb_cdc_line_coding
0000052c g     F .text.itcm	00000054 digitalWrite
20002cb0 g     O .bss	00000004 EventResponder::lastYield
00010b1c g     F .text.itcm	0000002c _read_r
00009be0 g     F .text.itcm	000002ae .hidden _Unwind_VRS_Pop
000108fc g     F .text.itcm	000000c6 _fclose_r
00009bd8  w    F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr2
20000690 g     O .data	0000000c typeinfo for std::bad_alloc
20003008 g     O .bss	00000010 extmem_smalloc_pool
20002eac g     O .bss	00000004 __malloc_max_sbrked_mem
0000a018 g     F .text.itcm	00000022 .hidden ___Unwind_Backtrace
000005a4 g     F .text.itcm	00000070 pinMode
00003104 g     F .text.itcm	00000014 std::length_error::length_error(char const*)
200007f8 g     O .data	0000002c vtable for __cxxabiv1::__si_class_type_info
60015c00 g     O .text.csf	00000c00 hab_csf
20280000 g       .text.csf	00000000 _heap_end
00010c74 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
000009a0  w    F .text.itcm	00000004 _isatty
20000824 g     O .data	00000014 vtable for std::logic_error
00003248 g     F .text.itcm	0000001a __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
20002ca4 g     O .bss	00000004 EventResponder::firstYield
0000075c g     F .text.itcm	00000004 operator delete(void*)
0000303c g     F .text.itcm	00000048 std::length_error::~length_error()
0000edd8 g     F .text.itcm	000003d8 _realloc_r
0000ccd0 g     F .text.itcm	00000048 __libc_init_array
00009f88 g     F .text.itcm	00000022 .hidden ___Unwind_RaiseException
00010bf4 g     F .text.itcm	00000066 _fputwc_r
000021c4 g     F .text.itcm	00000030 std::__throw_length_error(char const*)
20000280 g     O .data	00000028 __mprec_bigtens
000009ac  w    F .text.itcm	00000004 abort
00009fac g     F .text.itcm	00000022 .hidden ___Unwind_Resume
00001360  w    F .text.itcm	00000004 usb_serial_class::clear()
00000954  w    F .text.itcm	00000034 _sbrk
60012ee0 g       *ABS*	00000000 _sdataload
0000d75c g     F .text.itcm	00000042 __mcmp
20002164 g     O .data	00000004 __brkval
000093e0 g     F .text.itcm	0000008a __cxa_end_catch
200030ba g     O .bss	00000001 usb_cdc_line_rtsdtr
00002518 g     F .text.itcm	00000002 std::bad_exception::~bad_exception()
60001e34 g     F .text.code	00000000 _init
000016dc g     F .text.itcm	00000002 usb_serial_reset
00002b80 g     F .text.itcm	00000014 std::terminate()
00009ed8 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_WMMXD
60001ec0 g     O .text.progmem	00000062 usb_config_descriptor_12
00002ff4 g     F .text.itcm	00000048 std::logic_error::~logic_error()
200030e0 g       .bss	00000000 _ebss
200006cc g     O .data	00000022 typeinfo name for __cxxabiv1::__class_type_info
0000d354 g     F .text.itcm	00000040 __hi0bits
000026dc g     F .text.itcm	00000494 __gxx_personality_v0
2000069c g     O .data	00000008 typeinfo for std::exception
20203080 g       .bss.dma	00000000 _heap_start
20002e7c g     O .bss	00000001 __lock___malloc_recursive_mutex
00002e30 g     F .text.itcm	00000002 std::type_info::~type_info()
20002eb8 g     O .bss	00000138 __sf
0000d1c0 g     F .text.itcm	00000076 _putc_r
00000003 g       *ABS*	00000000 _itcm_block_count
20002ae0 g     O .bss	00000020 endpoint0_transfer_data
00000760 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
00001f80 g     F .text.itcm	000000f4 pwm_init
60016800 g       .text.csf	00000000 __text_csf_end
60001b18 g     F .text.code	0000005c usb_pll_start
0000d5ac g     F .text.itcm	000000c0 __pow5mult
00009ea8 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP
00002c1c g     F .text.itcm	00000058 __cxa_init_primary_exception
00002bb0 g     F .text.itcm	00000010 std::get_terminate()
20002ac0 g     O .bss	00000020 endpoint0_transfer_ack
2000309c g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
000012c0 g     F .text.itcm	00000028 usb_transmit
00001bf4 g     F .text.itcm	00000020 systick_isr
0000cd24 g     F .text.itcm	00000002 __retarget_lock_release_recursive
00009fac g     F .text.itcm	00000022 .hidden _Unwind_Resume
20002148 g     O .data	00000010 Serial
000097fc g     F .text.itcm	0000000c .hidden _Unwind_DeleteException
000097f8 g     F .text.itcm	00000002 .hidden _Unwind_Complete
0000034c  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
60001674  w    F .text.code	00000002 startup_early_hook
00003204 g     F .text.itcm	00000042 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
20002cd4  w    O .bss	00000010 std::string::_Rep::_S_empty_rep_storage
000018c0 g     F .text.itcm	00000044 usb_serial_peekchar
00002f70 g     F .text.itcm	00000004 std::runtime_error::what() const
00003194 g     F .text.itcm	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0000eb94 g     F .text.itcm	0000000c __sfp_lock_acquire
20000760 g     O .data	00000012 typeinfo name for std::bad_exception
0000ebb0 g     F .text.itcm	00000000 memchr
20000838 g     O .data	00000014 vtable for std::length_error
00001c14 g     F .text.itcm	000002f0 set_arm_clock
20003088 g     O .bss	00000004 systick_cycle_count
20002748 g     O .data	00000016 usb_string_serial_number_default
0000f250 g     F .text.itcm	0000020c _free_r
0000cd28 g     F .text.itcm	0000000c __locale_mb_cur_max
0000da58 g     F .text.itcm	00000016 _wcsrtombs_r
20002ce8 g     O .bss	00000190 __atexit0
00001370  w    F .text.itcm	00000004 usb_serial_class::flush()
00002fb4 g     F .text.itcm	00000040 std::length_error::~length_error()
200026e0 g     O .data	00000004 __malloc_sbrk_base
00001368  w    F .text.itcm	00000004 usb_serial_class::read()
2000066c g     O .data	0000000c typeinfo for std::logic_error
20000794 g     O .data	0000000d typeinfo name for std::type_info
000021f4 g     F .text.itcm	00000008 std::bad_alloc::what() const
000009a4  w    F .text.itcm	00000006 _lseek
0000d66c g     F .text.itcm	000000f0 __lshift
00001290 g     F .text.itcm	00000030 usb_prepare_transfer
20000860 g     O .data	00000014 vtable for std::bad_alloc
000007c8 g     F .text.itcm	0000018c unused_interrupt_vector
00000180  w    F .text.itcm	000000d4 void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)
0000f614 g     F .text.itcm	00000100 __ssprint_r
200030a0 g     O .bss	00000004 usb_timer0_callback
60001b74 g     F .text.code	00000130 tempmon_init
0000a094 g     F .text.itcm	0000028a .hidden __gnu_unwind_execute
00010848 g     F .text.itcm	00000088 __register_exitproc
20000774 g     O .data	0000000d typeinfo name for std::bad_alloc
0000251c g     F .text.itcm	00000008 transaction clone for std::bad_exception::what() const
0000a378 g     F .text.itcm	0000008a strncmp
00002d88 g     F .text.itcm	0000007a __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00009eb8 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP_D
0000191c g     F .text.itcm	00000070 usb_serial_flush_input
0000d450 g     F .text.itcm	0000015c __multiply
000019ac g     F .text.itcm	0000002c usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
0000a404 g     F .text.itcm	00000064 strncpy
20002e84 g     O .bss	00000028 __malloc_current_mallinfo
0000d8f4 g     F .text.itcm	000000d4 __d2b
00002e30 g     F .text.itcm	00000002 std::type_info::~type_info()
00002390 g     F .text.itcm	000000b0 __cxa_type_match
60001d8c g     F .text.code	00000054 _reboot_Teensyduino_
00002e04 g     F .text.itcm	0000002a __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
60001678 g     F .text.code	00000002 startup_default_middle_hook
0000da40 g     F .text.itcm	00000018 realloc
000097a0 g     F .text.itcm	00000044 .hidden __gnu_Unwind_Resume
00000b98 g     F .text.itcm	00000630 usb_isr
0000cc78 g     F .text.itcm	0000000c __cxa_atexit
20000658 g     O .data	00000008 typeinfo for __cxxabiv1::__foreign_exception
0000e884 g     F .text.itcm	00000024 _close_r
00009ec8 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP_D_16_to_31
0000ca3c g     F .text.itcm	00000060 memcmp
200007a4  w    O .data	00000028 vtable for usb_serial_class
0000cd1c g     F .text.itcm	00000002 __retarget_lock_close_recursive
0000a8a0 g     F .text.itcm	000000aa _fwrite_r
00002210 g     F .text.itcm	0000001c std::bad_alloc::~bad_alloc()
00002d1c g     F .text.itcm	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
20003084 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
0000d01c g     F .text.itcm	000000cc __swsetup_r
00009f88 g     F .text.itcm	00000022 .hidden _Unwind_RaiseException
00002e34 g     F .text.itcm	00000004 std::type_info::__is_pointer_p() const
200022d8 g     O .data	00000408 __malloc_av_
20002ce4 g     O .bss	00000004 __atexit
0000f4d4 g     F .text.itcm	00000022 __sread
00001a40 g     F .text.itcm	00000094 usb_serial_flush_output
0000d238 g     F .text.itcm	0000000c __malloc_lock
00002194 g     F .text.itcm	00000030 std::__throw_logic_error(char const*)
200007cc g     O .data	0000002c vtable for __cxxabiv1::__class_type_info
20002800 g     O .data	000002c0 _VectorsRam
00002c74 g     F .text.itcm	00000038 __cxa_throw
0000e9d8 g     F .text.itcm	00000054 _fflush_r
0000d9c8 g     F .text.itcm	00000078 _calloc_r
20000678 g     O .data	0000000c typeinfo for std::length_error
200030be g     O .bss	00000001 yield_active_check_flags
0000cd20 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
200030bc g     O .bss	00000001 usb_high_speed
0000cbd4 g     F .text.itcm	000000a4 memset
0000007c g     F .text.itcm	0000007c toeplitz_extraction(std::vector<int, std::allocator<int> > const&)
00000614 g     F .text.itcm	00000010 main
20002eb0 g     O .bss	00000004 __malloc_max_total_mem
0000cd18 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200000 g     O .bss.dma	00000062 usb_descriptor_buffer
00002534 g     F .text.itcm	00000008 __cxa_get_globals_fast
0000f558 g     F .text.itcm	00000008 __sclose
00001308 g     F .text.itcm	00000058 usb_init_serialnumber
60001e8c g       .text.code	00000000 __init_array_end
0000db98 g     F .text.itcm	00000cec _dtoa_r
0000c4dc g     F .text.itcm	00000560 _malloc_r
0000f560 g     F .text.itcm	0000001a __ascii_wctomb
0000251c g     F .text.itcm	00000008 std::bad_exception::what() const
2000064c g     O .data	0000000c typeinfo for __cxxabiv1::__class_type_info
000004d8 g     F .text.itcm	00000054 micros
00002518 g     F .text.itcm	00000002 std::bad_exception::~bad_exception()
0000f1b0 g     F .text.itcm	000000a0 _malloc_trim_r
00009790 g     F .text.itcm	00000010 .hidden __gnu_Unwind_ForcedUnwind
000109c4 g     F .text.itcm	00000106 _wcsnrtombs_l
60001ebc g     O .text.progmem	00000004 string0
000019d8 g     F .text.itcm	00000018 usb_serial_write
6000167c  w    F .text.code	00000002 startup_late_hook
0000136c  w    F .text.itcm	00000004 usb_serial_class::available()
0000cd48 g     F .text.itcm	000002dc strcmp
000097e4 g     F .text.itcm	00000012 .hidden __gnu_Unwind_Resume_or_Rethrow
20000000 g     O .data	00000280 endpoint_queue_head
60001e8c  w    O .text.progmem	00000016 usb_string_product_name
00000430 g     F .text.itcm	000000a8 delay
00010c70 g     F .fini	00000000 _fini
00009e90 g     F .text.itcm	00000018 .hidden restore_core_regs
00009f74 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_WMMXC
60001020 g     O .text.headers	0000000c BootData
00002d30 g     F .text.itcm	0000001c __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000a56c g     F .text.itcm	00000040 sprintf
00002f74 g     F .text.itcm	00000040 std::logic_error::~logic_error()
000003d4 g     F .text.itcm	00000016 Print::print(long)
000009b0 g     F .text.itcm	00000004 Panic_Temp_isr
2000073c g     O .data	00000010 typeinfo name for std::logic_error
00002f74 g     F .text.itcm	00000040 std::logic_error::~logic_error()
00010acc g     F .text.itcm	00000024 _wcsnrtombs_r
0000f5e8 g     F .text.itcm	0000002c _write_r
0000a372 g     F .text.itcm	00000006 .hidden _Unwind_GetTextRelBase
00009260 g     F .text.itcm	0000001e __cxa_call_terminate
200026f4 g     O .data	00000004 _impure_ptr
20000644 g     O .data	00000008 typeinfo for __cxxabiv1::__forced_unwind
0000e8a8 g     F .text.itcm	00000130 __sflush_r
0000f5a0 g     F .text.itcm	00000046 _fwalk_sglue
60001e80 g       .text.code	00000000 __preinit_array_end
00002bc0 g     F .text.itcm	00000010 std::get_unexpected()
000108d0 g     F .text.itcm	0000002a __ascii_mbtowc
00000b6c g     F .text.itcm	0000002c usb_stop_sof_interrupts
0000a468 g     F .text.itcm	00000064 fputc
000000f8 g     F .text.itcm	00000088 setup
20001f7c g     O .data	00000084 usb_descriptor_list
200006f0 g     O .data	00000024 typeinfo name for __cxxabiv1::__foreign_exception
0000a358 g     F .text.itcm	00000012 .hidden _Unwind_GetLanguageSpecificData
00009364 g     F .text.itcm	0000007c __cxa_begin_catch
000031d4 g     F .text.itcm	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
00002b94 g     F .text.itcm	00000008 __cxxabiv1::__unexpected(void (*)())
2000074c g     O .data	00000011 typeinfo name for std::length_error
00009808 g     F .text.itcm	0000002e .hidden _Unwind_VRS_Get
20068000 g       .text.csf	00000000 _estack
00002524 g     F .text.itcm	0000000e std::bad_exception::~bad_exception()
20002158 g     O .data	00000004 __cxxabiv1::__terminate_handler
000019f0 g     F .text.itcm	00000050 usb_serial_write_buffer_free
00009f60 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_WMMXC
0000230c g     F .text.itcm	0000002e __cxa_allocate_exception
0000a94c g     F .text.itcm	00000020 fwrite
200026e8 g     O .data	0000000c __sglue
000016e0 g     F .text.itcm	00000100 usb_serial_configure
20000660 g     O .data	0000000c typeinfo for __cxxabiv1::__si_class_type_info
000003ec  w    F .text.itcm	0000001c _write
0000a320 g     F .text.itcm	0000002a .hidden __gnu_unwind_frame
00009ff4 g     F .text.itcm	00000022 .hidden _Unwind_ForcedUnwind
20002ac0 g       .data	00000000 _edata
200030b3 g     O .bss	00000001 external_psram_size
00010b48 g     F .text.itcm	000000aa __fputwc
00001374  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
0000a4cc g     F .text.itcm	00000086 _fputs_r
00000764 g     F .text.itcm	00000062 ultoa
00002514 g     F .text.itcm	00000002 std::exception::~exception()
0000f4f8 g     F .text.itcm	0000003e __swrite
00000758 g     F .text.itcm	00000004 operator new(unsigned int)
00001bac g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
200026e4 g     O .data	00000004 __malloc_trim_threshold
00001364  w    F .text.itcm	00000004 usb_serial_class::peek()
0000f4ac g     F .text.itcm	00000028 fiprintf
0000f78c g     F .text.itcm	00000f8c _vfiprintf_r
00002d4c g     F .text.itcm	0000003a __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0000d7a0 g     F .text.itcm	00000154 __mdiff
00002b70 g     F .text.itcm	00000010 __cxxabiv1::__terminate(void (*)())
00009f1c g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_WMMXD
20002020 g     O .data	00000120 _impure_data
000021fc g     F .text.itcm	00000014 std::bad_alloc::~bad_alloc()
0000eba0 g     F .text.itcm	0000000c __sfp_lock_release
20000684 g     O .data	0000000c typeinfo for std::bad_exception
20000924 g     O .data	00000101 _ctype_
00000988  w    F .text.itcm	00000004 _read
60001e80 g       .text.code	00000000 __init_array_start
20002140 g     O .data	00000004 F_BUS_ACTUAL
00003118  w    F .text.itcm	00000078 std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0000253c g     F .text.itcm	00000008 __cxa_get_globals
0000d0e8 g     F .text.itcm	000000d8 __smakebuf_r
2000215c g     O .data	00000004 __cxxabiv1::__unexpected_handler
00000000 g       .text.itcm	00000000 _stext
0000ec80 g     F .text.itcm	000000dc strlen
200006a4 g     O .data	00000008 typeinfo for std::type_info
00009bd0  w    F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr1
20000784 g     O .data	0000000d typeinfo name for std::exception
60001e8c g     O .text.progmem	00000016 usb_string_product_name_default
00002f70 g     F .text.itcm	00000004 std::logic_error::what() const
0000946c g     F .text.itcm	0000001a __cxa_current_exception_type
60001678  w    F .text.code	00000002 startup_middle_hook
0000a554 g     F .text.itcm	00000018 fputs
0000a36c g     F .text.itcm	00000006 .hidden _Unwind_GetDataRelBase
60001684 g     F .text.code	00000110 configure_cache
60001e80 g       .text.code	00000000 __preinit_array_start
000012e8 g     F .text.itcm	0000001c usb_receive
00003190  w    F .text.itcm	00000004 std::string::_Rep::_M_destroy(std::allocator<char> const&)
0000d394 g     F .text.itcm	00000060 __lo0bits
00003084 g     F .text.itcm	00000080 std::logic_error::logic_error(char const*)
00016800 g       *ABS*	00000000 _flashimagelen
00002168 g     F .text.itcm	0000000a __aeabi_atexit
00002e38 g     F .text.itcm	0000002c std::type_info::operator==(std::type_info const&) const
00002074 g     F .text.itcm	00000024 rtc_get
20003030 g     O .bss	0000000c raw_bits
0000ed60 g     F .text.itcm	00000078 frexp
70000000 g       .bss.extram	00000000 _extram_start
00001bf0 g     F .text.itcm	00000004 pendablesrvreq_isr
2000216c g     O .data	0000016c __global_locale
200006ac g     O .data	00000020 typeinfo name for __cxxabiv1::__forced_unwind
00000068  w    F .text.itcm	00000014 std::vector<int, std::allocator<int> >::~vector()
000017e0 g     F .text.itcm	000000e0 usb_serial_read
20002e80 g     O .bss	00000001 __lock___sfp_recursive_mutex
00000408 g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
00000068  w    F .text.itcm	00000014 std::vector<int, std::allocator<int> >::~vector()
0000122c g     F .text.itcm	00000064 usb_config_tx
0000098c  w    F .text.itcm	00000006 _close
0000c4cc g     F .text.itcm	00000010 free
00002e64 g     F .text.itcm	0000010c __gnu_cxx::__verbose_terminate_handler()
0000d2b0 g     F .text.itcm	000000a4 __multadd
000031e8 g     F .text.itcm	0000001c __cxxabiv1::__class_type_info::~__class_type_info()
0000d29c g     F .text.itcm	00000012 _Bfree
20002748  w    O .data	00000016 usb_string_serial_number


